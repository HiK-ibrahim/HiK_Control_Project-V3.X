

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sat Sep 16 09:27:07 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     8                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    39                           	psect	maintext_split_1,global,class=CODE,split=1,delta=2
    40                           	psect	maintext_split_2,global,class=CODE,split=1,delta=2
    41                           	dabs	1,0x7E,2
    42     0000                     
    43                           ; Generated 22/03/2023 GMT
    44                           ; 
    45                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution. Publication is not required when
    59                           ;        this file is used in an embedded application.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F877A Definitions
    75                           ; 
    76                           ; SFR Addresses
    77     0000                     	;# 
    78     0001                     	;# 
    79     0002                     	;# 
    80     0003                     	;# 
    81     0004                     	;# 
    82     0005                     	;# 
    83     0006                     	;# 
    84     0007                     	;# 
    85     0008                     	;# 
    86     0009                     	;# 
    87     000A                     	;# 
    88     000B                     	;# 
    89     000C                     	;# 
    90     000D                     	;# 
    91     000E                     	;# 
    92     000E                     	;# 
    93     000F                     	;# 
    94     0010                     	;# 
    95     0011                     	;# 
    96     0012                     	;# 
    97     0013                     	;# 
    98     0014                     	;# 
    99     0015                     	;# 
   100     0015                     	;# 
   101     0016                     	;# 
   102     0017                     	;# 
   103     0018                     	;# 
   104     0019                     	;# 
   105     001A                     	;# 
   106     001B                     	;# 
   107     001B                     	;# 
   108     001C                     	;# 
   109     001D                     	;# 
   110     001E                     	;# 
   111     001F                     	;# 
   112     0081                     	;# 
   113     0085                     	;# 
   114     0086                     	;# 
   115     0087                     	;# 
   116     0088                     	;# 
   117     0089                     	;# 
   118     008C                     	;# 
   119     008D                     	;# 
   120     008E                     	;# 
   121     0091                     	;# 
   122     0092                     	;# 
   123     0093                     	;# 
   124     0094                     	;# 
   125     0098                     	;# 
   126     0099                     	;# 
   127     009C                     	;# 
   128     009D                     	;# 
   129     009E                     	;# 
   130     009F                     	;# 
   131     010C                     	;# 
   132     010D                     	;# 
   133     010E                     	;# 
   134     010F                     	;# 
   135     018C                     	;# 
   136     018D                     	;# 
   137     0000                     	;# 
   138     0001                     	;# 
   139     0002                     	;# 
   140     0003                     	;# 
   141     0004                     	;# 
   142     0005                     	;# 
   143     0006                     	;# 
   144     0007                     	;# 
   145     0008                     	;# 
   146     0009                     	;# 
   147     000A                     	;# 
   148     000B                     	;# 
   149     000C                     	;# 
   150     000D                     	;# 
   151     000E                     	;# 
   152     000E                     	;# 
   153     000F                     	;# 
   154     0010                     	;# 
   155     0011                     	;# 
   156     0012                     	;# 
   157     0013                     	;# 
   158     0014                     	;# 
   159     0015                     	;# 
   160     0015                     	;# 
   161     0016                     	;# 
   162     0017                     	;# 
   163     0018                     	;# 
   164     0019                     	;# 
   165     001A                     	;# 
   166     001B                     	;# 
   167     001B                     	;# 
   168     001C                     	;# 
   169     001D                     	;# 
   170     001E                     	;# 
   171     001F                     	;# 
   172     0081                     	;# 
   173     0085                     	;# 
   174     0086                     	;# 
   175     0087                     	;# 
   176     0088                     	;# 
   177     0089                     	;# 
   178     008C                     	;# 
   179     008D                     	;# 
   180     008E                     	;# 
   181     0091                     	;# 
   182     0092                     	;# 
   183     0093                     	;# 
   184     0094                     	;# 
   185     0098                     	;# 
   186     0099                     	;# 
   187     009C                     	;# 
   188     009D                     	;# 
   189     009E                     	;# 
   190     009F                     	;# 
   191     010C                     	;# 
   192     010D                     	;# 
   193     010E                     	;# 
   194     010F                     	;# 
   195     018C                     	;# 
   196     018D                     	;# 
   197     0000                     	;# 
   198     0001                     	;# 
   199     0002                     	;# 
   200     0003                     	;# 
   201     0004                     	;# 
   202     0005                     	;# 
   203     0006                     	;# 
   204     0007                     	;# 
   205     0008                     	;# 
   206     0009                     	;# 
   207     000A                     	;# 
   208     000B                     	;# 
   209     000C                     	;# 
   210     000D                     	;# 
   211     000E                     	;# 
   212     000E                     	;# 
   213     000F                     	;# 
   214     0010                     	;# 
   215     0011                     	;# 
   216     0012                     	;# 
   217     0013                     	;# 
   218     0014                     	;# 
   219     0015                     	;# 
   220     0015                     	;# 
   221     0016                     	;# 
   222     0017                     	;# 
   223     0018                     	;# 
   224     0019                     	;# 
   225     001A                     	;# 
   226     001B                     	;# 
   227     001B                     	;# 
   228     001C                     	;# 
   229     001D                     	;# 
   230     001E                     	;# 
   231     001F                     	;# 
   232     0081                     	;# 
   233     0085                     	;# 
   234     0086                     	;# 
   235     0087                     	;# 
   236     0088                     	;# 
   237     0089                     	;# 
   238     008C                     	;# 
   239     008D                     	;# 
   240     008E                     	;# 
   241     0091                     	;# 
   242     0092                     	;# 
   243     0093                     	;# 
   244     0094                     	;# 
   245     0098                     	;# 
   246     0099                     	;# 
   247     009C                     	;# 
   248     009D                     	;# 
   249     009E                     	;# 
   250     009F                     	;# 
   251     010C                     	;# 
   252     010D                     	;# 
   253     010E                     	;# 
   254     010F                     	;# 
   255     018C                     	;# 
   256     018D                     	;# 
   257                           
   258                           	psect	stringtext
   259     1800                     __pstringtext:
   260     1800                     stringtab:
   261     1800                     __stringtab:
   262                           
   263                           ;	String table - string pointers are 2 bytes each
   264     1800  1BFF               	btfsc	btemp+1,7
   265     1801  280A               	ljmp	stringcode
   266     1802  1383               	bcf	3,7
   267     1803  187F               	btfsc	btemp+1,0
   268     1804  1783               	bsf	3,7
   269     1805  0800               	movf	0,w
   270     1806  0A84               	incf	4,f
   271     1807  1903               	skipnz
   272     1808  0AFF               	incf	btemp+1,f
   273     1809  0008               	return
   274     180A                     stringcode:
   275     180A  087F               	movf	btemp+1,w
   276     180B  397F               	andlw	127
   277     180C  008A               	movwf	10
   278     180D  0804               	movf	4,w
   279     180E  0A84               	incf	4,f
   280     180F  1903               	skipnz
   281     1810  0AFF               	incf	btemp+1,f
   282     1811  0082               	movwf	2
   283     1812                     __stringbase:
   284     1812                     __end_of__stringtab:
   285     1812                     _dpowers:
   286     1812  3401               	retlw	1
   287     1813  3400               	retlw	0
   288     1814  340A               	retlw	10
   289     1815  3400               	retlw	0
   290     1816  3464               	retlw	100
   291     1817  3400               	retlw	0
   292     1818  34E8               	retlw	232
   293     1819  3403               	retlw	3
   294     181A  3410               	retlw	16
   295     181B  3427               	retlw	39
   296     181C                     __end_of_dpowers:
   297     0019                     _TXREG	set	25
   298     0018                     _RCSTA	set	24
   299     001E                     _ADRESH	set	30
   300     001F                     _ADCON0bits	set	31
   301     000B                     _INTCONbits	set	11
   302     0001                     _TMR0	set	1
   303     0038                     _RC0	set	56
   304     003A                     _RC2	set	58
   305     0049                     _RE1	set	73
   306     004A                     _RE2	set	74
   307     0048                     _RE0	set	72
   308     0039                     _RC1	set	57
   309     0040                     _RD0	set	64
   310     003B                     _RC3	set	59
   311     002C                     _RA4	set	44
   312     005A                     _T0IF	set	90
   313     005F                     _GIE	set	95
   314     0034                     _RB4	set	52
   315     0035                     _RB5	set	53
   316     0030                     _RB0	set	48
   317     0031                     _RB1	set	49
   318     0032                     _RB2	set	50
   319     0033                     _RB3	set	51
   320     0098                     _TXSTA	set	152
   321     009E                     _ADRESL	set	158
   322     009F                     _ADCON1bits	set	159
   323     0099                     _SPBRG	set	153
   324     0081                     _OPTION_REGbits	set	129
   325     0086                     _TRISBbits	set	134
   326     04C1                     _TRMT	set	1217
   327     043F                     _TRISC7	set	1087
   328     043E                     _TRISC6	set	1086
   329     0429                     _TRISA1	set	1065
   330     0440                     _TRISD0	set	1088
   331     043B                     _TRISC3	set	1083
   332     0438                     _TRISC0	set	1080
   333     044A                     _TRISE2	set	1098
   334     043A                     _TRISC2	set	1082
   335     0439                     _TRISC1	set	1081
   336     0449                     _TRISE1	set	1097
   337     0448                     _TRISE0	set	1096
   338     042C                     _TRISA4	set	1068
   339     010C                     _EEDATA	set	268
   340     010D                     _EEADR	set	269
   341     018D                     _EECON2	set	397
   342     0C60                     _RD	set	3168
   343     0C61                     _WR	set	3169
   344     0C62                     _WREN	set	3170
   345     181C                     STR_37:
   346     181C  3420               	retlw	32	;' '
   347     181D  3420               	retlw	32	;' '
   348     181E  3420               	retlw	32	;' '
   349     181F  3449               	retlw	73	;'I'
   350     1820  344C               	retlw	76	;'L'
   351     1821  3445               	retlw	69	;'E'
   352     1822  3452               	retlw	82	;'R'
   353     1823  344C               	retlw	76	;'L'
   354     1824  3445               	retlw	69	;'E'
   355     1825  344D               	retlw	77	;'M'
   356     1826  3445               	retlw	69	;'E'
   357     1827  3420               	retlw	32	;' '
   358     1828  3448               	retlw	72	;'H'
   359     1829  3441               	retlw	65	;'A'
   360     182A  3454               	retlw	84	;'T'
   361     182B  3441               	retlw	65	;'A'
   362     182C  3453               	retlw	83	;'S'
   363     182D  3449               	retlw	73	;'I'
   364     182E  3420               	retlw	32	;' '
   365     182F  3420               	retlw	32	;' '
   366     1830  3420               	retlw	32	;' '
   367     1831  3420               	retlw	32	;' '
   368     1832  3420               	retlw	32	;' '
   369     1833  3420               	retlw	32	;' '
   370     1834  3420               	retlw	32	;' '
   371     1835  3420               	retlw	32	;' '
   372     1836  3400               	retlw	0
   373     1837                     STR_36:
   374     1837  3420               	retlw	32	;' '
   375     1838  3420               	retlw	32	;' '
   376     1839  3420               	retlw	32	;' '
   377     183A  3446               	retlw	70	;'F'
   378     183B  3445               	retlw	69	;'E'
   379     183C  3445               	retlw	69	;'E'
   380     183D  3444               	retlw	68	;'D'
   381     183E  3420               	retlw	32	;' '
   382     183F  3452               	retlw	82	;'R'
   383     1840  3441               	retlw	65	;'A'
   384     1841  3454               	retlw	84	;'T'
   385     1842  3445               	retlw	69	;'E'
   386     1843  3420               	retlw	32	;' '
   387     1844  3445               	retlw	69	;'E'
   388     1845  3452               	retlw	82	;'R'
   389     1846  3452               	retlw	82	;'R'
   390     1847  344F               	retlw	79	;'O'
   391     1848  3452               	retlw	82	;'R'
   392     1849  3420               	retlw	32	;' '
   393     184A  3420               	retlw	32	;' '
   394     184B  3420               	retlw	32	;' '
   395     184C  3420               	retlw	32	;' '
   396     184D  3420               	retlw	32	;' '
   397     184E  3420               	retlw	32	;' '
   398     184F  3420               	retlw	32	;' '
   399     1850  3400               	retlw	0
   400     1851                     STR_41:
   401     1851  3420               	retlw	32	;' '
   402     1852  3420               	retlw	32	;' '
   403     1853  3420               	retlw	32	;' '
   404     1854  3444               	retlw	68	;'D'
   405     1855  344F               	retlw	79	;'O'
   406     1856  344E               	retlw	78	;'N'
   407     1857  344D               	retlw	77	;'M'
   408     1858  3445               	retlw	69	;'E'
   409     1859  3420               	retlw	32	;' '
   410     185A  3448               	retlw	72	;'H'
   411     185B  3441               	retlw	65	;'A'
   412     185C  3454               	retlw	84	;'T'
   413     185D  3441               	retlw	65	;'A'
   414     185E  3453               	retlw	83	;'S'
   415     185F  3449               	retlw	73	;'I'
   416     1860  3420               	retlw	32	;' '
   417     1861  3420               	retlw	32	;' '
   418     1862  3420               	retlw	32	;' '
   419     1863  3420               	retlw	32	;' '
   420     1864  3420               	retlw	32	;' '
   421     1865  3420               	retlw	32	;' '
   422     1866  3420               	retlw	32	;' '
   423     1867  3420               	retlw	32	;' '
   424     1868  3400               	retlw	0
   425     1869                     STR_40:
   426     1869  3420               	retlw	32	;' '
   427     186A  3420               	retlw	32	;' '
   428     186B  3420               	retlw	32	;' '
   429     186C  3452               	retlw	82	;'R'
   430     186D  344F               	retlw	79	;'O'
   431     186E  3454               	retlw	84	;'T'
   432     186F  3441               	retlw	65	;'A'
   433     1870  3454               	retlw	84	;'T'
   434     1871  3449               	retlw	73	;'I'
   435     1872  344F               	retlw	79	;'O'
   436     1873  344E               	retlw	78	;'N'
   437     1874  3420               	retlw	32	;' '
   438     1875  3445               	retlw	69	;'E'
   439     1876  3452               	retlw	82	;'R'
   440     1877  3452               	retlw	82	;'R'
   441     1878  344F               	retlw	79	;'O'
   442     1879  3452               	retlw	82	;'R'
   443     187A  3420               	retlw	32	;' '
   444     187B  3420               	retlw	32	;' '
   445     187C  3420               	retlw	32	;' '
   446     187D  3420               	retlw	32	;' '
   447     187E  3420               	retlw	32	;' '
   448     187F  3420               	retlw	32	;' '
   449     1880  3400               	retlw	0
   450     1881                     STR_4:
   451     1881  3459               	retlw	89	;'Y'
   452     1882  3441               	retlw	65	;'A'
   453     1883  3447               	retlw	71	;'G'
   454     1884  3420               	retlw	32	;' '
   455     1885  3442               	retlw	66	;'B'
   456     1886  3441               	retlw	65	;'A'
   457     1887  344B               	retlw	75	;'K'
   458     1888  3449               	retlw	73	;'I'
   459     1889  344D               	retlw	77	;'M'
   460     188A  3449               	retlw	73	;'I'
   461     188B  3420               	retlw	32	;' '
   462     188C  3459               	retlw	89	;'Y'
   463     188D  3441               	retlw	65	;'A'
   464     188E  3450               	retlw	80	;'P'
   465     188F  3449               	retlw	73	;'I'
   466     1890  344E               	retlw	78	;'N'
   467     1891  3449               	retlw	73	;'I'
   468     1892  345A               	retlw	90	;'Z'
   469     1893  3400               	retlw	0
   470     1894                     STR_1:
   471     1894  3455               	retlw	85	;'U'
   472     1895  345A               	retlw	90	;'Z'
   473     1896  344D               	retlw	77	;'M'
   474     1897  3441               	retlw	65	;'A'
   475     1898  344E               	retlw	78	;'N'
   476     1899  344C               	retlw	76	;'L'
   477     189A  3441               	retlw	65	;'A'
   478     189B  3452               	retlw	82	;'R'
   479     189C  3420               	retlw	32	;' '
   480     189D  344D               	retlw	77	;'M'
   481     189E  3441               	retlw	65	;'A'
   482     189F  344B               	retlw	75	;'K'
   483     18A0  3449               	retlw	73	;'I'
   484     18A1  344E               	retlw	78	;'N'
   485     18A2  3441               	retlw	65	;'A'
   486     18A3  3400               	retlw	0
   487     18A4                     STR_2:
   488     18A4  3477               	retlw	119	;'w'
   489     18A5  3477               	retlw	119	;'w'
   490     18A6  3477               	retlw	119	;'w'
   491     18A7  342E               	retlw	46	;'.'
   492     18A8  3462               	retlw	98	;'b'
   493     18A9  346F               	retlw	111	;'o'
   494     18AA  3472               	retlw	114	;'r'
   495     18AB  3476               	retlw	118	;'v'
   496     18AC  3465               	retlw	101	;'e'
   497     18AD  346B               	retlw	107	;'k'
   498     18AE  342E               	retlw	46	;'.'
   499     18AF  3463               	retlw	99	;'c'
   500     18B0  346F               	retlw	111	;'o'
   501     18B1  346D               	retlw	109	;'m'
   502     18B2  3400               	retlw	0
   503     18B3                     STR_34:
   504     18B3  3420               	retlw	32	;' '
   505     18B4  3453               	retlw	83	;'S'
   506     18B5  3454               	retlw	84	;'T'
   507     18B6  344F               	retlw	79	;'O'
   508     18B7  3450               	retlw	80	;'P'
   509     18B8  3420               	retlw	32	;' '
   510     18B9  3420               	retlw	32	;' '
   511     18BA  3420               	retlw	32	;' '
   512     18BB  3420               	retlw	32	;' '
   513     18BC  3420               	retlw	32	;' '
   514     18BD  3420               	retlw	32	;' '
   515     18BE  3420               	retlw	32	;' '
   516     18BF  3420               	retlw	32	;' '
   517     18C0  3400               	retlw	0
   518     18C1                     STR_5:
   519     18C1  344F               	retlw	79	;'O'
   520     18C2  3449               	retlw	73	;'I'
   521     18C3  344C               	retlw	76	;'L'
   522     18C4  3420               	retlw	32	;' '
   523     18C5  3454               	retlw	84	;'T'
   524     18C6  3448               	retlw	72	;'H'
   525     18C7  3445               	retlw	69	;'E'
   526     18C8  3420               	retlw	32	;' '
   527     18C9  3447               	retlw	71	;'G'
   528     18CA  3445               	retlw	69	;'E'
   529     18CB  3441               	retlw	65	;'A'
   530     18CC  3452               	retlw	82	;'R'
   531     18CD  3453               	retlw	83	;'S'
   532     18CE  3400               	retlw	0
   533     18CF                     STR_32:
   534     18CF  3420               	retlw	32	;' '
   535     18D0  3452               	retlw	82	;'R'
   536     18D1  3445               	retlw	69	;'E'
   537     18D2  3457               	retlw	87	;'W'
   538     18D3  3420               	retlw	32	;' '
   539     18D4  3420               	retlw	32	;' '
   540     18D5  3420               	retlw	32	;' '
   541     18D6  3420               	retlw	32	;' '
   542     18D7  3420               	retlw	32	;' '
   543     18D8  3420               	retlw	32	;' '
   544     18D9  3420               	retlw	32	;' '
   545     18DA  3420               	retlw	32	;' '
   546     18DB  3400               	retlw	0
   547     18DC                     STR_26:
   548     18DC  3420               	retlw	32	;' '
   549     18DD  3446               	retlw	70	;'F'
   550     18DE  3457               	retlw	87	;'W'
   551     18DF  3444               	retlw	68	;'D'
   552     18E0  3420               	retlw	32	;' '
   553     18E1  3420               	retlw	32	;' '
   554     18E2  3420               	retlw	32	;' '
   555     18E3  3420               	retlw	32	;' '
   556     18E4  3420               	retlw	32	;' '
   557     18E5  3420               	retlw	32	;' '
   558     18E6  3400               	retlw	0
   559     18E7                     STR_16:
   560     18E7  3425               	retlw	37	;'%'
   561     18E8  3435               	retlw	53	;'5'
   562     18E9  3475               	retlw	117	;'u'
   563     18EA  3468               	retlw	104	;'h'
   564     18EB  3420               	retlw	32	;' '
   565     18EC  3425               	retlw	37	;'%'
   566     18ED  3430               	retlw	48	;'0'
   567     18EE  3432               	retlw	50	;'2'
   568     18EF  3475               	retlw	117	;'u'
   569     18F0  346D               	retlw	109	;'m'
   570     18F1  3400               	retlw	0
   571     18F2                     STR_18:
   572     18F2  3446               	retlw	70	;'F'
   573     18F3  3465               	retlw	101	;'e'
   574     18F4  3465               	retlw	101	;'e'
   575     18F5  3464               	retlw	100	;'d'
   576     18F6  3452               	retlw	82	;'R'
   577     18F7  3461               	retlw	97	;'a'
   578     18F8  3474               	retlw	116	;'t'
   579     18F9  3465               	retlw	101	;'e'
   580     18FA  343A               	retlw	58	;':'
   581     18FB  3400               	retlw	0
   582     18FC                     STR_24:
   583     18FC  3420               	retlw	32	;' '
   584     18FD  3446               	retlw	70	;'F'
   585     18FE  3457               	retlw	87	;'W'
   586     18FF  3444               	retlw	68	;'D'
   587     1900  3420               	retlw	32	;' '
   588     1901  3431               	retlw	49	;'1'
   589     1902  342E               	retlw	46	;'.'
   590     1903  3436               	retlw	54	;'6'
   591     1904  344B               	retlw	75	;'K'
   592     1905  3400               	retlw	0
   593     1906                     STR_30:
   594     1906  3420               	retlw	32	;' '
   595     1907  3452               	retlw	82	;'R'
   596     1908  3445               	retlw	69	;'E'
   597     1909  3457               	retlw	87	;'W'
   598     190A  3420               	retlw	32	;' '
   599     190B  3431               	retlw	49	;'1'
   600     190C  342E               	retlw	46	;'.'
   601     190D  3436               	retlw	54	;'6'
   602     190E  344B               	retlw	75	;'K'
   603     190F  3400               	retlw	0
   604     1910                     STR_21:
   605     1910  3425               	retlw	37	;'%'
   606     1911  3475               	retlw	117	;'u'
   607     1912  3425               	retlw	37	;'%'
   608     1913  3475               	retlw	117	;'u'
   609     1914  3425               	retlw	37	;'%'
   610     1915  3475               	retlw	117	;'u'
   611     1916  342E               	retlw	46	;'.'
   612     1917  3425               	retlw	37	;'%'
   613     1918  3475               	retlw	117	;'u'
   614     1919  3400               	retlw	0
   615     191A                     STR_22:
   616     191A  3420               	retlw	32	;' '
   617     191B  3446               	retlw	70	;'F'
   618     191C  3457               	retlw	87	;'W'
   619     191D  3444               	retlw	68	;'D'
   620     191E  3420               	retlw	32	;' '
   621     191F  344C               	retlw	76	;'L'
   622     1920  344D               	retlw	77	;'M'
   623     1921  3454               	retlw	84	;'T'
   624     1922  3400               	retlw	0
   625     1923                     STR_28:
   626     1923  3420               	retlw	32	;' '
   627     1924  3452               	retlw	82	;'R'
   628     1925  3445               	retlw	69	;'E'
   629     1926  3457               	retlw	87	;'W'
   630     1927  3420               	retlw	32	;' '
   631     1928  344C               	retlw	76	;'L'
   632     1929  344D               	retlw	77	;'M'
   633     192A  3454               	retlw	84	;'T'
   634     192B  3400               	retlw	0
   635     192C                     STR_25:
   636     192C  3473               	retlw	115	;'s'
   637     192D  3425               	retlw	37	;'%'
   638     192E  3464               	retlw	100	;'d'
   639     192F  340D               	retlw	13
   640     1930  340A               	retlw	10
   641     1931  3400               	retlw	0
   642     1932                     STR_19:
   643     1932  3425               	retlw	37	;'%'
   644     1933  3430               	retlw	48	;'0'
   645     1934  3430               	retlw	48	;'0'
   646     1935  3433               	retlw	51	;'3'
   647     1936  3475               	retlw	117	;'u'
   648     1937  3400               	retlw	0
   649     1938                     STR_23:
   650     1938  3473               	retlw	115	;'s'
   651     1939  3430               	retlw	48	;'0'
   652     193A  340D               	retlw	13
   653     193B  340A               	retlw	10
   654     193C  3400               	retlw	0
   655     193D                     STR_20:
   656     193D  3452               	retlw	82	;'R'
   657     193E  3450               	retlw	80	;'P'
   658     193F  344D               	retlw	77	;'M'
   659     1940  343A               	retlw	58	;':'
   660     1941  3400               	retlw	0
   661     1942                     STR_3:
   662     1942  3456               	retlw	86	;'V'
   663     1943  3432               	retlw	50	;'2'
   664     1944  3400               	retlw	0
   665     1938                     
   666                           	psect	cinit
   667     0011                     start_initialization:	
   668                           ; #config settings
   669                           
   670     0011                     __initialization:
   671                           
   672                           ; Clear objects allocated to COMMON
   673     0011  01F6               	clrf	__pbssCOMMON& (0+127)
   674     0012  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   675                           
   676                           ; Clear objects allocated to BANK3
   677     0013  1683               	bsf	3,5	;RP0=1, select bank3
   678     0014  1703               	bsf	3,6	;RP1=1, select bank3
   679     0015  019E               	clrf	__pbssBANK3& (0+127)
   680     0016  019F               	clrf	(__pbssBANK3+1)& (0+127)
   681     0017  01A0               	clrf	(__pbssBANK3+2)& (0+127)
   682     0018  01A1               	clrf	(__pbssBANK3+3)& (0+127)
   683     0019  01A2               	clrf	(__pbssBANK3+4)& (0+127)
   684     001A  01A3               	clrf	(__pbssBANK3+5)& (0+127)
   685     001B                     end_of_initialization:	
   686                           ;End of C runtime variable initialization code
   687                           
   688     001B                     __end_of__initialization:
   689     001B  0183               	clrf	3
   690     001C  120A  118A  2EDF   	ljmp	_main	;jump to C main() function
   691                           
   692                           	psect	bssCOMMON
   693     0076                     __pbssCOMMON:
   694     0076                     _kesmeSayaci:
   695     0076                     	ds	2
   696                           
   697                           	psect	bssBANK3
   698     019E                     __pbssBANK3:
   699     019E                     _currentTime:
   700     019E                     	ds	6
   701                           
   702                           	psect	cstackBANK3
   703     0190                     __pcstackBANK3:
   704     0190                     main@i_347:
   705                           
   706                           ; 2 bytes @ 0x0
   707     0190                     	ds	2
   708     0192                     main@i_350:
   709                           
   710                           ; 2 bytes @ 0x2
   711     0192                     	ds	2
   712     0194                     main@i_353:
   713                           
   714                           ; 2 bytes @ 0x4
   715     0194                     	ds	2
   716     0196                     main@binler:
   717                           
   718                           ; 2 bytes @ 0x6
   719     0196                     	ds	2
   720     0198                     main@integerPart:
   721                           
   722                           ; 2 bytes @ 0x8
   723     0198                     	ds	2
   724     019A                     main@displayValue_371:
   725                           
   726                           ; 2 bytes @ 0xA
   727     019A                     	ds	2
   728     019C                     main@FWDartan:
   729                           
   730                           ; 2 bytes @ 0xC
   731     019C                     	ds	2
   732                           
   733                           	psect	cstackBANK1
   734     00A0                     __pcstackBANK1:
   735     00A0                     main@combinedText_395:
   736                           
   737                           ; 20 bytes @ 0x0
   738     00A0                     	ds	20
   739     00B4                     main@lcdText:
   740                           
   741                           ; 9 bytes @ 0x14
   742     00B4                     	ds	9
   743     00BD                     main@uartMessage:
   744                           
   745                           ; 8 bytes @ 0x1D
   746     00BD                     	ds	8
   747     00C5                     main@uartMessage_391:
   748                           
   749                           ; 8 bytes @ 0x25
   750     00C5                     	ds	8
   751     00CD                     main@gostermeliklcd:
   752                           
   753                           ; 4 bytes @ 0x2D
   754     00CD                     	ds	4
   755     00D1                     main@rpmString:
   756                           
   757                           ; 5 bytes @ 0x31
   758     00D1                     	ds	5
   759     00D6                     main@adcValue2:
   760                           
   761                           ; 2 bytes @ 0x36
   762     00D6                     	ds	2
   763     00D8                     main@adcValue3:
   764                           
   765                           ; 2 bytes @ 0x38
   766     00D8                     	ds	2
   767     00DA                     main@onlar:
   768                           
   769                           ; 2 bytes @ 0x3A
   770     00DA                     	ds	2
   771     00DC                     main@birler:
   772                           
   773                           ; 2 bytes @ 0x3C
   774     00DC                     	ds	2
   775     00DE                     main@negativeDisplayValue:
   776                           
   777                           ; 2 bytes @ 0x3E
   778     00DE                     	ds	2
   779     00E0                     main@adcString1:
   780                           
   781                           ; 4 bytes @ 0x40
   782     00E0                     	ds	4
   783     00E4                     main@adcValue1:
   784                           
   785                           ; 4 bytes @ 0x44
   786     00E4                     	ds	4
   787     00E8                     main@yuzler:
   788                           
   789                           ; 2 bytes @ 0x48
   790     00E8                     	ds	2
   791     00EA                     main@i:
   792                           
   793                           ; 2 bytes @ 0x4A
   794     00EA                     	ds	2
   795     00EC                     main@i_341:
   796                           
   797                           ; 2 bytes @ 0x4C
   798     00EC                     	ds	2
   799     00EE                     main@i_344:
   800                           
   801                           ; 2 bytes @ 0x4E
   802     00EE                     	ds	2
   803                           
   804                           	psect	cstackCOMMON
   805     0070                     __pcstackCOMMON:
   806     0070                     ?_isdigit:
   807     0070                     ?_UART_Initialize:	
   808                           ; 1 bit 
   809                           
   810     0070                     ?_Lcd_Port:	
   811                           ; 1 bytes @ 0x0
   812                           
   813     0070                     ?_Lcd_Cmd:	
   814                           ; 1 bytes @ 0x0
   815                           
   816     0070                     ?_Lcd_Clear:	
   817                           ; 1 bytes @ 0x0
   818                           
   819     0070                     ?_Lcd_Init:	
   820                           ; 1 bytes @ 0x0
   821                           
   822     0070                     ?_Lcd_Write_Char:	
   823                           ; 1 bytes @ 0x0
   824                           
   825     0070                     ?_incrementTime:	
   826                           ; 1 bytes @ 0x0
   827                           
   828     0070                     ??_incrementTime:	
   829                           ; 1 bytes @ 0x0
   830                           
   831     0070                     ?_timer_isr:	
   832                           ; 1 bytes @ 0x0
   833                           
   834     0070                     ?_UART_Write:	
   835                           ; 1 bytes @ 0x0
   836                           
   837     0070                     ?_main:	
   838                           ; 1 bytes @ 0x0
   839                           
   840                           
   841                           ; 2 bytes @ 0x0
   842     0070                     	ds	2
   843     0072                     incrementTime@time:
   844                           
   845                           ; 1 bytes @ 0x2
   846     0072                     	ds	1
   847     0073                     ??_timer_isr:
   848                           
   849                           ; 1 bytes @ 0x3
   850     0073                     	ds	3
   851     0076                     ??_UART_Initialize:
   852     0076                     ??_isdigit:	
   853                           ; 1 bytes @ 0x6
   854                           
   855     0076                     ??_Lcd_Port:	
   856                           ; 1 bytes @ 0x6
   857                           
   858     0076                     ??_Lcd_Clear:	
   859                           ; 1 bytes @ 0x6
   860                           
   861     0076                     ??_writeEEPROM:	
   862                           ; 1 bytes @ 0x6
   863                           
   864     0076                     ??_UART_Write:	
   865                           ; 1 bytes @ 0x6
   866                           
   867     0076                     ??___wmul:	
   868                           ; 1 bytes @ 0x6
   869                           
   870     0076                     ??___lwdiv:	
   871                           ; 1 bytes @ 0x6
   872                           
   873     0076                     ??___lwmod:	
   874                           ; 1 bytes @ 0x6
   875                           
   876                           
   877                           	psect	cstackBANK0
   878     0020                     __pcstackBANK0:	
   879                           ; 1 bytes @ 0x6
   880                           
   881     0020                     ?_writeEEPROM:
   882     0020                     ?__Umul8_16:	
   883                           ; 1 bytes @ 0x0
   884                           
   885     0020                     ?_readEEPROM:	
   886                           ; 2 bytes @ 0x0
   887                           
   888     0020                     ?___wmul:	
   889                           ; 2 bytes @ 0x0
   890                           
   891     0020                     ?___fltol:	
   892                           ; 2 bytes @ 0x0
   893                           
   894     0020                     ?___fldiv:	
   895                           ; 4 bytes @ 0x0
   896                           
   897     0020                     ?___xxtofl:	
   898                           ; 4 bytes @ 0x0
   899                           
   900     0020                     Lcd_Port@a:	
   901                           ; 4 bytes @ 0x0
   902                           
   903     0020                     UART_Write@data:	
   904                           ; 1 bytes @ 0x0
   905                           
   906     0020                     __Umul8_16@multiplicand:	
   907                           ; 1 bytes @ 0x0
   908                           
   909     0020                     _isdigit$870:	
   910                           ; 1 bytes @ 0x0
   911                           
   912     0020                     writeEEPROM@address:	
   913                           ; 1 bytes @ 0x0
   914                           
   915     0020                     readEEPROM@address:	
   916                           ; 2 bytes @ 0x0
   917                           
   918     0020                     ___wmul@multiplier:	
   919                           ; 2 bytes @ 0x0
   920                           
   921     0020                     ___fltol@f1:	
   922                           ; 2 bytes @ 0x0
   923                           
   924     0020                     ___fldiv@a:	
   925                           ; 4 bytes @ 0x0
   926                           
   927     0020                     ___xxtofl@val:	
   928                           ; 4 bytes @ 0x0
   929                           
   930                           
   931                           ; 4 bytes @ 0x0
   932     0020                     	ds	1
   933     0021                     ?_UART_Write_Text:
   934     0021                     ??_Lcd_Cmd:	
   935                           ; 1 bytes @ 0x1
   936                           
   937     0021                     ??_Lcd_Write_Char:	
   938                           ; 1 bytes @ 0x1
   939                           
   940     0021                     isdigit@c:	
   941                           ; 1 bytes @ 0x1
   942                           
   943     0021                     UART_Write_Text@text:	
   944                           ; 1 bytes @ 0x1
   945                           
   946                           
   947                           ; 2 bytes @ 0x1
   948     0021                     	ds	1
   949     0022                     ??__Umul8_16:
   950     0022                     ??_readEEPROM:	
   951                           ; 1 bytes @ 0x2
   952                           
   953     0022                     Lcd_Write_Char@temp:	
   954                           ; 1 bytes @ 0x2
   955                           
   956     0022                     writeEEPROM@data:	
   957                           ; 1 bytes @ 0x2
   958                           
   959     0022                     ___wmul@multiplicand:	
   960                           ; 2 bytes @ 0x2
   961                           
   962                           
   963                           ; 2 bytes @ 0x2
   964     0022                     	ds	1
   965     0023                     ??_UART_Write_Text:
   966     0023                     Lcd_Cmd@a:	
   967                           ; 1 bytes @ 0x3
   968                           
   969     0023                     Lcd_Write_Char@y:	
   970                           ; 1 bytes @ 0x3
   971                           
   972                           
   973                           ; 1 bytes @ 0x3
   974     0023                     	ds	1
   975     0024                     ?_Lcd_Set_Cursor:
   976     0024                     ??_Lcd_Init:	
   977                           ; 1 bytes @ 0x4
   978                           
   979     0024                     ??___fltol:	
   980                           ; 1 bytes @ 0x4
   981                           
   982     0024                     ??___xxtofl:	
   983                           ; 1 bytes @ 0x4
   984                           
   985     0024                     Lcd_Set_Cursor@b:	
   986                           ; 1 bytes @ 0x4
   987                           
   988     0024                     Lcd_Write_Char@a:	
   989                           ; 1 bytes @ 0x4
   990                           
   991     0024                     ___wmul@product:	
   992                           ; 1 bytes @ 0x4
   993                           
   994     0024                     __Umul8_16@product:	
   995                           ; 2 bytes @ 0x4
   996                           
   997     0024                     ___fldiv@b:	
   998                           ; 2 bytes @ 0x4
   999                           
  1000                           
  1001                           ; 4 bytes @ 0x4
  1002     0024                     	ds	1
  1003     0025                     ??_Lcd_Set_Cursor:
  1004     0025                     ?_Lcd_Write_String:	
  1005                           ; 1 bytes @ 0x5
  1006                           
  1007     0025                     Lcd_Write_String@a:	
  1008                           ; 1 bytes @ 0x5
  1009                           
  1010                           
  1011                           ; 2 bytes @ 0x5
  1012     0025                     	ds	1
  1013     0026                     ?___lwdiv:
  1014     0026                     Lcd_Set_Cursor@a:	
  1015                           ; 2 bytes @ 0x6
  1016                           
  1017     0026                     UART_Write_Text@i:	
  1018                           ; 1 bytes @ 0x6
  1019                           
  1020     0026                     ___lwdiv@divisor:	
  1021                           ; 2 bytes @ 0x6
  1022                           
  1023     0026                     __Umul8_16@word_mpld:	
  1024                           ; 2 bytes @ 0x6
  1025                           
  1026                           
  1027                           ; 2 bytes @ 0x6
  1028     0026                     	ds	1
  1029     0027                     ??_Lcd_Write_String:
  1030     0027                     Lcd_Set_Cursor@z:	
  1031                           ; 1 bytes @ 0x7
  1032                           
  1033                           
  1034                           ; 1 bytes @ 0x7
  1035     0027                     	ds	1
  1036     0028                     ??___fldiv:
  1037     0028                     Lcd_Set_Cursor@y:	
  1038                           ; 1 bytes @ 0x8
  1039                           
  1040     0028                     ___fltol@sign1:	
  1041                           ; 1 bytes @ 0x8
  1042                           
  1043     0028                     __Umul8_16@multiplier:	
  1044                           ; 1 bytes @ 0x8
  1045                           
  1046     0028                     ___xxtofl@sign:	
  1047                           ; 1 bytes @ 0x8
  1048                           
  1049     0028                     ___lwdiv@dividend:	
  1050                           ; 1 bytes @ 0x8
  1051                           
  1052                           
  1053                           ; 2 bytes @ 0x8
  1054     0028                     	ds	1
  1055     0029                     Lcd_Set_Cursor@temp:
  1056     0029                     ___fltol@exp1:	
  1057                           ; 1 bytes @ 0x9
  1058                           
  1059     0029                     ___xxtofl@exp:	
  1060                           ; 1 bytes @ 0x9
  1061                           
  1062                           
  1063                           ; 1 bytes @ 0x9
  1064     0029                     	ds	1
  1065     002A                     Lcd_Write_String@i:
  1066     002A                     ___lwdiv@quotient:	
  1067                           ; 2 bytes @ 0xA
  1068                           
  1069     002A                     ___xxtofl@arg:	
  1070                           ; 2 bytes @ 0xA
  1071                           
  1072                           
  1073                           ; 4 bytes @ 0xA
  1074     002A                     	ds	2
  1075     002C                     ___lwdiv@counter:
  1076                           
  1077                           ; 1 bytes @ 0xC
  1078     002C                     	ds	1
  1079     002D                     ?___lwmod:
  1080     002D                     ___lwmod@divisor:	
  1081                           ; 2 bytes @ 0xD
  1082                           
  1083     002D                     ___fldiv@rem:	
  1084                           ; 2 bytes @ 0xD
  1085                           
  1086                           
  1087                           ; 4 bytes @ 0xD
  1088     002D                     	ds	2
  1089     002F                     ___lwmod@dividend:
  1090                           
  1091                           ; 2 bytes @ 0xF
  1092     002F                     	ds	2
  1093     0031                     ___lwmod@counter:
  1094     0031                     ___fldiv@sign:	
  1095                           ; 1 bytes @ 0x11
  1096                           
  1097                           
  1098                           ; 1 bytes @ 0x11
  1099     0031                     	ds	1
  1100     0032                     ?_sprintf:
  1101     0032                     sprintf@f:	
  1102                           ; 2 bytes @ 0x12
  1103                           
  1104     0032                     ___fldiv@new_exp:	
  1105                           ; 2 bytes @ 0x12
  1106                           
  1107                           
  1108                           ; 2 bytes @ 0x12
  1109     0032                     	ds	2
  1110     0034                     ___fldiv@grs:
  1111                           
  1112                           ; 4 bytes @ 0x14
  1113     0034                     	ds	4
  1114     0038                     ___fldiv@bexp:
  1115                           
  1116                           ; 1 bytes @ 0x18
  1117     0038                     	ds	1
  1118     0039                     ___fldiv@aexp:
  1119                           
  1120                           ; 1 bytes @ 0x19
  1121     0039                     	ds	1
  1122     003A                     ?___flmul:
  1123     003A                     ___flmul@b:	
  1124                           ; 4 bytes @ 0x1A
  1125                           
  1126                           
  1127                           ; 4 bytes @ 0x1A
  1128     003A                     	ds	2
  1129     003C                     ??_sprintf:
  1130                           
  1131                           ; 1 bytes @ 0x1C
  1132     003C                     	ds	2
  1133     003E                     ___flmul@a:
  1134                           
  1135                           ; 4 bytes @ 0x1E
  1136     003E                     	ds	2
  1137     0040                     sprintf@prec:
  1138                           
  1139                           ; 1 bytes @ 0x20
  1140     0040                     	ds	1
  1141     0041                     sprintf@ap:
  1142                           
  1143                           ; 1 bytes @ 0x21
  1144     0041                     	ds	1
  1145     0042                     ??___flmul:
  1146     0042                     sprintf@val:	
  1147                           ; 1 bytes @ 0x22
  1148                           
  1149                           
  1150                           ; 2 bytes @ 0x22
  1151     0042                     	ds	2
  1152     0044                     sprintf@flag:
  1153                           
  1154                           ; 1 bytes @ 0x24
  1155     0044                     	ds	1
  1156     0045                     sprintf@width:
  1157                           
  1158                           ; 2 bytes @ 0x25
  1159     0045                     	ds	2
  1160     0047                     sprintf@c:
  1161     0047                     ___flmul@sign:	
  1162                           ; 1 bytes @ 0x27
  1163                           
  1164                           
  1165                           ; 1 bytes @ 0x27
  1166     0047                     	ds	1
  1167     0048                     sprintf@sp:
  1168     0048                     ___flmul@aexp:	
  1169                           ; 1 bytes @ 0x28
  1170                           
  1171                           
  1172                           ; 1 bytes @ 0x28
  1173     0048                     	ds	1
  1174     0049                     ___flmul@grs:
  1175                           
  1176                           ; 4 bytes @ 0x29
  1177     0049                     	ds	4
  1178     004D                     ___flmul@bexp:
  1179                           
  1180                           ; 1 bytes @ 0x2D
  1181     004D                     	ds	1
  1182     004E                     ___flmul@prod:
  1183                           
  1184                           ; 4 bytes @ 0x2E
  1185     004E                     	ds	4
  1186     0052                     ___flmul@temp:
  1187                           
  1188                           ; 2 bytes @ 0x32
  1189     0052                     	ds	2
  1190     0054                     ??_main:
  1191                           
  1192                           ; 1 bytes @ 0x34
  1193     0054                     	ds	4
  1194     0058                     main@combinedText:
  1195                           
  1196                           ; 20 bytes @ 0x38
  1197     0058                     	ds	20
  1198     006C                     main@rpmValue:
  1199                           
  1200                           ; 2 bytes @ 0x4C
  1201     006C                     	ds	2
  1202                           
  1203                           	psect	maintext
  1204     06DF                     __pmaintext:	
  1205 ;;
  1206 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1207 ;;
  1208 ;; *************** function _main *****************
  1209 ;; Defined at:
  1210 ;;		line 87 in file "main.c"
  1211 ;; Parameters:    Size  Location     Type
  1212 ;;		None
  1213 ;; Auto vars:     Size  Location     Type
  1214 ;;  uartMessage     8   37[BANK1 ] unsigned char [8]
  1215 ;;  uartMessage     8   29[BANK1 ] unsigned char [8]
  1216 ;;  combinedText   20    0[BANK1 ] unsigned char [20]
  1217 ;;  negativeDisp    2   62[BANK1 ] int 
  1218 ;;  combinedText   20   56[BANK0 ] unsigned char [20]
  1219 ;;  i               2    4[BANK3 ] int 
  1220 ;;  i               2    2[BANK3 ] int 
  1221 ;;  i               2    0[BANK3 ] int 
  1222 ;;  i               2   78[BANK1 ] int 
  1223 ;;  i               2   76[BANK1 ] int 
  1224 ;;  i               2   74[BANK1 ] int 
  1225 ;;  rpmString       5   49[BANK1 ] unsigned char [5]
  1226 ;;  adcString1      4   64[BANK1 ] unsigned char [4]
  1227 ;;  gostermelikl    4   45[BANK1 ] float 
  1228 ;;  displayValue    2   10[BANK3 ] unsigned int 
  1229 ;;  integerPart     2    8[BANK3 ] unsigned int 
  1230 ;;  binler          2    6[BANK3 ] int 
  1231 ;;  yuzler          2   72[BANK1 ] int 
  1232 ;;  birler          2   60[BANK1 ] int 
  1233 ;;  onlar           2   58[BANK1 ] int 
  1234 ;;  rpmValue        2   76[BANK0 ] unsigned int 
  1235 ;;  lcdText         9   20[BANK1 ] unsigned char [9]
  1236 ;;  adcValue1       4   68[BANK1 ] float 
  1237 ;;  rpmtofloat      4    0        float 
  1238 ;;  FWDartan        2   12[BANK3 ] unsigned int 
  1239 ;;  adcValue3       2   56[BANK1 ] unsigned int 
  1240 ;;  adcValue2       2   54[BANK1 ] unsigned int 
  1241 ;;  value           2    0        unsigned int 
  1242 ;;  displayValue    2    0        unsigned int 
  1243 ;;  a               2    0        unsigned int 
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  2  160[None  ] int 
  1246 ;; Registers used:
  1247 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1248 ;; Tracked objects:
  1249 ;;		On entry : B00/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1253 ;;      Params:         0       0       0       0       0
  1254 ;;      Locals:         0      22      80      14       0
  1255 ;;      Temps:          0       4       0       0       0
  1256 ;;      Totals:         0      26      80      14       0
  1257 ;;Total ram usage:      120 bytes
  1258 ;; Hardware stack levels required when called: 5
  1259 ;; This function calls:
  1260 ;;		_Lcd_Clear
  1261 ;;		_Lcd_Init
  1262 ;;		_Lcd_Set_Cursor
  1263 ;;		_Lcd_Write_String
  1264 ;;		_UART_Initialize
  1265 ;;		_UART_Write_Text
  1266 ;;		___fldiv
  1267 ;;		___flmul
  1268 ;;		___fltol
  1269 ;;		___lwdiv
  1270 ;;		___lwmod
  1271 ;;		___wmul
  1272 ;;		___xxtofl
  1273 ;;		_readEEPROM
  1274 ;;		_sprintf
  1275 ;;		_writeEEPROM
  1276 ;; This function is called by:
  1277 ;;		Startup code after reset
  1278 ;; This function uses a non-reentrant model
  1279 ;;
  1280                           
  1281     06DF                     _main:	
  1282                           ;psect for function _main
  1283                           
  1284     06DF                     l3786:	
  1285                           ;incstack = 0
  1286                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1287                           
  1288                           
  1289                           ;main.c: 89:   unsigned int a;;main.c: 92:   TRISBbits.TRISB0 = 0;
  1290     06DF  1683               	bsf	3,5	;RP0=1, select bank1
  1291     06E0  1303               	bcf	3,6	;RP1=0, select bank1
  1292     06E1  1006               	bcf	6,0	;volatile
  1293                           
  1294                           ;main.c: 93:   TRISBbits.TRISB1 = 0;
  1295     06E2  1086               	bcf	6,1	;volatile
  1296                           
  1297                           ;main.c: 94:   TRISBbits.TRISB2 = 0;
  1298     06E3  1106               	bcf	6,2	;volatile
  1299                           
  1300                           ;main.c: 95:   TRISBbits.TRISB3 = 0;
  1301     06E4  1186               	bcf	6,3	;volatile
  1302                           
  1303                           ;main.c: 96:   TRISBbits.TRISB4 = 0;
  1304     06E5  1206               	bcf	6,4	;volatile
  1305                           
  1306                           ;main.c: 97:   TRISBbits.TRISB5 = 0;
  1307     06E6  1286               	bcf	6,5	;volatile
  1308                           
  1309                           ;main.c: 99:   TRISA4 = 0;
  1310     06E7  1205               	bcf	5,4	;volatile
  1311                           
  1312                           ;main.c: 101:  TRISE0 = 1;
  1313     06E8  1409               	bsf	9,0	;volatile
  1314                           
  1315                           ;main.c: 102:  TRISE1 = 1;
  1316     06E9  1489               	bsf	9,1	;volatile
  1317                           
  1318                           ;main.c: 103:  TRISC1 = 1;
  1319     06EA  1487               	bsf	7,1	;volatile
  1320                           
  1321                           ;main.c: 104:  TRISC2 = 1;
  1322     06EB  1507               	bsf	7,2	;volatile
  1323                           
  1324                           ;main.c: 105:  TRISE2 = 1;
  1325     06EC  1509               	bsf	9,2	;volatile
  1326                           
  1327                           ;main.c: 106:  TRISC0 = 1;
  1328     06ED  1407               	bsf	7,0	;volatile
  1329                           
  1330                           ;main.c: 107:  TRISC3 = 1;
  1331     06EE  1587               	bsf	7,3	;volatile
  1332                           
  1333                           ;main.c: 108:  TRISD0 = 1;
  1334     06EF  1408               	bsf	8,0	;volatile
  1335                           
  1336                           ;main.c: 109:  TRISA1 = 1;
  1337     06F0  1485               	bsf	5,1	;volatile
  1338     06F1                     l3788:
  1339                           
  1340                           ;main.c: 110:     Lcd_Init();
  1341     06F1  160A  118A  2556  120A  118A  	fcall	_Lcd_Init
  1342     06F6                     l3790:
  1343                           
  1344                           ;main.c: 112:  TRISC6 = 0;
  1345     06F6  1683               	bsf	3,5	;RP0=1, select bank1
  1346     06F7  1303               	bcf	3,6	;RP1=0, select bank1
  1347     06F8  1307               	bcf	7,6	;volatile
  1348     06F9                     l3792:
  1349                           
  1350                           ;main.c: 113:  TRISC7 = 1;
  1351     06F9  1787               	bsf	7,7	;volatile
  1352     06FA                     l3794:
  1353                           
  1354                           ;main.c: 116:   _delay((unsigned long)((100)*(4000000/4000.0)));
  1355     06FA  3082               	movlw	130
  1356     06FB  1283               	bcf	3,5	;RP0=0, select bank0
  1357     06FC  1303               	bcf	3,6	;RP1=0, select bank0
  1358     06FD  00D5               	movwf	??_main+1
  1359     06FE  30DD               	movlw	221
  1360     06FF  00D4               	movwf	??_main
  1361     0700                     u5867:
  1362     0700  0BD4               	decfsz	??_main,f
  1363     0701  2F00               	goto	u5867
  1364     0702  0BD5               	decfsz	??_main+1,f
  1365     0703  2F00               	goto	u5867
  1366     0704                     l3796:
  1367                           
  1368                           ;main.c: 117:   RA4 = 0;
  1369     0704  1283               	bcf	3,5	;RP0=0, select bank0
  1370     0705  1303               	bcf	3,6	;RP1=0, select bank0
  1371     0706  1205               	bcf	5,4	;volatile
  1372     0707                     l3798:
  1373                           
  1374                           ;main.c: 121:     currentTime.hours = readEEPROM(0x00);
  1375     0707  3000               	movlw	0
  1376     0708  00A0               	movwf	readEEPROM@address
  1377     0709  00A1               	movwf	readEEPROM@address+1
  1378     070A  120A  118A  27E6  120A  118A  	fcall	_readEEPROM
  1379     070F  1283               	bcf	3,5	;RP0=0, select bank0
  1380     0710  1303               	bcf	3,6	;RP1=0, select bank0
  1381     0711  0821               	movf	?_readEEPROM+1,w
  1382     0712  1683               	bsf	3,5	;RP0=1, select bank3
  1383     0713  1703               	bsf	3,6	;RP1=1, select bank3
  1384     0714  009F               	movwf	(_currentTime+1)^(0+384)
  1385     0715  1283               	bcf	3,5	;RP0=0, select bank0
  1386     0716  1303               	bcf	3,6	;RP1=0, select bank0
  1387     0717  0820               	movf	?_readEEPROM,w
  1388     0718  1683               	bsf	3,5	;RP0=1, select bank3
  1389     0719  1703               	bsf	3,6	;RP1=1, select bank3
  1390     071A  009E               	movwf	_currentTime^(0+384)
  1391     071B                     l3800:
  1392                           
  1393                           ;main.c: 122:     currentTime.minutes = readEEPROM(0x01);
  1394     071B  3001               	movlw	1
  1395     071C  1283               	bcf	3,5	;RP0=0, select bank0
  1396     071D  1303               	bcf	3,6	;RP1=0, select bank0
  1397     071E  00A0               	movwf	readEEPROM@address
  1398     071F  3000               	movlw	0
  1399     0720  00A1               	movwf	readEEPROM@address+1
  1400     0721  120A  118A  27E6  120A  118A  	fcall	_readEEPROM
  1401     0726  1283               	bcf	3,5	;RP0=0, select bank0
  1402     0727  1303               	bcf	3,6	;RP1=0, select bank0
  1403     0728  0821               	movf	?_readEEPROM+1,w
  1404     0729  1683               	bsf	3,5	;RP0=1, select bank3
  1405     072A  1703               	bsf	3,6	;RP1=1, select bank3
  1406     072B  00A1               	movwf	((_currentTime+1)^(0+384)+2)
  1407     072C  1283               	bcf	3,5	;RP0=0, select bank0
  1408     072D  1303               	bcf	3,6	;RP1=0, select bank0
  1409     072E  0820               	movf	?_readEEPROM,w
  1410     072F  1683               	bsf	3,5	;RP0=1, select bank3
  1411     0730  1703               	bsf	3,6	;RP1=1, select bank3
  1412     0731  00A0               	movwf	(_currentTime^(0+384)+2)
  1413     0732                     l3802:
  1414                           
  1415                           ;main.c: 123:     currentTime.seconds = readEEPROM(0x02);
  1416     0732  3002               	movlw	2
  1417     0733  1283               	bcf	3,5	;RP0=0, select bank0
  1418     0734  1303               	bcf	3,6	;RP1=0, select bank0
  1419     0735  00A0               	movwf	readEEPROM@address
  1420     0736  3000               	movlw	0
  1421     0737  00A1               	movwf	readEEPROM@address+1
  1422     0738  120A  118A  27E6  120A  118A  	fcall	_readEEPROM
  1423     073D  1283               	bcf	3,5	;RP0=0, select bank0
  1424     073E  1303               	bcf	3,6	;RP1=0, select bank0
  1425     073F  0821               	movf	?_readEEPROM+1,w
  1426     0740  1683               	bsf	3,5	;RP0=1, select bank3
  1427     0741  1703               	bsf	3,6	;RP1=1, select bank3
  1428     0742  00A3               	movwf	((_currentTime+1)^(0+384)+4)
  1429     0743  1283               	bcf	3,5	;RP0=0, select bank0
  1430     0744  1303               	bcf	3,6	;RP1=0, select bank0
  1431     0745  0820               	movf	?_readEEPROM,w
  1432     0746  1683               	bsf	3,5	;RP0=1, select bank3
  1433     0747  1703               	bsf	3,6	;RP1=1, select bank3
  1434     0748  00A2               	movwf	(_currentTime^(0+384)+4)
  1435     0749                     l3804:
  1436                           
  1437                           ;main.c: 124:     char lcdText[9];;main.c: 126:     OPTION_REGbits.T0CS = 0;
  1438     0749  1683               	bsf	3,5	;RP0=1, select bank1
  1439     074A  1303               	bcf	3,6	;RP1=0, select bank1
  1440     074B  1281               	bcf	1,5	;volatile
  1441     074C                     l3806:
  1442                           
  1443                           ;main.c: 127:     OPTION_REGbits.PSA = 0;
  1444     074C  1181               	bcf	1,3	;volatile
  1445     074D                     l3808:
  1446                           
  1447                           ;main.c: 128:     OPTION_REGbits.PS2 = 1;
  1448     074D  1501               	bsf	1,2	;volatile
  1449     074E                     l3810:
  1450                           
  1451                           ;main.c: 129:     OPTION_REGbits.PS1 = 1;
  1452     074E  1481               	bsf	1,1	;volatile
  1453     074F                     l3812:
  1454                           
  1455                           ;main.c: 130:     OPTION_REGbits.PS0 = 1;
  1456     074F  1401               	bsf	1,0	;volatile
  1457     0750                     l3814:
  1458                           
  1459                           ;main.c: 133:     INTCONbits.GIE = 1;
  1460     0750  178B               	bsf	11,7	;volatile
  1461     0751                     l3816:
  1462                           
  1463                           ;main.c: 134:     INTCONbits.PEIE = 1;
  1464     0751  170B               	bsf	11,6	;volatile
  1465     0752                     l3818:
  1466                           
  1467                           ;main.c: 135:     INTCONbits.T0IE = 1;
  1468     0752  168B               	bsf	11,5	;volatile
  1469     0753                     l3820:
  1470                           
  1471                           ;main.c: 138:     Lcd_Clear();
  1472     0753  160A  118A  2296  120A  118A  	fcall	_Lcd_Clear
  1473     0758                     l3822:
  1474                           
  1475                           ;main.c: 139:     Lcd_Set_Cursor(1,1);
  1476     0758  1283               	bcf	3,5	;RP0=0, select bank0
  1477     0759  1303               	bcf	3,6	;RP1=0, select bank0
  1478     075A  01A4               	clrf	Lcd_Set_Cursor@b
  1479     075B  0AA4               	incf	Lcd_Set_Cursor@b,f
  1480     075C  3001               	movlw	1
  1481     075D  160A  118A  250A  120A  118A  	fcall	_Lcd_Set_Cursor
  1482     0762                     l3824:
  1483                           
  1484                           ;main.c: 140:     Lcd_Write_String("UZMANLAR MAKINA");
  1485     0762  3094               	movlw	low (STR_1| (0+32768))
  1486     0763  1283               	bcf	3,5	;RP0=0, select bank0
  1487     0764  1303               	bcf	3,6	;RP1=0, select bank0
  1488     0765  00A5               	movwf	Lcd_Write_String@a
  1489     0766  3098               	movlw	high (STR_1| (0+32768))
  1490     0767  00A6               	movwf	Lcd_Write_String@a+1
  1491     0768  160A  118A  23F0  120A  118A  	fcall	_Lcd_Write_String
  1492     076D                     l3826:
  1493                           
  1494                           ;main.c: 141:     Lcd_Set_Cursor(2,1);
  1495     076D  1283               	bcf	3,5	;RP0=0, select bank0
  1496     076E  1303               	bcf	3,6	;RP1=0, select bank0
  1497     076F  01A4               	clrf	Lcd_Set_Cursor@b
  1498     0770  0AA4               	incf	Lcd_Set_Cursor@b,f
  1499     0771  3002               	movlw	2
  1500     0772  160A  118A  250A  120A  118A  	fcall	_Lcd_Set_Cursor
  1501     0777                     l3828:
  1502                           
  1503                           ;main.c: 142:     Lcd_Write_String("www.borvek.com");
  1504     0777  30A4               	movlw	low (STR_2| (0+32768))
  1505     0778  1283               	bcf	3,5	;RP0=0, select bank0
  1506     0779  1303               	bcf	3,6	;RP1=0, select bank0
  1507     077A  00A5               	movwf	Lcd_Write_String@a
  1508     077B  3098               	movlw	high (STR_2| (0+32768))
  1509     077C  00A6               	movwf	Lcd_Write_String@a+1
  1510     077D  160A  118A  23F0  120A  118A  	fcall	_Lcd_Write_String
  1511     0782                     l3830:
  1512                           
  1513                           ;main.c: 143:     Lcd_Set_Cursor(2,17);
  1514     0782  3011               	movlw	17
  1515     0783  1283               	bcf	3,5	;RP0=0, select bank0
  1516     0784  1303               	bcf	3,6	;RP1=0, select bank0
  1517     0785  00A4               	movwf	Lcd_Set_Cursor@b
  1518     0786  3002               	movlw	2
  1519     0787  160A  118A  250A  120A  118A  	fcall	_Lcd_Set_Cursor
  1520     078C                     l3832:
  1521                           
  1522                           ;main.c: 144:     Lcd_Write_String("V2");
  1523     078C  3042               	movlw	low (STR_3| (0+32768))
  1524     078D  1283               	bcf	3,5	;RP0=0, select bank0
  1525     078E  1303               	bcf	3,6	;RP1=0, select bank0
  1526     078F  00A5               	movwf	Lcd_Write_String@a
  1527     0790  3099               	movlw	high (STR_3| (0+32768))
  1528     0791  00A6               	movwf	Lcd_Write_String@a+1
  1529     0792  160A  118A  23F0  120A  118A  	fcall	_Lcd_Write_String
  1530     0797                     l3834:
  1531                           
  1532                           ;main.c: 146:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1533     0797  3006               	movlw	6
  1534     0798  1283               	bcf	3,5	;RP0=0, select bank0
  1535     0799  1303               	bcf	3,6	;RP1=0, select bank0
  1536     079A  00D6               	movwf	??_main+2
  1537     079B  3013               	movlw	19
  1538     079C  00D5               	movwf	??_main+1
  1539     079D  30AD               	movlw	173
  1540     079E  00D4               	movwf	??_main
  1541     079F                     u5877:
  1542     079F  0BD4               	decfsz	??_main,f
  1543     07A0  2F9F               	goto	u5877
  1544     07A1  0BD5               	decfsz	??_main+1,f
  1545     07A2  2F9F               	goto	u5877
  1546     07A3  0BD6               	decfsz	??_main+2,f
  1547     07A4  2F9F               	goto	u5877
  1548     07A5                     l3836:
  1549                           
  1550                           ;main.c: 147:     Lcd_Clear();
  1551     07A5  160A  118A  2296  120A  118A  	fcall	_Lcd_Clear
  1552     07AA                     l3838:
  1553                           
  1554                           ;main.c: 152:     SPBRG = ((4000000/16)/19200) - 1;
  1555     07AA  300C               	movlw	12
  1556     07AB  1683               	bsf	3,5	;RP0=1, select bank1
  1557     07AC  1303               	bcf	3,6	;RP1=0, select bank1
  1558     07AD  0099               	movwf	25	;volatile
  1559     07AE                     l3840:
  1560                           
  1561                           ;main.c: 153:     UART_Initialize();
  1562     07AE  160A  118A  22B1  120A  118A  	fcall	_UART_Initialize
  1563     07B3                     l3842:
  1564     07B3                     l3844:
  1565                           
  1566                           ;main.c: 159:     ADCON1bits.ADFM = 1;
  1567     07B3  1683               	bsf	3,5	;RP0=1, select bank1
  1568     07B4  1303               	bcf	3,6	;RP1=0, select bank1
  1569     07B5  179F               	bsf	31,7	;volatile
  1570     07B6                     l3846:
  1571                           
  1572                           ;main.c: 160:     ADCON1bits.PCFG = 0b100;
  1573     07B6  081F               	movf	31,w	;volatile
  1574     07B7  39F0               	andlw	-16
  1575     07B8  3804               	iorlw	4
  1576     07B9  009F               	movwf	31	;volatile
  1577     07BA                     l3848:
  1578                           
  1579                           ;main.c: 161:     ADCON0bits.ADCS = 0b10;
  1580     07BA  1283               	bcf	3,5	;RP0=0, select bank0
  1581     07BB  1303               	bcf	3,6	;RP1=0, select bank0
  1582     07BC  081F               	movf	31,w	;volatile
  1583     07BD  393F               	andlw	-193
  1584     07BE  3880               	iorlw	128
  1585     07BF  009F               	movwf	31	;volatile
  1586     07C0                     l3850:
  1587                           
  1588                           ;main.c: 162:     ADCON0bits.ADON = 1;
  1589     07C0  141F               	bsf	31,0	;volatile
  1590     07C1                     l3852:
  1591     07C1                     l3854:
  1592                           
  1593                           ;main.c: 170: unsigned int FWDartan = 0;
  1594     07C1  1683               	bsf	3,5	;RP0=1, select bank3
  1595     07C2  1703               	bsf	3,6	;RP1=1, select bank3
  1596     07C3  019C               	clrf	main@FWDartan^(0+384)
  1597     07C4  019D               	clrf	(main@FWDartan+1)^(0+384)
  1598     07C5                     l3856:
  1599                           
  1600                           ;main.c: 177: if( !RC3 && !RD0){
  1601     07C5  1283               	bcf	3,5	;RP0=0, select bank0
  1602     07C6  1303               	bcf	3,6	;RP1=0, select bank0
  1603     07C7  1987               	btfsc	7,3	;volatile
  1604     07C8  2FCA               	goto	u5231
  1605     07C9  2FCD               	goto	u5230
  1606     07CA                     u5231:
  1607     07CA  120A  118A  2E47   	goto	l162
  1608     07CD                     u5230:
  1609     07CD                     l3858:
  1610     07CD  1808               	btfsc	8,0	;volatile
  1611     07CE  2FD0               	goto	u5241
  1612     07CF  2FD1               	goto	u5240
  1613     07D0                     u5241:
  1614     07D0  2FCA               	goto	u5231
  1615     07D1                     u5240:
  1616     07D1                     l3860:
  1617                           
  1618                           ;main.c: 178:      if ((currentTime.hours == 0 || currentTime.hours == 501 || currentTim
      +                          e.hours == 502) && currentTime.minutes == 1) {
  1619     07D1  1683               	bsf	3,5	;RP0=1, select bank3
  1620     07D2  1703               	bsf	3,6	;RP1=1, select bank3
  1621     07D3  081E               	movf	_currentTime^(0+384),w
  1622     07D4  041F               	iorwf	(_currentTime+1)^(0+384),w
  1623     07D5  1903               	btfsc	3,2
  1624     07D6  2FD8               	goto	u5251
  1625     07D7  2FDB               	goto	u5250
  1626     07D8                     u5251:
  1627     07D8  120A  158A  28F2   	goto	l3866
  1628     07DB                     u5250:
  1629     07DB                     l3862:
  1630     07DB  30F5               	movlw	245
  1631     07DC  061E               	xorwf	_currentTime^(0+384),w
  1632     07DD  1D03               	skipz
  1633     07DE  2FE2               	goto	L1
  1634     07DF  031F               	decf	(_currentTime+1)^(0+384),w
  1635     07E0  1903               	btfsc	3,2
  1636     07E1  2FE5               	goto	u5261
  1637     07E2                     L1:
  1638     07E2  120A  158A  28E9   	goto	u5260
  1639     07E5                     u5261:
  1640     07E5  2FD8               	goto	u5251
  1641                           
  1642                           	psect	text1
  1643     12F1                     __ptext1:	
  1644 ;; *************** function _writeEEPROM *****************
  1645 ;; Defined at:
  1646 ;;		line 39 in file "main.c"
  1647 ;; Parameters:    Size  Location     Type
  1648 ;;  address         2    0[BANK0 ] unsigned int 
  1649 ;;  data            2    2[BANK0 ] unsigned int 
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;		None
  1652 ;; Return value:  Size  Location     Type
  1653 ;;                  1    wreg      void 
  1654 ;; Registers used:
  1655 ;;		wreg
  1656 ;; Tracked objects:
  1657 ;;		On entry : 0/0
  1658 ;;		On exit  : 0/0
  1659 ;;		Unchanged: 0/0
  1660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1661 ;;      Params:         0       4       0       0       0
  1662 ;;      Locals:         0       0       0       0       0
  1663 ;;      Temps:          0       0       0       0       0
  1664 ;;      Totals:         0       4       0       0       0
  1665 ;;Total ram usage:        4 bytes
  1666 ;; Hardware stack levels used: 1
  1667 ;; Hardware stack levels required when called: 2
  1668 ;; This function calls:
  1669 ;;		Nothing
  1670 ;; This function is called by:
  1671 ;;		_main
  1672 ;; This function uses a non-reentrant model
  1673 ;;
  1674                           
  1675     12F1                     _writeEEPROM:	
  1676                           ;psect for function _writeEEPROM
  1677                           
  1678     12F1                     l2304:	
  1679                           ;incstack = 0
  1680                           ; Regs used in _writeEEPROM: [wreg]
  1681                           
  1682                           
  1683                           ;main.c: 41:     EEADR = address;
  1684     12F1  1283               	bcf	3,5	;RP0=0, select bank0
  1685     12F2  1303               	bcf	3,6	;RP1=0, select bank0
  1686     12F3  0820               	movf	writeEEPROM@address,w
  1687     12F4  1283               	bcf	3,5	;RP0=0, select bank2
  1688     12F5  1703               	bsf	3,6	;RP1=1, select bank2
  1689     12F6  008D               	movwf	13	;volatile
  1690                           
  1691                           ;main.c: 42:     EEDATA = data;
  1692     12F7  1283               	bcf	3,5	;RP0=0, select bank0
  1693     12F8  1303               	bcf	3,6	;RP1=0, select bank0
  1694     12F9  0822               	movf	writeEEPROM@data,w
  1695     12FA  1283               	bcf	3,5	;RP0=0, select bank2
  1696     12FB  1703               	bsf	3,6	;RP1=1, select bank2
  1697     12FC  008C               	movwf	12	;volatile
  1698     12FD                     l2306:
  1699                           
  1700                           ;main.c: 43:     WREN = 1;
  1701     12FD  1683               	bsf	3,5	;RP0=1, select bank3
  1702     12FE  1703               	bsf	3,6	;RP1=1, select bank3
  1703     12FF  150C               	bsf	12,2	;volsfr
  1704     1300                     l2308:
  1705                           
  1706                           ;main.c: 44:     GIE = 0;
  1707     1300  138B               	bcf	11,7	;volatile
  1708                           
  1709                           ;main.c: 45:     EECON2 = 0x55;
  1710     1301  3055               	movlw	85
  1711     1302  008D               	movwf	13	;volsfr
  1712                           
  1713                           ;main.c: 46:     EECON2 = 0xAA;
  1714     1303  30AA               	movlw	170
  1715     1304  008D               	movwf	13	;volsfr
  1716     1305                     l2310:
  1717                           
  1718                           ;main.c: 47:     WR = 1;
  1719     1305  148C               	bsf	12,1	;volsfr
  1720     1306                     l2312:
  1721                           
  1722                           ;main.c: 48:     GIE = 1;
  1723     1306  178B               	bsf	11,7	;volatile
  1724     1307                     l2314:
  1725                           
  1726                           ;main.c: 49:     WREN = 0;
  1727     1307  110C               	bcf	12,2	;volsfr
  1728     1308                     l138:	
  1729                           ;main.c: 50:     while (WR == 1);
  1730                           
  1731     1308  188C               	btfsc	12,1	;volsfr
  1732     1309  2B0B               	goto	u2521
  1733     130A  2B0C               	goto	u2520
  1734     130B                     u2521:
  1735     130B  2B08               	goto	l138
  1736     130C                     u2520:
  1737     130C                     l141:
  1738     130C  0008               	return
  1739     130D                     __end_of_writeEEPROM:
  1740                           
  1741                           	psect	text2
  1742     0AC4                     __ptext2:	
  1743 ;; *************** function _sprintf *****************
  1744 ;; Defined at:
  1745 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  1746 ;; Parameters:    Size  Location     Type
  1747 ;;  sp              1    wreg     PTR unsigned char 
  1748 ;;		 -> main@combinedText_395(20), main@uartMessage_391(8), main@combinedText(20), main@uartMessage(8), 
  1749 ;;		 -> main@rpmString(5), main@adcString1(4), main@lcdText(9), 
  1750 ;;  f               2   18[BANK0 ] PTR const unsigned char 
  1751 ;;		 -> STR_33(6), STR_31(6), STR_27(6), STR_25(6), 
  1752 ;;		 -> STR_21(10), STR_19(6), STR_16(11), 
  1753 ;; Auto vars:     Size  Location     Type
  1754 ;;  sp              1   40[BANK0 ] PTR unsigned char 
  1755 ;;		 -> main@combinedText_395(20), main@uartMessage_391(8), main@combinedText(20), main@uartMessage(8), 
  1756 ;;		 -> main@rpmString(5), main@adcString1(4), main@lcdText(9), 
  1757 ;;  tmpval          4    0        struct .
  1758 ;;  width           2   37[BANK0 ] int 
  1759 ;;  val             2   34[BANK0 ] unsigned int 
  1760 ;;  cp              2    0        PTR const unsigned char 
  1761 ;;  len             2    0        unsigned int 
  1762 ;;  c               1   39[BANK0 ] unsigned char 
  1763 ;;  flag            1   36[BANK0 ] unsigned char 
  1764 ;;  ap              1   33[BANK0 ] PTR void [1]
  1765 ;;		 -> ?_sprintf(2), 
  1766 ;;  prec            1   32[BANK0 ] char 
  1767 ;; Return value:  Size  Location     Type
  1768 ;;                  2   18[BANK0 ] int 
  1769 ;; Registers used:
  1770 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1771 ;; Tracked objects:
  1772 ;;		On entry : 0/0
  1773 ;;		On exit  : 0/0
  1774 ;;		Unchanged: 0/0
  1775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1776 ;;      Params:         0      10       0       0       0
  1777 ;;      Locals:         0       9       0       0       0
  1778 ;;      Temps:          0       4       0       0       0
  1779 ;;      Totals:         0      23       0       0       0
  1780 ;;Total ram usage:       23 bytes
  1781 ;; Hardware stack levels used: 1
  1782 ;; Hardware stack levels required when called: 3
  1783 ;; This function calls:
  1784 ;;		___lwdiv
  1785 ;;		___lwmod
  1786 ;;		___wmul
  1787 ;;		_isdigit
  1788 ;; This function is called by:
  1789 ;;		_main
  1790 ;; This function uses a non-reentrant model
  1791 ;;
  1792                           
  1793     0AC4                     _sprintf:	
  1794                           ;psect for function _sprintf
  1795                           
  1796                           
  1797                           ;incstack = 0
  1798                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1799                           ;sprintf@sp stored from wreg
  1800     0AC4  1283               	bcf	3,5	;RP0=0, select bank0
  1801     0AC5  1303               	bcf	3,6	;RP1=0, select bank0
  1802     0AC6  00C8               	movwf	sprintf@sp
  1803     0AC7                     l3474:
  1804                           
  1805                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  1806     0AC7  3034               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1807     0AC8  00C1               	movwf	sprintf@ap
  1808                           
  1809                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1810     0AC9  2CA0               	goto	l3584
  1811     0ACA                     l3476:
  1812                           
  1813                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1814     0ACA  3025               	movlw	37
  1815     0ACB  0647               	xorwf	sprintf@c,w
  1816     0ACC  1903               	btfsc	3,2
  1817     0ACD  2ACF               	goto	u4541
  1818     0ACE  2AD0               	goto	u4540
  1819     0ACF                     u4541:
  1820     0ACF  2ADA               	goto	l3482
  1821     0AD0                     u4540:
  1822     0AD0                     l3478:
  1823                           
  1824                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1825     0AD0  0848               	movf	sprintf@sp,w
  1826     0AD1  0084               	movwf	4
  1827     0AD2  0847               	movf	sprintf@c,w
  1828     0AD3  1383               	bcf	3,7	;select IRP bank0
  1829     0AD4  0080               	movwf	0
  1830     0AD5                     l3480:
  1831     0AD5  3001               	movlw	1
  1832     0AD6  00FF               	movwf	btemp+1
  1833     0AD7  087F               	movf	btemp+1,w
  1834     0AD8  07C8               	addwf	sprintf@sp,f
  1835                           
  1836                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 559:    continue;
  1837     0AD9  2CA0               	goto	l3584
  1838     0ADA                     l3482:
  1839                           
  1840                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1841     0ADA  01C5               	clrf	sprintf@width
  1842     0ADB  01C6               	clrf	sprintf@width+1
  1843                           
  1844                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1845     0ADC  01C4               	clrf	sprintf@flag
  1846     0ADD  2AE5               	goto	l3488
  1847     0ADE                     l367:	
  1848                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 596:    case '0':
  1849                           
  1850                           
  1851                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  1852     0ADE  1544               	bsf	sprintf@flag,2
  1853     0ADF                     l3484:
  1854                           
  1855                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 598:     f++;
  1856     0ADF  3001               	movlw	1
  1857     0AE0  07B2               	addwf	sprintf@f,f
  1858     0AE1  1803               	skipnc
  1859     0AE2  0AB3               	incf	sprintf@f+1,f
  1860     0AE3  3000               	movlw	0
  1861     0AE4  07B3               	addwf	sprintf@f+1,f
  1862     0AE5                     l3488:	
  1863                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  1864                           
  1865     0AE5  0833               	movf	sprintf@f+1,w
  1866     0AE6  00FF               	movwf	btemp+1
  1867     0AE7  0832               	movf	sprintf@f,w
  1868     0AE8  0084               	movwf	4
  1869     0AE9  160A  158A  2000  120A  158A  	fcall	stringtab
  1870     0AEE  00BC               	movwf	??_sprintf
  1871     0AEF  01BD               	clrf	??_sprintf+1
  1872                           
  1873                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1874                           ; Switch size 1, requested type "simple"
  1875                           ; Number of cases is 1, Range of values is 0 to 0
  1876                           ; switch strategies available:
  1877                           ; Name         Instructions Cycles
  1878                           ; simple_byte            4     3 (average)
  1879                           ; direct_byte           11     8 (fixed)
  1880                           ; jumptable            260     6 (fixed)
  1881                           ;	Chosen strategy is simple_byte
  1882     0AF0  083D               	movf	??_sprintf+1,w
  1883     0AF1  3A00               	xorlw	0	; case 0
  1884     0AF2  1903               	skipnz
  1885     0AF3  2AF5               	goto	l4280
  1886     0AF4  2AFA               	goto	l3490
  1887     0AF5                     l4280:
  1888                           
  1889                           ; Switch size 1, requested type "simple"
  1890                           ; Number of cases is 1, Range of values is 48 to 48
  1891                           ; switch strategies available:
  1892                           ; Name         Instructions Cycles
  1893                           ; simple_byte            4     3 (average)
  1894                           ; direct_byte           14    11 (fixed)
  1895                           ; jumptable            263     9 (fixed)
  1896                           ;	Chosen strategy is simple_byte
  1897     0AF5  083C               	movf	??_sprintf,w
  1898     0AF6  3A30               	xorlw	48	; case 48
  1899     0AF7  1903               	skipnz
  1900     0AF8  2ADE               	goto	l367
  1901     0AF9  2AFA               	goto	l3490
  1902     0AFA                     l3490:
  1903                           
  1904                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1905     0AFA  0833               	movf	sprintf@f+1,w
  1906     0AFB  00FF               	movwf	btemp+1
  1907     0AFC  0832               	movf	sprintf@f,w
  1908     0AFD  0084               	movwf	4
  1909     0AFE  160A  158A  2000  120A  158A  	fcall	stringtab
  1910     0B03  160A  118A  22C1  120A  158A  	fcall	_isdigit
  1911     0B08  1C03               	btfss	3,0
  1912     0B09  2B0B               	goto	u4551
  1913     0B0A  2B0C               	goto	u4550
  1914     0B0B                     u4551:
  1915     0B0B  2B55               	goto	l3504
  1916     0B0C                     u4550:
  1917     0B0C                     l3492:
  1918                           
  1919                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1920     0B0C  1283               	bcf	3,5	;RP0=0, select bank0
  1921     0B0D  1303               	bcf	3,6	;RP1=0, select bank0
  1922     0B0E  01C5               	clrf	sprintf@width
  1923     0B0F  01C6               	clrf	sprintf@width+1
  1924     0B10                     l3494:
  1925                           
  1926                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1927     0B10  300A               	movlw	10
  1928     0B11  1283               	bcf	3,5	;RP0=0, select bank0
  1929     0B12  1303               	bcf	3,6	;RP1=0, select bank0
  1930     0B13  00A0               	movwf	___wmul@multiplier
  1931     0B14  3000               	movlw	0
  1932     0B15  00A1               	movwf	___wmul@multiplier+1
  1933     0B16  0846               	movf	sprintf@width+1,w
  1934     0B17  00A3               	movwf	___wmul@multiplicand+1
  1935     0B18  0845               	movf	sprintf@width,w
  1936     0B19  00A2               	movwf	___wmul@multiplicand
  1937     0B1A  160A  118A  2354  120A  158A  	fcall	___wmul
  1938     0B1F  1283               	bcf	3,5	;RP0=0, select bank0
  1939     0B20  1303               	bcf	3,6	;RP1=0, select bank0
  1940     0B21  0821               	movf	?___wmul+1,w
  1941     0B22  00C6               	movwf	sprintf@width+1
  1942     0B23  0820               	movf	?___wmul,w
  1943     0B24  00C5               	movwf	sprintf@width
  1944     0B25                     l3496:
  1945                           
  1946                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1947     0B25  0833               	movf	sprintf@f+1,w
  1948     0B26  00FF               	movwf	btemp+1
  1949     0B27  0832               	movf	sprintf@f,w
  1950     0B28  0084               	movwf	4
  1951     0B29  160A  158A  2000  120A  158A  	fcall	stringtab
  1952     0B2E  3ED0               	addlw	208
  1953     0B2F  00BC               	movwf	??_sprintf
  1954     0B30  30FF               	movlw	255
  1955     0B31  1803               	skipnc
  1956     0B32  3000               	movlw	0
  1957     0B33  00BD               	movwf	??_sprintf+1
  1958     0B34  083C               	movf	??_sprintf,w
  1959     0B35  07C5               	addwf	sprintf@width,f
  1960     0B36  1803               	skipnc
  1961     0B37  0AC6               	incf	sprintf@width+1,f
  1962     0B38  083D               	movf	??_sprintf+1,w
  1963     0B39  07C6               	addwf	sprintf@width+1,f
  1964     0B3A                     l3498:
  1965     0B3A  3001               	movlw	1
  1966     0B3B  07B2               	addwf	sprintf@f,f
  1967     0B3C  1803               	skipnc
  1968     0B3D  0AB3               	incf	sprintf@f+1,f
  1969     0B3E  3000               	movlw	0
  1970     0B3F  07B3               	addwf	sprintf@f+1,f
  1971     0B40                     l3500:
  1972                           
  1973                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1974     0B40  0833               	movf	sprintf@f+1,w
  1975     0B41  00FF               	movwf	btemp+1
  1976     0B42  0832               	movf	sprintf@f,w
  1977     0B43  0084               	movwf	4
  1978     0B44  160A  158A  2000  120A  158A  	fcall	stringtab
  1979     0B49  160A  118A  22C1  120A  158A  	fcall	_isdigit
  1980     0B4E  1803               	btfsc	3,0
  1981     0B4F  2B51               	goto	u4561
  1982     0B50  2B52               	goto	u4560
  1983     0B51                     u4561:
  1984     0B51  2B10               	goto	l3494
  1985     0B52                     u4560:
  1986     0B52  2B55               	goto	l3504
  1987     0B53                     l381:	
  1988                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 843:   case 'u':
  1989                           
  1990                           
  1991                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          x40;
  1992     0B53  1744               	bsf	sprintf@flag,6
  1993                           
  1994                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 845:    break;
  1995     0B54  2B7D               	goto	l379
  1996     0B55                     l3504:
  1997     0B55  1283               	bcf	3,5	;RP0=0, select bank0
  1998     0B56  1303               	bcf	3,6	;RP1=0, select bank0
  1999     0B57  0833               	movf	sprintf@f+1,w
  2000     0B58  00BD               	movwf	??_sprintf+1
  2001     0B59  0832               	movf	sprintf@f,w
  2002     0B5A  00BC               	movwf	??_sprintf
  2003     0B5B  0AB2               	incf	sprintf@f,f
  2004     0B5C  1903               	skipnz
  2005     0B5D  0AB3               	incf	sprintf@f+1,f
  2006     0B5E  083D               	movf	??_sprintf+1,w
  2007     0B5F  00FF               	movwf	btemp+1
  2008     0B60  083C               	movf	??_sprintf,w
  2009     0B61  0084               	movwf	4
  2010     0B62  160A  158A  2000  120A  158A  	fcall	stringtab
  2011     0B67  00C7               	movwf	sprintf@c
  2012     0B68  00BE               	movwf	??_sprintf+2
  2013     0B69  01BF               	clrf	??_sprintf+3
  2014                           
  2015                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2016                           ; Switch size 1, requested type "simple"
  2017                           ; Number of cases is 1, Range of values is 0 to 0
  2018                           ; switch strategies available:
  2019                           ; Name         Instructions Cycles
  2020                           ; simple_byte            4     3 (average)
  2021                           ; direct_byte           11     8 (fixed)
  2022                           ; jumptable            260     6 (fixed)
  2023                           ;	Chosen strategy is simple_byte
  2024     0B6A  083F               	movf	??_sprintf+3,w
  2025     0B6B  3A00               	xorlw	0	; case 0
  2026     0B6C  1903               	skipnz
  2027     0B6D  2B6F               	goto	l4282
  2028     0B6E  2CA0               	goto	l3584
  2029     0B6F                     l4282:
  2030                           
  2031                           ; Switch size 1, requested type "simple"
  2032                           ; Number of cases is 4, Range of values is 0 to 117
  2033                           ; switch strategies available:
  2034                           ; Name         Instructions Cycles
  2035                           ; simple_byte           13     7 (average)
  2036                           ; jumptable            260     6 (fixed)
  2037                           ;	Chosen strategy is simple_byte
  2038     0B6F  083E               	movf	??_sprintf+2,w
  2039     0B70  3A00               	xorlw	0	; case 0
  2040     0B71  1903               	skipnz
  2041     0B72  2CB6               	goto	l3586
  2042     0B73  3A64               	xorlw	100	; case 100
  2043     0B74  1903               	skipnz
  2044     0B75  2B7D               	goto	l379
  2045     0B76  3A0D               	xorlw	13	; case 105
  2046     0B77  1903               	skipnz
  2047     0B78  2B7D               	goto	l379
  2048     0B79  3A1C               	xorlw	28	; case 117
  2049     0B7A  1903               	skipnz
  2050     0B7B  2B53               	goto	l381
  2051     0B7C  2CA0               	goto	l3584
  2052     0B7D                     l379:
  2053                           
  2054                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1277:   if((flag 
      +                          & 0x40) == 0x00)
  2055     0B7D  1B44               	btfsc	sprintf@flag,6
  2056     0B7E  2B80               	goto	u4571
  2057     0B7F  2B81               	goto	u4570
  2058     0B80                     u4571:
  2059     0B80  2B9B               	goto	l3516
  2060     0B81                     u4570:
  2061     0B81                     l3506:
  2062                           
  2063                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2064     0B81  0841               	movf	sprintf@ap,w
  2065     0B82  0084               	movwf	4
  2066     0B83  1383               	bcf	3,7	;select IRP bank0
  2067     0B84  0800               	movf	0,w
  2068     0B85  00C2               	movwf	sprintf@val
  2069     0B86  0A84               	incf	4,f
  2070     0B87  0800               	movf	0,w
  2071     0B88  00C3               	movwf	sprintf@val+1
  2072     0B89                     l3508:
  2073     0B89  3002               	movlw	2
  2074     0B8A  00FF               	movwf	btemp+1
  2075     0B8B  087F               	movf	btemp+1,w
  2076     0B8C  07C1               	addwf	sprintf@ap,f
  2077     0B8D                     l3510:
  2078                           
  2079                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2080     0B8D  1FC3               	btfss	sprintf@val+1,7
  2081     0B8E  2B90               	goto	u4581
  2082     0B8F  2B91               	goto	u4580
  2083     0B90                     u4581:
  2084     0B90  2BA7               	goto	l3520
  2085     0B91                     u4580:
  2086     0B91                     l3512:
  2087                           
  2088                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2089     0B91  3003               	movlw	3
  2090     0B92  00FF               	movwf	btemp+1
  2091     0B93  087F               	movf	btemp+1,w
  2092     0B94  04C4               	iorwf	sprintf@flag,f
  2093     0B95                     l3514:
  2094                           
  2095                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2096     0B95  09C2               	comf	sprintf@val,f
  2097     0B96  09C3               	comf	sprintf@val+1,f
  2098     0B97  0AC2               	incf	sprintf@val,f
  2099     0B98  1903               	skipnz
  2100     0B99  0AC3               	incf	sprintf@val+1,f
  2101     0B9A  2BA7               	goto	l3520
  2102     0B9B                     l3516:
  2103                           
  2104                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2105     0B9B  0841               	movf	sprintf@ap,w
  2106     0B9C  0084               	movwf	4
  2107     0B9D  1383               	bcf	3,7	;select IRP bank0
  2108     0B9E  0800               	movf	0,w
  2109     0B9F  00C2               	movwf	sprintf@val
  2110     0BA0  0A84               	incf	4,f
  2111     0BA1  0800               	movf	0,w
  2112     0BA2  00C3               	movwf	sprintf@val+1
  2113     0BA3                     l3518:
  2114     0BA3  3002               	movlw	2
  2115     0BA4  00FF               	movwf	btemp+1
  2116     0BA5  087F               	movf	btemp+1,w
  2117     0BA6  07C1               	addwf	sprintf@ap,f
  2118     0BA7                     l3520:
  2119                           
  2120                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2121     0BA7  01C7               	clrf	sprintf@c
  2122     0BA8  0AC7               	incf	sprintf@c,f
  2123     0BA9                     l3526:
  2124                           
  2125                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2126     0BA9  0847               	movf	sprintf@c,w
  2127     0BAA  00BC               	movwf	??_sprintf
  2128     0BAB  073C               	addwf	??_sprintf,w
  2129     0BAC  3E12               	addlw	low (_dpowers| (0+32768))
  2130     0BAD  0084               	movwf	4
  2131     0BAE  3098               	movlw	high (_dpowers| (0+32768))
  2132     0BAF  1803               	skipnc
  2133     0BB0  3E01               	addlw	1
  2134     0BB1  00FF               	movwf	btemp+1
  2135     0BB2  160A  158A  2000  120A  158A  	fcall	stringtab
  2136     0BB7  00BD               	movwf	??_sprintf+1
  2137     0BB8  160A  158A  2000  120A  158A  	fcall	stringtab
  2138     0BBD  00BE               	movwf	??_sprintf+2
  2139     0BBE  083E               	movf	??_sprintf+2,w
  2140     0BBF  0243               	subwf	sprintf@val+1,w
  2141     0BC0  1D03               	skipz
  2142     0BC1  2BC4               	goto	u4595
  2143     0BC2  083D               	movf	??_sprintf+1,w
  2144     0BC3  0242               	subwf	sprintf@val,w
  2145     0BC4                     u4595:
  2146     0BC4  1803               	skipnc
  2147     0BC5  2BC7               	goto	u4591
  2148     0BC6  2BC8               	goto	u4590
  2149     0BC7                     u4591:
  2150     0BC7  2BC9               	goto	l3530
  2151     0BC8                     u4590:
  2152     0BC8  2BD3               	goto	l3534
  2153     0BC9                     l3530:
  2154     0BC9  3001               	movlw	1
  2155     0BCA  00FF               	movwf	btemp+1
  2156     0BCB  087F               	movf	btemp+1,w
  2157     0BCC  07C7               	addwf	sprintf@c,f
  2158     0BCD                     l3532:
  2159     0BCD  3005               	movlw	5
  2160     0BCE  0647               	xorwf	sprintf@c,w
  2161     0BCF  1D03               	btfss	3,2
  2162     0BD0  2BD2               	goto	u4601
  2163     0BD1  2BD3               	goto	u4600
  2164     0BD2                     u4601:
  2165     0BD2  2BA9               	goto	l3526
  2166     0BD3                     u4600:
  2167     0BD3                     l3534:
  2168                           
  2169                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  2170     0BD3  0845               	movf	sprintf@width,w
  2171     0BD4  0446               	iorwf	sprintf@width+1,w
  2172     0BD5  1903               	btfsc	3,2
  2173     0BD6  2BD8               	goto	u4611
  2174     0BD7  2BD9               	goto	u4610
  2175     0BD8                     u4611:
  2176     0BD8  2BE5               	goto	l388
  2177     0BD9                     u4610:
  2178     0BD9                     l3536:
  2179     0BD9  0844               	movf	sprintf@flag,w
  2180     0BDA  3903               	andlw	3
  2181     0BDB  1903               	btfsc	3,2
  2182     0BDC  2BDE               	goto	u4621
  2183     0BDD  2BDF               	goto	u4620
  2184     0BDE                     u4621:
  2185     0BDE  2BE5               	goto	l388
  2186     0BDF                     u4620:
  2187     0BDF                     l3538:
  2188                           
  2189                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1372:    width--;
  2190     0BDF  30FF               	movlw	255
  2191     0BE0  07C5               	addwf	sprintf@width,f
  2192     0BE1  1803               	skipnc
  2193     0BE2  0AC6               	incf	sprintf@width+1,f
  2194     0BE3  30FF               	movlw	255
  2195     0BE4  07C6               	addwf	sprintf@width+1,f
  2196     0BE5                     l388:
  2197                           
  2198                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  2199     0BE5  0846               	movf	sprintf@width+1,w
  2200     0BE6  3A80               	xorlw	128
  2201     0BE7  3C80               	sublw	128
  2202     0BE8  1D03               	skipz
  2203     0BE9  2BEC               	goto	u4635
  2204     0BEA  0845               	movf	sprintf@width,w
  2205     0BEB  0247               	subwf	sprintf@c,w
  2206     0BEC                     u4635:
  2207     0BEC  1803               	skipnc
  2208     0BED  2BEF               	goto	u4631
  2209     0BEE  2BF0               	goto	u4630
  2210     0BEF                     u4631:
  2211     0BEF  2BFC               	goto	l3542
  2212     0BF0                     u4630:
  2213     0BF0                     l3540:
  2214                           
  2215                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  2216     0BF0  1283               	bcf	3,5	;RP0=0, select bank0
  2217     0BF1  1303               	bcf	3,6	;RP1=0, select bank0
  2218     0BF2  0847               	movf	sprintf@c,w
  2219     0BF3  00BC               	movwf	??_sprintf
  2220     0BF4  01BD               	clrf	??_sprintf+1
  2221     0BF5  083C               	movf	??_sprintf,w
  2222     0BF6  02C5               	subwf	sprintf@width,f
  2223     0BF7  083D               	movf	??_sprintf+1,w
  2224     0BF8  1C03               	skipc
  2225     0BF9  03C6               	decf	sprintf@width+1,f
  2226     0BFA  02C6               	subwf	sprintf@width+1,f
  2227     0BFB  2C00               	goto	l3544
  2228     0BFC                     l3542:
  2229                           
  2230                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  2231     0BFC  1283               	bcf	3,5	;RP0=0, select bank0
  2232     0BFD  1303               	bcf	3,6	;RP1=0, select bank0
  2233     0BFE  01C5               	clrf	sprintf@width
  2234     0BFF  01C6               	clrf	sprintf@width+1
  2235     0C00                     l3544:
  2236                           
  2237                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  2238     0C00  1D44               	btfss	sprintf@flag,2
  2239     0C01  2C03               	goto	u4641
  2240     0C02  2C04               	goto	u4640
  2241     0C03                     u4641:
  2242     0C03  2C2F               	goto	l3560
  2243     0C04                     u4640:
  2244     0C04                     l3546:
  2245                           
  2246                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1418:    if(flag 
      +                          & 0x03)
  2247     0C04  0844               	movf	sprintf@flag,w
  2248     0C05  3903               	andlw	3
  2249     0C06  1903               	btfsc	3,2
  2250     0C07  2C09               	goto	u4651
  2251     0C08  2C0A               	goto	u4650
  2252     0C09                     u4651:
  2253     0C09  2C13               	goto	l3552
  2254     0C0A                     u4650:
  2255     0C0A                     l3548:
  2256                           
  2257                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1419:     ((*sp++
      +                           = ('-')));
  2258     0C0A  0848               	movf	sprintf@sp,w
  2259     0C0B  0084               	movwf	4
  2260     0C0C  302D               	movlw	45
  2261     0C0D  1383               	bcf	3,7	;select IRP bank0
  2262     0C0E  0080               	movwf	0
  2263     0C0F                     l3550:
  2264     0C0F  3001               	movlw	1
  2265     0C10  00FF               	movwf	btemp+1
  2266     0C11  087F               	movf	btemp+1,w
  2267     0C12  07C8               	addwf	sprintf@sp,f
  2268     0C13                     l3552:
  2269                           
  2270                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  2271     0C13  0845               	movf	sprintf@width,w
  2272     0C14  0446               	iorwf	sprintf@width+1,w
  2273     0C15  1903               	btfsc	3,2
  2274     0C16  2C18               	goto	u4661
  2275     0C17  2C19               	goto	u4660
  2276     0C18                     u4661:
  2277     0C18  2C59               	goto	l3574
  2278     0C19                     u4660:
  2279     0C19                     l3554:
  2280                           
  2281                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
  2282     0C19  0848               	movf	sprintf@sp,w
  2283     0C1A  0084               	movwf	4
  2284     0C1B  3030               	movlw	48
  2285     0C1C  1383               	bcf	3,7	;select IRP bank0
  2286     0C1D  0080               	movwf	0
  2287     0C1E                     l3556:
  2288     0C1E  3001               	movlw	1
  2289     0C1F  00FF               	movwf	btemp+1
  2290     0C20  087F               	movf	btemp+1,w
  2291     0C21  07C8               	addwf	sprintf@sp,f
  2292     0C22                     l3558:
  2293     0C22  30FF               	movlw	255
  2294     0C23  07C5               	addwf	sprintf@width,f
  2295     0C24  1803               	skipnc
  2296     0C25  0AC6               	incf	sprintf@width+1,f
  2297     0C26  30FF               	movlw	255
  2298     0C27  07C6               	addwf	sprintf@width+1,f
  2299     0C28  0845               	movf	sprintf@width,w
  2300     0C29  0446               	iorwf	sprintf@width+1,w
  2301     0C2A  1D03               	btfss	3,2
  2302     0C2B  2C2D               	goto	u4671
  2303     0C2C  2C2E               	goto	u4670
  2304     0C2D                     u4671:
  2305     0C2D  2C19               	goto	l3554
  2306     0C2E                     u4670:
  2307     0C2E  2C59               	goto	l3574
  2308     0C2F                     l3560:
  2309                           
  2310                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1450:    if(width
  2311     0C2F  0845               	movf	sprintf@width,w
  2312     0C30  0446               	iorwf	sprintf@width+1,w
  2313     0C31  1903               	btfsc	3,2
  2314     0C32  2C34               	goto	u4681
  2315     0C33  2C35               	goto	u4680
  2316     0C34                     u4681:
  2317     0C34  2C4A               	goto	l3568
  2318     0C35                     u4680:
  2319     0C35                     l3562:
  2320                           
  2321                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  2322     0C35  0848               	movf	sprintf@sp,w
  2323     0C36  0084               	movwf	4
  2324     0C37  3020               	movlw	32
  2325     0C38  1383               	bcf	3,7	;select IRP bank0
  2326     0C39  0080               	movwf	0
  2327     0C3A                     l3564:
  2328     0C3A  3001               	movlw	1
  2329     0C3B  00FF               	movwf	btemp+1
  2330     0C3C  087F               	movf	btemp+1,w
  2331     0C3D  07C8               	addwf	sprintf@sp,f
  2332     0C3E                     l3566:
  2333     0C3E  30FF               	movlw	255
  2334     0C3F  07C5               	addwf	sprintf@width,f
  2335     0C40  1803               	skipnc
  2336     0C41  0AC6               	incf	sprintf@width+1,f
  2337     0C42  30FF               	movlw	255
  2338     0C43  07C6               	addwf	sprintf@width+1,f
  2339     0C44  0845               	movf	sprintf@width,w
  2340     0C45  0446               	iorwf	sprintf@width+1,w
  2341     0C46  1D03               	btfss	3,2
  2342     0C47  2C49               	goto	u4691
  2343     0C48  2C4A               	goto	u4690
  2344     0C49                     u4691:
  2345     0C49  2C35               	goto	l3562
  2346     0C4A                     u4690:
  2347     0C4A                     l3568:
  2348                           
  2349                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  2350     0C4A  0844               	movf	sprintf@flag,w
  2351     0C4B  3903               	andlw	3
  2352     0C4C  1903               	btfsc	3,2
  2353     0C4D  2C4F               	goto	u4701
  2354     0C4E  2C50               	goto	u4700
  2355     0C4F                     u4701:
  2356     0C4F  2C59               	goto	l3574
  2357     0C50                     u4700:
  2358     0C50                     l3570:
  2359                           
  2360                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2361     0C50  0848               	movf	sprintf@sp,w
  2362     0C51  0084               	movwf	4
  2363     0C52  302D               	movlw	45
  2364     0C53  1383               	bcf	3,7	;select IRP bank0
  2365     0C54  0080               	movwf	0
  2366     0C55                     l3572:
  2367     0C55  3001               	movlw	1
  2368     0C56  00FF               	movwf	btemp+1
  2369     0C57  087F               	movf	btemp+1,w
  2370     0C58  07C8               	addwf	sprintf@sp,f
  2371     0C59                     l3574:
  2372                           
  2373                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2374     0C59  0847               	movf	sprintf@c,w
  2375     0C5A  00C0               	movwf	sprintf@prec
  2376                           
  2377                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2378     0C5B  2C97               	goto	l3582
  2379     0C5C                     l3576:
  2380                           
  2381                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2382     0C5C  300A               	movlw	10
  2383     0C5D  00AD               	movwf	___lwmod@divisor
  2384     0C5E  3000               	movlw	0
  2385     0C5F  00AE               	movwf	___lwmod@divisor+1
  2386     0C60  0840               	movf	sprintf@prec,w
  2387     0C61  00BC               	movwf	??_sprintf
  2388     0C62  073C               	addwf	??_sprintf,w
  2389     0C63  3E12               	addlw	low (_dpowers| (0+32768))
  2390     0C64  0084               	movwf	4
  2391     0C65  3098               	movlw	high (_dpowers| (0+32768))
  2392     0C66  1803               	skipnc
  2393     0C67  3E01               	addlw	1
  2394     0C68  00FF               	movwf	btemp+1
  2395     0C69  160A  158A  2000  120A  158A  	fcall	stringtab
  2396     0C6E  00A6               	movwf	___lwdiv@divisor
  2397     0C6F  160A  158A  2000  120A  158A  	fcall	stringtab
  2398     0C74  00A7               	movwf	___lwdiv@divisor+1
  2399     0C75  0843               	movf	sprintf@val+1,w
  2400     0C76  00A9               	movwf	___lwdiv@dividend+1
  2401     0C77  0842               	movf	sprintf@val,w
  2402     0C78  00A8               	movwf	___lwdiv@dividend
  2403     0C79  160A  118A  247C  120A  158A  	fcall	___lwdiv
  2404     0C7E  1283               	bcf	3,5	;RP0=0, select bank0
  2405     0C7F  1303               	bcf	3,6	;RP1=0, select bank0
  2406     0C80  0827               	movf	?___lwdiv+1,w
  2407     0C81  00B0               	movwf	___lwmod@dividend+1
  2408     0C82  0826               	movf	?___lwdiv,w
  2409     0C83  00AF               	movwf	___lwmod@dividend
  2410     0C84  160A  118A  23B4  120A  158A  	fcall	___lwmod
  2411     0C89  1283               	bcf	3,5	;RP0=0, select bank0
  2412     0C8A  1303               	bcf	3,6	;RP1=0, select bank0
  2413     0C8B  082D               	movf	?___lwmod,w
  2414     0C8C  3E30               	addlw	48
  2415     0C8D  00C7               	movwf	sprintf@c
  2416     0C8E                     l3578:
  2417                           
  2418                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2419     0C8E  0848               	movf	sprintf@sp,w
  2420     0C8F  0084               	movwf	4
  2421     0C90  0847               	movf	sprintf@c,w
  2422     0C91  1383               	bcf	3,7	;select IRP bank0
  2423     0C92  0080               	movwf	0
  2424     0C93                     l3580:
  2425     0C93  3001               	movlw	1
  2426     0C94  00FF               	movwf	btemp+1
  2427     0C95  087F               	movf	btemp+1,w
  2428     0C96  07C8               	addwf	sprintf@sp,f
  2429     0C97                     l3582:
  2430                           
  2431                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2432     0C97  30FF               	movlw	255
  2433     0C98  00FF               	movwf	btemp+1
  2434     0C99  087F               	movf	btemp+1,w
  2435     0C9A  07C0               	addwf	sprintf@prec,f
  2436     0C9B  0A40               	incf	sprintf@prec,w
  2437     0C9C  1D03               	btfss	3,2
  2438     0C9D  2C9F               	goto	u4711
  2439     0C9E  2CA0               	goto	u4710
  2440     0C9F                     u4711:
  2441     0C9F  2C5C               	goto	l3576
  2442     0CA0                     u4710:
  2443     0CA0                     l3584:
  2444                           
  2445                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2446     0CA0  0833               	movf	sprintf@f+1,w
  2447     0CA1  00BD               	movwf	??_sprintf+1
  2448     0CA2  0832               	movf	sprintf@f,w
  2449     0CA3  00BC               	movwf	??_sprintf
  2450     0CA4  0AB2               	incf	sprintf@f,f
  2451     0CA5  1903               	skipnz
  2452     0CA6  0AB3               	incf	sprintf@f+1,f
  2453     0CA7  083D               	movf	??_sprintf+1,w
  2454     0CA8  00FF               	movwf	btemp+1
  2455     0CA9  083C               	movf	??_sprintf,w
  2456     0CAA  0084               	movwf	4
  2457     0CAB  160A  158A  2000  120A  158A  	fcall	stringtab
  2458     0CB0  00C7               	movwf	sprintf@c
  2459     0CB1  0847               	movf	sprintf@c,w
  2460     0CB2  1D03               	btfss	3,2
  2461     0CB3  2CB5               	goto	u4721
  2462     0CB4  2CB6               	goto	u4720
  2463     0CB5                     u4721:
  2464     0CB5  2ACA               	goto	l3476
  2465     0CB6                     u4720:
  2466     0CB6                     l3586:
  2467                           
  2468                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2469     0CB6  0848               	movf	sprintf@sp,w
  2470     0CB7  0084               	movwf	4
  2471     0CB8  1383               	bcf	3,7	;select IRP bank0
  2472     0CB9  0180               	clrf	0
  2473     0CBA                     l405:
  2474     0CBA  0008               	return
  2475     0CBB                     __end_of_sprintf:
  2476                           
  2477                           	psect	text3
  2478     12C1                     __ptext3:	
  2479 ;; *************** function _isdigit *****************
  2480 ;; Defined at:
  2481 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\isdigit.c"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;  c               1    wreg     unsigned char 
  2484 ;; Auto vars:     Size  Location     Type
  2485 ;;  c               1    1[BANK0 ] unsigned char 
  2486 ;; Return value:  Size  Location     Type
  2487 ;;		None               void
  2488 ;; Registers used:
  2489 ;;		wreg, status,2, status,0
  2490 ;; Tracked objects:
  2491 ;;		On entry : 0/0
  2492 ;;		On exit  : 0/0
  2493 ;;		Unchanged: 0/0
  2494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2495 ;;      Params:         0       0       0       0       0
  2496 ;;      Locals:         0       2       0       0       0
  2497 ;;      Temps:          0       0       0       0       0
  2498 ;;      Totals:         0       2       0       0       0
  2499 ;;Total ram usage:        2 bytes
  2500 ;; Hardware stack levels used: 1
  2501 ;; Hardware stack levels required when called: 2
  2502 ;; This function calls:
  2503 ;;		Nothing
  2504 ;; This function is called by:
  2505 ;;		_sprintf
  2506 ;; This function uses a non-reentrant model
  2507 ;;
  2508                           
  2509     12C1                     _isdigit:	
  2510                           ;psect for function _isdigit
  2511                           
  2512                           
  2513                           ;incstack = 0
  2514                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2515                           ;isdigit@c stored from wreg
  2516     12C1  1283               	bcf	3,5	;RP0=0, select bank0
  2517     12C2  1303               	bcf	3,6	;RP1=0, select bank0
  2518     12C3  00A1               	movwf	isdigit@c
  2519     12C4                     l3388:
  2520     12C4  01A0               	clrf	_isdigit$870
  2521     12C5                     l3390:
  2522     12C5  303A               	movlw	58
  2523     12C6  0221               	subwf	isdigit@c,w
  2524     12C7  1803               	skipnc
  2525     12C8  2ACA               	goto	u4381
  2526     12C9  2ACB               	goto	u4380
  2527     12CA                     u4381:
  2528     12CA  2AD3               	goto	l3396
  2529     12CB                     u4380:
  2530     12CB                     l3392:
  2531     12CB  3030               	movlw	48
  2532     12CC  0221               	subwf	isdigit@c,w
  2533     12CD  1C03               	skipc
  2534     12CE  2AD0               	goto	u4391
  2535     12CF  2AD1               	goto	u4390
  2536     12D0                     u4391:
  2537     12D0  2AD3               	goto	l3396
  2538     12D1                     u4390:
  2539     12D1                     l3394:
  2540     12D1  01A0               	clrf	_isdigit$870
  2541     12D2  0AA0               	incf	_isdigit$870,f
  2542     12D3                     l3396:
  2543     12D3  0C20               	rrf	_isdigit$870,w
  2544     12D4                     l862:
  2545     12D4  0008               	return
  2546     12D5                     __end_of_isdigit:
  2547                           
  2548                           	psect	text4
  2549     1354                     __ptext4:	
  2550 ;; *************** function ___wmul *****************
  2551 ;; Defined at:
  2552 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  2553 ;; Parameters:    Size  Location     Type
  2554 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2555 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2556 ;; Auto vars:     Size  Location     Type
  2557 ;;  product         2    4[BANK0 ] unsigned int 
  2558 ;; Return value:  Size  Location     Type
  2559 ;;                  2    0[BANK0 ] unsigned int 
  2560 ;; Registers used:
  2561 ;;		wreg, status,2, status,0
  2562 ;; Tracked objects:
  2563 ;;		On entry : 0/0
  2564 ;;		On exit  : 0/0
  2565 ;;		Unchanged: 0/0
  2566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2567 ;;      Params:         0       4       0       0       0
  2568 ;;      Locals:         0       2       0       0       0
  2569 ;;      Temps:          0       0       0       0       0
  2570 ;;      Totals:         0       6       0       0       0
  2571 ;;Total ram usage:        6 bytes
  2572 ;; Hardware stack levels used: 1
  2573 ;; Hardware stack levels required when called: 2
  2574 ;; This function calls:
  2575 ;;		Nothing
  2576 ;; This function is called by:
  2577 ;;		_main
  2578 ;;		_sprintf
  2579 ;; This function uses a non-reentrant model
  2580 ;;
  2581                           
  2582     1354                     ___wmul:	
  2583                           ;psect for function ___wmul
  2584                           
  2585     1354                     l3400:	
  2586                           ;incstack = 0
  2587                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2588                           
  2589     1354  1283               	bcf	3,5	;RP0=0, select bank0
  2590     1355  1303               	bcf	3,6	;RP1=0, select bank0
  2591     1356  01A4               	clrf	___wmul@product
  2592     1357  01A5               	clrf	___wmul@product+1
  2593     1358                     l3402:
  2594     1358  1C20               	btfss	___wmul@multiplier,0
  2595     1359  2B5B               	goto	u4401
  2596     135A  2B5C               	goto	u4400
  2597     135B                     u4401:
  2598     135B  2B62               	goto	l409
  2599     135C                     u4400:
  2600     135C                     l3404:
  2601     135C  0822               	movf	___wmul@multiplicand,w
  2602     135D  07A4               	addwf	___wmul@product,f
  2603     135E  1803               	skipnc
  2604     135F  0AA5               	incf	___wmul@product+1,f
  2605     1360  0823               	movf	___wmul@multiplicand+1,w
  2606     1361  07A5               	addwf	___wmul@product+1,f
  2607     1362                     l409:
  2608     1362  3001               	movlw	1
  2609     1363                     u4415:
  2610     1363  1003               	clrc
  2611     1364  0DA2               	rlf	___wmul@multiplicand,f
  2612     1365  0DA3               	rlf	___wmul@multiplicand+1,f
  2613     1366  3EFF               	addlw	-1
  2614     1367  1D03               	skipz
  2615     1368  2B63               	goto	u4415
  2616     1369                     l3406:
  2617     1369  3001               	movlw	1
  2618     136A                     u4425:
  2619     136A  1003               	clrc
  2620     136B  0CA1               	rrf	___wmul@multiplier+1,f
  2621     136C  0CA0               	rrf	___wmul@multiplier,f
  2622     136D  3EFF               	addlw	-1
  2623     136E  1D03               	skipz
  2624     136F  2B6A               	goto	u4425
  2625     1370                     l3408:
  2626     1370  0820               	movf	___wmul@multiplier,w
  2627     1371  0421               	iorwf	___wmul@multiplier+1,w
  2628     1372  1D03               	btfss	3,2
  2629     1373  2B75               	goto	u4431
  2630     1374  2B76               	goto	u4430
  2631     1375                     u4431:
  2632     1375  2B58               	goto	l3402
  2633     1376                     u4430:
  2634     1376                     l3410:
  2635     1376  0825               	movf	___wmul@product+1,w
  2636     1377  00A1               	movwf	?___wmul+1
  2637     1378  0824               	movf	___wmul@product,w
  2638     1379  00A0               	movwf	?___wmul
  2639     137A                     l411:
  2640     137A  0008               	return
  2641     137B                     __end_of___wmul:
  2642                           
  2643                           	psect	text5
  2644     13B4                     __ptext5:	
  2645 ;; *************** function ___lwmod *****************
  2646 ;; Defined at:
  2647 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;  divisor         2   13[BANK0 ] unsigned int 
  2650 ;;  dividend        2   15[BANK0 ] unsigned int 
  2651 ;; Auto vars:     Size  Location     Type
  2652 ;;  counter         1   17[BANK0 ] unsigned char 
  2653 ;; Return value:  Size  Location     Type
  2654 ;;                  2   13[BANK0 ] unsigned int 
  2655 ;; Registers used:
  2656 ;;		wreg, status,2, status,0, btemp+1
  2657 ;; Tracked objects:
  2658 ;;		On entry : 0/0
  2659 ;;		On exit  : 0/0
  2660 ;;		Unchanged: 0/0
  2661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2662 ;;      Params:         0       4       0       0       0
  2663 ;;      Locals:         0       1       0       0       0
  2664 ;;      Temps:          0       0       0       0       0
  2665 ;;      Totals:         0       5       0       0       0
  2666 ;;Total ram usage:        5 bytes
  2667 ;; Hardware stack levels used: 1
  2668 ;; Hardware stack levels required when called: 2
  2669 ;; This function calls:
  2670 ;;		Nothing
  2671 ;; This function is called by:
  2672 ;;		_main
  2673 ;;		_sprintf
  2674 ;; This function uses a non-reentrant model
  2675 ;;
  2676                           
  2677     13B4                     ___lwmod:	
  2678                           ;psect for function ___lwmod
  2679                           
  2680     13B4                     l2228:	
  2681                           ;incstack = 0
  2682                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  2683                           
  2684     13B4  1283               	bcf	3,5	;RP0=0, select bank0
  2685     13B5  1303               	bcf	3,6	;RP1=0, select bank0
  2686     13B6  082D               	movf	___lwmod@divisor,w
  2687     13B7  042E               	iorwf	___lwmod@divisor+1,w
  2688     13B8  1903               	btfsc	3,2
  2689     13B9  2BBB               	goto	u2361
  2690     13BA  2BBC               	goto	u2360
  2691     13BB                     u2361:
  2692     13BB  2BEB               	goto	l2246
  2693     13BC                     u2360:
  2694     13BC                     l2230:
  2695     13BC  01B1               	clrf	___lwmod@counter
  2696     13BD  0AB1               	incf	___lwmod@counter,f
  2697     13BE  2BCA               	goto	l2236
  2698     13BF                     l2232:
  2699     13BF  3001               	movlw	1
  2700     13C0                     u2375:
  2701     13C0  1003               	clrc
  2702     13C1  0DAD               	rlf	___lwmod@divisor,f
  2703     13C2  0DAE               	rlf	___lwmod@divisor+1,f
  2704     13C3  3EFF               	addlw	-1
  2705     13C4  1D03               	skipz
  2706     13C5  2BC0               	goto	u2375
  2707     13C6                     l2234:
  2708     13C6  3001               	movlw	1
  2709     13C7  00FF               	movwf	btemp+1
  2710     13C8  087F               	movf	btemp+1,w
  2711     13C9  07B1               	addwf	___lwmod@counter,f
  2712     13CA                     l2236:
  2713     13CA  1FAE               	btfss	___lwmod@divisor+1,7
  2714     13CB  2BCD               	goto	u2381
  2715     13CC  2BCE               	goto	u2380
  2716     13CD                     u2381:
  2717     13CD  2BBF               	goto	l2232
  2718     13CE                     u2380:
  2719     13CE                     l2238:
  2720     13CE  082E               	movf	___lwmod@divisor+1,w
  2721     13CF  0230               	subwf	___lwmod@dividend+1,w
  2722     13D0  1D03               	skipz
  2723     13D1  2BD4               	goto	u2395
  2724     13D2  082D               	movf	___lwmod@divisor,w
  2725     13D3  022F               	subwf	___lwmod@dividend,w
  2726     13D4                     u2395:
  2727     13D4  1C03               	skipc
  2728     13D5  2BD7               	goto	u2391
  2729     13D6  2BD8               	goto	u2390
  2730     13D7                     u2391:
  2731     13D7  2BDE               	goto	l2242
  2732     13D8                     u2390:
  2733     13D8                     l2240:
  2734     13D8  082D               	movf	___lwmod@divisor,w
  2735     13D9  02AF               	subwf	___lwmod@dividend,f
  2736     13DA  082E               	movf	___lwmod@divisor+1,w
  2737     13DB  1C03               	skipc
  2738     13DC  03B0               	decf	___lwmod@dividend+1,f
  2739     13DD  02B0               	subwf	___lwmod@dividend+1,f
  2740     13DE                     l2242:
  2741     13DE  3001               	movlw	1
  2742     13DF                     u2405:
  2743     13DF  1003               	clrc
  2744     13E0  0CAE               	rrf	___lwmod@divisor+1,f
  2745     13E1  0CAD               	rrf	___lwmod@divisor,f
  2746     13E2  3EFF               	addlw	-1
  2747     13E3  1D03               	skipz
  2748     13E4  2BDF               	goto	u2405
  2749     13E5                     l2244:
  2750     13E5  3001               	movlw	1
  2751     13E6  02B1               	subwf	___lwmod@counter,f
  2752     13E7  1D03               	btfss	3,2
  2753     13E8  2BEA               	goto	u2411
  2754     13E9  2BEB               	goto	u2410
  2755     13EA                     u2411:
  2756     13EA  2BCE               	goto	l2238
  2757     13EB                     u2410:
  2758     13EB                     l2246:
  2759     13EB  0830               	movf	___lwmod@dividend+1,w
  2760     13EC  00AE               	movwf	?___lwmod+1
  2761     13ED  082F               	movf	___lwmod@dividend,w
  2762     13EE  00AD               	movwf	?___lwmod
  2763     13EF                     l691:
  2764     13EF  0008               	return
  2765     13F0                     __end_of___lwmod:
  2766                           
  2767                           	psect	text6
  2768     147C                     __ptext6:	
  2769 ;; *************** function ___lwdiv *****************
  2770 ;; Defined at:
  2771 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  2772 ;; Parameters:    Size  Location     Type
  2773 ;;  divisor         2    6[BANK0 ] unsigned int 
  2774 ;;  dividend        2    8[BANK0 ] unsigned int 
  2775 ;; Auto vars:     Size  Location     Type
  2776 ;;  quotient        2   10[BANK0 ] unsigned int 
  2777 ;;  counter         1   12[BANK0 ] unsigned char 
  2778 ;; Return value:  Size  Location     Type
  2779 ;;                  2    6[BANK0 ] unsigned int 
  2780 ;; Registers used:
  2781 ;;		wreg, status,2, status,0, btemp+1
  2782 ;; Tracked objects:
  2783 ;;		On entry : 0/0
  2784 ;;		On exit  : 0/0
  2785 ;;		Unchanged: 0/0
  2786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2787 ;;      Params:         0       4       0       0       0
  2788 ;;      Locals:         0       3       0       0       0
  2789 ;;      Temps:          0       0       0       0       0
  2790 ;;      Totals:         0       7       0       0       0
  2791 ;;Total ram usage:        7 bytes
  2792 ;; Hardware stack levels used: 1
  2793 ;; Hardware stack levels required when called: 2
  2794 ;; This function calls:
  2795 ;;		Nothing
  2796 ;; This function is called by:
  2797 ;;		_main
  2798 ;;		_sprintf
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802     147C                     ___lwdiv:	
  2803                           ;psect for function ___lwdiv
  2804                           
  2805     147C                     l2202:	
  2806                           ;incstack = 0
  2807                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  2808                           
  2809     147C  1283               	bcf	3,5	;RP0=0, select bank0
  2810     147D  1303               	bcf	3,6	;RP1=0, select bank0
  2811     147E  01AA               	clrf	___lwdiv@quotient
  2812     147F  01AB               	clrf	___lwdiv@quotient+1
  2813     1480                     l2204:
  2814     1480  0826               	movf	___lwdiv@divisor,w
  2815     1481  0427               	iorwf	___lwdiv@divisor+1,w
  2816     1482  1903               	btfsc	3,2
  2817     1483  2C85               	goto	u2291
  2818     1484  2C86               	goto	u2290
  2819     1485                     u2291:
  2820     1485  2CBD               	goto	l2224
  2821     1486                     u2290:
  2822     1486                     l2206:
  2823     1486  01AC               	clrf	___lwdiv@counter
  2824     1487  0AAC               	incf	___lwdiv@counter,f
  2825     1488  2C94               	goto	l2212
  2826     1489                     l2208:
  2827     1489  3001               	movlw	1
  2828     148A                     u2305:
  2829     148A  1003               	clrc
  2830     148B  0DA6               	rlf	___lwdiv@divisor,f
  2831     148C  0DA7               	rlf	___lwdiv@divisor+1,f
  2832     148D  3EFF               	addlw	-1
  2833     148E  1D03               	skipz
  2834     148F  2C8A               	goto	u2305
  2835     1490                     l2210:
  2836     1490  3001               	movlw	1
  2837     1491  00FF               	movwf	btemp+1
  2838     1492  087F               	movf	btemp+1,w
  2839     1493  07AC               	addwf	___lwdiv@counter,f
  2840     1494                     l2212:
  2841     1494  1FA7               	btfss	___lwdiv@divisor+1,7
  2842     1495  2C97               	goto	u2311
  2843     1496  2C98               	goto	u2310
  2844     1497                     u2311:
  2845     1497  2C89               	goto	l2208
  2846     1498                     u2310:
  2847     1498                     l2214:
  2848     1498  3001               	movlw	1
  2849     1499                     u2325:
  2850     1499  1003               	clrc
  2851     149A  0DAA               	rlf	___lwdiv@quotient,f
  2852     149B  0DAB               	rlf	___lwdiv@quotient+1,f
  2853     149C  3EFF               	addlw	-1
  2854     149D  1D03               	skipz
  2855     149E  2C99               	goto	u2325
  2856     149F  0827               	movf	___lwdiv@divisor+1,w
  2857     14A0  0229               	subwf	___lwdiv@dividend+1,w
  2858     14A1  1D03               	skipz
  2859     14A2  2CA5               	goto	u2335
  2860     14A3  0826               	movf	___lwdiv@divisor,w
  2861     14A4  0228               	subwf	___lwdiv@dividend,w
  2862     14A5                     u2335:
  2863     14A5  1C03               	skipc
  2864     14A6  2CA8               	goto	u2331
  2865     14A7  2CA9               	goto	u2330
  2866     14A8                     u2331:
  2867     14A8  2CB0               	goto	l2220
  2868     14A9                     u2330:
  2869     14A9                     l2216:
  2870     14A9  0826               	movf	___lwdiv@divisor,w
  2871     14AA  02A8               	subwf	___lwdiv@dividend,f
  2872     14AB  0827               	movf	___lwdiv@divisor+1,w
  2873     14AC  1C03               	skipc
  2874     14AD  03A9               	decf	___lwdiv@dividend+1,f
  2875     14AE  02A9               	subwf	___lwdiv@dividend+1,f
  2876     14AF                     l2218:
  2877     14AF  142A               	bsf	___lwdiv@quotient,0
  2878     14B0                     l2220:
  2879     14B0  3001               	movlw	1
  2880     14B1                     u2345:
  2881     14B1  1003               	clrc
  2882     14B2  0CA7               	rrf	___lwdiv@divisor+1,f
  2883     14B3  0CA6               	rrf	___lwdiv@divisor,f
  2884     14B4  3EFF               	addlw	-1
  2885     14B5  1D03               	skipz
  2886     14B6  2CB1               	goto	u2345
  2887     14B7                     l2222:
  2888     14B7  3001               	movlw	1
  2889     14B8  02AC               	subwf	___lwdiv@counter,f
  2890     14B9  1D03               	btfss	3,2
  2891     14BA  2CBC               	goto	u2351
  2892     14BB  2CBD               	goto	u2350
  2893     14BC                     u2351:
  2894     14BC  2C98               	goto	l2214
  2895     14BD                     u2350:
  2896     14BD                     l2224:
  2897     14BD  082B               	movf	___lwdiv@quotient+1,w
  2898     14BE  00A7               	movwf	?___lwdiv+1
  2899     14BF  082A               	movf	___lwdiv@quotient,w
  2900     14C0  00A6               	movwf	?___lwdiv
  2901     14C1                     l681:
  2902     14C1  0008               	return
  2903     14C2                     __end_of___lwdiv:
  2904                           
  2905                           	psect	text7
  2906     07E6                     __ptext7:	
  2907 ;; *************** function _readEEPROM *****************
  2908 ;; Defined at:
  2909 ;;		line 53 in file "main.c"
  2910 ;; Parameters:    Size  Location     Type
  2911 ;;  address         2    0[BANK0 ] unsigned int 
  2912 ;; Auto vars:     Size  Location     Type
  2913 ;;		None
  2914 ;; Return value:  Size  Location     Type
  2915 ;;                  2    0[BANK0 ] unsigned int 
  2916 ;; Registers used:
  2917 ;;		wreg
  2918 ;; Tracked objects:
  2919 ;;		On entry : 0/0
  2920 ;;		On exit  : 0/0
  2921 ;;		Unchanged: 0/0
  2922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2923 ;;      Params:         0       2       0       0       0
  2924 ;;      Locals:         0       0       0       0       0
  2925 ;;      Temps:          0       2       0       0       0
  2926 ;;      Totals:         0       4       0       0       0
  2927 ;;Total ram usage:        4 bytes
  2928 ;; Hardware stack levels used: 1
  2929 ;; Hardware stack levels required when called: 2
  2930 ;; This function calls:
  2931 ;;		Nothing
  2932 ;; This function is called by:
  2933 ;;		_main
  2934 ;; This function uses a non-reentrant model
  2935 ;;
  2936                           
  2937     07E6                     _readEEPROM:	
  2938                           ;psect for function _readEEPROM
  2939                           
  2940     07E6                     l3468:	
  2941                           ;incstack = 0
  2942                           ; Regs used in _readEEPROM: [wreg]
  2943                           
  2944                           
  2945                           ;main.c: 55:     EEADR = address;
  2946     07E6  1283               	bcf	3,5	;RP0=0, select bank0
  2947     07E7  1303               	bcf	3,6	;RP1=0, select bank0
  2948     07E8  0820               	movf	readEEPROM@address,w
  2949     07E9  1283               	bcf	3,5	;RP0=0, select bank2
  2950     07EA  1703               	bsf	3,6	;RP1=1, select bank2
  2951     07EB  008D               	movwf	13	;volatile
  2952     07EC                     l3470:
  2953                           
  2954                           ;main.c: 56:     RD = 1;
  2955     07EC  1683               	bsf	3,5	;RP0=1, select bank3
  2956     07ED  1703               	bsf	3,6	;RP1=1, select bank3
  2957     07EE  140C               	bsf	12,0	;volsfr
  2958                           
  2959                           ;main.c: 57:     return EEDATA;
  2960     07EF  1283               	bcf	3,5	;RP0=0, select bank2
  2961     07F0  1703               	bsf	3,6	;RP1=1, select bank2
  2962     07F1  080C               	movf	12,w	;volatile
  2963     07F2  1283               	bcf	3,5	;RP0=0, select bank0
  2964     07F3  1303               	bcf	3,6	;RP1=0, select bank0
  2965     07F4  00A2               	movwf	??_readEEPROM
  2966     07F5  01A3               	clrf	??_readEEPROM+1
  2967     07F6  0822               	movf	??_readEEPROM,w
  2968     07F7  00A0               	movwf	?_readEEPROM
  2969     07F8  0823               	movf	??_readEEPROM+1,w
  2970     07F9  00A1               	movwf	?_readEEPROM+1
  2971     07FA                     l144:
  2972     07FA  0008               	return
  2973     07FB                     __end_of_readEEPROM:
  2974                           
  2975                           	psect	text8
  2976     082F                     __ptext8:	
  2977 ;; *************** function ___xxtofl *****************
  2978 ;; Defined at:
  2979 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\xxtofl.c"
  2980 ;; Parameters:    Size  Location     Type
  2981 ;;  sign            1    wreg     unsigned char 
  2982 ;;  val             4    0[BANK0 ] long 
  2983 ;; Auto vars:     Size  Location     Type
  2984 ;;  sign            1    8[BANK0 ] unsigned char 
  2985 ;;  arg             4   10[BANK0 ] unsigned long 
  2986 ;;  exp             1    9[BANK0 ] unsigned char 
  2987 ;; Return value:  Size  Location     Type
  2988 ;;                  4    0[BANK0 ] unsigned char 
  2989 ;; Registers used:
  2990 ;;		wreg, status,2, status,0, btemp+1
  2991 ;; Tracked objects:
  2992 ;;		On entry : 0/0
  2993 ;;		On exit  : 0/0
  2994 ;;		Unchanged: 0/0
  2995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2996 ;;      Params:         0       4       0       0       0
  2997 ;;      Locals:         0       6       0       0       0
  2998 ;;      Temps:          0       4       0       0       0
  2999 ;;      Totals:         0      14       0       0       0
  3000 ;;Total ram usage:       14 bytes
  3001 ;; Hardware stack levels used: 1
  3002 ;; Hardware stack levels required when called: 2
  3003 ;; This function calls:
  3004 ;;		Nothing
  3005 ;; This function is called by:
  3006 ;;		_main
  3007 ;; This function uses a non-reentrant model
  3008 ;;
  3009                           
  3010     082F                     ___xxtofl:	
  3011                           ;psect for function ___xxtofl
  3012                           
  3013                           
  3014                           ;incstack = 0
  3015                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  3016                           ;___xxtofl@sign stored from wreg
  3017     082F  1283               	bcf	3,5	;RP0=0, select bank0
  3018     0830  1303               	bcf	3,6	;RP1=0, select bank0
  3019     0831  00A8               	movwf	___xxtofl@sign
  3020     0832                     l2790:
  3021     0832  0828               	movf	___xxtofl@sign,w
  3022     0833  1903               	btfsc	3,2
  3023     0834  2836               	goto	u3531
  3024     0835  2837               	goto	u3530
  3025     0836                     u3531:
  3026     0836  284B               	goto	l2796
  3027     0837                     u3530:
  3028     0837                     l2792:
  3029     0837  1FA3               	btfss	___xxtofl@val+3,7
  3030     0838  283A               	goto	u3541
  3031     0839  283B               	goto	u3540
  3032     083A                     u3541:
  3033     083A  284B               	goto	l2796
  3034     083B                     u3540:
  3035     083B                     l2794:
  3036     083B  0920               	comf	___xxtofl@val,w
  3037     083C  00AA               	movwf	___xxtofl@arg
  3038     083D  0921               	comf	___xxtofl@val+1,w
  3039     083E  00AB               	movwf	___xxtofl@arg+1
  3040     083F  0922               	comf	___xxtofl@val+2,w
  3041     0840  00AC               	movwf	___xxtofl@arg+2
  3042     0841  0923               	comf	___xxtofl@val+3,w
  3043     0842  00AD               	movwf	___xxtofl@arg+3
  3044     0843  0AAA               	incf	___xxtofl@arg,f
  3045     0844  1903               	skipnz
  3046     0845  0AAB               	incf	___xxtofl@arg+1,f
  3047     0846  1903               	skipnz
  3048     0847  0AAC               	incf	___xxtofl@arg+2,f
  3049     0848  1903               	skipnz
  3050     0849  0AAD               	incf	___xxtofl@arg+3,f
  3051     084A  2853               	goto	l842
  3052     084B                     l2796:
  3053     084B  0823               	movf	___xxtofl@val+3,w
  3054     084C  00AD               	movwf	___xxtofl@arg+3
  3055     084D  0822               	movf	___xxtofl@val+2,w
  3056     084E  00AC               	movwf	___xxtofl@arg+2
  3057     084F  0821               	movf	___xxtofl@val+1,w
  3058     0850  00AB               	movwf	___xxtofl@arg+1
  3059     0851  0820               	movf	___xxtofl@val,w
  3060     0852  00AA               	movwf	___xxtofl@arg
  3061     0853                     l842:
  3062     0853  0823               	movf	___xxtofl@val+3,w
  3063     0854  0422               	iorwf	___xxtofl@val+2,w
  3064     0855  0421               	iorwf	___xxtofl@val+1,w
  3065     0856  0420               	iorwf	___xxtofl@val,w
  3066     0857  1D03               	skipz
  3067     0858  285A               	goto	u3551
  3068     0859  285B               	goto	u3550
  3069     085A                     u3551:
  3070     085A  2864               	goto	l2802
  3071     085B                     u3550:
  3072     085B                     l2798:
  3073     085B  3000               	movlw	0
  3074     085C  00A3               	movwf	?___xxtofl+3
  3075     085D  3000               	movlw	0
  3076     085E  00A2               	movwf	?___xxtofl+2
  3077     085F  3000               	movlw	0
  3078     0860  00A1               	movwf	?___xxtofl+1
  3079     0861  3000               	movlw	0
  3080     0862  00A0               	movwf	?___xxtofl
  3081     0863  28E8               	goto	l844
  3082     0864                     l2802:
  3083     0864  3096               	movlw	150
  3084     0865  00A9               	movwf	___xxtofl@exp
  3085     0866  2874               	goto	l2808
  3086     0867                     l2804:
  3087     0867  3001               	movlw	1
  3088     0868  00FF               	movwf	btemp+1
  3089     0869  087F               	movf	btemp+1,w
  3090     086A  07A9               	addwf	___xxtofl@exp,f
  3091     086B                     l2806:
  3092     086B  3001               	movlw	1
  3093     086C                     u3565:
  3094     086C  1003               	clrc
  3095     086D  0CAD               	rrf	___xxtofl@arg+3,f
  3096     086E  0CAC               	rrf	___xxtofl@arg+2,f
  3097     086F  0CAB               	rrf	___xxtofl@arg+1,f
  3098     0870  0CAA               	rrf	___xxtofl@arg,f
  3099     0871  3EFF               	addlw	-1
  3100     0872  1D03               	skipz
  3101     0873  286C               	goto	u3565
  3102     0874                     l2808:
  3103     0874  30FE               	movlw	254
  3104     0875  052D               	andwf	___xxtofl@arg+3,w
  3105     0876  1D03               	btfss	3,2
  3106     0877  2879               	goto	u3571
  3107     0878  287A               	goto	u3570
  3108     0879                     u3571:
  3109     0879  2867               	goto	l2804
  3110     087A                     u3570:
  3111     087A  2896               	goto	l2816
  3112     087B                     l2810:
  3113     087B  3001               	movlw	1
  3114     087C  00FF               	movwf	btemp+1
  3115     087D  087F               	movf	btemp+1,w
  3116     087E  07A9               	addwf	___xxtofl@exp,f
  3117     087F                     l2812:
  3118     087F  3001               	movlw	1
  3119     0880  07AA               	addwf	___xxtofl@arg,f
  3120     0881  3000               	movlw	0
  3121     0882  1803               	skipnc
  3122     0883  3001               	movlw	1
  3123     0884  07AB               	addwf	___xxtofl@arg+1,f
  3124     0885  3000               	movlw	0
  3125     0886  1803               	skipnc
  3126     0887  3001               	movlw	1
  3127     0888  07AC               	addwf	___xxtofl@arg+2,f
  3128     0889  3000               	movlw	0
  3129     088A  1803               	skipnc
  3130     088B  3001               	movlw	1
  3131     088C  07AD               	addwf	___xxtofl@arg+3,f
  3132     088D                     l2814:
  3133     088D  3001               	movlw	1
  3134     088E                     u3585:
  3135     088E  1003               	clrc
  3136     088F  0CAD               	rrf	___xxtofl@arg+3,f
  3137     0890  0CAC               	rrf	___xxtofl@arg+2,f
  3138     0891  0CAB               	rrf	___xxtofl@arg+1,f
  3139     0892  0CAA               	rrf	___xxtofl@arg,f
  3140     0893  3EFF               	addlw	-1
  3141     0894  1D03               	skipz
  3142     0895  288E               	goto	u3585
  3143     0896                     l2816:
  3144     0896  30FF               	movlw	255
  3145     0897  052D               	andwf	___xxtofl@arg+3,w
  3146     0898  1D03               	btfss	3,2
  3147     0899  289B               	goto	u3591
  3148     089A  289C               	goto	u3590
  3149     089B                     u3591:
  3150     089B  287B               	goto	l2810
  3151     089C                     u3590:
  3152     089C  28A8               	goto	l2820
  3153     089D                     l2818:
  3154     089D  3001               	movlw	1
  3155     089E  02A9               	subwf	___xxtofl@exp,f
  3156     089F  3001               	movlw	1
  3157     08A0  00A4               	movwf	??___xxtofl
  3158     08A1                     u3605:
  3159     08A1  1003               	clrc
  3160     08A2  0DAA               	rlf	___xxtofl@arg,f
  3161     08A3  0DAB               	rlf	___xxtofl@arg+1,f
  3162     08A4  0DAC               	rlf	___xxtofl@arg+2,f
  3163     08A5  0DAD               	rlf	___xxtofl@arg+3,f
  3164     08A6  0BA4               	decfsz	??___xxtofl,f
  3165     08A7  28A1               	goto	u3605
  3166     08A8                     l2820:
  3167     08A8  1BAC               	btfsc	___xxtofl@arg+2,7
  3168     08A9  28AB               	goto	u3611
  3169     08AA  28AC               	goto	u3610
  3170     08AB                     u3611:
  3171     08AB  28B2               	goto	l855
  3172     08AC                     u3610:
  3173     08AC                     l2822:
  3174     08AC  3002               	movlw	2
  3175     08AD  0229               	subwf	___xxtofl@exp,w
  3176     08AE  1803               	skipnc
  3177     08AF  28B1               	goto	u3621
  3178     08B0  28B2               	goto	u3620
  3179     08B1                     u3621:
  3180     08B1  289D               	goto	l2818
  3181     08B2                     u3620:
  3182     08B2                     l855:
  3183     08B2  1829               	btfsc	___xxtofl@exp,0
  3184     08B3  28B5               	goto	u3631
  3185     08B4  28B6               	goto	u3630
  3186     08B5                     u3631:
  3187     08B5  28BE               	goto	l856
  3188     08B6                     u3630:
  3189     08B6                     l2824:
  3190     08B6  30FF               	movlw	255
  3191     08B7  05AA               	andwf	___xxtofl@arg,f
  3192     08B8  30FF               	movlw	255
  3193     08B9  05AB               	andwf	___xxtofl@arg+1,f
  3194     08BA  307F               	movlw	127
  3195     08BB  05AC               	andwf	___xxtofl@arg+2,f
  3196     08BC  30FF               	movlw	255
  3197     08BD  05AD               	andwf	___xxtofl@arg+3,f
  3198     08BE                     l856:
  3199     08BE  1003               	clrc
  3200     08BF  0CA9               	rrf	___xxtofl@exp,f
  3201     08C0                     l2826:
  3202     08C0  0829               	movf	___xxtofl@exp,w
  3203     08C1  00A4               	movwf	??___xxtofl
  3204     08C2  01A5               	clrf	??___xxtofl+1
  3205     08C3  01A6               	clrf	??___xxtofl+2
  3206     08C4  01A7               	clrf	??___xxtofl+3
  3207     08C5  3018               	movlw	24
  3208     08C6                     u3645:
  3209     08C6  1003               	clrc
  3210     08C7  0DA4               	rlf	??___xxtofl,f
  3211     08C8  0DA5               	rlf	??___xxtofl+1,f
  3212     08C9  0DA6               	rlf	??___xxtofl+2,f
  3213     08CA  0DA7               	rlf	??___xxtofl+3,f
  3214     08CB                     u3640:
  3215     08CB  3EFF               	addlw	-1
  3216     08CC  1D03               	skipz
  3217     08CD  28C6               	goto	u3645
  3218     08CE  0824               	movf	??___xxtofl,w
  3219     08CF  04AA               	iorwf	___xxtofl@arg,f
  3220     08D0  0825               	movf	??___xxtofl+1,w
  3221     08D1  04AB               	iorwf	___xxtofl@arg+1,f
  3222     08D2  0826               	movf	??___xxtofl+2,w
  3223     08D3  04AC               	iorwf	___xxtofl@arg+2,f
  3224     08D4  0827               	movf	??___xxtofl+3,w
  3225     08D5  04AD               	iorwf	___xxtofl@arg+3,f
  3226     08D6                     l2828:
  3227     08D6  0828               	movf	___xxtofl@sign,w
  3228     08D7  1903               	btfsc	3,2
  3229     08D8  28DA               	goto	u3651
  3230     08D9  28DB               	goto	u3650
  3231     08DA                     u3651:
  3232     08DA  28E0               	goto	l2834
  3233     08DB                     u3650:
  3234     08DB                     l2830:
  3235     08DB  1FA3               	btfss	___xxtofl@val+3,7
  3236     08DC  28DE               	goto	u3661
  3237     08DD  28DF               	goto	u3660
  3238     08DE                     u3661:
  3239     08DE  28E0               	goto	l2834
  3240     08DF                     u3660:
  3241     08DF                     l2832:
  3242     08DF  17AD               	bsf	___xxtofl@arg+3,7
  3243     08E0                     l2834:
  3244     08E0  082D               	movf	___xxtofl@arg+3,w
  3245     08E1  00A3               	movwf	?___xxtofl+3
  3246     08E2  082C               	movf	___xxtofl@arg+2,w
  3247     08E3  00A2               	movwf	?___xxtofl+2
  3248     08E4  082B               	movf	___xxtofl@arg+1,w
  3249     08E5  00A1               	movwf	?___xxtofl+1
  3250     08E6  082A               	movf	___xxtofl@arg,w
  3251     08E7  00A0               	movwf	?___xxtofl
  3252     08E8                     l844:
  3253     08E8  0008               	return
  3254     08E9                     __end_of___xxtofl:
  3255                           
  3256                           	psect	text9
  3257     15B9                     __ptext9:	
  3258 ;; *************** function ___fltol *****************
  3259 ;; Defined at:
  3260 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fltol.c"
  3261 ;; Parameters:    Size  Location     Type
  3262 ;;  f1              4    0[BANK0 ] unsigned char 
  3263 ;; Auto vars:     Size  Location     Type
  3264 ;;  exp1            1    9[BANK0 ] unsigned char 
  3265 ;;  sign1           1    8[BANK0 ] unsigned char 
  3266 ;; Return value:  Size  Location     Type
  3267 ;;                  4    0[BANK0 ] long 
  3268 ;; Registers used:
  3269 ;;		wreg, status,2, status,0, btemp+1
  3270 ;; Tracked objects:
  3271 ;;		On entry : 0/0
  3272 ;;		On exit  : 0/0
  3273 ;;		Unchanged: 0/0
  3274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3275 ;;      Params:         0       4       0       0       0
  3276 ;;      Locals:         0       2       0       0       0
  3277 ;;      Temps:          0       4       0       0       0
  3278 ;;      Totals:         0      10       0       0       0
  3279 ;;Total ram usage:       10 bytes
  3280 ;; Hardware stack levels used: 1
  3281 ;; Hardware stack levels required when called: 2
  3282 ;; This function calls:
  3283 ;;		Nothing
  3284 ;; This function is called by:
  3285 ;;		_main
  3286 ;; This function uses a non-reentrant model
  3287 ;;
  3288                           
  3289     15B9                     ___fltol:	
  3290                           ;psect for function ___fltol
  3291                           
  3292     15B9                     l3606:	
  3293                           ;incstack = 0
  3294                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  3295                           
  3296     15B9  1003               	clrc
  3297     15BA  1283               	bcf	3,5	;RP0=0, select bank0
  3298     15BB  1303               	bcf	3,6	;RP1=0, select bank0
  3299     15BC  0D22               	rlf	___fltol@f1+2,w
  3300     15BD  0D23               	rlf	___fltol@f1+3,w
  3301     15BE  00A9               	movwf	___fltol@exp1
  3302     15BF  0829               	movf	___fltol@exp1,w
  3303     15C0  1D03               	btfss	3,2
  3304     15C1  2DC3               	goto	u4761
  3305     15C2  2DC4               	goto	u4760
  3306     15C3                     u4761:
  3307     15C3  2DCD               	goto	l3612
  3308     15C4                     u4760:
  3309     15C4                     l3608:
  3310     15C4  3000               	movlw	0
  3311     15C5  00A3               	movwf	?___fltol+3
  3312     15C6  3000               	movlw	0
  3313     15C7  00A2               	movwf	?___fltol+2
  3314     15C8  3000               	movlw	0
  3315     15C9  00A1               	movwf	?___fltol+1
  3316     15CA  3000               	movlw	0
  3317     15CB  00A0               	movwf	?___fltol
  3318     15CC  2E30               	goto	l595
  3319     15CD                     l3612:
  3320     15CD  0820               	movf	___fltol@f1,w
  3321     15CE  00A4               	movwf	??___fltol
  3322     15CF  0821               	movf	___fltol@f1+1,w
  3323     15D0  00A5               	movwf	??___fltol+1
  3324     15D1  0822               	movf	___fltol@f1+2,w
  3325     15D2  00A6               	movwf	??___fltol+2
  3326     15D3  0823               	movf	___fltol@f1+3,w
  3327     15D4  00A7               	movwf	??___fltol+3
  3328     15D5  301F               	movlw	31
  3329     15D6                     u4775:
  3330     15D6  1003               	clrc
  3331     15D7  0CA7               	rrf	??___fltol+3,f
  3332     15D8  0CA6               	rrf	??___fltol+2,f
  3333     15D9  0CA5               	rrf	??___fltol+1,f
  3334     15DA  0CA4               	rrf	??___fltol,f
  3335     15DB                     u4770:
  3336     15DB  3EFF               	addlw	-1
  3337     15DC  1D03               	skipz
  3338     15DD  2DD6               	goto	u4775
  3339     15DE  0824               	movf	??___fltol,w
  3340     15DF  00A8               	movwf	___fltol@sign1
  3341     15E0                     l3614:
  3342     15E0  17A2               	bsf	___fltol@f1+2,7
  3343     15E1                     l3616:
  3344     15E1  30FF               	movlw	255
  3345     15E2  05A0               	andwf	___fltol@f1,f
  3346     15E3  30FF               	movlw	255
  3347     15E4  05A1               	andwf	___fltol@f1+1,f
  3348     15E5  30FF               	movlw	255
  3349     15E6  05A2               	andwf	___fltol@f1+2,f
  3350     15E7  3000               	movlw	0
  3351     15E8  05A3               	andwf	___fltol@f1+3,f
  3352     15E9                     l3618:
  3353     15E9  3096               	movlw	150
  3354     15EA  02A9               	subwf	___fltol@exp1,f
  3355     15EB                     l3620:
  3356     15EB  1FA9               	btfss	___fltol@exp1,7
  3357     15EC  2DEE               	goto	u4781
  3358     15ED  2DEF               	goto	u4780
  3359     15EE                     u4781:
  3360     15EE  2E09               	goto	l3632
  3361     15EF                     u4780:
  3362     15EF                     l3622:
  3363     15EF  0829               	movf	___fltol@exp1,w
  3364     15F0  3A80               	xorlw	128
  3365     15F1  3E97               	addlw	151
  3366     15F2  1803               	skipnc
  3367     15F3  2DF5               	goto	u4791
  3368     15F4  2DF6               	goto	u4790
  3369     15F5                     u4791:
  3370     15F5  2DF7               	goto	l3628
  3371     15F6                     u4790:
  3372     15F6  2DC4               	goto	l3608
  3373     15F7                     l3628:
  3374     15F7  3001               	movlw	1
  3375     15F8                     u4805:
  3376     15F8  1003               	clrc
  3377     15F9  0CA3               	rrf	___fltol@f1+3,f
  3378     15FA  0CA2               	rrf	___fltol@f1+2,f
  3379     15FB  0CA1               	rrf	___fltol@f1+1,f
  3380     15FC  0CA0               	rrf	___fltol@f1,f
  3381     15FD  3EFF               	addlw	-1
  3382     15FE  1D03               	skipz
  3383     15FF  2DF8               	goto	u4805
  3384     1600                     l3630:
  3385     1600  3001               	movlw	1
  3386     1601  00FF               	movwf	btemp+1
  3387     1602  087F               	movf	btemp+1,w
  3388     1603  07A9               	addwf	___fltol@exp1,f
  3389     1604  1D03               	btfss	3,2
  3390     1605  2E07               	goto	u4811
  3391     1606  2E08               	goto	u4810
  3392     1607                     u4811:
  3393     1607  2DF7               	goto	l3628
  3394     1608                     u4810:
  3395     1608  2E20               	goto	l3640
  3396     1609                     l3632:
  3397     1609  3020               	movlw	32
  3398     160A  0229               	subwf	___fltol@exp1,w
  3399     160B  1C03               	skipc
  3400     160C  2E0E               	goto	u4821
  3401     160D  2E0F               	goto	u4820
  3402     160E                     u4821:
  3403     160E  2E1B               	goto	l602
  3404     160F                     u4820:
  3405     160F  2DC4               	goto	l3608
  3406     1610                     l3638:
  3407     1610  3001               	movlw	1
  3408     1611  00A4               	movwf	??___fltol
  3409     1612                     u4835:
  3410     1612  1003               	clrc
  3411     1613  0DA0               	rlf	___fltol@f1,f
  3412     1614  0DA1               	rlf	___fltol@f1+1,f
  3413     1615  0DA2               	rlf	___fltol@f1+2,f
  3414     1616  0DA3               	rlf	___fltol@f1+3,f
  3415     1617  0BA4               	decfsz	??___fltol,f
  3416     1618  2E12               	goto	u4835
  3417     1619  3001               	movlw	1
  3418     161A  02A9               	subwf	___fltol@exp1,f
  3419     161B                     l602:
  3420     161B  0829               	movf	___fltol@exp1,w
  3421     161C  1D03               	btfss	3,2
  3422     161D  2E1F               	goto	u4841
  3423     161E  2E20               	goto	u4840
  3424     161F                     u4841:
  3425     161F  2E10               	goto	l3638
  3426     1620                     u4840:
  3427     1620                     l3640:
  3428     1620  0828               	movf	___fltol@sign1,w
  3429     1621  1903               	btfsc	3,2
  3430     1622  2E24               	goto	u4851
  3431     1623  2E25               	goto	u4850
  3432     1624                     u4851:
  3433     1624  2E30               	goto	l605
  3434     1625                     u4850:
  3435     1625                     l3642:
  3436     1625  09A0               	comf	___fltol@f1,f
  3437     1626  09A1               	comf	___fltol@f1+1,f
  3438     1627  09A2               	comf	___fltol@f1+2,f
  3439     1628  09A3               	comf	___fltol@f1+3,f
  3440     1629  0AA0               	incf	___fltol@f1,f
  3441     162A  1903               	skipnz
  3442     162B  0AA1               	incf	___fltol@f1+1,f
  3443     162C  1903               	skipnz
  3444     162D  0AA2               	incf	___fltol@f1+2,f
  3445     162E  1903               	skipnz
  3446     162F  0AA3               	incf	___fltol@f1+3,f
  3447     1630                     l605:
  3448     1630                     l595:
  3449     1630  0008               	return
  3450     1631                     __end_of___fltol:
  3451                           
  3452                           	psect	text10
  3453     0CBB                     __ptext10:	
  3454 ;; *************** function ___flmul *****************
  3455 ;; Defined at:
  3456 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcmul.c"
  3457 ;; Parameters:    Size  Location     Type
  3458 ;;  b               4   26[BANK0 ] long 
  3459 ;;  a               4   30[BANK0 ] long 
  3460 ;; Auto vars:     Size  Location     Type
  3461 ;;  prod            4   46[BANK0 ] struct .
  3462 ;;  grs             4   41[BANK0 ] unsigned long 
  3463 ;;  temp            2   50[BANK0 ] struct .
  3464 ;;  bexp            1   45[BANK0 ] unsigned char 
  3465 ;;  aexp            1   40[BANK0 ] unsigned char 
  3466 ;;  sign            1   39[BANK0 ] unsigned char 
  3467 ;; Return value:  Size  Location     Type
  3468 ;;                  4   26[BANK0 ] unsigned char 
  3469 ;; Registers used:
  3470 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3471 ;; Tracked objects:
  3472 ;;		On entry : 0/0
  3473 ;;		On exit  : 0/0
  3474 ;;		Unchanged: 0/0
  3475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3476 ;;      Params:         0       8       0       0       0
  3477 ;;      Locals:         0      13       0       0       0
  3478 ;;      Temps:          0       5       0       0       0
  3479 ;;      Totals:         0      26       0       0       0
  3480 ;;Total ram usage:       26 bytes
  3481 ;; Hardware stack levels used: 1
  3482 ;; Hardware stack levels required when called: 3
  3483 ;; This function calls:
  3484 ;;		__Umul8_16
  3485 ;; This function is called by:
  3486 ;;		_main
  3487 ;; This function uses a non-reentrant model
  3488 ;;
  3489                           
  3490     0CBB                     ___flmul:	
  3491                           ;psect for function ___flmul
  3492                           
  3493     0CBB                     l3644:	
  3494                           ;incstack = 0
  3495                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3496                           
  3497     0CBB  1283               	bcf	3,5	;RP0=0, select bank0
  3498     0CBC  1303               	bcf	3,6	;RP1=0, select bank0
  3499     0CBD  083D               	movf	___flmul@b+3,w
  3500     0CBE  3980               	andlw	128
  3501     0CBF  00C7               	movwf	___flmul@sign
  3502     0CC0                     l3646:
  3503     0CC0  083D               	movf	___flmul@b+3,w
  3504     0CC1  00C2               	movwf	??___flmul
  3505     0CC2  0742               	addwf	??___flmul,w
  3506     0CC3  00CD               	movwf	___flmul@bexp
  3507     0CC4                     l3648:
  3508     0CC4  1FBC               	btfss	___flmul@b+2,7
  3509     0CC5  2CC7               	goto	u4861
  3510     0CC6  2CC8               	goto	u4860
  3511     0CC7                     u4861:
  3512     0CC7  2CC9               	goto	l3652
  3513     0CC8                     u4860:
  3514     0CC8                     l3650:
  3515     0CC8  144D               	bsf	___flmul@bexp,0
  3516     0CC9                     l3652:
  3517     0CC9  084D               	movf	___flmul@bexp,w
  3518     0CCA  1903               	btfsc	3,2
  3519     0CCB  2CCD               	goto	u4871
  3520     0CCC  2CCE               	goto	u4870
  3521     0CCD                     u4871:
  3522     0CCD  2CDD               	goto	l3660
  3523     0CCE                     u4870:
  3524     0CCE                     l3654:
  3525     0CCE  0A4D               	incf	___flmul@bexp,w
  3526     0CCF  1D03               	btfss	3,2
  3527     0CD0  2CD2               	goto	u4881
  3528     0CD1  2CD3               	goto	u4880
  3529     0CD2                     u4881:
  3530     0CD2  2CDB               	goto	l3658
  3531     0CD3                     u4880:
  3532     0CD3                     l3656:
  3533     0CD3  3000               	movlw	0
  3534     0CD4  00BD               	movwf	___flmul@b+3
  3535     0CD5  3000               	movlw	0
  3536     0CD6  00BC               	movwf	___flmul@b+2
  3537     0CD7  3000               	movlw	0
  3538     0CD8  00BB               	movwf	___flmul@b+1
  3539     0CD9  3000               	movlw	0
  3540     0CDA  00BA               	movwf	___flmul@b
  3541     0CDB                     l3658:
  3542     0CDB  17BC               	bsf	___flmul@b+2,7
  3543     0CDC  2CE5               	goto	l3662
  3544     0CDD                     l3660:
  3545     0CDD  3000               	movlw	0
  3546     0CDE  00BD               	movwf	___flmul@b+3
  3547     0CDF  3000               	movlw	0
  3548     0CE0  00BC               	movwf	___flmul@b+2
  3549     0CE1  3000               	movlw	0
  3550     0CE2  00BB               	movwf	___flmul@b+1
  3551     0CE3  3000               	movlw	0
  3552     0CE4  00BA               	movwf	___flmul@b
  3553     0CE5                     l3662:
  3554     0CE5  0841               	movf	___flmul@a+3,w
  3555     0CE6  3980               	andlw	128
  3556     0CE7  00FF               	movwf	btemp+1
  3557     0CE8  087F               	movf	btemp+1,w
  3558     0CE9  06C7               	xorwf	___flmul@sign,f
  3559     0CEA                     l3664:
  3560     0CEA  0841               	movf	___flmul@a+3,w
  3561     0CEB  00C2               	movwf	??___flmul
  3562     0CEC  0742               	addwf	??___flmul,w
  3563     0CED  00C8               	movwf	___flmul@aexp
  3564     0CEE                     l3666:
  3565     0CEE  1FC0               	btfss	___flmul@a+2,7
  3566     0CEF  2CF1               	goto	u4891
  3567     0CF0  2CF2               	goto	u4890
  3568     0CF1                     u4891:
  3569     0CF1  2CF3               	goto	l3670
  3570     0CF2                     u4890:
  3571     0CF2                     l3668:
  3572     0CF2  1448               	bsf	___flmul@aexp,0
  3573     0CF3                     l3670:
  3574     0CF3  0848               	movf	___flmul@aexp,w
  3575     0CF4  1903               	btfsc	3,2
  3576     0CF5  2CF7               	goto	u4901
  3577     0CF6  2CF8               	goto	u4900
  3578     0CF7                     u4901:
  3579     0CF7  2D07               	goto	l3678
  3580     0CF8                     u4900:
  3581     0CF8                     l3672:
  3582     0CF8  0A48               	incf	___flmul@aexp,w
  3583     0CF9  1D03               	btfss	3,2
  3584     0CFA  2CFC               	goto	u4911
  3585     0CFB  2CFD               	goto	u4910
  3586     0CFC                     u4911:
  3587     0CFC  2D05               	goto	l3676
  3588     0CFD                     u4910:
  3589     0CFD                     l3674:
  3590     0CFD  3000               	movlw	0
  3591     0CFE  00C1               	movwf	___flmul@a+3
  3592     0CFF  3000               	movlw	0
  3593     0D00  00C0               	movwf	___flmul@a+2
  3594     0D01  3000               	movlw	0
  3595     0D02  00BF               	movwf	___flmul@a+1
  3596     0D03  3000               	movlw	0
  3597     0D04  00BE               	movwf	___flmul@a
  3598     0D05                     l3676:
  3599     0D05  17C0               	bsf	___flmul@a+2,7
  3600     0D06  2D0F               	goto	l3680
  3601     0D07                     l3678:
  3602     0D07  3000               	movlw	0
  3603     0D08  00C1               	movwf	___flmul@a+3
  3604     0D09  3000               	movlw	0
  3605     0D0A  00C0               	movwf	___flmul@a+2
  3606     0D0B  3000               	movlw	0
  3607     0D0C  00BF               	movwf	___flmul@a+1
  3608     0D0D  3000               	movlw	0
  3609     0D0E  00BE               	movwf	___flmul@a
  3610     0D0F                     l3680:
  3611     0D0F  0848               	movf	___flmul@aexp,w
  3612     0D10  1903               	btfsc	3,2
  3613     0D11  2D13               	goto	u4921
  3614     0D12  2D14               	goto	u4920
  3615     0D13                     u4921:
  3616     0D13  2D19               	goto	l3684
  3617     0D14                     u4920:
  3618     0D14                     l3682:
  3619     0D14  084D               	movf	___flmul@bexp,w
  3620     0D15  1D03               	btfss	3,2
  3621     0D16  2D18               	goto	u4931
  3622     0D17  2D19               	goto	u4930
  3623     0D18                     u4931:
  3624     0D18  2D22               	goto	l3688
  3625     0D19                     u4930:
  3626     0D19                     l3684:
  3627     0D19  3000               	movlw	0
  3628     0D1A  00BD               	movwf	?___flmul+3
  3629     0D1B  3000               	movlw	0
  3630     0D1C  00BC               	movwf	?___flmul+2
  3631     0D1D  3000               	movlw	0
  3632     0D1E  00BB               	movwf	?___flmul+1
  3633     0D1F  3000               	movlw	0
  3634     0D20  00BA               	movwf	?___flmul
  3635     0D21  2FFF               	goto	l798
  3636     0D22                     l3688:
  3637     0D22  083A               	movf	___flmul@b,w
  3638     0D23  00A0               	movwf	__Umul8_16@multiplicand
  3639     0D24  0840               	movf	___flmul@a+2,w
  3640     0D25  120A  158A  2006  120A  158A  	fcall	__Umul8_16
  3641     0D2A  1283               	bcf	3,5	;RP0=0, select bank0
  3642     0D2B  1303               	bcf	3,6	;RP1=0, select bank0
  3643     0D2C  0821               	movf	?__Umul8_16+1,w
  3644     0D2D  00D3               	movwf	___flmul@temp+1
  3645     0D2E  0820               	movf	?__Umul8_16,w
  3646     0D2F  00D2               	movwf	___flmul@temp
  3647     0D30                     l3690:
  3648     0D30  0852               	movf	___flmul@temp,w
  3649     0D31  00C2               	movwf	??___flmul
  3650     0D32  01C3               	clrf	??___flmul+1
  3651     0D33  01C4               	clrf	??___flmul+2
  3652     0D34  01C5               	clrf	??___flmul+3
  3653     0D35  0845               	movf	??___flmul+3,w
  3654     0D36  00CC               	movwf	___flmul@grs+3
  3655     0D37  0844               	movf	??___flmul+2,w
  3656     0D38  00CB               	movwf	___flmul@grs+2
  3657     0D39  0843               	movf	??___flmul+1,w
  3658     0D3A  00CA               	movwf	___flmul@grs+1
  3659     0D3B  0842               	movf	??___flmul,w
  3660     0D3C  00C9               	movwf	___flmul@grs
  3661     0D3D                     l3692:
  3662     0D3D  0853               	movf	___flmul@temp+1,w
  3663     0D3E  00C2               	movwf	??___flmul
  3664     0D3F  01C3               	clrf	??___flmul+1
  3665     0D40  01C4               	clrf	??___flmul+2
  3666     0D41  01C5               	clrf	??___flmul+3
  3667     0D42  0845               	movf	??___flmul+3,w
  3668     0D43  00D1               	movwf	___flmul@prod+3
  3669     0D44  0844               	movf	??___flmul+2,w
  3670     0D45  00D0               	movwf	___flmul@prod+2
  3671     0D46  0843               	movf	??___flmul+1,w
  3672     0D47  00CF               	movwf	___flmul@prod+1
  3673     0D48  0842               	movf	??___flmul,w
  3674     0D49  00CE               	movwf	___flmul@prod
  3675     0D4A  083B               	movf	___flmul@b+1,w
  3676     0D4B  00A0               	movwf	__Umul8_16@multiplicand
  3677     0D4C  083F               	movf	___flmul@a+1,w
  3678     0D4D  120A  158A  2006  120A  158A  	fcall	__Umul8_16
  3679     0D52  1283               	bcf	3,5	;RP0=0, select bank0
  3680     0D53  1303               	bcf	3,6	;RP1=0, select bank0
  3681     0D54  0821               	movf	?__Umul8_16+1,w
  3682     0D55  00D3               	movwf	___flmul@temp+1
  3683     0D56  0820               	movf	?__Umul8_16,w
  3684     0D57  00D2               	movwf	___flmul@temp
  3685     0D58                     l3694:
  3686     0D58  0852               	movf	___flmul@temp,w
  3687     0D59  00C2               	movwf	??___flmul
  3688     0D5A  01C3               	clrf	??___flmul+1
  3689     0D5B  01C4               	clrf	??___flmul+2
  3690     0D5C  01C5               	clrf	??___flmul+3
  3691     0D5D  0842               	movf	??___flmul,w
  3692     0D5E  07C9               	addwf	___flmul@grs,f
  3693     0D5F  0843               	movf	??___flmul+1,w
  3694     0D60  1103               	clrz
  3695     0D61  1803               	skipnc
  3696     0D62  3E01               	addlw	1
  3697     0D63  1903               	skipnz
  3698     0D64  2D66               	goto	u4941
  3699     0D65  07CA               	addwf	___flmul@grs+1,f
  3700     0D66                     u4941:
  3701     0D66  0844               	movf	??___flmul+2,w
  3702     0D67  1103               	clrz
  3703     0D68  1803               	skipnc
  3704     0D69  3E01               	addlw	1
  3705     0D6A  1903               	skipnz
  3706     0D6B  2D6D               	goto	u4942
  3707     0D6C  07CB               	addwf	___flmul@grs+2,f
  3708     0D6D                     u4942:
  3709     0D6D  0845               	movf	??___flmul+3,w
  3710     0D6E  1103               	clrz
  3711     0D6F  1803               	skipnc
  3712     0D70  3E01               	addlw	1
  3713     0D71  1903               	skipnz
  3714     0D72  2D74               	goto	u4943
  3715     0D73  07CC               	addwf	___flmul@grs+3,f
  3716     0D74                     u4943:
  3717     0D74                     l3696:
  3718     0D74  0853               	movf	___flmul@temp+1,w
  3719     0D75  00C2               	movwf	??___flmul
  3720     0D76  01C3               	clrf	??___flmul+1
  3721     0D77  01C4               	clrf	??___flmul+2
  3722     0D78  01C5               	clrf	??___flmul+3
  3723     0D79  0842               	movf	??___flmul,w
  3724     0D7A  07CE               	addwf	___flmul@prod,f
  3725     0D7B  0843               	movf	??___flmul+1,w
  3726     0D7C  1103               	clrz
  3727     0D7D  1803               	skipnc
  3728     0D7E  3E01               	addlw	1
  3729     0D7F  1903               	skipnz
  3730     0D80  2D82               	goto	u4951
  3731     0D81  07CF               	addwf	___flmul@prod+1,f
  3732     0D82                     u4951:
  3733     0D82  0844               	movf	??___flmul+2,w
  3734     0D83  1103               	clrz
  3735     0D84  1803               	skipnc
  3736     0D85  3E01               	addlw	1
  3737     0D86  1903               	skipnz
  3738     0D87  2D89               	goto	u4952
  3739     0D88  07D0               	addwf	___flmul@prod+2,f
  3740     0D89                     u4952:
  3741     0D89  0845               	movf	??___flmul+3,w
  3742     0D8A  1103               	clrz
  3743     0D8B  1803               	skipnc
  3744     0D8C  3E01               	addlw	1
  3745     0D8D  1903               	skipnz
  3746     0D8E  2D90               	goto	u4953
  3747     0D8F  07D1               	addwf	___flmul@prod+3,f
  3748     0D90                     u4953:
  3749     0D90  083C               	movf	___flmul@b+2,w
  3750     0D91  00A0               	movwf	__Umul8_16@multiplicand
  3751     0D92  083E               	movf	___flmul@a,w
  3752     0D93  120A  158A  2006  120A  158A  	fcall	__Umul8_16
  3753     0D98  1283               	bcf	3,5	;RP0=0, select bank0
  3754     0D99  1303               	bcf	3,6	;RP1=0, select bank0
  3755     0D9A  0821               	movf	?__Umul8_16+1,w
  3756     0D9B  00D3               	movwf	___flmul@temp+1
  3757     0D9C  0820               	movf	?__Umul8_16,w
  3758     0D9D  00D2               	movwf	___flmul@temp
  3759     0D9E                     l3698:
  3760     0D9E  0852               	movf	___flmul@temp,w
  3761     0D9F  00C2               	movwf	??___flmul
  3762     0DA0  01C3               	clrf	??___flmul+1
  3763     0DA1  01C4               	clrf	??___flmul+2
  3764     0DA2  01C5               	clrf	??___flmul+3
  3765     0DA3  0842               	movf	??___flmul,w
  3766     0DA4  07C9               	addwf	___flmul@grs,f
  3767     0DA5  0843               	movf	??___flmul+1,w
  3768     0DA6  1103               	clrz
  3769     0DA7  1803               	skipnc
  3770     0DA8  3E01               	addlw	1
  3771     0DA9  1903               	skipnz
  3772     0DAA  2DAC               	goto	u4961
  3773     0DAB  07CA               	addwf	___flmul@grs+1,f
  3774     0DAC                     u4961:
  3775     0DAC  0844               	movf	??___flmul+2,w
  3776     0DAD  1103               	clrz
  3777     0DAE  1803               	skipnc
  3778     0DAF  3E01               	addlw	1
  3779     0DB0  1903               	skipnz
  3780     0DB1  2DB3               	goto	u4962
  3781     0DB2  07CB               	addwf	___flmul@grs+2,f
  3782     0DB3                     u4962:
  3783     0DB3  0845               	movf	??___flmul+3,w
  3784     0DB4  1103               	clrz
  3785     0DB5  1803               	skipnc
  3786     0DB6  3E01               	addlw	1
  3787     0DB7  1903               	skipnz
  3788     0DB8  2DBA               	goto	u4963
  3789     0DB9  07CC               	addwf	___flmul@grs+3,f
  3790     0DBA                     u4963:
  3791     0DBA                     l3700:
  3792     0DBA  0853               	movf	___flmul@temp+1,w
  3793     0DBB  00C2               	movwf	??___flmul
  3794     0DBC  01C3               	clrf	??___flmul+1
  3795     0DBD  01C4               	clrf	??___flmul+2
  3796     0DBE  01C5               	clrf	??___flmul+3
  3797     0DBF  0842               	movf	??___flmul,w
  3798     0DC0  07CE               	addwf	___flmul@prod,f
  3799     0DC1  0843               	movf	??___flmul+1,w
  3800     0DC2  1103               	clrz
  3801     0DC3  1803               	skipnc
  3802     0DC4  3E01               	addlw	1
  3803     0DC5  1903               	skipnz
  3804     0DC6  2DC8               	goto	u4971
  3805     0DC7  07CF               	addwf	___flmul@prod+1,f
  3806     0DC8                     u4971:
  3807     0DC8  0844               	movf	??___flmul+2,w
  3808     0DC9  1103               	clrz
  3809     0DCA  1803               	skipnc
  3810     0DCB  3E01               	addlw	1
  3811     0DCC  1903               	skipnz
  3812     0DCD  2DCF               	goto	u4972
  3813     0DCE  07D0               	addwf	___flmul@prod+2,f
  3814     0DCF                     u4972:
  3815     0DCF  0845               	movf	??___flmul+3,w
  3816     0DD0  1103               	clrz
  3817     0DD1  1803               	skipnc
  3818     0DD2  3E01               	addlw	1
  3819     0DD3  1903               	skipnz
  3820     0DD4  2DD6               	goto	u4973
  3821     0DD5  07D1               	addwf	___flmul@prod+3,f
  3822     0DD6                     u4973:
  3823     0DD6                     l3702:
  3824     0DD6  3008               	movlw	8
  3825     0DD7  00C2               	movwf	??___flmul
  3826     0DD8                     u4985:
  3827     0DD8  1003               	clrc
  3828     0DD9  0DC9               	rlf	___flmul@grs,f
  3829     0DDA  0DCA               	rlf	___flmul@grs+1,f
  3830     0DDB  0DCB               	rlf	___flmul@grs+2,f
  3831     0DDC  0DCC               	rlf	___flmul@grs+3,f
  3832     0DDD  0BC2               	decfsz	??___flmul,f
  3833     0DDE  2DD8               	goto	u4985
  3834     0DDF                     l3704:
  3835     0DDF  083B               	movf	___flmul@b+1,w
  3836     0DE0  00A0               	movwf	__Umul8_16@multiplicand
  3837     0DE1  083E               	movf	___flmul@a,w
  3838     0DE2  120A  158A  2006  120A  158A  	fcall	__Umul8_16
  3839     0DE7  1283               	bcf	3,5	;RP0=0, select bank0
  3840     0DE8  1303               	bcf	3,6	;RP1=0, select bank0
  3841     0DE9  0821               	movf	?__Umul8_16+1,w
  3842     0DEA  00D3               	movwf	___flmul@temp+1
  3843     0DEB  0820               	movf	?__Umul8_16,w
  3844     0DEC  00D2               	movwf	___flmul@temp
  3845     0DED                     l3706:
  3846     0DED  0852               	movf	___flmul@temp,w
  3847     0DEE  00C2               	movwf	??___flmul
  3848     0DEF  0853               	movf	___flmul@temp+1,w
  3849     0DF0  00C3               	movwf	??___flmul+1
  3850     0DF1  01C4               	clrf	??___flmul+2
  3851     0DF2  01C5               	clrf	??___flmul+3
  3852     0DF3  0842               	movf	??___flmul,w
  3853     0DF4  07C9               	addwf	___flmul@grs,f
  3854     0DF5  0843               	movf	??___flmul+1,w
  3855     0DF6  1103               	clrz
  3856     0DF7  1803               	skipnc
  3857     0DF8  3E01               	addlw	1
  3858     0DF9  1903               	skipnz
  3859     0DFA  2DFC               	goto	u4991
  3860     0DFB  07CA               	addwf	___flmul@grs+1,f
  3861     0DFC                     u4991:
  3862     0DFC  0844               	movf	??___flmul+2,w
  3863     0DFD  1103               	clrz
  3864     0DFE  1803               	skipnc
  3865     0DFF  3E01               	addlw	1
  3866     0E00  1903               	skipnz
  3867     0E01  2E03               	goto	u4992
  3868     0E02  07CB               	addwf	___flmul@grs+2,f
  3869     0E03                     u4992:
  3870     0E03  0845               	movf	??___flmul+3,w
  3871     0E04  1103               	clrz
  3872     0E05  1803               	skipnc
  3873     0E06  3E01               	addlw	1
  3874     0E07  1903               	skipnz
  3875     0E08  2E0A               	goto	u4993
  3876     0E09  07CC               	addwf	___flmul@grs+3,f
  3877     0E0A                     u4993:
  3878     0E0A                     l3708:
  3879     0E0A  083A               	movf	___flmul@b,w
  3880     0E0B  00A0               	movwf	__Umul8_16@multiplicand
  3881     0E0C  083F               	movf	___flmul@a+1,w
  3882     0E0D  120A  158A  2006  120A  158A  	fcall	__Umul8_16
  3883     0E12  1283               	bcf	3,5	;RP0=0, select bank0
  3884     0E13  1303               	bcf	3,6	;RP1=0, select bank0
  3885     0E14  0821               	movf	?__Umul8_16+1,w
  3886     0E15  00D3               	movwf	___flmul@temp+1
  3887     0E16  0820               	movf	?__Umul8_16,w
  3888     0E17  00D2               	movwf	___flmul@temp
  3889     0E18                     l3710:
  3890     0E18  0852               	movf	___flmul@temp,w
  3891     0E19  00C2               	movwf	??___flmul
  3892     0E1A  0853               	movf	___flmul@temp+1,w
  3893     0E1B  00C3               	movwf	??___flmul+1
  3894     0E1C  01C4               	clrf	??___flmul+2
  3895     0E1D  01C5               	clrf	??___flmul+3
  3896     0E1E  0842               	movf	??___flmul,w
  3897     0E1F  07C9               	addwf	___flmul@grs,f
  3898     0E20  0843               	movf	??___flmul+1,w
  3899     0E21  1103               	clrz
  3900     0E22  1803               	skipnc
  3901     0E23  3E01               	addlw	1
  3902     0E24  1903               	skipnz
  3903     0E25  2E27               	goto	u5001
  3904     0E26  07CA               	addwf	___flmul@grs+1,f
  3905     0E27                     u5001:
  3906     0E27  0844               	movf	??___flmul+2,w
  3907     0E28  1103               	clrz
  3908     0E29  1803               	skipnc
  3909     0E2A  3E01               	addlw	1
  3910     0E2B  1903               	skipnz
  3911     0E2C  2E2E               	goto	u5002
  3912     0E2D  07CB               	addwf	___flmul@grs+2,f
  3913     0E2E                     u5002:
  3914     0E2E  0845               	movf	??___flmul+3,w
  3915     0E2F  1103               	clrz
  3916     0E30  1803               	skipnc
  3917     0E31  3E01               	addlw	1
  3918     0E32  1903               	skipnz
  3919     0E33  2E35               	goto	u5003
  3920     0E34  07CC               	addwf	___flmul@grs+3,f
  3921     0E35                     u5003:
  3922     0E35                     l3712:
  3923     0E35  3008               	movlw	8
  3924     0E36  00C2               	movwf	??___flmul
  3925     0E37                     u5015:
  3926     0E37  1003               	clrc
  3927     0E38  0DC9               	rlf	___flmul@grs,f
  3928     0E39  0DCA               	rlf	___flmul@grs+1,f
  3929     0E3A  0DCB               	rlf	___flmul@grs+2,f
  3930     0E3B  0DCC               	rlf	___flmul@grs+3,f
  3931     0E3C  0BC2               	decfsz	??___flmul,f
  3932     0E3D  2E37               	goto	u5015
  3933     0E3E  083A               	movf	___flmul@b,w
  3934     0E3F  00A0               	movwf	__Umul8_16@multiplicand
  3935     0E40  083E               	movf	___flmul@a,w
  3936     0E41  120A  158A  2006  120A  158A  	fcall	__Umul8_16
  3937     0E46  1283               	bcf	3,5	;RP0=0, select bank0
  3938     0E47  1303               	bcf	3,6	;RP1=0, select bank0
  3939     0E48  0821               	movf	?__Umul8_16+1,w
  3940     0E49  00D3               	movwf	___flmul@temp+1
  3941     0E4A  0820               	movf	?__Umul8_16,w
  3942     0E4B  00D2               	movwf	___flmul@temp
  3943     0E4C                     l3714:
  3944     0E4C  0852               	movf	___flmul@temp,w
  3945     0E4D  00C2               	movwf	??___flmul
  3946     0E4E  0853               	movf	___flmul@temp+1,w
  3947     0E4F  00C3               	movwf	??___flmul+1
  3948     0E50  01C4               	clrf	??___flmul+2
  3949     0E51  01C5               	clrf	??___flmul+3
  3950     0E52  0842               	movf	??___flmul,w
  3951     0E53  07C9               	addwf	___flmul@grs,f
  3952     0E54  0843               	movf	??___flmul+1,w
  3953     0E55  1103               	clrz
  3954     0E56  1803               	skipnc
  3955     0E57  3E01               	addlw	1
  3956     0E58  1903               	skipnz
  3957     0E59  2E5B               	goto	u5021
  3958     0E5A  07CA               	addwf	___flmul@grs+1,f
  3959     0E5B                     u5021:
  3960     0E5B  0844               	movf	??___flmul+2,w
  3961     0E5C  1103               	clrz
  3962     0E5D  1803               	skipnc
  3963     0E5E  3E01               	addlw	1
  3964     0E5F  1903               	skipnz
  3965     0E60  2E62               	goto	u5022
  3966     0E61  07CB               	addwf	___flmul@grs+2,f
  3967     0E62                     u5022:
  3968     0E62  0845               	movf	??___flmul+3,w
  3969     0E63  1103               	clrz
  3970     0E64  1803               	skipnc
  3971     0E65  3E01               	addlw	1
  3972     0E66  1903               	skipnz
  3973     0E67  2E69               	goto	u5023
  3974     0E68  07CC               	addwf	___flmul@grs+3,f
  3975     0E69                     u5023:
  3976     0E69                     l3716:
  3977     0E69  083B               	movf	___flmul@b+1,w
  3978     0E6A  00A0               	movwf	__Umul8_16@multiplicand
  3979     0E6B  0840               	movf	___flmul@a+2,w
  3980     0E6C  120A  158A  2006  120A  158A  	fcall	__Umul8_16
  3981     0E71  1283               	bcf	3,5	;RP0=0, select bank0
  3982     0E72  1303               	bcf	3,6	;RP1=0, select bank0
  3983     0E73  0821               	movf	?__Umul8_16+1,w
  3984     0E74  00D3               	movwf	___flmul@temp+1
  3985     0E75  0820               	movf	?__Umul8_16,w
  3986     0E76  00D2               	movwf	___flmul@temp
  3987     0E77  0852               	movf	___flmul@temp,w
  3988     0E78  00C2               	movwf	??___flmul
  3989     0E79  0853               	movf	___flmul@temp+1,w
  3990     0E7A  00C3               	movwf	??___flmul+1
  3991     0E7B  01C4               	clrf	??___flmul+2
  3992     0E7C  01C5               	clrf	??___flmul+3
  3993     0E7D  0842               	movf	??___flmul,w
  3994     0E7E  07CE               	addwf	___flmul@prod,f
  3995     0E7F  0843               	movf	??___flmul+1,w
  3996     0E80  1103               	clrz
  3997     0E81  1803               	skipnc
  3998     0E82  3E01               	addlw	1
  3999     0E83  1903               	skipnz
  4000     0E84  2E86               	goto	u5031
  4001     0E85  07CF               	addwf	___flmul@prod+1,f
  4002     0E86                     u5031:
  4003     0E86  0844               	movf	??___flmul+2,w
  4004     0E87  1103               	clrz
  4005     0E88  1803               	skipnc
  4006     0E89  3E01               	addlw	1
  4007     0E8A  1903               	skipnz
  4008     0E8B  2E8D               	goto	u5032
  4009     0E8C  07D0               	addwf	___flmul@prod+2,f
  4010     0E8D                     u5032:
  4011     0E8D  0845               	movf	??___flmul+3,w
  4012     0E8E  1103               	clrz
  4013     0E8F  1803               	skipnc
  4014     0E90  3E01               	addlw	1
  4015     0E91  1903               	skipnz
  4016     0E92  2E94               	goto	u5033
  4017     0E93  07D1               	addwf	___flmul@prod+3,f
  4018     0E94                     u5033:
  4019     0E94                     l3718:
  4020     0E94  083C               	movf	___flmul@b+2,w
  4021     0E95  00A0               	movwf	__Umul8_16@multiplicand
  4022     0E96  083F               	movf	___flmul@a+1,w
  4023     0E97  120A  158A  2006  120A  158A  	fcall	__Umul8_16
  4024     0E9C  1283               	bcf	3,5	;RP0=0, select bank0
  4025     0E9D  1303               	bcf	3,6	;RP1=0, select bank0
  4026     0E9E  0821               	movf	?__Umul8_16+1,w
  4027     0E9F  00D3               	movwf	___flmul@temp+1
  4028     0EA0  0820               	movf	?__Umul8_16,w
  4029     0EA1  00D2               	movwf	___flmul@temp
  4030     0EA2                     l3720:
  4031     0EA2  0852               	movf	___flmul@temp,w
  4032     0EA3  00C2               	movwf	??___flmul
  4033     0EA4  0853               	movf	___flmul@temp+1,w
  4034     0EA5  00C3               	movwf	??___flmul+1
  4035     0EA6  01C4               	clrf	??___flmul+2
  4036     0EA7  01C5               	clrf	??___flmul+3
  4037     0EA8  0842               	movf	??___flmul,w
  4038     0EA9  07CE               	addwf	___flmul@prod,f
  4039     0EAA  0843               	movf	??___flmul+1,w
  4040     0EAB  1103               	clrz
  4041     0EAC  1803               	skipnc
  4042     0EAD  3E01               	addlw	1
  4043     0EAE  1903               	skipnz
  4044     0EAF  2EB1               	goto	u5041
  4045     0EB0  07CF               	addwf	___flmul@prod+1,f
  4046     0EB1                     u5041:
  4047     0EB1  0844               	movf	??___flmul+2,w
  4048     0EB2  1103               	clrz
  4049     0EB3  1803               	skipnc
  4050     0EB4  3E01               	addlw	1
  4051     0EB5  1903               	skipnz
  4052     0EB6  2EB8               	goto	u5042
  4053     0EB7  07D0               	addwf	___flmul@prod+2,f
  4054     0EB8                     u5042:
  4055     0EB8  0845               	movf	??___flmul+3,w
  4056     0EB9  1103               	clrz
  4057     0EBA  1803               	skipnc
  4058     0EBB  3E01               	addlw	1
  4059     0EBC  1903               	skipnz
  4060     0EBD  2EBF               	goto	u5043
  4061     0EBE  07D1               	addwf	___flmul@prod+3,f
  4062     0EBF                     u5043:
  4063     0EBF  083C               	movf	___flmul@b+2,w
  4064     0EC0  00A0               	movwf	__Umul8_16@multiplicand
  4065     0EC1  0840               	movf	___flmul@a+2,w
  4066     0EC2  120A  158A  2006  120A  158A  	fcall	__Umul8_16
  4067     0EC7  1283               	bcf	3,5	;RP0=0, select bank0
  4068     0EC8  1303               	bcf	3,6	;RP1=0, select bank0
  4069     0EC9  0821               	movf	?__Umul8_16+1,w
  4070     0ECA  00D3               	movwf	___flmul@temp+1
  4071     0ECB  0820               	movf	?__Umul8_16,w
  4072     0ECC  00D2               	movwf	___flmul@temp
  4073     0ECD                     l3722:
  4074     0ECD  0852               	movf	___flmul@temp,w
  4075     0ECE  00C2               	movwf	??___flmul
  4076     0ECF  0853               	movf	___flmul@temp+1,w
  4077     0ED0  00C3               	movwf	??___flmul+1
  4078     0ED1  01C4               	clrf	??___flmul+2
  4079     0ED2  01C5               	clrf	??___flmul+3
  4080     0ED3  3008               	movlw	8
  4081     0ED4                     u5055:
  4082     0ED4  1003               	clrc
  4083     0ED5  0DC2               	rlf	??___flmul,f
  4084     0ED6  0DC3               	rlf	??___flmul+1,f
  4085     0ED7  0DC4               	rlf	??___flmul+2,f
  4086     0ED8  0DC5               	rlf	??___flmul+3,f
  4087     0ED9                     u5050:
  4088     0ED9  3EFF               	addlw	-1
  4089     0EDA  1D03               	skipz
  4090     0EDB  2ED4               	goto	u5055
  4091     0EDC  0842               	movf	??___flmul,w
  4092     0EDD  07CE               	addwf	___flmul@prod,f
  4093     0EDE  0843               	movf	??___flmul+1,w
  4094     0EDF  1103               	clrz
  4095     0EE0  1803               	skipnc
  4096     0EE1  3E01               	addlw	1
  4097     0EE2  1903               	skipnz
  4098     0EE3  2EE5               	goto	u5061
  4099     0EE4  07CF               	addwf	___flmul@prod+1,f
  4100     0EE5                     u5061:
  4101     0EE5  0844               	movf	??___flmul+2,w
  4102     0EE6  1103               	clrz
  4103     0EE7  1803               	skipnc
  4104     0EE8  3E01               	addlw	1
  4105     0EE9  1903               	skipnz
  4106     0EEA  2EEC               	goto	u5062
  4107     0EEB  07D0               	addwf	___flmul@prod+2,f
  4108     0EEC                     u5062:
  4109     0EEC  0845               	movf	??___flmul+3,w
  4110     0EED  1103               	clrz
  4111     0EEE  1803               	skipnc
  4112     0EEF  3E01               	addlw	1
  4113     0EF0  1903               	skipnz
  4114     0EF1  2EF3               	goto	u5063
  4115     0EF2  07D1               	addwf	___flmul@prod+3,f
  4116     0EF3                     u5063:
  4117     0EF3                     l3724:
  4118     0EF3  0849               	movf	___flmul@grs,w
  4119     0EF4  00C2               	movwf	??___flmul
  4120     0EF5  084A               	movf	___flmul@grs+1,w
  4121     0EF6  00C3               	movwf	??___flmul+1
  4122     0EF7  084B               	movf	___flmul@grs+2,w
  4123     0EF8  00C4               	movwf	??___flmul+2
  4124     0EF9  084C               	movf	___flmul@grs+3,w
  4125     0EFA  00C5               	movwf	??___flmul+3
  4126     0EFB  3018               	movlw	24
  4127     0EFC                     u5075:
  4128     0EFC  1003               	clrc
  4129     0EFD  0CC5               	rrf	??___flmul+3,f
  4130     0EFE  0CC4               	rrf	??___flmul+2,f
  4131     0EFF  0CC3               	rrf	??___flmul+1,f
  4132     0F00  0CC2               	rrf	??___flmul,f
  4133     0F01                     u5070:
  4134     0F01  3EFF               	addlw	-1
  4135     0F02  1D03               	skipz
  4136     0F03  2EFC               	goto	u5075
  4137     0F04  0842               	movf	??___flmul,w
  4138     0F05  07CE               	addwf	___flmul@prod,f
  4139     0F06  0843               	movf	??___flmul+1,w
  4140     0F07  1103               	clrz
  4141     0F08  1803               	skipnc
  4142     0F09  3E01               	addlw	1
  4143     0F0A  1903               	skipnz
  4144     0F0B  2F0D               	goto	u5081
  4145     0F0C  07CF               	addwf	___flmul@prod+1,f
  4146     0F0D                     u5081:
  4147     0F0D  0844               	movf	??___flmul+2,w
  4148     0F0E  1103               	clrz
  4149     0F0F  1803               	skipnc
  4150     0F10  3E01               	addlw	1
  4151     0F11  1903               	skipnz
  4152     0F12  2F14               	goto	u5082
  4153     0F13  07D0               	addwf	___flmul@prod+2,f
  4154     0F14                     u5082:
  4155     0F14  0845               	movf	??___flmul+3,w
  4156     0F15  1103               	clrz
  4157     0F16  1803               	skipnc
  4158     0F17  3E01               	addlw	1
  4159     0F18  1903               	skipnz
  4160     0F19  2F1B               	goto	u5083
  4161     0F1A  07D1               	addwf	___flmul@prod+3,f
  4162     0F1B                     u5083:
  4163     0F1B                     l3726:
  4164     0F1B  3008               	movlw	8
  4165     0F1C  00C2               	movwf	??___flmul
  4166     0F1D                     u5095:
  4167     0F1D  1003               	clrc
  4168     0F1E  0DC9               	rlf	___flmul@grs,f
  4169     0F1F  0DCA               	rlf	___flmul@grs+1,f
  4170     0F20  0DCB               	rlf	___flmul@grs+2,f
  4171     0F21  0DCC               	rlf	___flmul@grs+3,f
  4172     0F22  0BC2               	decfsz	??___flmul,f
  4173     0F23  2F1D               	goto	u5095
  4174     0F24                     l3728:
  4175     0F24  084D               	movf	___flmul@bexp,w
  4176     0F25  0748               	addwf	___flmul@aexp,w
  4177     0F26  00C2               	movwf	??___flmul
  4178     0F27  01C3               	clrf	??___flmul+1
  4179     0F28  0DC3               	rlf	??___flmul+1,f
  4180     0F29  0842               	movf	??___flmul,w
  4181     0F2A  3E82               	addlw	130
  4182     0F2B  00D2               	movwf	___flmul@temp
  4183     0F2C  0843               	movf	??___flmul+1,w
  4184     0F2D  1803               	skipnc
  4185     0F2E  3E01               	addlw	1
  4186     0F2F  3EFF               	addlw	255
  4187     0F30  00D3               	movwf	___flmul@temp+1
  4188     0F31  2F4F               	goto	l3740
  4189     0F32                     l3730:
  4190     0F32  3001               	movlw	1
  4191     0F33  00C2               	movwf	??___flmul
  4192     0F34                     u5105:
  4193     0F34  1003               	clrc
  4194     0F35  0DCE               	rlf	___flmul@prod,f
  4195     0F36  0DCF               	rlf	___flmul@prod+1,f
  4196     0F37  0DD0               	rlf	___flmul@prod+2,f
  4197     0F38  0DD1               	rlf	___flmul@prod+3,f
  4198     0F39  0BC2               	decfsz	??___flmul,f
  4199     0F3A  2F34               	goto	u5105
  4200     0F3B                     l3732:
  4201     0F3B  1FCC               	btfss	___flmul@grs+3,7
  4202     0F3C  2F3E               	goto	u5111
  4203     0F3D  2F3F               	goto	u5110
  4204     0F3E                     u5111:
  4205     0F3E  2F40               	goto	l3736
  4206     0F3F                     u5110:
  4207     0F3F                     l3734:
  4208     0F3F  144E               	bsf	___flmul@prod,0
  4209     0F40                     l3736:
  4210     0F40  3001               	movlw	1
  4211     0F41  00C2               	movwf	??___flmul
  4212     0F42                     u5125:
  4213     0F42  1003               	clrc
  4214     0F43  0DC9               	rlf	___flmul@grs,f
  4215     0F44  0DCA               	rlf	___flmul@grs+1,f
  4216     0F45  0DCB               	rlf	___flmul@grs+2,f
  4217     0F46  0DCC               	rlf	___flmul@grs+3,f
  4218     0F47  0BC2               	decfsz	??___flmul,f
  4219     0F48  2F42               	goto	u5125
  4220     0F49                     l3738:
  4221     0F49  30FF               	movlw	255
  4222     0F4A  07D2               	addwf	___flmul@temp,f
  4223     0F4B  1803               	skipnc
  4224     0F4C  0AD3               	incf	___flmul@temp+1,f
  4225     0F4D  30FF               	movlw	255
  4226     0F4E  07D3               	addwf	___flmul@temp+1,f
  4227     0F4F                     l3740:
  4228     0F4F  1FD0               	btfss	___flmul@prod+2,7
  4229     0F50  2F52               	goto	u5131
  4230     0F51  2F53               	goto	u5130
  4231     0F52                     u5131:
  4232     0F52  2F32               	goto	l3730
  4233     0F53                     u5130:
  4234     0F53                     l3742:
  4235     0F53  01C8               	clrf	___flmul@aexp
  4236     0F54                     l3744:
  4237     0F54  1FCC               	btfss	___flmul@grs+3,7
  4238     0F55  2F57               	goto	u5141
  4239     0F56  2F58               	goto	u5140
  4240     0F57                     u5141:
  4241     0F57  2F74               	goto	l3752
  4242     0F58                     u5140:
  4243     0F58                     l3746:
  4244     0F58  30FF               	movlw	255
  4245     0F59  0549               	andwf	___flmul@grs,w
  4246     0F5A  00C2               	movwf	??___flmul
  4247     0F5B  30FF               	movlw	255
  4248     0F5C  054A               	andwf	___flmul@grs+1,w
  4249     0F5D  00C3               	movwf	??___flmul+1
  4250     0F5E  30FF               	movlw	255
  4251     0F5F  054B               	andwf	___flmul@grs+2,w
  4252     0F60  00C4               	movwf	??___flmul+2
  4253     0F61  307F               	movlw	127
  4254     0F62  054C               	andwf	___flmul@grs+3,w
  4255     0F63  00C5               	movwf	??___flmul+3
  4256     0F64  0845               	movf	??___flmul+3,w
  4257     0F65  0444               	iorwf	??___flmul+2,w
  4258     0F66  0443               	iorwf	??___flmul+1,w
  4259     0F67  0442               	iorwf	??___flmul,w
  4260     0F68  1903               	skipnz
  4261     0F69  2F6B               	goto	u5151
  4262     0F6A  2F6C               	goto	u5150
  4263     0F6B                     u5151:
  4264     0F6B  2F6F               	goto	l804
  4265     0F6C                     u5150:
  4266     0F6C                     l3748:
  4267     0F6C  01C8               	clrf	___flmul@aexp
  4268     0F6D  0AC8               	incf	___flmul@aexp,f
  4269     0F6E  2F74               	goto	l3752
  4270     0F6F                     l804:
  4271     0F6F  1C4E               	btfss	___flmul@prod,0
  4272     0F70  2F72               	goto	u5161
  4273     0F71  2F73               	goto	u5160
  4274     0F72                     u5161:
  4275     0F72  2F74               	goto	l3752
  4276     0F73                     u5160:
  4277     0F73  2F6C               	goto	l3748
  4278     0F74                     l3752:
  4279     0F74  0848               	movf	___flmul@aexp,w
  4280     0F75  1903               	btfsc	3,2
  4281     0F76  2F78               	goto	u5171
  4282     0F77  2F79               	goto	u5170
  4283     0F78                     u5171:
  4284     0F78  2FAA               	goto	l3762
  4285     0F79                     u5170:
  4286     0F79                     l3754:
  4287     0F79  3001               	movlw	1
  4288     0F7A  07CE               	addwf	___flmul@prod,f
  4289     0F7B  3000               	movlw	0
  4290     0F7C  1803               	skipnc
  4291     0F7D  3001               	movlw	1
  4292     0F7E  07CF               	addwf	___flmul@prod+1,f
  4293     0F7F  3000               	movlw	0
  4294     0F80  1803               	skipnc
  4295     0F81  3001               	movlw	1
  4296     0F82  07D0               	addwf	___flmul@prod+2,f
  4297     0F83  3000               	movlw	0
  4298     0F84  1803               	skipnc
  4299     0F85  3001               	movlw	1
  4300     0F86  07D1               	addwf	___flmul@prod+3,f
  4301     0F87                     l3756:
  4302     0F87  1C51               	btfss	___flmul@prod+3,0
  4303     0F88  2F8A               	goto	u5181
  4304     0F89  2F8B               	goto	u5180
  4305     0F8A                     u5181:
  4306     0F8A  2FAA               	goto	l3762
  4307     0F8B                     u5180:
  4308     0F8B                     l3758:
  4309     0F8B  084E               	movf	___flmul@prod,w
  4310     0F8C  00C2               	movwf	??___flmul
  4311     0F8D  084F               	movf	___flmul@prod+1,w
  4312     0F8E  00C3               	movwf	??___flmul+1
  4313     0F8F  0850               	movf	___flmul@prod+2,w
  4314     0F90  00C4               	movwf	??___flmul+2
  4315     0F91  0851               	movf	___flmul@prod+3,w
  4316     0F92  00C5               	movwf	??___flmul+3
  4317     0F93  3001               	movlw	1
  4318     0F94  00C6               	movwf	??___flmul+4
  4319     0F95                     u5195:
  4320     0F95  0D45               	rlf	??___flmul+3,w
  4321     0F96  0CC5               	rrf	??___flmul+3,f
  4322     0F97  0CC4               	rrf	??___flmul+2,f
  4323     0F98  0CC3               	rrf	??___flmul+1,f
  4324     0F99  0CC2               	rrf	??___flmul,f
  4325     0F9A                     u5190:
  4326     0F9A  0BC6               	decfsz	??___flmul+4,f
  4327     0F9B  2F95               	goto	u5195
  4328     0F9C  0845               	movf	??___flmul+3,w
  4329     0F9D  00D1               	movwf	___flmul@prod+3
  4330     0F9E  0844               	movf	??___flmul+2,w
  4331     0F9F  00D0               	movwf	___flmul@prod+2
  4332     0FA0  0843               	movf	??___flmul+1,w
  4333     0FA1  00CF               	movwf	___flmul@prod+1
  4334     0FA2  0842               	movf	??___flmul,w
  4335     0FA3  00CE               	movwf	___flmul@prod
  4336     0FA4                     l3760:
  4337     0FA4  3001               	movlw	1
  4338     0FA5  07D2               	addwf	___flmul@temp,f
  4339     0FA6  1803               	skipnc
  4340     0FA7  0AD3               	incf	___flmul@temp+1,f
  4341     0FA8  3000               	movlw	0
  4342     0FA9  07D3               	addwf	___flmul@temp+1,f
  4343     0FAA                     l3762:
  4344     0FAA  0853               	movf	___flmul@temp+1,w
  4345     0FAB  3A80               	xorlw	128
  4346     0FAC  00FF               	movwf	btemp+1
  4347     0FAD  3080               	movlw	128
  4348     0FAE  027F               	subwf	btemp+1,w
  4349     0FAF  1D03               	skipz
  4350     0FB0  2FB3               	goto	u5205
  4351     0FB1  30FF               	movlw	255
  4352     0FB2  0252               	subwf	___flmul@temp,w
  4353     0FB3                     u5205:
  4354     0FB3  1C03               	skipc
  4355     0FB4  2FB6               	goto	u5201
  4356     0FB5  2FB7               	goto	u5200
  4357     0FB6                     u5201:
  4358     0FB6  2FC2               	goto	l3766
  4359     0FB7                     u5200:
  4360     0FB7                     l3764:
  4361     0FB7  307F               	movlw	127
  4362     0FB8  1283               	bcf	3,5	;RP0=0, select bank0
  4363     0FB9  1303               	bcf	3,6	;RP1=0, select bank0
  4364     0FBA  00D1               	movwf	___flmul@prod+3
  4365     0FBB  3080               	movlw	128
  4366     0FBC  00D0               	movwf	___flmul@prod+2
  4367     0FBD  3000               	movlw	0
  4368     0FBE  00CF               	movwf	___flmul@prod+1
  4369     0FBF  3000               	movlw	0
  4370     0FC0  00CE               	movwf	___flmul@prod
  4371     0FC1  2FF3               	goto	l3780
  4372     0FC2                     l3766:
  4373     0FC2  1283               	bcf	3,5	;RP0=0, select bank0
  4374     0FC3  1303               	bcf	3,6	;RP1=0, select bank0
  4375     0FC4  0853               	movf	___flmul@temp+1,w
  4376     0FC5  3A80               	xorlw	128
  4377     0FC6  00FF               	movwf	btemp+1
  4378     0FC7  3080               	movlw	128
  4379     0FC8  027F               	subwf	btemp+1,w
  4380     0FC9  1D03               	skipz
  4381     0FCA  2FCD               	goto	u5215
  4382     0FCB  3001               	movlw	1
  4383     0FCC  0252               	subwf	___flmul@temp,w
  4384     0FCD                     u5215:
  4385     0FCD  1803               	skipnc
  4386     0FCE  2FD0               	goto	u5211
  4387     0FCF  2FD1               	goto	u5210
  4388     0FD0                     u5211:
  4389     0FD0  2FDD               	goto	l3772
  4390     0FD1                     u5210:
  4391     0FD1                     l3768:
  4392     0FD1  3000               	movlw	0
  4393     0FD2  1283               	bcf	3,5	;RP0=0, select bank0
  4394     0FD3  1303               	bcf	3,6	;RP1=0, select bank0
  4395     0FD4  00D1               	movwf	___flmul@prod+3
  4396     0FD5  3000               	movlw	0
  4397     0FD6  00D0               	movwf	___flmul@prod+2
  4398     0FD7  3000               	movlw	0
  4399     0FD8  00CF               	movwf	___flmul@prod+1
  4400     0FD9  3000               	movlw	0
  4401     0FDA  00CE               	movwf	___flmul@prod
  4402     0FDB                     l3770:
  4403     0FDB  01C7               	clrf	___flmul@sign
  4404     0FDC  2FF3               	goto	l3780
  4405     0FDD                     l3772:
  4406     0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  4407     0FDE  1303               	bcf	3,6	;RP1=0, select bank0
  4408     0FDF  0852               	movf	___flmul@temp,w
  4409     0FE0  00CD               	movwf	___flmul@bexp
  4410     0FE1  30FF               	movlw	255
  4411     0FE2  05CE               	andwf	___flmul@prod,f
  4412     0FE3  30FF               	movlw	255
  4413     0FE4  05CF               	andwf	___flmul@prod+1,f
  4414     0FE5  307F               	movlw	127
  4415     0FE6  05D0               	andwf	___flmul@prod+2,f
  4416     0FE7  3000               	movlw	0
  4417     0FE8  05D1               	andwf	___flmul@prod+3,f
  4418     0FE9                     l3774:
  4419     0FE9  1C4D               	btfss	___flmul@bexp,0
  4420     0FEA  2FEC               	goto	u5221
  4421     0FEB  2FED               	goto	u5220
  4422     0FEC                     u5221:
  4423     0FEC  2FEE               	goto	l3778
  4424     0FED                     u5220:
  4425     0FED                     l3776:
  4426     0FED  17D0               	bsf	___flmul@prod+2,7
  4427     0FEE                     l3778:
  4428     0FEE  084D               	movf	___flmul@bexp,w
  4429     0FEF  00C2               	movwf	??___flmul
  4430     0FF0  1003               	clrc
  4431     0FF1  0C42               	rrf	??___flmul,w
  4432     0FF2  00D1               	movwf	___flmul@prod+3
  4433     0FF3                     l3780:
  4434     0FF3  0847               	movf	___flmul@sign,w
  4435     0FF4  00FF               	movwf	btemp+1
  4436     0FF5  087F               	movf	btemp+1,w
  4437     0FF6  04D1               	iorwf	___flmul@prod+3,f
  4438     0FF7                     l3782:
  4439     0FF7  0851               	movf	___flmul@prod+3,w
  4440     0FF8  00BD               	movwf	?___flmul+3
  4441     0FF9  0850               	movf	___flmul@prod+2,w
  4442     0FFA  00BC               	movwf	?___flmul+2
  4443     0FFB  084F               	movf	___flmul@prod+1,w
  4444     0FFC  00BB               	movwf	?___flmul+1
  4445     0FFD  084E               	movf	___flmul@prod,w
  4446     0FFE  00BA               	movwf	?___flmul
  4447     0FFF                     l798:
  4448     0FFF  0008               	return
  4449     1000                     __end_of___flmul:
  4450                           
  4451                           	psect	text11
  4452     0806                     __ptext11:	
  4453 ;; *************** function __Umul8_16 *****************
  4454 ;; Defined at:
  4455 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul8_16.c"
  4456 ;; Parameters:    Size  Location     Type
  4457 ;;  multiplier      1    wreg     unsigned char 
  4458 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  4459 ;; Auto vars:     Size  Location     Type
  4460 ;;  multiplier      1    8[BANK0 ] unsigned char 
  4461 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  4462 ;;  product         2    4[BANK0 ] unsigned int 
  4463 ;; Return value:  Size  Location     Type
  4464 ;;                  2    0[BANK0 ] unsigned int 
  4465 ;; Registers used:
  4466 ;;		wreg, status,2, status,0
  4467 ;; Tracked objects:
  4468 ;;		On entry : 0/0
  4469 ;;		On exit  : 0/0
  4470 ;;		Unchanged: 0/0
  4471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4472 ;;      Params:         0       2       0       0       0
  4473 ;;      Locals:         0       5       0       0       0
  4474 ;;      Temps:          0       2       0       0       0
  4475 ;;      Totals:         0       9       0       0       0
  4476 ;;Total ram usage:        9 bytes
  4477 ;; Hardware stack levels used: 1
  4478 ;; Hardware stack levels required when called: 2
  4479 ;; This function calls:
  4480 ;;		Nothing
  4481 ;; This function is called by:
  4482 ;;		___flmul
  4483 ;; This function uses a non-reentrant model
  4484 ;;
  4485                           
  4486     0806                     __Umul8_16:	
  4487                           ;psect for function __Umul8_16
  4488                           
  4489                           
  4490                           ;incstack = 0
  4491                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  4492                           ;__Umul8_16@multiplier stored from wreg
  4493     0806  1283               	bcf	3,5	;RP0=0, select bank0
  4494     0807  1303               	bcf	3,6	;RP1=0, select bank0
  4495     0808  00A8               	movwf	__Umul8_16@multiplier
  4496     0809                     l3414:
  4497     0809  01A4               	clrf	__Umul8_16@product
  4498     080A  01A5               	clrf	__Umul8_16@product+1
  4499     080B                     l3416:
  4500     080B  0820               	movf	__Umul8_16@multiplicand,w
  4501     080C  00A2               	movwf	??__Umul8_16
  4502     080D  01A3               	clrf	??__Umul8_16+1
  4503     080E  0822               	movf	??__Umul8_16,w
  4504     080F  00A6               	movwf	__Umul8_16@word_mpld
  4505     0810  0823               	movf	??__Umul8_16+1,w
  4506     0811  00A7               	movwf	__Umul8_16@word_mpld+1
  4507     0812                     l3418:
  4508     0812  1C28               	btfss	__Umul8_16@multiplier,0
  4509     0813  2815               	goto	u4441
  4510     0814  2816               	goto	u4440
  4511     0815                     u4441:
  4512     0815  281C               	goto	l817
  4513     0816                     u4440:
  4514     0816                     l3420:
  4515     0816  0826               	movf	__Umul8_16@word_mpld,w
  4516     0817  07A4               	addwf	__Umul8_16@product,f
  4517     0818  1803               	skipnc
  4518     0819  0AA5               	incf	__Umul8_16@product+1,f
  4519     081A  0827               	movf	__Umul8_16@word_mpld+1,w
  4520     081B  07A5               	addwf	__Umul8_16@product+1,f
  4521     081C                     l817:
  4522     081C  3001               	movlw	1
  4523     081D                     u4455:
  4524     081D  1003               	clrc
  4525     081E  0DA6               	rlf	__Umul8_16@word_mpld,f
  4526     081F  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  4527     0820  3EFF               	addlw	-1
  4528     0821  1D03               	skipz
  4529     0822  281D               	goto	u4455
  4530     0823  1003               	clrc
  4531     0824  0CA8               	rrf	__Umul8_16@multiplier,f
  4532     0825                     l3422:
  4533     0825  0828               	movf	__Umul8_16@multiplier,w
  4534     0826  1D03               	btfss	3,2
  4535     0827  2829               	goto	u4461
  4536     0828  282A               	goto	u4460
  4537     0829                     u4461:
  4538     0829  2812               	goto	l3418
  4539     082A                     u4460:
  4540     082A                     l3424:
  4541     082A  0825               	movf	__Umul8_16@product+1,w
  4542     082B  00A1               	movwf	?__Umul8_16+1
  4543     082C  0824               	movf	__Umul8_16@product,w
  4544     082D  00A0               	movwf	?__Umul8_16
  4545     082E                     l819:
  4546     082E  0008               	return
  4547     082F                     __end_of__Umul8_16:
  4548                           
  4549                           	psect	text12
  4550     1631                     __ptext12:	
  4551 ;; *************** function ___fldiv *****************
  4552 ;; Defined at:
  4553 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcdiv.c"
  4554 ;; Parameters:    Size  Location     Type
  4555 ;;  a               4    0[BANK0 ] unsigned int 
  4556 ;;  b               4    4[BANK0 ] unsigned int 
  4557 ;; Auto vars:     Size  Location     Type
  4558 ;;  grs             4   20[BANK0 ] unsigned long 
  4559 ;;  rem             4   13[BANK0 ] unsigned long 
  4560 ;;  new_exp         2   18[BANK0 ] int 
  4561 ;;  aexp            1   25[BANK0 ] unsigned char 
  4562 ;;  bexp            1   24[BANK0 ] unsigned char 
  4563 ;;  sign            1   17[BANK0 ] unsigned char 
  4564 ;; Return value:  Size  Location     Type
  4565 ;;                  4    0[BANK0 ] unsigned char 
  4566 ;; Registers used:
  4567 ;;		wreg, status,2, status,0, btemp+1
  4568 ;; Tracked objects:
  4569 ;;		On entry : 0/0
  4570 ;;		On exit  : 0/0
  4571 ;;		Unchanged: 0/0
  4572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4573 ;;      Params:         0       8       0       0       0
  4574 ;;      Locals:         0      13       0       0       0
  4575 ;;      Temps:          0       5       0       0       0
  4576 ;;      Totals:         0      26       0       0       0
  4577 ;;Total ram usage:       26 bytes
  4578 ;; Hardware stack levels used: 1
  4579 ;; Hardware stack levels required when called: 2
  4580 ;; This function calls:
  4581 ;;		Nothing
  4582 ;; This function is called by:
  4583 ;;		_main
  4584 ;; This function uses a non-reentrant model
  4585 ;;
  4586                           
  4587     1631                     ___fldiv:	
  4588                           ;psect for function ___fldiv
  4589                           
  4590     1631                     l2502:	
  4591                           ;incstack = 0
  4592                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  4593                           
  4594     1631  1283               	bcf	3,5	;RP0=0, select bank0
  4595     1632  1303               	bcf	3,6	;RP1=0, select bank0
  4596     1633  0827               	movf	___fldiv@b+3,w
  4597     1634  3980               	andlw	128
  4598     1635  00B1               	movwf	___fldiv@sign
  4599     1636                     l2504:
  4600     1636  0827               	movf	___fldiv@b+3,w
  4601     1637  00A8               	movwf	??___fldiv
  4602     1638  0728               	addwf	??___fldiv,w
  4603     1639  00B8               	movwf	___fldiv@bexp
  4604     163A                     l2506:
  4605     163A  1FA6               	btfss	___fldiv@b+2,7
  4606     163B  2E3D               	goto	u2871
  4607     163C  2E3E               	goto	u2870
  4608     163D                     u2871:
  4609     163D  2E3F               	goto	l2510
  4610     163E                     u2870:
  4611     163E                     l2508:
  4612     163E  1438               	bsf	___fldiv@bexp,0
  4613     163F                     l2510:
  4614     163F  0838               	movf	___fldiv@bexp,w
  4615     1640  1903               	btfsc	3,2
  4616     1641  2E43               	goto	u2881
  4617     1642  2E44               	goto	u2880
  4618     1643                     u2881:
  4619     1643  2E54               	goto	l2520
  4620     1644                     u2880:
  4621     1644                     l2512:
  4622     1644  0A38               	incf	___fldiv@bexp,w
  4623     1645  1D03               	btfss	3,2
  4624     1646  2E48               	goto	u2891
  4625     1647  2E49               	goto	u2890
  4626     1648                     u2891:
  4627     1648  2E51               	goto	l2516
  4628     1649                     u2890:
  4629     1649                     l2514:
  4630     1649  3000               	movlw	0
  4631     164A  00A7               	movwf	___fldiv@b+3
  4632     164B  3000               	movlw	0
  4633     164C  00A6               	movwf	___fldiv@b+2
  4634     164D  3000               	movlw	0
  4635     164E  00A5               	movwf	___fldiv@b+1
  4636     164F  3000               	movlw	0
  4637     1650  00A4               	movwf	___fldiv@b
  4638     1651                     l2516:
  4639     1651  17A6               	bsf	___fldiv@b+2,7
  4640     1652                     l2518:
  4641     1652  01A7               	clrf	___fldiv@b+3
  4642     1653  2E5C               	goto	l2522
  4643     1654                     l2520:
  4644     1654  3000               	movlw	0
  4645     1655  00A7               	movwf	___fldiv@b+3
  4646     1656  3000               	movlw	0
  4647     1657  00A6               	movwf	___fldiv@b+2
  4648     1658  3000               	movlw	0
  4649     1659  00A5               	movwf	___fldiv@b+1
  4650     165A  3000               	movlw	0
  4651     165B  00A4               	movwf	___fldiv@b
  4652     165C                     l2522:
  4653     165C  0823               	movf	___fldiv@a+3,w
  4654     165D  3980               	andlw	128
  4655     165E  00FF               	movwf	btemp+1
  4656     165F  087F               	movf	btemp+1,w
  4657     1660  06B1               	xorwf	___fldiv@sign,f
  4658     1661                     l2524:
  4659     1661  0823               	movf	___fldiv@a+3,w
  4660     1662  00A8               	movwf	??___fldiv
  4661     1663  0728               	addwf	??___fldiv,w
  4662     1664  00B9               	movwf	___fldiv@aexp
  4663     1665                     l2526:
  4664     1665  1FA2               	btfss	___fldiv@a+2,7
  4665     1666  2E68               	goto	u2901
  4666     1667  2E69               	goto	u2900
  4667     1668                     u2901:
  4668     1668  2E6A               	goto	l2530
  4669     1669                     u2900:
  4670     1669                     l2528:
  4671     1669  1439               	bsf	___fldiv@aexp,0
  4672     166A                     l2530:
  4673     166A  0839               	movf	___fldiv@aexp,w
  4674     166B  1903               	btfsc	3,2
  4675     166C  2E6E               	goto	u2911
  4676     166D  2E6F               	goto	u2910
  4677     166E                     u2911:
  4678     166E  2E7F               	goto	l2540
  4679     166F                     u2910:
  4680     166F                     l2532:
  4681     166F  0A39               	incf	___fldiv@aexp,w
  4682     1670  1D03               	btfss	3,2
  4683     1671  2E73               	goto	u2921
  4684     1672  2E74               	goto	u2920
  4685     1673                     u2921:
  4686     1673  2E7C               	goto	l2536
  4687     1674                     u2920:
  4688     1674                     l2534:
  4689     1674  3000               	movlw	0
  4690     1675  00A3               	movwf	___fldiv@a+3
  4691     1676  3000               	movlw	0
  4692     1677  00A2               	movwf	___fldiv@a+2
  4693     1678  3000               	movlw	0
  4694     1679  00A1               	movwf	___fldiv@a+1
  4695     167A  3000               	movlw	0
  4696     167B  00A0               	movwf	___fldiv@a
  4697     167C                     l2536:
  4698     167C  17A2               	bsf	___fldiv@a+2,7
  4699     167D                     l2538:
  4700     167D  01A3               	clrf	___fldiv@a+3
  4701     167E  2E87               	goto	l758
  4702     167F                     l2540:
  4703     167F  3000               	movlw	0
  4704     1680  00A3               	movwf	___fldiv@a+3
  4705     1681  3000               	movlw	0
  4706     1682  00A2               	movwf	___fldiv@a+2
  4707     1683  3000               	movlw	0
  4708     1684  00A1               	movwf	___fldiv@a+1
  4709     1685  3000               	movlw	0
  4710     1686  00A0               	movwf	___fldiv@a
  4711     1687                     l758:
  4712     1687  0823               	movf	___fldiv@a+3,w
  4713     1688  0422               	iorwf	___fldiv@a+2,w
  4714     1689  0421               	iorwf	___fldiv@a+1,w
  4715     168A  0420               	iorwf	___fldiv@a,w
  4716     168B  1D03               	skipz
  4717     168C  2E8E               	goto	u2931
  4718     168D  2E8F               	goto	u2930
  4719     168E                     u2931:
  4720     168E  2EA8               	goto	l2550
  4721     168F                     u2930:
  4722     168F                     l2542:
  4723     168F  3000               	movlw	0
  4724     1690  00A7               	movwf	___fldiv@b+3
  4725     1691  3000               	movlw	0
  4726     1692  00A6               	movwf	___fldiv@b+2
  4727     1693  3000               	movlw	0
  4728     1694  00A5               	movwf	___fldiv@b+1
  4729     1695  3000               	movlw	0
  4730     1696  00A4               	movwf	___fldiv@b
  4731     1697  3080               	movlw	128
  4732     1698  04A6               	iorwf	___fldiv@b+2,f
  4733     1699  307F               	movlw	127
  4734     169A  04A7               	iorwf	___fldiv@b+3,f
  4735     169B                     l2544:
  4736     169B  0831               	movf	___fldiv@sign,w
  4737     169C  00FF               	movwf	btemp+1
  4738     169D  087F               	movf	btemp+1,w
  4739     169E  04A7               	iorwf	___fldiv@b+3,f
  4740     169F                     l2546:
  4741     169F  0827               	movf	___fldiv@b+3,w
  4742     16A0  00A3               	movwf	?___fldiv+3
  4743     16A1  0826               	movf	___fldiv@b+2,w
  4744     16A2  00A2               	movwf	?___fldiv+2
  4745     16A3  0825               	movf	___fldiv@b+1,w
  4746     16A4  00A1               	movwf	?___fldiv+1
  4747     16A5  0824               	movf	___fldiv@b,w
  4748     16A6  00A0               	movwf	?___fldiv
  4749     16A7  2FFF               	goto	l760
  4750     16A8                     l2550:
  4751     16A8  0838               	movf	___fldiv@bexp,w
  4752     16A9  1D03               	btfss	3,2
  4753     16AA  2EAC               	goto	u2941
  4754     16AB  2EAD               	goto	u2940
  4755     16AC                     u2941:
  4756     16AC  2EB6               	goto	l2556
  4757     16AD                     u2940:
  4758     16AD                     l2552:
  4759     16AD  3000               	movlw	0
  4760     16AE  00A3               	movwf	?___fldiv+3
  4761     16AF  3000               	movlw	0
  4762     16B0  00A2               	movwf	?___fldiv+2
  4763     16B1  3000               	movlw	0
  4764     16B2  00A1               	movwf	?___fldiv+1
  4765     16B3  3000               	movlw	0
  4766     16B4  00A0               	movwf	?___fldiv
  4767     16B5  2FFF               	goto	l760
  4768     16B6                     l2556:
  4769     16B6  0838               	movf	___fldiv@bexp,w
  4770     16B7  00A8               	movwf	??___fldiv
  4771     16B8  01A9               	clrf	??___fldiv+1
  4772     16B9  0829               	movf	??___fldiv+1,w
  4773     16BA  00AB               	movwf	??___fldiv+3
  4774     16BB  0839               	movf	___fldiv@aexp,w
  4775     16BC  0228               	subwf	??___fldiv,w
  4776     16BD  00AA               	movwf	??___fldiv+2
  4777     16BE  1C03               	skipc
  4778     16BF  03AB               	decf	??___fldiv+3,f
  4779     16C0  082A               	movf	??___fldiv+2,w
  4780     16C1  3E7F               	addlw	127
  4781     16C2  00B2               	movwf	___fldiv@new_exp
  4782     16C3  082B               	movf	??___fldiv+3,w
  4783     16C4  1803               	skipnc
  4784     16C5  3E01               	addlw	1
  4785     16C6  3E00               	addlw	0
  4786     16C7  00B3               	movwf	___fldiv@new_exp+1
  4787     16C8                     l2558:
  4788     16C8  0827               	movf	___fldiv@b+3,w
  4789     16C9  00B0               	movwf	___fldiv@rem+3
  4790     16CA  0826               	movf	___fldiv@b+2,w
  4791     16CB  00AF               	movwf	___fldiv@rem+2
  4792     16CC  0825               	movf	___fldiv@b+1,w
  4793     16CD  00AE               	movwf	___fldiv@rem+1
  4794     16CE  0824               	movf	___fldiv@b,w
  4795     16CF  00AD               	movwf	___fldiv@rem
  4796     16D0                     l2560:
  4797     16D0  3000               	movlw	0
  4798     16D1  00A7               	movwf	___fldiv@b+3
  4799     16D2  3000               	movlw	0
  4800     16D3  00A6               	movwf	___fldiv@b+2
  4801     16D4  3000               	movlw	0
  4802     16D5  00A5               	movwf	___fldiv@b+1
  4803     16D6  3000               	movlw	0
  4804     16D7  00A4               	movwf	___fldiv@b
  4805     16D8                     l2562:
  4806     16D8  3000               	movlw	0
  4807     16D9  00B7               	movwf	___fldiv@grs+3
  4808     16DA  3000               	movlw	0
  4809     16DB  00B6               	movwf	___fldiv@grs+2
  4810     16DC  3000               	movlw	0
  4811     16DD  00B5               	movwf	___fldiv@grs+1
  4812     16DE  3000               	movlw	0
  4813     16DF  00B4               	movwf	___fldiv@grs
  4814     16E0                     l2564:
  4815     16E0  01B9               	clrf	___fldiv@aexp
  4816     16E1  2F2C               	goto	l2584
  4817     16E2                     l2566:
  4818     16E2  0839               	movf	___fldiv@aexp,w
  4819     16E3  1903               	btfsc	3,2
  4820     16E4  2EE6               	goto	u2951
  4821     16E5  2EE7               	goto	u2950
  4822     16E6                     u2951:
  4823     16E6  2F07               	goto	l2576
  4824     16E7                     u2950:
  4825     16E7                     l2568:
  4826     16E7  3001               	movlw	1
  4827     16E8  00A8               	movwf	??___fldiv
  4828     16E9                     u2965:
  4829     16E9  1003               	clrc
  4830     16EA  0DAD               	rlf	___fldiv@rem,f
  4831     16EB  0DAE               	rlf	___fldiv@rem+1,f
  4832     16EC  0DAF               	rlf	___fldiv@rem+2,f
  4833     16ED  0DB0               	rlf	___fldiv@rem+3,f
  4834     16EE  0BA8               	decfsz	??___fldiv,f
  4835     16EF  2EE9               	goto	u2965
  4836     16F0  3001               	movlw	1
  4837     16F1  00A8               	movwf	??___fldiv
  4838     16F2                     u2975:
  4839     16F2  1003               	clrc
  4840     16F3  0DA4               	rlf	___fldiv@b,f
  4841     16F4  0DA5               	rlf	___fldiv@b+1,f
  4842     16F5  0DA6               	rlf	___fldiv@b+2,f
  4843     16F6  0DA7               	rlf	___fldiv@b+3,f
  4844     16F7  0BA8               	decfsz	??___fldiv,f
  4845     16F8  2EF2               	goto	u2975
  4846     16F9                     l2570:
  4847     16F9  1FB7               	btfss	___fldiv@grs+3,7
  4848     16FA  2EFC               	goto	u2981
  4849     16FB  2EFD               	goto	u2980
  4850     16FC                     u2981:
  4851     16FC  2EFE               	goto	l2574
  4852     16FD                     u2980:
  4853     16FD                     l2572:
  4854     16FD  1424               	bsf	___fldiv@b,0
  4855     16FE                     l2574:
  4856     16FE  3001               	movlw	1
  4857     16FF  00A8               	movwf	??___fldiv
  4858     1700                     u2995:
  4859     1700  1003               	clrc
  4860     1701  0DB4               	rlf	___fldiv@grs,f
  4861     1702  0DB5               	rlf	___fldiv@grs+1,f
  4862     1703  0DB6               	rlf	___fldiv@grs+2,f
  4863     1704  0DB7               	rlf	___fldiv@grs+3,f
  4864     1705  0BA8               	decfsz	??___fldiv,f
  4865     1706  2F00               	goto	u2995
  4866     1707                     l2576:
  4867     1707  0823               	movf	___fldiv@a+3,w
  4868     1708  0230               	subwf	___fldiv@rem+3,w
  4869     1709  1D03               	skipz
  4870     170A  2F15               	goto	u3005
  4871     170B  0822               	movf	___fldiv@a+2,w
  4872     170C  022F               	subwf	___fldiv@rem+2,w
  4873     170D  1D03               	skipz
  4874     170E  2F15               	goto	u3005
  4875     170F  0821               	movf	___fldiv@a+1,w
  4876     1710  022E               	subwf	___fldiv@rem+1,w
  4877     1711  1D03               	skipz
  4878     1712  2F15               	goto	u3005
  4879     1713  0820               	movf	___fldiv@a,w
  4880     1714  022D               	subwf	___fldiv@rem,w
  4881     1715                     u3005:
  4882     1715  1C03               	skipc
  4883     1716  2F18               	goto	u3001
  4884     1717  2F19               	goto	u3000
  4885     1718                     u3001:
  4886     1718  2F28               	goto	l2582
  4887     1719                     u3000:
  4888     1719                     l2578:
  4889     1719  1737               	bsf	___fldiv@grs+3,6
  4890     171A                     l2580:
  4891     171A  0820               	movf	___fldiv@a,w
  4892     171B  02AD               	subwf	___fldiv@rem,f
  4893     171C  0821               	movf	___fldiv@a+1,w
  4894     171D  1C03               	skipc
  4895     171E  0F21               	incfsz	___fldiv@a+1,w
  4896     171F  02AE               	subwf	___fldiv@rem+1,f
  4897     1720  0822               	movf	___fldiv@a+2,w
  4898     1721  1C03               	skipc
  4899     1722  0F22               	incfsz	___fldiv@a+2,w
  4900     1723  02AF               	subwf	___fldiv@rem+2,f
  4901     1724  0823               	movf	___fldiv@a+3,w
  4902     1725  1C03               	skipc
  4903     1726  0F23               	incfsz	___fldiv@a+3,w
  4904     1727  02B0               	subwf	___fldiv@rem+3,f
  4905     1728                     l2582:
  4906     1728  3001               	movlw	1
  4907     1729  00FF               	movwf	btemp+1
  4908     172A  087F               	movf	btemp+1,w
  4909     172B  07B9               	addwf	___fldiv@aexp,f
  4910     172C                     l2584:
  4911     172C  301A               	movlw	26
  4912     172D  0239               	subwf	___fldiv@aexp,w
  4913     172E  1C03               	skipc
  4914     172F  2F31               	goto	u3011
  4915     1730  2F32               	goto	u3010
  4916     1731                     u3011:
  4917     1731  2EE2               	goto	l2566
  4918     1732                     u3010:
  4919     1732                     l2586:
  4920     1732  0830               	movf	___fldiv@rem+3,w
  4921     1733  042F               	iorwf	___fldiv@rem+2,w
  4922     1734  042E               	iorwf	___fldiv@rem+1,w
  4923     1735  042D               	iorwf	___fldiv@rem,w
  4924     1736  1903               	skipnz
  4925     1737  2F39               	goto	u3021
  4926     1738  2F3A               	goto	u3020
  4927     1739                     u3021:
  4928     1739  2F59               	goto	l2600
  4929     173A                     u3020:
  4930     173A                     l2588:
  4931     173A  1434               	bsf	___fldiv@grs,0
  4932     173B  2F59               	goto	l2600
  4933     173C                     l2590:
  4934     173C  3001               	movlw	1
  4935     173D  00A8               	movwf	??___fldiv
  4936     173E                     u3035:
  4937     173E  1003               	clrc
  4938     173F  0DA4               	rlf	___fldiv@b,f
  4939     1740  0DA5               	rlf	___fldiv@b+1,f
  4940     1741  0DA6               	rlf	___fldiv@b+2,f
  4941     1742  0DA7               	rlf	___fldiv@b+3,f
  4942     1743  0BA8               	decfsz	??___fldiv,f
  4943     1744  2F3E               	goto	u3035
  4944     1745                     l2592:
  4945     1745  1FB7               	btfss	___fldiv@grs+3,7
  4946     1746  2F48               	goto	u3041
  4947     1747  2F49               	goto	u3040
  4948     1748                     u3041:
  4949     1748  2F4A               	goto	l2596
  4950     1749                     u3040:
  4951     1749                     l2594:
  4952     1749  1424               	bsf	___fldiv@b,0
  4953     174A                     l2596:
  4954     174A  3001               	movlw	1
  4955     174B  00A8               	movwf	??___fldiv
  4956     174C                     u3055:
  4957     174C  1003               	clrc
  4958     174D  0DB4               	rlf	___fldiv@grs,f
  4959     174E  0DB5               	rlf	___fldiv@grs+1,f
  4960     174F  0DB6               	rlf	___fldiv@grs+2,f
  4961     1750  0DB7               	rlf	___fldiv@grs+3,f
  4962     1751  0BA8               	decfsz	??___fldiv,f
  4963     1752  2F4C               	goto	u3055
  4964     1753                     l2598:
  4965     1753  30FF               	movlw	255
  4966     1754  07B2               	addwf	___fldiv@new_exp,f
  4967     1755  1803               	skipnc
  4968     1756  0AB3               	incf	___fldiv@new_exp+1,f
  4969     1757  30FF               	movlw	255
  4970     1758  07B3               	addwf	___fldiv@new_exp+1,f
  4971     1759                     l2600:
  4972     1759  1FA6               	btfss	___fldiv@b+2,7
  4973     175A  2F5C               	goto	u3061
  4974     175B  2F5D               	goto	u3060
  4975     175C                     u3061:
  4976     175C  2F3C               	goto	l2590
  4977     175D                     u3060:
  4978     175D                     l2602:
  4979     175D  01B9               	clrf	___fldiv@aexp
  4980     175E                     l2604:
  4981     175E  1FB7               	btfss	___fldiv@grs+3,7
  4982     175F  2F61               	goto	u3071
  4983     1760  2F62               	goto	u3070
  4984     1761                     u3071:
  4985     1761  2F7E               	goto	l2612
  4986     1762                     u3070:
  4987     1762                     l2606:
  4988     1762  30FF               	movlw	255
  4989     1763  0534               	andwf	___fldiv@grs,w
  4990     1764  00A8               	movwf	??___fldiv
  4991     1765  30FF               	movlw	255
  4992     1766  0535               	andwf	___fldiv@grs+1,w
  4993     1767  00A9               	movwf	??___fldiv+1
  4994     1768  30FF               	movlw	255
  4995     1769  0536               	andwf	___fldiv@grs+2,w
  4996     176A  00AA               	movwf	??___fldiv+2
  4997     176B  307F               	movlw	127
  4998     176C  0537               	andwf	___fldiv@grs+3,w
  4999     176D  00AB               	movwf	??___fldiv+3
  5000     176E  082B               	movf	??___fldiv+3,w
  5001     176F  042A               	iorwf	??___fldiv+2,w
  5002     1770  0429               	iorwf	??___fldiv+1,w
  5003     1771  0428               	iorwf	??___fldiv,w
  5004     1772  1903               	skipnz
  5005     1773  2F75               	goto	u3081
  5006     1774  2F76               	goto	u3080
  5007     1775                     u3081:
  5008     1775  2F79               	goto	l774
  5009     1776                     u3080:
  5010     1776                     l2608:
  5011     1776  01B9               	clrf	___fldiv@aexp
  5012     1777  0AB9               	incf	___fldiv@aexp,f
  5013     1778  2F7E               	goto	l2612
  5014     1779                     l774:
  5015     1779  1C24               	btfss	___fldiv@b,0
  5016     177A  2F7C               	goto	u3091
  5017     177B  2F7D               	goto	u3090
  5018     177C                     u3091:
  5019     177C  2F7E               	goto	l2612
  5020     177D                     u3090:
  5021     177D  2F76               	goto	l2608
  5022     177E                     l2612:
  5023     177E  0839               	movf	___fldiv@aexp,w
  5024     177F  1903               	btfsc	3,2
  5025     1780  2F82               	goto	u3101
  5026     1781  2F83               	goto	u3100
  5027     1782                     u3101:
  5028     1782  2FB4               	goto	l2622
  5029     1783                     u3100:
  5030     1783                     l2614:
  5031     1783  3001               	movlw	1
  5032     1784  07A4               	addwf	___fldiv@b,f
  5033     1785  3000               	movlw	0
  5034     1786  1803               	skipnc
  5035     1787  3001               	movlw	1
  5036     1788  07A5               	addwf	___fldiv@b+1,f
  5037     1789  3000               	movlw	0
  5038     178A  1803               	skipnc
  5039     178B  3001               	movlw	1
  5040     178C  07A6               	addwf	___fldiv@b+2,f
  5041     178D  3000               	movlw	0
  5042     178E  1803               	skipnc
  5043     178F  3001               	movlw	1
  5044     1790  07A7               	addwf	___fldiv@b+3,f
  5045     1791                     l2616:
  5046     1791  1C27               	btfss	___fldiv@b+3,0
  5047     1792  2F94               	goto	u3111
  5048     1793  2F95               	goto	u3110
  5049     1794                     u3111:
  5050     1794  2FB4               	goto	l2622
  5051     1795                     u3110:
  5052     1795                     l2618:
  5053     1795  0824               	movf	___fldiv@b,w
  5054     1796  00A8               	movwf	??___fldiv
  5055     1797  0825               	movf	___fldiv@b+1,w
  5056     1798  00A9               	movwf	??___fldiv+1
  5057     1799  0826               	movf	___fldiv@b+2,w
  5058     179A  00AA               	movwf	??___fldiv+2
  5059     179B  0827               	movf	___fldiv@b+3,w
  5060     179C  00AB               	movwf	??___fldiv+3
  5061     179D  3001               	movlw	1
  5062     179E  00AC               	movwf	??___fldiv+4
  5063     179F                     u3125:
  5064     179F  0D2B               	rlf	??___fldiv+3,w
  5065     17A0  0CAB               	rrf	??___fldiv+3,f
  5066     17A1  0CAA               	rrf	??___fldiv+2,f
  5067     17A2  0CA9               	rrf	??___fldiv+1,f
  5068     17A3  0CA8               	rrf	??___fldiv,f
  5069     17A4                     u3120:
  5070     17A4  0BAC               	decfsz	??___fldiv+4,f
  5071     17A5  2F9F               	goto	u3125
  5072     17A6  082B               	movf	??___fldiv+3,w
  5073     17A7  00A7               	movwf	___fldiv@b+3
  5074     17A8  082A               	movf	??___fldiv+2,w
  5075     17A9  00A6               	movwf	___fldiv@b+2
  5076     17AA  0829               	movf	??___fldiv+1,w
  5077     17AB  00A5               	movwf	___fldiv@b+1
  5078     17AC  0828               	movf	??___fldiv,w
  5079     17AD  00A4               	movwf	___fldiv@b
  5080     17AE                     l2620:
  5081     17AE  3001               	movlw	1
  5082     17AF  07B2               	addwf	___fldiv@new_exp,f
  5083     17B0  1803               	skipnc
  5084     17B1  0AB3               	incf	___fldiv@new_exp+1,f
  5085     17B2  3000               	movlw	0
  5086     17B3  07B3               	addwf	___fldiv@new_exp+1,f
  5087     17B4                     l2622:
  5088     17B4  0833               	movf	___fldiv@new_exp+1,w
  5089     17B5  3A80               	xorlw	128
  5090     17B6  00FF               	movwf	btemp+1
  5091     17B7  3080               	movlw	128
  5092     17B8  027F               	subwf	btemp+1,w
  5093     17B9  1D03               	skipz
  5094     17BA  2FBD               	goto	u3135
  5095     17BB  30FF               	movlw	255
  5096     17BC  0232               	subwf	___fldiv@new_exp,w
  5097     17BD                     u3135:
  5098     17BD  1C03               	skipc
  5099     17BE  2FC0               	goto	u3131
  5100     17BF  2FC1               	goto	u3130
  5101     17C0                     u3131:
  5102     17C0  2FCF               	goto	l2626
  5103     17C1                     u3130:
  5104     17C1                     l2624:
  5105     17C1  30FF               	movlw	255
  5106     17C2  1283               	bcf	3,5	;RP0=0, select bank0
  5107     17C3  1303               	bcf	3,6	;RP1=0, select bank0
  5108     17C4  00B2               	movwf	___fldiv@new_exp
  5109     17C5  3000               	movlw	0
  5110     17C6  00B3               	movwf	___fldiv@new_exp+1
  5111     17C7  3000               	movlw	0
  5112     17C8  00A7               	movwf	___fldiv@b+3
  5113     17C9  3000               	movlw	0
  5114     17CA  00A6               	movwf	___fldiv@b+2
  5115     17CB  3000               	movlw	0
  5116     17CC  00A5               	movwf	___fldiv@b+1
  5117     17CD  3000               	movlw	0
  5118     17CE  00A4               	movwf	___fldiv@b
  5119     17CF                     l2626:
  5120     17CF  1283               	bcf	3,5	;RP0=0, select bank0
  5121     17D0  1303               	bcf	3,6	;RP1=0, select bank0
  5122     17D1  0833               	movf	___fldiv@new_exp+1,w
  5123     17D2  3A80               	xorlw	128
  5124     17D3  00FF               	movwf	btemp+1
  5125     17D4  3080               	movlw	128
  5126     17D5  027F               	subwf	btemp+1,w
  5127     17D6  1D03               	skipz
  5128     17D7  2FDA               	goto	u3145
  5129     17D8  3001               	movlw	1
  5130     17D9  0232               	subwf	___fldiv@new_exp,w
  5131     17DA                     u3145:
  5132     17DA  1803               	skipnc
  5133     17DB  2FDD               	goto	u3141
  5134     17DC  2FDE               	goto	u3140
  5135     17DD                     u3141:
  5136     17DD  2FEB               	goto	l780
  5137     17DE                     u3140:
  5138     17DE                     l2628:
  5139     17DE  1283               	bcf	3,5	;RP0=0, select bank0
  5140     17DF  1303               	bcf	3,6	;RP1=0, select bank0
  5141     17E0  01B2               	clrf	___fldiv@new_exp
  5142     17E1  01B3               	clrf	___fldiv@new_exp+1
  5143     17E2                     l2630:
  5144     17E2  3000               	movlw	0
  5145     17E3  00A7               	movwf	___fldiv@b+3
  5146     17E4  3000               	movlw	0
  5147     17E5  00A6               	movwf	___fldiv@b+2
  5148     17E6  3000               	movlw	0
  5149     17E7  00A5               	movwf	___fldiv@b+1
  5150     17E8  3000               	movlw	0
  5151     17E9  00A4               	movwf	___fldiv@b
  5152     17EA                     l2632:
  5153     17EA  01B1               	clrf	___fldiv@sign
  5154     17EB                     l780:
  5155     17EB  1283               	bcf	3,5	;RP0=0, select bank0
  5156     17EC  1303               	bcf	3,6	;RP1=0, select bank0
  5157     17ED  0832               	movf	___fldiv@new_exp,w
  5158     17EE  00B8               	movwf	___fldiv@bexp
  5159     17EF                     l2634:
  5160     17EF  1C38               	btfss	___fldiv@bexp,0
  5161     17F0  2FF2               	goto	u3151
  5162     17F1  2FF3               	goto	u3150
  5163     17F2                     u3151:
  5164     17F2  2FF5               	goto	l2638
  5165     17F3                     u3150:
  5166     17F3                     l2636:
  5167     17F3  17A6               	bsf	___fldiv@b+2,7
  5168     17F4  2FF9               	goto	l2640
  5169     17F5                     l2638:
  5170     17F5  307F               	movlw	127
  5171     17F6  00FF               	movwf	btemp+1
  5172     17F7  087F               	movf	btemp+1,w
  5173     17F8  05A6               	andwf	___fldiv@b+2,f
  5174     17F9                     l2640:
  5175     17F9  0838               	movf	___fldiv@bexp,w
  5176     17FA  00A8               	movwf	??___fldiv
  5177     17FB  1003               	clrc
  5178     17FC  0C28               	rrf	??___fldiv,w
  5179     17FD  00A7               	movwf	___fldiv@b+3
  5180     17FE  2E9B               	goto	l2544
  5181     17FF                     l760:
  5182     17FF  0008               	return
  5183     1800                     __end_of___fldiv:
  5184                           
  5185                           	psect	text13
  5186     1436                     __ptext13:	
  5187 ;; *************** function _UART_Write_Text *****************
  5188 ;; Defined at:
  5189 ;;		line 18 in file "uart_lib.c"
  5190 ;; Parameters:    Size  Location     Type
  5191 ;;  text            2    1[BANK0 ] PTR unsigned char 
  5192 ;;		 -> STR_39(5), STR_38(5), STR_35(5), main@combinedText_395(20), 
  5193 ;;		 -> main@uartMessage_391(8), STR_29(5), main@combinedText(20), main@uartMessage(8), 
  5194 ;;		 -> STR_23(5), 
  5195 ;; Auto vars:     Size  Location     Type
  5196 ;;  i               2    6[BANK0 ] int 
  5197 ;; Return value:  Size  Location     Type
  5198 ;;                  1    wreg      void 
  5199 ;; Registers used:
  5200 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5201 ;; Tracked objects:
  5202 ;;		On entry : 0/0
  5203 ;;		On exit  : 0/0
  5204 ;;		Unchanged: 0/0
  5205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5206 ;;      Params:         0       2       0       0       0
  5207 ;;      Locals:         0       2       0       0       0
  5208 ;;      Temps:          0       3       0       0       0
  5209 ;;      Totals:         0       7       0       0       0
  5210 ;;Total ram usage:        7 bytes
  5211 ;; Hardware stack levels used: 1
  5212 ;; Hardware stack levels required when called: 3
  5213 ;; This function calls:
  5214 ;;		_UART_Write
  5215 ;; This function is called by:
  5216 ;;		_main
  5217 ;; This function uses a non-reentrant model
  5218 ;;
  5219                           
  5220     1436                     _UART_Write_Text:	
  5221                           ;psect for function _UART_Write_Text
  5222                           
  5223     1436                     l3598:	
  5224                           ;incstack = 0
  5225                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5226                           
  5227                           
  5228                           ;uart_lib.c: 18: void UART_Write_Text(char *text);uart_lib.c: 19: {;uart_lib.c: 20:   in
      +                          t i;;uart_lib.c: 21:   for(i=0;text[i]!='\0';i++)
  5229     1436  1283               	bcf	3,5	;RP0=0, select bank0
  5230     1437  1303               	bcf	3,6	;RP1=0, select bank0
  5231     1438  01A6               	clrf	UART_Write_Text@i
  5232     1439  01A7               	clrf	UART_Write_Text@i+1
  5233     143A  2C5F               	goto	l3604
  5234     143B                     l3600:
  5235                           
  5236                           ;uart_lib.c: 22:     UART_Write(text[i]);
  5237     143B  0826               	movf	UART_Write_Text@i,w
  5238     143C  0721               	addwf	UART_Write_Text@text,w
  5239     143D  00A4               	movwf	??_UART_Write_Text+1
  5240     143E  0822               	movf	UART_Write_Text@text+1,w
  5241     143F  00A3               	movwf	??_UART_Write_Text
  5242     1440  1803               	skipnc
  5243     1441  0AA3               	incf	??_UART_Write_Text,f
  5244     1442  1FA6               	btfss	UART_Write_Text@i,7
  5245     1443  2C45               	goto	u4730
  5246     1444  03A3               	decf	??_UART_Write_Text,f
  5247     1445                     u4730:
  5248     1445  1283               	bcf	3,5	;RP0=0, select bank0
  5249     1446  1303               	bcf	3,6	;RP1=0, select bank0
  5250     1447  0823               	movf	??_UART_Write_Text,w
  5251     1448  00A5               	movwf	??_UART_Write_Text+2
  5252     1449  0825               	movf	??_UART_Write_Text+2,w
  5253     144A  00FF               	movwf	btemp+1
  5254     144B  0824               	movf	??_UART_Write_Text+1,w
  5255     144C  0084               	movwf	4
  5256     144D  160A  158A  2000  160A  118A  	fcall	stringtab
  5257     1452  160A  118A  22A3  160A  118A  	fcall	_UART_Write
  5258     1457                     l3602:
  5259     1457  3001               	movlw	1
  5260     1458  1283               	bcf	3,5	;RP0=0, select bank0
  5261     1459  1303               	bcf	3,6	;RP1=0, select bank0
  5262     145A  07A6               	addwf	UART_Write_Text@i,f
  5263     145B  1803               	skipnc
  5264     145C  0AA7               	incf	UART_Write_Text@i+1,f
  5265     145D  3000               	movlw	0
  5266     145E  07A7               	addwf	UART_Write_Text@i+1,f
  5267     145F                     l3604:
  5268     145F  0826               	movf	UART_Write_Text@i,w
  5269     1460  0721               	addwf	UART_Write_Text@text,w
  5270     1461  00A4               	movwf	??_UART_Write_Text+1
  5271     1462  0822               	movf	UART_Write_Text@text+1,w
  5272     1463  00A3               	movwf	??_UART_Write_Text
  5273     1464  1803               	skipnc
  5274     1465  0AA3               	incf	??_UART_Write_Text,f
  5275     1466  1FA6               	btfss	UART_Write_Text@i,7
  5276     1467  2C69               	goto	u4740
  5277     1468  03A3               	decf	??_UART_Write_Text,f
  5278     1469                     u4740:
  5279     1469  1283               	bcf	3,5	;RP0=0, select bank0
  5280     146A  1303               	bcf	3,6	;RP1=0, select bank0
  5281     146B  0823               	movf	??_UART_Write_Text,w
  5282     146C  00A5               	movwf	??_UART_Write_Text+2
  5283     146D  0825               	movf	??_UART_Write_Text+2,w
  5284     146E  00FF               	movwf	btemp+1
  5285     146F  0824               	movf	??_UART_Write_Text+1,w
  5286     1470  0084               	movwf	4
  5287     1471  160A  158A  2000  160A  118A  	fcall	stringtab
  5288     1476  3A00               	xorlw	0
  5289     1477  1D03               	skipz
  5290     1478  2C7A               	goto	u4751
  5291     1479  2C7B               	goto	u4750
  5292     147A                     u4751:
  5293     147A  2C3B               	goto	l3600
  5294     147B                     u4750:
  5295     147B                     l269:
  5296     147B  0008               	return
  5297     147C                     __end_of_UART_Write_Text:
  5298                           
  5299                           	psect	text14
  5300     12A3                     __ptext14:	
  5301 ;; *************** function _UART_Write *****************
  5302 ;; Defined at:
  5303 ;;		line 12 in file "uart_lib.c"
  5304 ;; Parameters:    Size  Location     Type
  5305 ;;  data            1    wreg     unsigned char 
  5306 ;; Auto vars:     Size  Location     Type
  5307 ;;  data            1    0[BANK0 ] unsigned char 
  5308 ;; Return value:  Size  Location     Type
  5309 ;;                  1    wreg      void 
  5310 ;; Registers used:
  5311 ;;		wreg
  5312 ;; Tracked objects:
  5313 ;;		On entry : 0/0
  5314 ;;		On exit  : 0/0
  5315 ;;		Unchanged: 0/0
  5316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5317 ;;      Params:         0       0       0       0       0
  5318 ;;      Locals:         0       1       0       0       0
  5319 ;;      Temps:          0       0       0       0       0
  5320 ;;      Totals:         0       1       0       0       0
  5321 ;;Total ram usage:        1 bytes
  5322 ;; Hardware stack levels used: 1
  5323 ;; Hardware stack levels required when called: 2
  5324 ;; This function calls:
  5325 ;;		Nothing
  5326 ;; This function is called by:
  5327 ;;		_UART_Write_Text
  5328 ;; This function uses a non-reentrant model
  5329 ;;
  5330                           
  5331     12A3                     _UART_Write:	
  5332                           ;psect for function _UART_Write
  5333                           
  5334                           
  5335                           ;incstack = 0
  5336                           ; Regs used in _UART_Write: [wreg]
  5337                           ;UART_Write@data stored from wreg
  5338     12A3  1283               	bcf	3,5	;RP0=0, select bank0
  5339     12A4  1303               	bcf	3,6	;RP1=0, select bank0
  5340     12A5  00A0               	movwf	UART_Write@data
  5341     12A6                     l3384:
  5342     12A6                     l260:	
  5343                           ;uart_lib.c: 12: void UART_Write(char data);uart_lib.c: 13: {;uart_lib.c: 14:   while(!T
      +                          RMT);
  5344                           
  5345     12A6  1683               	bsf	3,5	;RP0=1, select bank1
  5346     12A7  1303               	bcf	3,6	;RP1=0, select bank1
  5347     12A8  1C98               	btfss	24,1	;volatile
  5348     12A9  2AAB               	goto	u4371
  5349     12AA  2AAC               	goto	u4370
  5350     12AB                     u4371:
  5351     12AB  2AA6               	goto	l260
  5352     12AC                     u4370:
  5353     12AC                     l3386:
  5354                           
  5355                           ;uart_lib.c: 15:   TXREG = data;
  5356     12AC  1283               	bcf	3,5	;RP0=0, select bank0
  5357     12AD  1303               	bcf	3,6	;RP1=0, select bank0
  5358     12AE  0820               	movf	UART_Write@data,w
  5359     12AF  0099               	movwf	25	;volatile
  5360     12B0                     l263:
  5361     12B0  0008               	return
  5362     12B1                     __end_of_UART_Write:
  5363                           
  5364                           	psect	text15
  5365     12B1                     __ptext15:	
  5366 ;; *************** function _UART_Initialize *****************
  5367 ;; Defined at:
  5368 ;;		line 4 in file "uart_lib.c"
  5369 ;; Parameters:    Size  Location     Type
  5370 ;;		None
  5371 ;; Auto vars:     Size  Location     Type
  5372 ;;		None
  5373 ;; Return value:  Size  Location     Type
  5374 ;;                  1    wreg      void 
  5375 ;; Registers used:
  5376 ;;		wreg, status,2
  5377 ;; Tracked objects:
  5378 ;;		On entry : 0/0
  5379 ;;		On exit  : 0/0
  5380 ;;		Unchanged: 0/0
  5381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5382 ;;      Params:         0       0       0       0       0
  5383 ;;      Locals:         0       0       0       0       0
  5384 ;;      Temps:          0       0       0       0       0
  5385 ;;      Totals:         0       0       0       0       0
  5386 ;;Total ram usage:        0 bytes
  5387 ;; Hardware stack levels used: 1
  5388 ;; Hardware stack levels required when called: 2
  5389 ;; This function calls:
  5390 ;;		Nothing
  5391 ;; This function is called by:
  5392 ;;		_main
  5393 ;; This function uses a non-reentrant model
  5394 ;;
  5395                           
  5396     12B1                     _UART_Initialize:	
  5397                           ;psect for function _UART_Initialize
  5398                           
  5399     12B1                     l2328:	
  5400                           ;incstack = 0
  5401                           ; Regs used in _UART_Initialize: [wreg+status,2]
  5402                           
  5403                           
  5404                           ;uart_lib.c: 6:     TXSTA=0b00100100;
  5405     12B1  3024               	movlw	36
  5406     12B2  1683               	bsf	3,5	;RP0=1, select bank1
  5407     12B3  1303               	bcf	3,6	;RP1=0, select bank1
  5408     12B4  0098               	movwf	24	;volatile
  5409                           
  5410                           ;uart_lib.c: 7:     RCSTA=0b10010000;
  5411     12B5  3090               	movlw	144
  5412     12B6  1283               	bcf	3,5	;RP0=0, select bank0
  5413     12B7  1303               	bcf	3,6	;RP1=0, select bank0
  5414     12B8  0098               	movwf	24	;volatile
  5415                           
  5416                           ;uart_lib.c: 8:     SPBRG=12;
  5417     12B9  300C               	movlw	12
  5418     12BA  1683               	bsf	3,5	;RP0=1, select bank1
  5419     12BB  1303               	bcf	3,6	;RP1=0, select bank1
  5420     12BC  0099               	movwf	25	;volatile
  5421     12BD                     l2330:
  5422                           
  5423                           ;uart_lib.c: 9:     TXREG=0x00;
  5424     12BD  1283               	bcf	3,5	;RP0=0, select bank0
  5425     12BE  1303               	bcf	3,6	;RP1=0, select bank0
  5426     12BF  0199               	clrf	25	;volatile
  5427     12C0                     l257:
  5428     12C0  0008               	return
  5429     12C1                     __end_of_UART_Initialize:
  5430                           
  5431                           	psect	text16
  5432     13F0                     __ptext16:	
  5433 ;; *************** function _Lcd_Write_String *****************
  5434 ;; Defined at:
  5435 ;;		line 96 in file "./lcd.h"
  5436 ;; Parameters:    Size  Location     Type
  5437 ;;  a               2    5[BANK0 ] PTR unsigned char 
  5438 ;;		 -> STR_41(24), STR_40(24), STR_37(27), STR_36(26), 
  5439 ;;		 -> STR_34(14), STR_32(13), STR_30(10), STR_28(9), 
  5440 ;;		 -> STR_26(11), STR_24(10), STR_22(9), main@rpmString(5), 
  5441 ;;		 -> STR_20(5), main@adcString1(4), STR_18(10), STR_17(3), 
  5442 ;;		 -> main@lcdText(9), STR_15(14), STR_14(19), STR_13(14), 
  5443 ;;		 -> STR_12(19), STR_11(14), STR_10(19), STR_9(14), 
  5444 ;;		 -> STR_8(19), STR_7(14), STR_6(19), STR_5(14), 
  5445 ;;		 -> STR_4(19), STR_3(3), STR_2(15), STR_1(16), 
  5446 ;; Auto vars:     Size  Location     Type
  5447 ;;  i               2   10[BANK0 ] int 
  5448 ;; Return value:  Size  Location     Type
  5449 ;;                  1    wreg      void 
  5450 ;; Registers used:
  5451 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5452 ;; Tracked objects:
  5453 ;;		On entry : 0/0
  5454 ;;		On exit  : 0/0
  5455 ;;		Unchanged: 0/0
  5456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5457 ;;      Params:         0       2       0       0       0
  5458 ;;      Locals:         0       2       0       0       0
  5459 ;;      Temps:          0       3       0       0       0
  5460 ;;      Totals:         0       7       0       0       0
  5461 ;;Total ram usage:        7 bytes
  5462 ;; Hardware stack levels used: 1
  5463 ;; Hardware stack levels required when called: 4
  5464 ;; This function calls:
  5465 ;;		_Lcd_Write_Char
  5466 ;; This function is called by:
  5467 ;;		_main
  5468 ;; This function uses a non-reentrant model
  5469 ;;
  5470                           
  5471     13F0                     _Lcd_Write_String:	
  5472                           ;psect for function _Lcd_Write_String
  5473                           
  5474     13F0                     l3460:	
  5475                           ;incstack = 0
  5476                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5477                           
  5478                           
  5479                           ;./lcd.h: 96: void Lcd_Write_String(char *a);./lcd.h: 97: {;./lcd.h: 98:  int i;;./lcd.h
      +                          : 99:  for(i=0;a[i]!='\0';i++)
  5480     13F0  1283               	bcf	3,5	;RP0=0, select bank0
  5481     13F1  1303               	bcf	3,6	;RP1=0, select bank0
  5482     13F2  01AA               	clrf	Lcd_Write_String@i
  5483     13F3  01AB               	clrf	Lcd_Write_String@i+1
  5484     13F4  2C19               	goto	l3466
  5485     13F5                     l3462:
  5486                           
  5487                           ;./lcd.h: 100:     Lcd_Write_Char(a[i]);
  5488     13F5  082A               	movf	Lcd_Write_String@i,w
  5489     13F6  0725               	addwf	Lcd_Write_String@a,w
  5490     13F7  00A8               	movwf	??_Lcd_Write_String+1
  5491     13F8  0826               	movf	Lcd_Write_String@a+1,w
  5492     13F9  00A7               	movwf	??_Lcd_Write_String
  5493     13FA  1803               	skipnc
  5494     13FB  0AA7               	incf	??_Lcd_Write_String,f
  5495     13FC  1FAA               	btfss	Lcd_Write_String@i,7
  5496     13FD  2BFF               	goto	u4510
  5497     13FE  03A7               	decf	??_Lcd_Write_String,f
  5498     13FF                     u4510:
  5499     13FF  1283               	bcf	3,5	;RP0=0, select bank0
  5500     1400  1303               	bcf	3,6	;RP1=0, select bank0
  5501     1401  0827               	movf	??_Lcd_Write_String,w
  5502     1402  00A9               	movwf	??_Lcd_Write_String+2
  5503     1403  0829               	movf	??_Lcd_Write_String+2,w
  5504     1404  00FF               	movwf	btemp+1
  5505     1405  0828               	movf	??_Lcd_Write_String+1,w
  5506     1406  0084               	movwf	4
  5507     1407  160A  158A  2000  160A  118A  	fcall	stringtab
  5508     140C  160A  118A  237B  160A  118A  	fcall	_Lcd_Write_Char
  5509     1411                     l3464:
  5510     1411  3001               	movlw	1
  5511     1412  1283               	bcf	3,5	;RP0=0, select bank0
  5512     1413  1303               	bcf	3,6	;RP1=0, select bank0
  5513     1414  07AA               	addwf	Lcd_Write_String@i,f
  5514     1415  1803               	skipnc
  5515     1416  0AAB               	incf	Lcd_Write_String@i+1,f
  5516     1417  3000               	movlw	0
  5517     1418  07AB               	addwf	Lcd_Write_String@i+1,f
  5518     1419                     l3466:
  5519     1419  082A               	movf	Lcd_Write_String@i,w
  5520     141A  0725               	addwf	Lcd_Write_String@a,w
  5521     141B  00A8               	movwf	??_Lcd_Write_String+1
  5522     141C  0826               	movf	Lcd_Write_String@a+1,w
  5523     141D  00A7               	movwf	??_Lcd_Write_String
  5524     141E  1803               	skipnc
  5525     141F  0AA7               	incf	??_Lcd_Write_String,f
  5526     1420  1FAA               	btfss	Lcd_Write_String@i,7
  5527     1421  2C23               	goto	u4520
  5528     1422  03A7               	decf	??_Lcd_Write_String,f
  5529     1423                     u4520:
  5530     1423  1283               	bcf	3,5	;RP0=0, select bank0
  5531     1424  1303               	bcf	3,6	;RP1=0, select bank0
  5532     1425  0827               	movf	??_Lcd_Write_String,w
  5533     1426  00A9               	movwf	??_Lcd_Write_String+2
  5534     1427  0829               	movf	??_Lcd_Write_String+2,w
  5535     1428  00FF               	movwf	btemp+1
  5536     1429  0828               	movf	??_Lcd_Write_String+1,w
  5537     142A  0084               	movwf	4
  5538     142B  160A  158A  2000  160A  118A  	fcall	stringtab
  5539     1430  3A00               	xorlw	0
  5540     1431  1D03               	skipz
  5541     1432  2C34               	goto	u4531
  5542     1433  2C35               	goto	u4530
  5543     1434                     u4531:
  5544     1434  2BF5               	goto	l3462
  5545     1435                     u4530:
  5546     1435                     l131:
  5547     1435  0008               	return
  5548     1436                     __end_of_Lcd_Write_String:
  5549                           
  5550                           	psect	text17
  5551     137B                     __ptext17:	
  5552 ;; *************** function _Lcd_Write_Char *****************
  5553 ;; Defined at:
  5554 ;;		line 80 in file "./lcd.h"
  5555 ;; Parameters:    Size  Location     Type
  5556 ;;  a               1    wreg     unsigned char 
  5557 ;; Auto vars:     Size  Location     Type
  5558 ;;  a               1    4[BANK0 ] unsigned char 
  5559 ;;  y               1    3[BANK0 ] unsigned char 
  5560 ;;  temp            1    2[BANK0 ] unsigned char 
  5561 ;; Return value:  Size  Location     Type
  5562 ;;                  1    wreg      void 
  5563 ;; Registers used:
  5564 ;;		wreg, status,2, status,0, pclath, cstack
  5565 ;; Tracked objects:
  5566 ;;		On entry : 0/0
  5567 ;;		On exit  : 0/0
  5568 ;;		Unchanged: 0/0
  5569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5570 ;;      Params:         0       0       0       0       0
  5571 ;;      Locals:         0       3       0       0       0
  5572 ;;      Temps:          0       1       0       0       0
  5573 ;;      Totals:         0       4       0       0       0
  5574 ;;Total ram usage:        4 bytes
  5575 ;; Hardware stack levels used: 1
  5576 ;; Hardware stack levels required when called: 3
  5577 ;; This function calls:
  5578 ;;		_Lcd_Port
  5579 ;; This function is called by:
  5580 ;;		_Lcd_Write_String
  5581 ;; This function uses a non-reentrant model
  5582 ;;
  5583                           
  5584     137B                     _Lcd_Write_Char:	
  5585                           ;psect for function _Lcd_Write_Char
  5586                           
  5587                           
  5588                           ;incstack = 0
  5589                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  5590                           ;Lcd_Write_Char@a stored from wreg
  5591     137B  1283               	bcf	3,5	;RP0=0, select bank0
  5592     137C  1303               	bcf	3,6	;RP1=0, select bank0
  5593     137D  00A4               	movwf	Lcd_Write_Char@a
  5594     137E                     l3364:
  5595                           
  5596                           ;./lcd.h: 80: void Lcd_Write_Char(char a);./lcd.h: 81: {;./lcd.h: 82:    char temp,y;;./
      +                          lcd.h: 83:    temp = a&0x0F;
  5597     137E  0824               	movf	Lcd_Write_Char@a,w
  5598     137F  390F               	andlw	15
  5599     1380  00A2               	movwf	Lcd_Write_Char@temp
  5600                           
  5601                           ;./lcd.h: 84:    y = a&0xF0;
  5602     1381  0824               	movf	Lcd_Write_Char@a,w
  5603     1382  39F0               	andlw	240
  5604     1383  00A3               	movwf	Lcd_Write_Char@y
  5605     1384                     l3366:
  5606                           
  5607                           ;./lcd.h: 85:    RB5 = 1;
  5608     1384  1686               	bsf	6,5	;volatile
  5609     1385                     l3368:
  5610                           
  5611                           ;./lcd.h: 86:    Lcd_Port(y>>4);
  5612     1385  0823               	movf	Lcd_Write_Char@y,w
  5613     1386  00A1               	movwf	??_Lcd_Write_Char
  5614     1387  3004               	movlw	4
  5615     1388                     u4365:
  5616     1388  1003               	clrc
  5617     1389  0CA1               	rrf	??_Lcd_Write_Char,f
  5618     138A  3EFF               	addlw	-1
  5619     138B  1D03               	skipz
  5620     138C  2B88               	goto	u4365
  5621     138D  0821               	movf	??_Lcd_Write_Char,w
  5622     138E  160A  118A  230D  160A  118A  	fcall	_Lcd_Port
  5623     1393                     l3370:
  5624                           
  5625                           ;./lcd.h: 87:    RB4 = 1;
  5626     1393  1283               	bcf	3,5	;RP0=0, select bank0
  5627     1394  1303               	bcf	3,6	;RP1=0, select bank0
  5628     1395  1606               	bsf	6,4	;volatile
  5629     1396                     l3372:
  5630                           
  5631                           ;./lcd.h: 88:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  5632     1396  300C               	movlw	12
  5633     1397  1283               	bcf	3,5	;RP0=0, select bank0
  5634     1398  1303               	bcf	3,6	;RP1=0, select bank0
  5635     1399  00A1               	movwf	??_Lcd_Write_Char
  5636     139A                     u5917:
  5637     139A  0BA1               	decfsz	??_Lcd_Write_Char,f
  5638     139B  2B9A               	goto	u5917
  5639     139C  0000               	nop
  5640     139D                     l3374:
  5641                           
  5642                           ;./lcd.h: 89:    RB4 = 0;
  5643     139D  1283               	bcf	3,5	;RP0=0, select bank0
  5644     139E  1303               	bcf	3,6	;RP1=0, select bank0
  5645     139F  1206               	bcf	6,4	;volatile
  5646     13A0                     l3376:
  5647                           
  5648                           ;./lcd.h: 90:    Lcd_Port(temp);
  5649     13A0  0822               	movf	Lcd_Write_Char@temp,w
  5650     13A1  160A  118A  230D  160A  118A  	fcall	_Lcd_Port
  5651     13A6                     l3378:
  5652                           
  5653                           ;./lcd.h: 91:    RB4 = 1;
  5654     13A6  1283               	bcf	3,5	;RP0=0, select bank0
  5655     13A7  1303               	bcf	3,6	;RP1=0, select bank0
  5656     13A8  1606               	bsf	6,4	;volatile
  5657     13A9                     l3380:
  5658                           
  5659                           ;./lcd.h: 92:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  5660     13A9  300C               	movlw	12
  5661     13AA  1283               	bcf	3,5	;RP0=0, select bank0
  5662     13AB  1303               	bcf	3,6	;RP1=0, select bank0
  5663     13AC  00A1               	movwf	??_Lcd_Write_Char
  5664     13AD                     u5927:
  5665     13AD  0BA1               	decfsz	??_Lcd_Write_Char,f
  5666     13AE  2BAD               	goto	u5927
  5667     13AF  0000               	nop
  5668     13B0                     l3382:
  5669                           
  5670                           ;./lcd.h: 93:    RB4 = 0;
  5671     13B0  1283               	bcf	3,5	;RP0=0, select bank0
  5672     13B1  1303               	bcf	3,6	;RP1=0, select bank0
  5673     13B2  1206               	bcf	6,4	;volatile
  5674     13B3                     l125:
  5675     13B3  0008               	return
  5676     13B4                     __end_of_Lcd_Write_Char:
  5677                           
  5678                           	psect	text18
  5679     150A                     __ptext18:	
  5680 ;; *************** function _Lcd_Set_Cursor *****************
  5681 ;; Defined at:
  5682 ;;		line 40 in file "./lcd.h"
  5683 ;; Parameters:    Size  Location     Type
  5684 ;;  a               1    wreg     unsigned char 
  5685 ;;  b               1    4[BANK0 ] unsigned char 
  5686 ;; Auto vars:     Size  Location     Type
  5687 ;;  a               1    6[BANK0 ] unsigned char 
  5688 ;;  temp            1    9[BANK0 ] unsigned char 
  5689 ;;  y               1    8[BANK0 ] unsigned char 
  5690 ;;  z               1    7[BANK0 ] unsigned char 
  5691 ;; Return value:  Size  Location     Type
  5692 ;;                  1    wreg      void 
  5693 ;; Registers used:
  5694 ;;		wreg, status,2, status,0, pclath, cstack
  5695 ;; Tracked objects:
  5696 ;;		On entry : 0/0
  5697 ;;		On exit  : 0/0
  5698 ;;		Unchanged: 0/0
  5699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5700 ;;      Params:         0       1       0       0       0
  5701 ;;      Locals:         0       4       0       0       0
  5702 ;;      Temps:          0       1       0       0       0
  5703 ;;      Totals:         0       6       0       0       0
  5704 ;;Total ram usage:        6 bytes
  5705 ;; Hardware stack levels used: 1
  5706 ;; Hardware stack levels required when called: 4
  5707 ;; This function calls:
  5708 ;;		_Lcd_Cmd
  5709 ;; This function is called by:
  5710 ;;		_main
  5711 ;; This function uses a non-reentrant model
  5712 ;;
  5713                           
  5714     150A                     _Lcd_Set_Cursor:	
  5715                           ;psect for function _Lcd_Set_Cursor
  5716                           
  5717                           
  5718                           ;incstack = 0
  5719                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  5720                           ;Lcd_Set_Cursor@a stored from wreg
  5721     150A  1283               	bcf	3,5	;RP0=0, select bank0
  5722     150B  1303               	bcf	3,6	;RP1=0, select bank0
  5723     150C  00A6               	movwf	Lcd_Set_Cursor@a
  5724     150D                     l3430:
  5725                           
  5726                           ;./lcd.h: 40: void Lcd_Set_Cursor(char a, char b);./lcd.h: 41: {;./lcd.h: 42:  char temp
      +                          ,z,y;;./lcd.h: 43:  if(a == 1)
  5727     150D  0326               	decf	Lcd_Set_Cursor@a,w
  5728     150E  1D03               	btfss	3,2
  5729     150F  2D11               	goto	u4471
  5730     1510  2D12               	goto	u4470
  5731     1511                     u4471:
  5732     1511  2D31               	goto	l3440
  5733     1512                     u4470:
  5734     1512                     l3432:
  5735                           
  5736                           ;./lcd.h: 44:  {;./lcd.h: 45:    temp = 0x80 + b - 1;
  5737     1512  0824               	movf	Lcd_Set_Cursor@b,w
  5738     1513  3E7F               	addlw	127
  5739     1514  00A9               	movwf	Lcd_Set_Cursor@temp
  5740                           
  5741                           ;./lcd.h: 46:   z = temp>>4;
  5742     1515  0829               	movf	Lcd_Set_Cursor@temp,w
  5743     1516  00A5               	movwf	??_Lcd_Set_Cursor
  5744     1517  3004               	movlw	4
  5745     1518                     u4485:
  5746     1518  1003               	clrc
  5747     1519  0CA5               	rrf	??_Lcd_Set_Cursor,f
  5748     151A  3EFF               	addlw	-1
  5749     151B  1D03               	skipz
  5750     151C  2D18               	goto	u4485
  5751     151D  0825               	movf	??_Lcd_Set_Cursor,w
  5752     151E  00A7               	movwf	Lcd_Set_Cursor@z
  5753     151F                     l3434:
  5754                           
  5755                           ;./lcd.h: 47:   y = temp & 0x0F;
  5756     151F  0829               	movf	Lcd_Set_Cursor@temp,w
  5757     1520  390F               	andlw	15
  5758     1521  00A8               	movwf	Lcd_Set_Cursor@y
  5759     1522                     l3436:
  5760                           
  5761                           ;./lcd.h: 48:   Lcd_Cmd(z);
  5762     1522  0827               	movf	Lcd_Set_Cursor@z,w
  5763     1523  160A  118A  22D5  160A  118A  	fcall	_Lcd_Cmd
  5764     1528                     l3438:
  5765                           
  5766                           ;./lcd.h: 49:   Lcd_Cmd(y);
  5767     1528  1283               	bcf	3,5	;RP0=0, select bank0
  5768     1529  1303               	bcf	3,6	;RP1=0, select bank0
  5769     152A  0828               	movf	Lcd_Set_Cursor@y,w
  5770     152B  160A  118A  22D5  160A  118A  	fcall	_Lcd_Cmd
  5771                           
  5772                           ;./lcd.h: 50:  }
  5773     1530  2D55               	goto	l119
  5774     1531                     l3440:
  5775     1531  3002               	movlw	2
  5776     1532  0626               	xorwf	Lcd_Set_Cursor@a,w
  5777     1533  1D03               	btfss	3,2
  5778     1534  2D36               	goto	u4491
  5779     1535  2D37               	goto	u4490
  5780     1536                     u4491:
  5781     1536  2D55               	goto	l119
  5782     1537                     u4490:
  5783     1537                     l3442:
  5784                           
  5785                           ;./lcd.h: 52:  {;./lcd.h: 53:   temp = 0xC0 + b - 1;
  5786     1537  0824               	movf	Lcd_Set_Cursor@b,w
  5787     1538  3EBF               	addlw	191
  5788     1539  00A9               	movwf	Lcd_Set_Cursor@temp
  5789                           
  5790                           ;./lcd.h: 54:   z = temp>>4;
  5791     153A  0829               	movf	Lcd_Set_Cursor@temp,w
  5792     153B  00A5               	movwf	??_Lcd_Set_Cursor
  5793     153C  3004               	movlw	4
  5794     153D                     u4505:
  5795     153D  1003               	clrc
  5796     153E  0CA5               	rrf	??_Lcd_Set_Cursor,f
  5797     153F  3EFF               	addlw	-1
  5798     1540  1D03               	skipz
  5799     1541  2D3D               	goto	u4505
  5800     1542  0825               	movf	??_Lcd_Set_Cursor,w
  5801     1543  00A7               	movwf	Lcd_Set_Cursor@z
  5802     1544                     l3444:
  5803                           
  5804                           ;./lcd.h: 55:   y = temp & 0x0F;
  5805     1544  0829               	movf	Lcd_Set_Cursor@temp,w
  5806     1545  390F               	andlw	15
  5807     1546  00A8               	movwf	Lcd_Set_Cursor@y
  5808     1547                     l3446:
  5809                           
  5810                           ;./lcd.h: 56:   Lcd_Cmd(z);
  5811     1547  0827               	movf	Lcd_Set_Cursor@z,w
  5812     1548  160A  118A  22D5  160A  118A  	fcall	_Lcd_Cmd
  5813     154D                     l3448:
  5814                           
  5815                           ;./lcd.h: 57:   Lcd_Cmd(y);
  5816     154D  1283               	bcf	3,5	;RP0=0, select bank0
  5817     154E  1303               	bcf	3,6	;RP1=0, select bank0
  5818     154F  0828               	movf	Lcd_Set_Cursor@y,w
  5819     1550  160A  118A  22D5  160A  118A  	fcall	_Lcd_Cmd
  5820     1555                     l119:
  5821     1555  0008               	return
  5822     1556                     __end_of_Lcd_Set_Cursor:
  5823                           
  5824                           	psect	text19
  5825     1556                     __ptext19:	
  5826 ;; *************** function _Lcd_Init *****************
  5827 ;; Defined at:
  5828 ;;		line 61 in file "./lcd.h"
  5829 ;; Parameters:    Size  Location     Type
  5830 ;;		None
  5831 ;; Auto vars:     Size  Location     Type
  5832 ;;		None
  5833 ;; Return value:  Size  Location     Type
  5834 ;;                  1    wreg      void 
  5835 ;; Registers used:
  5836 ;;		wreg, status,2, status,0, pclath, cstack
  5837 ;; Tracked objects:
  5838 ;;		On entry : 0/0
  5839 ;;		On exit  : 0/0
  5840 ;;		Unchanged: 0/0
  5841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5842 ;;      Params:         0       0       0       0       0
  5843 ;;      Locals:         0       0       0       0       0
  5844 ;;      Temps:          0       2       0       0       0
  5845 ;;      Totals:         0       2       0       0       0
  5846 ;;Total ram usage:        2 bytes
  5847 ;; Hardware stack levels used: 1
  5848 ;; Hardware stack levels required when called: 4
  5849 ;; This function calls:
  5850 ;;		_Lcd_Cmd
  5851 ;;		_Lcd_Port
  5852 ;; This function is called by:
  5853 ;;		_main
  5854 ;; This function uses a non-reentrant model
  5855 ;;
  5856                           
  5857     1556                     _Lcd_Init:	
  5858                           ;psect for function _Lcd_Init
  5859                           
  5860     1556                     l3450:	
  5861                           ;incstack = 0
  5862                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  5863                           
  5864                           
  5865                           ;./lcd.h: 63:   Lcd_Port(0x00);
  5866     1556  3000               	movlw	0
  5867     1557  160A  118A  230D  160A  118A  	fcall	_Lcd_Port
  5868     155C                     l3452:
  5869                           
  5870                           ;./lcd.h: 64:    _delay((unsigned long)((20)*(4000000/4000.0)));
  5871     155C  301A               	movlw	26
  5872     155D  1283               	bcf	3,5	;RP0=0, select bank0
  5873     155E  1303               	bcf	3,6	;RP1=0, select bank0
  5874     155F  00A5               	movwf	??_Lcd_Init+1
  5875     1560  30F7               	movlw	247
  5876     1561  00A4               	movwf	??_Lcd_Init
  5877     1562                     u5937:
  5878     1562  0BA4               	decfsz	??_Lcd_Init,f
  5879     1563  2D62               	goto	u5937
  5880     1564  0BA5               	decfsz	??_Lcd_Init+1,f
  5881     1565  2D62               	goto	u5937
  5882     1566  2D67               	nop2
  5883     1567                     l3454:
  5884                           
  5885                           ;./lcd.h: 65:   Lcd_Cmd(0x03);
  5886     1567  3003               	movlw	3
  5887     1568  160A  118A  22D5  160A  118A  	fcall	_Lcd_Cmd
  5888                           
  5889                           ;./lcd.h: 66:  _delay((unsigned long)((5)*(4000000/4000.0)));
  5890     156D  3007               	movlw	7
  5891     156E  1283               	bcf	3,5	;RP0=0, select bank0
  5892     156F  1303               	bcf	3,6	;RP1=0, select bank0
  5893     1570  00A5               	movwf	??_Lcd_Init+1
  5894     1571  307C               	movlw	124
  5895     1572  00A4               	movwf	??_Lcd_Init
  5896     1573                     u5947:
  5897     1573  0BA4               	decfsz	??_Lcd_Init,f
  5898     1574  2D73               	goto	u5947
  5899     1575  0BA5               	decfsz	??_Lcd_Init+1,f
  5900     1576  2D73               	goto	u5947
  5901     1577  0000               	nop
  5902     1578                     l3456:
  5903                           
  5904                           ;./lcd.h: 67:   Lcd_Cmd(0x03);
  5905     1578  3003               	movlw	3
  5906     1579  160A  118A  22D5  160A  118A  	fcall	_Lcd_Cmd
  5907     157E                     l3458:
  5908                           
  5909                           ;./lcd.h: 68:  _delay((unsigned long)((11)*(4000000/4000.0)));
  5910     157E  300F               	movlw	15
  5911     157F  1283               	bcf	3,5	;RP0=0, select bank0
  5912     1580  1303               	bcf	3,6	;RP1=0, select bank0
  5913     1581  00A5               	movwf	??_Lcd_Init+1
  5914     1582  3047               	movlw	71
  5915     1583  00A4               	movwf	??_Lcd_Init
  5916     1584                     u5957:
  5917     1584  0BA4               	decfsz	??_Lcd_Init,f
  5918     1585  2D84               	goto	u5957
  5919     1586  0BA5               	decfsz	??_Lcd_Init+1,f
  5920     1587  2D84               	goto	u5957
  5921                           
  5922                           ;./lcd.h: 69:   Lcd_Cmd(0x03);
  5923     1588  3003               	movlw	3
  5924     1589  160A  118A  22D5  160A  118A  	fcall	_Lcd_Cmd
  5925                           
  5926                           ;./lcd.h: 71:   Lcd_Cmd(0x02);
  5927     158E  3002               	movlw	2
  5928     158F  160A  118A  22D5  160A  118A  	fcall	_Lcd_Cmd
  5929                           
  5930                           ;./lcd.h: 72:   Lcd_Cmd(0x02);
  5931     1594  3002               	movlw	2
  5932     1595  160A  118A  22D5  160A  118A  	fcall	_Lcd_Cmd
  5933                           
  5934                           ;./lcd.h: 73:   Lcd_Cmd(0x08);
  5935     159A  3008               	movlw	8
  5936     159B  160A  118A  22D5  160A  118A  	fcall	_Lcd_Cmd
  5937                           
  5938                           ;./lcd.h: 74:   Lcd_Cmd(0x00);
  5939     15A0  3000               	movlw	0
  5940     15A1  160A  118A  22D5  160A  118A  	fcall	_Lcd_Cmd
  5941                           
  5942                           ;./lcd.h: 75:   Lcd_Cmd(0x0C);
  5943     15A6  300C               	movlw	12
  5944     15A7  160A  118A  22D5  160A  118A  	fcall	_Lcd_Cmd
  5945                           
  5946                           ;./lcd.h: 76:   Lcd_Cmd(0x00);
  5947     15AC  3000               	movlw	0
  5948     15AD  160A  118A  22D5  160A  118A  	fcall	_Lcd_Cmd
  5949                           
  5950                           ;./lcd.h: 77:   Lcd_Cmd(0x06);
  5951     15B2  3006               	movlw	6
  5952     15B3  160A  118A  22D5  160A  118A  	fcall	_Lcd_Cmd
  5953     15B8                     l122:
  5954     15B8  0008               	return
  5955     15B9                     __end_of_Lcd_Init:
  5956                           
  5957                           	psect	text20
  5958     1296                     __ptext20:	
  5959 ;; *************** function _Lcd_Clear *****************
  5960 ;; Defined at:
  5961 ;;		line 34 in file "./lcd.h"
  5962 ;; Parameters:    Size  Location     Type
  5963 ;;		None
  5964 ;; Auto vars:     Size  Location     Type
  5965 ;;		None
  5966 ;; Return value:  Size  Location     Type
  5967 ;;                  1    wreg      void 
  5968 ;; Registers used:
  5969 ;;		wreg, status,2, status,0, pclath, cstack
  5970 ;; Tracked objects:
  5971 ;;		On entry : 0/0
  5972 ;;		On exit  : 0/0
  5973 ;;		Unchanged: 0/0
  5974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5975 ;;      Params:         0       0       0       0       0
  5976 ;;      Locals:         0       0       0       0       0
  5977 ;;      Temps:          0       0       0       0       0
  5978 ;;      Totals:         0       0       0       0       0
  5979 ;;Total ram usage:        0 bytes
  5980 ;; Hardware stack levels used: 1
  5981 ;; Hardware stack levels required when called: 4
  5982 ;; This function calls:
  5983 ;;		_Lcd_Cmd
  5984 ;; This function is called by:
  5985 ;;		_main
  5986 ;; This function uses a non-reentrant model
  5987 ;;
  5988                           
  5989     1296                     _Lcd_Clear:	
  5990                           ;psect for function _Lcd_Clear
  5991                           
  5992     1296                     l3428:	
  5993                           ;incstack = 0
  5994                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  5995                           
  5996                           
  5997                           ;./lcd.h: 36:  Lcd_Cmd(0);
  5998     1296  3000               	movlw	0
  5999     1297  160A  118A  22D5  160A  118A  	fcall	_Lcd_Cmd
  6000                           
  6001                           ;./lcd.h: 37:  Lcd_Cmd(1);
  6002     129C  3001               	movlw	1
  6003     129D  160A  118A  22D5  160A  118A  	fcall	_Lcd_Cmd
  6004     12A2                     l113:
  6005     12A2  0008               	return
  6006     12A3                     __end_of_Lcd_Clear:
  6007                           
  6008                           	psect	text21
  6009     12D5                     __ptext21:	
  6010 ;; *************** function _Lcd_Cmd *****************
  6011 ;; Defined at:
  6012 ;;		line 25 in file "./lcd.h"
  6013 ;; Parameters:    Size  Location     Type
  6014 ;;  a               1    wreg     unsigned char 
  6015 ;; Auto vars:     Size  Location     Type
  6016 ;;  a               1    3[BANK0 ] unsigned char 
  6017 ;; Return value:  Size  Location     Type
  6018 ;;                  1    wreg      void 
  6019 ;; Registers used:
  6020 ;;		wreg, status,2, status,0, pclath, cstack
  6021 ;; Tracked objects:
  6022 ;;		On entry : 0/0
  6023 ;;		On exit  : 0/0
  6024 ;;		Unchanged: 0/0
  6025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6026 ;;      Params:         0       0       0       0       0
  6027 ;;      Locals:         0       1       0       0       0
  6028 ;;      Temps:          0       2       0       0       0
  6029 ;;      Totals:         0       3       0       0       0
  6030 ;;Total ram usage:        3 bytes
  6031 ;; Hardware stack levels used: 1
  6032 ;; Hardware stack levels required when called: 3
  6033 ;; This function calls:
  6034 ;;		_Lcd_Port
  6035 ;; This function is called by:
  6036 ;;		_Lcd_Clear
  6037 ;;		_Lcd_Set_Cursor
  6038 ;;		_Lcd_Init
  6039 ;; This function uses a non-reentrant model
  6040 ;;
  6041                           
  6042     12D5                     _Lcd_Cmd:	
  6043                           ;psect for function _Lcd_Cmd
  6044                           
  6045                           
  6046                           ;incstack = 0
  6047                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  6048                           ;Lcd_Cmd@a stored from wreg
  6049     12D5  1283               	bcf	3,5	;RP0=0, select bank0
  6050     12D6  1303               	bcf	3,6	;RP1=0, select bank0
  6051     12D7  00A3               	movwf	Lcd_Cmd@a
  6052     12D8                     l3354:
  6053                           
  6054                           ;./lcd.h: 25: void Lcd_Cmd(char a);./lcd.h: 26: {;./lcd.h: 27:  RB5 = 0;
  6055     12D8  1286               	bcf	6,5	;volatile
  6056     12D9                     l3356:
  6057                           
  6058                           ;./lcd.h: 28:  Lcd_Port(a);
  6059     12D9  0823               	movf	Lcd_Cmd@a,w
  6060     12DA  160A  118A  230D  160A  118A  	fcall	_Lcd_Port
  6061     12DF                     l3358:
  6062                           
  6063                           ;./lcd.h: 29:  RB4 = 1;
  6064     12DF  1283               	bcf	3,5	;RP0=0, select bank0
  6065     12E0  1303               	bcf	3,6	;RP1=0, select bank0
  6066     12E1  1606               	bsf	6,4	;volatile
  6067     12E2                     l3360:
  6068                           
  6069                           ;./lcd.h: 30:         _delay((unsigned long)((4)*(4000000/4000.0)));
  6070     12E2  3006               	movlw	6
  6071     12E3  1283               	bcf	3,5	;RP0=0, select bank0
  6072     12E4  1303               	bcf	3,6	;RP1=0, select bank0
  6073     12E5  00A2               	movwf	??_Lcd_Cmd+1
  6074     12E6  302F               	movlw	47
  6075     12E7  00A1               	movwf	??_Lcd_Cmd
  6076     12E8                     u5967:
  6077     12E8  0BA1               	decfsz	??_Lcd_Cmd,f
  6078     12E9  2AE8               	goto	u5967
  6079     12EA  0BA2               	decfsz	??_Lcd_Cmd+1,f
  6080     12EB  2AE8               	goto	u5967
  6081     12EC  2AED               	nop2
  6082     12ED                     l3362:
  6083                           
  6084                           ;./lcd.h: 31:         RB4 = 0;
  6085     12ED  1283               	bcf	3,5	;RP0=0, select bank0
  6086     12EE  1303               	bcf	3,6	;RP1=0, select bank0
  6087     12EF  1206               	bcf	6,4	;volatile
  6088     12F0                     l110:
  6089     12F0  0008               	return
  6090     12F1                     __end_of_Lcd_Cmd:
  6091                           
  6092                           	psect	text22
  6093     130D                     __ptext22:	
  6094 ;; *************** function _Lcd_Port *****************
  6095 ;; Defined at:
  6096 ;;		line 3 in file "./lcd.h"
  6097 ;; Parameters:    Size  Location     Type
  6098 ;;  a               1    wreg     unsigned char 
  6099 ;; Auto vars:     Size  Location     Type
  6100 ;;  a               1    0[BANK0 ] unsigned char 
  6101 ;; Return value:  Size  Location     Type
  6102 ;;                  1    wreg      void 
  6103 ;; Registers used:
  6104 ;;		wreg
  6105 ;; Tracked objects:
  6106 ;;		On entry : 0/0
  6107 ;;		On exit  : 0/0
  6108 ;;		Unchanged: 0/0
  6109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6110 ;;      Params:         0       0       0       0       0
  6111 ;;      Locals:         0       1       0       0       0
  6112 ;;      Temps:          0       0       0       0       0
  6113 ;;      Totals:         0       1       0       0       0
  6114 ;;Total ram usage:        1 bytes
  6115 ;; Hardware stack levels used: 1
  6116 ;; Hardware stack levels required when called: 2
  6117 ;; This function calls:
  6118 ;;		Nothing
  6119 ;; This function is called by:
  6120 ;;		_Lcd_Cmd
  6121 ;;		_Lcd_Init
  6122 ;;		_Lcd_Write_Char
  6123 ;; This function uses a non-reentrant model
  6124 ;;
  6125                           
  6126     130D                     _Lcd_Port:	
  6127                           ;psect for function _Lcd_Port
  6128                           
  6129                           
  6130                           ;incstack = 0
  6131                           ; Regs used in _Lcd_Port: [wreg]
  6132                           ;Lcd_Port@a stored from wreg
  6133     130D  1283               	bcf	3,5	;RP0=0, select bank0
  6134     130E  1303               	bcf	3,6	;RP1=0, select bank0
  6135     130F  00A0               	movwf	Lcd_Port@a
  6136     1310                     l3344:
  6137                           
  6138                           ;./lcd.h: 3: void Lcd_Port(char a);./lcd.h: 4: {;./lcd.h: 5:  if(a & 1)
  6139     1310  1C20               	btfss	Lcd_Port@a,0
  6140     1311  2B13               	goto	u4321
  6141     1312  2B14               	goto	u4320
  6142     1313                     u4321:
  6143     1313  2B16               	goto	l99
  6144     1314                     u4320:
  6145     1314                     l3346:
  6146                           
  6147                           ;./lcd.h: 6:   RB3 = 1;
  6148     1314  1586               	bsf	6,3	;volatile
  6149     1315  2B17               	goto	l100
  6150     1316                     l99:	
  6151                           ;./lcd.h: 7:  else
  6152                           
  6153                           
  6154                           ;./lcd.h: 8:   RB3 = 0;
  6155     1316  1186               	bcf	6,3	;volatile
  6156     1317                     l100:
  6157                           
  6158                           ;./lcd.h: 10:  if(a & 2)
  6159     1317  1CA0               	btfss	Lcd_Port@a,1
  6160     1318  2B1A               	goto	u4331
  6161     1319  2B1B               	goto	u4330
  6162     131A                     u4331:
  6163     131A  2B1D               	goto	l101
  6164     131B                     u4330:
  6165     131B                     l3348:
  6166                           
  6167                           ;./lcd.h: 11:   RB2 = 1;
  6168     131B  1506               	bsf	6,2	;volatile
  6169     131C  2B1E               	goto	l102
  6170     131D                     l101:	
  6171                           ;./lcd.h: 12:  else
  6172                           
  6173                           
  6174                           ;./lcd.h: 13:   RB2 = 0;
  6175     131D  1106               	bcf	6,2	;volatile
  6176     131E                     l102:
  6177                           
  6178                           ;./lcd.h: 15:  if(a & 4)
  6179     131E  1D20               	btfss	Lcd_Port@a,2
  6180     131F  2B21               	goto	u4341
  6181     1320  2B22               	goto	u4340
  6182     1321                     u4341:
  6183     1321  2B24               	goto	l103
  6184     1322                     u4340:
  6185     1322                     l3350:
  6186                           
  6187                           ;./lcd.h: 16:   RB1 = 1;
  6188     1322  1486               	bsf	6,1	;volatile
  6189     1323  2B25               	goto	l104
  6190     1324                     l103:	
  6191                           ;./lcd.h: 17:  else
  6192                           
  6193                           
  6194                           ;./lcd.h: 18:   RB1 = 0;
  6195     1324  1086               	bcf	6,1	;volatile
  6196     1325                     l104:
  6197                           
  6198                           ;./lcd.h: 20:  if(a & 8)
  6199     1325  1DA0               	btfss	Lcd_Port@a,3
  6200     1326  2B28               	goto	u4351
  6201     1327  2B29               	goto	u4350
  6202     1328                     u4351:
  6203     1328  2B2B               	goto	l105
  6204     1329                     u4350:
  6205     1329                     l3352:
  6206                           
  6207                           ;./lcd.h: 21:   RB0 = 1;
  6208     1329  1406               	bsf	6,0	;volatile
  6209     132A  2B2C               	goto	l107
  6210     132B                     l105:	
  6211                           ;./lcd.h: 22:  else
  6212                           
  6213                           
  6214                           ;./lcd.h: 23:   RB0 = 0;
  6215     132B  1006               	bcf	6,0	;volatile
  6216     132C                     l107:
  6217     132C  0008               	return
  6218     132D                     __end_of_Lcd_Port:
  6219                           
  6220                           	psect	text23
  6221     132D                     __ptext23:	
  6222 ;; *************** function _timer_isr *****************
  6223 ;; Defined at:
  6224 ;;		line 74 in file "main.c"
  6225 ;; Parameters:    Size  Location     Type
  6226 ;;		None
  6227 ;; Auto vars:     Size  Location     Type
  6228 ;;		None
  6229 ;; Return value:  Size  Location     Type
  6230 ;;                  1    wreg      void 
  6231 ;; Registers used:
  6232 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6233 ;; Tracked objects:
  6234 ;;		On entry : 0/0
  6235 ;;		On exit  : 0/0
  6236 ;;		Unchanged: 0/0
  6237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6238 ;;      Params:         0       0       0       0       0
  6239 ;;      Locals:         0       0       0       0       0
  6240 ;;      Temps:          3       0       0       0       0
  6241 ;;      Totals:         3       0       0       0       0
  6242 ;;Total ram usage:        3 bytes
  6243 ;; Hardware stack levels used: 1
  6244 ;; Hardware stack levels required when called: 1
  6245 ;; This function calls:
  6246 ;;		_incrementTime
  6247 ;; This function is called by:
  6248 ;;		Interrupt level 1
  6249 ;; This function uses a non-reentrant model
  6250 ;;
  6251                           
  6252     132D                     _timer_isr:	
  6253                           ;psect for function _timer_isr
  6254                           
  6255     132D                     i1l2838:
  6256                           
  6257                           ;main.c: 75:     if (T0IF) {
  6258     132D  1D0B               	btfss	11,2	;volatile
  6259     132E  2B30               	goto	u367_21
  6260     132F  2B31               	goto	u367_20
  6261     1330                     u367_21:
  6262     1330  2B4B               	goto	i1l156
  6263     1331                     u367_20:
  6264     1331                     i1l2840:
  6265                           
  6266                           ;main.c: 76:         T0IF = 0;
  6267     1331  110B               	bcf	11,2	;volatile
  6268     1332                     i1l2842:
  6269                           
  6270                           ;main.c: 77:         TMR0 = 61;
  6271     1332  303D               	movlw	61
  6272     1333  1283               	bcf	3,5	;RP0=0, select bank0
  6273     1334  1303               	bcf	3,6	;RP1=0, select bank0
  6274     1335  0081               	movwf	1	;volatile
  6275                           
  6276                           ;main.c: 79:         kesmeSayaci++;
  6277     1336  3001               	movlw	1
  6278     1337  07F6               	addwf	_kesmeSayaci,f
  6279     1338  1803               	skipnc
  6280     1339  0AF7               	incf	_kesmeSayaci+1,f
  6281     133A  3000               	movlw	0
  6282     133B  07F7               	addwf	_kesmeSayaci+1,f
  6283     133C                     i1l2844:
  6284                           
  6285                           ;main.c: 80:         if (kesmeSayaci==20){
  6286     133C  3014               	movlw	20
  6287     133D  0676               	xorwf	_kesmeSayaci,w
  6288     133E  0477               	iorwf	_kesmeSayaci+1,w
  6289     133F  1D03               	btfss	3,2
  6290     1340  2B42               	goto	u368_21
  6291     1341  2B43               	goto	u368_20
  6292     1342                     u368_21:
  6293     1342  2B4B               	goto	i1l156
  6294     1343                     u368_20:
  6295     1343                     i1l2846:
  6296                           
  6297                           ;main.c: 81:             kesmeSayaci = 0 ;
  6298     1343  01F6               	clrf	_kesmeSayaci
  6299     1344  01F7               	clrf	_kesmeSayaci+1
  6300     1345                     i1l2848:
  6301                           
  6302                           ;main.c: 82:             incrementTime(&currentTime);
  6303     1345  309E               	movlw	(low (_currentTime| (0+256)))& (0+255)
  6304     1346  160A  118A  24C2  160A  118A  	fcall	_incrementTime
  6305     134B                     i1l156:
  6306     134B  0875               	movf	??_timer_isr+2,w
  6307     134C  008A               	movwf	10
  6308     134D  0874               	movf	??_timer_isr+1,w
  6309     134E  0084               	movwf	4
  6310     134F  0E73               	swapf	??_timer_isr,w
  6311     1350  0083               	movwf	3
  6312     1351  0EFE               	swapf	btemp,f
  6313     1352  0E7E               	swapf	btemp,w
  6314     1353  0009               	retfie
  6315     1354                     __end_of_timer_isr:
  6316                           
  6317                           	psect	intentry
  6318     0004                     __pintentry:	
  6319                           ;incstack = 0
  6320                           ; Regs used in _timer_isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6321                           
  6322     0004                     interrupt_function:
  6323     007E                     saved_w	set	btemp
  6324     0004  00FE               	movwf	btemp
  6325     0005  0E03               	swapf	3,w
  6326     0006  00F3               	movwf	??_timer_isr
  6327     0007  0804               	movf	4,w
  6328     0008  00F4               	movwf	??_timer_isr+1
  6329     0009  080A               	movf	10,w
  6330     000A  00F5               	movwf	??_timer_isr+2
  6331     000B  160A  118A  2B2D   	ljmp	_timer_isr
  6332                           
  6333                           	psect	text24
  6334     14C2                     __ptext24:	
  6335 ;; *************** function _incrementTime *****************
  6336 ;; Defined at:
  6337 ;;		line 60 in file "main.c"
  6338 ;; Parameters:    Size  Location     Type
  6339 ;;  time            1    wreg     PTR struct Time
  6340 ;;		 -> currentTime(6), 
  6341 ;; Auto vars:     Size  Location     Type
  6342 ;;  time            1    2[COMMON] PTR struct Time
  6343 ;;		 -> currentTime(6), 
  6344 ;; Return value:  Size  Location     Type
  6345 ;;                  1    wreg      void 
  6346 ;; Registers used:
  6347 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6348 ;; Tracked objects:
  6349 ;;		On entry : 0/0
  6350 ;;		On exit  : 0/0
  6351 ;;		Unchanged: 0/0
  6352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6353 ;;      Params:         0       0       0       0       0
  6354 ;;      Locals:         1       0       0       0       0
  6355 ;;      Temps:          2       0       0       0       0
  6356 ;;      Totals:         3       0       0       0       0
  6357 ;;Total ram usage:        3 bytes
  6358 ;; Hardware stack levels used: 1
  6359 ;; This function calls:
  6360 ;;		Nothing
  6361 ;; This function is called by:
  6362 ;;		_timer_isr
  6363 ;; This function uses a non-reentrant model
  6364 ;;
  6365                           
  6366     14C2                     _incrementTime:	
  6367                           ;psect for function _incrementTime
  6368                           
  6369                           
  6370                           ;incstack = 0
  6371                           ; Regs used in _incrementTime: [wreg-fsr0h+status,2+status,0]
  6372                           ;incrementTime@time stored from wreg
  6373     14C2  00F2               	movwf	incrementTime@time
  6374     14C3                     i1l2322:
  6375                           
  6376                           ;main.c: 61:     time->seconds++;
  6377     14C3  0872               	movf	incrementTime@time,w
  6378     14C4  3E04               	addlw	4
  6379     14C5  0084               	movwf	4
  6380     14C6  3001               	movlw	1
  6381     14C7  1783               	bsf	3,7	;select IRP bank2
  6382     14C8  0780               	addwf	0,f
  6383     14C9  0A84               	incf	4,f
  6384     14CA  1803               	skipnc
  6385     14CB  0A80               	incf	0,f
  6386                           
  6387                           ;main.c: 62:     if (time->seconds >= 60) {
  6388     14CC  0872               	movf	incrementTime@time,w
  6389     14CD  3E04               	addlw	4
  6390     14CE  0084               	movwf	4
  6391     14CF  0800               	movf	0,w
  6392     14D0  00F0               	movwf	??_incrementTime
  6393     14D1  0A84               	incf	4,f
  6394     14D2  0800               	movf	0,w
  6395     14D3  00F1               	movwf	??_incrementTime+1
  6396     14D4  3000               	movlw	0
  6397     14D5  0271               	subwf	??_incrementTime+1,w
  6398     14D6  303C               	movlw	60
  6399     14D7  1903               	skipnz
  6400     14D8  0270               	subwf	??_incrementTime,w
  6401     14D9  1C03               	skipc
  6402     14DA  2CDC               	goto	u253_21
  6403     14DB  2CDD               	goto	u253_20
  6404     14DC                     u253_21:
  6405     14DC  2D09               	goto	i1l149
  6406     14DD                     u253_20:
  6407     14DD                     i1l2324:
  6408                           
  6409                           ;main.c: 63:         time->seconds = 0;
  6410     14DD  0872               	movf	incrementTime@time,w
  6411     14DE  3E04               	addlw	4
  6412     14DF  0084               	movwf	4
  6413     14E0  0180               	clrf	0
  6414     14E1  0A84               	incf	4,f
  6415     14E2  0180               	clrf	0
  6416                           
  6417                           ;main.c: 64:         time->minutes++;
  6418     14E3  0872               	movf	incrementTime@time,w
  6419     14E4  3E02               	addlw	2
  6420     14E5  0084               	movwf	4
  6421     14E6  3001               	movlw	1
  6422     14E7  0780               	addwf	0,f
  6423     14E8  0A84               	incf	4,f
  6424     14E9  1803               	skipnc
  6425     14EA  0A80               	incf	0,f
  6426                           
  6427                           ;main.c: 65:         if (time->minutes >= 60) {
  6428     14EB  0872               	movf	incrementTime@time,w
  6429     14EC  3E02               	addlw	2
  6430     14ED  0084               	movwf	4
  6431     14EE  0800               	movf	0,w
  6432     14EF  00F0               	movwf	??_incrementTime
  6433     14F0  0A84               	incf	4,f
  6434     14F1  0800               	movf	0,w
  6435     14F2  00F1               	movwf	??_incrementTime+1
  6436     14F3  3000               	movlw	0
  6437     14F4  0271               	subwf	??_incrementTime+1,w
  6438     14F5  303C               	movlw	60
  6439     14F6  1903               	skipnz
  6440     14F7  0270               	subwf	??_incrementTime,w
  6441     14F8  1C03               	skipc
  6442     14F9  2CFB               	goto	u254_21
  6443     14FA  2CFC               	goto	u254_20
  6444     14FB                     u254_21:
  6445     14FB  2D09               	goto	i1l149
  6446     14FC                     u254_20:
  6447     14FC                     i1l2326:
  6448                           
  6449                           ;main.c: 66:             time->minutes = 0;
  6450     14FC  0872               	movf	incrementTime@time,w
  6451     14FD  3E02               	addlw	2
  6452     14FE  0084               	movwf	4
  6453     14FF  0180               	clrf	0
  6454     1500  0A84               	incf	4,f
  6455     1501  0180               	clrf	0
  6456                           
  6457                           ;main.c: 67:             time->hours++;
  6458     1502  0872               	movf	incrementTime@time,w
  6459     1503  0084               	movwf	4
  6460     1504  3001               	movlw	1
  6461     1505  0780               	addwf	0,f
  6462     1506  0A84               	incf	4,f
  6463     1507  1803               	skipnc
  6464     1508  0A80               	incf	0,f
  6465     1509                     i1l149:
  6466     1509  0008               	return
  6467     150A                     __end_of_incrementTime:
  6468     007E                     btemp	set	126	;btemp
  6469     007E                     wtemp0	set	126
  6470                           
  6471                           	psect	config
  6472                           
  6473                           ;Config register CONFIG @ 0x2007
  6474                           ;	Oscillator Selection bits
  6475                           ;	FOSC = XT, XT oscillator
  6476                           ;	Watchdog Timer Enable bit
  6477                           ;	WDTE = OFF, WDT disabled
  6478                           ;	Power-up Timer Enable bit
  6479                           ;	PWRTE = OFF, PWRT disabled
  6480                           ;	Brown-out Reset Enable bit
  6481                           ;	BOREN = ON, BOR enabled
  6482                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  6483                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  6484                           ;	Data EEPROM Memory Code Protection bit
  6485                           ;	CPD = OFF, Data EEPROM code protection off
  6486                           ;	Flash Program Memory Write Enable bits
  6487                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  6488                           ;	In-Circuit Debugger Mode bit
  6489                           ;	DEBUG = 0x1, unprogrammed default
  6490                           ;	Flash Program Memory Code Protection bit
  6491                           ;	CP = OFF, Code protection off
  6492     2007                     	org	8199
  6493     2007  3F79               	dw	16249
  6494                           
  6495                           	psect	maintext_split_1
  6496     08E9                     u5260:
  6497     08E9                     l3864:
  6498     08E9  30F6               	movlw	246
  6499     08EA  061E               	xorwf	_currentTime^(0+384),w
  6500     08EB  1D03               	skipz
  6501     08EC  28F1               	goto	u5271
  6502     08ED  031F               	decf	(_currentTime+1)^(0+384),w
  6503     08EE  1D03               	btfss	3,2
  6504     08EF  28F1               	goto	u5271
  6505     08F0  28F2               	goto	u5270
  6506     08F1                     u5271:
  6507     08F1  294D               	goto	l3892
  6508     08F2                     u5270:
  6509     08F2                     l3866:
  6510     08F2  0320               	decf	(_currentTime^(0+384)+2),w
  6511     08F3  0421               	iorwf	((_currentTime+1)^(0+384)+2),w
  6512     08F4  1D03               	btfss	3,2
  6513     08F5  28F7               	goto	u5281
  6514     08F6  28F8               	goto	u5280
  6515     08F7                     u5281:
  6516     08F7  294D               	goto	l3892
  6517     08F8                     u5280:
  6518     08F8                     l3868:
  6519                           
  6520                           ;main.c: 180:     Lcd_Clear();
  6521     08F8  160A  118A  2296  120A  158A  	fcall	_Lcd_Clear
  6522     08FD                     l3870:
  6523                           
  6524                           ;main.c: 181:     int i=0 ;
  6525     08FD  1683               	bsf	3,5	;RP0=1, select bank1
  6526     08FE  1303               	bcf	3,6	;RP1=0, select bank1
  6527     08FF  01EA               	clrf	main@i^(0+128)
  6528     0900  01EB               	clrf	(main@i+1)^(0+128)
  6529     0901                     l3872:
  6530                           
  6531                           ;main.c: 182:     for(; i < 10; i++)
  6532     0901  086B               	movf	(main@i+1)^(0+128),w
  6533     0902  3A80               	xorlw	128
  6534     0903  00FF               	movwf	btemp+1
  6535     0904  3080               	movlw	128
  6536     0905  027F               	subwf	btemp+1,w
  6537     0906  1D03               	skipz
  6538     0907  290A               	goto	u5295
  6539     0908  300A               	movlw	10
  6540     0909  026A               	subwf	main@i^(0+128),w
  6541     090A                     u5295:
  6542     090A  1C03               	skipc
  6543     090B  290D               	goto	u5291
  6544     090C  290E               	goto	u5290
  6545     090D                     u5291:
  6546     090D  290F               	goto	l3876
  6547     090E                     u5290:
  6548     090E  2945               	goto	l3888
  6549     090F                     l3876:
  6550                           
  6551                           ;main.c: 183: {;main.c: 184:    Lcd_Set_Cursor(1, 1);
  6552     090F  1283               	bcf	3,5	;RP0=0, select bank0
  6553     0910  1303               	bcf	3,6	;RP1=0, select bank0
  6554     0911  01A4               	clrf	Lcd_Set_Cursor@b
  6555     0912  0AA4               	incf	Lcd_Set_Cursor@b,f
  6556     0913  3001               	movlw	1
  6557     0914  160A  118A  250A  120A  158A  	fcall	_Lcd_Set_Cursor
  6558     0919                     l3878:
  6559                           
  6560                           ;main.c: 185: Lcd_Write_String("YAG BAKIMI YAPINIZ");
  6561     0919  3081               	movlw	low (STR_4| (0+32768))
  6562     091A  1283               	bcf	3,5	;RP0=0, select bank0
  6563     091B  1303               	bcf	3,6	;RP1=0, select bank0
  6564     091C  00A5               	movwf	Lcd_Write_String@a
  6565     091D  3098               	movlw	high (STR_4| (0+32768))
  6566     091E  00A6               	movwf	Lcd_Write_String@a+1
  6567     091F  160A  118A  23F0  120A  158A  	fcall	_Lcd_Write_String
  6568     0924                     l3880:
  6569                           
  6570                           ;main.c: 186: Lcd_Set_Cursor(2, 1);
  6571     0924  1283               	bcf	3,5	;RP0=0, select bank0
  6572     0925  1303               	bcf	3,6	;RP1=0, select bank0
  6573     0926  01A4               	clrf	Lcd_Set_Cursor@b
  6574     0927  0AA4               	incf	Lcd_Set_Cursor@b,f
  6575     0928  3002               	movlw	2
  6576     0929  160A  118A  250A  120A  158A  	fcall	_Lcd_Set_Cursor
  6577                           
  6578                           ;main.c: 187: Lcd_Write_String("OIL THE GEARS");
  6579     092E  30C1               	movlw	low (STR_5| (0+32768))
  6580     092F  1283               	bcf	3,5	;RP0=0, select bank0
  6581     0930  1303               	bcf	3,6	;RP1=0, select bank0
  6582     0931  00A5               	movwf	Lcd_Write_String@a
  6583     0932  3098               	movlw	high (STR_5| (0+32768))
  6584     0933  00A6               	movwf	Lcd_Write_String@a+1
  6585     0934  160A  118A  23F0  120A  158A  	fcall	_Lcd_Write_String
  6586     0939                     l3882:
  6587                           
  6588                           ;main.c: 188: RA4 = 1;
  6589     0939  1283               	bcf	3,5	;RP0=0, select bank0
  6590     093A  1303               	bcf	3,6	;RP1=0, select bank0
  6591     093B  1605               	bsf	5,4	;volatile
  6592     093C                     l3884:
  6593                           
  6594                           ;main.c: 189: }
  6595     093C  3001               	movlw	1
  6596     093D  1683               	bsf	3,5	;RP0=1, select bank1
  6597     093E  1303               	bcf	3,6	;RP1=0, select bank1
  6598     093F  07EA               	addwf	main@i^(0+128),f
  6599     0940  1803               	skipnc
  6600     0941  0AEB               	incf	(main@i+1)^(0+128),f
  6601     0942  3000               	movlw	0
  6602     0943  07EB               	addwf	(main@i+1)^(0+128),f
  6603     0944  2901               	goto	l3872
  6604     0945                     l3888:
  6605                           
  6606                           ;main.c: 190:     Lcd_Clear();
  6607     0945  160A  118A  2296  120A  158A  	fcall	_Lcd_Clear
  6608     094A                     l3890:
  6609                           
  6610                           ;main.c: 192:     RA4 = 0;
  6611     094A  1283               	bcf	3,5	;RP0=0, select bank0
  6612     094B  1303               	bcf	3,6	;RP1=0, select bank0
  6613     094C  1205               	bcf	5,4	;volatile
  6614     094D                     l3892:
  6615                           
  6616                           ;main.c: 195: if ((currentTime.hours == 500 || currentTime.hours == 501 || currentTime.h
      +                          ours == 502) && currentTime.minutes == 0) {
  6617     094D  30F4               	movlw	244
  6618     094E  1683               	bsf	3,5	;RP0=1, select bank3
  6619     094F  1703               	bsf	3,6	;RP1=1, select bank3
  6620     0950  061E               	xorwf	_currentTime^(0+384),w
  6621     0951  1D03               	skipz
  6622     0952  2958               	goto	u5300
  6623     0953  031F               	decf	(_currentTime+1)^(0+384),w
  6624     0954  1903               	btfsc	3,2
  6625     0955  2957               	goto	u5301
  6626     0956  2958               	goto	u5300
  6627     0957                     u5301:
  6628     0957  296A               	goto	l3898
  6629     0958                     u5300:
  6630     0958                     l3894:
  6631     0958  30F5               	movlw	245
  6632     0959  061E               	xorwf	_currentTime^(0+384),w
  6633     095A  1D03               	skipz
  6634     095B  2961               	goto	u5310
  6635     095C  031F               	decf	(_currentTime+1)^(0+384),w
  6636     095D  1903               	btfsc	3,2
  6637     095E  2960               	goto	u5311
  6638     095F  2961               	goto	u5310
  6639     0960                     u5311:
  6640     0960  296A               	goto	l3898
  6641     0961                     u5310:
  6642     0961                     l3896:
  6643     0961  30F6               	movlw	246
  6644     0962  061E               	xorwf	_currentTime^(0+384),w
  6645     0963  1D03               	skipz
  6646     0964  2969               	goto	u5321
  6647     0965  031F               	decf	(_currentTime+1)^(0+384),w
  6648     0966  1D03               	btfss	3,2
  6649     0967  2969               	goto	u5321
  6650     0968  296A               	goto	u5320
  6651     0969                     u5321:
  6652     0969  29C5               	goto	l3924
  6653     096A                     u5320:
  6654     096A                     l3898:
  6655     096A  0820               	movf	(_currentTime^(0+384)+2),w
  6656     096B  0421               	iorwf	((_currentTime+1)^(0+384)+2),w
  6657     096C  1D03               	btfss	3,2
  6658     096D  296F               	goto	u5331
  6659     096E  2970               	goto	u5330
  6660     096F                     u5331:
  6661     096F  29C5               	goto	l3924
  6662     0970                     u5330:
  6663     0970                     l3900:
  6664                           
  6665                           ;main.c: 197:     Lcd_Clear();
  6666     0970  160A  118A  2296  120A  158A  	fcall	_Lcd_Clear
  6667     0975                     l3902:
  6668                           
  6669                           ;main.c: 198:     int i=0 ;
  6670     0975  1683               	bsf	3,5	;RP0=1, select bank1
  6671     0976  1303               	bcf	3,6	;RP1=0, select bank1
  6672     0977  01EC               	clrf	main@i_341^(0+128)
  6673     0978  01ED               	clrf	(main@i_341+1)^(0+128)
  6674     0979                     l3904:
  6675                           
  6676                           ;main.c: 199:     for(; i < 10; i++)
  6677     0979  086D               	movf	(main@i_341+1)^(0+128),w
  6678     097A  3A80               	xorlw	128
  6679     097B  00FF               	movwf	btemp+1
  6680     097C  3080               	movlw	128
  6681     097D  027F               	subwf	btemp+1,w
  6682     097E  1D03               	skipz
  6683     097F  2982               	goto	u5345
  6684     0980  300A               	movlw	10
  6685     0981  026C               	subwf	main@i_341^(0+128),w
  6686     0982                     u5345:
  6687     0982  1C03               	skipc
  6688     0983  2985               	goto	u5341
  6689     0984  2986               	goto	u5340
  6690     0985                     u5341:
  6691     0985  2987               	goto	l3908
  6692     0986                     u5340:
  6693     0986  29BD               	goto	l3920
  6694     0987                     l3908:
  6695                           
  6696                           ;main.c: 200: {;main.c: 201:    Lcd_Set_Cursor(1, 1);
  6697     0987  1283               	bcf	3,5	;RP0=0, select bank0
  6698     0988  1303               	bcf	3,6	;RP1=0, select bank0
  6699     0989  01A4               	clrf	Lcd_Set_Cursor@b
  6700     098A  0AA4               	incf	Lcd_Set_Cursor@b,f
  6701     098B  3001               	movlw	1
  6702     098C  160A  118A  250A  120A  158A  	fcall	_Lcd_Set_Cursor
  6703     0991                     l3910:
  6704                           
  6705                           ;main.c: 202: Lcd_Write_String("YAG BAKIMI YAPINIZ");
  6706     0991  3081               	movlw	low (STR_4| (0+32768))
  6707     0992  1283               	bcf	3,5	;RP0=0, select bank0
  6708     0993  1303               	bcf	3,6	;RP1=0, select bank0
  6709     0994  00A5               	movwf	Lcd_Write_String@a
  6710     0995  3098               	movlw	high (STR_4| (0+32768))
  6711     0996  00A6               	movwf	Lcd_Write_String@a+1
  6712     0997  160A  118A  23F0  120A  158A  	fcall	_Lcd_Write_String
  6713     099C                     l3912:
  6714                           
  6715                           ;main.c: 203: Lcd_Set_Cursor(2, 1);
  6716     099C  1283               	bcf	3,5	;RP0=0, select bank0
  6717     099D  1303               	bcf	3,6	;RP1=0, select bank0
  6718     099E  01A4               	clrf	Lcd_Set_Cursor@b
  6719     099F  0AA4               	incf	Lcd_Set_Cursor@b,f
  6720     09A0  3002               	movlw	2
  6721     09A1  160A  118A  250A  120A  158A  	fcall	_Lcd_Set_Cursor
  6722                           
  6723                           ;main.c: 204: Lcd_Write_String("OIL THE GEARS");
  6724     09A6  30C1               	movlw	low (STR_5| (0+32768))
  6725     09A7  1283               	bcf	3,5	;RP0=0, select bank0
  6726     09A8  1303               	bcf	3,6	;RP1=0, select bank0
  6727     09A9  00A5               	movwf	Lcd_Write_String@a
  6728     09AA  3098               	movlw	high (STR_5| (0+32768))
  6729     09AB  00A6               	movwf	Lcd_Write_String@a+1
  6730     09AC  160A  118A  23F0  120A  158A  	fcall	_Lcd_Write_String
  6731     09B1                     l3914:
  6732                           
  6733                           ;main.c: 205: RA4 = 1;
  6734     09B1  1283               	bcf	3,5	;RP0=0, select bank0
  6735     09B2  1303               	bcf	3,6	;RP1=0, select bank0
  6736     09B3  1605               	bsf	5,4	;volatile
  6737     09B4                     l3916:
  6738                           
  6739                           ;main.c: 206: }
  6740     09B4  3001               	movlw	1
  6741     09B5  1683               	bsf	3,5	;RP0=1, select bank1
  6742     09B6  1303               	bcf	3,6	;RP1=0, select bank1
  6743     09B7  07EC               	addwf	main@i_341^(0+128),f
  6744     09B8  1803               	skipnc
  6745     09B9  0AED               	incf	(main@i_341+1)^(0+128),f
  6746     09BA  3000               	movlw	0
  6747     09BB  07ED               	addwf	(main@i_341+1)^(0+128),f
  6748     09BC  2979               	goto	l3904
  6749     09BD                     l3920:
  6750                           
  6751                           ;main.c: 207:     Lcd_Clear();
  6752     09BD  160A  118A  2296  120A  158A  	fcall	_Lcd_Clear
  6753     09C2                     l3922:
  6754                           
  6755                           ;main.c: 209:     RA4 = 0;
  6756     09C2  1283               	bcf	3,5	;RP0=0, select bank0
  6757     09C3  1303               	bcf	3,6	;RP1=0, select bank0
  6758     09C4  1205               	bcf	5,4	;volatile
  6759     09C5                     l3924:
  6760                           
  6761                           ;main.c: 212: if ((currentTime.hours == 1000 || currentTime.hours == 1001 || currentTime
      +                          .hours == 1002) && currentTime.minutes == 0) {
  6762     09C5  30E8               	movlw	232
  6763     09C6  1683               	bsf	3,5	;RP0=1, select bank3
  6764     09C7  1703               	bsf	3,6	;RP1=1, select bank3
  6765     09C8  061E               	xorwf	_currentTime^(0+384),w
  6766     09C9  3003               	movlw	3
  6767     09CA  1903               	skipnz
  6768     09CB  061F               	xorwf	(_currentTime+1)^(0+384),w
  6769     09CC  1903               	btfsc	3,2
  6770     09CD  29CF               	goto	u5351
  6771     09CE  29D0               	goto	u5350
  6772     09CF                     u5351:
  6773     09CF  29E2               	goto	l3930
  6774     09D0                     u5350:
  6775     09D0                     l3926:
  6776     09D0  30E9               	movlw	233
  6777     09D1  061E               	xorwf	_currentTime^(0+384),w
  6778     09D2  3003               	movlw	3
  6779     09D3  1903               	skipnz
  6780     09D4  061F               	xorwf	(_currentTime+1)^(0+384),w
  6781     09D5  1903               	btfsc	3,2
  6782     09D6  29D8               	goto	u5361
  6783     09D7  29D9               	goto	u5360
  6784     09D8                     u5361:
  6785     09D8  29E2               	goto	l3930
  6786     09D9                     u5360:
  6787     09D9                     l3928:
  6788     09D9  30EA               	movlw	234
  6789     09DA  061E               	xorwf	_currentTime^(0+384),w
  6790     09DB  3003               	movlw	3
  6791     09DC  1903               	skipnz
  6792     09DD  061F               	xorwf	(_currentTime+1)^(0+384),w
  6793     09DE  1D03               	btfss	3,2
  6794     09DF  29E1               	goto	u5371
  6795     09E0  29E2               	goto	u5370
  6796     09E1                     u5371:
  6797     09E1  2A3D               	goto	l3956
  6798     09E2                     u5370:
  6799     09E2                     l3930:
  6800     09E2  0820               	movf	(_currentTime^(0+384)+2),w
  6801     09E3  0421               	iorwf	((_currentTime+1)^(0+384)+2),w
  6802     09E4  1D03               	btfss	3,2
  6803     09E5  29E7               	goto	u5381
  6804     09E6  29E8               	goto	u5380
  6805     09E7                     u5381:
  6806     09E7  2A3D               	goto	l3956
  6807     09E8                     u5380:
  6808     09E8                     l3932:
  6809                           
  6810                           ;main.c: 214:     Lcd_Clear();
  6811     09E8  160A  118A  2296  120A  158A  	fcall	_Lcd_Clear
  6812     09ED                     l3934:
  6813                           
  6814                           ;main.c: 215:     int i=0 ;
  6815     09ED  1683               	bsf	3,5	;RP0=1, select bank1
  6816     09EE  1303               	bcf	3,6	;RP1=0, select bank1
  6817     09EF  01EE               	clrf	main@i_344^(0+128)
  6818     09F0  01EF               	clrf	(main@i_344+1)^(0+128)
  6819     09F1                     l3936:
  6820                           
  6821                           ;main.c: 216:     for(; i < 10; i++)
  6822     09F1  086F               	movf	(main@i_344+1)^(0+128),w
  6823     09F2  3A80               	xorlw	128
  6824     09F3  00FF               	movwf	btemp+1
  6825     09F4  3080               	movlw	128
  6826     09F5  027F               	subwf	btemp+1,w
  6827     09F6  1D03               	skipz
  6828     09F7  29FA               	goto	u5395
  6829     09F8  300A               	movlw	10
  6830     09F9  026E               	subwf	main@i_344^(0+128),w
  6831     09FA                     u5395:
  6832     09FA  1C03               	skipc
  6833     09FB  29FD               	goto	u5391
  6834     09FC  29FE               	goto	u5390
  6835     09FD                     u5391:
  6836     09FD  29FF               	goto	l3940
  6837     09FE                     u5390:
  6838     09FE  2A35               	goto	l3952
  6839     09FF                     l3940:
  6840                           
  6841                           ;main.c: 217: {;main.c: 218:    Lcd_Set_Cursor(1, 1);
  6842     09FF  1283               	bcf	3,5	;RP0=0, select bank0
  6843     0A00  1303               	bcf	3,6	;RP1=0, select bank0
  6844     0A01  01A4               	clrf	Lcd_Set_Cursor@b
  6845     0A02  0AA4               	incf	Lcd_Set_Cursor@b,f
  6846     0A03  3001               	movlw	1
  6847     0A04  160A  118A  250A  120A  158A  	fcall	_Lcd_Set_Cursor
  6848     0A09                     l3942:
  6849                           
  6850                           ;main.c: 219: Lcd_Write_String("YAG BAKIMI YAPINIZ");
  6851     0A09  3081               	movlw	low (STR_4| (0+32768))
  6852     0A0A  1283               	bcf	3,5	;RP0=0, select bank0
  6853     0A0B  1303               	bcf	3,6	;RP1=0, select bank0
  6854     0A0C  00A5               	movwf	Lcd_Write_String@a
  6855     0A0D  3098               	movlw	high (STR_4| (0+32768))
  6856     0A0E  00A6               	movwf	Lcd_Write_String@a+1
  6857     0A0F  160A  118A  23F0  120A  158A  	fcall	_Lcd_Write_String
  6858     0A14                     l3944:
  6859                           
  6860                           ;main.c: 220: Lcd_Set_Cursor(2, 1);
  6861     0A14  1283               	bcf	3,5	;RP0=0, select bank0
  6862     0A15  1303               	bcf	3,6	;RP1=0, select bank0
  6863     0A16  01A4               	clrf	Lcd_Set_Cursor@b
  6864     0A17  0AA4               	incf	Lcd_Set_Cursor@b,f
  6865     0A18  3002               	movlw	2
  6866     0A19  160A  118A  250A  120A  158A  	fcall	_Lcd_Set_Cursor
  6867                           
  6868                           ;main.c: 221: Lcd_Write_String("OIL THE GEARS");
  6869     0A1E  30C1               	movlw	low (STR_5| (0+32768))
  6870     0A1F  1283               	bcf	3,5	;RP0=0, select bank0
  6871     0A20  1303               	bcf	3,6	;RP1=0, select bank0
  6872     0A21  00A5               	movwf	Lcd_Write_String@a
  6873     0A22  3098               	movlw	high (STR_5| (0+32768))
  6874     0A23  00A6               	movwf	Lcd_Write_String@a+1
  6875     0A24  160A  118A  23F0  120A  158A  	fcall	_Lcd_Write_String
  6876     0A29                     l3946:
  6877                           
  6878                           ;main.c: 222: RA4 = 1;
  6879     0A29  1283               	bcf	3,5	;RP0=0, select bank0
  6880     0A2A  1303               	bcf	3,6	;RP1=0, select bank0
  6881     0A2B  1605               	bsf	5,4	;volatile
  6882     0A2C                     l3948:
  6883                           
  6884                           ;main.c: 223: }
  6885     0A2C  3001               	movlw	1
  6886     0A2D  1683               	bsf	3,5	;RP0=1, select bank1
  6887     0A2E  1303               	bcf	3,6	;RP1=0, select bank1
  6888     0A2F  07EE               	addwf	main@i_344^(0+128),f
  6889     0A30  1803               	skipnc
  6890     0A31  0AEF               	incf	(main@i_344+1)^(0+128),f
  6891     0A32  3000               	movlw	0
  6892     0A33  07EF               	addwf	(main@i_344+1)^(0+128),f
  6893     0A34  29F1               	goto	l3936
  6894     0A35                     l3952:
  6895                           
  6896                           ;main.c: 224:     Lcd_Clear();
  6897     0A35  160A  118A  2296  120A  158A  	fcall	_Lcd_Clear
  6898     0A3A                     l3954:
  6899                           
  6900                           ;main.c: 226:     RA4 = 0;
  6901     0A3A  1283               	bcf	3,5	;RP0=0, select bank0
  6902     0A3B  1303               	bcf	3,6	;RP1=0, select bank0
  6903     0A3C  1205               	bcf	5,4	;volatile
  6904     0A3D                     l3956:
  6905                           
  6906                           ;main.c: 229: if ((currentTime.hours == 1500 || currentTime.hours == 1501 || currentTime
      +                          .hours == 1502) && currentTime.minutes == 0) {
  6907     0A3D  30DC               	movlw	220
  6908     0A3E  1683               	bsf	3,5	;RP0=1, select bank3
  6909     0A3F  1703               	bsf	3,6	;RP1=1, select bank3
  6910     0A40  061E               	xorwf	_currentTime^(0+384),w
  6911     0A41  3005               	movlw	5
  6912     0A42  1903               	skipnz
  6913     0A43  061F               	xorwf	(_currentTime+1)^(0+384),w
  6914     0A44  1903               	btfsc	3,2
  6915     0A45  2A47               	goto	u5401
  6916     0A46  2A48               	goto	u5400
  6917     0A47                     u5401:
  6918     0A47  2A5A               	goto	l3962
  6919     0A48                     u5400:
  6920     0A48                     l3958:
  6921     0A48  30DD               	movlw	221
  6922     0A49  061E               	xorwf	_currentTime^(0+384),w
  6923     0A4A  3005               	movlw	5
  6924     0A4B  1903               	skipnz
  6925     0A4C  061F               	xorwf	(_currentTime+1)^(0+384),w
  6926     0A4D  1903               	btfsc	3,2
  6927     0A4E  2A50               	goto	u5411
  6928     0A4F  2A51               	goto	u5410
  6929     0A50                     u5411:
  6930     0A50  2A5A               	goto	l3962
  6931     0A51                     u5410:
  6932     0A51                     l3960:
  6933     0A51  30DE               	movlw	222
  6934     0A52  061E               	xorwf	_currentTime^(0+384),w
  6935     0A53  3005               	movlw	5
  6936     0A54  1903               	skipnz
  6937     0A55  061F               	xorwf	(_currentTime+1)^(0+384),w
  6938     0A56  1D03               	btfss	3,2
  6939     0A57  2A59               	goto	u5421
  6940     0A58  2A5A               	goto	u5420
  6941     0A59                     u5421:
  6942     0A59  2AB5               	goto	l3988
  6943     0A5A                     u5420:
  6944     0A5A                     l3962:
  6945     0A5A  0820               	movf	(_currentTime^(0+384)+2),w
  6946     0A5B  0421               	iorwf	((_currentTime+1)^(0+384)+2),w
  6947     0A5C  1D03               	btfss	3,2
  6948     0A5D  2A5F               	goto	u5431
  6949     0A5E  2A60               	goto	u5430
  6950     0A5F                     u5431:
  6951     0A5F  2AB5               	goto	l3988
  6952     0A60                     u5430:
  6953     0A60                     l3964:
  6954                           
  6955                           ;main.c: 231:     Lcd_Clear();
  6956     0A60  160A  118A  2296  120A  158A  	fcall	_Lcd_Clear
  6957     0A65                     l3966:
  6958                           
  6959                           ;main.c: 232:     int i=0 ;
  6960     0A65  1683               	bsf	3,5	;RP0=1, select bank3
  6961     0A66  1703               	bsf	3,6	;RP1=1, select bank3
  6962     0A67  0190               	clrf	main@i_347^(0+384)
  6963     0A68  0191               	clrf	(main@i_347+1)^(0+384)
  6964     0A69                     l3968:
  6965                           
  6966                           ;main.c: 233:     for(; i < 10; i++)
  6967     0A69  0811               	movf	(main@i_347+1)^(0+384),w
  6968     0A6A  3A80               	xorlw	128
  6969     0A6B  00FF               	movwf	btemp+1
  6970     0A6C  3080               	movlw	128
  6971     0A6D  027F               	subwf	btemp+1,w
  6972     0A6E  1D03               	skipz
  6973     0A6F  2A72               	goto	u5445
  6974     0A70  300A               	movlw	10
  6975     0A71  0210               	subwf	main@i_347^(0+384),w
  6976     0A72                     u5445:
  6977     0A72  1C03               	skipc
  6978     0A73  2A75               	goto	u5441
  6979     0A74  2A76               	goto	u5440
  6980     0A75                     u5441:
  6981     0A75  2A77               	goto	l3972
  6982     0A76                     u5440:
  6983     0A76  2AAD               	goto	l3984
  6984     0A77                     l3972:
  6985                           
  6986                           ;main.c: 234: {;main.c: 235:    Lcd_Set_Cursor(1, 1);
  6987     0A77  1283               	bcf	3,5	;RP0=0, select bank0
  6988     0A78  1303               	bcf	3,6	;RP1=0, select bank0
  6989     0A79  01A4               	clrf	Lcd_Set_Cursor@b
  6990     0A7A  0AA4               	incf	Lcd_Set_Cursor@b,f
  6991     0A7B  3001               	movlw	1
  6992     0A7C  160A  118A  250A  120A  158A  	fcall	_Lcd_Set_Cursor
  6993     0A81                     l3974:
  6994                           
  6995                           ;main.c: 236: Lcd_Write_String("YAG BAKIMI YAPINIZ");
  6996     0A81  3081               	movlw	low (STR_4| (0+32768))
  6997     0A82  1283               	bcf	3,5	;RP0=0, select bank0
  6998     0A83  1303               	bcf	3,6	;RP1=0, select bank0
  6999     0A84  00A5               	movwf	Lcd_Write_String@a
  7000     0A85  3098               	movlw	high (STR_4| (0+32768))
  7001     0A86  00A6               	movwf	Lcd_Write_String@a+1
  7002     0A87  160A  118A  23F0  120A  158A  	fcall	_Lcd_Write_String
  7003     0A8C                     l3976:
  7004                           
  7005                           ;main.c: 237: Lcd_Set_Cursor(2, 1);
  7006     0A8C  1283               	bcf	3,5	;RP0=0, select bank0
  7007     0A8D  1303               	bcf	3,6	;RP1=0, select bank0
  7008     0A8E  01A4               	clrf	Lcd_Set_Cursor@b
  7009     0A8F  0AA4               	incf	Lcd_Set_Cursor@b,f
  7010     0A90  3002               	movlw	2
  7011     0A91  160A  118A  250A  120A  158A  	fcall	_Lcd_Set_Cursor
  7012                           
  7013                           ;main.c: 238: Lcd_Write_String("OIL THE GEARS");
  7014     0A96  30C1               	movlw	low (STR_5| (0+32768))
  7015     0A97  1283               	bcf	3,5	;RP0=0, select bank0
  7016     0A98  1303               	bcf	3,6	;RP1=0, select bank0
  7017     0A99  00A5               	movwf	Lcd_Write_String@a
  7018     0A9A  3098               	movlw	high (STR_5| (0+32768))
  7019     0A9B  00A6               	movwf	Lcd_Write_String@a+1
  7020     0A9C  160A  118A  23F0  120A  158A  	fcall	_Lcd_Write_String
  7021     0AA1                     l3978:
  7022                           
  7023                           ;main.c: 239: RA4 = 1;
  7024     0AA1  1283               	bcf	3,5	;RP0=0, select bank0
  7025     0AA2  1303               	bcf	3,6	;RP1=0, select bank0
  7026     0AA3  1605               	bsf	5,4	;volatile
  7027     0AA4                     l3980:
  7028                           
  7029                           ;main.c: 240: }
  7030     0AA4  3001               	movlw	1
  7031     0AA5  1683               	bsf	3,5	;RP0=1, select bank3
  7032     0AA6  1703               	bsf	3,6	;RP1=1, select bank3
  7033     0AA7  0790               	addwf	main@i_347^(0+384),f
  7034     0AA8  1803               	skipnc
  7035     0AA9  0A91               	incf	(main@i_347+1)^(0+384),f
  7036     0AAA  3000               	movlw	0
  7037     0AAB  0791               	addwf	(main@i_347+1)^(0+384),f
  7038     0AAC  2A69               	goto	l3968
  7039     0AAD                     l3984:
  7040                           
  7041                           ;main.c: 241:     Lcd_Clear();
  7042     0AAD  160A  118A  2296  120A  158A  	fcall	_Lcd_Clear
  7043     0AB2                     l3986:
  7044                           
  7045                           ;main.c: 243:     RA4 = 0;
  7046     0AB2  1283               	bcf	3,5	;RP0=0, select bank0
  7047     0AB3  1303               	bcf	3,6	;RP1=0, select bank0
  7048     0AB4  1205               	bcf	5,4	;volatile
  7049     0AB5                     l3988:
  7050                           
  7051                           ;main.c: 246: if ((currentTime.hours == 2000 || currentTime.hours == 2001 || currentTime
      +                          .hours == 2002) && currentTime.minutes == 0) {
  7052     0AB5  30D0               	movlw	208
  7053     0AB6  1683               	bsf	3,5	;RP0=1, select bank3
  7054     0AB7  1703               	bsf	3,6	;RP1=1, select bank3
  7055     0AB8  061E               	xorwf	_currentTime^(0+384),w
  7056     0AB9  3007               	movlw	7
  7057     0ABA  1903               	skipnz
  7058     0ABB  061F               	xorwf	(_currentTime+1)^(0+384),w
  7059     0ABC  1903               	btfsc	3,2
  7060     0ABD  2AC1               	goto	u5451
  7061     0ABE  120A  118A  281F   	goto	u5450
  7062     0AC1                     u5451:
  7063     0AC1  120A  118A  2831   	goto	l3994
  7064                           
  7065                           	psect	maintext_split_2
  7066     001F                     u5450:
  7067     001F                     l3990:
  7068     001F  30D1               	movlw	209
  7069     0020  061E               	xorwf	_currentTime^(0+384),w
  7070     0021  3007               	movlw	7
  7071     0022  1903               	skipnz
  7072     0023  061F               	xorwf	(_currentTime+1)^(0+384),w
  7073     0024  1903               	btfsc	3,2
  7074     0025  2827               	goto	u5461
  7075     0026  2828               	goto	u5460
  7076     0027                     u5461:
  7077     0027  2831               	goto	l3994
  7078     0028                     u5460:
  7079     0028                     l3992:
  7080     0028  30D2               	movlw	210
  7081     0029  061E               	xorwf	_currentTime^(0+384),w
  7082     002A  3007               	movlw	7
  7083     002B  1903               	skipnz
  7084     002C  061F               	xorwf	(_currentTime+1)^(0+384),w
  7085     002D  1D03               	btfss	3,2
  7086     002E  2830               	goto	u5471
  7087     002F  2831               	goto	u5470
  7088     0030                     u5471:
  7089     0030  288C               	goto	l4020
  7090     0031                     u5470:
  7091     0031                     l3994:
  7092     0031  0820               	movf	(_currentTime^(0+384)+2),w
  7093     0032  0421               	iorwf	((_currentTime+1)^(0+384)+2),w
  7094     0033  1D03               	btfss	3,2
  7095     0034  2836               	goto	u5481
  7096     0035  2837               	goto	u5480
  7097     0036                     u5481:
  7098     0036  288C               	goto	l4020
  7099     0037                     u5480:
  7100     0037                     l3996:
  7101                           
  7102                           ;main.c: 248:     Lcd_Clear();
  7103     0037  160A  118A  2296  120A  118A  	fcall	_Lcd_Clear
  7104     003C                     l3998:
  7105                           
  7106                           ;main.c: 249:     int i=0 ;
  7107     003C  1683               	bsf	3,5	;RP0=1, select bank3
  7108     003D  1703               	bsf	3,6	;RP1=1, select bank3
  7109     003E  0192               	clrf	main@i_350^(0+384)
  7110     003F  0193               	clrf	(main@i_350+1)^(0+384)
  7111     0040                     l4000:
  7112                           
  7113                           ;main.c: 250:     for(; i < 10; i++)
  7114     0040  0813               	movf	(main@i_350+1)^(0+384),w
  7115     0041  3A80               	xorlw	128
  7116     0042  00FF               	movwf	btemp+1
  7117     0043  3080               	movlw	128
  7118     0044  027F               	subwf	btemp+1,w
  7119     0045  1D03               	skipz
  7120     0046  2849               	goto	u5495
  7121     0047  300A               	movlw	10
  7122     0048  0212               	subwf	main@i_350^(0+384),w
  7123     0049                     u5495:
  7124     0049  1C03               	skipc
  7125     004A  284C               	goto	u5491
  7126     004B  284D               	goto	u5490
  7127     004C                     u5491:
  7128     004C  284E               	goto	l4004
  7129     004D                     u5490:
  7130     004D  2884               	goto	l4016
  7131     004E                     l4004:
  7132                           
  7133                           ;main.c: 251: {;main.c: 252:    Lcd_Set_Cursor(1, 1);
  7134     004E  1283               	bcf	3,5	;RP0=0, select bank0
  7135     004F  1303               	bcf	3,6	;RP1=0, select bank0
  7136     0050  01A4               	clrf	Lcd_Set_Cursor@b
  7137     0051  0AA4               	incf	Lcd_Set_Cursor@b,f
  7138     0052  3001               	movlw	1
  7139     0053  160A  118A  250A  120A  118A  	fcall	_Lcd_Set_Cursor
  7140     0058                     l4006:
  7141                           
  7142                           ;main.c: 253: Lcd_Write_String("YAG BAKIMI YAPINIZ");
  7143     0058  3081               	movlw	low (STR_4| (0+32768))
  7144     0059  1283               	bcf	3,5	;RP0=0, select bank0
  7145     005A  1303               	bcf	3,6	;RP1=0, select bank0
  7146     005B  00A5               	movwf	Lcd_Write_String@a
  7147     005C  3098               	movlw	high (STR_4| (0+32768))
  7148     005D  00A6               	movwf	Lcd_Write_String@a+1
  7149     005E  160A  118A  23F0  120A  118A  	fcall	_Lcd_Write_String
  7150     0063                     l4008:
  7151                           
  7152                           ;main.c: 254: Lcd_Set_Cursor(2, 1);
  7153     0063  1283               	bcf	3,5	;RP0=0, select bank0
  7154     0064  1303               	bcf	3,6	;RP1=0, select bank0
  7155     0065  01A4               	clrf	Lcd_Set_Cursor@b
  7156     0066  0AA4               	incf	Lcd_Set_Cursor@b,f
  7157     0067  3002               	movlw	2
  7158     0068  160A  118A  250A  120A  118A  	fcall	_Lcd_Set_Cursor
  7159                           
  7160                           ;main.c: 255: Lcd_Write_String("OIL THE GEARS");
  7161     006D  30C1               	movlw	low (STR_5| (0+32768))
  7162     006E  1283               	bcf	3,5	;RP0=0, select bank0
  7163     006F  1303               	bcf	3,6	;RP1=0, select bank0
  7164     0070  00A5               	movwf	Lcd_Write_String@a
  7165     0071  3098               	movlw	high (STR_5| (0+32768))
  7166     0072  00A6               	movwf	Lcd_Write_String@a+1
  7167     0073  160A  118A  23F0  120A  118A  	fcall	_Lcd_Write_String
  7168     0078                     l4010:
  7169                           
  7170                           ;main.c: 256: RA4 = 1;
  7171     0078  1283               	bcf	3,5	;RP0=0, select bank0
  7172     0079  1303               	bcf	3,6	;RP1=0, select bank0
  7173     007A  1605               	bsf	5,4	;volatile
  7174     007B                     l4012:
  7175                           
  7176                           ;main.c: 257: }
  7177     007B  3001               	movlw	1
  7178     007C  1683               	bsf	3,5	;RP0=1, select bank3
  7179     007D  1703               	bsf	3,6	;RP1=1, select bank3
  7180     007E  0792               	addwf	main@i_350^(0+384),f
  7181     007F  1803               	skipnc
  7182     0080  0A93               	incf	(main@i_350+1)^(0+384),f
  7183     0081  3000               	movlw	0
  7184     0082  0793               	addwf	(main@i_350+1)^(0+384),f
  7185     0083  2840               	goto	l4000
  7186     0084                     l4016:
  7187                           
  7188                           ;main.c: 258:     Lcd_Clear();
  7189     0084  160A  118A  2296  120A  118A  	fcall	_Lcd_Clear
  7190     0089                     l4018:
  7191                           
  7192                           ;main.c: 260:     RA4 = 0;
  7193     0089  1283               	bcf	3,5	;RP0=0, select bank0
  7194     008A  1303               	bcf	3,6	;RP1=0, select bank0
  7195     008B  1205               	bcf	5,4	;volatile
  7196     008C                     l4020:
  7197                           
  7198                           ;main.c: 263: if ((currentTime.hours == 2500 || currentTime.hours == 2501 || currentTime
      +                          .hours == 2502) && currentTime.minutes == 0) {
  7199     008C  30C4               	movlw	196
  7200     008D  1683               	bsf	3,5	;RP0=1, select bank3
  7201     008E  1703               	bsf	3,6	;RP1=1, select bank3
  7202     008F  061E               	xorwf	_currentTime^(0+384),w
  7203     0090  3009               	movlw	9
  7204     0091  1903               	skipnz
  7205     0092  061F               	xorwf	(_currentTime+1)^(0+384),w
  7206     0093  1903               	btfsc	3,2
  7207     0094  2896               	goto	u5501
  7208     0095  2897               	goto	u5500
  7209     0096                     u5501:
  7210     0096  28A9               	goto	l4026
  7211     0097                     u5500:
  7212     0097                     l4022:
  7213     0097  30C5               	movlw	197
  7214     0098  061E               	xorwf	_currentTime^(0+384),w
  7215     0099  3009               	movlw	9
  7216     009A  1903               	skipnz
  7217     009B  061F               	xorwf	(_currentTime+1)^(0+384),w
  7218     009C  1903               	btfsc	3,2
  7219     009D  289F               	goto	u5511
  7220     009E  28A0               	goto	u5510
  7221     009F                     u5511:
  7222     009F  28A9               	goto	l4026
  7223     00A0                     u5510:
  7224     00A0                     l4024:
  7225     00A0  30C6               	movlw	198
  7226     00A1  061E               	xorwf	_currentTime^(0+384),w
  7227     00A2  3009               	movlw	9
  7228     00A3  1903               	skipnz
  7229     00A4  061F               	xorwf	(_currentTime+1)^(0+384),w
  7230     00A5  1D03               	btfss	3,2
  7231     00A6  28A8               	goto	u5521
  7232     00A7  28A9               	goto	u5520
  7233     00A8                     u5521:
  7234     00A8  2904               	goto	l4052
  7235     00A9                     u5520:
  7236     00A9                     l4026:
  7237     00A9  0820               	movf	(_currentTime^(0+384)+2),w
  7238     00AA  0421               	iorwf	((_currentTime+1)^(0+384)+2),w
  7239     00AB  1D03               	btfss	3,2
  7240     00AC  28AE               	goto	u5531
  7241     00AD  28AF               	goto	u5530
  7242     00AE                     u5531:
  7243     00AE  2904               	goto	l4052
  7244     00AF                     u5530:
  7245     00AF                     l4028:
  7246                           
  7247                           ;main.c: 265:     Lcd_Clear();
  7248     00AF  160A  118A  2296  120A  118A  	fcall	_Lcd_Clear
  7249     00B4                     l4030:
  7250                           
  7251                           ;main.c: 266:     int i=0 ;
  7252     00B4  1683               	bsf	3,5	;RP0=1, select bank3
  7253     00B5  1703               	bsf	3,6	;RP1=1, select bank3
  7254     00B6  0194               	clrf	main@i_353^(0+384)
  7255     00B7  0195               	clrf	(main@i_353+1)^(0+384)
  7256     00B8                     l4032:
  7257                           
  7258                           ;main.c: 267:     for(; i < 10; i++)
  7259     00B8  0815               	movf	(main@i_353+1)^(0+384),w
  7260     00B9  3A80               	xorlw	128
  7261     00BA  00FF               	movwf	btemp+1
  7262     00BB  3080               	movlw	128
  7263     00BC  027F               	subwf	btemp+1,w
  7264     00BD  1D03               	skipz
  7265     00BE  28C1               	goto	u5545
  7266     00BF  300A               	movlw	10
  7267     00C0  0214               	subwf	main@i_353^(0+384),w
  7268     00C1                     u5545:
  7269     00C1  1C03               	skipc
  7270     00C2  28C4               	goto	u5541
  7271     00C3  28C5               	goto	u5540
  7272     00C4                     u5541:
  7273     00C4  28C6               	goto	l4036
  7274     00C5                     u5540:
  7275     00C5  28FC               	goto	l4048
  7276     00C6                     l4036:
  7277                           
  7278                           ;main.c: 268: {;main.c: 269:    Lcd_Set_Cursor(1, 1);
  7279     00C6  1283               	bcf	3,5	;RP0=0, select bank0
  7280     00C7  1303               	bcf	3,6	;RP1=0, select bank0
  7281     00C8  01A4               	clrf	Lcd_Set_Cursor@b
  7282     00C9  0AA4               	incf	Lcd_Set_Cursor@b,f
  7283     00CA  3001               	movlw	1
  7284     00CB  160A  118A  250A  120A  118A  	fcall	_Lcd_Set_Cursor
  7285     00D0                     l4038:
  7286                           
  7287                           ;main.c: 270: Lcd_Write_String("YAG BAKIMI YAPINIZ");
  7288     00D0  3081               	movlw	low (STR_4| (0+32768))
  7289     00D1  1283               	bcf	3,5	;RP0=0, select bank0
  7290     00D2  1303               	bcf	3,6	;RP1=0, select bank0
  7291     00D3  00A5               	movwf	Lcd_Write_String@a
  7292     00D4  3098               	movlw	high (STR_4| (0+32768))
  7293     00D5  00A6               	movwf	Lcd_Write_String@a+1
  7294     00D6  160A  118A  23F0  120A  118A  	fcall	_Lcd_Write_String
  7295     00DB                     l4040:
  7296                           
  7297                           ;main.c: 271: Lcd_Set_Cursor(2, 1);
  7298     00DB  1283               	bcf	3,5	;RP0=0, select bank0
  7299     00DC  1303               	bcf	3,6	;RP1=0, select bank0
  7300     00DD  01A4               	clrf	Lcd_Set_Cursor@b
  7301     00DE  0AA4               	incf	Lcd_Set_Cursor@b,f
  7302     00DF  3002               	movlw	2
  7303     00E0  160A  118A  250A  120A  118A  	fcall	_Lcd_Set_Cursor
  7304                           
  7305                           ;main.c: 272: Lcd_Write_String("OIL THE GEARS");
  7306     00E5  30C1               	movlw	low (STR_5| (0+32768))
  7307     00E6  1283               	bcf	3,5	;RP0=0, select bank0
  7308     00E7  1303               	bcf	3,6	;RP1=0, select bank0
  7309     00E8  00A5               	movwf	Lcd_Write_String@a
  7310     00E9  3098               	movlw	high (STR_5| (0+32768))
  7311     00EA  00A6               	movwf	Lcd_Write_String@a+1
  7312     00EB  160A  118A  23F0  120A  118A  	fcall	_Lcd_Write_String
  7313     00F0                     l4042:
  7314                           
  7315                           ;main.c: 273: RA4 = 1;
  7316     00F0  1283               	bcf	3,5	;RP0=0, select bank0
  7317     00F1  1303               	bcf	3,6	;RP1=0, select bank0
  7318     00F2  1605               	bsf	5,4	;volatile
  7319     00F3                     l4044:
  7320                           
  7321                           ;main.c: 274: }
  7322     00F3  3001               	movlw	1
  7323     00F4  1683               	bsf	3,5	;RP0=1, select bank3
  7324     00F5  1703               	bsf	3,6	;RP1=1, select bank3
  7325     00F6  0794               	addwf	main@i_353^(0+384),f
  7326     00F7  1803               	skipnc
  7327     00F8  0A95               	incf	(main@i_353+1)^(0+384),f
  7328     00F9  3000               	movlw	0
  7329     00FA  0795               	addwf	(main@i_353+1)^(0+384),f
  7330     00FB  28B8               	goto	l4032
  7331     00FC                     l4048:
  7332                           
  7333                           ;main.c: 275:     Lcd_Clear();
  7334     00FC  160A  118A  2296  120A  118A  	fcall	_Lcd_Clear
  7335     0101                     l4050:
  7336                           
  7337                           ;main.c: 277:     RA4 = 0;
  7338     0101  1283               	bcf	3,5	;RP0=0, select bank0
  7339     0102  1303               	bcf	3,6	;RP1=0, select bank0
  7340     0103  1205               	bcf	5,4	;volatile
  7341     0104                     l4052:
  7342                           
  7343                           ;main.c: 283:         sprintf(lcdText, "%5uh %02um", currentTime.hours, currentTime.minu
      +                          tes);
  7344     0104  30E7               	movlw	low (STR_16| (0+32768))
  7345     0105  1283               	bcf	3,5	;RP0=0, select bank0
  7346     0106  1303               	bcf	3,6	;RP1=0, select bank0
  7347     0107  00B2               	movwf	sprintf@f
  7348     0108  3098               	movlw	high (STR_16| (0+32768))
  7349     0109  00B3               	movwf	sprintf@f+1
  7350     010A  1683               	bsf	3,5	;RP0=1, select bank3
  7351     010B  1703               	bsf	3,6	;RP1=1, select bank3
  7352     010C  081F               	movf	(_currentTime+1)^(0+384),w
  7353     010D  1283               	bcf	3,5	;RP0=0, select bank0
  7354     010E  1303               	bcf	3,6	;RP1=0, select bank0
  7355     010F  00B5               	movwf	?_sprintf+3
  7356     0110  1683               	bsf	3,5	;RP0=1, select bank3
  7357     0111  1703               	bsf	3,6	;RP1=1, select bank3
  7358     0112  081E               	movf	_currentTime^(0+384),w
  7359     0113  1283               	bcf	3,5	;RP0=0, select bank0
  7360     0114  1303               	bcf	3,6	;RP1=0, select bank0
  7361     0115  00B4               	movwf	?_sprintf+2
  7362     0116  1683               	bsf	3,5	;RP0=1, select bank3
  7363     0117  1703               	bsf	3,6	;RP1=1, select bank3
  7364     0118  0821               	movf	((_currentTime+1)^(0+384)+2),w
  7365     0119  1283               	bcf	3,5	;RP0=0, select bank0
  7366     011A  1303               	bcf	3,6	;RP1=0, select bank0
  7367     011B  00B7               	movwf	?_sprintf+5
  7368     011C  1683               	bsf	3,5	;RP0=1, select bank3
  7369     011D  1703               	bsf	3,6	;RP1=1, select bank3
  7370     011E  0820               	movf	(_currentTime^(0+384)+2),w
  7371     011F  1283               	bcf	3,5	;RP0=0, select bank0
  7372     0120  1303               	bcf	3,6	;RP1=0, select bank0
  7373     0121  00B6               	movwf	?_sprintf+4
  7374     0122  30B4               	movlw	(low (main@lcdText| 0))& (0+255)
  7375     0123  120A  158A  22C4  120A  118A  	fcall	_sprintf
  7376     0128                     l4054:
  7377                           
  7378                           ;main.c: 286:      Lcd_Set_Cursor(1, 10);
  7379     0128  300A               	movlw	10
  7380     0129  1283               	bcf	3,5	;RP0=0, select bank0
  7381     012A  1303               	bcf	3,6	;RP1=0, select bank0
  7382     012B  00A4               	movwf	Lcd_Set_Cursor@b
  7383     012C  3001               	movlw	1
  7384     012D  160A  118A  250A  120A  118A  	fcall	_Lcd_Set_Cursor
  7385                           
  7386                           ;main.c: 287:      Lcd_Write_String("  ");
  7387     0132  3034               	movlw	low ((STR_37+24)| (0+32768))
  7388     0133  1283               	bcf	3,5	;RP0=0, select bank0
  7389     0134  1303               	bcf	3,6	;RP1=0, select bank0
  7390     0135  00A5               	movwf	Lcd_Write_String@a
  7391     0136  3098               	movlw	high ((STR_37+24)| (0+32768))
  7392     0137  00A6               	movwf	Lcd_Write_String@a+1
  7393     0138  160A  118A  23F0  120A  118A  	fcall	_Lcd_Write_String
  7394     013D                     l4056:
  7395                           
  7396                           ;main.c: 288:      Lcd_Set_Cursor(1, 11);
  7397     013D  300B               	movlw	11
  7398     013E  1283               	bcf	3,5	;RP0=0, select bank0
  7399     013F  1303               	bcf	3,6	;RP1=0, select bank0
  7400     0140  00A4               	movwf	Lcd_Set_Cursor@b
  7401     0141  3001               	movlw	1
  7402     0142  160A  118A  250A  120A  118A  	fcall	_Lcd_Set_Cursor
  7403     0147                     l4058:
  7404                           
  7405                           ;main.c: 289:      Lcd_Write_String(lcdText);
  7406     0147  30B4               	movlw	(low (main@lcdText| 0))& (0+255)
  7407     0148  1283               	bcf	3,5	;RP0=0, select bank0
  7408     0149  1303               	bcf	3,6	;RP1=0, select bank0
  7409     014A  00A5               	movwf	Lcd_Write_String@a
  7410     014B  3000               	movlw	0
  7411     014C  00A6               	movwf	Lcd_Write_String@a+1
  7412     014D  160A  118A  23F0  120A  118A  	fcall	_Lcd_Write_String
  7413                           
  7414                           ;main.c: 293:         writeEEPROM(0x00, currentTime.hours);
  7415     0152  3000               	movlw	0
  7416     0153  1283               	bcf	3,5	;RP0=0, select bank0
  7417     0154  1303               	bcf	3,6	;RP1=0, select bank0
  7418     0155  00A0               	movwf	writeEEPROM@address
  7419     0156  00A1               	movwf	writeEEPROM@address+1
  7420     0157  1683               	bsf	3,5	;RP0=1, select bank3
  7421     0158  1703               	bsf	3,6	;RP1=1, select bank3
  7422     0159  081F               	movf	(_currentTime+1)^(0+384),w
  7423     015A  1283               	bcf	3,5	;RP0=0, select bank0
  7424     015B  1303               	bcf	3,6	;RP1=0, select bank0
  7425     015C  00A3               	movwf	writeEEPROM@data+1
  7426     015D  1683               	bsf	3,5	;RP0=1, select bank3
  7427     015E  1703               	bsf	3,6	;RP1=1, select bank3
  7428     015F  081E               	movf	_currentTime^(0+384),w
  7429     0160  1283               	bcf	3,5	;RP0=0, select bank0
  7430     0161  1303               	bcf	3,6	;RP1=0, select bank0
  7431     0162  00A2               	movwf	writeEEPROM@data
  7432     0163  160A  118A  22F1  120A  118A  	fcall	_writeEEPROM
  7433                           
  7434                           ;main.c: 294:         writeEEPROM(0x01, currentTime.minutes);
  7435     0168  3001               	movlw	1
  7436     0169  1283               	bcf	3,5	;RP0=0, select bank0
  7437     016A  1303               	bcf	3,6	;RP1=0, select bank0
  7438     016B  00A0               	movwf	writeEEPROM@address
  7439     016C  3000               	movlw	0
  7440     016D  00A1               	movwf	writeEEPROM@address+1
  7441     016E  1683               	bsf	3,5	;RP0=1, select bank3
  7442     016F  1703               	bsf	3,6	;RP1=1, select bank3
  7443     0170  0821               	movf	((_currentTime+1)^(0+384)+2),w
  7444     0171  1283               	bcf	3,5	;RP0=0, select bank0
  7445     0172  1303               	bcf	3,6	;RP1=0, select bank0
  7446     0173  00A3               	movwf	writeEEPROM@data+1
  7447     0174  1683               	bsf	3,5	;RP0=1, select bank3
  7448     0175  1703               	bsf	3,6	;RP1=1, select bank3
  7449     0176  0820               	movf	(_currentTime^(0+384)+2),w
  7450     0177  1283               	bcf	3,5	;RP0=0, select bank0
  7451     0178  1303               	bcf	3,6	;RP1=0, select bank0
  7452     0179  00A2               	movwf	writeEEPROM@data
  7453     017A  160A  118A  22F1  120A  118A  	fcall	_writeEEPROM
  7454                           
  7455                           ;main.c: 295:         writeEEPROM(0x02, currentTime.seconds);
  7456     017F  3002               	movlw	2
  7457     0180  1283               	bcf	3,5	;RP0=0, select bank0
  7458     0181  1303               	bcf	3,6	;RP1=0, select bank0
  7459     0182  00A0               	movwf	writeEEPROM@address
  7460     0183  3000               	movlw	0
  7461     0184  00A1               	movwf	writeEEPROM@address+1
  7462     0185  1683               	bsf	3,5	;RP0=1, select bank3
  7463     0186  1703               	bsf	3,6	;RP1=1, select bank3
  7464     0187  0823               	movf	((_currentTime+1)^(0+384)+4),w
  7465     0188  1283               	bcf	3,5	;RP0=0, select bank0
  7466     0189  1303               	bcf	3,6	;RP1=0, select bank0
  7467     018A  00A3               	movwf	writeEEPROM@data+1
  7468     018B  1683               	bsf	3,5	;RP0=1, select bank3
  7469     018C  1703               	bsf	3,6	;RP1=1, select bank3
  7470     018D  0822               	movf	(_currentTime^(0+384)+4),w
  7471     018E  1283               	bcf	3,5	;RP0=0, select bank0
  7472     018F  1303               	bcf	3,6	;RP1=0, select bank0
  7473     0190  00A2               	movwf	writeEEPROM@data
  7474     0191  160A  118A  22F1  120A  118A  	fcall	_writeEEPROM
  7475     0196                     l4060:
  7476                           
  7477                           ;main.c: 298:     ADCON0bits.CHS = 0b0011;
  7478     0196  1283               	bcf	3,5	;RP0=0, select bank0
  7479     0197  1303               	bcf	3,6	;RP1=0, select bank0
  7480     0198  081F               	movf	31,w	;volatile
  7481     0199  39C7               	andlw	-57
  7482     019A  3818               	iorlw	24
  7483     019B  009F               	movwf	31	;volatile
  7484     019C                     l4062:
  7485                           
  7486                           ;main.c: 299:     ADCON0bits.GO = 1;
  7487     019C  151F               	bsf	31,2	;volatile
  7488     019D                     l193:	
  7489                           ;main.c: 300:     while (ADCON0bits.GO);
  7490                           
  7491     019D  191F               	btfsc	31,2	;volatile
  7492     019E  29A0               	goto	u5551
  7493     019F  29A1               	goto	u5550
  7494     01A0                     u5551:
  7495     01A0  299D               	goto	l193
  7496     01A1                     u5550:
  7497     01A1                     l4064:
  7498                           
  7499                           ;main.c: 301:     adcValue2 = (ADRESH << 8) | ADRESL;
  7500     01A1  081E               	movf	30,w	;volatile
  7501     01A2  1683               	bsf	3,5	;RP0=1, select bank1
  7502     01A3  1303               	bcf	3,6	;RP1=0, select bank1
  7503     01A4  00D7               	movwf	(main@adcValue2+1)^(0+128)
  7504     01A5  081E               	movf	30,w	;volatile
  7505     01A6  00D6               	movwf	main@adcValue2^(0+128)
  7506     01A7                     l4066:
  7507                           
  7508                           ;main.c: 303:     unsigned int integerPart = adcValue2*3 ;
  7509     01A7  0857               	movf	(main@adcValue2+1)^(0+128),w
  7510     01A8  1283               	bcf	3,5	;RP0=0, select bank0
  7511     01A9  1303               	bcf	3,6	;RP1=0, select bank0
  7512     01AA  00A1               	movwf	___wmul@multiplier+1
  7513     01AB  1683               	bsf	3,5	;RP0=1, select bank1
  7514     01AC  1303               	bcf	3,6	;RP1=0, select bank1
  7515     01AD  0856               	movf	main@adcValue2^(0+128),w
  7516     01AE  1283               	bcf	3,5	;RP0=0, select bank0
  7517     01AF  1303               	bcf	3,6	;RP1=0, select bank0
  7518     01B0  00A0               	movwf	___wmul@multiplier
  7519     01B1  3003               	movlw	3
  7520     01B2  00A2               	movwf	___wmul@multiplicand
  7521     01B3  3000               	movlw	0
  7522     01B4  00A3               	movwf	___wmul@multiplicand+1
  7523     01B5  160A  118A  2354  120A  118A  	fcall	___wmul
  7524     01BA  1283               	bcf	3,5	;RP0=0, select bank0
  7525     01BB  1303               	bcf	3,6	;RP1=0, select bank0
  7526     01BC  0821               	movf	?___wmul+1,w
  7527     01BD  1683               	bsf	3,5	;RP0=1, select bank3
  7528     01BE  1703               	bsf	3,6	;RP1=1, select bank3
  7529     01BF  0099               	movwf	(main@integerPart+1)^(0+384)
  7530     01C0  1283               	bcf	3,5	;RP0=0, select bank0
  7531     01C1  1303               	bcf	3,6	;RP1=0, select bank0
  7532     01C2  0820               	movf	?___wmul,w
  7533     01C3  1683               	bsf	3,5	;RP0=1, select bank3
  7534     01C4  1703               	bsf	3,6	;RP1=1, select bank3
  7535     01C5  0098               	movwf	main@integerPart^(0+384)
  7536     01C6                     l4068:
  7537                           
  7538                           ;main.c: 305:     int binler = integerPart/1000;
  7539     01C6  30E8               	movlw	232
  7540     01C7  1283               	bcf	3,5	;RP0=0, select bank0
  7541     01C8  1303               	bcf	3,6	;RP1=0, select bank0
  7542     01C9  00A6               	movwf	___lwdiv@divisor
  7543     01CA  3003               	movlw	3
  7544     01CB  00A7               	movwf	___lwdiv@divisor+1
  7545     01CC  1683               	bsf	3,5	;RP0=1, select bank3
  7546     01CD  1703               	bsf	3,6	;RP1=1, select bank3
  7547     01CE  0819               	movf	(main@integerPart+1)^(0+384),w
  7548     01CF  1283               	bcf	3,5	;RP0=0, select bank0
  7549     01D0  1303               	bcf	3,6	;RP1=0, select bank0
  7550     01D1  00A9               	movwf	___lwdiv@dividend+1
  7551     01D2  1683               	bsf	3,5	;RP0=1, select bank3
  7552     01D3  1703               	bsf	3,6	;RP1=1, select bank3
  7553     01D4  0818               	movf	main@integerPart^(0+384),w
  7554     01D5  1283               	bcf	3,5	;RP0=0, select bank0
  7555     01D6  1303               	bcf	3,6	;RP1=0, select bank0
  7556     01D7  00A8               	movwf	___lwdiv@dividend
  7557     01D8  160A  118A  247C  120A  118A  	fcall	___lwdiv
  7558     01DD  1283               	bcf	3,5	;RP0=0, select bank0
  7559     01DE  1303               	bcf	3,6	;RP1=0, select bank0
  7560     01DF  0827               	movf	?___lwdiv+1,w
  7561     01E0  1683               	bsf	3,5	;RP0=1, select bank3
  7562     01E1  1703               	bsf	3,6	;RP1=1, select bank3
  7563     01E2  0097               	movwf	(main@binler+1)^(0+384)
  7564     01E3  1283               	bcf	3,5	;RP0=0, select bank0
  7565     01E4  1303               	bcf	3,6	;RP1=0, select bank0
  7566     01E5  0826               	movf	?___lwdiv,w
  7567     01E6  1683               	bsf	3,5	;RP0=1, select bank3
  7568     01E7  1703               	bsf	3,6	;RP1=1, select bank3
  7569     01E8  0096               	movwf	main@binler^(0+384)
  7570     01E9                     l4070:
  7571                           
  7572                           ;main.c: 306:     int yuzler = (integerPart-binler*1000)/100;
  7573     01E9  3064               	movlw	100
  7574     01EA  1283               	bcf	3,5	;RP0=0, select bank0
  7575     01EB  1303               	bcf	3,6	;RP1=0, select bank0
  7576     01EC  00A6               	movwf	___lwdiv@divisor
  7577     01ED  3000               	movlw	0
  7578     01EE  00A7               	movwf	___lwdiv@divisor+1
  7579     01EF  1683               	bsf	3,5	;RP0=1, select bank3
  7580     01F0  1703               	bsf	3,6	;RP1=1, select bank3
  7581     01F1  0817               	movf	(main@binler+1)^(0+384),w
  7582     01F2  1283               	bcf	3,5	;RP0=0, select bank0
  7583     01F3  1303               	bcf	3,6	;RP1=0, select bank0
  7584     01F4  00A1               	movwf	___wmul@multiplier+1
  7585     01F5  1683               	bsf	3,5	;RP0=1, select bank3
  7586     01F6  1703               	bsf	3,6	;RP1=1, select bank3
  7587     01F7  0816               	movf	main@binler^(0+384),w
  7588     01F8  1283               	bcf	3,5	;RP0=0, select bank0
  7589     01F9  1303               	bcf	3,6	;RP1=0, select bank0
  7590     01FA  00A0               	movwf	___wmul@multiplier
  7591     01FB  3018               	movlw	24
  7592     01FC  00A2               	movwf	___wmul@multiplicand
  7593     01FD  30FC               	movlw	252
  7594     01FE  00A3               	movwf	___wmul@multiplicand+1
  7595     01FF  160A  118A  2354  120A  118A  	fcall	___wmul
  7596     0204  1683               	bsf	3,5	;RP0=1, select bank3
  7597     0205  1703               	bsf	3,6	;RP1=1, select bank3
  7598     0206  0818               	movf	main@integerPart^(0+384),w
  7599     0207  1283               	bcf	3,5	;RP0=0, select bank0
  7600     0208  1303               	bcf	3,6	;RP1=0, select bank0
  7601     0209  0720               	addwf	?___wmul,w
  7602     020A  00A8               	movwf	___lwdiv@dividend
  7603     020B  1683               	bsf	3,5	;RP0=1, select bank3
  7604     020C  1703               	bsf	3,6	;RP1=1, select bank3
  7605     020D  0819               	movf	(main@integerPart+1)^(0+384),w
  7606     020E  1803               	skipnc
  7607     020F  0A19               	incf	(main@integerPart+1)^(0+384),w
  7608     0210  1283               	bcf	3,5	;RP0=0, select bank0
  7609     0211  1303               	bcf	3,6	;RP1=0, select bank0
  7610     0212  0721               	addwf	?___wmul+1,w
  7611     0213  00A9               	movwf	___lwdiv@dividend+1
  7612     0214  160A  118A  247C  120A  118A  	fcall	___lwdiv
  7613     0219  1283               	bcf	3,5	;RP0=0, select bank0
  7614     021A  1303               	bcf	3,6	;RP1=0, select bank0
  7615     021B  0827               	movf	?___lwdiv+1,w
  7616     021C  1683               	bsf	3,5	;RP0=1, select bank1
  7617     021D  1303               	bcf	3,6	;RP1=0, select bank1
  7618     021E  00E9               	movwf	(main@yuzler+1)^(0+128)
  7619     021F  1283               	bcf	3,5	;RP0=0, select bank0
  7620     0220  1303               	bcf	3,6	;RP1=0, select bank0
  7621     0221  0826               	movf	?___lwdiv,w
  7622     0222  1683               	bsf	3,5	;RP0=1, select bank1
  7623     0223  1303               	bcf	3,6	;RP1=0, select bank1
  7624     0224  00E8               	movwf	main@yuzler^(0+128)
  7625     0225                     l4072:
  7626                           
  7627                           ;main.c: 307:     int onlar = (integerPart-binler*1000-yuzler*100)/10;
  7628     0225  300A               	movlw	10
  7629     0226  1283               	bcf	3,5	;RP0=0, select bank0
  7630     0227  1303               	bcf	3,6	;RP1=0, select bank0
  7631     0228  00A6               	movwf	___lwdiv@divisor
  7632     0229  3000               	movlw	0
  7633     022A  00A7               	movwf	___lwdiv@divisor+1
  7634     022B  1683               	bsf	3,5	;RP0=1, select bank3
  7635     022C  1703               	bsf	3,6	;RP1=1, select bank3
  7636     022D  0817               	movf	(main@binler+1)^(0+384),w
  7637     022E  1283               	bcf	3,5	;RP0=0, select bank0
  7638     022F  1303               	bcf	3,6	;RP1=0, select bank0
  7639     0230  00A1               	movwf	___wmul@multiplier+1
  7640     0231  1683               	bsf	3,5	;RP0=1, select bank3
  7641     0232  1703               	bsf	3,6	;RP1=1, select bank3
  7642     0233  0816               	movf	main@binler^(0+384),w
  7643     0234  1283               	bcf	3,5	;RP0=0, select bank0
  7644     0235  1303               	bcf	3,6	;RP1=0, select bank0
  7645     0236  00A0               	movwf	___wmul@multiplier
  7646     0237  3018               	movlw	24
  7647     0238  00A2               	movwf	___wmul@multiplicand
  7648     0239  30FC               	movlw	252
  7649     023A  00A3               	movwf	___wmul@multiplicand+1
  7650     023B  160A  118A  2354  120A  118A  	fcall	___wmul
  7651     0240  1283               	bcf	3,5	;RP0=0, select bank0
  7652     0241  1303               	bcf	3,6	;RP1=0, select bank0
  7653     0242  0820               	movf	?___wmul,w
  7654     0243  00D4               	movwf	??_main
  7655     0244  0821               	movf	?___wmul+1,w
  7656     0245  00D5               	movwf	??_main+1
  7657     0246  1683               	bsf	3,5	;RP0=1, select bank1
  7658     0247  1303               	bcf	3,6	;RP1=0, select bank1
  7659     0248  0869               	movf	(main@yuzler+1)^(0+128),w
  7660     0249  1283               	bcf	3,5	;RP0=0, select bank0
  7661     024A  1303               	bcf	3,6	;RP1=0, select bank0
  7662     024B  00A1               	movwf	___wmul@multiplier+1
  7663     024C  1683               	bsf	3,5	;RP0=1, select bank1
  7664     024D  1303               	bcf	3,6	;RP1=0, select bank1
  7665     024E  0868               	movf	main@yuzler^(0+128),w
  7666     024F  1283               	bcf	3,5	;RP0=0, select bank0
  7667     0250  1303               	bcf	3,6	;RP1=0, select bank0
  7668     0251  00A0               	movwf	___wmul@multiplier
  7669     0252  309C               	movlw	156
  7670     0253  00A2               	movwf	___wmul@multiplicand
  7671     0254  30FF               	movlw	255
  7672     0255  00A3               	movwf	___wmul@multiplicand+1
  7673     0256  160A  118A  2354  120A  118A  	fcall	___wmul
  7674     025B  1283               	bcf	3,5	;RP0=0, select bank0
  7675     025C  1303               	bcf	3,6	;RP1=0, select bank0
  7676     025D  0820               	movf	?___wmul,w
  7677     025E  0754               	addwf	??_main,w
  7678     025F  00D6               	movwf	??_main+2
  7679     0260  0821               	movf	?___wmul+1,w
  7680     0261  1803               	skipnc
  7681     0262  0A21               	incf	?___wmul+1,w
  7682     0263  0755               	addwf	??_main+1,w
  7683     0264  00D7               	movwf	??_main+3
  7684     0265  1683               	bsf	3,5	;RP0=1, select bank3
  7685     0266  1703               	bsf	3,6	;RP1=1, select bank3
  7686     0267  0818               	movf	main@integerPart^(0+384),w
  7687     0268  1283               	bcf	3,5	;RP0=0, select bank0
  7688     0269  1303               	bcf	3,6	;RP1=0, select bank0
  7689     026A  0756               	addwf	??_main+2,w
  7690     026B  00A8               	movwf	___lwdiv@dividend
  7691     026C  1683               	bsf	3,5	;RP0=1, select bank3
  7692     026D  1703               	bsf	3,6	;RP1=1, select bank3
  7693     026E  0819               	movf	(main@integerPart+1)^(0+384),w
  7694     026F  1803               	skipnc
  7695     0270  0A19               	incf	(main@integerPart+1)^(0+384),w
  7696     0271  1283               	bcf	3,5	;RP0=0, select bank0
  7697     0272  1303               	bcf	3,6	;RP1=0, select bank0
  7698     0273  0757               	addwf	??_main+3,w
  7699     0274  00A9               	movwf	___lwdiv@dividend+1
  7700     0275  160A  118A  247C  120A  118A  	fcall	___lwdiv
  7701     027A  1283               	bcf	3,5	;RP0=0, select bank0
  7702     027B  1303               	bcf	3,6	;RP1=0, select bank0
  7703     027C  0827               	movf	?___lwdiv+1,w
  7704     027D  1683               	bsf	3,5	;RP0=1, select bank1
  7705     027E  1303               	bcf	3,6	;RP1=0, select bank1
  7706     027F  00DB               	movwf	(main@onlar+1)^(0+128)
  7707     0280  1283               	bcf	3,5	;RP0=0, select bank0
  7708     0281  1303               	bcf	3,6	;RP1=0, select bank0
  7709     0282  0826               	movf	?___lwdiv,w
  7710     0283  1683               	bsf	3,5	;RP0=1, select bank1
  7711     0284  1303               	bcf	3,6	;RP1=0, select bank1
  7712     0285  00DA               	movwf	main@onlar^(0+128)
  7713     0286                     l4074:
  7714                           
  7715                           ;main.c: 308:     int birler = integerPart%10;
  7716     0286  300A               	movlw	10
  7717     0287  1283               	bcf	3,5	;RP0=0, select bank0
  7718     0288  1303               	bcf	3,6	;RP1=0, select bank0
  7719     0289  00AD               	movwf	___lwmod@divisor
  7720     028A  3000               	movlw	0
  7721     028B  00AE               	movwf	___lwmod@divisor+1
  7722     028C  1683               	bsf	3,5	;RP0=1, select bank3
  7723     028D  1703               	bsf	3,6	;RP1=1, select bank3
  7724     028E  0819               	movf	(main@integerPart+1)^(0+384),w
  7725     028F  1283               	bcf	3,5	;RP0=0, select bank0
  7726     0290  1303               	bcf	3,6	;RP1=0, select bank0
  7727     0291  00B0               	movwf	___lwmod@dividend+1
  7728     0292  1683               	bsf	3,5	;RP0=1, select bank3
  7729     0293  1703               	bsf	3,6	;RP1=1, select bank3
  7730     0294  0818               	movf	main@integerPart^(0+384),w
  7731     0295  1283               	bcf	3,5	;RP0=0, select bank0
  7732     0296  1303               	bcf	3,6	;RP1=0, select bank0
  7733     0297  00AF               	movwf	___lwmod@dividend
  7734     0298  160A  118A  23B4  120A  118A  	fcall	___lwmod
  7735     029D  1283               	bcf	3,5	;RP0=0, select bank0
  7736     029E  1303               	bcf	3,6	;RP1=0, select bank0
  7737     029F  082E               	movf	?___lwmod+1,w
  7738     02A0  1683               	bsf	3,5	;RP0=1, select bank1
  7739     02A1  1303               	bcf	3,6	;RP1=0, select bank1
  7740     02A2  00DD               	movwf	(main@birler+1)^(0+128)
  7741     02A3  1283               	bcf	3,5	;RP0=0, select bank0
  7742     02A4  1303               	bcf	3,6	;RP1=0, select bank0
  7743     02A5  082D               	movf	?___lwmod,w
  7744     02A6  1683               	bsf	3,5	;RP0=1, select bank1
  7745     02A7  1303               	bcf	3,6	;RP1=0, select bank1
  7746     02A8  00DC               	movwf	main@birler^(0+128)
  7747     02A9                     l4076:
  7748                           
  7749                           ;main.c: 314:         ADCON0bits.CHS = 0b0001;
  7750     02A9  1283               	bcf	3,5	;RP0=0, select bank0
  7751     02AA  1303               	bcf	3,6	;RP1=0, select bank0
  7752     02AB  081F               	movf	31,w	;volatile
  7753     02AC  39C7               	andlw	-57
  7754     02AD  3808               	iorlw	8
  7755     02AE  009F               	movwf	31	;volatile
  7756     02AF                     l4078:
  7757                           
  7758                           ;main.c: 315:         _delay((unsigned long)((50)*(4000000/4000000.0)));
  7759     02AF  300F               	movlw	15
  7760     02B0  1283               	bcf	3,5	;RP0=0, select bank0
  7761     02B1  1303               	bcf	3,6	;RP1=0, select bank0
  7762     02B2  00D4               	movwf	??_main
  7763     02B3                     u5887:
  7764     02B3  0BD4               	decfsz	??_main,f
  7765     02B4  2AB3               	goto	u5887
  7766     02B5  2AB6               	nop2
  7767     02B6                     l4080:
  7768                           
  7769                           ;main.c: 316:         ADCON0bits.GO = 1;
  7770     02B6  1283               	bcf	3,5	;RP0=0, select bank0
  7771     02B7  1303               	bcf	3,6	;RP1=0, select bank0
  7772     02B8  151F               	bsf	31,2	;volatile
  7773     02B9                     l196:	
  7774                           ;main.c: 317:         while (ADCON0bits.GO);
  7775                           
  7776     02B9  191F               	btfsc	31,2	;volatile
  7777     02BA  2ABC               	goto	u5561
  7778     02BB  2ABD               	goto	u5560
  7779     02BC                     u5561:
  7780     02BC  2AB9               	goto	l196
  7781     02BD                     u5560:
  7782     02BD                     l4082:
  7783                           
  7784                           ;main.c: 318:         adcValue1 = (ADRESH << 8) | ADRESL;
  7785     02BD  1683               	bsf	3,5	;RP0=1, select bank1
  7786     02BE  1303               	bcf	3,6	;RP1=0, select bank1
  7787     02BF  081E               	movf	30,w	;volatile
  7788     02C0  1283               	bcf	3,5	;RP0=0, select bank0
  7789     02C1  1303               	bcf	3,6	;RP1=0, select bank0
  7790     02C2  00D4               	movwf	??_main
  7791     02C3  01D5               	clrf	??_main+1
  7792     02C4  081E               	movf	30,w	;volatile
  7793     02C5  00D6               	movwf	??_main+2
  7794     02C6  01D7               	clrf	??_main+3
  7795     02C7  0856               	movf	??_main+2,w
  7796     02C8  00D7               	movwf	??_main+3
  7797     02C9  01D6               	clrf	??_main+2
  7798     02CA  0854               	movf	??_main,w
  7799     02CB  0456               	iorwf	??_main+2,w
  7800     02CC  00A0               	movwf	___xxtofl@val
  7801     02CD  0855               	movf	??_main+1,w
  7802     02CE  0457               	iorwf	??_main+3,w
  7803     02CF  00A1               	movwf	___xxtofl@val+1
  7804     02D0  01A2               	clrf	___xxtofl@val+2
  7805     02D1  1BA1               	btfsc	___xxtofl@val+1,7
  7806     02D2  03A2               	decf	___xxtofl@val+2,f
  7807     02D3  0822               	movf	___xxtofl@val+2,w
  7808     02D4  00A3               	movwf	___xxtofl@val+3
  7809     02D5  3001               	movlw	1
  7810     02D6  120A  158A  202F  120A  118A  	fcall	___xxtofl
  7811     02DB  1283               	bcf	3,5	;RP0=0, select bank0
  7812     02DC  1303               	bcf	3,6	;RP1=0, select bank0
  7813     02DD  0823               	movf	?___xxtofl+3,w
  7814     02DE  1683               	bsf	3,5	;RP0=1, select bank1
  7815     02DF  1303               	bcf	3,6	;RP1=0, select bank1
  7816     02E0  00E7               	movwf	(main@adcValue1+3)^(0+128)
  7817     02E1  1283               	bcf	3,5	;RP0=0, select bank0
  7818     02E2  1303               	bcf	3,6	;RP1=0, select bank0
  7819     02E3  0822               	movf	?___xxtofl+2,w
  7820     02E4  1683               	bsf	3,5	;RP0=1, select bank1
  7821     02E5  1303               	bcf	3,6	;RP1=0, select bank1
  7822     02E6  00E6               	movwf	(main@adcValue1+2)^(0+128)
  7823     02E7  1283               	bcf	3,5	;RP0=0, select bank0
  7824     02E8  1303               	bcf	3,6	;RP1=0, select bank0
  7825     02E9  0821               	movf	?___xxtofl+1,w
  7826     02EA  1683               	bsf	3,5	;RP0=1, select bank1
  7827     02EB  1303               	bcf	3,6	;RP1=0, select bank1
  7828     02EC  00E5               	movwf	(main@adcValue1+1)^(0+128)
  7829     02ED  1283               	bcf	3,5	;RP0=0, select bank0
  7830     02EE  1303               	bcf	3,6	;RP1=0, select bank0
  7831     02EF  0820               	movf	?___xxtofl,w
  7832     02F0  1683               	bsf	3,5	;RP0=1, select bank1
  7833     02F1  1303               	bcf	3,6	;RP1=0, select bank1
  7834     02F2  00E4               	movwf	main@adcValue1^(0+128)
  7835                           
  7836                           ;main.c: 319:         unsigned int displayValue = (int)adcValue1 >> 1;
  7837     02F3  0867               	movf	(main@adcValue1+3)^(0+128),w
  7838     02F4  1283               	bcf	3,5	;RP0=0, select bank0
  7839     02F5  1303               	bcf	3,6	;RP1=0, select bank0
  7840     02F6  00A3               	movwf	___fltol@f1+3
  7841     02F7  1683               	bsf	3,5	;RP0=1, select bank1
  7842     02F8  1303               	bcf	3,6	;RP1=0, select bank1
  7843     02F9  0866               	movf	(main@adcValue1+2)^(0+128),w
  7844     02FA  1283               	bcf	3,5	;RP0=0, select bank0
  7845     02FB  1303               	bcf	3,6	;RP1=0, select bank0
  7846     02FC  00A2               	movwf	___fltol@f1+2
  7847     02FD  1683               	bsf	3,5	;RP0=1, select bank1
  7848     02FE  1303               	bcf	3,6	;RP1=0, select bank1
  7849     02FF  0865               	movf	(main@adcValue1+1)^(0+128),w
  7850     0300  1283               	bcf	3,5	;RP0=0, select bank0
  7851     0301  1303               	bcf	3,6	;RP1=0, select bank0
  7852     0302  00A1               	movwf	___fltol@f1+1
  7853     0303  1683               	bsf	3,5	;RP0=1, select bank1
  7854     0304  1303               	bcf	3,6	;RP1=0, select bank1
  7855     0305  0864               	movf	main@adcValue1^(0+128),w
  7856     0306  1283               	bcf	3,5	;RP0=0, select bank0
  7857     0307  1303               	bcf	3,6	;RP1=0, select bank0
  7858     0308  00A0               	movwf	___fltol@f1
  7859     0309  160A  118A  25B9  120A  118A  	fcall	___fltol
  7860     030E  1283               	bcf	3,5	;RP0=0, select bank0
  7861     030F  1303               	bcf	3,6	;RP1=0, select bank0
  7862     0310  0D21               	rlf	?___fltol+1,w
  7863     0311  0C21               	rrf	?___fltol+1,w
  7864     0312  1683               	bsf	3,5	;RP0=1, select bank3
  7865     0313  1703               	bsf	3,6	;RP1=1, select bank3
  7866     0314  009B               	movwf	(main@displayValue_371+1)^(0+384)
  7867     0315  1283               	bcf	3,5	;RP0=0, select bank0
  7868     0316  1303               	bcf	3,6	;RP1=0, select bank0
  7869     0317  0C20               	rrf	?___fltol,w
  7870     0318  1683               	bsf	3,5	;RP0=1, select bank3
  7871     0319  1703               	bsf	3,6	;RP1=1, select bank3
  7872     031A  009A               	movwf	main@displayValue_371^(0+384)
  7873                           
  7874                           ;main.c: 320:         float gostermeliklcd = adcValue1 / 1024 * 1000;
  7875     031B  3044               	movlw	68
  7876     031C  1283               	bcf	3,5	;RP0=0, select bank0
  7877     031D  1303               	bcf	3,6	;RP1=0, select bank0
  7878     031E  00BD               	movwf	___flmul@b+3
  7879     031F  307A               	movlw	122
  7880     0320  00BC               	movwf	___flmul@b+2
  7881     0321  3000               	movlw	0
  7882     0322  00BB               	movwf	___flmul@b+1
  7883     0323  3000               	movlw	0
  7884     0324  00BA               	movwf	___flmul@b
  7885     0325  3044               	movlw	68
  7886     0326  00A3               	movwf	___fldiv@a+3
  7887     0327  3080               	movlw	128
  7888     0328  00A2               	movwf	___fldiv@a+2
  7889     0329  3000               	movlw	0
  7890     032A  00A1               	movwf	___fldiv@a+1
  7891     032B  3000               	movlw	0
  7892     032C  00A0               	movwf	___fldiv@a
  7893     032D  1683               	bsf	3,5	;RP0=1, select bank1
  7894     032E  1303               	bcf	3,6	;RP1=0, select bank1
  7895     032F  0867               	movf	(main@adcValue1+3)^(0+128),w
  7896     0330  1283               	bcf	3,5	;RP0=0, select bank0
  7897     0331  1303               	bcf	3,6	;RP1=0, select bank0
  7898     0332  00A7               	movwf	___fldiv@b+3
  7899     0333  1683               	bsf	3,5	;RP0=1, select bank1
  7900     0334  1303               	bcf	3,6	;RP1=0, select bank1
  7901     0335  0866               	movf	(main@adcValue1+2)^(0+128),w
  7902     0336  1283               	bcf	3,5	;RP0=0, select bank0
  7903     0337  1303               	bcf	3,6	;RP1=0, select bank0
  7904     0338  00A6               	movwf	___fldiv@b+2
  7905     0339  1683               	bsf	3,5	;RP0=1, select bank1
  7906     033A  1303               	bcf	3,6	;RP1=0, select bank1
  7907     033B  0865               	movf	(main@adcValue1+1)^(0+128),w
  7908     033C  1283               	bcf	3,5	;RP0=0, select bank0
  7909     033D  1303               	bcf	3,6	;RP1=0, select bank0
  7910     033E  00A5               	movwf	___fldiv@b+1
  7911     033F  1683               	bsf	3,5	;RP0=1, select bank1
  7912     0340  1303               	bcf	3,6	;RP1=0, select bank1
  7913     0341  0864               	movf	main@adcValue1^(0+128),w
  7914     0342  1283               	bcf	3,5	;RP0=0, select bank0
  7915     0343  1303               	bcf	3,6	;RP1=0, select bank0
  7916     0344  00A4               	movwf	___fldiv@b
  7917     0345  160A  118A  2631  120A  118A  	fcall	___fldiv
  7918     034A  1283               	bcf	3,5	;RP0=0, select bank0
  7919     034B  1303               	bcf	3,6	;RP1=0, select bank0
  7920     034C  0823               	movf	?___fldiv+3,w
  7921     034D  00C1               	movwf	___flmul@a+3
  7922     034E  0822               	movf	?___fldiv+2,w
  7923     034F  00C0               	movwf	___flmul@a+2
  7924     0350  0821               	movf	?___fldiv+1,w
  7925     0351  00BF               	movwf	___flmul@a+1
  7926     0352  0820               	movf	?___fldiv,w
  7927     0353  00BE               	movwf	___flmul@a
  7928     0354  120A  158A  24BB  120A  118A  	fcall	___flmul
  7929     0359  1283               	bcf	3,5	;RP0=0, select bank0
  7930     035A  1303               	bcf	3,6	;RP1=0, select bank0
  7931     035B  083D               	movf	?___flmul+3,w
  7932     035C  1683               	bsf	3,5	;RP0=1, select bank1
  7933     035D  1303               	bcf	3,6	;RP1=0, select bank1
  7934     035E  00D0               	movwf	(main@gostermeliklcd+3)^(0+128)
  7935     035F  1283               	bcf	3,5	;RP0=0, select bank0
  7936     0360  1303               	bcf	3,6	;RP1=0, select bank0
  7937     0361  083C               	movf	?___flmul+2,w
  7938     0362  1683               	bsf	3,5	;RP0=1, select bank1
  7939     0363  1303               	bcf	3,6	;RP1=0, select bank1
  7940     0364  00CF               	movwf	(main@gostermeliklcd+2)^(0+128)
  7941     0365  1283               	bcf	3,5	;RP0=0, select bank0
  7942     0366  1303               	bcf	3,6	;RP1=0, select bank0
  7943     0367  083B               	movf	?___flmul+1,w
  7944     0368  1683               	bsf	3,5	;RP0=1, select bank1
  7945     0369  1303               	bcf	3,6	;RP1=0, select bank1
  7946     036A  00CE               	movwf	(main@gostermeliklcd+1)^(0+128)
  7947     036B  1283               	bcf	3,5	;RP0=0, select bank0
  7948     036C  1303               	bcf	3,6	;RP1=0, select bank0
  7949     036D  083A               	movf	?___flmul,w
  7950     036E  1683               	bsf	3,5	;RP0=1, select bank1
  7951     036F  1303               	bcf	3,6	;RP1=0, select bank1
  7952     0370  00CD               	movwf	main@gostermeliklcd^(0+128)
  7953     0371                     l4084:
  7954                           
  7955                           ;main.c: 323:     ADCON0bits.CHS = 0b0010;
  7956     0371  1283               	bcf	3,5	;RP0=0, select bank0
  7957     0372  1303               	bcf	3,6	;RP1=0, select bank0
  7958     0373  081F               	movf	31,w	;volatile
  7959     0374  39C7               	andlw	-57
  7960     0375  3810               	iorlw	16
  7961     0376  009F               	movwf	31	;volatile
  7962     0377                     l4086:
  7963                           
  7964                           ;main.c: 324:     ADCON0bits.GO = 1;
  7965     0377  151F               	bsf	31,2	;volatile
  7966     0378                     l199:	
  7967                           ;main.c: 325:     while (ADCON0bits.GO);
  7968                           
  7969     0378  191F               	btfsc	31,2	;volatile
  7970     0379  2B7B               	goto	u5571
  7971     037A  2B7C               	goto	u5570
  7972     037B                     u5571:
  7973     037B  2B78               	goto	l199
  7974     037C                     u5570:
  7975     037C                     l4088:
  7976                           
  7977                           ;main.c: 326:     adcValue3 = (ADRESH << 8) | ADRESL;
  7978     037C  081E               	movf	30,w	;volatile
  7979     037D  1683               	bsf	3,5	;RP0=1, select bank1
  7980     037E  1303               	bcf	3,6	;RP1=0, select bank1
  7981     037F  00D9               	movwf	(main@adcValue3+1)^(0+128)
  7982     0380  081E               	movf	30,w	;volatile
  7983     0381  00D8               	movwf	main@adcValue3^(0+128)
  7984     0382                     l4090:
  7985                           
  7986                           ;main.c: 327:     unsigned int rpmValue = adcValue3 >> 1;
  7987     0382  0859               	movf	(main@adcValue3+1)^(0+128),w
  7988     0383  1283               	bcf	3,5	;RP0=0, select bank0
  7989     0384  1303               	bcf	3,6	;RP1=0, select bank0
  7990     0385  00D5               	movwf	??_main+1
  7991     0386  1683               	bsf	3,5	;RP0=1, select bank1
  7992     0387  1303               	bcf	3,6	;RP1=0, select bank1
  7993     0388  0858               	movf	main@adcValue3^(0+128),w
  7994     0389  1283               	bcf	3,5	;RP0=0, select bank0
  7995     038A  1303               	bcf	3,6	;RP1=0, select bank0
  7996     038B  00D4               	movwf	??_main
  7997     038C  1003               	clrc
  7998     038D  0CD5               	rrf	??_main+1,f
  7999     038E  0CD4               	rrf	??_main,f
  8000     038F  0854               	movf	??_main,w
  8001     0390  00EC               	movwf	main@rpmValue
  8002     0391  0855               	movf	??_main+1,w
  8003     0392  00ED               	movwf	main@rpmValue+1
  8004     0393                     l4092:
  8005                           
  8006                           ;main.c: 330:         Lcd_Set_Cursor(2, 1);
  8007     0393  01A4               	clrf	Lcd_Set_Cursor@b
  8008     0394  0AA4               	incf	Lcd_Set_Cursor@b,f
  8009     0395  3002               	movlw	2
  8010     0396  160A  118A  250A  120A  118A  	fcall	_Lcd_Set_Cursor
  8011     039B                     l4094:
  8012                           
  8013                           ;main.c: 331:         Lcd_Write_String("FeedRate:");
  8014     039B  30F2               	movlw	low (STR_18| (0+32768))
  8015     039C  1283               	bcf	3,5	;RP0=0, select bank0
  8016     039D  1303               	bcf	3,6	;RP1=0, select bank0
  8017     039E  00A5               	movwf	Lcd_Write_String@a
  8018     039F  3098               	movlw	high (STR_18| (0+32768))
  8019     03A0  00A6               	movwf	Lcd_Write_String@a+1
  8020     03A1  160A  118A  23F0  120A  118A  	fcall	_Lcd_Write_String
  8021     03A6                     l4096:
  8022                           
  8023                           ;main.c: 332:         char adcString1[4];;main.c: 333:         sprintf(adcString1, "%003
      +                          u", (int)gostermeliklcd);
  8024     03A6  3032               	movlw	low (STR_19| (0+32768))
  8025     03A7  1283               	bcf	3,5	;RP0=0, select bank0
  8026     03A8  1303               	bcf	3,6	;RP1=0, select bank0
  8027     03A9  00B2               	movwf	sprintf@f
  8028     03AA  3099               	movlw	high (STR_19| (0+32768))
  8029     03AB  00B3               	movwf	sprintf@f+1
  8030     03AC  1683               	bsf	3,5	;RP0=1, select bank1
  8031     03AD  1303               	bcf	3,6	;RP1=0, select bank1
  8032     03AE  0850               	movf	(main@gostermeliklcd+3)^(0+128),w
  8033     03AF  1283               	bcf	3,5	;RP0=0, select bank0
  8034     03B0  1303               	bcf	3,6	;RP1=0, select bank0
  8035     03B1  00A3               	movwf	___fltol@f1+3
  8036     03B2  1683               	bsf	3,5	;RP0=1, select bank1
  8037     03B3  1303               	bcf	3,6	;RP1=0, select bank1
  8038     03B4  084F               	movf	(main@gostermeliklcd+2)^(0+128),w
  8039     03B5  1283               	bcf	3,5	;RP0=0, select bank0
  8040     03B6  1303               	bcf	3,6	;RP1=0, select bank0
  8041     03B7  00A2               	movwf	___fltol@f1+2
  8042     03B8  1683               	bsf	3,5	;RP0=1, select bank1
  8043     03B9  1303               	bcf	3,6	;RP1=0, select bank1
  8044     03BA  084E               	movf	(main@gostermeliklcd+1)^(0+128),w
  8045     03BB  1283               	bcf	3,5	;RP0=0, select bank0
  8046     03BC  1303               	bcf	3,6	;RP1=0, select bank0
  8047     03BD  00A1               	movwf	___fltol@f1+1
  8048     03BE  1683               	bsf	3,5	;RP0=1, select bank1
  8049     03BF  1303               	bcf	3,6	;RP1=0, select bank1
  8050     03C0  084D               	movf	main@gostermeliklcd^(0+128),w
  8051     03C1  1283               	bcf	3,5	;RP0=0, select bank0
  8052     03C2  1303               	bcf	3,6	;RP1=0, select bank0
  8053     03C3  00A0               	movwf	___fltol@f1
  8054     03C4  160A  118A  25B9  120A  118A  	fcall	___fltol
  8055     03C9  1283               	bcf	3,5	;RP0=0, select bank0
  8056     03CA  1303               	bcf	3,6	;RP1=0, select bank0
  8057     03CB  0821               	movf	?___fltol+1,w
  8058     03CC  00B5               	movwf	?_sprintf+3
  8059     03CD  0820               	movf	?___fltol,w
  8060     03CE  00B4               	movwf	?_sprintf+2
  8061     03CF  30E0               	movlw	(low (main@adcString1| 0))& (0+255)
  8062     03D0  120A  158A  22C4  120A  118A  	fcall	_sprintf
  8063     03D5                     l4098:
  8064                           
  8065                           ;main.c: 334:         Lcd_Set_Cursor(2, 10);
  8066     03D5  300A               	movlw	10
  8067     03D6  1283               	bcf	3,5	;RP0=0, select bank0
  8068     03D7  1303               	bcf	3,6	;RP1=0, select bank0
  8069     03D8  00A4               	movwf	Lcd_Set_Cursor@b
  8070     03D9  3002               	movlw	2
  8071     03DA  160A  118A  250A  120A  118A  	fcall	_Lcd_Set_Cursor
  8072     03DF                     l4100:
  8073                           
  8074                           ;main.c: 335:         Lcd_Write_String(adcString1);
  8075     03DF  30E0               	movlw	(low (main@adcString1| 0))& (0+255)
  8076     03E0  1283               	bcf	3,5	;RP0=0, select bank0
  8077     03E1  1303               	bcf	3,6	;RP1=0, select bank0
  8078     03E2  00A5               	movwf	Lcd_Write_String@a
  8079     03E3  3000               	movlw	0
  8080     03E4  00A6               	movwf	Lcd_Write_String@a+1
  8081     03E5  160A  118A  23F0  120A  118A  	fcall	_Lcd_Write_String
  8082     03EA                     l4102:
  8083                           
  8084                           ;main.c: 338:         Lcd_Set_Cursor(1, 1);
  8085     03EA  1283               	bcf	3,5	;RP0=0, select bank0
  8086     03EB  1303               	bcf	3,6	;RP1=0, select bank0
  8087     03EC  01A4               	clrf	Lcd_Set_Cursor@b
  8088     03ED  0AA4               	incf	Lcd_Set_Cursor@b,f
  8089     03EE  3001               	movlw	1
  8090     03EF  160A  118A  250A  120A  118A  	fcall	_Lcd_Set_Cursor
  8091     03F4                     l4104:
  8092                           
  8093                           ;main.c: 339:         Lcd_Write_String("RPM:");
  8094     03F4  303D               	movlw	low (STR_20| (0+32768))
  8095     03F5  1283               	bcf	3,5	;RP0=0, select bank0
  8096     03F6  1303               	bcf	3,6	;RP1=0, select bank0
  8097     03F7  00A5               	movwf	Lcd_Write_String@a
  8098     03F8  3099               	movlw	high (STR_20| (0+32768))
  8099     03F9  00A6               	movwf	Lcd_Write_String@a+1
  8100     03FA  160A  118A  23F0  120A  118A  	fcall	_Lcd_Write_String
  8101     03FF                     l4106:
  8102                           
  8103                           ;main.c: 340:         char rpmString[5];;main.c: 341: sprintf(rpmString, "%u%u%u.%u", bi
      +                          nler,yuzler,onlar,birler);
  8104     03FF  3010               	movlw	low (STR_21| (0+32768))
  8105     0400  1283               	bcf	3,5	;RP0=0, select bank0
  8106     0401  1303               	bcf	3,6	;RP1=0, select bank0
  8107     0402  00B2               	movwf	sprintf@f
  8108     0403  3099               	movlw	high (STR_21| (0+32768))
  8109     0404  00B3               	movwf	sprintf@f+1
  8110     0405  1683               	bsf	3,5	;RP0=1, select bank3
  8111     0406  1703               	bsf	3,6	;RP1=1, select bank3
  8112     0407  0817               	movf	(main@binler+1)^(0+384),w
  8113     0408  1283               	bcf	3,5	;RP0=0, select bank0
  8114     0409  1303               	bcf	3,6	;RP1=0, select bank0
  8115     040A  00B5               	movwf	?_sprintf+3
  8116     040B  1683               	bsf	3,5	;RP0=1, select bank3
  8117     040C  1703               	bsf	3,6	;RP1=1, select bank3
  8118     040D  0816               	movf	main@binler^(0+384),w
  8119     040E  1283               	bcf	3,5	;RP0=0, select bank0
  8120     040F  1303               	bcf	3,6	;RP1=0, select bank0
  8121     0410  00B4               	movwf	?_sprintf+2
  8122     0411  1683               	bsf	3,5	;RP0=1, select bank1
  8123     0412  1303               	bcf	3,6	;RP1=0, select bank1
  8124     0413  0869               	movf	(main@yuzler+1)^(0+128),w
  8125     0414  1283               	bcf	3,5	;RP0=0, select bank0
  8126     0415  1303               	bcf	3,6	;RP1=0, select bank0
  8127     0416  00B7               	movwf	?_sprintf+5
  8128     0417  1683               	bsf	3,5	;RP0=1, select bank1
  8129     0418  1303               	bcf	3,6	;RP1=0, select bank1
  8130     0419  0868               	movf	main@yuzler^(0+128),w
  8131     041A  1283               	bcf	3,5	;RP0=0, select bank0
  8132     041B  1303               	bcf	3,6	;RP1=0, select bank0
  8133     041C  00B6               	movwf	?_sprintf+4
  8134     041D  1683               	bsf	3,5	;RP0=1, select bank1
  8135     041E  1303               	bcf	3,6	;RP1=0, select bank1
  8136     041F  085B               	movf	(main@onlar+1)^(0+128),w
  8137     0420  1283               	bcf	3,5	;RP0=0, select bank0
  8138     0421  1303               	bcf	3,6	;RP1=0, select bank0
  8139     0422  00B9               	movwf	?_sprintf+7
  8140     0423  1683               	bsf	3,5	;RP0=1, select bank1
  8141     0424  1303               	bcf	3,6	;RP1=0, select bank1
  8142     0425  085A               	movf	main@onlar^(0+128),w
  8143     0426  1283               	bcf	3,5	;RP0=0, select bank0
  8144     0427  1303               	bcf	3,6	;RP1=0, select bank0
  8145     0428  00B8               	movwf	?_sprintf+6
  8146     0429  1683               	bsf	3,5	;RP0=1, select bank1
  8147     042A  1303               	bcf	3,6	;RP1=0, select bank1
  8148     042B  085D               	movf	(main@birler+1)^(0+128),w
  8149     042C  1283               	bcf	3,5	;RP0=0, select bank0
  8150     042D  1303               	bcf	3,6	;RP1=0, select bank0
  8151     042E  00BB               	movwf	?_sprintf+9
  8152     042F  1683               	bsf	3,5	;RP0=1, select bank1
  8153     0430  1303               	bcf	3,6	;RP1=0, select bank1
  8154     0431  085C               	movf	main@birler^(0+128),w
  8155     0432  1283               	bcf	3,5	;RP0=0, select bank0
  8156     0433  1303               	bcf	3,6	;RP1=0, select bank0
  8157     0434  00BA               	movwf	?_sprintf+8
  8158     0435  30D1               	movlw	(low (main@rpmString| 0))& (0+255)
  8159     0436  120A  158A  22C4  120A  118A  	fcall	_sprintf
  8160     043B                     l4108:
  8161                           
  8162                           ;main.c: 342: Lcd_Set_Cursor(1, 5);
  8163     043B  3005               	movlw	5
  8164     043C  1283               	bcf	3,5	;RP0=0, select bank0
  8165     043D  1303               	bcf	3,6	;RP1=0, select bank0
  8166     043E  00A4               	movwf	Lcd_Set_Cursor@b
  8167     043F  3001               	movlw	1
  8168     0440  160A  118A  250A  120A  118A  	fcall	_Lcd_Set_Cursor
  8169     0445                     l4110:
  8170                           
  8171                           ;main.c: 343: Lcd_Write_String(rpmString);
  8172     0445  30D1               	movlw	(low (main@rpmString| 0))& (0+255)
  8173     0446  1283               	bcf	3,5	;RP0=0, select bank0
  8174     0447  1303               	bcf	3,6	;RP1=0, select bank0
  8175     0448  00A5               	movwf	Lcd_Write_String@a
  8176     0449  3000               	movlw	0
  8177     044A  00A6               	movwf	Lcd_Write_String@a+1
  8178     044B  160A  118A  23F0  120A  118A  	fcall	_Lcd_Write_String
  8179     0450                     l4112:
  8180                           
  8181                           ;main.c: 350:  if (RC1 == 1 && (RE0==1 || RE2==1))
  8182     0450  1283               	bcf	3,5	;RP0=0, select bank0
  8183     0451  1303               	bcf	3,6	;RP1=0, select bank0
  8184     0452  1C87               	btfss	7,1	;volatile
  8185     0453  2C55               	goto	u5581
  8186     0454  2C56               	goto	u5580
  8187     0455                     u5581:
  8188     0455  2C7D               	goto	l202
  8189     0456                     u5580:
  8190     0456                     l4114:
  8191     0456  1809               	btfsc	9,0	;volatile
  8192     0457  2C59               	goto	u5591
  8193     0458  2C5A               	goto	u5590
  8194     0459                     u5591:
  8195     0459  2C5E               	goto	l4118
  8196     045A                     u5590:
  8197     045A                     l4116:
  8198     045A  1D09               	btfss	9,2	;volatile
  8199     045B  2C5D               	goto	u5601
  8200     045C  2C5E               	goto	u5600
  8201     045D                     u5601:
  8202     045D  2C7D               	goto	l202
  8203     045E                     u5600:
  8204     045E                     l4118:
  8205                           
  8206                           ;main.c: 351:         {;main.c: 352:             Lcd_Set_Cursor(2,13 );
  8207     045E  300D               	movlw	13
  8208     045F  00A4               	movwf	Lcd_Set_Cursor@b
  8209     0460  3002               	movlw	2
  8210     0461  160A  118A  250A  120A  118A  	fcall	_Lcd_Set_Cursor
  8211     0466                     l4120:
  8212                           
  8213                           ;main.c: 353:             Lcd_Write_String(" FWD LMT");
  8214     0466  301A               	movlw	low (STR_22| (0+32768))
  8215     0467  1283               	bcf	3,5	;RP0=0, select bank0
  8216     0468  1303               	bcf	3,6	;RP1=0, select bank0
  8217     0469  00A5               	movwf	Lcd_Write_String@a
  8218     046A  3099               	movlw	high (STR_22| (0+32768))
  8219     046B  00A6               	movwf	Lcd_Write_String@a+1
  8220     046C  160A  118A  23F0  120A  118A  	fcall	_Lcd_Write_String
  8221     0471                     l4122:
  8222                           
  8223                           ;main.c: 354:             UART_Write_Text("s0\r\n");
  8224     0471  3038               	movlw	low (STR_23| (0+32768))
  8225     0472  1283               	bcf	3,5	;RP0=0, select bank0
  8226     0473  1303               	bcf	3,6	;RP1=0, select bank0
  8227     0474  00A1               	movwf	UART_Write_Text@text
  8228     0475  3099               	movlw	high (STR_23| (0+32768))
  8229     0476  00A2               	movwf	UART_Write_Text@text+1
  8230     0477  160A  118A  2436  120A  118A  	fcall	_UART_Write_Text
  8231                           
  8232                           ;main.c: 355:         }
  8233     047C  2E26               	goto	l4196
  8234     047D                     l202:	
  8235                           ;main.c: 357:  else if ((RE2 == 1 && RE0==1) || RE2==1 && RE1==0)
  8236                           
  8237     047D  1D09               	btfss	9,2	;volatile
  8238     047E  2C80               	goto	u5611
  8239     047F  2C81               	goto	u5610
  8240     0480                     u5611:
  8241     0480  2C85               	goto	l210
  8242     0481                     u5610:
  8243     0481                     l4124:
  8244     0481  1809               	btfsc	9,0	;volatile
  8245     0482  2C84               	goto	u5621
  8246     0483  2C85               	goto	u5620
  8247     0484                     u5621:
  8248     0484  2C8D               	goto	l4128
  8249     0485                     u5620:
  8250     0485                     l210:
  8251     0485  1D09               	btfss	9,2	;volatile
  8252     0486  2C88               	goto	u5631
  8253     0487  2C89               	goto	u5630
  8254     0488                     u5631:
  8255     0488  2CE3               	goto	l206
  8256     0489                     u5630:
  8257     0489                     l4126:
  8258     0489  1889               	btfsc	9,1	;volatile
  8259     048A  2C8C               	goto	u5641
  8260     048B  2C8D               	goto	u5640
  8261     048C                     u5641:
  8262     048C  2CE3               	goto	l206
  8263     048D                     u5640:
  8264     048D                     l4128:
  8265                           
  8266                           ;main.c: 358:         {;main.c: 359:             Lcd_Set_Cursor(2, 13);
  8267     048D  300D               	movlw	13
  8268     048E  00A4               	movwf	Lcd_Set_Cursor@b
  8269     048F  3002               	movlw	2
  8270     0490  160A  118A  250A  120A  118A  	fcall	_Lcd_Set_Cursor
  8271     0495                     l4130:
  8272                           
  8273                           ;main.c: 360:             Lcd_Write_String(" FWD 1.6K");
  8274     0495  30FC               	movlw	low (STR_24| (0+32768))
  8275     0496  1283               	bcf	3,5	;RP0=0, select bank0
  8276     0497  1303               	bcf	3,6	;RP1=0, select bank0
  8277     0498  00A5               	movwf	Lcd_Write_String@a
  8278     0499  3098               	movlw	high (STR_24| (0+32768))
  8279     049A  00A6               	movwf	Lcd_Write_String@a+1
  8280     049B  160A  118A  23F0  120A  118A  	fcall	_Lcd_Write_String
  8281     04A0                     l4132:
  8282                           
  8283                           ;main.c: 361:               if (displayValue < 800) {
  8284     04A0  3003               	movlw	3
  8285     04A1  1683               	bsf	3,5	;RP0=1, select bank3
  8286     04A2  1703               	bsf	3,6	;RP1=1, select bank3
  8287     04A3  021B               	subwf	(main@displayValue_371+1)^(0+384),w
  8288     04A4  3020               	movlw	32
  8289     04A5  1903               	skipnz
  8290     04A6  021A               	subwf	main@displayValue_371^(0+384),w
  8291     04A7  1803               	skipnc
  8292     04A8  2CAA               	goto	u5651
  8293     04A9  2CAB               	goto	u5650
  8294     04AA                     u5651:
  8295     04AA  2E26               	goto	l4196
  8296     04AB                     u5650:
  8297     04AB                     l4134:
  8298                           
  8299                           ;main.c: 362:             char uartMessage[8];;main.c: 364:             FWDartan+=80;
  8300     04AB  3050               	movlw	80
  8301     04AC  079C               	addwf	main@FWDartan^(0+384),f
  8302     04AD  1803               	skipnc
  8303     04AE  0A9D               	incf	(main@FWDartan+1)^(0+384),f
  8304     04AF  3000               	movlw	0
  8305     04B0  079D               	addwf	(main@FWDartan+1)^(0+384),f
  8306                           
  8307                           ;main.c: 365:             if (FWDartan > 800) {
  8308     04B1  3003               	movlw	3
  8309     04B2  021D               	subwf	(main@FWDartan+1)^(0+384),w
  8310     04B3  3021               	movlw	33
  8311     04B4  1903               	skipnz
  8312     04B5  021C               	subwf	main@FWDartan^(0+384),w
  8313     04B6  1C03               	skipc
  8314     04B7  2CB9               	goto	u5661
  8315     04B8  2CBA               	goto	u5660
  8316     04B9                     u5661:
  8317     04B9  2CBE               	goto	l4138
  8318     04BA                     u5660:
  8319     04BA                     l4136:
  8320                           
  8321                           ;main.c: 366:                 FWDartan = 800;
  8322     04BA  3020               	movlw	32
  8323     04BB  009C               	movwf	main@FWDartan^(0+384)
  8324     04BC  3003               	movlw	3
  8325     04BD  009D               	movwf	(main@FWDartan^(0+384)+1)
  8326     04BE                     l4138:
  8327                           
  8328                           ;main.c: 368:              sprintf(uartMessage, "s%d\r\n", FWDartan);
  8329     04BE  302C               	movlw	low (STR_25| (0+32768))
  8330     04BF  1283               	bcf	3,5	;RP0=0, select bank0
  8331     04C0  1303               	bcf	3,6	;RP1=0, select bank0
  8332     04C1  00B2               	movwf	sprintf@f
  8333     04C2  3099               	movlw	high (STR_25| (0+32768))
  8334     04C3  00B3               	movwf	sprintf@f+1
  8335     04C4  1683               	bsf	3,5	;RP0=1, select bank3
  8336     04C5  1703               	bsf	3,6	;RP1=1, select bank3
  8337     04C6  081D               	movf	(main@FWDartan+1)^(0+384),w
  8338     04C7  1283               	bcf	3,5	;RP0=0, select bank0
  8339     04C8  1303               	bcf	3,6	;RP1=0, select bank0
  8340     04C9  00B5               	movwf	?_sprintf+3
  8341     04CA  1683               	bsf	3,5	;RP0=1, select bank3
  8342     04CB  1703               	bsf	3,6	;RP1=1, select bank3
  8343     04CC  081C               	movf	main@FWDartan^(0+384),w
  8344     04CD  1283               	bcf	3,5	;RP0=0, select bank0
  8345     04CE  1303               	bcf	3,6	;RP1=0, select bank0
  8346     04CF  00B4               	movwf	?_sprintf+2
  8347     04D0  30BD               	movlw	(low (main@uartMessage| 0))& (0+255)
  8348     04D1  120A  158A  22C4  120A  118A  	fcall	_sprintf
  8349     04D6                     l4140:
  8350                           
  8351                           ;main.c: 369:             UART_Write_Text(uartMessage);
  8352     04D6  30BD               	movlw	(low (main@uartMessage| 0))& (0+255)
  8353     04D7  1283               	bcf	3,5	;RP0=0, select bank0
  8354     04D8  1303               	bcf	3,6	;RP1=0, select bank0
  8355     04D9  00A1               	movwf	UART_Write_Text@text
  8356     04DA  3000               	movlw	0
  8357     04DB  00A2               	movwf	UART_Write_Text@text+1
  8358     04DC  160A  118A  2436  120A  118A  	fcall	_UART_Write_Text
  8359     04E1  2E26               	goto	l4196
  8360     04E2                     l211:	
  8361                           ;main.c: 371:         }
  8362                           
  8363                           
  8364                           ;main.c: 372:         }
  8365     04E2  2E26               	goto	l4196
  8366     04E3                     l206:	
  8367                           ;main.c: 374:         else if (RE0 == 1 )
  8368                           
  8369     04E3  1C09               	btfss	9,0	;volatile
  8370     04E4  2CE6               	goto	u5671
  8371     04E5  2CE7               	goto	u5670
  8372     04E6                     u5671:
  8373     04E6  2D1E               	goto	l214
  8374     04E7                     u5670:
  8375     04E7                     l4142:
  8376                           
  8377                           ;main.c: 375:         {;main.c: 376:             Lcd_Set_Cursor(2, 13);
  8378     04E7  300D               	movlw	13
  8379     04E8  00A4               	movwf	Lcd_Set_Cursor@b
  8380     04E9  3002               	movlw	2
  8381     04EA  160A  118A  250A  120A  118A  	fcall	_Lcd_Set_Cursor
  8382     04EF                     l4144:
  8383                           
  8384                           ;main.c: 377:              Lcd_Write_String(" FWD      ");
  8385     04EF  30DC               	movlw	low (STR_26| (0+32768))
  8386     04F0  1283               	bcf	3,5	;RP0=0, select bank0
  8387     04F1  1303               	bcf	3,6	;RP1=0, select bank0
  8388     04F2  00A5               	movwf	Lcd_Write_String@a
  8389     04F3  3098               	movlw	high (STR_26| (0+32768))
  8390     04F4  00A6               	movwf	Lcd_Write_String@a+1
  8391     04F5  160A  118A  23F0  120A  118A  	fcall	_Lcd_Write_String
  8392     04FA                     l4146:
  8393                           
  8394                           ;main.c: 379:                 char combinedText[20];;main.c: 380:         sprintf(combin
      +                          edText, "s%d\r\n", displayValue);
  8395     04FA  302C               	movlw	low (STR_25| (0+32768))
  8396     04FB  1283               	bcf	3,5	;RP0=0, select bank0
  8397     04FC  1303               	bcf	3,6	;RP1=0, select bank0
  8398     04FD  00B2               	movwf	sprintf@f
  8399     04FE  3099               	movlw	high (STR_25| (0+32768))
  8400     04FF  00B3               	movwf	sprintf@f+1
  8401     0500  1683               	bsf	3,5	;RP0=1, select bank3
  8402     0501  1703               	bsf	3,6	;RP1=1, select bank3
  8403     0502  081B               	movf	(main@displayValue_371+1)^(0+384),w
  8404     0503  1283               	bcf	3,5	;RP0=0, select bank0
  8405     0504  1303               	bcf	3,6	;RP1=0, select bank0
  8406     0505  00B5               	movwf	?_sprintf+3
  8407     0506  1683               	bsf	3,5	;RP0=1, select bank3
  8408     0507  1703               	bsf	3,6	;RP1=1, select bank3
  8409     0508  081A               	movf	main@displayValue_371^(0+384),w
  8410     0509  1283               	bcf	3,5	;RP0=0, select bank0
  8411     050A  1303               	bcf	3,6	;RP1=0, select bank0
  8412     050B  00B4               	movwf	?_sprintf+2
  8413     050C  3058               	movlw	(low (main@combinedText| 0))& (0+255)
  8414     050D  120A  158A  22C4  120A  118A  	fcall	_sprintf
  8415     0512                     l4148:
  8416                           
  8417                           ;main.c: 381:         UART_Write_Text(combinedText);
  8418     0512  3058               	movlw	(low (main@combinedText| 0))& (0+255)
  8419     0513  1283               	bcf	3,5	;RP0=0, select bank0
  8420     0514  1303               	bcf	3,6	;RP1=0, select bank0
  8421     0515  00A1               	movwf	UART_Write_Text@text
  8422     0516  3000               	movlw	0
  8423     0517  00A2               	movwf	UART_Write_Text@text+1
  8424     0518  160A  118A  2436  120A  118A  	fcall	_UART_Write_Text
  8425                           
  8426                           ;main.c: 383:         }
  8427     051D  2E26               	goto	l4196
  8428     051E                     l214:	
  8429                           ;main.c: 386:         else if (RC2 == 1 && (RE1==1 || RC0==1))
  8430                           
  8431     051E  1D07               	btfss	7,2	;volatile
  8432     051F  2D21               	goto	u5681
  8433     0520  2D22               	goto	u5680
  8434     0521                     u5681:
  8435     0521  2D49               	goto	l216
  8436     0522                     u5680:
  8437     0522                     l4150:
  8438     0522  1889               	btfsc	9,1	;volatile
  8439     0523  2D25               	goto	u5691
  8440     0524  2D26               	goto	u5690
  8441     0525                     u5691:
  8442     0525  2D2A               	goto	l4154
  8443     0526                     u5690:
  8444     0526                     l4152:
  8445     0526  1C07               	btfss	7,0	;volatile
  8446     0527  2D29               	goto	u5701
  8447     0528  2D2A               	goto	u5700
  8448     0529                     u5701:
  8449     0529  2D49               	goto	l216
  8450     052A                     u5700:
  8451     052A                     l4154:
  8452                           
  8453                           ;main.c: 387:         {;main.c: 389:             Lcd_Set_Cursor(2, 13);
  8454     052A  300D               	movlw	13
  8455     052B  00A4               	movwf	Lcd_Set_Cursor@b
  8456     052C  3002               	movlw	2
  8457     052D  160A  118A  250A  120A  118A  	fcall	_Lcd_Set_Cursor
  8458     0532                     l4156:
  8459                           
  8460                           ;main.c: 390:             Lcd_Write_String(" REW LMT");
  8461     0532  3023               	movlw	low (STR_28| (0+32768))
  8462     0533  1283               	bcf	3,5	;RP0=0, select bank0
  8463     0534  1303               	bcf	3,6	;RP1=0, select bank0
  8464     0535  00A5               	movwf	Lcd_Write_String@a
  8465     0536  3099               	movlw	high (STR_28| (0+32768))
  8466     0537  00A6               	movwf	Lcd_Write_String@a+1
  8467     0538  160A  118A  23F0  120A  118A  	fcall	_Lcd_Write_String
  8468     053D                     l4158:
  8469                           
  8470                           ;main.c: 391:             UART_Write_Text("s0\r\n");
  8471     053D  3038               	movlw	low (STR_23| (0+32768))
  8472     053E  1283               	bcf	3,5	;RP0=0, select bank0
  8473     053F  1303               	bcf	3,6	;RP1=0, select bank0
  8474     0540  00A1               	movwf	UART_Write_Text@text
  8475     0541  3099               	movlw	high (STR_23| (0+32768))
  8476     0542  00A2               	movwf	UART_Write_Text@text+1
  8477     0543  160A  118A  2436  120A  118A  	fcall	_UART_Write_Text
  8478                           
  8479                           ;main.c: 392:         }
  8480     0548  2E26               	goto	l4196
  8481     0549                     l216:	
  8482                           ;main.c: 394:         else if ((RC0 == 1 && RE1==1) || (RC0==1 && RE0==0) )
  8483                           
  8484     0549  1C07               	btfss	7,0	;volatile
  8485     054A  2D4C               	goto	u5711
  8486     054B  2D4D               	goto	u5710
  8487     054C                     u5711:
  8488     054C  2D51               	goto	l224
  8489     054D                     u5710:
  8490     054D                     l4160:
  8491     054D  1889               	btfsc	9,1	;volatile
  8492     054E  2D50               	goto	u5721
  8493     054F  2D51               	goto	u5720
  8494     0550                     u5721:
  8495     0550  2D59               	goto	l4164
  8496     0551                     u5720:
  8497     0551                     l224:
  8498     0551  1C07               	btfss	7,0	;volatile
  8499     0552  2D54               	goto	u5731
  8500     0553  2D55               	goto	u5730
  8501     0554                     u5731:
  8502     0554  2DAE               	goto	l220
  8503     0555                     u5730:
  8504     0555                     l4162:
  8505     0555  1809               	btfsc	9,0	;volatile
  8506     0556  2D58               	goto	u5741
  8507     0557  2D59               	goto	u5740
  8508     0558                     u5741:
  8509     0558  2DAE               	goto	l220
  8510     0559                     u5740:
  8511     0559                     l4164:
  8512                           
  8513                           ;main.c: 395:         {;main.c: 396:         Lcd_Set_Cursor(2, 13);
  8514     0559  300D               	movlw	13
  8515     055A  00A4               	movwf	Lcd_Set_Cursor@b
  8516     055B  3002               	movlw	2
  8517     055C  160A  118A  250A  120A  118A  	fcall	_Lcd_Set_Cursor
  8518     0561                     l4166:
  8519                           
  8520                           ;main.c: 397:         Lcd_Write_String(" REW 1.6K");
  8521     0561  3006               	movlw	low (STR_30| (0+32768))
  8522     0562  1283               	bcf	3,5	;RP0=0, select bank0
  8523     0563  1303               	bcf	3,6	;RP1=0, select bank0
  8524     0564  00A5               	movwf	Lcd_Write_String@a
  8525     0565  3099               	movlw	high (STR_30| (0+32768))
  8526     0566  00A6               	movwf	Lcd_Write_String@a+1
  8527     0567  160A  118A  23F0  120A  118A  	fcall	_Lcd_Write_String
  8528     056C                     l4168:
  8529                           
  8530                           ;main.c: 399:          if (displayValue < -800) {
  8531     056C  30FC               	movlw	252
  8532     056D  1683               	bsf	3,5	;RP0=1, select bank3
  8533     056E  1703               	bsf	3,6	;RP1=1, select bank3
  8534     056F  021B               	subwf	(main@displayValue_371+1)^(0+384),w
  8535     0570  30E0               	movlw	224
  8536     0571  1903               	skipnz
  8537     0572  021A               	subwf	main@displayValue_371^(0+384),w
  8538     0573  1803               	skipnc
  8539     0574  2D76               	goto	u5751
  8540     0575  2D77               	goto	u5750
  8541     0576                     u5751:
  8542     0576  2CE2               	goto	l211
  8543     0577                     u5750:
  8544     0577                     l4170:
  8545                           
  8546                           ;main.c: 400:             char uartMessage[8];;main.c: 401:             FWDartan-=80;
  8547     0577  3050               	movlw	80
  8548     0578  029C               	subwf	main@FWDartan^(0+384),f
  8549     0579  3000               	movlw	0
  8550     057A  1C03               	skipc
  8551     057B  039D               	decf	(main@FWDartan+1)^(0+384),f
  8552     057C  029D               	subwf	(main@FWDartan+1)^(0+384),f
  8553                           
  8554                           ;main.c: 403:             if (FWDartan < -800) {
  8555     057D  30FC               	movlw	252
  8556     057E  021D               	subwf	(main@FWDartan+1)^(0+384),w
  8557     057F  30E0               	movlw	224
  8558     0580  1903               	skipnz
  8559     0581  021C               	subwf	main@FWDartan^(0+384),w
  8560     0582  1803               	skipnc
  8561     0583  2D85               	goto	u5761
  8562     0584  2D86               	goto	u5760
  8563     0585                     u5761:
  8564     0585  2D8A               	goto	l4174
  8565     0586                     u5760:
  8566     0586                     l4172:
  8567                           
  8568                           ;main.c: 404:                 FWDartan = -800;
  8569     0586  30E0               	movlw	224
  8570     0587  009C               	movwf	main@FWDartan^(0+384)
  8571     0588  30FC               	movlw	252
  8572     0589  009D               	movwf	(main@FWDartan^(0+384)+1)
  8573     058A                     l4174:
  8574                           
  8575                           ;main.c: 407:              sprintf(uartMessage, "s%d\r\n", FWDartan);
  8576     058A  302C               	movlw	low (STR_25| (0+32768))
  8577     058B  1283               	bcf	3,5	;RP0=0, select bank0
  8578     058C  1303               	bcf	3,6	;RP1=0, select bank0
  8579     058D  00B2               	movwf	sprintf@f
  8580     058E  3099               	movlw	high (STR_25| (0+32768))
  8581     058F  00B3               	movwf	sprintf@f+1
  8582     0590  1683               	bsf	3,5	;RP0=1, select bank3
  8583     0591  1703               	bsf	3,6	;RP1=1, select bank3
  8584     0592  081D               	movf	(main@FWDartan+1)^(0+384),w
  8585     0593  1283               	bcf	3,5	;RP0=0, select bank0
  8586     0594  1303               	bcf	3,6	;RP1=0, select bank0
  8587     0595  00B5               	movwf	?_sprintf+3
  8588     0596  1683               	bsf	3,5	;RP0=1, select bank3
  8589     0597  1703               	bsf	3,6	;RP1=1, select bank3
  8590     0598  081C               	movf	main@FWDartan^(0+384),w
  8591     0599  1283               	bcf	3,5	;RP0=0, select bank0
  8592     059A  1303               	bcf	3,6	;RP1=0, select bank0
  8593     059B  00B4               	movwf	?_sprintf+2
  8594     059C  30C5               	movlw	(low (main@uartMessage_391| 0))& (0+255)
  8595     059D  120A  158A  22C4  120A  118A  	fcall	_sprintf
  8596     05A2                     l4176:
  8597                           
  8598                           ;main.c: 408:             UART_Write_Text(uartMessage);
  8599     05A2  30C5               	movlw	(low (main@uartMessage_391| 0))& (0+255)
  8600     05A3  1283               	bcf	3,5	;RP0=0, select bank0
  8601     05A4  1303               	bcf	3,6	;RP1=0, select bank0
  8602     05A5  00A1               	movwf	UART_Write_Text@text
  8603     05A6  3000               	movlw	0
  8604     05A7  00A2               	movwf	UART_Write_Text@text+1
  8605     05A8  160A  118A  2436  120A  118A  	fcall	_UART_Write_Text
  8606     05AD  2E26               	goto	l4196
  8607     05AE                     l220:
  8608     05AE  1C89               	btfss	9,1	;volatile
  8609     05AF  2DB1               	goto	u5771
  8610     05B0  2DB2               	goto	u5770
  8611     05B1                     u5771:
  8612     05B1  2E02               	goto	l4188
  8613     05B2                     u5770:
  8614     05B2                     l4178:
  8615                           
  8616                           ;main.c: 415:         Lcd_Set_Cursor(2, 13);
  8617     05B2  300D               	movlw	13
  8618     05B3  00A4               	movwf	Lcd_Set_Cursor@b
  8619     05B4  3002               	movlw	2
  8620     05B5  160A  118A  250A  120A  118A  	fcall	_Lcd_Set_Cursor
  8621     05BA                     l4180:
  8622                           
  8623                           ;main.c: 416:         Lcd_Write_String(" REW        ");
  8624     05BA  30CF               	movlw	low (STR_32| (0+32768))
  8625     05BB  1283               	bcf	3,5	;RP0=0, select bank0
  8626     05BC  1303               	bcf	3,6	;RP1=0, select bank0
  8627     05BD  00A5               	movwf	Lcd_Write_String@a
  8628     05BE  3098               	movlw	high (STR_32| (0+32768))
  8629     05BF  00A6               	movwf	Lcd_Write_String@a+1
  8630     05C0  160A  118A  23F0  120A  118A  	fcall	_Lcd_Write_String
  8631     05C5                     l4182:
  8632                           
  8633                           ;main.c: 418:         int negativeDisplayValue = -displayValue;
  8634     05C5  1683               	bsf	3,5	;RP0=1, select bank3
  8635     05C6  1703               	bsf	3,6	;RP1=1, select bank3
  8636     05C7  091A               	comf	main@displayValue_371^(0+384),w
  8637     05C8  1283               	bcf	3,5	;RP0=0, select bank0
  8638     05C9  1303               	bcf	3,6	;RP1=0, select bank0
  8639     05CA  00D4               	movwf	??_main
  8640     05CB  1683               	bsf	3,5	;RP0=1, select bank3
  8641     05CC  1703               	bsf	3,6	;RP1=1, select bank3
  8642     05CD  091B               	comf	(main@displayValue_371+1)^(0+384),w
  8643     05CE  1283               	bcf	3,5	;RP0=0, select bank0
  8644     05CF  1303               	bcf	3,6	;RP1=0, select bank0
  8645     05D0  00D5               	movwf	??_main+1
  8646     05D1  0AD4               	incf	??_main,f
  8647     05D2  1903               	skipnz
  8648     05D3  0AD5               	incf	??_main+1,f
  8649     05D4  0854               	movf	??_main,w
  8650     05D5  1683               	bsf	3,5	;RP0=1, select bank1
  8651     05D6  1303               	bcf	3,6	;RP1=0, select bank1
  8652     05D7  00DE               	movwf	main@negativeDisplayValue^(0+128)
  8653     05D8  1283               	bcf	3,5	;RP0=0, select bank0
  8654     05D9  1303               	bcf	3,6	;RP1=0, select bank0
  8655     05DA  0855               	movf	??_main+1,w
  8656     05DB  1683               	bsf	3,5	;RP0=1, select bank1
  8657     05DC  1303               	bcf	3,6	;RP1=0, select bank1
  8658     05DD  00DF               	movwf	(main@negativeDisplayValue+1)^(0+128)
  8659     05DE                     l4184:
  8660                           
  8661                           ;main.c: 419:     char combinedText[20];;main.c: 420:     sprintf(combinedText, "s%d\r\n
      +                          ", negativeDisplayValue);
  8662     05DE  302C               	movlw	low (STR_25| (0+32768))
  8663     05DF  1283               	bcf	3,5	;RP0=0, select bank0
  8664     05E0  1303               	bcf	3,6	;RP1=0, select bank0
  8665     05E1  00B2               	movwf	sprintf@f
  8666     05E2  3099               	movlw	high (STR_25| (0+32768))
  8667     05E3  00B3               	movwf	sprintf@f+1
  8668     05E4  1683               	bsf	3,5	;RP0=1, select bank1
  8669     05E5  1303               	bcf	3,6	;RP1=0, select bank1
  8670     05E6  085F               	movf	(main@negativeDisplayValue+1)^(0+128),w
  8671     05E7  1283               	bcf	3,5	;RP0=0, select bank0
  8672     05E8  1303               	bcf	3,6	;RP1=0, select bank0
  8673     05E9  00B5               	movwf	?_sprintf+3
  8674     05EA  1683               	bsf	3,5	;RP0=1, select bank1
  8675     05EB  1303               	bcf	3,6	;RP1=0, select bank1
  8676     05EC  085E               	movf	main@negativeDisplayValue^(0+128),w
  8677     05ED  1283               	bcf	3,5	;RP0=0, select bank0
  8678     05EE  1303               	bcf	3,6	;RP1=0, select bank0
  8679     05EF  00B4               	movwf	?_sprintf+2
  8680     05F0  30A0               	movlw	(low (main@combinedText_395| 0))& (0+255)
  8681     05F1  120A  158A  22C4  120A  118A  	fcall	_sprintf
  8682     05F6                     l4186:
  8683                           
  8684                           ;main.c: 421:     UART_Write_Text(combinedText);
  8685     05F6  30A0               	movlw	(low (main@combinedText_395| 0))& (0+255)
  8686     05F7  1283               	bcf	3,5	;RP0=0, select bank0
  8687     05F8  1303               	bcf	3,6	;RP1=0, select bank0
  8688     05F9  00A1               	movwf	UART_Write_Text@text
  8689     05FA  3000               	movlw	0
  8690     05FB  00A2               	movwf	UART_Write_Text@text+1
  8691     05FC  160A  118A  2436  120A  118A  	fcall	_UART_Write_Text
  8692                           
  8693                           ;main.c: 424:     } else {
  8694     0601  2E26               	goto	l4196
  8695     0602                     l4188:
  8696                           
  8697                           ;main.c: 425:         FWDartan = 0;
  8698     0602  1683               	bsf	3,5	;RP0=1, select bank3
  8699     0603  1703               	bsf	3,6	;RP1=1, select bank3
  8700     0604  019C               	clrf	main@FWDartan^(0+384)
  8701     0605  019D               	clrf	(main@FWDartan+1)^(0+384)
  8702     0606                     l4190:
  8703                           
  8704                           ;main.c: 426:         Lcd_Set_Cursor(2, 13);
  8705     0606  300D               	movlw	13
  8706     0607  1283               	bcf	3,5	;RP0=0, select bank0
  8707     0608  1303               	bcf	3,6	;RP1=0, select bank0
  8708     0609  00A4               	movwf	Lcd_Set_Cursor@b
  8709     060A  3002               	movlw	2
  8710     060B  160A  118A  250A  120A  118A  	fcall	_Lcd_Set_Cursor
  8711     0610                     l4192:
  8712                           
  8713                           ;main.c: 427:         Lcd_Write_String(" STOP        ");
  8714     0610  30B3               	movlw	low (STR_34| (0+32768))
  8715     0611  1283               	bcf	3,5	;RP0=0, select bank0
  8716     0612  1303               	bcf	3,6	;RP1=0, select bank0
  8717     0613  00A5               	movwf	Lcd_Write_String@a
  8718     0614  3098               	movlw	high (STR_34| (0+32768))
  8719     0615  00A6               	movwf	Lcd_Write_String@a+1
  8720     0616  160A  118A  23F0  120A  118A  	fcall	_Lcd_Write_String
  8721     061B                     l4194:
  8722                           
  8723                           ;main.c: 428:         UART_Write_Text("s0\r\n");
  8724     061B  3038               	movlw	low (STR_23| (0+32768))
  8725     061C  1283               	bcf	3,5	;RP0=0, select bank0
  8726     061D  1303               	bcf	3,6	;RP1=0, select bank0
  8727     061E  00A1               	movwf	UART_Write_Text@text
  8728     061F  3099               	movlw	high (STR_23| (0+32768))
  8729     0620  00A2               	movwf	UART_Write_Text@text+1
  8730     0621  160A  118A  2436  120A  118A  	fcall	_UART_Write_Text
  8731     0626                     l4196:
  8732                           
  8733                           ;main.c: 435:         if((RC1==1) &&( RE0==1 || RE2 )){
  8734     0626  1283               	bcf	3,5	;RP0=0, select bank0
  8735     0627  1303               	bcf	3,6	;RP1=0, select bank0
  8736     0628  1C87               	btfss	7,1	;volatile
  8737     0629  2E2B               	goto	u5781
  8738     062A  2E2C               	goto	u5780
  8739     062B                     u5781:
  8740     062B  2E38               	goto	l230
  8741     062C                     u5780:
  8742     062C                     l4198:
  8743     062C  1809               	btfsc	9,0	;volatile
  8744     062D  2E2F               	goto	u5791
  8745     062E  2E30               	goto	u5790
  8746     062F                     u5791:
  8747     062F  2E34               	goto	l232
  8748     0630                     u5790:
  8749     0630                     l4200:
  8750     0630  1D09               	btfss	9,2	;volatile
  8751     0631  2E33               	goto	u5801
  8752     0632  2E34               	goto	u5800
  8753     0633                     u5801:
  8754     0633  2E38               	goto	l230
  8755     0634                     u5800:
  8756     0634                     l232:
  8757                           
  8758                           ;main.c: 437:             RA4=1;
  8759     0634  1283               	bcf	3,5	;RP0=0, select bank0
  8760     0635  1303               	bcf	3,6	;RP1=0, select bank0
  8761     0636  1605               	bsf	5,4	;volatile
  8762                           
  8763                           ;main.c: 438:         }
  8764     0637  2ED9               	goto	l238
  8765     0638                     l230:	
  8766                           ;main.c: 439:         else if(( RC2==1) && (RE1==1 || RC0)){
  8767                           
  8768     0638  1D07               	btfss	7,2	;volatile
  8769     0639  2E3B               	goto	u5811
  8770     063A  2E3C               	goto	u5810
  8771     063B                     u5811:
  8772     063B  2E45               	goto	l234
  8773     063C                     u5810:
  8774     063C                     l4202:
  8775     063C  1889               	btfsc	9,1	;volatile
  8776     063D  2E3F               	goto	u5821
  8777     063E  2E40               	goto	u5820
  8778     063F                     u5821:
  8779     063F  2E34               	goto	l232
  8780     0640                     u5820:
  8781     0640                     l4204:
  8782     0640  1C07               	btfss	7,0	;volatile
  8783     0641  2E43               	goto	u5831
  8784     0642  2E44               	goto	u5830
  8785     0643                     u5831:
  8786     0643  2E45               	goto	l234
  8787     0644                     u5830:
  8788     0644  2E34               	goto	l232
  8789     0645                     l234:	
  8790                           ;main.c: 443:         else {
  8791                           
  8792                           
  8793                           ;main.c: 444:             RA4=0;
  8794     0645  1205               	bcf	5,4	;volatile
  8795     0646  2ED9               	goto	l238
  8796     0647                     l162:	
  8797                           ;main.c: 449: else if( RC3==1) {
  8798                           
  8799     0647  1D87               	btfss	7,3	;volatile
  8800     0648  2E4A               	goto	u5841
  8801     0649  2E4B               	goto	u5840
  8802     064A                     u5841:
  8803     064A  2EA1               	goto	l239
  8804     064B                     u5840:
  8805     064B                     l4206:
  8806                           
  8807                           ;main.c: 454:     Lcd_Set_Cursor(1,1);
  8808     064B  01A4               	clrf	Lcd_Set_Cursor@b
  8809     064C  0AA4               	incf	Lcd_Set_Cursor@b,f
  8810     064D  3001               	movlw	1
  8811     064E  160A  118A  250A  120A  118A  	fcall	_Lcd_Set_Cursor
  8812     0653                     l4208:
  8813                           
  8814                           ;main.c: 455:             Lcd_Write_String("   FEED RATE ERROR       ");
  8815     0653  3037               	movlw	low (STR_36| (0+32768))
  8816     0654  1283               	bcf	3,5	;RP0=0, select bank0
  8817     0655  1303               	bcf	3,6	;RP1=0, select bank0
  8818     0656  00A5               	movwf	Lcd_Write_String@a
  8819     0657  3098               	movlw	high (STR_36| (0+32768))
  8820     0658  00A6               	movwf	Lcd_Write_String@a+1
  8821     0659  160A  118A  23F0  120A  118A  	fcall	_Lcd_Write_String
  8822     065E                     l4210:
  8823                           
  8824                           ;main.c: 456:     Lcd_Set_Cursor(2,1);
  8825     065E  1283               	bcf	3,5	;RP0=0, select bank0
  8826     065F  1303               	bcf	3,6	;RP1=0, select bank0
  8827     0660  01A4               	clrf	Lcd_Set_Cursor@b
  8828     0661  0AA4               	incf	Lcd_Set_Cursor@b,f
  8829     0662  3002               	movlw	2
  8830     0663  160A  118A  250A  120A  118A  	fcall	_Lcd_Set_Cursor
  8831                           
  8832                           ;main.c: 457:             Lcd_Write_String("   ILERLEME HATASI        ");
  8833     0668  301C               	movlw	low (STR_37| (0+32768))
  8834     0669  1283               	bcf	3,5	;RP0=0, select bank0
  8835     066A  1303               	bcf	3,6	;RP1=0, select bank0
  8836     066B  00A5               	movwf	Lcd_Write_String@a
  8837     066C  3098               	movlw	high (STR_37| (0+32768))
  8838     066D  00A6               	movwf	Lcd_Write_String@a+1
  8839     066E  160A  118A  23F0  120A  118A  	fcall	_Lcd_Write_String
  8840                           
  8841                           ;main.c: 458:      UART_Write_Text("s0\r\n");
  8842     0673  3038               	movlw	low (STR_23| (0+32768))
  8843     0674  1283               	bcf	3,5	;RP0=0, select bank0
  8844     0675  1303               	bcf	3,6	;RP1=0, select bank0
  8845     0676  00A1               	movwf	UART_Write_Text@text
  8846     0677  3099               	movlw	high (STR_23| (0+32768))
  8847     0678  00A2               	movwf	UART_Write_Text@text+1
  8848     0679  160A  118A  2436  120A  118A  	fcall	_UART_Write_Text
  8849     067E                     l4212:
  8850                           
  8851                           ;main.c: 459:       RA4=1;
  8852     067E  1283               	bcf	3,5	;RP0=0, select bank0
  8853     067F  1303               	bcf	3,6	;RP1=0, select bank0
  8854     0680  1605               	bsf	5,4	;volatile
  8855     0681                     l4214:
  8856                           
  8857                           ;main.c: 460:       _delay((unsigned long)((1000)*(4000000/4000.0)));
  8858     0681  3006               	movlw	6
  8859     0682  1283               	bcf	3,5	;RP0=0, select bank0
  8860     0683  1303               	bcf	3,6	;RP1=0, select bank0
  8861     0684  00D6               	movwf	??_main+2
  8862     0685  3013               	movlw	19
  8863     0686  00D5               	movwf	??_main+1
  8864     0687  30AD               	movlw	173
  8865     0688  00D4               	movwf	??_main
  8866     0689                     u5897:
  8867     0689  0BD4               	decfsz	??_main,f
  8868     068A  2E89               	goto	u5897
  8869     068B  0BD5               	decfsz	??_main+1,f
  8870     068C  2E89               	goto	u5897
  8871     068D  0BD6               	decfsz	??_main+2,f
  8872     068E  2E89               	goto	u5897
  8873     068F                     l4216:
  8874                           
  8875                           ;main.c: 461:       RA4=0;
  8876     068F  1283               	bcf	3,5	;RP0=0, select bank0
  8877     0690  1303               	bcf	3,6	;RP1=0, select bank0
  8878     0691  1205               	bcf	5,4	;volatile
  8879     0692                     l4218:
  8880                           
  8881                           ;main.c: 462:       _delay((unsigned long)((3000)*(4000000/4000.0)));
  8882     0692  3010               	movlw	16
  8883     0693  1283               	bcf	3,5	;RP0=0, select bank0
  8884     0694  1303               	bcf	3,6	;RP1=0, select bank0
  8885     0695  00D6               	movwf	??_main+2
  8886     0696  3039               	movlw	57
  8887     0697  00D5               	movwf	??_main+1
  8888     0698  300D               	movlw	13
  8889     0699  00D4               	movwf	??_main
  8890     069A                     u5907:
  8891     069A  0BD4               	decfsz	??_main,f
  8892     069B  2E9A               	goto	u5907
  8893     069C  0BD5               	decfsz	??_main+1,f
  8894     069D  2E9A               	goto	u5907
  8895     069E  0BD6               	decfsz	??_main+2,f
  8896     069F  2E9A               	goto	u5907
  8897     06A0  2E34               	goto	l232
  8898     06A1                     l239:	
  8899                           ;main.c: 468:      else if (RD0 == 1 ){
  8900                           
  8901     06A1  1C08               	btfss	8,0	;volatile
  8902     06A2  2EA4               	goto	u5851
  8903     06A3  2EA5               	goto	u5850
  8904     06A4                     u5851:
  8905     06A4  2ED9               	goto	l238
  8906     06A5                     u5850:
  8907     06A5                     l4222:
  8908                           
  8909                           ;main.c: 469:     UART_Write_Text("s0\r\n");
  8910     06A5  3038               	movlw	low (STR_23| (0+32768))
  8911     06A6  00A1               	movwf	UART_Write_Text@text
  8912     06A7  3099               	movlw	high (STR_23| (0+32768))
  8913     06A8  00A2               	movwf	UART_Write_Text@text+1
  8914     06A9  160A  118A  2436  120A  118A  	fcall	_UART_Write_Text
  8915     06AE                     l4224:
  8916                           
  8917                           ;main.c: 470:     Lcd_Set_Cursor(1,1);
  8918     06AE  1283               	bcf	3,5	;RP0=0, select bank0
  8919     06AF  1303               	bcf	3,6	;RP1=0, select bank0
  8920     06B0  01A4               	clrf	Lcd_Set_Cursor@b
  8921     06B1  0AA4               	incf	Lcd_Set_Cursor@b,f
  8922     06B2  3001               	movlw	1
  8923     06B3  160A  118A  250A  120A  118A  	fcall	_Lcd_Set_Cursor
  8924     06B8                     l4226:
  8925                           
  8926                           ;main.c: 471:             Lcd_Write_String("   ROTATION ERROR      ");
  8927     06B8  3069               	movlw	low (STR_40| (0+32768))
  8928     06B9  1283               	bcf	3,5	;RP0=0, select bank0
  8929     06BA  1303               	bcf	3,6	;RP1=0, select bank0
  8930     06BB  00A5               	movwf	Lcd_Write_String@a
  8931     06BC  3098               	movlw	high (STR_40| (0+32768))
  8932     06BD  00A6               	movwf	Lcd_Write_String@a+1
  8933     06BE  160A  118A  23F0  120A  118A  	fcall	_Lcd_Write_String
  8934                           
  8935                           ;main.c: 472:     Lcd_Set_Cursor(2,1);
  8936     06C3  1283               	bcf	3,5	;RP0=0, select bank0
  8937     06C4  1303               	bcf	3,6	;RP1=0, select bank0
  8938     06C5  01A4               	clrf	Lcd_Set_Cursor@b
  8939     06C6  0AA4               	incf	Lcd_Set_Cursor@b,f
  8940     06C7  3002               	movlw	2
  8941     06C8  160A  118A  250A  120A  118A  	fcall	_Lcd_Set_Cursor
  8942     06CD                     l4228:
  8943                           
  8944                           ;main.c: 473:             Lcd_Write_String("   DONME HATASI        ");
  8945     06CD  3051               	movlw	low (STR_41| (0+32768))
  8946     06CE  1283               	bcf	3,5	;RP0=0, select bank0
  8947     06CF  1303               	bcf	3,6	;RP1=0, select bank0
  8948     06D0  00A5               	movwf	Lcd_Write_String@a
  8949     06D1  3098               	movlw	high (STR_41| (0+32768))
  8950     06D2  00A6               	movwf	Lcd_Write_String@a+1
  8951     06D3  160A  118A  23F0  120A  118A  	fcall	_Lcd_Write_String
  8952     06D8  2E7E               	goto	l4212
  8953     06D9                     l238:
  8954     06D9  120A  118A  2FC5   	goto	l3856
  8955     06DC  120A  118A  280E   	ljmp	start
  8956     06DF                     __end_of_main:

Data Sizes:
    Strings     297
    Constant    10
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       8
    BANK0            80     78      78
    BANK1            80     80      80
    BANK3            96     14      20
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_33(CODE[6]), STR_31(CODE[6]), STR_27(CODE[6]), STR_25(CODE[6]), 
		 -> STR_21(CODE[10]), STR_19(CODE[6]), STR_16(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> main@combinedText_395(BANK1[20]), main@uartMessage_391(BANK1[8]), main@combinedText(BANK0[20]), main@uartMessage(BANK1[8]), 
		 -> main@rpmString(BANK1[5]), main@adcString1(BANK1[4]), main@lcdText(BANK1[9]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 20
		 -> STR_39(CODE[5]), STR_38(CODE[5]), STR_35(CODE[5]), main@combinedText_395(BANK1[20]), 
		 -> main@uartMessage_391(BANK1[8]), STR_29(CODE[5]), main@combinedText(BANK0[20]), main@uartMessage(BANK1[8]), 
		 -> STR_23(CODE[5]), 

    incrementTime@time	PTR struct Time size(1) Largest target is 6
		 -> currentTime(BANK3[6]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 27
		 -> STR_41(CODE[24]), STR_40(CODE[24]), STR_37(CODE[27]), STR_36(CODE[26]), 
		 -> STR_34(CODE[14]), STR_32(CODE[13]), STR_30(CODE[10]), STR_28(CODE[9]), 
		 -> STR_26(CODE[11]), STR_24(CODE[10]), STR_22(CODE[9]), main@rpmString(BANK1[5]), 
		 -> STR_20(CODE[5]), main@adcString1(BANK1[4]), STR_18(CODE[10]), STR_17(CODE[3]), 
		 -> main@lcdText(BANK1[9]), STR_15(CODE[14]), STR_14(CODE[19]), STR_13(CODE[14]), 
		 -> STR_12(CODE[19]), STR_11(CODE[14]), STR_10(CODE[19]), STR_9(CODE[14]), 
		 -> STR_8(CODE[19]), STR_7(CODE[14]), STR_6(CODE[19]), STR_5(CODE[14]), 
		 -> STR_4(CODE[19]), STR_3(CODE[3]), STR_2(CODE[15]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _timer_isr in COMMON

    _timer_isr->_incrementTime

Critical Paths under _main in BANK0

    _main->___flmul
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    ___lwdiv->___wmul
    ___flmul->___fldiv
    _UART_Write_Text->_UART_Write
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _timer_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer_isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer_isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               130   130      0   23363
                                             52 BANK0     26    26      0
                                              0 BANK1     80    80      0
                                              0 BANK3     14    14      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                    _UART_Initialize
                    _UART_Write_Text
                            ___fldiv
                            ___flmul
                            ___fltol
                            ___lwdiv
                            ___lwmod
                             ___wmul
                           ___xxtofl
                         _readEEPROM
                            _sprintf
                        _writeEEPROM
 ---------------------------------------------------------------------------------
 (1) _writeEEPROM                                          4     0      4     500
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             31    21     10    4645
                                             18 BANK0     23    13     10
                            ___fltol (ARG)
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1036
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     463
                                             13 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     770
                                              6 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _readEEPROM                                           4     2      2     301
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     517
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    3353
                                             26 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     980
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1273
                                              0 BANK0     26    18      8
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      7     5      2     971
                                              1 BANK0      7     5      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2    3264
                                              5 BANK0      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     254
                                              1 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1    3425
                                              4 BANK0      6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                              4 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     155
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _timer_isr                                            3     3      0     187
                                              3 COMMON     3     3      0
                      _incrementTime
 ---------------------------------------------------------------------------------
 (5) _incrementTime                                        3     3      0     187
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _UART_Initialize
   _UART_Write_Text
     _UART_Write
   ___fldiv
   ___flmul
     __Umul8_16
     ___fldiv (ARG)
   ___fltol
   ___lwdiv
     ___wmul (ARG)
   ___lwmod
     ___lwdiv (ARG)
   ___wmul
   ___xxtofl
   _readEEPROM
   _sprintf
     ___fltol (ARG)
     ___lwdiv (ARG)
     ___lwmod (ARG)
     ___wmul (ARG)
     _isdigit (ARG)
   _writeEEPROM

 _timer_isr (ROOT)
   _incrementTime

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      BA       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      E      14       9       20.8%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      BA      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sat Sep 16 09:27:07 2023

            ___fldiv@aexp 0039              ___fldiv@bexp 0038                         pc 0002  
            ___fldiv@sign 0031                        l99 1316                        _RD 0C60  
                      _WR 0C61                        fsr 0004       ___wmul@multiplicand 0022  
     __Umul8_16@word_mpld 0026                       l100 1317                       l101 131D  
                     l102 131E                       l110 12F0                       l103 1324  
                     l104 1325                       l105 132B                       l113 12A2  
                     l122 15B8                       l210 0485                       l202 047D  
                     l107 132C                       l131 1435                       l211 04E2  
                     l220 05AE                       l125 13B3                       l141 130C  
                     l230 0638                       l214 051E                       l206 04E3  
                     l119 1555                       l144 07FA                       l232 0634  
                     l224 0551                       l216 0549                       l138 1308  
                     l234 0645                       l162 0647                       l411 137A  
                     l260 12A6                       l405 0CBA                       l238 06D9  
                     l263 12B0                       l239 06A1                       l257 12C0  
                     l409 1362                       l193 019D                       l602 161B  
                     l196 02B9                       l269 147B                       l605 1630  
                     l381 0B53                       l367 0ADE                       l199 0378  
                     l379 0B7D                       l804 0F6F                       l388 0BE5  
                     l760 17FF                       l817 081C                       l681 14C1  
                     l842 0853                       l819 082E                       l595 1630  
                     l691 13EF                       l780 17EB                       l844 08E8  
                     l774 1779                       l758 1687                       l862 12D4  
                     l855 08B2                       l856 08BE                       l798 0FFF  
                     _GIE 005F                       _RB0 0030                       _RB1 0031  
                     _RB2 0032                       _RA4 002C                       _RC0 0038  
                     _RB3 0033                       _RC1 0039                       _RB4 0034  
                     _RD0 0040                       _RC2 003A                       _RB5 0035  
                     _RC3 003B                       _RE0 0048                       _RE1 0049  
                     _RE2 004A                       fsr0 0004                       indf 0000  
            ___flmul@aexp 0048              ___flmul@bexp 004D              ___flmul@sign 0047  
            ___flmul@temp 0052              ___flmul@prod 004E               main@lcdText 00B4  
            ___fltol@exp1 0029                      l2210 1490                      l2202 147C  
                    l2220 14B0                      l2212 1494                      l2204 1480  
                    l2222 14B7                      l2214 1498                      l2206 1486  
                    l2230 13BC                      l2310 1305                      l2216 14A9  
                    l2208 1489                      l2224 14BD                      l2240 13D8  
                    l2232 13BF                      l2312 1306                      l2304 12F1  
                    l4000 0040                      l2330 12BD                      l2218 14AF  
                    l2242 13DE                      l2234 13C6                      l2314 1307  
                    l2306 12FD                      l4010 0078                      l2244 13E5  
                    l2236 13CA                      l2228 13B4                      l2308 1300  
                    l4100 03DF                      l4012 007B                      l4004 004E  
                    l4020 008C                      l2510 163F                      l2502 1631  
                    l2238 13CE                      l2246 13EB                      l4110 0445  
                    l4102 03EA                      l4030 00B4                      l4022 0097  
                    l4006 0058                      l2328 12B1                      l2600 1759  
                    l2512 1644                      l2520 1654                      l2504 1636  
                    l3400 1354                      l4200 0630                      l4120 0466  
                    l4112 0450                      l4104 03F4                      l4040 00DB  
                    l4032 00B8                      l4024 00A0                      l4008 0063  
                    l4016 0084                      l2602 175D                      l2530 166A  
                    l2522 165C                      l2514 1649                      l2506 163A  
                    l3410 1376                      l3402 1358                      l4210 065E  
                    l4202 063C                      l4130 0495                      l4122 0471  
                    l4114 0456                      l4106 03FF                      l4050 0101  
                    l4042 00F0                      l4026 00A9                      l4018 0089  
                    l2620 17AE                      l2612 177E                      l2604 175E  
                    l2532 166F                      l2540 167F                      l2524 1661  
                    l2516 1651                      l2508 163E                      l3420 0816  
                    l3404 135C                      l3500 0B40                      l4212 067E  
                    l4204 0640                      l4140 04D6                      l4132 04A0  
                    l4124 0481                      l4116 045A                      l4108 043B  
                    l4060 0196                      l4044 00F3                      l4036 00C6  
                    l4028 00AF                      l4052 0104                      l3350 1322  
                    l3430 150D                      l2630 17E2                      l2614 1783  
                    l2622 17B4                      l2606 1762                      l2542 168F  
                    l2550 16A8                      l2534 1674                      l2526 1665  
                    l2518 1652                      l3422 0825                      l3414 0809  
                    l3406 1369                      l3510 0B8D                      l4222 06A5  
                    l4214 0681                      l4206 064B                      l4150 0522  
                    l4142 04E7                      l4134 04AB                      l4126 0489  
                    l4118 045E                      l4070 01E9                      l4062 019C  
                    l4054 0128                      l4038 00D0                      l3352 1329  
                    l3344 1310                      l3360 12E2                      l3432 1512  
                    l3440 1531                      l3600 143B                      l2640 17F9  
                    l2632 17EA                      l2624 17C1                      l2616 1791  
                    l2608 1776                      l2560 16D0                      l2552 16AD  
                    l2544 169B                      l2536 167C                      l2528 1669  
                    l3424 082A                      l3416 080B                      l3408 1370  
                    l3512 0B91                      l3520 0BA7                      l3504 0B55  
                    l4224 06AE                      l4216 068F                      l4208 0653  
                    l4160 054D                      l4152 0526                      l4144 04EF  
                    l4136 04BA                      l4128 048D                      l4080 02B6  
                    l4072 0225                      l4064 01A1                      l4056 013D  
                    l4048 00FC                      l3346 1314                      l3362 12ED  
                    l3354 12D8                      l3450 1556                      l3442 1537  
                    l3434 151F                      l3370 1393                      l3602 1457  
                    l2634 17EF                      l2626 17CF                      l2618 1795  
                    l2570 16F9                      l2562 16D8                      l2546 169F  
                    l2538 167D                      l3418 0812                      l2810 087B  
                    l2802 0864                      l3530 0BC9                      l3514 0B95  
                    l3506 0B81                      l4226 06B8                      l4218 0692  
                    l4170 0577                      l4162 0555                      l4154 052A  
                    l4146 04FA                      l4138 04BE                      l4090 0382  
                    l4082 02BD                      l4074 0286                      l4066 01A7  
                    l4058 0147                      l3348 131B                      l3356 12D9  
                    l3428 1296                      l3452 155C                      l3444 1544  
                    l3436 1522                      l3380 13A9                      l3372 1396  
                    l3364 137E                      l3460 13F0                      l3604 145F  
                    l2636 17F3                      l2628 17DE                      l2580 171A  
                    l2572 16FD                      l2564 16E0                      l2556 16B6  
                    l3700 0DBA                      l3620 15EB                      l3612 15CD  
                    l2820 08A8                      l2812 087F                      l2804 0867  
                    l3540 0BF0                      l3532 0BCD                      l3508 0B89  
                    l3516 0B9B                      l4228 06CD                      l4180 05BA  
                    l4172 0586                      l4164 0559                      l4156 0532  
                    l4148 0512                      l4092 0393                      l4084 0371  
                    l4076 02A9                      l4068 01C6                      l3358 12DF  
                    l3454 1567                      l3446 1547                      l3438 1528  
                    l3382 13B0                      l3374 139D                      l3366 1384  
                    l3462 13F5                      l2638 17F5                      l2590 173C  
                    l2582 1728                      l2574 16FE                      l2566 16E2  
                    l2558 16C8                      l3710 0E18                      l3702 0DD6  
                    l3630 1600                      l3622 15EF                      l3614 15E0  
                    l3606 15B9                      l2830 08DB                      l2822 08AC  
                    l2814 088D                      l2806 086B                      l3470 07EC  
                    l3390 12C5                      l3550 0C0F                      l3542 0BFC  
                    l3534 0BD3                      l3526 0BA9                      l3518 0BA3  
                    l4190 0606                      l4182 05C5                      l4174 058A  
                    l4166 0561                      l4158 053D                      l4094 039B  
                    l4086 0377                      l4078 02AF                      l3456 1578  
                    l3448 154D                      l3376 13A0                      l3368 1385  
                    l3464 1411                      l3384 12A6                      l2592 1745  
                    l2568 16E7                      l2576 1707                      l2584 172C  
                    l3720 0EA2                      l3712 0E35                      l3704 0DDF  
                    l3640 1620                      l3632 1609                      l3616 15E1  
                    l3608 15C4                      l2832 08DF                      l2824 08B6  
                    l2816 0896                      l2808 0874                      l3392 12CB  
                    l3552 0C13                      l3560 0C2F                      l3544 0C00  
                    l3536 0BD9                      l4280 0AF5                      l3480 0AD5  
                    l4192 0610                      l4184 05DE                      l4176 05A2  
                    l4168 056C                      l4096 03A6                      l4088 037C  
                    l3800 071B                      l3458 157E                      l3378 13A6  
                    l3466 1419                      l3386 12AC                      l2594 1749  
                    l2586 1732                      l2578 1719                      l3730 0F32  
                    l3722 0ECD                      l3714 0E4C                      l3706 0DED  
                    l3650 0CC8                      l3642 1625                      l3618 15E9  
                    l2834 08E0                      l2826 08C0                      l2818 089D  
                    l3394 12D1                      l3570 0C50                      l3562 0C35  
                    l3554 0C19                      l3546 0C04                      l3538 0BDF  
                    l4282 0B6F                      l3490 0AFA                      l3482 0ADA  
                    l3474 0AC7                      l4194 061B                      l4186 05F6  
                    l4178 05B2                      l4098 03D5                      l3810 074E  
                    l3802 0732                      l2596 174A                      l2588 173A  
                    l3732 0F3B                      l3740 0F4F                      l3724 0EF3  
                    l3716 0E69                      l3708 0E0A                      l3660 0CDD  
                    l3652 0CC9                      l3644 0CBB                      l3628 15F7  
                    l2828 08D6                      l3468 07E6                      l3396 12D3  
                    l3388 12C4                      l3580 0C93                      l3572 0C55  
                    l3564 0C3A                      l3556 0C1E                      l3548 0C0A  
                    l3492 0B0C                      l3484 0ADF                      l3476 0ACA  
                    l4188 0602                      l4196 0626                      l3900 0970  
                    l3820 0753                      l3812 074F                      l3804 0749  
                    l2598 1753                      l3742 0F53                      l3734 0F3F  
                    l3726 0F1B                      l3718 0E94                      l3670 0CF3  
                    l3662 0CE5                      l3654 0CCE                      l3646 0CC0  
                    l3638 1610                      l2790 0832                      l3582 0C97  
                    l3566 0C3E                      l3558 0C22                      l3574 0C59  
                    l3494 0B10                      l3478 0AD0                      l4198 062C  
                    l3910 0991                      l3902 0975                      l3830 0782  
                    l3822 0758                      l3814 0750                      l3806 074C  
                    l3760 0FA4                      l3752 0F74                      l3744 0F54  
                    l3736 0F40                      l3728 0F24                      l3680 0D0F  
                    l3672 0CF8                      l3664 0CEA                      l3656 0CD3  
                    l3648 0CC4                      l2792 0837                      l3576 0C5C  
                    l3568 0C4A                      l3496 0B25                      l3488 0AE5  
                    l3584 0CA0                      l3912 099C                      l3920 09BD  
                    l3904 0979                      l3840 07AE                      l3832 078C  
                    l3824 0762                      l3816 0751                      l3808 074D  
                    l3770 0FDB                      l3754 0F79                      l3762 0FAA  
                    l3746 0F58                      l3738 0F49                      l3690 0D30  
                    l3682 0D14                      l3674 0CFD                      l3666 0CEE  
                    l3658 0CDB                      l2794 083B                      l3578 0C8E  
                    l3586 0CB6                      l3498 0B3A                      l3930 09E2  
                    l3922 09C2                      l3914 09B1                      l3850 07C0  
                    l3842 07B3                      l3834 0797                      l3826 076D  
                    l3818 0752                      l3772 0FDD                      l3780 0FF3  
                    l3764 0FB7                      l3756 0F87                      l3748 0F6C  
                    l3692 0D3D                      l3684 0D19                      l3676 0D05  
                    l3668 0CF2                      l2796 084B                      l3940 09FF  
                    l3932 09E8                      l3916 09B4                      l3908 0987  
                    l3924 09C5                      l3860 07D1                      l3852 07C1  
                    l3844 07B3                      l3836 07A5                      l3828 0777  
                    l3598 1436                      l3782 0FF7                      l3774 0FE9  
                    l3766 0FC2                      l3758 0F8B                      l3694 0D58  
                    l3678 0D07                      l2798 085B                      l3942 0A09  
                    l3934 09ED                      l3926 09D0                      l3870 08FD  
                    l3862 07DB                      l3854 07C1                      l3846 07B6  
                    l3838 07AA                      l3790 06F6                      l3776 0FED  
                    l3768 0FD1                      l3696 0D74                      l3688 0D22  
                    l3960 0A51                      l3944 0A14                      l3952 0A35  
                    l3936 09F1                      l3928 09D9                      l3880 0924  
                    l3872 0901                      l3864 08E9                      l3856 07C5  
                    l3848 07BA                      l3792 06F9                      l3778 0FEE  
                    l3698 0D9E                      l3962 0A5A                      l3954 0A3A  
                    l3946 0A29                      l3890 094A                      l3882 0939  
                    l3866 08F2                      l3858 07CD                      l3794 06FA  
                    l3786 06DF                      l3980 0AA4                      l3972 0A77  
                    l3964 0A60                      l3948 0A2C                      l3956 0A3D  
                    l3884 093C                      l3876 090F                      l3868 08F8  
                    l3892 094D                      l3796 0704                      l3788 06F1  
                    l3990 001F                      l3974 0A81                      l3966 0A65  
                    l3958 0A48                      l3894 0958                      l3878 0919  
                    l3798 0707                      l3992 0028                      l3976 0A8C  
                    l3984 0AAD                      l3968 0A69                      l3896 0961  
                    l3888 0945                      l3994 0031                      l3986 0AB2  
                    l3978 0AA1                      l3898 096A                      l3996 0037  
                    l3988 0AB5                      l3998 003C                      STR_1 1894  
                    STR_2 18A4                      STR_3 1942                      STR_4 1881  
                    STR_5 18C1                      STR_6 1881                      STR_7 18C1  
                    STR_8 1881                      STR_9 18C1                      _T0IF 005A  
                    u3000 1719                      u3001 1718                      u3010 1732  
                    u3011 1731                      u3100 1783                      u3020 173A  
                    u3101 1782                      u3021 1739                      u3005 1715  
                    u3110 1795                      u2310 1498                      u3111 1794  
                    u2311 1497                      u3120 17A4                      u3040 1749  
                    u3041 1748                      u2305 148A                      u3130 17C1  
                    u2330 14A9                      u2410 13EB                      u3131 17C0  
                    u3035 173E                      u2331 14A8                      u2411 13EA  
                    u3140 17DE                      u3060 175D                      u3141 17DD  
                    u3125 179F                      u3061 175C                      u2325 1499  
                    u2405 13DF                      u3150 17F3                      u3070 1762  
                    u2350 14BD                      u3151 17F2                      u3135 17BD  
                    u3071 1761                      u3055 174C                      u2351 14BC  
                    u2335 14A5                      u3080 1776                      u2360 13BC  
                    u2520 130C                      u3145 17DA                      u3081 1775  
                    u5001 0E27                      u2345 14B1                      u2361 13BB  
                    u2521 130B                      u3090 177D                      u5002 0E2E  
                    u2290 1486                      u3091 177C                      u5003 0E35  
                    u2291 1485                      u2380 13CE                      u5021 0E5B  
                    u2381 13CD                      u5110 0F3F                      u5022 0E62  
                    u2390 13D8                      u5111 0F3E                      u5031 0E86  
                    u5023 0E69                      u5015 0E37                      u2391 13D7  
                    u2375 13C0                      u4320 1314                      u5200 0FB7  
                    u5032 0E8D                      u4400 135C                      u4321 1313  
                    u5201 0FB6                      u5105 0F34                      u5041 0EB1  
                    u5033 0E94                      u4401 135B                      u4330 131B  
                    u5210 0FD1                      u5130 0F53                      u5050 0ED9  
                    u5042 0EB8                      u3610 08AC                      u3530 0837  
                    u4331 131A                      u5211 0FD0                      u5131 0F52  
                    u5043 0EBF                      u3611 08AB                      u3531 0836  
                    u2395 13D4                      u4340 1322                      u2900 1669  
                    u5220 0FED                      u5140 0F58                      u3620 08B2  
                    u3540 083B                      u5300 0958                      u4341 1321  
                    u2901 1668                      u5221 0FEC                      u5205 0FB3  
                    u5141 0F57                      u5125 0F42                      u5061 0EE5  
                    u3621 08B1                      u3605 08A1                      u3541 083A  
                    u5301 0957                      u4350 1329                      u4510 13FF  
                    u2910 166F                      u5150 0F6C                      u5070 0F01  
                    u5062 0EEC                      u3630 08B6                      u3550 085B  
                    u4430 1376                      u5310 0961                      u5230 07CD  
                    u4351 1328                      u2911 166E                      u5215 0FCD  
                    u5151 0F6B                      u5063 0EF3                      u5055 0ED4  
                    u3631 08B5                      u3551 085A                      u4431 1375  
                    u4415 1363                      u5311 0960                      u5231 07CA  
                    u4520 1423                      u2920 1674                      u4440 0816  
                    u5160 0F73                      u3640 08CB                      u4600 0BD3  
                    u5400 0A48                      u5320 096A                      u5240 07D1  
                    u4505 153D                      u2921 1673                      u4441 0815  
                    u5161 0F72                      u5081 0F0D                      u4425 136A  
                    u4601 0BD2                      u5401 0A47                      u5321 0969  
                    u5241 07D0                      u4530 1435                      u4370 12AC  
                    u2930 168F                      u5170 0F79                      u5082 0F14  
                    u3650 08DB                      u3570 087A                      u4610 0BD9  
                    u5410 0A51                      u5330 0970                      u5250 07DB  
                    u4531 1434                      u4371 12AB                      u2931 168E  
                    u5171 0F78                      u5083 0F1B                      u5075 0EFC  
                    u3651 08DA                      u3571 0879                      u4611 0BD8  
                    u5411 0A50                      u5331 096F                      u5251 07D8  
                    u2940 16AD                      u4460 082A                      u5180 0F8B  
                    u3660 08DF                      u4380 12CB                      u4700 0C50  
                    u4620 0BDF                      u4540 0AD0                      u5500 0097  
                    u5420 0A5A                      u5340 0986                      u5260 08E9  
                    u4365 1388                      u2941 16AC                      u4461 0829  
                    u5181 0F8A                      u3661 08DE                      u3645 08C6  
                    u3565 086C                      u4381 12CA                      u4701 0C4F  
                    u4621 0BDE                      u4541 0ACF                      u5501 0096  
                    u5421 0A59                      u5341 0985                      u5261 07E5  
                    u4470 1512                      u2950 16E7                      u2870 163E  
                    u5190 0F9A                      u3590 089C                      u4390 12D1  
                    u4710 0CA0                      u4630 0BF0                      u4550 0B0C  
                    u5510 00A0                      u5430 0A60                      u5350 09D0  
                    u5270 08F2                      u4471 1511                      u2951 16E6  
                    u2871 163D                      u4455 081D                      u5095 0F1D  
                    u3591 089B                      u4391 12D0                      u4711 0C9F  
                    u4631 0BEF                      u4551 0B0B                      u5511 009F  
                    u5431 0A5F                      u5351 09CF                      u5271 08F1  
                    u2880 1644                      u4720 0CB6                      u4640 0C04  
                    u4560 0B52                      u5600 045E                      u5520 00A9  
                    u5440 0A76                      u5360 09D9                      u5280 08F8  
                    u2881 1643                      u3585 088E                      u4721 0CB5  
                    u4641 0C03                      u4561 0B51                      u5601 045D  
                    u5521 00A8                      u5441 0A75                      u5361 09D8  
                    u5345 0982                      u5281 08F7                      u4490 1537  
                    u4730 1445                      u2890 1649                      u4810 1608  
                    u4650 0C0A                      u4570 0B81                      u5610 0481  
                    u5530 00AF                      u5450 001F                      u5370 09E2  
                    u5290 090E                      u4491 1536                      u2891 1648  
                    u5195 0F95                      u4811 1607                      u4651 0C09  
                    u4635 0BEC                      u4571 0B80                      u5611 0480  
                    u5531 00AE                      u5451 0AC1                      u5371 09E1  
                    u5291 090D                      u4740 1469                      u2980 16FD  
                    u4900 0CF8                      u4820 160F                      u4660 0C19  
                    u4580 0B91                      u5700 052A                      u5620 0485  
                    u5540 00C5                      u5460 0028                      u5380 09E8  
                    u4485 1518                      u2981 16FC                      u2965 16E9  
                    u4901 0CF7                      u4821 160E                      u4805 15F8  
                    u4661 0C18                      u4581 0B90                      u5701 0529  
                    u5621 0484                      u5541 00C4                      u5461 0027  
                    u5445 0A72                      u5381 09E7                      u4750 147B  
                    u4910 0CFD                      u4670 0C2E                      u4590 0BC8  
                    u5710 054D                      u5630 0489                      u5550 01A1  
                    u5470 0031                      u5390 09FE                      u4751 147A  
                    u2975 16F2                      u4911 0CFC                      u4671 0C2D  
                    u4591 0BC7                      u5711 054C                      u5631 0488  
                    u5551 01A0                      u5471 0030                      u5391 09FD  
                    u5295 090A                      u4920 0D14                      u4840 1620  
                    u4760 15C4                      u4680 0C35                      u5800 0634  
                    u5720 0551                      u5640 048D                      u5560 02BD  
                    u5480 0037                      u4921 0D13                      u4841 161F  
                    u4761 15C3                      u4681 0C34                      u5801 0633  
                    u5721 0550                      u5641 048C                      u5561 02BC  
                    u5545 00C1                      u5481 0036                      u4930 0D19  
                    u4850 1625                      u4770 15DB                      u4690 0C4A  
                    u5810 063C                      u5730 0555                      u5650 04AB  
                    u5570 037C                      u5490 004D                      u2995 1700  
                    u4931 0D18                      u4851 1624                      u4835 1612  
                    u4691 0C49                      u4595 0BC4                      u5811 063B  
                    u5731 0554                      u5651 04AA                      u5571 037B  
                    u5491 004C                      u5395 09FA                      u4860 0CC8  
                    u4780 15EF                      u5820 0640                      u5740 0559  
                    u5660 04BA                      u5580 0456                      u4941 0D66  
                    u4861 0CC7                      u4781 15EE                      u5821 063F  
                    u5741 0558                      u5661 04B9                      u5581 0455  
                    u4942 0D6D                      u4870 0CCE                      u4790 15F6  
                    u5830 0644                      u5750 0577                      u5670 04E7  
                    u5590 045A                      u4951 0D82                      u4943 0D74  
                    u4871 0CCD                      u4791 15F5                      u4775 15D6  
                    u5831 0643                      u5751 0576                      u5671 04E6  
                    u5591 0459                      u5495 0049                      u4952 0D89  
                    u4880 0CD3                      u5840 064B                      u5760 0586  
                    u5680 0522                      u4961 0DAC                      u4953 0D90  
                    u4881 0CD2                      u5841 064A                      u5761 0585  
                    u5681 0521                      u4962 0DB3                      u4890 0CF2  
                    u5850 06A5                      u5770 05B2                      u5690 0526  
                    u4971 0DC8                      u4963 0DBA                      u4891 0CF1  
                    u5851 06A4                      u5907 069A                      u5771 05B1  
                    u5691 0525                      u4972 0DCF                      u5780 062C  
                    u5917 139A                      u4973 0DD6                      u5781 062B  
                    u5790 0630                      u5927 13AD                      u4991 0DFC  
                    u5791 062F                      u4992 0E03                      u5937 1562  
                    u4993 0E0A                      u4985 0DD8                      u5947 1573  
                    u5867 0700                      u5957 1584                      u5877 079F  
                    u5967 12E8                      u5887 02B3                      u5897 0689  
                    _TMR0 0001                      _TRMT 04C1                      _WREN 0C62  
       ?_Lcd_Write_String 0025                      _main 06DF                      btemp 007E  
                    start 000E        ??_Lcd_Write_String 0027           ___fldiv@new_exp 0032  
         __end_of_Lcd_Cmd 12F1               _writeEEPROM 12F1   __end_of_UART_Write_Text 147C  
        ?_UART_Initialize 0070             ___fltol@sign1 0028        writeEEPROM@address 0020  
                   ?_main 0070           __end_of___fldiv 1800                     _EEADR 010D  
                   STR_10 1881                     STR_11 18C1                     STR_12 1881  
                   STR_20 193D                     STR_13 18C1                     STR_21 1910  
                   STR_14 1881                     STR_22 191A                     STR_30 1906  
                   STR_31 192C                     STR_15 18C1                     STR_23 1938  
                   STR_24 18FC                     STR_16 18E7                     STR_32 18CF  
                   STR_40 1869                     STR_33 192C                     STR_17 1834  
                   STR_25 192C                     STR_41 1851                     STR_18 18F2  
                   STR_26 18DC                     STR_34 18B3                     STR_35 1938  
                   STR_27 192C                     STR_19 1932                     STR_28 1923  
                   STR_36 1837                     STR_29 1938                     STR_37 181C  
                   STR_38 1938                     STR_39 1938           __end_of___flmul 1000  
         __end_of___fltol 1631           __end_of___lwdiv 14C2                     i1l156 134B  
                   i1l149 1509           __end_of___lwmod 13F0                     _RCSTA 0018  
                   _SPBRG 0099                     _TXREG 0019                     _TXSTA 0098  
             ?_UART_Write 0070           __end_of_dpowers 181C           __end_of_isdigit 12D5  
                   main@i 00EA              main@rpmValue 006C             main@adcValue1 00E4  
           main@adcValue2 00D6             main@adcValue3 00D8                     pclath 000A  
                   status 0003                     wtemp0 007E           __end_of_sprintf 0CBB  
        __end_of_Lcd_Init 15B9          __end_of_Lcd_Port 132D           __initialization 0011  
            __end_of_main 06DF                    ??_main 0054                    _ADRESH 001E  
                  _ADRESL 009E                    _EEDATA 010C                    _EECON2 018D  
                  i1l2322 14C3                    i1l2324 14DD                    i1l2326 14FC  
                  i1l2840 1331                    i1l2842 1332                    i1l2844 133C  
                  i1l2846 1343                    i1l2838 132D                    i1l2848 1345  
                  u253_20 14DD                    u253_21 14DC                    u254_20 14FC  
                  u254_21 14FB                    u367_20 1331                    u367_21 1330  
                  u368_20 1343                    u368_21 1342                 ??_Lcd_Cmd 0021  
                  _TRISA1 0429                    _TRISA4 042C                    _TRISC0 0438  
                  _TRISC1 0439                    _TRISC2 043A                    _TRISD0 0440  
                  _TRISC3 043B                    _TRISE0 0448                    _TRISE1 0449  
                  _TRISE2 044A                    _TRISC6 043E                    _TRISC7 043F  
        __end_of___xxtofl 08E9                    ___wmul 1354                 ??___fldiv 0028  
               ??___flmul 0042          ?_UART_Write_Text 0021                 ??___fltol 0024  
               ??___lwdiv 0076                 ??___lwmod 0076             _incrementTime 14C2  
           main@rpmString 00D1                 ??_isdigit 0076                    saved_w 007E  
          main@adcString1 00E0                 ??_sprintf 003C           Lcd_Set_Cursor@a 0026  
         Lcd_Set_Cursor@b 0024           Lcd_Set_Cursor@y 0028           Lcd_Set_Cursor@z 0027  
            ___xxtofl@arg 002A              ___xxtofl@exp 0029              ___xxtofl@val 0020  
 __end_of__initialization 001B         __end_of_Lcd_Clear 12A3                ___fltol@f1 0020  
         writeEEPROM@data 0022            __pcstackCOMMON 0070            ?_incrementTime 0070  
          _Lcd_Set_Cursor 150A         incrementTime@time 0072            _OPTION_REGbits 0081  
      main@gostermeliklcd 00CD                 ?_Lcd_Init 0070                 ?_Lcd_Port 0070  
            sprintf@width 0045          main@combinedText 0058                __pbssBANK3 019E  
       __end_of__Umul8_16 082F                __pmaintext 06DF              ?_writeEEPROM 0020  
                 ?___wmul 0020                __pintentry 0004    __end_of_Lcd_Set_Cursor 1556  
               ?___xxtofl 0020              ??_UART_Write 0076                ??_Lcd_Init 0024  
              ??_Lcd_Port 0076                __stringtab 1800            _Lcd_Write_Char 137B  
                 _Lcd_Cmd 12D5                _readEEPROM 07E6                   ___fldiv 1631  
         ??_incrementTime 0070                   ___flmul 0CBB                   ___fltol 15B9  
      __end_of_UART_Write 12B1                   ___lwdiv 147C                   ___lwmod 13B4  
         ?_Lcd_Set_Cursor 0024                   __ptext1 12F1                   __ptext2 0AC4  
                 __ptext3 12C1                   __ptext4 1354                   __ptext5 13B4  
                 __ptext6 147C                   __ptext7 07E6                   __ptext8 082F  
                 __ptext9 15B9                   _dpowers 1812                   _isdigit 12C1  
              ??___xxtofl 0024                   _sprintf 0AC4    __end_of_Lcd_Write_Char 13B4  
    end_of_initialization 001B         __end_of_timer_isr 1354                   psplit$0 A0025  
                 psplit$1 250026                 Lcd_Port@a 0020              __pstringtext 1800  
          UART_Write@data 0020             ___xxtofl@sign 0028                 _TRISBbits 0086  
             ___fldiv@grs 0034               ___fldiv@rem 002D      pnum$maintext_split_1 0025  
    pnum$maintext_split_2 0026         readEEPROM@address 0020           ?_Lcd_Write_Char 0070  
       Lcd_Write_String@a 0025         Lcd_Write_String@i 002A               ___flmul@grs 0049  
              main@binler 0196                main@birler 00DC               ?_readEEPROM 0020  
              main@yuzler 00E8                 _Lcd_Clear 1296            __end_of___wmul 137B  
        _Lcd_Write_String 13F0       start_initialization 0011         ??_UART_Initialize 0076  
              ?_Lcd_Clear 0070                  ??___wmul 0076                 __Umul8_16 0806  
         Lcd_Write_Char@a 0024           Lcd_Write_Char@y 0023                 ___fldiv@a 0020  
               ___fldiv@b 0024                 ___flmul@a 003E                 ___flmul@b 003A  
             __pbssCOMMON 0076                 ___latbits 0002             __pcstackBANK0 0020  
           __pcstackBANK1 00A0             __pcstackBANK3 0190      main@displayValue_371 019A  
                ?_Lcd_Cmd 0070               sprintf@flag 0044               sprintf@prec 0040  
        ___lwdiv@dividend 0028  main@negativeDisplayValue 00DE          ??_Lcd_Set_Cursor 0025  
                ?___fldiv 0020                  ?___flmul 003A                  ?___fltol 0020  
              ?__Umul8_16 0020                  ?___lwdiv 0026                  ?___lwmod 002D  
                ?_isdigit 0070          ___lwdiv@quotient 002A                  ?_sprintf 0032  
       ??_UART_Write_Text 0023         interrupt_function 0004            ___wmul@product 0024  
                Lcd_Cmd@a 0023               ??_Lcd_Clear 0076                 _timer_isr 132D  
   __end_of_incrementTime 150A                _ADCON0bits 001F               __stringbase 1812  
              _ADCON1bits 009F                 main@i_341 00EC                 main@i_350 0192  
               main@i_344 00EE                 main@i_353 0194                 main@i_347 0190  
       ___wmul@multiplier 0020          ??_Lcd_Write_Char 0021                 main@onlar 00DA  
                _Lcd_Init 1556                  _Lcd_Port 130D           main@integerPart 0198  
__end_of_Lcd_Write_String 1436              ??_readEEPROM 0022               _kesmeSayaci 0076  
             ??__Umul8_16 0022                ?_timer_isr 0070              pnum$maintext 000A  
      __end_of__stringtab 1812               _isdigit$870 0020           _UART_Initialize 12B1  
             _currentTime 019E                sprintf@val 0042                  ___xxtofl 082F  
      __end_of_readEEPROM 07FB           ___lwdiv@divisor 0026           ___lwdiv@counter 002C  
                __ptext10 0CBB                  __ptext11 0806                  __ptext20 1296  
                __ptext12 1631                  __ptext21 12D5                  __ptext13 1436  
                __ptext22 130D                  __ptext14 12A3                  __ptext23 132D  
                __ptext15 12B1                  __ptext24 14C2                  __ptext16 13F0  
                __ptext17 137B                  __ptext18 150A                  __ptext19 1556  
     UART_Write_Text@text 0021             ??_writeEEPROM 0076           main@uartMessage 00BD  
              _INTCONbits 000B                  isdigit@c 0021        Lcd_Write_Char@temp 0022  
                intlevel1 0000                 sprintf@ap 0041                 sprintf@sp 0048  
        ___lwmod@dividend 002F                 stringcode 180A               ??_timer_isr 0073  
 __end_of_UART_Initialize 12C1       main@uartMessage_391 00C5        Lcd_Set_Cursor@temp 0029  
    main@combinedText_395 00A0       __end_of_writeEEPROM 130D    __Umul8_16@multiplicand 0020  
         _UART_Write_Text 1436                  sprintf@c 0047                  sprintf@f 0032  
         ___lwmod@divisor 002D           ___lwmod@counter 0031                  stringtab 1800  
              _UART_Write 12A3              main@FWDartan 019C          UART_Write_Text@i 0026  
    __Umul8_16@multiplier 0028         __Umul8_16@product 0024  
