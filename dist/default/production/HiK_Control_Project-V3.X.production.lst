

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Sep 18 08:51:27 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     8                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    39                           	psect	maintext_split_1,global,class=CODE,split=1,delta=2
    40                           	psect	maintext_split_2,global,class=CODE,split=1,delta=2
    41                           	psect	maintext_split_3,global,class=CODE,split=1,delta=2
    42                           	dabs	1,0x7E,2
    43     0000                     
    44                           ; Generated 22/03/2023 GMT
    45                           ; 
    46                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution. Publication is not required when
    60                           ;        this file is used in an embedded application.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F877A Definitions
    76                           ; 
    77                           ; SFR Addresses
    78     0000                     	;# 
    79     0001                     	;# 
    80     0002                     	;# 
    81     0003                     	;# 
    82     0004                     	;# 
    83     0005                     	;# 
    84     0006                     	;# 
    85     0007                     	;# 
    86     0008                     	;# 
    87     0009                     	;# 
    88     000A                     	;# 
    89     000B                     	;# 
    90     000C                     	;# 
    91     000D                     	;# 
    92     000E                     	;# 
    93     000E                     	;# 
    94     000F                     	;# 
    95     0010                     	;# 
    96     0011                     	;# 
    97     0012                     	;# 
    98     0013                     	;# 
    99     0014                     	;# 
   100     0015                     	;# 
   101     0015                     	;# 
   102     0016                     	;# 
   103     0017                     	;# 
   104     0018                     	;# 
   105     0019                     	;# 
   106     001A                     	;# 
   107     001B                     	;# 
   108     001B                     	;# 
   109     001C                     	;# 
   110     001D                     	;# 
   111     001E                     	;# 
   112     001F                     	;# 
   113     0081                     	;# 
   114     0085                     	;# 
   115     0086                     	;# 
   116     0087                     	;# 
   117     0088                     	;# 
   118     0089                     	;# 
   119     008C                     	;# 
   120     008D                     	;# 
   121     008E                     	;# 
   122     0091                     	;# 
   123     0092                     	;# 
   124     0093                     	;# 
   125     0094                     	;# 
   126     0098                     	;# 
   127     0099                     	;# 
   128     009C                     	;# 
   129     009D                     	;# 
   130     009E                     	;# 
   131     009F                     	;# 
   132     010C                     	;# 
   133     010D                     	;# 
   134     010E                     	;# 
   135     010F                     	;# 
   136     018C                     	;# 
   137     018D                     	;# 
   138     0000                     	;# 
   139     0001                     	;# 
   140     0002                     	;# 
   141     0003                     	;# 
   142     0004                     	;# 
   143     0005                     	;# 
   144     0006                     	;# 
   145     0007                     	;# 
   146     0008                     	;# 
   147     0009                     	;# 
   148     000A                     	;# 
   149     000B                     	;# 
   150     000C                     	;# 
   151     000D                     	;# 
   152     000E                     	;# 
   153     000E                     	;# 
   154     000F                     	;# 
   155     0010                     	;# 
   156     0011                     	;# 
   157     0012                     	;# 
   158     0013                     	;# 
   159     0014                     	;# 
   160     0015                     	;# 
   161     0015                     	;# 
   162     0016                     	;# 
   163     0017                     	;# 
   164     0018                     	;# 
   165     0019                     	;# 
   166     001A                     	;# 
   167     001B                     	;# 
   168     001B                     	;# 
   169     001C                     	;# 
   170     001D                     	;# 
   171     001E                     	;# 
   172     001F                     	;# 
   173     0081                     	;# 
   174     0085                     	;# 
   175     0086                     	;# 
   176     0087                     	;# 
   177     0088                     	;# 
   178     0089                     	;# 
   179     008C                     	;# 
   180     008D                     	;# 
   181     008E                     	;# 
   182     0091                     	;# 
   183     0092                     	;# 
   184     0093                     	;# 
   185     0094                     	;# 
   186     0098                     	;# 
   187     0099                     	;# 
   188     009C                     	;# 
   189     009D                     	;# 
   190     009E                     	;# 
   191     009F                     	;# 
   192     010C                     	;# 
   193     010D                     	;# 
   194     010E                     	;# 
   195     010F                     	;# 
   196     018C                     	;# 
   197     018D                     	;# 
   198     0000                     	;# 
   199     0001                     	;# 
   200     0002                     	;# 
   201     0003                     	;# 
   202     0004                     	;# 
   203     0005                     	;# 
   204     0006                     	;# 
   205     0007                     	;# 
   206     0008                     	;# 
   207     0009                     	;# 
   208     000A                     	;# 
   209     000B                     	;# 
   210     000C                     	;# 
   211     000D                     	;# 
   212     000E                     	;# 
   213     000E                     	;# 
   214     000F                     	;# 
   215     0010                     	;# 
   216     0011                     	;# 
   217     0012                     	;# 
   218     0013                     	;# 
   219     0014                     	;# 
   220     0015                     	;# 
   221     0015                     	;# 
   222     0016                     	;# 
   223     0017                     	;# 
   224     0018                     	;# 
   225     0019                     	;# 
   226     001A                     	;# 
   227     001B                     	;# 
   228     001B                     	;# 
   229     001C                     	;# 
   230     001D                     	;# 
   231     001E                     	;# 
   232     001F                     	;# 
   233     0081                     	;# 
   234     0085                     	;# 
   235     0086                     	;# 
   236     0087                     	;# 
   237     0088                     	;# 
   238     0089                     	;# 
   239     008C                     	;# 
   240     008D                     	;# 
   241     008E                     	;# 
   242     0091                     	;# 
   243     0092                     	;# 
   244     0093                     	;# 
   245     0094                     	;# 
   246     0098                     	;# 
   247     0099                     	;# 
   248     009C                     	;# 
   249     009D                     	;# 
   250     009E                     	;# 
   251     009F                     	;# 
   252     010C                     	;# 
   253     010D                     	;# 
   254     010E                     	;# 
   255     010F                     	;# 
   256     018C                     	;# 
   257     018D                     	;# 
   258                           
   259                           	psect	stringtext
   260     1800                     __pstringtext:
   261     1800                     stringtab:
   262     1800                     __stringtab:
   263                           
   264                           ;	String table - string pointers are 2 bytes each
   265     1800  1BFF               	btfsc	btemp+1,7
   266     1801  280A               	ljmp	stringcode
   267     1802  1383               	bcf	3,7
   268     1803  187F               	btfsc	btemp+1,0
   269     1804  1783               	bsf	3,7
   270     1805  0800               	movf	0,w
   271     1806  0A84               	incf	4,f
   272     1807  1903               	skipnz
   273     1808  0AFF               	incf	btemp+1,f
   274     1809  0008               	return
   275     180A                     stringcode:
   276     180A  087F               	movf	btemp+1,w
   277     180B  397F               	andlw	127
   278     180C  008A               	movwf	10
   279     180D  0804               	movf	4,w
   280     180E  0A84               	incf	4,f
   281     180F  1903               	skipnz
   282     1810  0AFF               	incf	btemp+1,f
   283     1811  0082               	movwf	2
   284     1812                     __stringbase:
   285     1812                     __end_of__stringtab:
   286     1812                     _dpowers:
   287     1812  3401               	retlw	1
   288     1813  3400               	retlw	0
   289     1814  340A               	retlw	10
   290     1815  3400               	retlw	0
   291     1816  3464               	retlw	100
   292     1817  3400               	retlw	0
   293     1818  34E8               	retlw	232
   294     1819  3403               	retlw	3
   295     181A  3410               	retlw	16
   296     181B  3427               	retlw	39
   297     181C                     __end_of_dpowers:
   298     0019                     _TXREG	set	25
   299     0018                     _RCSTA	set	24
   300     001E                     _ADRESH	set	30
   301     001F                     _ADCON0bits	set	31
   302     000B                     _INTCONbits	set	11
   303     0001                     _TMR0	set	1
   304     0040                     _RD0	set	64
   305     003B                     _RC3	set	59
   306     0049                     _RE1	set	73
   307     0038                     _RC0	set	56
   308     003A                     _RC2	set	58
   309     0048                     _RE0	set	72
   310     004A                     _RE2	set	74
   311     0039                     _RC1	set	57
   312     002C                     _RA4	set	44
   313     005A                     _T0IF	set	90
   314     005F                     _GIE	set	95
   315     0034                     _RB4	set	52
   316     0035                     _RB5	set	53
   317     0030                     _RB0	set	48
   318     0031                     _RB1	set	49
   319     0032                     _RB2	set	50
   320     0033                     _RB3	set	51
   321     0098                     _TXSTA	set	152
   322     009E                     _ADRESL	set	158
   323     009F                     _ADCON1bits	set	159
   324     0099                     _SPBRG	set	153
   325     0081                     _OPTION_REGbits	set	129
   326     0088                     _TRISD	set	136
   327     0086                     _TRISB	set	134
   328     04C1                     _TRMT	set	1217
   329     043D                     _TRISC5	set	1085
   330     043C                     _TRISC4	set	1084
   331     042D                     _TRISA5	set	1069
   332     0428                     _TRISA0	set	1064
   333     043F                     _TRISC7	set	1087
   334     043E                     _TRISC6	set	1086
   335     042B                     _TRISA3	set	1067
   336     042A                     _TRISA2	set	1066
   337     0429                     _TRISA1	set	1065
   338     0440                     _TRISD0	set	1088
   339     043B                     _TRISC3	set	1083
   340     0438                     _TRISC0	set	1080
   341     044A                     _TRISE2	set	1098
   342     043A                     _TRISC2	set	1082
   343     0439                     _TRISC1	set	1081
   344     0449                     _TRISE1	set	1097
   345     0448                     _TRISE0	set	1096
   346     042C                     _TRISA4	set	1068
   347     010C                     _EEDATA	set	268
   348     010D                     _EEADR	set	269
   349     018D                     _EECON2	set	397
   350     0C60                     _RD	set	3168
   351     0C61                     _WR	set	3169
   352     0C62                     _WREN	set	3170
   353     181C                     STR_39:
   354     181C  3420               	retlw	32	;' '
   355     181D  3420               	retlw	32	;' '
   356     181E  3420               	retlw	32	;' '
   357     181F  3449               	retlw	73	;'I'
   358     1820  344C               	retlw	76	;'L'
   359     1821  3445               	retlw	69	;'E'
   360     1822  3452               	retlw	82	;'R'
   361     1823  344C               	retlw	76	;'L'
   362     1824  3445               	retlw	69	;'E'
   363     1825  344D               	retlw	77	;'M'
   364     1826  3445               	retlw	69	;'E'
   365     1827  3420               	retlw	32	;' '
   366     1828  3448               	retlw	72	;'H'
   367     1829  3441               	retlw	65	;'A'
   368     182A  3454               	retlw	84	;'T'
   369     182B  3441               	retlw	65	;'A'
   370     182C  3453               	retlw	83	;'S'
   371     182D  3449               	retlw	73	;'I'
   372     182E  3420               	retlw	32	;' '
   373     182F  3420               	retlw	32	;' '
   374     1830  3420               	retlw	32	;' '
   375     1831  3420               	retlw	32	;' '
   376     1832  3420               	retlw	32	;' '
   377     1833  3420               	retlw	32	;' '
   378     1834  3420               	retlw	32	;' '
   379     1835  3420               	retlw	32	;' '
   380     1836  3400               	retlw	0
   381     1837                     STR_38:
   382     1837  3420               	retlw	32	;' '
   383     1838  3420               	retlw	32	;' '
   384     1839  3420               	retlw	32	;' '
   385     183A  3446               	retlw	70	;'F'
   386     183B  3445               	retlw	69	;'E'
   387     183C  3445               	retlw	69	;'E'
   388     183D  3444               	retlw	68	;'D'
   389     183E  3420               	retlw	32	;' '
   390     183F  3452               	retlw	82	;'R'
   391     1840  3441               	retlw	65	;'A'
   392     1841  3454               	retlw	84	;'T'
   393     1842  3445               	retlw	69	;'E'
   394     1843  3420               	retlw	32	;' '
   395     1844  3445               	retlw	69	;'E'
   396     1845  3452               	retlw	82	;'R'
   397     1846  3452               	retlw	82	;'R'
   398     1847  344F               	retlw	79	;'O'
   399     1848  3452               	retlw	82	;'R'
   400     1849  3420               	retlw	32	;' '
   401     184A  3420               	retlw	32	;' '
   402     184B  3420               	retlw	32	;' '
   403     184C  3420               	retlw	32	;' '
   404     184D  3420               	retlw	32	;' '
   405     184E  3420               	retlw	32	;' '
   406     184F  3420               	retlw	32	;' '
   407     1850  3400               	retlw	0
   408     1851                     STR_43:
   409     1851  3420               	retlw	32	;' '
   410     1852  3420               	retlw	32	;' '
   411     1853  3420               	retlw	32	;' '
   412     1854  3444               	retlw	68	;'D'
   413     1855  344F               	retlw	79	;'O'
   414     1856  344E               	retlw	78	;'N'
   415     1857  344D               	retlw	77	;'M'
   416     1858  3445               	retlw	69	;'E'
   417     1859  3420               	retlw	32	;' '
   418     185A  3448               	retlw	72	;'H'
   419     185B  3441               	retlw	65	;'A'
   420     185C  3454               	retlw	84	;'T'
   421     185D  3441               	retlw	65	;'A'
   422     185E  3453               	retlw	83	;'S'
   423     185F  3449               	retlw	73	;'I'
   424     1860  3420               	retlw	32	;' '
   425     1861  3420               	retlw	32	;' '
   426     1862  3420               	retlw	32	;' '
   427     1863  3420               	retlw	32	;' '
   428     1864  3420               	retlw	32	;' '
   429     1865  3420               	retlw	32	;' '
   430     1866  3420               	retlw	32	;' '
   431     1867  3420               	retlw	32	;' '
   432     1868  3400               	retlw	0
   433     1869                     STR_42:
   434     1869  3420               	retlw	32	;' '
   435     186A  3420               	retlw	32	;' '
   436     186B  3420               	retlw	32	;' '
   437     186C  3452               	retlw	82	;'R'
   438     186D  344F               	retlw	79	;'O'
   439     186E  3454               	retlw	84	;'T'
   440     186F  3441               	retlw	65	;'A'
   441     1870  3454               	retlw	84	;'T'
   442     1871  3449               	retlw	73	;'I'
   443     1872  344F               	retlw	79	;'O'
   444     1873  344E               	retlw	78	;'N'
   445     1874  3420               	retlw	32	;' '
   446     1875  3445               	retlw	69	;'E'
   447     1876  3452               	retlw	82	;'R'
   448     1877  3452               	retlw	82	;'R'
   449     1878  344F               	retlw	79	;'O'
   450     1879  3452               	retlw	82	;'R'
   451     187A  3420               	retlw	32	;' '
   452     187B  3420               	retlw	32	;' '
   453     187C  3420               	retlw	32	;' '
   454     187D  3420               	retlw	32	;' '
   455     187E  3420               	retlw	32	;' '
   456     187F  3420               	retlw	32	;' '
   457     1880  3400               	retlw	0
   458     1881                     STR_5:
   459     1881  3450               	retlw	80	;'P'
   460     1882  3455               	retlw	85	;'U'
   461     1883  3454               	retlw	84	;'T'
   462     1884  3420               	retlw	32	;' '
   463     1885  3449               	retlw	73	;'I'
   464     1886  3454               	retlw	84	;'T'
   465     1887  3420               	retlw	32	;' '
   466     1888  3449               	retlw	73	;'I'
   467     1889  344E               	retlw	78	;'N'
   468     188A  3420               	retlw	32	;' '
   469     188B  3453               	retlw	83	;'S'
   470     188C  3454               	retlw	84	;'T'
   471     188D  344F               	retlw	79	;'O'
   472     188E  3450               	retlw	80	;'P'
   473     188F  3420               	retlw	32	;' '
   474     1890  3453               	retlw	83	;'S'
   475     1891  3454               	retlw	84	;'T'
   476     1892  3441               	retlw	65	;'A'
   477     1893  3454               	retlw	84	;'T'
   478     1894  3445               	retlw	69	;'E'
   479     1895  3400               	retlw	0
   480     1896                     STR_4:
   481     1896  3453               	retlw	83	;'S'
   482     1897  3454               	retlw	84	;'T'
   483     1898  344F               	retlw	79	;'O'
   484     1899  3450               	retlw	80	;'P'
   485     189A  3420               	retlw	32	;' '
   486     189B  3444               	retlw	68	;'D'
   487     189C  3455               	retlw	85	;'U'
   488     189D  3452               	retlw	82	;'R'
   489     189E  3455               	retlw	85	;'U'
   490     189F  344D               	retlw	77	;'M'
   491     18A0  3455               	retlw	85	;'U'
   492     18A1  344E               	retlw	78	;'N'
   493     18A2  3441               	retlw	65	;'A'
   494     18A3  3420               	retlw	32	;' '
   495     18A4  3447               	retlw	71	;'G'
   496     18A5  3445               	retlw	69	;'E'
   497     18A6  3454               	retlw	84	;'T'
   498     18A7  3449               	retlw	73	;'I'
   499     18A8  3452               	retlw	82	;'R'
   500     18A9  3400               	retlw	0
   501     18AA                     STR_6:
   502     18AA  3459               	retlw	89	;'Y'
   503     18AB  3441               	retlw	65	;'A'
   504     18AC  3447               	retlw	71	;'G'
   505     18AD  3420               	retlw	32	;' '
   506     18AE  3442               	retlw	66	;'B'
   507     18AF  3441               	retlw	65	;'A'
   508     18B0  344B               	retlw	75	;'K'
   509     18B1  3449               	retlw	73	;'I'
   510     18B2  344D               	retlw	77	;'M'
   511     18B3  3449               	retlw	73	;'I'
   512     18B4  3420               	retlw	32	;' '
   513     18B5  3459               	retlw	89	;'Y'
   514     18B6  3441               	retlw	65	;'A'
   515     18B7  3450               	retlw	80	;'P'
   516     18B8  3449               	retlw	73	;'I'
   517     18B9  344E               	retlw	78	;'N'
   518     18BA  3449               	retlw	73	;'I'
   519     18BB  345A               	retlw	90	;'Z'
   520     18BC  3400               	retlw	0
   521     18BD                     STR_1:
   522     18BD  3455               	retlw	85	;'U'
   523     18BE  345A               	retlw	90	;'Z'
   524     18BF  344D               	retlw	77	;'M'
   525     18C0  3441               	retlw	65	;'A'
   526     18C1  344E               	retlw	78	;'N'
   527     18C2  344C               	retlw	76	;'L'
   528     18C3  3441               	retlw	65	;'A'
   529     18C4  3452               	retlw	82	;'R'
   530     18C5  3420               	retlw	32	;' '
   531     18C6  344D               	retlw	77	;'M'
   532     18C7  3441               	retlw	65	;'A'
   533     18C8  344B               	retlw	75	;'K'
   534     18C9  3449               	retlw	73	;'I'
   535     18CA  344E               	retlw	78	;'N'
   536     18CB  3441               	retlw	65	;'A'
   537     18CC  3400               	retlw	0
   538     18CD                     STR_28:
   539     18CD  3420               	retlw	32	;' '
   540     18CE  3446               	retlw	70	;'F'
   541     18CF  3457               	retlw	87	;'W'
   542     18D0  3444               	retlw	68	;'D'
   543     18D1  3420               	retlw	32	;' '
   544     18D2  3420               	retlw	32	;' '
   545     18D3  3420               	retlw	32	;' '
   546     18D4  3420               	retlw	32	;' '
   547     18D5  3420               	retlw	32	;' '
   548     18D6  3420               	retlw	32	;' '
   549     18D7  3420               	retlw	32	;' '
   550     18D8  3420               	retlw	32	;' '
   551     18D9  3420               	retlw	32	;' '
   552     18DA  3420               	retlw	32	;' '
   553     18DB  3400               	retlw	0
   554     18DC                     STR_2:
   555     18DC  3477               	retlw	119	;'w'
   556     18DD  3477               	retlw	119	;'w'
   557     18DE  3477               	retlw	119	;'w'
   558     18DF  342E               	retlw	46	;'.'
   559     18E0  3462               	retlw	98	;'b'
   560     18E1  346F               	retlw	111	;'o'
   561     18E2  3472               	retlw	114	;'r'
   562     18E3  3476               	retlw	118	;'v'
   563     18E4  3465               	retlw	101	;'e'
   564     18E5  346B               	retlw	107	;'k'
   565     18E6  342E               	retlw	46	;'.'
   566     18E7  3463               	retlw	99	;'c'
   567     18E8  346F               	retlw	111	;'o'
   568     18E9  346D               	retlw	109	;'m'
   569     18EA  3400               	retlw	0
   570     18EB                     STR_34:
   571     18EB  3420               	retlw	32	;' '
   572     18EC  3452               	retlw	82	;'R'
   573     18ED  3445               	retlw	69	;'E'
   574     18EE  3457               	retlw	87	;'W'
   575     18EF  3420               	retlw	32	;' '
   576     18F0  3420               	retlw	32	;' '
   577     18F1  3420               	retlw	32	;' '
   578     18F2  3420               	retlw	32	;' '
   579     18F3  3420               	retlw	32	;' '
   580     18F4  3420               	retlw	32	;' '
   581     18F5  3420               	retlw	32	;' '
   582     18F6  3420               	retlw	32	;' '
   583     18F7  3420               	retlw	32	;' '
   584     18F8  3400               	retlw	0
   585     18F9                     STR_7:
   586     18F9  344F               	retlw	79	;'O'
   587     18FA  3449               	retlw	73	;'I'
   588     18FB  344C               	retlw	76	;'L'
   589     18FC  3420               	retlw	32	;' '
   590     18FD  3454               	retlw	84	;'T'
   591     18FE  3448               	retlw	72	;'H'
   592     18FF  3445               	retlw	69	;'E'
   593     1900  3420               	retlw	32	;' '
   594     1901  3447               	retlw	71	;'G'
   595     1902  3445               	retlw	69	;'E'
   596     1903  3441               	retlw	65	;'A'
   597     1904  3452               	retlw	82	;'R'
   598     1905  3453               	retlw	83	;'S'
   599     1906  3400               	retlw	0
   600     1907                     STR_36:
   601     1907  3420               	retlw	32	;' '
   602     1908  3453               	retlw	83	;'S'
   603     1909  3454               	retlw	84	;'T'
   604     190A  344F               	retlw	79	;'O'
   605     190B  3450               	retlw	80	;'P'
   606     190C  3420               	retlw	32	;' '
   607     190D  3420               	retlw	32	;' '
   608     190E  3420               	retlw	32	;' '
   609     190F  3420               	retlw	32	;' '
   610     1910  3420               	retlw	32	;' '
   611     1911  3420               	retlw	32	;' '
   612     1912  3420               	retlw	32	;' '
   613     1913  3400               	retlw	0
   614     1914                     STR_18:
   615     1914  3425               	retlw	37	;'%'
   616     1915  3435               	retlw	53	;'5'
   617     1916  3475               	retlw	117	;'u'
   618     1917  3468               	retlw	104	;'h'
   619     1918  3420               	retlw	32	;' '
   620     1919  3425               	retlw	37	;'%'
   621     191A  3430               	retlw	48	;'0'
   622     191B  3432               	retlw	50	;'2'
   623     191C  3475               	retlw	117	;'u'
   624     191D  346D               	retlw	109	;'m'
   625     191E  3400               	retlw	0
   626     191F                     STR_20:
   627     191F  3446               	retlw	70	;'F'
   628     1920  3465               	retlw	101	;'e'
   629     1921  3465               	retlw	101	;'e'
   630     1922  3464               	retlw	100	;'d'
   631     1923  3452               	retlw	82	;'R'
   632     1924  3461               	retlw	97	;'a'
   633     1925  3474               	retlw	116	;'t'
   634     1926  3465               	retlw	101	;'e'
   635     1927  343A               	retlw	58	;':'
   636     1928  3400               	retlw	0
   637     1929                     STR_26:
   638     1929  3420               	retlw	32	;' '
   639     192A  3446               	retlw	70	;'F'
   640     192B  3457               	retlw	87	;'W'
   641     192C  3444               	retlw	68	;'D'
   642     192D  3420               	retlw	32	;' '
   643     192E  3431               	retlw	49	;'1'
   644     192F  342E               	retlw	46	;'.'
   645     1930  3436               	retlw	54	;'6'
   646     1931  344B               	retlw	75	;'K'
   647     1932  3400               	retlw	0
   648     1933                     STR_32:
   649     1933  3420               	retlw	32	;' '
   650     1934  3452               	retlw	82	;'R'
   651     1935  3445               	retlw	69	;'E'
   652     1936  3457               	retlw	87	;'W'
   653     1937  3420               	retlw	32	;' '
   654     1938  3431               	retlw	49	;'1'
   655     1939  342E               	retlw	46	;'.'
   656     193A  3436               	retlw	54	;'6'
   657     193B  344B               	retlw	75	;'K'
   658     193C  3400               	retlw	0
   659     193D                     STR_23:
   660     193D  3425               	retlw	37	;'%'
   661     193E  3475               	retlw	117	;'u'
   662     193F  3425               	retlw	37	;'%'
   663     1940  3475               	retlw	117	;'u'
   664     1941  3425               	retlw	37	;'%'
   665     1942  3475               	retlw	117	;'u'
   666     1943  342E               	retlw	46	;'.'
   667     1944  3425               	retlw	37	;'%'
   668     1945  3475               	retlw	117	;'u'
   669     1946  3400               	retlw	0
   670     1947                     STR_24:
   671     1947  3420               	retlw	32	;' '
   672     1948  3446               	retlw	70	;'F'
   673     1949  3457               	retlw	87	;'W'
   674     194A  3444               	retlw	68	;'D'
   675     194B  3420               	retlw	32	;' '
   676     194C  344C               	retlw	76	;'L'
   677     194D  344D               	retlw	77	;'M'
   678     194E  3454               	retlw	84	;'T'
   679     194F  3400               	retlw	0
   680     1950                     STR_30:
   681     1950  3420               	retlw	32	;' '
   682     1951  3452               	retlw	82	;'R'
   683     1952  3445               	retlw	69	;'E'
   684     1953  3457               	retlw	87	;'W'
   685     1954  3420               	retlw	32	;' '
   686     1955  344C               	retlw	76	;'L'
   687     1956  344D               	retlw	77	;'M'
   688     1957  3454               	retlw	84	;'T'
   689     1958  3400               	retlw	0
   690     1959                     STR_27:
   691     1959  3473               	retlw	115	;'s'
   692     195A  3425               	retlw	37	;'%'
   693     195B  3464               	retlw	100	;'d'
   694     195C  340D               	retlw	13
   695     195D  340A               	retlw	10
   696     195E  3400               	retlw	0
   697     195F                     STR_21:
   698     195F  3425               	retlw	37	;'%'
   699     1960  3430               	retlw	48	;'0'
   700     1961  3430               	retlw	48	;'0'
   701     1962  3433               	retlw	51	;'3'
   702     1963  3475               	retlw	117	;'u'
   703     1964  3400               	retlw	0
   704     1965                     STR_25:
   705     1965  3473               	retlw	115	;'s'
   706     1966  3430               	retlw	48	;'0'
   707     1967  340D               	retlw	13
   708     1968  340A               	retlw	10
   709     1969  3400               	retlw	0
   710     196A                     STR_22:
   711     196A  3452               	retlw	82	;'R'
   712     196B  3450               	retlw	80	;'P'
   713     196C  344D               	retlw	77	;'M'
   714     196D  343A               	retlw	58	;':'
   715     196E  3400               	retlw	0
   716     196F                     STR_3:
   717     196F  3456               	retlw	86	;'V'
   718     1970  3433               	retlw	51	;'3'
   719     1971  3400               	retlw	0
   720     1965                     
   721                           	psect	cinit
   722     0011                     start_initialization:	
   723                           ; #config settings
   724                           
   725     0011                     __initialization:
   726                           
   727                           ; Clear objects allocated to COMMON
   728     0011  01F6               	clrf	__pbssCOMMON& (0+127)
   729     0012  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   730                           
   731                           ; Clear objects allocated to BANK3
   732     0013  1683               	bsf	3,5	;RP0=1, select bank3
   733     0014  1703               	bsf	3,6	;RP1=1, select bank3
   734     0015  01A0               	clrf	__pbssBANK3& (0+127)
   735     0016  01A1               	clrf	(__pbssBANK3+1)& (0+127)
   736     0017  01A2               	clrf	(__pbssBANK3+2)& (0+127)
   737     0018  01A3               	clrf	(__pbssBANK3+3)& (0+127)
   738     0019  01A4               	clrf	(__pbssBANK3+4)& (0+127)
   739     001A  01A5               	clrf	(__pbssBANK3+5)& (0+127)
   740     001B                     end_of_initialization:	
   741                           ;End of C runtime variable initialization code
   742                           
   743     001B                     __end_of__initialization:
   744     001B  0183               	clrf	3
   745     001C  120A  118A  2EA9   	ljmp	_main	;jump to C main() function
   746                           
   747                           	psect	bssCOMMON
   748     0076                     __pbssCOMMON:
   749     0076                     _kesmeSayaci:
   750     0076                     	ds	2
   751                           
   752                           	psect	bssBANK3
   753     01A0                     __pbssBANK3:
   754     01A0                     _currentTime:
   755     01A0                     	ds	6
   756                           
   757                           	psect	cstackBANK3
   758     0190                     __pcstackBANK3:
   759     0190                     main@i_324:
   760                           
   761                           ; 2 bytes @ 0x0
   762     0190                     	ds	2
   763     0192                     main@i_327:
   764                           
   765                           ; 2 bytes @ 0x2
   766     0192                     	ds	2
   767     0194                     main@i_330:
   768                           
   769                           ; 2 bytes @ 0x4
   770     0194                     	ds	2
   771     0196                     main@i_333:
   772                           
   773                           ; 2 bytes @ 0x6
   774     0196                     	ds	2
   775     0198                     main@binler:
   776                           
   777                           ; 2 bytes @ 0x8
   778     0198                     	ds	2
   779     019A                     main@integerPart:
   780                           
   781                           ; 2 bytes @ 0xA
   782     019A                     	ds	2
   783     019C                     main@negativeFeedValue:
   784                           
   785                           ; 2 bytes @ 0xC
   786     019C                     	ds	2
   787     019E                     main@displayValue:
   788                           
   789                           ; 2 bytes @ 0xE
   790     019E                     	ds	2
   791                           
   792                           	psect	cstackBANK1
   793     00A0                     __pcstackBANK1:
   794     00A0                     main@combinedText_375:
   795                           
   796                           ; 20 bytes @ 0x0
   797     00A0                     	ds	20
   798     00B4                     main@lcdText:
   799                           
   800                           ; 9 bytes @ 0x14
   801     00B4                     	ds	9
   802     00BD                     main@uartMessage:
   803                           
   804                           ; 8 bytes @ 0x1D
   805     00BD                     	ds	8
   806     00C5                     main@uartMessage_371:
   807                           
   808                           ; 8 bytes @ 0x25
   809     00C5                     	ds	8
   810     00CD                     main@gostermeliklcd:
   811                           
   812                           ; 4 bytes @ 0x2D
   813     00CD                     	ds	4
   814     00D1                     main@rpmString:
   815                           
   816                           ; 5 bytes @ 0x31
   817     00D1                     	ds	5
   818     00D6                     main@adcValue2:
   819                           
   820                           ; 2 bytes @ 0x36
   821     00D6                     	ds	2
   822     00D8                     main@adcValue3:
   823                           
   824                           ; 2 bytes @ 0x38
   825     00D8                     	ds	2
   826     00DA                     main@onlar:
   827                           
   828                           ; 2 bytes @ 0x3A
   829     00DA                     	ds	2
   830     00DC                     main@birler:
   831                           
   832                           ; 2 bytes @ 0x3C
   833     00DC                     	ds	2
   834     00DE                     main@negativeDisplayValue:
   835                           
   836                           ; 2 bytes @ 0x3E
   837     00DE                     	ds	2
   838     00E0                     main@adcString1:
   839                           
   840                           ; 4 bytes @ 0x40
   841     00E0                     	ds	4
   842     00E4                     main@ilkAcilis:
   843                           
   844                           ; 2 bytes @ 0x44
   845     00E4                     	ds	2
   846     00E6                     main@adcValue1:
   847                           
   848                           ; 4 bytes @ 0x46
   849     00E6                     	ds	4
   850     00EA                     main@yuzler:
   851                           
   852                           ; 2 bytes @ 0x4A
   853     00EA                     	ds	2
   854     00EC                     main@i:
   855                           
   856                           ; 2 bytes @ 0x4C
   857     00EC                     	ds	2
   858     00EE                     main@i_321:
   859                           
   860                           ; 2 bytes @ 0x4E
   861     00EE                     	ds	2
   862                           
   863                           	psect	cstackCOMMON
   864     0070                     __pcstackCOMMON:
   865     0070                     ?_isdigit:
   866     0070                     ?_UART_Initialize:	
   867                           ; 1 bit 
   868                           
   869     0070                     ?_Lcd_Port:	
   870                           ; 1 bytes @ 0x0
   871                           
   872     0070                     ?_Lcd_Cmd:	
   873                           ; 1 bytes @ 0x0
   874                           
   875     0070                     ?_Lcd_Clear:	
   876                           ; 1 bytes @ 0x0
   877                           
   878     0070                     ?_Lcd_Init:	
   879                           ; 1 bytes @ 0x0
   880                           
   881     0070                     ?_Lcd_Write_Char:	
   882                           ; 1 bytes @ 0x0
   883                           
   884     0070                     ?_incrementTime:	
   885                           ; 1 bytes @ 0x0
   886                           
   887     0070                     ??_incrementTime:	
   888                           ; 1 bytes @ 0x0
   889                           
   890     0070                     ?_timer_isr:	
   891                           ; 1 bytes @ 0x0
   892                           
   893     0070                     ?_UART_Write:	
   894                           ; 1 bytes @ 0x0
   895                           
   896     0070                     ?_main:	
   897                           ; 1 bytes @ 0x0
   898                           
   899                           
   900                           ; 2 bytes @ 0x0
   901     0070                     	ds	2
   902     0072                     incrementTime@time:
   903                           
   904                           ; 1 bytes @ 0x2
   905     0072                     	ds	1
   906     0073                     ??_timer_isr:
   907                           
   908                           ; 1 bytes @ 0x3
   909     0073                     	ds	3
   910     0076                     ??_UART_Initialize:
   911     0076                     ??_isdigit:	
   912                           ; 1 bytes @ 0x6
   913                           
   914     0076                     ??_Lcd_Port:	
   915                           ; 1 bytes @ 0x6
   916                           
   917     0076                     ??_Lcd_Clear:	
   918                           ; 1 bytes @ 0x6
   919                           
   920     0076                     ??_writeEEPROM:	
   921                           ; 1 bytes @ 0x6
   922                           
   923     0076                     ??_UART_Write:	
   924                           ; 1 bytes @ 0x6
   925                           
   926     0076                     ??___wmul:	
   927                           ; 1 bytes @ 0x6
   928                           
   929     0076                     ??___lwdiv:	
   930                           ; 1 bytes @ 0x6
   931                           
   932     0076                     ??___lwmod:	
   933                           ; 1 bytes @ 0x6
   934                           
   935                           
   936                           	psect	cstackBANK0
   937     0020                     __pcstackBANK0:	
   938                           ; 1 bytes @ 0x6
   939                           
   940     0020                     ?_writeEEPROM:
   941     0020                     ?__Umul8_16:	
   942                           ; 1 bytes @ 0x0
   943                           
   944     0020                     ?_readEEPROM:	
   945                           ; 2 bytes @ 0x0
   946                           
   947     0020                     ?___wmul:	
   948                           ; 2 bytes @ 0x0
   949                           
   950     0020                     ?___fltol:	
   951                           ; 2 bytes @ 0x0
   952                           
   953     0020                     ?___fldiv:	
   954                           ; 4 bytes @ 0x0
   955                           
   956     0020                     ?___xxtofl:	
   957                           ; 4 bytes @ 0x0
   958                           
   959     0020                     Lcd_Port@a:	
   960                           ; 4 bytes @ 0x0
   961                           
   962     0020                     UART_Write@data:	
   963                           ; 1 bytes @ 0x0
   964                           
   965     0020                     __Umul8_16@multiplicand:	
   966                           ; 1 bytes @ 0x0
   967                           
   968     0020                     _isdigit$850:	
   969                           ; 1 bytes @ 0x0
   970                           
   971     0020                     writeEEPROM@address:	
   972                           ; 1 bytes @ 0x0
   973                           
   974     0020                     readEEPROM@address:	
   975                           ; 2 bytes @ 0x0
   976                           
   977     0020                     ___wmul@multiplier:	
   978                           ; 2 bytes @ 0x0
   979                           
   980     0020                     ___fltol@f1:	
   981                           ; 2 bytes @ 0x0
   982                           
   983     0020                     ___fldiv@a:	
   984                           ; 4 bytes @ 0x0
   985                           
   986     0020                     ___xxtofl@val:	
   987                           ; 4 bytes @ 0x0
   988                           
   989                           
   990                           ; 4 bytes @ 0x0
   991     0020                     	ds	1
   992     0021                     ?_UART_Write_Text:
   993     0021                     ??_Lcd_Cmd:	
   994                           ; 1 bytes @ 0x1
   995                           
   996     0021                     ??_Lcd_Write_Char:	
   997                           ; 1 bytes @ 0x1
   998                           
   999     0021                     isdigit@c:	
  1000                           ; 1 bytes @ 0x1
  1001                           
  1002     0021                     UART_Write_Text@text:	
  1003                           ; 1 bytes @ 0x1
  1004                           
  1005                           
  1006                           ; 2 bytes @ 0x1
  1007     0021                     	ds	1
  1008     0022                     ??__Umul8_16:
  1009     0022                     ??_readEEPROM:	
  1010                           ; 1 bytes @ 0x2
  1011                           
  1012     0022                     Lcd_Write_Char@temp:	
  1013                           ; 1 bytes @ 0x2
  1014                           
  1015     0022                     writeEEPROM@data:	
  1016                           ; 1 bytes @ 0x2
  1017                           
  1018     0022                     ___wmul@multiplicand:	
  1019                           ; 2 bytes @ 0x2
  1020                           
  1021                           
  1022                           ; 2 bytes @ 0x2
  1023     0022                     	ds	1
  1024     0023                     ??_UART_Write_Text:
  1025     0023                     Lcd_Cmd@a:	
  1026                           ; 1 bytes @ 0x3
  1027                           
  1028     0023                     Lcd_Write_Char@y:	
  1029                           ; 1 bytes @ 0x3
  1030                           
  1031                           
  1032                           ; 1 bytes @ 0x3
  1033     0023                     	ds	1
  1034     0024                     ?_Lcd_Set_Cursor:
  1035     0024                     ??_Lcd_Init:	
  1036                           ; 1 bytes @ 0x4
  1037                           
  1038     0024                     ??___fltol:	
  1039                           ; 1 bytes @ 0x4
  1040                           
  1041     0024                     ??___xxtofl:	
  1042                           ; 1 bytes @ 0x4
  1043                           
  1044     0024                     Lcd_Set_Cursor@b:	
  1045                           ; 1 bytes @ 0x4
  1046                           
  1047     0024                     Lcd_Write_Char@a:	
  1048                           ; 1 bytes @ 0x4
  1049                           
  1050     0024                     ___wmul@product:	
  1051                           ; 1 bytes @ 0x4
  1052                           
  1053     0024                     __Umul8_16@product:	
  1054                           ; 2 bytes @ 0x4
  1055                           
  1056     0024                     ___fldiv@b:	
  1057                           ; 2 bytes @ 0x4
  1058                           
  1059                           
  1060                           ; 4 bytes @ 0x4
  1061     0024                     	ds	1
  1062     0025                     ??_Lcd_Set_Cursor:
  1063     0025                     ?_Lcd_Write_String:	
  1064                           ; 1 bytes @ 0x5
  1065                           
  1066     0025                     Lcd_Write_String@a:	
  1067                           ; 1 bytes @ 0x5
  1068                           
  1069                           
  1070                           ; 2 bytes @ 0x5
  1071     0025                     	ds	1
  1072     0026                     ?___lwdiv:
  1073     0026                     Lcd_Set_Cursor@a:	
  1074                           ; 2 bytes @ 0x6
  1075                           
  1076     0026                     UART_Write_Text@i:	
  1077                           ; 1 bytes @ 0x6
  1078                           
  1079     0026                     ___lwdiv@divisor:	
  1080                           ; 2 bytes @ 0x6
  1081                           
  1082     0026                     __Umul8_16@word_mpld:	
  1083                           ; 2 bytes @ 0x6
  1084                           
  1085                           
  1086                           ; 2 bytes @ 0x6
  1087     0026                     	ds	1
  1088     0027                     ??_Lcd_Write_String:
  1089     0027                     Lcd_Set_Cursor@z:	
  1090                           ; 1 bytes @ 0x7
  1091                           
  1092                           
  1093                           ; 1 bytes @ 0x7
  1094     0027                     	ds	1
  1095     0028                     ??___fldiv:
  1096     0028                     Lcd_Set_Cursor@y:	
  1097                           ; 1 bytes @ 0x8
  1098                           
  1099     0028                     ___fltol@sign1:	
  1100                           ; 1 bytes @ 0x8
  1101                           
  1102     0028                     __Umul8_16@multiplier:	
  1103                           ; 1 bytes @ 0x8
  1104                           
  1105     0028                     ___xxtofl@sign:	
  1106                           ; 1 bytes @ 0x8
  1107                           
  1108     0028                     ___lwdiv@dividend:	
  1109                           ; 1 bytes @ 0x8
  1110                           
  1111                           
  1112                           ; 2 bytes @ 0x8
  1113     0028                     	ds	1
  1114     0029                     Lcd_Set_Cursor@temp:
  1115     0029                     ___fltol@exp1:	
  1116                           ; 1 bytes @ 0x9
  1117                           
  1118     0029                     ___xxtofl@exp:	
  1119                           ; 1 bytes @ 0x9
  1120                           
  1121                           
  1122                           ; 1 bytes @ 0x9
  1123     0029                     	ds	1
  1124     002A                     Lcd_Write_String@i:
  1125     002A                     ___lwdiv@quotient:	
  1126                           ; 2 bytes @ 0xA
  1127                           
  1128     002A                     ___xxtofl@arg:	
  1129                           ; 2 bytes @ 0xA
  1130                           
  1131                           
  1132                           ; 4 bytes @ 0xA
  1133     002A                     	ds	2
  1134     002C                     ___lwdiv@counter:
  1135                           
  1136                           ; 1 bytes @ 0xC
  1137     002C                     	ds	1
  1138     002D                     ?___lwmod:
  1139     002D                     ___lwmod@divisor:	
  1140                           ; 2 bytes @ 0xD
  1141                           
  1142     002D                     ___fldiv@rem:	
  1143                           ; 2 bytes @ 0xD
  1144                           
  1145                           
  1146                           ; 4 bytes @ 0xD
  1147     002D                     	ds	2
  1148     002F                     ___lwmod@dividend:
  1149                           
  1150                           ; 2 bytes @ 0xF
  1151     002F                     	ds	2
  1152     0031                     ___lwmod@counter:
  1153     0031                     ___fldiv@sign:	
  1154                           ; 1 bytes @ 0x11
  1155                           
  1156                           
  1157                           ; 1 bytes @ 0x11
  1158     0031                     	ds	1
  1159     0032                     ?_sprintf:
  1160     0032                     sprintf@f:	
  1161                           ; 2 bytes @ 0x12
  1162                           
  1163     0032                     ___fldiv@new_exp:	
  1164                           ; 2 bytes @ 0x12
  1165                           
  1166                           
  1167                           ; 2 bytes @ 0x12
  1168     0032                     	ds	2
  1169     0034                     ___fldiv@grs:
  1170                           
  1171                           ; 4 bytes @ 0x14
  1172     0034                     	ds	4
  1173     0038                     ___fldiv@bexp:
  1174                           
  1175                           ; 1 bytes @ 0x18
  1176     0038                     	ds	1
  1177     0039                     ___fldiv@aexp:
  1178                           
  1179                           ; 1 bytes @ 0x19
  1180     0039                     	ds	1
  1181     003A                     ?___flmul:
  1182     003A                     ___flmul@b:	
  1183                           ; 4 bytes @ 0x1A
  1184                           
  1185                           
  1186                           ; 4 bytes @ 0x1A
  1187     003A                     	ds	2
  1188     003C                     ??_sprintf:
  1189                           
  1190                           ; 1 bytes @ 0x1C
  1191     003C                     	ds	2
  1192     003E                     ___flmul@a:
  1193                           
  1194                           ; 4 bytes @ 0x1E
  1195     003E                     	ds	2
  1196     0040                     sprintf@prec:
  1197                           
  1198                           ; 1 bytes @ 0x20
  1199     0040                     	ds	1
  1200     0041                     sprintf@ap:
  1201                           
  1202                           ; 1 bytes @ 0x21
  1203     0041                     	ds	1
  1204     0042                     ??___flmul:
  1205     0042                     sprintf@val:	
  1206                           ; 1 bytes @ 0x22
  1207                           
  1208                           
  1209                           ; 2 bytes @ 0x22
  1210     0042                     	ds	2
  1211     0044                     sprintf@flag:
  1212                           
  1213                           ; 1 bytes @ 0x24
  1214     0044                     	ds	1
  1215     0045                     sprintf@width:
  1216                           
  1217                           ; 2 bytes @ 0x25
  1218     0045                     	ds	2
  1219     0047                     sprintf@c:
  1220     0047                     ___flmul@sign:	
  1221                           ; 1 bytes @ 0x27
  1222                           
  1223                           
  1224                           ; 1 bytes @ 0x27
  1225     0047                     	ds	1
  1226     0048                     sprintf@sp:
  1227     0048                     ___flmul@aexp:	
  1228                           ; 1 bytes @ 0x28
  1229                           
  1230                           
  1231                           ; 1 bytes @ 0x28
  1232     0048                     	ds	1
  1233     0049                     ___flmul@grs:
  1234                           
  1235                           ; 4 bytes @ 0x29
  1236     0049                     	ds	4
  1237     004D                     ___flmul@bexp:
  1238                           
  1239                           ; 1 bytes @ 0x2D
  1240     004D                     	ds	1
  1241     004E                     ___flmul@prod:
  1242                           
  1243                           ; 4 bytes @ 0x2E
  1244     004E                     	ds	4
  1245     0052                     ___flmul@temp:
  1246                           
  1247                           ; 2 bytes @ 0x32
  1248     0052                     	ds	2
  1249     0054                     ??_main:
  1250                           
  1251                           ; 1 bytes @ 0x34
  1252     0054                     	ds	4
  1253     0058                     main@combinedText:
  1254                           
  1255                           ; 20 bytes @ 0x38
  1256     0058                     	ds	20
  1257     006C                     main@rpmValue:
  1258                           
  1259                           ; 2 bytes @ 0x4C
  1260     006C                     	ds	2
  1261                           
  1262                           	psect	maintext
  1263     06A9                     __pmaintext:	
  1264 ;;
  1265 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1266 ;;
  1267 ;; *************** function _main *****************
  1268 ;; Defined at:
  1269 ;;		line 87 in file "main.c"
  1270 ;; Parameters:    Size  Location     Type
  1271 ;;		None
  1272 ;; Auto vars:     Size  Location     Type
  1273 ;;  uartMessage     8   37[BANK1 ] unsigned char [8]
  1274 ;;  uartMessage     8   29[BANK1 ] unsigned char [8]
  1275 ;;  combinedText   20    0[BANK1 ] unsigned char [20]
  1276 ;;  negativeDisp    2   62[BANK1 ] int 
  1277 ;;  negativeFeed    2   12[BANK3 ] int 
  1278 ;;  combinedText   20   56[BANK0 ] unsigned char [20]
  1279 ;;  i               2    6[BANK3 ] int 
  1280 ;;  i               2    4[BANK3 ] int 
  1281 ;;  i               2    2[BANK3 ] int 
  1282 ;;  i               2    0[BANK3 ] int 
  1283 ;;  i               2   78[BANK1 ] int 
  1284 ;;  i               2   76[BANK1 ] int 
  1285 ;;  rpmString       5   49[BANK1 ] unsigned char [5]
  1286 ;;  adcString1      4   64[BANK1 ] unsigned char [4]
  1287 ;;  gostermelikl    4   45[BANK1 ] float 
  1288 ;;  integerPart     2   10[BANK3 ] unsigned int 
  1289 ;;  binler          2    8[BANK3 ] int 
  1290 ;;  yuzler          2   74[BANK1 ] int 
  1291 ;;  birler          2   60[BANK1 ] int 
  1292 ;;  onlar           2   58[BANK1 ] int 
  1293 ;;  rpmValue        2   76[BANK0 ] unsigned int 
  1294 ;;  lcdText         9   20[BANK1 ] unsigned char [9]
  1295 ;;  adcValue1       4   70[BANK1 ] float 
  1296 ;;  rpmtofloat      4    0        float 
  1297 ;;  displayValue    2   14[BANK3 ] unsigned int 
  1298 ;;  ilkAcilis       2   68[BANK1 ] int 
  1299 ;;  adcValue3       2   56[BANK1 ] unsigned int 
  1300 ;;  adcValue2       2   54[BANK1 ] unsigned int 
  1301 ;;  a               2    0        unsigned int 
  1302 ;; Return value:  Size  Location     Type
  1303 ;;                  2  174[None  ] int 
  1304 ;; Registers used:
  1305 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1306 ;; Tracked objects:
  1307 ;;		On entry : B00/0
  1308 ;;		On exit  : 0/0
  1309 ;;		Unchanged: 0/0
  1310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1311 ;;      Params:         0       0       0       0       0
  1312 ;;      Locals:         0      22      80      16       0
  1313 ;;      Temps:          0       4       0       0       0
  1314 ;;      Totals:         0      26      80      16       0
  1315 ;;Total ram usage:      122 bytes
  1316 ;; Hardware stack levels required when called: 5
  1317 ;; This function calls:
  1318 ;;		_Lcd_Clear
  1319 ;;		_Lcd_Init
  1320 ;;		_Lcd_Set_Cursor
  1321 ;;		_Lcd_Write_String
  1322 ;;		_UART_Initialize
  1323 ;;		_UART_Write_Text
  1324 ;;		___fldiv
  1325 ;;		___flmul
  1326 ;;		___fltol
  1327 ;;		___lwdiv
  1328 ;;		___lwmod
  1329 ;;		___wmul
  1330 ;;		___xxtofl
  1331 ;;		_readEEPROM
  1332 ;;		_sprintf
  1333 ;;		_writeEEPROM
  1334 ;; This function is called by:
  1335 ;;		Startup code after reset
  1336 ;; This function uses a non-reentrant model
  1337 ;;
  1338                           
  1339     06A9                     _main:	
  1340                           ;psect for function _main
  1341                           
  1342     06A9                     l3944:	
  1343                           ;incstack = 0
  1344                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1345                           
  1346                           
  1347                           ;main.c: 89:   unsigned int a;;main.c: 92: TRISB = 0b00000000;
  1348     06A9  1683               	bsf	3,5	;RP0=1, select bank1
  1349     06AA  1303               	bcf	3,6	;RP1=0, select bank1
  1350     06AB  0186               	clrf	6	;volatile
  1351     06AC                     l3946:
  1352                           
  1353                           ;main.c: 93: TRISA4 = 0;
  1354     06AC  1205               	bcf	5,4	;volatile
  1355     06AD                     l3948:
  1356                           
  1357                           ;main.c: 94: TRISE0 = 1;
  1358     06AD  1409               	bsf	9,0	;volatile
  1359     06AE                     l3950:
  1360                           
  1361                           ;main.c: 95: TRISE1 = 1;
  1362     06AE  1489               	bsf	9,1	;volatile
  1363     06AF                     l3952:
  1364                           
  1365                           ;main.c: 96: TRISC1 = 1;
  1366     06AF  1487               	bsf	7,1	;volatile
  1367     06B0                     l3954:
  1368                           
  1369                           ;main.c: 97: TRISC2 = 1;
  1370     06B0  1507               	bsf	7,2	;volatile
  1371     06B1                     l3956:
  1372                           
  1373                           ;main.c: 98: TRISE2 = 1;
  1374     06B1  1509               	bsf	9,2	;volatile
  1375     06B2                     l3958:
  1376                           
  1377                           ;main.c: 99: TRISC0 = 1;
  1378     06B2  1407               	bsf	7,0	;volatile
  1379     06B3                     l3960:
  1380                           
  1381                           ;main.c: 100: TRISC3 = 1;
  1382     06B3  1587               	bsf	7,3	;volatile
  1383     06B4                     l3962:
  1384                           
  1385                           ;main.c: 101: TRISD0 = 1;
  1386     06B4  1408               	bsf	8,0	;volatile
  1387     06B5                     l3964:
  1388                           
  1389                           ;main.c: 103: TRISA1 = 1;
  1390     06B5  1485               	bsf	5,1	;volatile
  1391     06B6                     l3966:
  1392                           
  1393                           ;main.c: 104: TRISA2 = 1;
  1394     06B6  1505               	bsf	5,2	;volatile
  1395     06B7                     l3968:
  1396                           
  1397                           ;main.c: 105: TRISA3 = 1;
  1398     06B7  1585               	bsf	5,3	;volatile
  1399     06B8                     l3970:
  1400                           
  1401                           ;main.c: 106: Lcd_Init();
  1402     06B8  160A  118A  249C  120A  118A  	fcall	_Lcd_Init
  1403     06BD                     l3972:
  1404                           
  1405                           ;main.c: 108: TRISC6 = 0;
  1406     06BD  1683               	bsf	3,5	;RP0=1, select bank1
  1407     06BE  1303               	bcf	3,6	;RP1=0, select bank1
  1408     06BF  1307               	bcf	7,6	;volatile
  1409     06C0                     l3974:
  1410                           
  1411                           ;main.c: 109: TRISC7 = 1;
  1412     06C0  1787               	bsf	7,7	;volatile
  1413     06C1                     l3976:
  1414                           
  1415                           ;main.c: 112: TRISA0 = 0;
  1416     06C1  1005               	bcf	5,0	;volatile
  1417     06C2                     l3978:
  1418                           
  1419                           ;main.c: 113: TRISA5 = 0;
  1420     06C2  1285               	bcf	5,5	;volatile
  1421     06C3                     l3980:
  1422                           
  1423                           ;main.c: 114: TRISC4 = 0;
  1424     06C3  1207               	bcf	7,4	;volatile
  1425     06C4                     l3982:
  1426                           
  1427                           ;main.c: 115: TRISC5 = 0;
  1428     06C4  1287               	bcf	7,5	;volatile
  1429     06C5                     l3984:
  1430                           
  1431                           ;main.c: 116: TRISD = 0b00000001;
  1432     06C5  3001               	movlw	1
  1433     06C6  0088               	movwf	8	;volatile
  1434     06C7                     l3986:
  1435                           
  1436                           ;main.c: 119:   _delay((unsigned long)((100)*(4000000/4000.0)));
  1437     06C7  3082               	movlw	130
  1438     06C8  1283               	bcf	3,5	;RP0=0, select bank0
  1439     06C9  1303               	bcf	3,6	;RP1=0, select bank0
  1440     06CA  00D5               	movwf	??_main+1
  1441     06CB  30DD               	movlw	221
  1442     06CC  00D4               	movwf	??_main
  1443     06CD                     u6077:
  1444     06CD  0BD4               	decfsz	??_main,f
  1445     06CE  2ECD               	goto	u6077
  1446     06CF  0BD5               	decfsz	??_main+1,f
  1447     06D0  2ECD               	goto	u6077
  1448     06D1                     l3988:
  1449                           
  1450                           ;main.c: 120:   RA4 = 0;
  1451     06D1  1283               	bcf	3,5	;RP0=0, select bank0
  1452     06D2  1303               	bcf	3,6	;RP1=0, select bank0
  1453     06D3  1205               	bcf	5,4	;volatile
  1454     06D4                     l3990:
  1455                           
  1456                           ;main.c: 124:     currentTime.hours = readEEPROM(0x00);
  1457     06D4  3000               	movlw	0
  1458     06D5  00A0               	movwf	readEEPROM@address
  1459     06D6  00A1               	movwf	readEEPROM@address+1
  1460     06D7  160A  118A  2236  120A  118A  	fcall	_readEEPROM
  1461     06DC  1283               	bcf	3,5	;RP0=0, select bank0
  1462     06DD  1303               	bcf	3,6	;RP1=0, select bank0
  1463     06DE  0821               	movf	?_readEEPROM+1,w
  1464     06DF  1683               	bsf	3,5	;RP0=1, select bank3
  1465     06E0  1703               	bsf	3,6	;RP1=1, select bank3
  1466     06E1  00A1               	movwf	(_currentTime+1)^(0+384)
  1467     06E2  1283               	bcf	3,5	;RP0=0, select bank0
  1468     06E3  1303               	bcf	3,6	;RP1=0, select bank0
  1469     06E4  0820               	movf	?_readEEPROM,w
  1470     06E5  1683               	bsf	3,5	;RP0=1, select bank3
  1471     06E6  1703               	bsf	3,6	;RP1=1, select bank3
  1472     06E7  00A0               	movwf	_currentTime^(0+384)
  1473     06E8                     l3992:
  1474                           
  1475                           ;main.c: 125:     currentTime.minutes = readEEPROM(0x01);
  1476     06E8  3001               	movlw	1
  1477     06E9  1283               	bcf	3,5	;RP0=0, select bank0
  1478     06EA  1303               	bcf	3,6	;RP1=0, select bank0
  1479     06EB  00A0               	movwf	readEEPROM@address
  1480     06EC  3000               	movlw	0
  1481     06ED  00A1               	movwf	readEEPROM@address+1
  1482     06EE  160A  118A  2236  120A  118A  	fcall	_readEEPROM
  1483     06F3  1283               	bcf	3,5	;RP0=0, select bank0
  1484     06F4  1303               	bcf	3,6	;RP1=0, select bank0
  1485     06F5  0821               	movf	?_readEEPROM+1,w
  1486     06F6  1683               	bsf	3,5	;RP0=1, select bank3
  1487     06F7  1703               	bsf	3,6	;RP1=1, select bank3
  1488     06F8  00A3               	movwf	((_currentTime+1)^(0+384)+2)
  1489     06F9  1283               	bcf	3,5	;RP0=0, select bank0
  1490     06FA  1303               	bcf	3,6	;RP1=0, select bank0
  1491     06FB  0820               	movf	?_readEEPROM,w
  1492     06FC  1683               	bsf	3,5	;RP0=1, select bank3
  1493     06FD  1703               	bsf	3,6	;RP1=1, select bank3
  1494     06FE  00A2               	movwf	(_currentTime^(0+384)+2)
  1495     06FF                     l3994:
  1496                           
  1497                           ;main.c: 126:     currentTime.seconds = readEEPROM(0x02);
  1498     06FF  3002               	movlw	2
  1499     0700  1283               	bcf	3,5	;RP0=0, select bank0
  1500     0701  1303               	bcf	3,6	;RP1=0, select bank0
  1501     0702  00A0               	movwf	readEEPROM@address
  1502     0703  3000               	movlw	0
  1503     0704  00A1               	movwf	readEEPROM@address+1
  1504     0705  160A  118A  2236  120A  118A  	fcall	_readEEPROM
  1505     070A  1283               	bcf	3,5	;RP0=0, select bank0
  1506     070B  1303               	bcf	3,6	;RP1=0, select bank0
  1507     070C  0821               	movf	?_readEEPROM+1,w
  1508     070D  1683               	bsf	3,5	;RP0=1, select bank3
  1509     070E  1703               	bsf	3,6	;RP1=1, select bank3
  1510     070F  00A5               	movwf	((_currentTime+1)^(0+384)+4)
  1511     0710  1283               	bcf	3,5	;RP0=0, select bank0
  1512     0711  1303               	bcf	3,6	;RP1=0, select bank0
  1513     0712  0820               	movf	?_readEEPROM,w
  1514     0713  1683               	bsf	3,5	;RP0=1, select bank3
  1515     0714  1703               	bsf	3,6	;RP1=1, select bank3
  1516     0715  00A4               	movwf	(_currentTime^(0+384)+4)
  1517     0716                     l3996:
  1518                           
  1519                           ;main.c: 127:     char lcdText[9];;main.c: 129:     OPTION_REGbits.T0CS = 0;
  1520     0716  1683               	bsf	3,5	;RP0=1, select bank1
  1521     0717  1303               	bcf	3,6	;RP1=0, select bank1
  1522     0718  1281               	bcf	1,5	;volatile
  1523     0719                     l3998:
  1524                           
  1525                           ;main.c: 130:     OPTION_REGbits.PSA = 0;
  1526     0719  1181               	bcf	1,3	;volatile
  1527     071A                     l4000:
  1528                           
  1529                           ;main.c: 131:     OPTION_REGbits.PS2 = 1;
  1530     071A  1501               	bsf	1,2	;volatile
  1531     071B                     l4002:
  1532                           
  1533                           ;main.c: 132:     OPTION_REGbits.PS1 = 1;
  1534     071B  1481               	bsf	1,1	;volatile
  1535     071C                     l4004:
  1536                           
  1537                           ;main.c: 133:     OPTION_REGbits.PS0 = 1;
  1538     071C  1401               	bsf	1,0	;volatile
  1539     071D                     l4006:
  1540                           
  1541                           ;main.c: 136:     INTCONbits.GIE = 1;
  1542     071D  178B               	bsf	11,7	;volatile
  1543     071E                     l4008:
  1544                           
  1545                           ;main.c: 137:     INTCONbits.PEIE = 1;
  1546     071E  170B               	bsf	11,6	;volatile
  1547     071F                     l4010:
  1548                           
  1549                           ;main.c: 138:     INTCONbits.T0IE = 1;
  1550     071F  168B               	bsf	11,5	;volatile
  1551     0720                     l4012:
  1552                           
  1553                           ;main.c: 141:     Lcd_Clear();
  1554     0720  160A  118A  21F7  120A  118A  	fcall	_Lcd_Clear
  1555     0725                     l4014:
  1556                           
  1557                           ;main.c: 142:     Lcd_Set_Cursor(1,1);
  1558     0725  1283               	bcf	3,5	;RP0=0, select bank0
  1559     0726  1303               	bcf	3,6	;RP1=0, select bank0
  1560     0727  01A4               	clrf	Lcd_Set_Cursor@b
  1561     0728  0AA4               	incf	Lcd_Set_Cursor@b,f
  1562     0729  3001               	movlw	1
  1563     072A  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  1564     072F                     l4016:
  1565                           
  1566                           ;main.c: 143:     Lcd_Write_String("UZMANLAR MAKINA");
  1567     072F  30BD               	movlw	low (STR_1| (0+32768))
  1568     0730  1283               	bcf	3,5	;RP0=0, select bank0
  1569     0731  1303               	bcf	3,6	;RP1=0, select bank0
  1570     0732  00A5               	movwf	Lcd_Write_String@a
  1571     0733  3098               	movlw	high (STR_1| (0+32768))
  1572     0734  00A6               	movwf	Lcd_Write_String@a+1
  1573     0735  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  1574     073A                     l4018:
  1575                           
  1576                           ;main.c: 144:     Lcd_Set_Cursor(2,1);
  1577     073A  1283               	bcf	3,5	;RP0=0, select bank0
  1578     073B  1303               	bcf	3,6	;RP1=0, select bank0
  1579     073C  01A4               	clrf	Lcd_Set_Cursor@b
  1580     073D  0AA4               	incf	Lcd_Set_Cursor@b,f
  1581     073E  3002               	movlw	2
  1582     073F  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  1583     0744                     l4020:
  1584                           
  1585                           ;main.c: 145:     Lcd_Write_String("www.borvek.com");
  1586     0744  30DC               	movlw	low (STR_2| (0+32768))
  1587     0745  1283               	bcf	3,5	;RP0=0, select bank0
  1588     0746  1303               	bcf	3,6	;RP1=0, select bank0
  1589     0747  00A5               	movwf	Lcd_Write_String@a
  1590     0748  3098               	movlw	high (STR_2| (0+32768))
  1591     0749  00A6               	movwf	Lcd_Write_String@a+1
  1592     074A  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  1593     074F                     l4022:
  1594                           
  1595                           ;main.c: 146:     Lcd_Set_Cursor(2,17);
  1596     074F  3011               	movlw	17
  1597     0750  1283               	bcf	3,5	;RP0=0, select bank0
  1598     0751  1303               	bcf	3,6	;RP1=0, select bank0
  1599     0752  00A4               	movwf	Lcd_Set_Cursor@b
  1600     0753  3002               	movlw	2
  1601     0754  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  1602     0759                     l4024:
  1603                           
  1604                           ;main.c: 147:     Lcd_Write_String("V3");
  1605     0759  306F               	movlw	low (STR_3| (0+32768))
  1606     075A  1283               	bcf	3,5	;RP0=0, select bank0
  1607     075B  1303               	bcf	3,6	;RP1=0, select bank0
  1608     075C  00A5               	movwf	Lcd_Write_String@a
  1609     075D  3099               	movlw	high (STR_3| (0+32768))
  1610     075E  00A6               	movwf	Lcd_Write_String@a+1
  1611     075F  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  1612     0764                     l4026:
  1613                           
  1614                           ;main.c: 149:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1615     0764  3006               	movlw	6
  1616     0765  1283               	bcf	3,5	;RP0=0, select bank0
  1617     0766  1303               	bcf	3,6	;RP1=0, select bank0
  1618     0767  00D6               	movwf	??_main+2
  1619     0768  3013               	movlw	19
  1620     0769  00D5               	movwf	??_main+1
  1621     076A  30AD               	movlw	173
  1622     076B  00D4               	movwf	??_main
  1623     076C                     u6087:
  1624     076C  0BD4               	decfsz	??_main,f
  1625     076D  2F6C               	goto	u6087
  1626     076E  0BD5               	decfsz	??_main+1,f
  1627     076F  2F6C               	goto	u6087
  1628     0770  0BD6               	decfsz	??_main+2,f
  1629     0771  2F6C               	goto	u6087
  1630     0772                     l4028:
  1631                           
  1632                           ;main.c: 150:     Lcd_Clear();
  1633     0772  160A  118A  21F7  120A  118A  	fcall	_Lcd_Clear
  1634     0777                     l4030:
  1635                           
  1636                           ;main.c: 155:     SPBRG = ((4000000/16)/19200) - 1;
  1637     0777  300C               	movlw	12
  1638     0778  1683               	bsf	3,5	;RP0=1, select bank1
  1639     0779  1303               	bcf	3,6	;RP1=0, select bank1
  1640     077A  0099               	movwf	25	;volatile
  1641     077B                     l4032:
  1642                           
  1643                           ;main.c: 156:     UART_Initialize();
  1644     077B  160A  118A  2212  120A  118A  	fcall	_UART_Initialize
  1645     0780                     l4034:
  1646                           
  1647                           ;main.c: 157: unsigned int displayValue = 0;
  1648     0780  1683               	bsf	3,5	;RP0=1, select bank3
  1649     0781  1703               	bsf	3,6	;RP1=1, select bank3
  1650     0782  019E               	clrf	main@displayValue^(0+384)
  1651     0783  019F               	clrf	(main@displayValue+1)^(0+384)
  1652     0784                     l4036:
  1653                           
  1654                           ;main.c: 162:     ADCON1bits.ADFM = 1;
  1655     0784  1683               	bsf	3,5	;RP0=1, select bank1
  1656     0785  1303               	bcf	3,6	;RP1=0, select bank1
  1657     0786  179F               	bsf	31,7	;volatile
  1658     0787                     l4038:
  1659                           
  1660                           ;main.c: 163:     ADCON1bits.PCFG = 0b100;
  1661     0787  081F               	movf	31,w	;volatile
  1662     0788  39F0               	andlw	-16
  1663     0789  3804               	iorlw	4
  1664     078A  009F               	movwf	31	;volatile
  1665     078B                     l4040:
  1666                           
  1667                           ;main.c: 164:     ADCON0bits.ADCS = 0b10;
  1668     078B  1283               	bcf	3,5	;RP0=0, select bank0
  1669     078C  1303               	bcf	3,6	;RP1=0, select bank0
  1670     078D  081F               	movf	31,w	;volatile
  1671     078E  393F               	andlw	-193
  1672     078F  3880               	iorlw	128
  1673     0790  009F               	movwf	31	;volatile
  1674     0791                     l4042:
  1675                           
  1676                           ;main.c: 165:     ADCON0bits.ADON = 1;
  1677     0791  141F               	bsf	31,0	;volatile
  1678     0792                     l4044:
  1679                           
  1680                           ;main.c: 167:     float adcValue1;;main.c: 168:     unsigned int adcValue2;;main.c: 169:
      +                               unsigned int adcValue3;;main.c: 170:     float rpmtofloat;;main.c: 175:     RC1 = 0
      +                          ;
  1681     0792  1087               	bcf	7,1	;volatile
  1682     0793                     l4046:
  1683                           
  1684                           ;main.c: 176:     RE2 = 0;
  1685     0793  1109               	bcf	9,2	;volatile
  1686     0794                     l4048:
  1687                           
  1688                           ;main.c: 177:     RE0 = 0;
  1689     0794  1009               	bcf	9,0	;volatile
  1690     0795                     l4050:
  1691                           
  1692                           ;main.c: 178:     RC2 = 0;
  1693     0795  1107               	bcf	7,2	;volatile
  1694     0796                     l4052:
  1695                           
  1696                           ;main.c: 179:     RC0 = 0;
  1697     0796  1007               	bcf	7,0	;volatile
  1698     0797                     l4054:
  1699                           
  1700                           ;main.c: 180:     RE1 = 0;
  1701     0797  1089               	bcf	9,1	;volatile
  1702     0798                     l4056:
  1703                           
  1704                           ;main.c: 182: int ilkAcilis = 1;
  1705     0798  3001               	movlw	1
  1706     0799  1683               	bsf	3,5	;RP0=1, select bank1
  1707     079A  1303               	bcf	3,6	;RP1=0, select bank1
  1708     079B  00E4               	movwf	main@ilkAcilis^(0+128)
  1709     079C  3000               	movlw	0
  1710     079D  00E5               	movwf	(main@ilkAcilis^(0+128)+1)
  1711     079E                     l4058:
  1712                           
  1713                           ;main.c: 186: if (ilkAcilis) {
  1714     079E  1683               	bsf	3,5	;RP0=1, select bank1
  1715     079F  1303               	bcf	3,6	;RP1=0, select bank1
  1716     07A0  0864               	movf	main@ilkAcilis^(0+128),w
  1717     07A1  0465               	iorwf	(main@ilkAcilis+1)^(0+128),w
  1718     07A2  1903               	btfsc	3,2
  1719     07A3  2FA5               	goto	u5371
  1720     07A4  2FA8               	goto	u5370
  1721     07A5                     u5371:
  1722     07A5  160A  118A  2D89   	goto	l176
  1723     07A8                     u5370:
  1724     07A8                     l4060:
  1725                           
  1726                           ;main.c: 188:     Lcd_Set_Cursor(1,1);
  1727     07A8  1283               	bcf	3,5	;RP0=0, select bank0
  1728     07A9  1303               	bcf	3,6	;RP1=0, select bank0
  1729     07AA  01A4               	clrf	Lcd_Set_Cursor@b
  1730     07AB  0AA4               	incf	Lcd_Set_Cursor@b,f
  1731     07AC  3001               	movlw	1
  1732     07AD  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  1733     07B2                     l4062:
  1734                           
  1735                           ;main.c: 189:     Lcd_Write_String("STOP DURUMUNA GETIR");
  1736     07B2  3096               	movlw	low (STR_4| (0+32768))
  1737     07B3  1283               	bcf	3,5	;RP0=0, select bank0
  1738     07B4  1303               	bcf	3,6	;RP1=0, select bank0
  1739     07B5  00A5               	movwf	Lcd_Write_String@a
  1740     07B6  3098               	movlw	high (STR_4| (0+32768))
  1741     07B7  00A6               	movwf	Lcd_Write_String@a+1
  1742     07B8  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  1743     07BD                     l4064:
  1744                           
  1745                           ;main.c: 190:     Lcd_Set_Cursor(2,1);
  1746     07BD  1283               	bcf	3,5	;RP0=0, select bank0
  1747     07BE  1303               	bcf	3,6	;RP1=0, select bank0
  1748     07BF  01A4               	clrf	Lcd_Set_Cursor@b
  1749     07C0  0AA4               	incf	Lcd_Set_Cursor@b,f
  1750     07C1  3002               	movlw	2
  1751     07C2  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  1752                           
  1753                           ;main.c: 191:     Lcd_Write_String("PUT IT IN STOP STATE");
  1754     07C7  3081               	movlw	low (STR_5| (0+32768))
  1755     07C8  1283               	bcf	3,5	;RP0=0, select bank0
  1756     07C9  1303               	bcf	3,6	;RP1=0, select bank0
  1757     07CA  00A5               	movwf	Lcd_Write_String@a
  1758     07CB  3098               	movlw	high (STR_5| (0+32768))
  1759     07CC  00A6               	movwf	Lcd_Write_String@a+1
  1760     07CD  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  1761     07D2                     l4066:
  1762                           
  1763                           ;main.c: 192:         if ( RE2 == 0 && RE0 == 0 && RC0 == 0 && RE1 == 0) {
  1764     07D2  1283               	bcf	3,5	;RP0=0, select bank0
  1765     07D3  1303               	bcf	3,6	;RP1=0, select bank0
  1766     07D4  1909               	btfsc	9,2	;volatile
  1767     07D5  2FD9               	goto	u5381
  1768     07D6  160A  118A  2D77   	goto	u5380
  1769     07D9                     u5381:
  1770     07D9  120A  118A  2EA6   	goto	l179
  1771                           
  1772                           	psect	text1
  1773     1267                     __ptext1:	
  1774 ;; *************** function _writeEEPROM *****************
  1775 ;; Defined at:
  1776 ;;		line 39 in file "main.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;  address         2    0[BANK0 ] unsigned int 
  1779 ;;  data            2    2[BANK0 ] unsigned int 
  1780 ;; Auto vars:     Size  Location     Type
  1781 ;;		None
  1782 ;; Return value:  Size  Location     Type
  1783 ;;                  1    wreg      void 
  1784 ;; Registers used:
  1785 ;;		wreg
  1786 ;; Tracked objects:
  1787 ;;		On entry : 0/0
  1788 ;;		On exit  : 0/0
  1789 ;;		Unchanged: 0/0
  1790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1791 ;;      Params:         0       4       0       0       0
  1792 ;;      Locals:         0       0       0       0       0
  1793 ;;      Temps:          0       0       0       0       0
  1794 ;;      Totals:         0       4       0       0       0
  1795 ;;Total ram usage:        4 bytes
  1796 ;; Hardware stack levels used: 1
  1797 ;; Hardware stack levels required when called: 2
  1798 ;; This function calls:
  1799 ;;		Nothing
  1800 ;; This function is called by:
  1801 ;;		_main
  1802 ;; This function uses a non-reentrant model
  1803 ;;
  1804                           
  1805     1267                     _writeEEPROM:	
  1806                           ;psect for function _writeEEPROM
  1807                           
  1808     1267                     l2392:	
  1809                           ;incstack = 0
  1810                           ; Regs used in _writeEEPROM: [wreg]
  1811                           
  1812                           
  1813                           ;main.c: 41:     EEADR = address;
  1814     1267  1283               	bcf	3,5	;RP0=0, select bank0
  1815     1268  1303               	bcf	3,6	;RP1=0, select bank0
  1816     1269  0820               	movf	writeEEPROM@address,w
  1817     126A  1283               	bcf	3,5	;RP0=0, select bank2
  1818     126B  1703               	bsf	3,6	;RP1=1, select bank2
  1819     126C  008D               	movwf	13	;volatile
  1820                           
  1821                           ;main.c: 42:     EEDATA = data;
  1822     126D  1283               	bcf	3,5	;RP0=0, select bank0
  1823     126E  1303               	bcf	3,6	;RP1=0, select bank0
  1824     126F  0822               	movf	writeEEPROM@data,w
  1825     1270  1283               	bcf	3,5	;RP0=0, select bank2
  1826     1271  1703               	bsf	3,6	;RP1=1, select bank2
  1827     1272  008C               	movwf	12	;volatile
  1828     1273                     l2394:
  1829                           
  1830                           ;main.c: 43:     WREN = 1;
  1831     1273  1683               	bsf	3,5	;RP0=1, select bank3
  1832     1274  1703               	bsf	3,6	;RP1=1, select bank3
  1833     1275  150C               	bsf	12,2	;volsfr
  1834     1276                     l2396:
  1835                           
  1836                           ;main.c: 44:     GIE = 0;
  1837     1276  138B               	bcf	11,7	;volatile
  1838                           
  1839                           ;main.c: 45:     EECON2 = 0x55;
  1840     1277  3055               	movlw	85
  1841     1278  008D               	movwf	13	;volsfr
  1842                           
  1843                           ;main.c: 46:     EECON2 = 0xAA;
  1844     1279  30AA               	movlw	170
  1845     127A  008D               	movwf	13	;volsfr
  1846     127B                     l2398:
  1847                           
  1848                           ;main.c: 47:     WR = 1;
  1849     127B  148C               	bsf	12,1	;volsfr
  1850     127C                     l2400:
  1851                           
  1852                           ;main.c: 48:     GIE = 1;
  1853     127C  178B               	bsf	11,7	;volatile
  1854     127D                     l2402:
  1855                           
  1856                           ;main.c: 49:     WREN = 0;
  1857     127D  110C               	bcf	12,2	;volsfr
  1858     127E                     l152:	
  1859                           ;main.c: 50:     while (WR == 1);
  1860                           
  1861     127E  188C               	btfsc	12,1	;volsfr
  1862     127F  2A81               	goto	u2591
  1863     1280  2A82               	goto	u2590
  1864     1281                     u2591:
  1865     1281  2A7E               	goto	l152
  1866     1282                     u2590:
  1867     1282                     l155:
  1868     1282  0008               	return
  1869     1283                     __end_of_writeEEPROM:
  1870                           
  1871                           	psect	text2
  1872     0AC4                     __ptext2:	
  1873 ;; *************** function _sprintf *****************
  1874 ;; Defined at:
  1875 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  1876 ;; Parameters:    Size  Location     Type
  1877 ;;  sp              1    wreg     PTR unsigned char 
  1878 ;;		 -> main@combinedText_375(20), main@uartMessage_371(8), main@combinedText(20), main@uartMessage(8), 
  1879 ;;		 -> main@rpmString(5), main@adcString1(4), main@lcdText(9), 
  1880 ;;  f               2   18[BANK0 ] PTR const unsigned char 
  1881 ;;		 -> STR_35(6), STR_33(6), STR_29(6), STR_27(6), 
  1882 ;;		 -> STR_23(10), STR_21(6), STR_18(11), 
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;  sp              1   40[BANK0 ] PTR unsigned char 
  1885 ;;		 -> main@combinedText_375(20), main@uartMessage_371(8), main@combinedText(20), main@uartMessage(8), 
  1886 ;;		 -> main@rpmString(5), main@adcString1(4), main@lcdText(9), 
  1887 ;;  tmpval          4    0        struct .
  1888 ;;  width           2   37[BANK0 ] int 
  1889 ;;  val             2   34[BANK0 ] unsigned int 
  1890 ;;  cp              2    0        PTR const unsigned char 
  1891 ;;  len             2    0        unsigned int 
  1892 ;;  c               1   39[BANK0 ] unsigned char 
  1893 ;;  flag            1   36[BANK0 ] unsigned char 
  1894 ;;  ap              1   33[BANK0 ] PTR void [1]
  1895 ;;		 -> ?_sprintf(2), 
  1896 ;;  prec            1   32[BANK0 ] char 
  1897 ;; Return value:  Size  Location     Type
  1898 ;;                  2   18[BANK0 ] int 
  1899 ;; Registers used:
  1900 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1901 ;; Tracked objects:
  1902 ;;		On entry : 0/0
  1903 ;;		On exit  : 0/0
  1904 ;;		Unchanged: 0/0
  1905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1906 ;;      Params:         0      10       0       0       0
  1907 ;;      Locals:         0       9       0       0       0
  1908 ;;      Temps:          0       4       0       0       0
  1909 ;;      Totals:         0      23       0       0       0
  1910 ;;Total ram usage:       23 bytes
  1911 ;; Hardware stack levels used: 1
  1912 ;; Hardware stack levels required when called: 3
  1913 ;; This function calls:
  1914 ;;		___lwdiv
  1915 ;;		___lwmod
  1916 ;;		___wmul
  1917 ;;		_isdigit
  1918 ;; This function is called by:
  1919 ;;		_main
  1920 ;; This function uses a non-reentrant model
  1921 ;;
  1922                           
  1923     0AC4                     _sprintf:	
  1924                           ;psect for function _sprintf
  1925                           
  1926                           
  1927                           ;incstack = 0
  1928                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1929                           ;sprintf@sp stored from wreg
  1930     0AC4  1283               	bcf	3,5	;RP0=0, select bank0
  1931     0AC5  1303               	bcf	3,6	;RP1=0, select bank0
  1932     0AC6  00C8               	movwf	sprintf@sp
  1933     0AC7                     l3632:
  1934                           
  1935                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  1936     0AC7  3034               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1937     0AC8  00C1               	movwf	sprintf@ap
  1938                           
  1939                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1940     0AC9  2CA0               	goto	l3742
  1941     0ACA                     l3634:
  1942                           
  1943                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1944     0ACA  3025               	movlw	37
  1945     0ACB  0647               	xorwf	sprintf@c,w
  1946     0ACC  1903               	btfsc	3,2
  1947     0ACD  2ACF               	goto	u4681
  1948     0ACE  2AD0               	goto	u4680
  1949     0ACF                     u4681:
  1950     0ACF  2ADA               	goto	l3640
  1951     0AD0                     u4680:
  1952     0AD0                     l3636:
  1953                           
  1954                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1955     0AD0  0848               	movf	sprintf@sp,w
  1956     0AD1  0084               	movwf	4
  1957     0AD2  0847               	movf	sprintf@c,w
  1958     0AD3  1383               	bcf	3,7	;select IRP bank0
  1959     0AD4  0080               	movwf	0
  1960     0AD5                     l3638:
  1961     0AD5  3001               	movlw	1
  1962     0AD6  00FF               	movwf	btemp+1
  1963     0AD7  087F               	movf	btemp+1,w
  1964     0AD8  07C8               	addwf	sprintf@sp,f
  1965                           
  1966                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 559:    continue;
  1967     0AD9  2CA0               	goto	l3742
  1968     0ADA                     l3640:
  1969                           
  1970                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1971     0ADA  01C5               	clrf	sprintf@width
  1972     0ADB  01C6               	clrf	sprintf@width+1
  1973                           
  1974                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1975     0ADC  01C4               	clrf	sprintf@flag
  1976     0ADD  2AE5               	goto	l3646
  1977     0ADE                     l385:	
  1978                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 596:    case '0':
  1979                           
  1980                           
  1981                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  1982     0ADE  1544               	bsf	sprintf@flag,2
  1983     0ADF                     l3642:
  1984                           
  1985                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 598:     f++;
  1986     0ADF  3001               	movlw	1
  1987     0AE0  07B2               	addwf	sprintf@f,f
  1988     0AE1  1803               	skipnc
  1989     0AE2  0AB3               	incf	sprintf@f+1,f
  1990     0AE3  3000               	movlw	0
  1991     0AE4  07B3               	addwf	sprintf@f+1,f
  1992     0AE5                     l3646:	
  1993                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  1994                           
  1995     0AE5  0833               	movf	sprintf@f+1,w
  1996     0AE6  00FF               	movwf	btemp+1
  1997     0AE7  0832               	movf	sprintf@f,w
  1998     0AE8  0084               	movwf	4
  1999     0AE9  160A  158A  2000  120A  158A  	fcall	stringtab
  2000     0AEE  00BC               	movwf	??_sprintf
  2001     0AEF  01BD               	clrf	??_sprintf+1
  2002                           
  2003                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2004                           ; Switch size 1, requested type "simple"
  2005                           ; Number of cases is 1, Range of values is 0 to 0
  2006                           ; switch strategies available:
  2007                           ; Name         Instructions Cycles
  2008                           ; simple_byte            4     3 (average)
  2009                           ; direct_byte           11     8 (fixed)
  2010                           ; jumptable            260     6 (fixed)
  2011                           ;	Chosen strategy is simple_byte
  2012     0AF0  083D               	movf	??_sprintf+1,w
  2013     0AF1  3A00               	xorlw	0	; case 0
  2014     0AF2  1903               	skipnz
  2015     0AF3  2AF5               	goto	l4508
  2016     0AF4  2AFA               	goto	l3648
  2017     0AF5                     l4508:
  2018                           
  2019                           ; Switch size 1, requested type "simple"
  2020                           ; Number of cases is 1, Range of values is 48 to 48
  2021                           ; switch strategies available:
  2022                           ; Name         Instructions Cycles
  2023                           ; simple_byte            4     3 (average)
  2024                           ; direct_byte           14    11 (fixed)
  2025                           ; jumptable            263     9 (fixed)
  2026                           ;	Chosen strategy is simple_byte
  2027     0AF5  083C               	movf	??_sprintf,w
  2028     0AF6  3A30               	xorlw	48	; case 48
  2029     0AF7  1903               	skipnz
  2030     0AF8  2ADE               	goto	l385
  2031     0AF9  2AFA               	goto	l3648
  2032     0AFA                     l3648:
  2033                           
  2034                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  2035     0AFA  0833               	movf	sprintf@f+1,w
  2036     0AFB  00FF               	movwf	btemp+1
  2037     0AFC  0832               	movf	sprintf@f,w
  2038     0AFD  0084               	movwf	4
  2039     0AFE  160A  158A  2000  120A  158A  	fcall	stringtab
  2040     0B03  160A  118A  2222  120A  158A  	fcall	_isdigit
  2041     0B08  1C03               	btfss	3,0
  2042     0B09  2B0B               	goto	u4691
  2043     0B0A  2B0C               	goto	u4690
  2044     0B0B                     u4691:
  2045     0B0B  2B55               	goto	l3662
  2046     0B0C                     u4690:
  2047     0B0C                     l3650:
  2048                           
  2049                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2050     0B0C  1283               	bcf	3,5	;RP0=0, select bank0
  2051     0B0D  1303               	bcf	3,6	;RP1=0, select bank0
  2052     0B0E  01C5               	clrf	sprintf@width
  2053     0B0F  01C6               	clrf	sprintf@width+1
  2054     0B10                     l3652:
  2055                           
  2056                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2057     0B10  300A               	movlw	10
  2058     0B11  1283               	bcf	3,5	;RP0=0, select bank0
  2059     0B12  1303               	bcf	3,6	;RP1=0, select bank0
  2060     0B13  00A0               	movwf	___wmul@multiplier
  2061     0B14  3000               	movlw	0
  2062     0B15  00A1               	movwf	___wmul@multiplier+1
  2063     0B16  0846               	movf	sprintf@width+1,w
  2064     0B17  00A3               	movwf	___wmul@multiplicand+1
  2065     0B18  0845               	movf	sprintf@width,w
  2066     0B19  00A2               	movwf	___wmul@multiplicand
  2067     0B1A  160A  118A  22AA  120A  158A  	fcall	___wmul
  2068     0B1F  1283               	bcf	3,5	;RP0=0, select bank0
  2069     0B20  1303               	bcf	3,6	;RP1=0, select bank0
  2070     0B21  0821               	movf	?___wmul+1,w
  2071     0B22  00C6               	movwf	sprintf@width+1
  2072     0B23  0820               	movf	?___wmul,w
  2073     0B24  00C5               	movwf	sprintf@width
  2074     0B25                     l3654:
  2075                           
  2076                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2077     0B25  0833               	movf	sprintf@f+1,w
  2078     0B26  00FF               	movwf	btemp+1
  2079     0B27  0832               	movf	sprintf@f,w
  2080     0B28  0084               	movwf	4
  2081     0B29  160A  158A  2000  120A  158A  	fcall	stringtab
  2082     0B2E  3ED0               	addlw	208
  2083     0B2F  00BC               	movwf	??_sprintf
  2084     0B30  30FF               	movlw	255
  2085     0B31  1803               	skipnc
  2086     0B32  3000               	movlw	0
  2087     0B33  00BD               	movwf	??_sprintf+1
  2088     0B34  083C               	movf	??_sprintf,w
  2089     0B35  07C5               	addwf	sprintf@width,f
  2090     0B36  1803               	skipnc
  2091     0B37  0AC6               	incf	sprintf@width+1,f
  2092     0B38  083D               	movf	??_sprintf+1,w
  2093     0B39  07C6               	addwf	sprintf@width+1,f
  2094     0B3A                     l3656:
  2095     0B3A  3001               	movlw	1
  2096     0B3B  07B2               	addwf	sprintf@f,f
  2097     0B3C  1803               	skipnc
  2098     0B3D  0AB3               	incf	sprintf@f+1,f
  2099     0B3E  3000               	movlw	0
  2100     0B3F  07B3               	addwf	sprintf@f+1,f
  2101     0B40                     l3658:
  2102                           
  2103                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2104     0B40  0833               	movf	sprintf@f+1,w
  2105     0B41  00FF               	movwf	btemp+1
  2106     0B42  0832               	movf	sprintf@f,w
  2107     0B43  0084               	movwf	4
  2108     0B44  160A  158A  2000  120A  158A  	fcall	stringtab
  2109     0B49  160A  118A  2222  120A  158A  	fcall	_isdigit
  2110     0B4E  1803               	btfsc	3,0
  2111     0B4F  2B51               	goto	u4701
  2112     0B50  2B52               	goto	u4700
  2113     0B51                     u4701:
  2114     0B51  2B10               	goto	l3652
  2115     0B52                     u4700:
  2116     0B52  2B55               	goto	l3662
  2117     0B53                     l399:	
  2118                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 843:   case 'u':
  2119                           
  2120                           
  2121                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          x40;
  2122     0B53  1744               	bsf	sprintf@flag,6
  2123                           
  2124                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 845:    break;
  2125     0B54  2B7D               	goto	l397
  2126     0B55                     l3662:
  2127     0B55  1283               	bcf	3,5	;RP0=0, select bank0
  2128     0B56  1303               	bcf	3,6	;RP1=0, select bank0
  2129     0B57  0833               	movf	sprintf@f+1,w
  2130     0B58  00BD               	movwf	??_sprintf+1
  2131     0B59  0832               	movf	sprintf@f,w
  2132     0B5A  00BC               	movwf	??_sprintf
  2133     0B5B  0AB2               	incf	sprintf@f,f
  2134     0B5C  1903               	skipnz
  2135     0B5D  0AB3               	incf	sprintf@f+1,f
  2136     0B5E  083D               	movf	??_sprintf+1,w
  2137     0B5F  00FF               	movwf	btemp+1
  2138     0B60  083C               	movf	??_sprintf,w
  2139     0B61  0084               	movwf	4
  2140     0B62  160A  158A  2000  120A  158A  	fcall	stringtab
  2141     0B67  00C7               	movwf	sprintf@c
  2142     0B68  00BE               	movwf	??_sprintf+2
  2143     0B69  01BF               	clrf	??_sprintf+3
  2144                           
  2145                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2146                           ; Switch size 1, requested type "simple"
  2147                           ; Number of cases is 1, Range of values is 0 to 0
  2148                           ; switch strategies available:
  2149                           ; Name         Instructions Cycles
  2150                           ; simple_byte            4     3 (average)
  2151                           ; direct_byte           11     8 (fixed)
  2152                           ; jumptable            260     6 (fixed)
  2153                           ;	Chosen strategy is simple_byte
  2154     0B6A  083F               	movf	??_sprintf+3,w
  2155     0B6B  3A00               	xorlw	0	; case 0
  2156     0B6C  1903               	skipnz
  2157     0B6D  2B6F               	goto	l4510
  2158     0B6E  2CA0               	goto	l3742
  2159     0B6F                     l4510:
  2160                           
  2161                           ; Switch size 1, requested type "simple"
  2162                           ; Number of cases is 4, Range of values is 0 to 117
  2163                           ; switch strategies available:
  2164                           ; Name         Instructions Cycles
  2165                           ; simple_byte           13     7 (average)
  2166                           ; jumptable            260     6 (fixed)
  2167                           ;	Chosen strategy is simple_byte
  2168     0B6F  083E               	movf	??_sprintf+2,w
  2169     0B70  3A00               	xorlw	0	; case 0
  2170     0B71  1903               	skipnz
  2171     0B72  2CB6               	goto	l3744
  2172     0B73  3A64               	xorlw	100	; case 100
  2173     0B74  1903               	skipnz
  2174     0B75  2B7D               	goto	l397
  2175     0B76  3A0D               	xorlw	13	; case 105
  2176     0B77  1903               	skipnz
  2177     0B78  2B7D               	goto	l397
  2178     0B79  3A1C               	xorlw	28	; case 117
  2179     0B7A  1903               	skipnz
  2180     0B7B  2B53               	goto	l399
  2181     0B7C  2CA0               	goto	l3742
  2182     0B7D                     l397:
  2183                           
  2184                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1277:   if((flag 
      +                          & 0x40) == 0x00)
  2185     0B7D  1B44               	btfsc	sprintf@flag,6
  2186     0B7E  2B80               	goto	u4711
  2187     0B7F  2B81               	goto	u4710
  2188     0B80                     u4711:
  2189     0B80  2B9B               	goto	l3674
  2190     0B81                     u4710:
  2191     0B81                     l3664:
  2192                           
  2193                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2194     0B81  0841               	movf	sprintf@ap,w
  2195     0B82  0084               	movwf	4
  2196     0B83  1383               	bcf	3,7	;select IRP bank0
  2197     0B84  0800               	movf	0,w
  2198     0B85  00C2               	movwf	sprintf@val
  2199     0B86  0A84               	incf	4,f
  2200     0B87  0800               	movf	0,w
  2201     0B88  00C3               	movwf	sprintf@val+1
  2202     0B89                     l3666:
  2203     0B89  3002               	movlw	2
  2204     0B8A  00FF               	movwf	btemp+1
  2205     0B8B  087F               	movf	btemp+1,w
  2206     0B8C  07C1               	addwf	sprintf@ap,f
  2207     0B8D                     l3668:
  2208                           
  2209                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2210     0B8D  1FC3               	btfss	sprintf@val+1,7
  2211     0B8E  2B90               	goto	u4721
  2212     0B8F  2B91               	goto	u4720
  2213     0B90                     u4721:
  2214     0B90  2BA7               	goto	l3678
  2215     0B91                     u4720:
  2216     0B91                     l3670:
  2217                           
  2218                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2219     0B91  3003               	movlw	3
  2220     0B92  00FF               	movwf	btemp+1
  2221     0B93  087F               	movf	btemp+1,w
  2222     0B94  04C4               	iorwf	sprintf@flag,f
  2223     0B95                     l3672:
  2224                           
  2225                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2226     0B95  09C2               	comf	sprintf@val,f
  2227     0B96  09C3               	comf	sprintf@val+1,f
  2228     0B97  0AC2               	incf	sprintf@val,f
  2229     0B98  1903               	skipnz
  2230     0B99  0AC3               	incf	sprintf@val+1,f
  2231     0B9A  2BA7               	goto	l3678
  2232     0B9B                     l3674:
  2233                           
  2234                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2235     0B9B  0841               	movf	sprintf@ap,w
  2236     0B9C  0084               	movwf	4
  2237     0B9D  1383               	bcf	3,7	;select IRP bank0
  2238     0B9E  0800               	movf	0,w
  2239     0B9F  00C2               	movwf	sprintf@val
  2240     0BA0  0A84               	incf	4,f
  2241     0BA1  0800               	movf	0,w
  2242     0BA2  00C3               	movwf	sprintf@val+1
  2243     0BA3                     l3676:
  2244     0BA3  3002               	movlw	2
  2245     0BA4  00FF               	movwf	btemp+1
  2246     0BA5  087F               	movf	btemp+1,w
  2247     0BA6  07C1               	addwf	sprintf@ap,f
  2248     0BA7                     l3678:
  2249                           
  2250                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2251     0BA7  01C7               	clrf	sprintf@c
  2252     0BA8  0AC7               	incf	sprintf@c,f
  2253     0BA9                     l3684:
  2254                           
  2255                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2256     0BA9  0847               	movf	sprintf@c,w
  2257     0BAA  00BC               	movwf	??_sprintf
  2258     0BAB  073C               	addwf	??_sprintf,w
  2259     0BAC  3E12               	addlw	low (_dpowers| (0+32768))
  2260     0BAD  0084               	movwf	4
  2261     0BAE  3098               	movlw	high (_dpowers| (0+32768))
  2262     0BAF  1803               	skipnc
  2263     0BB0  3E01               	addlw	1
  2264     0BB1  00FF               	movwf	btemp+1
  2265     0BB2  160A  158A  2000  120A  158A  	fcall	stringtab
  2266     0BB7  00BD               	movwf	??_sprintf+1
  2267     0BB8  160A  158A  2000  120A  158A  	fcall	stringtab
  2268     0BBD  00BE               	movwf	??_sprintf+2
  2269     0BBE  083E               	movf	??_sprintf+2,w
  2270     0BBF  0243               	subwf	sprintf@val+1,w
  2271     0BC0  1D03               	skipz
  2272     0BC1  2BC4               	goto	u4735
  2273     0BC2  083D               	movf	??_sprintf+1,w
  2274     0BC3  0242               	subwf	sprintf@val,w
  2275     0BC4                     u4735:
  2276     0BC4  1803               	skipnc
  2277     0BC5  2BC7               	goto	u4731
  2278     0BC6  2BC8               	goto	u4730
  2279     0BC7                     u4731:
  2280     0BC7  2BC9               	goto	l3688
  2281     0BC8                     u4730:
  2282     0BC8  2BD3               	goto	l3692
  2283     0BC9                     l3688:
  2284     0BC9  3001               	movlw	1
  2285     0BCA  00FF               	movwf	btemp+1
  2286     0BCB  087F               	movf	btemp+1,w
  2287     0BCC  07C7               	addwf	sprintf@c,f
  2288     0BCD                     l3690:
  2289     0BCD  3005               	movlw	5
  2290     0BCE  0647               	xorwf	sprintf@c,w
  2291     0BCF  1D03               	btfss	3,2
  2292     0BD0  2BD2               	goto	u4741
  2293     0BD1  2BD3               	goto	u4740
  2294     0BD2                     u4741:
  2295     0BD2  2BA9               	goto	l3684
  2296     0BD3                     u4740:
  2297     0BD3                     l3692:
  2298                           
  2299                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  2300     0BD3  0845               	movf	sprintf@width,w
  2301     0BD4  0446               	iorwf	sprintf@width+1,w
  2302     0BD5  1903               	btfsc	3,2
  2303     0BD6  2BD8               	goto	u4751
  2304     0BD7  2BD9               	goto	u4750
  2305     0BD8                     u4751:
  2306     0BD8  2BE5               	goto	l406
  2307     0BD9                     u4750:
  2308     0BD9                     l3694:
  2309     0BD9  0844               	movf	sprintf@flag,w
  2310     0BDA  3903               	andlw	3
  2311     0BDB  1903               	btfsc	3,2
  2312     0BDC  2BDE               	goto	u4761
  2313     0BDD  2BDF               	goto	u4760
  2314     0BDE                     u4761:
  2315     0BDE  2BE5               	goto	l406
  2316     0BDF                     u4760:
  2317     0BDF                     l3696:
  2318                           
  2319                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1372:    width--;
  2320     0BDF  30FF               	movlw	255
  2321     0BE0  07C5               	addwf	sprintf@width,f
  2322     0BE1  1803               	skipnc
  2323     0BE2  0AC6               	incf	sprintf@width+1,f
  2324     0BE3  30FF               	movlw	255
  2325     0BE4  07C6               	addwf	sprintf@width+1,f
  2326     0BE5                     l406:
  2327                           
  2328                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  2329     0BE5  0846               	movf	sprintf@width+1,w
  2330     0BE6  3A80               	xorlw	128
  2331     0BE7  3C80               	sublw	128
  2332     0BE8  1D03               	skipz
  2333     0BE9  2BEC               	goto	u4775
  2334     0BEA  0845               	movf	sprintf@width,w
  2335     0BEB  0247               	subwf	sprintf@c,w
  2336     0BEC                     u4775:
  2337     0BEC  1803               	skipnc
  2338     0BED  2BEF               	goto	u4771
  2339     0BEE  2BF0               	goto	u4770
  2340     0BEF                     u4771:
  2341     0BEF  2BFC               	goto	l3700
  2342     0BF0                     u4770:
  2343     0BF0                     l3698:
  2344                           
  2345                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  2346     0BF0  1283               	bcf	3,5	;RP0=0, select bank0
  2347     0BF1  1303               	bcf	3,6	;RP1=0, select bank0
  2348     0BF2  0847               	movf	sprintf@c,w
  2349     0BF3  00BC               	movwf	??_sprintf
  2350     0BF4  01BD               	clrf	??_sprintf+1
  2351     0BF5  083C               	movf	??_sprintf,w
  2352     0BF6  02C5               	subwf	sprintf@width,f
  2353     0BF7  083D               	movf	??_sprintf+1,w
  2354     0BF8  1C03               	skipc
  2355     0BF9  03C6               	decf	sprintf@width+1,f
  2356     0BFA  02C6               	subwf	sprintf@width+1,f
  2357     0BFB  2C00               	goto	l3702
  2358     0BFC                     l3700:
  2359                           
  2360                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  2361     0BFC  1283               	bcf	3,5	;RP0=0, select bank0
  2362     0BFD  1303               	bcf	3,6	;RP1=0, select bank0
  2363     0BFE  01C5               	clrf	sprintf@width
  2364     0BFF  01C6               	clrf	sprintf@width+1
  2365     0C00                     l3702:
  2366                           
  2367                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  2368     0C00  1D44               	btfss	sprintf@flag,2
  2369     0C01  2C03               	goto	u4781
  2370     0C02  2C04               	goto	u4780
  2371     0C03                     u4781:
  2372     0C03  2C2F               	goto	l3718
  2373     0C04                     u4780:
  2374     0C04                     l3704:
  2375                           
  2376                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1418:    if(flag 
      +                          & 0x03)
  2377     0C04  0844               	movf	sprintf@flag,w
  2378     0C05  3903               	andlw	3
  2379     0C06  1903               	btfsc	3,2
  2380     0C07  2C09               	goto	u4791
  2381     0C08  2C0A               	goto	u4790
  2382     0C09                     u4791:
  2383     0C09  2C13               	goto	l3710
  2384     0C0A                     u4790:
  2385     0C0A                     l3706:
  2386                           
  2387                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1419:     ((*sp++
      +                           = ('-')));
  2388     0C0A  0848               	movf	sprintf@sp,w
  2389     0C0B  0084               	movwf	4
  2390     0C0C  302D               	movlw	45
  2391     0C0D  1383               	bcf	3,7	;select IRP bank0
  2392     0C0E  0080               	movwf	0
  2393     0C0F                     l3708:
  2394     0C0F  3001               	movlw	1
  2395     0C10  00FF               	movwf	btemp+1
  2396     0C11  087F               	movf	btemp+1,w
  2397     0C12  07C8               	addwf	sprintf@sp,f
  2398     0C13                     l3710:
  2399                           
  2400                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  2401     0C13  0845               	movf	sprintf@width,w
  2402     0C14  0446               	iorwf	sprintf@width+1,w
  2403     0C15  1903               	btfsc	3,2
  2404     0C16  2C18               	goto	u4801
  2405     0C17  2C19               	goto	u4800
  2406     0C18                     u4801:
  2407     0C18  2C59               	goto	l3732
  2408     0C19                     u4800:
  2409     0C19                     l3712:
  2410                           
  2411                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
  2412     0C19  0848               	movf	sprintf@sp,w
  2413     0C1A  0084               	movwf	4
  2414     0C1B  3030               	movlw	48
  2415     0C1C  1383               	bcf	3,7	;select IRP bank0
  2416     0C1D  0080               	movwf	0
  2417     0C1E                     l3714:
  2418     0C1E  3001               	movlw	1
  2419     0C1F  00FF               	movwf	btemp+1
  2420     0C20  087F               	movf	btemp+1,w
  2421     0C21  07C8               	addwf	sprintf@sp,f
  2422     0C22                     l3716:
  2423     0C22  30FF               	movlw	255
  2424     0C23  07C5               	addwf	sprintf@width,f
  2425     0C24  1803               	skipnc
  2426     0C25  0AC6               	incf	sprintf@width+1,f
  2427     0C26  30FF               	movlw	255
  2428     0C27  07C6               	addwf	sprintf@width+1,f
  2429     0C28  0845               	movf	sprintf@width,w
  2430     0C29  0446               	iorwf	sprintf@width+1,w
  2431     0C2A  1D03               	btfss	3,2
  2432     0C2B  2C2D               	goto	u4811
  2433     0C2C  2C2E               	goto	u4810
  2434     0C2D                     u4811:
  2435     0C2D  2C19               	goto	l3712
  2436     0C2E                     u4810:
  2437     0C2E  2C59               	goto	l3732
  2438     0C2F                     l3718:
  2439                           
  2440                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1450:    if(width
  2441     0C2F  0845               	movf	sprintf@width,w
  2442     0C30  0446               	iorwf	sprintf@width+1,w
  2443     0C31  1903               	btfsc	3,2
  2444     0C32  2C34               	goto	u4821
  2445     0C33  2C35               	goto	u4820
  2446     0C34                     u4821:
  2447     0C34  2C4A               	goto	l3726
  2448     0C35                     u4820:
  2449     0C35                     l3720:
  2450                           
  2451                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  2452     0C35  0848               	movf	sprintf@sp,w
  2453     0C36  0084               	movwf	4
  2454     0C37  3020               	movlw	32
  2455     0C38  1383               	bcf	3,7	;select IRP bank0
  2456     0C39  0080               	movwf	0
  2457     0C3A                     l3722:
  2458     0C3A  3001               	movlw	1
  2459     0C3B  00FF               	movwf	btemp+1
  2460     0C3C  087F               	movf	btemp+1,w
  2461     0C3D  07C8               	addwf	sprintf@sp,f
  2462     0C3E                     l3724:
  2463     0C3E  30FF               	movlw	255
  2464     0C3F  07C5               	addwf	sprintf@width,f
  2465     0C40  1803               	skipnc
  2466     0C41  0AC6               	incf	sprintf@width+1,f
  2467     0C42  30FF               	movlw	255
  2468     0C43  07C6               	addwf	sprintf@width+1,f
  2469     0C44  0845               	movf	sprintf@width,w
  2470     0C45  0446               	iorwf	sprintf@width+1,w
  2471     0C46  1D03               	btfss	3,2
  2472     0C47  2C49               	goto	u4831
  2473     0C48  2C4A               	goto	u4830
  2474     0C49                     u4831:
  2475     0C49  2C35               	goto	l3720
  2476     0C4A                     u4830:
  2477     0C4A                     l3726:
  2478                           
  2479                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  2480     0C4A  0844               	movf	sprintf@flag,w
  2481     0C4B  3903               	andlw	3
  2482     0C4C  1903               	btfsc	3,2
  2483     0C4D  2C4F               	goto	u4841
  2484     0C4E  2C50               	goto	u4840
  2485     0C4F                     u4841:
  2486     0C4F  2C59               	goto	l3732
  2487     0C50                     u4840:
  2488     0C50                     l3728:
  2489                           
  2490                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2491     0C50  0848               	movf	sprintf@sp,w
  2492     0C51  0084               	movwf	4
  2493     0C52  302D               	movlw	45
  2494     0C53  1383               	bcf	3,7	;select IRP bank0
  2495     0C54  0080               	movwf	0
  2496     0C55                     l3730:
  2497     0C55  3001               	movlw	1
  2498     0C56  00FF               	movwf	btemp+1
  2499     0C57  087F               	movf	btemp+1,w
  2500     0C58  07C8               	addwf	sprintf@sp,f
  2501     0C59                     l3732:
  2502                           
  2503                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2504     0C59  0847               	movf	sprintf@c,w
  2505     0C5A  00C0               	movwf	sprintf@prec
  2506                           
  2507                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2508     0C5B  2C97               	goto	l3740
  2509     0C5C                     l3734:
  2510                           
  2511                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2512     0C5C  300A               	movlw	10
  2513     0C5D  00AD               	movwf	___lwmod@divisor
  2514     0C5E  3000               	movlw	0
  2515     0C5F  00AE               	movwf	___lwmod@divisor+1
  2516     0C60  0840               	movf	sprintf@prec,w
  2517     0C61  00BC               	movwf	??_sprintf
  2518     0C62  073C               	addwf	??_sprintf,w
  2519     0C63  3E12               	addlw	low (_dpowers| (0+32768))
  2520     0C64  0084               	movwf	4
  2521     0C65  3098               	movlw	high (_dpowers| (0+32768))
  2522     0C66  1803               	skipnc
  2523     0C67  3E01               	addlw	1
  2524     0C68  00FF               	movwf	btemp+1
  2525     0C69  160A  158A  2000  120A  158A  	fcall	stringtab
  2526     0C6E  00A6               	movwf	___lwdiv@divisor
  2527     0C6F  160A  158A  2000  120A  158A  	fcall	stringtab
  2528     0C74  00A7               	movwf	___lwdiv@divisor+1
  2529     0C75  0843               	movf	sprintf@val+1,w
  2530     0C76  00A9               	movwf	___lwdiv@dividend+1
  2531     0C77  0842               	movf	sprintf@val,w
  2532     0C78  00A8               	movwf	___lwdiv@dividend
  2533     0C79  160A  118A  23C2  120A  158A  	fcall	___lwdiv
  2534     0C7E  1283               	bcf	3,5	;RP0=0, select bank0
  2535     0C7F  1303               	bcf	3,6	;RP1=0, select bank0
  2536     0C80  0827               	movf	?___lwdiv+1,w
  2537     0C81  00B0               	movwf	___lwmod@dividend+1
  2538     0C82  0826               	movf	?___lwdiv,w
  2539     0C83  00AF               	movwf	___lwmod@dividend
  2540     0C84  160A  118A  22FA  120A  158A  	fcall	___lwmod
  2541     0C89  1283               	bcf	3,5	;RP0=0, select bank0
  2542     0C8A  1303               	bcf	3,6	;RP1=0, select bank0
  2543     0C8B  082D               	movf	?___lwmod,w
  2544     0C8C  3E30               	addlw	48
  2545     0C8D  00C7               	movwf	sprintf@c
  2546     0C8E                     l3736:
  2547                           
  2548                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2549     0C8E  0848               	movf	sprintf@sp,w
  2550     0C8F  0084               	movwf	4
  2551     0C90  0847               	movf	sprintf@c,w
  2552     0C91  1383               	bcf	3,7	;select IRP bank0
  2553     0C92  0080               	movwf	0
  2554     0C93                     l3738:
  2555     0C93  3001               	movlw	1
  2556     0C94  00FF               	movwf	btemp+1
  2557     0C95  087F               	movf	btemp+1,w
  2558     0C96  07C8               	addwf	sprintf@sp,f
  2559     0C97                     l3740:
  2560                           
  2561                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2562     0C97  30FF               	movlw	255
  2563     0C98  00FF               	movwf	btemp+1
  2564     0C99  087F               	movf	btemp+1,w
  2565     0C9A  07C0               	addwf	sprintf@prec,f
  2566     0C9B  0A40               	incf	sprintf@prec,w
  2567     0C9C  1D03               	btfss	3,2
  2568     0C9D  2C9F               	goto	u4851
  2569     0C9E  2CA0               	goto	u4850
  2570     0C9F                     u4851:
  2571     0C9F  2C5C               	goto	l3734
  2572     0CA0                     u4850:
  2573     0CA0                     l3742:
  2574                           
  2575                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2576     0CA0  0833               	movf	sprintf@f+1,w
  2577     0CA1  00BD               	movwf	??_sprintf+1
  2578     0CA2  0832               	movf	sprintf@f,w
  2579     0CA3  00BC               	movwf	??_sprintf
  2580     0CA4  0AB2               	incf	sprintf@f,f
  2581     0CA5  1903               	skipnz
  2582     0CA6  0AB3               	incf	sprintf@f+1,f
  2583     0CA7  083D               	movf	??_sprintf+1,w
  2584     0CA8  00FF               	movwf	btemp+1
  2585     0CA9  083C               	movf	??_sprintf,w
  2586     0CAA  0084               	movwf	4
  2587     0CAB  160A  158A  2000  120A  158A  	fcall	stringtab
  2588     0CB0  00C7               	movwf	sprintf@c
  2589     0CB1  0847               	movf	sprintf@c,w
  2590     0CB2  1D03               	btfss	3,2
  2591     0CB3  2CB5               	goto	u4861
  2592     0CB4  2CB6               	goto	u4860
  2593     0CB5                     u4861:
  2594     0CB5  2ACA               	goto	l3634
  2595     0CB6                     u4860:
  2596     0CB6                     l3744:
  2597                           
  2598                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2599     0CB6  0848               	movf	sprintf@sp,w
  2600     0CB7  0084               	movwf	4
  2601     0CB8  1383               	bcf	3,7	;select IRP bank0
  2602     0CB9  0180               	clrf	0
  2603     0CBA                     l423:
  2604     0CBA  0008               	return
  2605     0CBB                     __end_of_sprintf:
  2606                           
  2607                           	psect	text3
  2608     1222                     __ptext3:	
  2609 ;; *************** function _isdigit *****************
  2610 ;; Defined at:
  2611 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\isdigit.c"
  2612 ;; Parameters:    Size  Location     Type
  2613 ;;  c               1    wreg     unsigned char 
  2614 ;; Auto vars:     Size  Location     Type
  2615 ;;  c               1    1[BANK0 ] unsigned char 
  2616 ;; Return value:  Size  Location     Type
  2617 ;;		None               void
  2618 ;; Registers used:
  2619 ;;		wreg, status,2, status,0
  2620 ;; Tracked objects:
  2621 ;;		On entry : 0/0
  2622 ;;		On exit  : 0/0
  2623 ;;		Unchanged: 0/0
  2624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2625 ;;      Params:         0       0       0       0       0
  2626 ;;      Locals:         0       2       0       0       0
  2627 ;;      Temps:          0       0       0       0       0
  2628 ;;      Totals:         0       2       0       0       0
  2629 ;;Total ram usage:        2 bytes
  2630 ;; Hardware stack levels used: 1
  2631 ;; Hardware stack levels required when called: 2
  2632 ;; This function calls:
  2633 ;;		Nothing
  2634 ;; This function is called by:
  2635 ;;		_sprintf
  2636 ;; This function uses a non-reentrant model
  2637 ;;
  2638                           
  2639     1222                     _isdigit:	
  2640                           ;psect for function _isdigit
  2641                           
  2642                           
  2643                           ;incstack = 0
  2644                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2645                           ;isdigit@c stored from wreg
  2646     1222  1283               	bcf	3,5	;RP0=0, select bank0
  2647     1223  1303               	bcf	3,6	;RP1=0, select bank0
  2648     1224  00A1               	movwf	isdigit@c
  2649     1225                     l3546:
  2650     1225  01A0               	clrf	_isdigit$850
  2651     1226                     l3548:
  2652     1226  303A               	movlw	58
  2653     1227  0221               	subwf	isdigit@c,w
  2654     1228  1803               	skipnc
  2655     1229  2A2B               	goto	u4521
  2656     122A  2A2C               	goto	u4520
  2657     122B                     u4521:
  2658     122B  2A34               	goto	l3554
  2659     122C                     u4520:
  2660     122C                     l3550:
  2661     122C  3030               	movlw	48
  2662     122D  0221               	subwf	isdigit@c,w
  2663     122E  1C03               	skipc
  2664     122F  2A31               	goto	u4531
  2665     1230  2A32               	goto	u4530
  2666     1231                     u4531:
  2667     1231  2A34               	goto	l3554
  2668     1232                     u4530:
  2669     1232                     l3552:
  2670     1232  01A0               	clrf	_isdigit$850
  2671     1233  0AA0               	incf	_isdigit$850,f
  2672     1234                     l3554:
  2673     1234  0C20               	rrf	_isdigit$850,w
  2674     1235                     l880:
  2675     1235  0008               	return
  2676     1236                     __end_of_isdigit:
  2677                           
  2678                           	psect	text4
  2679     12AA                     __ptext4:	
  2680 ;; *************** function ___wmul *****************
  2681 ;; Defined at:
  2682 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  2683 ;; Parameters:    Size  Location     Type
  2684 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2685 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2686 ;; Auto vars:     Size  Location     Type
  2687 ;;  product         2    4[BANK0 ] unsigned int 
  2688 ;; Return value:  Size  Location     Type
  2689 ;;                  2    0[BANK0 ] unsigned int 
  2690 ;; Registers used:
  2691 ;;		wreg, status,2, status,0
  2692 ;; Tracked objects:
  2693 ;;		On entry : 0/0
  2694 ;;		On exit  : 0/0
  2695 ;;		Unchanged: 0/0
  2696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2697 ;;      Params:         0       4       0       0       0
  2698 ;;      Locals:         0       2       0       0       0
  2699 ;;      Temps:          0       0       0       0       0
  2700 ;;      Totals:         0       6       0       0       0
  2701 ;;Total ram usage:        6 bytes
  2702 ;; Hardware stack levels used: 1
  2703 ;; Hardware stack levels required when called: 2
  2704 ;; This function calls:
  2705 ;;		Nothing
  2706 ;; This function is called by:
  2707 ;;		_main
  2708 ;;		_sprintf
  2709 ;; This function uses a non-reentrant model
  2710 ;;
  2711                           
  2712     12AA                     ___wmul:	
  2713                           ;psect for function ___wmul
  2714                           
  2715     12AA                     l3558:	
  2716                           ;incstack = 0
  2717                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2718                           
  2719     12AA  1283               	bcf	3,5	;RP0=0, select bank0
  2720     12AB  1303               	bcf	3,6	;RP1=0, select bank0
  2721     12AC  01A4               	clrf	___wmul@product
  2722     12AD  01A5               	clrf	___wmul@product+1
  2723     12AE                     l3560:
  2724     12AE  1C20               	btfss	___wmul@multiplier,0
  2725     12AF  2AB1               	goto	u4541
  2726     12B0  2AB2               	goto	u4540
  2727     12B1                     u4541:
  2728     12B1  2AB8               	goto	l427
  2729     12B2                     u4540:
  2730     12B2                     l3562:
  2731     12B2  0822               	movf	___wmul@multiplicand,w
  2732     12B3  07A4               	addwf	___wmul@product,f
  2733     12B4  1803               	skipnc
  2734     12B5  0AA5               	incf	___wmul@product+1,f
  2735     12B6  0823               	movf	___wmul@multiplicand+1,w
  2736     12B7  07A5               	addwf	___wmul@product+1,f
  2737     12B8                     l427:
  2738     12B8  3001               	movlw	1
  2739     12B9                     u4555:
  2740     12B9  1003               	clrc
  2741     12BA  0DA2               	rlf	___wmul@multiplicand,f
  2742     12BB  0DA3               	rlf	___wmul@multiplicand+1,f
  2743     12BC  3EFF               	addlw	-1
  2744     12BD  1D03               	skipz
  2745     12BE  2AB9               	goto	u4555
  2746     12BF                     l3564:
  2747     12BF  3001               	movlw	1
  2748     12C0                     u4565:
  2749     12C0  1003               	clrc
  2750     12C1  0CA1               	rrf	___wmul@multiplier+1,f
  2751     12C2  0CA0               	rrf	___wmul@multiplier,f
  2752     12C3  3EFF               	addlw	-1
  2753     12C4  1D03               	skipz
  2754     12C5  2AC0               	goto	u4565
  2755     12C6                     l3566:
  2756     12C6  0820               	movf	___wmul@multiplier,w
  2757     12C7  0421               	iorwf	___wmul@multiplier+1,w
  2758     12C8  1D03               	btfss	3,2
  2759     12C9  2ACB               	goto	u4571
  2760     12CA  2ACC               	goto	u4570
  2761     12CB                     u4571:
  2762     12CB  2AAE               	goto	l3560
  2763     12CC                     u4570:
  2764     12CC                     l3568:
  2765     12CC  0825               	movf	___wmul@product+1,w
  2766     12CD  00A1               	movwf	?___wmul+1
  2767     12CE  0824               	movf	___wmul@product,w
  2768     12CF  00A0               	movwf	?___wmul
  2769     12D0                     l429:
  2770     12D0  0008               	return
  2771     12D1                     __end_of___wmul:
  2772                           
  2773                           	psect	text5
  2774     12FA                     __ptext5:	
  2775 ;; *************** function ___lwmod *****************
  2776 ;; Defined at:
  2777 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  2778 ;; Parameters:    Size  Location     Type
  2779 ;;  divisor         2   13[BANK0 ] unsigned int 
  2780 ;;  dividend        2   15[BANK0 ] unsigned int 
  2781 ;; Auto vars:     Size  Location     Type
  2782 ;;  counter         1   17[BANK0 ] unsigned char 
  2783 ;; Return value:  Size  Location     Type
  2784 ;;                  2   13[BANK0 ] unsigned int 
  2785 ;; Registers used:
  2786 ;;		wreg, status,2, status,0, btemp+1
  2787 ;; Tracked objects:
  2788 ;;		On entry : 0/0
  2789 ;;		On exit  : 0/0
  2790 ;;		Unchanged: 0/0
  2791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2792 ;;      Params:         0       4       0       0       0
  2793 ;;      Locals:         0       1       0       0       0
  2794 ;;      Temps:          0       0       0       0       0
  2795 ;;      Totals:         0       5       0       0       0
  2796 ;;Total ram usage:        5 bytes
  2797 ;; Hardware stack levels used: 1
  2798 ;; Hardware stack levels required when called: 2
  2799 ;; This function calls:
  2800 ;;		Nothing
  2801 ;; This function is called by:
  2802 ;;		_main
  2803 ;;		_sprintf
  2804 ;; This function uses a non-reentrant model
  2805 ;;
  2806                           
  2807     12FA                     ___lwmod:	
  2808                           ;psect for function ___lwmod
  2809                           
  2810     12FA                     l2316:	
  2811                           ;incstack = 0
  2812                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  2813                           
  2814     12FA  1283               	bcf	3,5	;RP0=0, select bank0
  2815     12FB  1303               	bcf	3,6	;RP1=0, select bank0
  2816     12FC  082D               	movf	___lwmod@divisor,w
  2817     12FD  042E               	iorwf	___lwmod@divisor+1,w
  2818     12FE  1903               	btfsc	3,2
  2819     12FF  2B01               	goto	u2431
  2820     1300  2B02               	goto	u2430
  2821     1301                     u2431:
  2822     1301  2B31               	goto	l2334
  2823     1302                     u2430:
  2824     1302                     l2318:
  2825     1302  01B1               	clrf	___lwmod@counter
  2826     1303  0AB1               	incf	___lwmod@counter,f
  2827     1304  2B10               	goto	l2324
  2828     1305                     l2320:
  2829     1305  3001               	movlw	1
  2830     1306                     u2445:
  2831     1306  1003               	clrc
  2832     1307  0DAD               	rlf	___lwmod@divisor,f
  2833     1308  0DAE               	rlf	___lwmod@divisor+1,f
  2834     1309  3EFF               	addlw	-1
  2835     130A  1D03               	skipz
  2836     130B  2B06               	goto	u2445
  2837     130C                     l2322:
  2838     130C  3001               	movlw	1
  2839     130D  00FF               	movwf	btemp+1
  2840     130E  087F               	movf	btemp+1,w
  2841     130F  07B1               	addwf	___lwmod@counter,f
  2842     1310                     l2324:
  2843     1310  1FAE               	btfss	___lwmod@divisor+1,7
  2844     1311  2B13               	goto	u2451
  2845     1312  2B14               	goto	u2450
  2846     1313                     u2451:
  2847     1313  2B05               	goto	l2320
  2848     1314                     u2450:
  2849     1314                     l2326:
  2850     1314  082E               	movf	___lwmod@divisor+1,w
  2851     1315  0230               	subwf	___lwmod@dividend+1,w
  2852     1316  1D03               	skipz
  2853     1317  2B1A               	goto	u2465
  2854     1318  082D               	movf	___lwmod@divisor,w
  2855     1319  022F               	subwf	___lwmod@dividend,w
  2856     131A                     u2465:
  2857     131A  1C03               	skipc
  2858     131B  2B1D               	goto	u2461
  2859     131C  2B1E               	goto	u2460
  2860     131D                     u2461:
  2861     131D  2B24               	goto	l2330
  2862     131E                     u2460:
  2863     131E                     l2328:
  2864     131E  082D               	movf	___lwmod@divisor,w
  2865     131F  02AF               	subwf	___lwmod@dividend,f
  2866     1320  082E               	movf	___lwmod@divisor+1,w
  2867     1321  1C03               	skipc
  2868     1322  03B0               	decf	___lwmod@dividend+1,f
  2869     1323  02B0               	subwf	___lwmod@dividend+1,f
  2870     1324                     l2330:
  2871     1324  3001               	movlw	1
  2872     1325                     u2475:
  2873     1325  1003               	clrc
  2874     1326  0CAE               	rrf	___lwmod@divisor+1,f
  2875     1327  0CAD               	rrf	___lwmod@divisor,f
  2876     1328  3EFF               	addlw	-1
  2877     1329  1D03               	skipz
  2878     132A  2B25               	goto	u2475
  2879     132B                     l2332:
  2880     132B  3001               	movlw	1
  2881     132C  02B1               	subwf	___lwmod@counter,f
  2882     132D  1D03               	btfss	3,2
  2883     132E  2B30               	goto	u2481
  2884     132F  2B31               	goto	u2480
  2885     1330                     u2481:
  2886     1330  2B14               	goto	l2326
  2887     1331                     u2480:
  2888     1331                     l2334:
  2889     1331  0830               	movf	___lwmod@dividend+1,w
  2890     1332  00AE               	movwf	?___lwmod+1
  2891     1333  082F               	movf	___lwmod@dividend,w
  2892     1334  00AD               	movwf	?___lwmod
  2893     1335                     l709:
  2894     1335  0008               	return
  2895     1336                     __end_of___lwmod:
  2896                           
  2897                           	psect	text6
  2898     13C2                     __ptext6:	
  2899 ;; *************** function ___lwdiv *****************
  2900 ;; Defined at:
  2901 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  2902 ;; Parameters:    Size  Location     Type
  2903 ;;  divisor         2    6[BANK0 ] unsigned int 
  2904 ;;  dividend        2    8[BANK0 ] unsigned int 
  2905 ;; Auto vars:     Size  Location     Type
  2906 ;;  quotient        2   10[BANK0 ] unsigned int 
  2907 ;;  counter         1   12[BANK0 ] unsigned char 
  2908 ;; Return value:  Size  Location     Type
  2909 ;;                  2    6[BANK0 ] unsigned int 
  2910 ;; Registers used:
  2911 ;;		wreg, status,2, status,0, btemp+1
  2912 ;; Tracked objects:
  2913 ;;		On entry : 0/0
  2914 ;;		On exit  : 0/0
  2915 ;;		Unchanged: 0/0
  2916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2917 ;;      Params:         0       4       0       0       0
  2918 ;;      Locals:         0       3       0       0       0
  2919 ;;      Temps:          0       0       0       0       0
  2920 ;;      Totals:         0       7       0       0       0
  2921 ;;Total ram usage:        7 bytes
  2922 ;; Hardware stack levels used: 1
  2923 ;; Hardware stack levels required when called: 2
  2924 ;; This function calls:
  2925 ;;		Nothing
  2926 ;; This function is called by:
  2927 ;;		_main
  2928 ;;		_sprintf
  2929 ;; This function uses a non-reentrant model
  2930 ;;
  2931                           
  2932     13C2                     ___lwdiv:	
  2933                           ;psect for function ___lwdiv
  2934                           
  2935     13C2                     l2290:	
  2936                           ;incstack = 0
  2937                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  2938                           
  2939     13C2  1283               	bcf	3,5	;RP0=0, select bank0
  2940     13C3  1303               	bcf	3,6	;RP1=0, select bank0
  2941     13C4  01AA               	clrf	___lwdiv@quotient
  2942     13C5  01AB               	clrf	___lwdiv@quotient+1
  2943     13C6                     l2292:
  2944     13C6  0826               	movf	___lwdiv@divisor,w
  2945     13C7  0427               	iorwf	___lwdiv@divisor+1,w
  2946     13C8  1903               	btfsc	3,2
  2947     13C9  2BCB               	goto	u2361
  2948     13CA  2BCC               	goto	u2360
  2949     13CB                     u2361:
  2950     13CB  2C03               	goto	l2312
  2951     13CC                     u2360:
  2952     13CC                     l2294:
  2953     13CC  01AC               	clrf	___lwdiv@counter
  2954     13CD  0AAC               	incf	___lwdiv@counter,f
  2955     13CE  2BDA               	goto	l2300
  2956     13CF                     l2296:
  2957     13CF  3001               	movlw	1
  2958     13D0                     u2375:
  2959     13D0  1003               	clrc
  2960     13D1  0DA6               	rlf	___lwdiv@divisor,f
  2961     13D2  0DA7               	rlf	___lwdiv@divisor+1,f
  2962     13D3  3EFF               	addlw	-1
  2963     13D4  1D03               	skipz
  2964     13D5  2BD0               	goto	u2375
  2965     13D6                     l2298:
  2966     13D6  3001               	movlw	1
  2967     13D7  00FF               	movwf	btemp+1
  2968     13D8  087F               	movf	btemp+1,w
  2969     13D9  07AC               	addwf	___lwdiv@counter,f
  2970     13DA                     l2300:
  2971     13DA  1FA7               	btfss	___lwdiv@divisor+1,7
  2972     13DB  2BDD               	goto	u2381
  2973     13DC  2BDE               	goto	u2380
  2974     13DD                     u2381:
  2975     13DD  2BCF               	goto	l2296
  2976     13DE                     u2380:
  2977     13DE                     l2302:
  2978     13DE  3001               	movlw	1
  2979     13DF                     u2395:
  2980     13DF  1003               	clrc
  2981     13E0  0DAA               	rlf	___lwdiv@quotient,f
  2982     13E1  0DAB               	rlf	___lwdiv@quotient+1,f
  2983     13E2  3EFF               	addlw	-1
  2984     13E3  1D03               	skipz
  2985     13E4  2BDF               	goto	u2395
  2986     13E5  0827               	movf	___lwdiv@divisor+1,w
  2987     13E6  0229               	subwf	___lwdiv@dividend+1,w
  2988     13E7  1D03               	skipz
  2989     13E8  2BEB               	goto	u2405
  2990     13E9  0826               	movf	___lwdiv@divisor,w
  2991     13EA  0228               	subwf	___lwdiv@dividend,w
  2992     13EB                     u2405:
  2993     13EB  1C03               	skipc
  2994     13EC  2BEE               	goto	u2401
  2995     13ED  2BEF               	goto	u2400
  2996     13EE                     u2401:
  2997     13EE  2BF6               	goto	l2308
  2998     13EF                     u2400:
  2999     13EF                     l2304:
  3000     13EF  0826               	movf	___lwdiv@divisor,w
  3001     13F0  02A8               	subwf	___lwdiv@dividend,f
  3002     13F1  0827               	movf	___lwdiv@divisor+1,w
  3003     13F2  1C03               	skipc
  3004     13F3  03A9               	decf	___lwdiv@dividend+1,f
  3005     13F4  02A9               	subwf	___lwdiv@dividend+1,f
  3006     13F5                     l2306:
  3007     13F5  142A               	bsf	___lwdiv@quotient,0
  3008     13F6                     l2308:
  3009     13F6  3001               	movlw	1
  3010     13F7                     u2415:
  3011     13F7  1003               	clrc
  3012     13F8  0CA7               	rrf	___lwdiv@divisor+1,f
  3013     13F9  0CA6               	rrf	___lwdiv@divisor,f
  3014     13FA  3EFF               	addlw	-1
  3015     13FB  1D03               	skipz
  3016     13FC  2BF7               	goto	u2415
  3017     13FD                     l2310:
  3018     13FD  3001               	movlw	1
  3019     13FE  02AC               	subwf	___lwdiv@counter,f
  3020     13FF  1D03               	btfss	3,2
  3021     1400  2C02               	goto	u2421
  3022     1401  2C03               	goto	u2420
  3023     1402                     u2421:
  3024     1402  2BDE               	goto	l2302
  3025     1403                     u2420:
  3026     1403                     l2312:
  3027     1403  082B               	movf	___lwdiv@quotient+1,w
  3028     1404  00A7               	movwf	?___lwdiv+1
  3029     1405  082A               	movf	___lwdiv@quotient,w
  3030     1406  00A6               	movwf	?___lwdiv
  3031     1407                     l699:
  3032     1407  0008               	return
  3033     1408                     __end_of___lwdiv:
  3034                           
  3035                           	psect	text7
  3036     1236                     __ptext7:	
  3037 ;; *************** function _readEEPROM *****************
  3038 ;; Defined at:
  3039 ;;		line 53 in file "main.c"
  3040 ;; Parameters:    Size  Location     Type
  3041 ;;  address         2    0[BANK0 ] unsigned int 
  3042 ;; Auto vars:     Size  Location     Type
  3043 ;;		None
  3044 ;; Return value:  Size  Location     Type
  3045 ;;                  2    0[BANK0 ] unsigned int 
  3046 ;; Registers used:
  3047 ;;		wreg
  3048 ;; Tracked objects:
  3049 ;;		On entry : 0/0
  3050 ;;		On exit  : 0/0
  3051 ;;		Unchanged: 0/0
  3052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3053 ;;      Params:         0       2       0       0       0
  3054 ;;      Locals:         0       0       0       0       0
  3055 ;;      Temps:          0       2       0       0       0
  3056 ;;      Totals:         0       4       0       0       0
  3057 ;;Total ram usage:        4 bytes
  3058 ;; Hardware stack levels used: 1
  3059 ;; Hardware stack levels required when called: 2
  3060 ;; This function calls:
  3061 ;;		Nothing
  3062 ;; This function is called by:
  3063 ;;		_main
  3064 ;; This function uses a non-reentrant model
  3065 ;;
  3066                           
  3067     1236                     _readEEPROM:	
  3068                           ;psect for function _readEEPROM
  3069                           
  3070     1236                     l3626:	
  3071                           ;incstack = 0
  3072                           ; Regs used in _readEEPROM: [wreg]
  3073                           
  3074                           
  3075                           ;main.c: 55:     EEADR = address;
  3076     1236  1283               	bcf	3,5	;RP0=0, select bank0
  3077     1237  1303               	bcf	3,6	;RP1=0, select bank0
  3078     1238  0820               	movf	readEEPROM@address,w
  3079     1239  1283               	bcf	3,5	;RP0=0, select bank2
  3080     123A  1703               	bsf	3,6	;RP1=1, select bank2
  3081     123B  008D               	movwf	13	;volatile
  3082     123C                     l3628:
  3083                           
  3084                           ;main.c: 56:     RD = 1;
  3085     123C  1683               	bsf	3,5	;RP0=1, select bank3
  3086     123D  1703               	bsf	3,6	;RP1=1, select bank3
  3087     123E  140C               	bsf	12,0	;volsfr
  3088                           
  3089                           ;main.c: 57:     return EEDATA;
  3090     123F  1283               	bcf	3,5	;RP0=0, select bank2
  3091     1240  1703               	bsf	3,6	;RP1=1, select bank2
  3092     1241  080C               	movf	12,w	;volatile
  3093     1242  1283               	bcf	3,5	;RP0=0, select bank0
  3094     1243  1303               	bcf	3,6	;RP1=0, select bank0
  3095     1244  00A2               	movwf	??_readEEPROM
  3096     1245  01A3               	clrf	??_readEEPROM+1
  3097     1246  0822               	movf	??_readEEPROM,w
  3098     1247  00A0               	movwf	?_readEEPROM
  3099     1248  0823               	movf	??_readEEPROM+1,w
  3100     1249  00A1               	movwf	?_readEEPROM+1
  3101     124A                     l158:
  3102     124A  0008               	return
  3103     124B                     __end_of_readEEPROM:
  3104                           
  3105                           	psect	text8
  3106     083B                     __ptext8:	
  3107 ;; *************** function ___xxtofl *****************
  3108 ;; Defined at:
  3109 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\xxtofl.c"
  3110 ;; Parameters:    Size  Location     Type
  3111 ;;  sign            1    wreg     unsigned char 
  3112 ;;  val             4    0[BANK0 ] long 
  3113 ;; Auto vars:     Size  Location     Type
  3114 ;;  sign            1    8[BANK0 ] unsigned char 
  3115 ;;  arg             4   10[BANK0 ] unsigned long 
  3116 ;;  exp             1    9[BANK0 ] unsigned char 
  3117 ;; Return value:  Size  Location     Type
  3118 ;;                  4    0[BANK0 ] unsigned char 
  3119 ;; Registers used:
  3120 ;;		wreg, status,2, status,0, btemp+1
  3121 ;; Tracked objects:
  3122 ;;		On entry : 0/0
  3123 ;;		On exit  : 0/0
  3124 ;;		Unchanged: 0/0
  3125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3126 ;;      Params:         0       4       0       0       0
  3127 ;;      Locals:         0       6       0       0       0
  3128 ;;      Temps:          0       4       0       0       0
  3129 ;;      Totals:         0      14       0       0       0
  3130 ;;Total ram usage:       14 bytes
  3131 ;; Hardware stack levels used: 1
  3132 ;; Hardware stack levels required when called: 2
  3133 ;; This function calls:
  3134 ;;		Nothing
  3135 ;; This function is called by:
  3136 ;;		_main
  3137 ;; This function uses a non-reentrant model
  3138 ;;
  3139                           
  3140     083B                     ___xxtofl:	
  3141                           ;psect for function ___xxtofl
  3142                           
  3143                           
  3144                           ;incstack = 0
  3145                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  3146                           ;___xxtofl@sign stored from wreg
  3147     083B  1283               	bcf	3,5	;RP0=0, select bank0
  3148     083C  1303               	bcf	3,6	;RP1=0, select bank0
  3149     083D  00A8               	movwf	___xxtofl@sign
  3150     083E                     l2878:
  3151     083E  0828               	movf	___xxtofl@sign,w
  3152     083F  1903               	btfsc	3,2
  3153     0840  2842               	goto	u3601
  3154     0841  2843               	goto	u3600
  3155     0842                     u3601:
  3156     0842  2857               	goto	l2884
  3157     0843                     u3600:
  3158     0843                     l2880:
  3159     0843  1FA3               	btfss	___xxtofl@val+3,7
  3160     0844  2846               	goto	u3611
  3161     0845  2847               	goto	u3610
  3162     0846                     u3611:
  3163     0846  2857               	goto	l2884
  3164     0847                     u3610:
  3165     0847                     l2882:
  3166     0847  0920               	comf	___xxtofl@val,w
  3167     0848  00AA               	movwf	___xxtofl@arg
  3168     0849  0921               	comf	___xxtofl@val+1,w
  3169     084A  00AB               	movwf	___xxtofl@arg+1
  3170     084B  0922               	comf	___xxtofl@val+2,w
  3171     084C  00AC               	movwf	___xxtofl@arg+2
  3172     084D  0923               	comf	___xxtofl@val+3,w
  3173     084E  00AD               	movwf	___xxtofl@arg+3
  3174     084F  0AAA               	incf	___xxtofl@arg,f
  3175     0850  1903               	skipnz
  3176     0851  0AAB               	incf	___xxtofl@arg+1,f
  3177     0852  1903               	skipnz
  3178     0853  0AAC               	incf	___xxtofl@arg+2,f
  3179     0854  1903               	skipnz
  3180     0855  0AAD               	incf	___xxtofl@arg+3,f
  3181     0856  285F               	goto	l860
  3182     0857                     l2884:
  3183     0857  0823               	movf	___xxtofl@val+3,w
  3184     0858  00AD               	movwf	___xxtofl@arg+3
  3185     0859  0822               	movf	___xxtofl@val+2,w
  3186     085A  00AC               	movwf	___xxtofl@arg+2
  3187     085B  0821               	movf	___xxtofl@val+1,w
  3188     085C  00AB               	movwf	___xxtofl@arg+1
  3189     085D  0820               	movf	___xxtofl@val,w
  3190     085E  00AA               	movwf	___xxtofl@arg
  3191     085F                     l860:
  3192     085F  0823               	movf	___xxtofl@val+3,w
  3193     0860  0422               	iorwf	___xxtofl@val+2,w
  3194     0861  0421               	iorwf	___xxtofl@val+1,w
  3195     0862  0420               	iorwf	___xxtofl@val,w
  3196     0863  1D03               	skipz
  3197     0864  2866               	goto	u3621
  3198     0865  2867               	goto	u3620
  3199     0866                     u3621:
  3200     0866  2870               	goto	l2890
  3201     0867                     u3620:
  3202     0867                     l2886:
  3203     0867  3000               	movlw	0
  3204     0868  00A3               	movwf	?___xxtofl+3
  3205     0869  3000               	movlw	0
  3206     086A  00A2               	movwf	?___xxtofl+2
  3207     086B  3000               	movlw	0
  3208     086C  00A1               	movwf	?___xxtofl+1
  3209     086D  3000               	movlw	0
  3210     086E  00A0               	movwf	?___xxtofl
  3211     086F  28F4               	goto	l862
  3212     0870                     l2890:
  3213     0870  3096               	movlw	150
  3214     0871  00A9               	movwf	___xxtofl@exp
  3215     0872  2880               	goto	l2896
  3216     0873                     l2892:
  3217     0873  3001               	movlw	1
  3218     0874  00FF               	movwf	btemp+1
  3219     0875  087F               	movf	btemp+1,w
  3220     0876  07A9               	addwf	___xxtofl@exp,f
  3221     0877                     l2894:
  3222     0877  3001               	movlw	1
  3223     0878                     u3635:
  3224     0878  1003               	clrc
  3225     0879  0CAD               	rrf	___xxtofl@arg+3,f
  3226     087A  0CAC               	rrf	___xxtofl@arg+2,f
  3227     087B  0CAB               	rrf	___xxtofl@arg+1,f
  3228     087C  0CAA               	rrf	___xxtofl@arg,f
  3229     087D  3EFF               	addlw	-1
  3230     087E  1D03               	skipz
  3231     087F  2878               	goto	u3635
  3232     0880                     l2896:
  3233     0880  30FE               	movlw	254
  3234     0881  052D               	andwf	___xxtofl@arg+3,w
  3235     0882  1D03               	btfss	3,2
  3236     0883  2885               	goto	u3641
  3237     0884  2886               	goto	u3640
  3238     0885                     u3641:
  3239     0885  2873               	goto	l2892
  3240     0886                     u3640:
  3241     0886  28A2               	goto	l2904
  3242     0887                     l2898:
  3243     0887  3001               	movlw	1
  3244     0888  00FF               	movwf	btemp+1
  3245     0889  087F               	movf	btemp+1,w
  3246     088A  07A9               	addwf	___xxtofl@exp,f
  3247     088B                     l2900:
  3248     088B  3001               	movlw	1
  3249     088C  07AA               	addwf	___xxtofl@arg,f
  3250     088D  3000               	movlw	0
  3251     088E  1803               	skipnc
  3252     088F  3001               	movlw	1
  3253     0890  07AB               	addwf	___xxtofl@arg+1,f
  3254     0891  3000               	movlw	0
  3255     0892  1803               	skipnc
  3256     0893  3001               	movlw	1
  3257     0894  07AC               	addwf	___xxtofl@arg+2,f
  3258     0895  3000               	movlw	0
  3259     0896  1803               	skipnc
  3260     0897  3001               	movlw	1
  3261     0898  07AD               	addwf	___xxtofl@arg+3,f
  3262     0899                     l2902:
  3263     0899  3001               	movlw	1
  3264     089A                     u3655:
  3265     089A  1003               	clrc
  3266     089B  0CAD               	rrf	___xxtofl@arg+3,f
  3267     089C  0CAC               	rrf	___xxtofl@arg+2,f
  3268     089D  0CAB               	rrf	___xxtofl@arg+1,f
  3269     089E  0CAA               	rrf	___xxtofl@arg,f
  3270     089F  3EFF               	addlw	-1
  3271     08A0  1D03               	skipz
  3272     08A1  289A               	goto	u3655
  3273     08A2                     l2904:
  3274     08A2  30FF               	movlw	255
  3275     08A3  052D               	andwf	___xxtofl@arg+3,w
  3276     08A4  1D03               	btfss	3,2
  3277     08A5  28A7               	goto	u3661
  3278     08A6  28A8               	goto	u3660
  3279     08A7                     u3661:
  3280     08A7  2887               	goto	l2898
  3281     08A8                     u3660:
  3282     08A8  28B4               	goto	l2908
  3283     08A9                     l2906:
  3284     08A9  3001               	movlw	1
  3285     08AA  02A9               	subwf	___xxtofl@exp,f
  3286     08AB  3001               	movlw	1
  3287     08AC  00A4               	movwf	??___xxtofl
  3288     08AD                     u3675:
  3289     08AD  1003               	clrc
  3290     08AE  0DAA               	rlf	___xxtofl@arg,f
  3291     08AF  0DAB               	rlf	___xxtofl@arg+1,f
  3292     08B0  0DAC               	rlf	___xxtofl@arg+2,f
  3293     08B1  0DAD               	rlf	___xxtofl@arg+3,f
  3294     08B2  0BA4               	decfsz	??___xxtofl,f
  3295     08B3  28AD               	goto	u3675
  3296     08B4                     l2908:
  3297     08B4  1BAC               	btfsc	___xxtofl@arg+2,7
  3298     08B5  28B7               	goto	u3681
  3299     08B6  28B8               	goto	u3680
  3300     08B7                     u3681:
  3301     08B7  28BE               	goto	l873
  3302     08B8                     u3680:
  3303     08B8                     l2910:
  3304     08B8  3002               	movlw	2
  3305     08B9  0229               	subwf	___xxtofl@exp,w
  3306     08BA  1803               	skipnc
  3307     08BB  28BD               	goto	u3691
  3308     08BC  28BE               	goto	u3690
  3309     08BD                     u3691:
  3310     08BD  28A9               	goto	l2906
  3311     08BE                     u3690:
  3312     08BE                     l873:
  3313     08BE  1829               	btfsc	___xxtofl@exp,0
  3314     08BF  28C1               	goto	u3701
  3315     08C0  28C2               	goto	u3700
  3316     08C1                     u3701:
  3317     08C1  28CA               	goto	l874
  3318     08C2                     u3700:
  3319     08C2                     l2912:
  3320     08C2  30FF               	movlw	255
  3321     08C3  05AA               	andwf	___xxtofl@arg,f
  3322     08C4  30FF               	movlw	255
  3323     08C5  05AB               	andwf	___xxtofl@arg+1,f
  3324     08C6  307F               	movlw	127
  3325     08C7  05AC               	andwf	___xxtofl@arg+2,f
  3326     08C8  30FF               	movlw	255
  3327     08C9  05AD               	andwf	___xxtofl@arg+3,f
  3328     08CA                     l874:
  3329     08CA  1003               	clrc
  3330     08CB  0CA9               	rrf	___xxtofl@exp,f
  3331     08CC                     l2914:
  3332     08CC  0829               	movf	___xxtofl@exp,w
  3333     08CD  00A4               	movwf	??___xxtofl
  3334     08CE  01A5               	clrf	??___xxtofl+1
  3335     08CF  01A6               	clrf	??___xxtofl+2
  3336     08D0  01A7               	clrf	??___xxtofl+3
  3337     08D1  3018               	movlw	24
  3338     08D2                     u3715:
  3339     08D2  1003               	clrc
  3340     08D3  0DA4               	rlf	??___xxtofl,f
  3341     08D4  0DA5               	rlf	??___xxtofl+1,f
  3342     08D5  0DA6               	rlf	??___xxtofl+2,f
  3343     08D6  0DA7               	rlf	??___xxtofl+3,f
  3344     08D7                     u3710:
  3345     08D7  3EFF               	addlw	-1
  3346     08D8  1D03               	skipz
  3347     08D9  28D2               	goto	u3715
  3348     08DA  0824               	movf	??___xxtofl,w
  3349     08DB  04AA               	iorwf	___xxtofl@arg,f
  3350     08DC  0825               	movf	??___xxtofl+1,w
  3351     08DD  04AB               	iorwf	___xxtofl@arg+1,f
  3352     08DE  0826               	movf	??___xxtofl+2,w
  3353     08DF  04AC               	iorwf	___xxtofl@arg+2,f
  3354     08E0  0827               	movf	??___xxtofl+3,w
  3355     08E1  04AD               	iorwf	___xxtofl@arg+3,f
  3356     08E2                     l2916:
  3357     08E2  0828               	movf	___xxtofl@sign,w
  3358     08E3  1903               	btfsc	3,2
  3359     08E4  28E6               	goto	u3721
  3360     08E5  28E7               	goto	u3720
  3361     08E6                     u3721:
  3362     08E6  28EC               	goto	l2922
  3363     08E7                     u3720:
  3364     08E7                     l2918:
  3365     08E7  1FA3               	btfss	___xxtofl@val+3,7
  3366     08E8  28EA               	goto	u3731
  3367     08E9  28EB               	goto	u3730
  3368     08EA                     u3731:
  3369     08EA  28EC               	goto	l2922
  3370     08EB                     u3730:
  3371     08EB                     l2920:
  3372     08EB  17AD               	bsf	___xxtofl@arg+3,7
  3373     08EC                     l2922:
  3374     08EC  082D               	movf	___xxtofl@arg+3,w
  3375     08ED  00A3               	movwf	?___xxtofl+3
  3376     08EE  082C               	movf	___xxtofl@arg+2,w
  3377     08EF  00A2               	movwf	?___xxtofl+2
  3378     08F0  082B               	movf	___xxtofl@arg+1,w
  3379     08F1  00A1               	movwf	?___xxtofl+1
  3380     08F2  082A               	movf	___xxtofl@arg,w
  3381     08F3  00A0               	movwf	?___xxtofl
  3382     08F4                     l862:
  3383     08F4  0008               	return
  3384     08F5                     __end_of___xxtofl:
  3385                           
  3386                           	psect	text9
  3387     14FF                     __ptext9:	
  3388 ;; *************** function ___fltol *****************
  3389 ;; Defined at:
  3390 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fltol.c"
  3391 ;; Parameters:    Size  Location     Type
  3392 ;;  f1              4    0[BANK0 ] unsigned char 
  3393 ;; Auto vars:     Size  Location     Type
  3394 ;;  exp1            1    9[BANK0 ] unsigned char 
  3395 ;;  sign1           1    8[BANK0 ] unsigned char 
  3396 ;; Return value:  Size  Location     Type
  3397 ;;                  4    0[BANK0 ] long 
  3398 ;; Registers used:
  3399 ;;		wreg, status,2, status,0, btemp+1
  3400 ;; Tracked objects:
  3401 ;;		On entry : 0/0
  3402 ;;		On exit  : 0/0
  3403 ;;		Unchanged: 0/0
  3404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3405 ;;      Params:         0       4       0       0       0
  3406 ;;      Locals:         0       2       0       0       0
  3407 ;;      Temps:          0       4       0       0       0
  3408 ;;      Totals:         0      10       0       0       0
  3409 ;;Total ram usage:       10 bytes
  3410 ;; Hardware stack levels used: 1
  3411 ;; Hardware stack levels required when called: 2
  3412 ;; This function calls:
  3413 ;;		Nothing
  3414 ;; This function is called by:
  3415 ;;		_main
  3416 ;; This function uses a non-reentrant model
  3417 ;;
  3418                           
  3419     14FF                     ___fltol:	
  3420                           ;psect for function ___fltol
  3421                           
  3422     14FF                     l3764:	
  3423                           ;incstack = 0
  3424                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  3425                           
  3426     14FF  1003               	clrc
  3427     1500  1283               	bcf	3,5	;RP0=0, select bank0
  3428     1501  1303               	bcf	3,6	;RP1=0, select bank0
  3429     1502  0D22               	rlf	___fltol@f1+2,w
  3430     1503  0D23               	rlf	___fltol@f1+3,w
  3431     1504  00A9               	movwf	___fltol@exp1
  3432     1505  0829               	movf	___fltol@exp1,w
  3433     1506  1D03               	btfss	3,2
  3434     1507  2D09               	goto	u4901
  3435     1508  2D0A               	goto	u4900
  3436     1509                     u4901:
  3437     1509  2D13               	goto	l3770
  3438     150A                     u4900:
  3439     150A                     l3766:
  3440     150A  3000               	movlw	0
  3441     150B  00A3               	movwf	?___fltol+3
  3442     150C  3000               	movlw	0
  3443     150D  00A2               	movwf	?___fltol+2
  3444     150E  3000               	movlw	0
  3445     150F  00A1               	movwf	?___fltol+1
  3446     1510  3000               	movlw	0
  3447     1511  00A0               	movwf	?___fltol
  3448     1512  2D76               	goto	l613
  3449     1513                     l3770:
  3450     1513  0820               	movf	___fltol@f1,w
  3451     1514  00A4               	movwf	??___fltol
  3452     1515  0821               	movf	___fltol@f1+1,w
  3453     1516  00A5               	movwf	??___fltol+1
  3454     1517  0822               	movf	___fltol@f1+2,w
  3455     1518  00A6               	movwf	??___fltol+2
  3456     1519  0823               	movf	___fltol@f1+3,w
  3457     151A  00A7               	movwf	??___fltol+3
  3458     151B  301F               	movlw	31
  3459     151C                     u4915:
  3460     151C  1003               	clrc
  3461     151D  0CA7               	rrf	??___fltol+3,f
  3462     151E  0CA6               	rrf	??___fltol+2,f
  3463     151F  0CA5               	rrf	??___fltol+1,f
  3464     1520  0CA4               	rrf	??___fltol,f
  3465     1521                     u4910:
  3466     1521  3EFF               	addlw	-1
  3467     1522  1D03               	skipz
  3468     1523  2D1C               	goto	u4915
  3469     1524  0824               	movf	??___fltol,w
  3470     1525  00A8               	movwf	___fltol@sign1
  3471     1526                     l3772:
  3472     1526  17A2               	bsf	___fltol@f1+2,7
  3473     1527                     l3774:
  3474     1527  30FF               	movlw	255
  3475     1528  05A0               	andwf	___fltol@f1,f
  3476     1529  30FF               	movlw	255
  3477     152A  05A1               	andwf	___fltol@f1+1,f
  3478     152B  30FF               	movlw	255
  3479     152C  05A2               	andwf	___fltol@f1+2,f
  3480     152D  3000               	movlw	0
  3481     152E  05A3               	andwf	___fltol@f1+3,f
  3482     152F                     l3776:
  3483     152F  3096               	movlw	150
  3484     1530  02A9               	subwf	___fltol@exp1,f
  3485     1531                     l3778:
  3486     1531  1FA9               	btfss	___fltol@exp1,7
  3487     1532  2D34               	goto	u4921
  3488     1533  2D35               	goto	u4920
  3489     1534                     u4921:
  3490     1534  2D4F               	goto	l3790
  3491     1535                     u4920:
  3492     1535                     l3780:
  3493     1535  0829               	movf	___fltol@exp1,w
  3494     1536  3A80               	xorlw	128
  3495     1537  3E97               	addlw	151
  3496     1538  1803               	skipnc
  3497     1539  2D3B               	goto	u4931
  3498     153A  2D3C               	goto	u4930
  3499     153B                     u4931:
  3500     153B  2D3D               	goto	l3786
  3501     153C                     u4930:
  3502     153C  2D0A               	goto	l3766
  3503     153D                     l3786:
  3504     153D  3001               	movlw	1
  3505     153E                     u4945:
  3506     153E  1003               	clrc
  3507     153F  0CA3               	rrf	___fltol@f1+3,f
  3508     1540  0CA2               	rrf	___fltol@f1+2,f
  3509     1541  0CA1               	rrf	___fltol@f1+1,f
  3510     1542  0CA0               	rrf	___fltol@f1,f
  3511     1543  3EFF               	addlw	-1
  3512     1544  1D03               	skipz
  3513     1545  2D3E               	goto	u4945
  3514     1546                     l3788:
  3515     1546  3001               	movlw	1
  3516     1547  00FF               	movwf	btemp+1
  3517     1548  087F               	movf	btemp+1,w
  3518     1549  07A9               	addwf	___fltol@exp1,f
  3519     154A  1D03               	btfss	3,2
  3520     154B  2D4D               	goto	u4951
  3521     154C  2D4E               	goto	u4950
  3522     154D                     u4951:
  3523     154D  2D3D               	goto	l3786
  3524     154E                     u4950:
  3525     154E  2D66               	goto	l3798
  3526     154F                     l3790:
  3527     154F  3020               	movlw	32
  3528     1550  0229               	subwf	___fltol@exp1,w
  3529     1551  1C03               	skipc
  3530     1552  2D54               	goto	u4961
  3531     1553  2D55               	goto	u4960
  3532     1554                     u4961:
  3533     1554  2D61               	goto	l620
  3534     1555                     u4960:
  3535     1555  2D0A               	goto	l3766
  3536     1556                     l3796:
  3537     1556  3001               	movlw	1
  3538     1557  00A4               	movwf	??___fltol
  3539     1558                     u4975:
  3540     1558  1003               	clrc
  3541     1559  0DA0               	rlf	___fltol@f1,f
  3542     155A  0DA1               	rlf	___fltol@f1+1,f
  3543     155B  0DA2               	rlf	___fltol@f1+2,f
  3544     155C  0DA3               	rlf	___fltol@f1+3,f
  3545     155D  0BA4               	decfsz	??___fltol,f
  3546     155E  2D58               	goto	u4975
  3547     155F  3001               	movlw	1
  3548     1560  02A9               	subwf	___fltol@exp1,f
  3549     1561                     l620:
  3550     1561  0829               	movf	___fltol@exp1,w
  3551     1562  1D03               	btfss	3,2
  3552     1563  2D65               	goto	u4981
  3553     1564  2D66               	goto	u4980
  3554     1565                     u4981:
  3555     1565  2D56               	goto	l3796
  3556     1566                     u4980:
  3557     1566                     l3798:
  3558     1566  0828               	movf	___fltol@sign1,w
  3559     1567  1903               	btfsc	3,2
  3560     1568  2D6A               	goto	u4991
  3561     1569  2D6B               	goto	u4990
  3562     156A                     u4991:
  3563     156A  2D76               	goto	l623
  3564     156B                     u4990:
  3565     156B                     l3800:
  3566     156B  09A0               	comf	___fltol@f1,f
  3567     156C  09A1               	comf	___fltol@f1+1,f
  3568     156D  09A2               	comf	___fltol@f1+2,f
  3569     156E  09A3               	comf	___fltol@f1+3,f
  3570     156F  0AA0               	incf	___fltol@f1,f
  3571     1570  1903               	skipnz
  3572     1571  0AA1               	incf	___fltol@f1+1,f
  3573     1572  1903               	skipnz
  3574     1573  0AA2               	incf	___fltol@f1+2,f
  3575     1574  1903               	skipnz
  3576     1575  0AA3               	incf	___fltol@f1+3,f
  3577     1576                     l623:
  3578     1576                     l613:
  3579     1576  0008               	return
  3580     1577                     __end_of___fltol:
  3581                           
  3582                           	psect	text10
  3583     0CBB                     __ptext10:	
  3584 ;; *************** function ___flmul *****************
  3585 ;; Defined at:
  3586 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcmul.c"
  3587 ;; Parameters:    Size  Location     Type
  3588 ;;  b               4   26[BANK0 ] long 
  3589 ;;  a               4   30[BANK0 ] long 
  3590 ;; Auto vars:     Size  Location     Type
  3591 ;;  prod            4   46[BANK0 ] struct .
  3592 ;;  grs             4   41[BANK0 ] unsigned long 
  3593 ;;  temp            2   50[BANK0 ] struct .
  3594 ;;  bexp            1   45[BANK0 ] unsigned char 
  3595 ;;  aexp            1   40[BANK0 ] unsigned char 
  3596 ;;  sign            1   39[BANK0 ] unsigned char 
  3597 ;; Return value:  Size  Location     Type
  3598 ;;                  4   26[BANK0 ] unsigned char 
  3599 ;; Registers used:
  3600 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3601 ;; Tracked objects:
  3602 ;;		On entry : 0/0
  3603 ;;		On exit  : 0/0
  3604 ;;		Unchanged: 0/0
  3605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3606 ;;      Params:         0       8       0       0       0
  3607 ;;      Locals:         0      13       0       0       0
  3608 ;;      Temps:          0       5       0       0       0
  3609 ;;      Totals:         0      26       0       0       0
  3610 ;;Total ram usage:       26 bytes
  3611 ;; Hardware stack levels used: 1
  3612 ;; Hardware stack levels required when called: 3
  3613 ;; This function calls:
  3614 ;;		__Umul8_16
  3615 ;; This function is called by:
  3616 ;;		_main
  3617 ;; This function uses a non-reentrant model
  3618 ;;
  3619                           
  3620     0CBB                     ___flmul:	
  3621                           ;psect for function ___flmul
  3622                           
  3623     0CBB                     l3802:	
  3624                           ;incstack = 0
  3625                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3626                           
  3627     0CBB  1283               	bcf	3,5	;RP0=0, select bank0
  3628     0CBC  1303               	bcf	3,6	;RP1=0, select bank0
  3629     0CBD  083D               	movf	___flmul@b+3,w
  3630     0CBE  3980               	andlw	128
  3631     0CBF  00C7               	movwf	___flmul@sign
  3632     0CC0                     l3804:
  3633     0CC0  083D               	movf	___flmul@b+3,w
  3634     0CC1  00C2               	movwf	??___flmul
  3635     0CC2  0742               	addwf	??___flmul,w
  3636     0CC3  00CD               	movwf	___flmul@bexp
  3637     0CC4                     l3806:
  3638     0CC4  1FBC               	btfss	___flmul@b+2,7
  3639     0CC5  2CC7               	goto	u5001
  3640     0CC6  2CC8               	goto	u5000
  3641     0CC7                     u5001:
  3642     0CC7  2CC9               	goto	l3810
  3643     0CC8                     u5000:
  3644     0CC8                     l3808:
  3645     0CC8  144D               	bsf	___flmul@bexp,0
  3646     0CC9                     l3810:
  3647     0CC9  084D               	movf	___flmul@bexp,w
  3648     0CCA  1903               	btfsc	3,2
  3649     0CCB  2CCD               	goto	u5011
  3650     0CCC  2CCE               	goto	u5010
  3651     0CCD                     u5011:
  3652     0CCD  2CDD               	goto	l3818
  3653     0CCE                     u5010:
  3654     0CCE                     l3812:
  3655     0CCE  0A4D               	incf	___flmul@bexp,w
  3656     0CCF  1D03               	btfss	3,2
  3657     0CD0  2CD2               	goto	u5021
  3658     0CD1  2CD3               	goto	u5020
  3659     0CD2                     u5021:
  3660     0CD2  2CDB               	goto	l3816
  3661     0CD3                     u5020:
  3662     0CD3                     l3814:
  3663     0CD3  3000               	movlw	0
  3664     0CD4  00BD               	movwf	___flmul@b+3
  3665     0CD5  3000               	movlw	0
  3666     0CD6  00BC               	movwf	___flmul@b+2
  3667     0CD7  3000               	movlw	0
  3668     0CD8  00BB               	movwf	___flmul@b+1
  3669     0CD9  3000               	movlw	0
  3670     0CDA  00BA               	movwf	___flmul@b
  3671     0CDB                     l3816:
  3672     0CDB  17BC               	bsf	___flmul@b+2,7
  3673     0CDC  2CE5               	goto	l3820
  3674     0CDD                     l3818:
  3675     0CDD  3000               	movlw	0
  3676     0CDE  00BD               	movwf	___flmul@b+3
  3677     0CDF  3000               	movlw	0
  3678     0CE0  00BC               	movwf	___flmul@b+2
  3679     0CE1  3000               	movlw	0
  3680     0CE2  00BB               	movwf	___flmul@b+1
  3681     0CE3  3000               	movlw	0
  3682     0CE4  00BA               	movwf	___flmul@b
  3683     0CE5                     l3820:
  3684     0CE5  0841               	movf	___flmul@a+3,w
  3685     0CE6  3980               	andlw	128
  3686     0CE7  00FF               	movwf	btemp+1
  3687     0CE8  087F               	movf	btemp+1,w
  3688     0CE9  06C7               	xorwf	___flmul@sign,f
  3689     0CEA                     l3822:
  3690     0CEA  0841               	movf	___flmul@a+3,w
  3691     0CEB  00C2               	movwf	??___flmul
  3692     0CEC  0742               	addwf	??___flmul,w
  3693     0CED  00C8               	movwf	___flmul@aexp
  3694     0CEE                     l3824:
  3695     0CEE  1FC0               	btfss	___flmul@a+2,7
  3696     0CEF  2CF1               	goto	u5031
  3697     0CF0  2CF2               	goto	u5030
  3698     0CF1                     u5031:
  3699     0CF1  2CF3               	goto	l3828
  3700     0CF2                     u5030:
  3701     0CF2                     l3826:
  3702     0CF2  1448               	bsf	___flmul@aexp,0
  3703     0CF3                     l3828:
  3704     0CF3  0848               	movf	___flmul@aexp,w
  3705     0CF4  1903               	btfsc	3,2
  3706     0CF5  2CF7               	goto	u5041
  3707     0CF6  2CF8               	goto	u5040
  3708     0CF7                     u5041:
  3709     0CF7  2D07               	goto	l3836
  3710     0CF8                     u5040:
  3711     0CF8                     l3830:
  3712     0CF8  0A48               	incf	___flmul@aexp,w
  3713     0CF9  1D03               	btfss	3,2
  3714     0CFA  2CFC               	goto	u5051
  3715     0CFB  2CFD               	goto	u5050
  3716     0CFC                     u5051:
  3717     0CFC  2D05               	goto	l3834
  3718     0CFD                     u5050:
  3719     0CFD                     l3832:
  3720     0CFD  3000               	movlw	0
  3721     0CFE  00C1               	movwf	___flmul@a+3
  3722     0CFF  3000               	movlw	0
  3723     0D00  00C0               	movwf	___flmul@a+2
  3724     0D01  3000               	movlw	0
  3725     0D02  00BF               	movwf	___flmul@a+1
  3726     0D03  3000               	movlw	0
  3727     0D04  00BE               	movwf	___flmul@a
  3728     0D05                     l3834:
  3729     0D05  17C0               	bsf	___flmul@a+2,7
  3730     0D06  2D0F               	goto	l3838
  3731     0D07                     l3836:
  3732     0D07  3000               	movlw	0
  3733     0D08  00C1               	movwf	___flmul@a+3
  3734     0D09  3000               	movlw	0
  3735     0D0A  00C0               	movwf	___flmul@a+2
  3736     0D0B  3000               	movlw	0
  3737     0D0C  00BF               	movwf	___flmul@a+1
  3738     0D0D  3000               	movlw	0
  3739     0D0E  00BE               	movwf	___flmul@a
  3740     0D0F                     l3838:
  3741     0D0F  0848               	movf	___flmul@aexp,w
  3742     0D10  1903               	btfsc	3,2
  3743     0D11  2D13               	goto	u5061
  3744     0D12  2D14               	goto	u5060
  3745     0D13                     u5061:
  3746     0D13  2D19               	goto	l3842
  3747     0D14                     u5060:
  3748     0D14                     l3840:
  3749     0D14  084D               	movf	___flmul@bexp,w
  3750     0D15  1D03               	btfss	3,2
  3751     0D16  2D18               	goto	u5071
  3752     0D17  2D19               	goto	u5070
  3753     0D18                     u5071:
  3754     0D18  2D22               	goto	l3846
  3755     0D19                     u5070:
  3756     0D19                     l3842:
  3757     0D19  3000               	movlw	0
  3758     0D1A  00BD               	movwf	?___flmul+3
  3759     0D1B  3000               	movlw	0
  3760     0D1C  00BC               	movwf	?___flmul+2
  3761     0D1D  3000               	movlw	0
  3762     0D1E  00BB               	movwf	?___flmul+1
  3763     0D1F  3000               	movlw	0
  3764     0D20  00BA               	movwf	?___flmul
  3765     0D21  2FFF               	goto	l816
  3766     0D22                     l3846:
  3767     0D22  083A               	movf	___flmul@b,w
  3768     0D23  00A0               	movwf	__Umul8_16@multiplicand
  3769     0D24  0840               	movf	___flmul@a+2,w
  3770     0D25  160A  118A  22D1  120A  158A  	fcall	__Umul8_16
  3771     0D2A  1283               	bcf	3,5	;RP0=0, select bank0
  3772     0D2B  1303               	bcf	3,6	;RP1=0, select bank0
  3773     0D2C  0821               	movf	?__Umul8_16+1,w
  3774     0D2D  00D3               	movwf	___flmul@temp+1
  3775     0D2E  0820               	movf	?__Umul8_16,w
  3776     0D2F  00D2               	movwf	___flmul@temp
  3777     0D30                     l3848:
  3778     0D30  0852               	movf	___flmul@temp,w
  3779     0D31  00C2               	movwf	??___flmul
  3780     0D32  01C3               	clrf	??___flmul+1
  3781     0D33  01C4               	clrf	??___flmul+2
  3782     0D34  01C5               	clrf	??___flmul+3
  3783     0D35  0845               	movf	??___flmul+3,w
  3784     0D36  00CC               	movwf	___flmul@grs+3
  3785     0D37  0844               	movf	??___flmul+2,w
  3786     0D38  00CB               	movwf	___flmul@grs+2
  3787     0D39  0843               	movf	??___flmul+1,w
  3788     0D3A  00CA               	movwf	___flmul@grs+1
  3789     0D3B  0842               	movf	??___flmul,w
  3790     0D3C  00C9               	movwf	___flmul@grs
  3791     0D3D                     l3850:
  3792     0D3D  0853               	movf	___flmul@temp+1,w
  3793     0D3E  00C2               	movwf	??___flmul
  3794     0D3F  01C3               	clrf	??___flmul+1
  3795     0D40  01C4               	clrf	??___flmul+2
  3796     0D41  01C5               	clrf	??___flmul+3
  3797     0D42  0845               	movf	??___flmul+3,w
  3798     0D43  00D1               	movwf	___flmul@prod+3
  3799     0D44  0844               	movf	??___flmul+2,w
  3800     0D45  00D0               	movwf	___flmul@prod+2
  3801     0D46  0843               	movf	??___flmul+1,w
  3802     0D47  00CF               	movwf	___flmul@prod+1
  3803     0D48  0842               	movf	??___flmul,w
  3804     0D49  00CE               	movwf	___flmul@prod
  3805     0D4A  083B               	movf	___flmul@b+1,w
  3806     0D4B  00A0               	movwf	__Umul8_16@multiplicand
  3807     0D4C  083F               	movf	___flmul@a+1,w
  3808     0D4D  160A  118A  22D1  120A  158A  	fcall	__Umul8_16
  3809     0D52  1283               	bcf	3,5	;RP0=0, select bank0
  3810     0D53  1303               	bcf	3,6	;RP1=0, select bank0
  3811     0D54  0821               	movf	?__Umul8_16+1,w
  3812     0D55  00D3               	movwf	___flmul@temp+1
  3813     0D56  0820               	movf	?__Umul8_16,w
  3814     0D57  00D2               	movwf	___flmul@temp
  3815     0D58                     l3852:
  3816     0D58  0852               	movf	___flmul@temp,w
  3817     0D59  00C2               	movwf	??___flmul
  3818     0D5A  01C3               	clrf	??___flmul+1
  3819     0D5B  01C4               	clrf	??___flmul+2
  3820     0D5C  01C5               	clrf	??___flmul+3
  3821     0D5D  0842               	movf	??___flmul,w
  3822     0D5E  07C9               	addwf	___flmul@grs,f
  3823     0D5F  0843               	movf	??___flmul+1,w
  3824     0D60  1103               	clrz
  3825     0D61  1803               	skipnc
  3826     0D62  3E01               	addlw	1
  3827     0D63  1903               	skipnz
  3828     0D64  2D66               	goto	u5081
  3829     0D65  07CA               	addwf	___flmul@grs+1,f
  3830     0D66                     u5081:
  3831     0D66  0844               	movf	??___flmul+2,w
  3832     0D67  1103               	clrz
  3833     0D68  1803               	skipnc
  3834     0D69  3E01               	addlw	1
  3835     0D6A  1903               	skipnz
  3836     0D6B  2D6D               	goto	u5082
  3837     0D6C  07CB               	addwf	___flmul@grs+2,f
  3838     0D6D                     u5082:
  3839     0D6D  0845               	movf	??___flmul+3,w
  3840     0D6E  1103               	clrz
  3841     0D6F  1803               	skipnc
  3842     0D70  3E01               	addlw	1
  3843     0D71  1903               	skipnz
  3844     0D72  2D74               	goto	u5083
  3845     0D73  07CC               	addwf	___flmul@grs+3,f
  3846     0D74                     u5083:
  3847     0D74                     l3854:
  3848     0D74  0853               	movf	___flmul@temp+1,w
  3849     0D75  00C2               	movwf	??___flmul
  3850     0D76  01C3               	clrf	??___flmul+1
  3851     0D77  01C4               	clrf	??___flmul+2
  3852     0D78  01C5               	clrf	??___flmul+3
  3853     0D79  0842               	movf	??___flmul,w
  3854     0D7A  07CE               	addwf	___flmul@prod,f
  3855     0D7B  0843               	movf	??___flmul+1,w
  3856     0D7C  1103               	clrz
  3857     0D7D  1803               	skipnc
  3858     0D7E  3E01               	addlw	1
  3859     0D7F  1903               	skipnz
  3860     0D80  2D82               	goto	u5091
  3861     0D81  07CF               	addwf	___flmul@prod+1,f
  3862     0D82                     u5091:
  3863     0D82  0844               	movf	??___flmul+2,w
  3864     0D83  1103               	clrz
  3865     0D84  1803               	skipnc
  3866     0D85  3E01               	addlw	1
  3867     0D86  1903               	skipnz
  3868     0D87  2D89               	goto	u5092
  3869     0D88  07D0               	addwf	___flmul@prod+2,f
  3870     0D89                     u5092:
  3871     0D89  0845               	movf	??___flmul+3,w
  3872     0D8A  1103               	clrz
  3873     0D8B  1803               	skipnc
  3874     0D8C  3E01               	addlw	1
  3875     0D8D  1903               	skipnz
  3876     0D8E  2D90               	goto	u5093
  3877     0D8F  07D1               	addwf	___flmul@prod+3,f
  3878     0D90                     u5093:
  3879     0D90  083C               	movf	___flmul@b+2,w
  3880     0D91  00A0               	movwf	__Umul8_16@multiplicand
  3881     0D92  083E               	movf	___flmul@a,w
  3882     0D93  160A  118A  22D1  120A  158A  	fcall	__Umul8_16
  3883     0D98  1283               	bcf	3,5	;RP0=0, select bank0
  3884     0D99  1303               	bcf	3,6	;RP1=0, select bank0
  3885     0D9A  0821               	movf	?__Umul8_16+1,w
  3886     0D9B  00D3               	movwf	___flmul@temp+1
  3887     0D9C  0820               	movf	?__Umul8_16,w
  3888     0D9D  00D2               	movwf	___flmul@temp
  3889     0D9E                     l3856:
  3890     0D9E  0852               	movf	___flmul@temp,w
  3891     0D9F  00C2               	movwf	??___flmul
  3892     0DA0  01C3               	clrf	??___flmul+1
  3893     0DA1  01C4               	clrf	??___flmul+2
  3894     0DA2  01C5               	clrf	??___flmul+3
  3895     0DA3  0842               	movf	??___flmul,w
  3896     0DA4  07C9               	addwf	___flmul@grs,f
  3897     0DA5  0843               	movf	??___flmul+1,w
  3898     0DA6  1103               	clrz
  3899     0DA7  1803               	skipnc
  3900     0DA8  3E01               	addlw	1
  3901     0DA9  1903               	skipnz
  3902     0DAA  2DAC               	goto	u5101
  3903     0DAB  07CA               	addwf	___flmul@grs+1,f
  3904     0DAC                     u5101:
  3905     0DAC  0844               	movf	??___flmul+2,w
  3906     0DAD  1103               	clrz
  3907     0DAE  1803               	skipnc
  3908     0DAF  3E01               	addlw	1
  3909     0DB0  1903               	skipnz
  3910     0DB1  2DB3               	goto	u5102
  3911     0DB2  07CB               	addwf	___flmul@grs+2,f
  3912     0DB3                     u5102:
  3913     0DB3  0845               	movf	??___flmul+3,w
  3914     0DB4  1103               	clrz
  3915     0DB5  1803               	skipnc
  3916     0DB6  3E01               	addlw	1
  3917     0DB7  1903               	skipnz
  3918     0DB8  2DBA               	goto	u5103
  3919     0DB9  07CC               	addwf	___flmul@grs+3,f
  3920     0DBA                     u5103:
  3921     0DBA                     l3858:
  3922     0DBA  0853               	movf	___flmul@temp+1,w
  3923     0DBB  00C2               	movwf	??___flmul
  3924     0DBC  01C3               	clrf	??___flmul+1
  3925     0DBD  01C4               	clrf	??___flmul+2
  3926     0DBE  01C5               	clrf	??___flmul+3
  3927     0DBF  0842               	movf	??___flmul,w
  3928     0DC0  07CE               	addwf	___flmul@prod,f
  3929     0DC1  0843               	movf	??___flmul+1,w
  3930     0DC2  1103               	clrz
  3931     0DC3  1803               	skipnc
  3932     0DC4  3E01               	addlw	1
  3933     0DC5  1903               	skipnz
  3934     0DC6  2DC8               	goto	u5111
  3935     0DC7  07CF               	addwf	___flmul@prod+1,f
  3936     0DC8                     u5111:
  3937     0DC8  0844               	movf	??___flmul+2,w
  3938     0DC9  1103               	clrz
  3939     0DCA  1803               	skipnc
  3940     0DCB  3E01               	addlw	1
  3941     0DCC  1903               	skipnz
  3942     0DCD  2DCF               	goto	u5112
  3943     0DCE  07D0               	addwf	___flmul@prod+2,f
  3944     0DCF                     u5112:
  3945     0DCF  0845               	movf	??___flmul+3,w
  3946     0DD0  1103               	clrz
  3947     0DD1  1803               	skipnc
  3948     0DD2  3E01               	addlw	1
  3949     0DD3  1903               	skipnz
  3950     0DD4  2DD6               	goto	u5113
  3951     0DD5  07D1               	addwf	___flmul@prod+3,f
  3952     0DD6                     u5113:
  3953     0DD6                     l3860:
  3954     0DD6  3008               	movlw	8
  3955     0DD7  00C2               	movwf	??___flmul
  3956     0DD8                     u5125:
  3957     0DD8  1003               	clrc
  3958     0DD9  0DC9               	rlf	___flmul@grs,f
  3959     0DDA  0DCA               	rlf	___flmul@grs+1,f
  3960     0DDB  0DCB               	rlf	___flmul@grs+2,f
  3961     0DDC  0DCC               	rlf	___flmul@grs+3,f
  3962     0DDD  0BC2               	decfsz	??___flmul,f
  3963     0DDE  2DD8               	goto	u5125
  3964     0DDF                     l3862:
  3965     0DDF  083B               	movf	___flmul@b+1,w
  3966     0DE0  00A0               	movwf	__Umul8_16@multiplicand
  3967     0DE1  083E               	movf	___flmul@a,w
  3968     0DE2  160A  118A  22D1  120A  158A  	fcall	__Umul8_16
  3969     0DE7  1283               	bcf	3,5	;RP0=0, select bank0
  3970     0DE8  1303               	bcf	3,6	;RP1=0, select bank0
  3971     0DE9  0821               	movf	?__Umul8_16+1,w
  3972     0DEA  00D3               	movwf	___flmul@temp+1
  3973     0DEB  0820               	movf	?__Umul8_16,w
  3974     0DEC  00D2               	movwf	___flmul@temp
  3975     0DED                     l3864:
  3976     0DED  0852               	movf	___flmul@temp,w
  3977     0DEE  00C2               	movwf	??___flmul
  3978     0DEF  0853               	movf	___flmul@temp+1,w
  3979     0DF0  00C3               	movwf	??___flmul+1
  3980     0DF1  01C4               	clrf	??___flmul+2
  3981     0DF2  01C5               	clrf	??___flmul+3
  3982     0DF3  0842               	movf	??___flmul,w
  3983     0DF4  07C9               	addwf	___flmul@grs,f
  3984     0DF5  0843               	movf	??___flmul+1,w
  3985     0DF6  1103               	clrz
  3986     0DF7  1803               	skipnc
  3987     0DF8  3E01               	addlw	1
  3988     0DF9  1903               	skipnz
  3989     0DFA  2DFC               	goto	u5131
  3990     0DFB  07CA               	addwf	___flmul@grs+1,f
  3991     0DFC                     u5131:
  3992     0DFC  0844               	movf	??___flmul+2,w
  3993     0DFD  1103               	clrz
  3994     0DFE  1803               	skipnc
  3995     0DFF  3E01               	addlw	1
  3996     0E00  1903               	skipnz
  3997     0E01  2E03               	goto	u5132
  3998     0E02  07CB               	addwf	___flmul@grs+2,f
  3999     0E03                     u5132:
  4000     0E03  0845               	movf	??___flmul+3,w
  4001     0E04  1103               	clrz
  4002     0E05  1803               	skipnc
  4003     0E06  3E01               	addlw	1
  4004     0E07  1903               	skipnz
  4005     0E08  2E0A               	goto	u5133
  4006     0E09  07CC               	addwf	___flmul@grs+3,f
  4007     0E0A                     u5133:
  4008     0E0A                     l3866:
  4009     0E0A  083A               	movf	___flmul@b,w
  4010     0E0B  00A0               	movwf	__Umul8_16@multiplicand
  4011     0E0C  083F               	movf	___flmul@a+1,w
  4012     0E0D  160A  118A  22D1  120A  158A  	fcall	__Umul8_16
  4013     0E12  1283               	bcf	3,5	;RP0=0, select bank0
  4014     0E13  1303               	bcf	3,6	;RP1=0, select bank0
  4015     0E14  0821               	movf	?__Umul8_16+1,w
  4016     0E15  00D3               	movwf	___flmul@temp+1
  4017     0E16  0820               	movf	?__Umul8_16,w
  4018     0E17  00D2               	movwf	___flmul@temp
  4019     0E18                     l3868:
  4020     0E18  0852               	movf	___flmul@temp,w
  4021     0E19  00C2               	movwf	??___flmul
  4022     0E1A  0853               	movf	___flmul@temp+1,w
  4023     0E1B  00C3               	movwf	??___flmul+1
  4024     0E1C  01C4               	clrf	??___flmul+2
  4025     0E1D  01C5               	clrf	??___flmul+3
  4026     0E1E  0842               	movf	??___flmul,w
  4027     0E1F  07C9               	addwf	___flmul@grs,f
  4028     0E20  0843               	movf	??___flmul+1,w
  4029     0E21  1103               	clrz
  4030     0E22  1803               	skipnc
  4031     0E23  3E01               	addlw	1
  4032     0E24  1903               	skipnz
  4033     0E25  2E27               	goto	u5141
  4034     0E26  07CA               	addwf	___flmul@grs+1,f
  4035     0E27                     u5141:
  4036     0E27  0844               	movf	??___flmul+2,w
  4037     0E28  1103               	clrz
  4038     0E29  1803               	skipnc
  4039     0E2A  3E01               	addlw	1
  4040     0E2B  1903               	skipnz
  4041     0E2C  2E2E               	goto	u5142
  4042     0E2D  07CB               	addwf	___flmul@grs+2,f
  4043     0E2E                     u5142:
  4044     0E2E  0845               	movf	??___flmul+3,w
  4045     0E2F  1103               	clrz
  4046     0E30  1803               	skipnc
  4047     0E31  3E01               	addlw	1
  4048     0E32  1903               	skipnz
  4049     0E33  2E35               	goto	u5143
  4050     0E34  07CC               	addwf	___flmul@grs+3,f
  4051     0E35                     u5143:
  4052     0E35                     l3870:
  4053     0E35  3008               	movlw	8
  4054     0E36  00C2               	movwf	??___flmul
  4055     0E37                     u5155:
  4056     0E37  1003               	clrc
  4057     0E38  0DC9               	rlf	___flmul@grs,f
  4058     0E39  0DCA               	rlf	___flmul@grs+1,f
  4059     0E3A  0DCB               	rlf	___flmul@grs+2,f
  4060     0E3B  0DCC               	rlf	___flmul@grs+3,f
  4061     0E3C  0BC2               	decfsz	??___flmul,f
  4062     0E3D  2E37               	goto	u5155
  4063     0E3E  083A               	movf	___flmul@b,w
  4064     0E3F  00A0               	movwf	__Umul8_16@multiplicand
  4065     0E40  083E               	movf	___flmul@a,w
  4066     0E41  160A  118A  22D1  120A  158A  	fcall	__Umul8_16
  4067     0E46  1283               	bcf	3,5	;RP0=0, select bank0
  4068     0E47  1303               	bcf	3,6	;RP1=0, select bank0
  4069     0E48  0821               	movf	?__Umul8_16+1,w
  4070     0E49  00D3               	movwf	___flmul@temp+1
  4071     0E4A  0820               	movf	?__Umul8_16,w
  4072     0E4B  00D2               	movwf	___flmul@temp
  4073     0E4C                     l3872:
  4074     0E4C  0852               	movf	___flmul@temp,w
  4075     0E4D  00C2               	movwf	??___flmul
  4076     0E4E  0853               	movf	___flmul@temp+1,w
  4077     0E4F  00C3               	movwf	??___flmul+1
  4078     0E50  01C4               	clrf	??___flmul+2
  4079     0E51  01C5               	clrf	??___flmul+3
  4080     0E52  0842               	movf	??___flmul,w
  4081     0E53  07C9               	addwf	___flmul@grs,f
  4082     0E54  0843               	movf	??___flmul+1,w
  4083     0E55  1103               	clrz
  4084     0E56  1803               	skipnc
  4085     0E57  3E01               	addlw	1
  4086     0E58  1903               	skipnz
  4087     0E59  2E5B               	goto	u5161
  4088     0E5A  07CA               	addwf	___flmul@grs+1,f
  4089     0E5B                     u5161:
  4090     0E5B  0844               	movf	??___flmul+2,w
  4091     0E5C  1103               	clrz
  4092     0E5D  1803               	skipnc
  4093     0E5E  3E01               	addlw	1
  4094     0E5F  1903               	skipnz
  4095     0E60  2E62               	goto	u5162
  4096     0E61  07CB               	addwf	___flmul@grs+2,f
  4097     0E62                     u5162:
  4098     0E62  0845               	movf	??___flmul+3,w
  4099     0E63  1103               	clrz
  4100     0E64  1803               	skipnc
  4101     0E65  3E01               	addlw	1
  4102     0E66  1903               	skipnz
  4103     0E67  2E69               	goto	u5163
  4104     0E68  07CC               	addwf	___flmul@grs+3,f
  4105     0E69                     u5163:
  4106     0E69                     l3874:
  4107     0E69  083B               	movf	___flmul@b+1,w
  4108     0E6A  00A0               	movwf	__Umul8_16@multiplicand
  4109     0E6B  0840               	movf	___flmul@a+2,w
  4110     0E6C  160A  118A  22D1  120A  158A  	fcall	__Umul8_16
  4111     0E71  1283               	bcf	3,5	;RP0=0, select bank0
  4112     0E72  1303               	bcf	3,6	;RP1=0, select bank0
  4113     0E73  0821               	movf	?__Umul8_16+1,w
  4114     0E74  00D3               	movwf	___flmul@temp+1
  4115     0E75  0820               	movf	?__Umul8_16,w
  4116     0E76  00D2               	movwf	___flmul@temp
  4117     0E77  0852               	movf	___flmul@temp,w
  4118     0E78  00C2               	movwf	??___flmul
  4119     0E79  0853               	movf	___flmul@temp+1,w
  4120     0E7A  00C3               	movwf	??___flmul+1
  4121     0E7B  01C4               	clrf	??___flmul+2
  4122     0E7C  01C5               	clrf	??___flmul+3
  4123     0E7D  0842               	movf	??___flmul,w
  4124     0E7E  07CE               	addwf	___flmul@prod,f
  4125     0E7F  0843               	movf	??___flmul+1,w
  4126     0E80  1103               	clrz
  4127     0E81  1803               	skipnc
  4128     0E82  3E01               	addlw	1
  4129     0E83  1903               	skipnz
  4130     0E84  2E86               	goto	u5171
  4131     0E85  07CF               	addwf	___flmul@prod+1,f
  4132     0E86                     u5171:
  4133     0E86  0844               	movf	??___flmul+2,w
  4134     0E87  1103               	clrz
  4135     0E88  1803               	skipnc
  4136     0E89  3E01               	addlw	1
  4137     0E8A  1903               	skipnz
  4138     0E8B  2E8D               	goto	u5172
  4139     0E8C  07D0               	addwf	___flmul@prod+2,f
  4140     0E8D                     u5172:
  4141     0E8D  0845               	movf	??___flmul+3,w
  4142     0E8E  1103               	clrz
  4143     0E8F  1803               	skipnc
  4144     0E90  3E01               	addlw	1
  4145     0E91  1903               	skipnz
  4146     0E92  2E94               	goto	u5173
  4147     0E93  07D1               	addwf	___flmul@prod+3,f
  4148     0E94                     u5173:
  4149     0E94                     l3876:
  4150     0E94  083C               	movf	___flmul@b+2,w
  4151     0E95  00A0               	movwf	__Umul8_16@multiplicand
  4152     0E96  083F               	movf	___flmul@a+1,w
  4153     0E97  160A  118A  22D1  120A  158A  	fcall	__Umul8_16
  4154     0E9C  1283               	bcf	3,5	;RP0=0, select bank0
  4155     0E9D  1303               	bcf	3,6	;RP1=0, select bank0
  4156     0E9E  0821               	movf	?__Umul8_16+1,w
  4157     0E9F  00D3               	movwf	___flmul@temp+1
  4158     0EA0  0820               	movf	?__Umul8_16,w
  4159     0EA1  00D2               	movwf	___flmul@temp
  4160     0EA2                     l3878:
  4161     0EA2  0852               	movf	___flmul@temp,w
  4162     0EA3  00C2               	movwf	??___flmul
  4163     0EA4  0853               	movf	___flmul@temp+1,w
  4164     0EA5  00C3               	movwf	??___flmul+1
  4165     0EA6  01C4               	clrf	??___flmul+2
  4166     0EA7  01C5               	clrf	??___flmul+3
  4167     0EA8  0842               	movf	??___flmul,w
  4168     0EA9  07CE               	addwf	___flmul@prod,f
  4169     0EAA  0843               	movf	??___flmul+1,w
  4170     0EAB  1103               	clrz
  4171     0EAC  1803               	skipnc
  4172     0EAD  3E01               	addlw	1
  4173     0EAE  1903               	skipnz
  4174     0EAF  2EB1               	goto	u5181
  4175     0EB0  07CF               	addwf	___flmul@prod+1,f
  4176     0EB1                     u5181:
  4177     0EB1  0844               	movf	??___flmul+2,w
  4178     0EB2  1103               	clrz
  4179     0EB3  1803               	skipnc
  4180     0EB4  3E01               	addlw	1
  4181     0EB5  1903               	skipnz
  4182     0EB6  2EB8               	goto	u5182
  4183     0EB7  07D0               	addwf	___flmul@prod+2,f
  4184     0EB8                     u5182:
  4185     0EB8  0845               	movf	??___flmul+3,w
  4186     0EB9  1103               	clrz
  4187     0EBA  1803               	skipnc
  4188     0EBB  3E01               	addlw	1
  4189     0EBC  1903               	skipnz
  4190     0EBD  2EBF               	goto	u5183
  4191     0EBE  07D1               	addwf	___flmul@prod+3,f
  4192     0EBF                     u5183:
  4193     0EBF  083C               	movf	___flmul@b+2,w
  4194     0EC0  00A0               	movwf	__Umul8_16@multiplicand
  4195     0EC1  0840               	movf	___flmul@a+2,w
  4196     0EC2  160A  118A  22D1  120A  158A  	fcall	__Umul8_16
  4197     0EC7  1283               	bcf	3,5	;RP0=0, select bank0
  4198     0EC8  1303               	bcf	3,6	;RP1=0, select bank0
  4199     0EC9  0821               	movf	?__Umul8_16+1,w
  4200     0ECA  00D3               	movwf	___flmul@temp+1
  4201     0ECB  0820               	movf	?__Umul8_16,w
  4202     0ECC  00D2               	movwf	___flmul@temp
  4203     0ECD                     l3880:
  4204     0ECD  0852               	movf	___flmul@temp,w
  4205     0ECE  00C2               	movwf	??___flmul
  4206     0ECF  0853               	movf	___flmul@temp+1,w
  4207     0ED0  00C3               	movwf	??___flmul+1
  4208     0ED1  01C4               	clrf	??___flmul+2
  4209     0ED2  01C5               	clrf	??___flmul+3
  4210     0ED3  3008               	movlw	8
  4211     0ED4                     u5195:
  4212     0ED4  1003               	clrc
  4213     0ED5  0DC2               	rlf	??___flmul,f
  4214     0ED6  0DC3               	rlf	??___flmul+1,f
  4215     0ED7  0DC4               	rlf	??___flmul+2,f
  4216     0ED8  0DC5               	rlf	??___flmul+3,f
  4217     0ED9                     u5190:
  4218     0ED9  3EFF               	addlw	-1
  4219     0EDA  1D03               	skipz
  4220     0EDB  2ED4               	goto	u5195
  4221     0EDC  0842               	movf	??___flmul,w
  4222     0EDD  07CE               	addwf	___flmul@prod,f
  4223     0EDE  0843               	movf	??___flmul+1,w
  4224     0EDF  1103               	clrz
  4225     0EE0  1803               	skipnc
  4226     0EE1  3E01               	addlw	1
  4227     0EE2  1903               	skipnz
  4228     0EE3  2EE5               	goto	u5201
  4229     0EE4  07CF               	addwf	___flmul@prod+1,f
  4230     0EE5                     u5201:
  4231     0EE5  0844               	movf	??___flmul+2,w
  4232     0EE6  1103               	clrz
  4233     0EE7  1803               	skipnc
  4234     0EE8  3E01               	addlw	1
  4235     0EE9  1903               	skipnz
  4236     0EEA  2EEC               	goto	u5202
  4237     0EEB  07D0               	addwf	___flmul@prod+2,f
  4238     0EEC                     u5202:
  4239     0EEC  0845               	movf	??___flmul+3,w
  4240     0EED  1103               	clrz
  4241     0EEE  1803               	skipnc
  4242     0EEF  3E01               	addlw	1
  4243     0EF0  1903               	skipnz
  4244     0EF1  2EF3               	goto	u5203
  4245     0EF2  07D1               	addwf	___flmul@prod+3,f
  4246     0EF3                     u5203:
  4247     0EF3                     l3882:
  4248     0EF3  0849               	movf	___flmul@grs,w
  4249     0EF4  00C2               	movwf	??___flmul
  4250     0EF5  084A               	movf	___flmul@grs+1,w
  4251     0EF6  00C3               	movwf	??___flmul+1
  4252     0EF7  084B               	movf	___flmul@grs+2,w
  4253     0EF8  00C4               	movwf	??___flmul+2
  4254     0EF9  084C               	movf	___flmul@grs+3,w
  4255     0EFA  00C5               	movwf	??___flmul+3
  4256     0EFB  3018               	movlw	24
  4257     0EFC                     u5215:
  4258     0EFC  1003               	clrc
  4259     0EFD  0CC5               	rrf	??___flmul+3,f
  4260     0EFE  0CC4               	rrf	??___flmul+2,f
  4261     0EFF  0CC3               	rrf	??___flmul+1,f
  4262     0F00  0CC2               	rrf	??___flmul,f
  4263     0F01                     u5210:
  4264     0F01  3EFF               	addlw	-1
  4265     0F02  1D03               	skipz
  4266     0F03  2EFC               	goto	u5215
  4267     0F04  0842               	movf	??___flmul,w
  4268     0F05  07CE               	addwf	___flmul@prod,f
  4269     0F06  0843               	movf	??___flmul+1,w
  4270     0F07  1103               	clrz
  4271     0F08  1803               	skipnc
  4272     0F09  3E01               	addlw	1
  4273     0F0A  1903               	skipnz
  4274     0F0B  2F0D               	goto	u5221
  4275     0F0C  07CF               	addwf	___flmul@prod+1,f
  4276     0F0D                     u5221:
  4277     0F0D  0844               	movf	??___flmul+2,w
  4278     0F0E  1103               	clrz
  4279     0F0F  1803               	skipnc
  4280     0F10  3E01               	addlw	1
  4281     0F11  1903               	skipnz
  4282     0F12  2F14               	goto	u5222
  4283     0F13  07D0               	addwf	___flmul@prod+2,f
  4284     0F14                     u5222:
  4285     0F14  0845               	movf	??___flmul+3,w
  4286     0F15  1103               	clrz
  4287     0F16  1803               	skipnc
  4288     0F17  3E01               	addlw	1
  4289     0F18  1903               	skipnz
  4290     0F19  2F1B               	goto	u5223
  4291     0F1A  07D1               	addwf	___flmul@prod+3,f
  4292     0F1B                     u5223:
  4293     0F1B                     l3884:
  4294     0F1B  3008               	movlw	8
  4295     0F1C  00C2               	movwf	??___flmul
  4296     0F1D                     u5235:
  4297     0F1D  1003               	clrc
  4298     0F1E  0DC9               	rlf	___flmul@grs,f
  4299     0F1F  0DCA               	rlf	___flmul@grs+1,f
  4300     0F20  0DCB               	rlf	___flmul@grs+2,f
  4301     0F21  0DCC               	rlf	___flmul@grs+3,f
  4302     0F22  0BC2               	decfsz	??___flmul,f
  4303     0F23  2F1D               	goto	u5235
  4304     0F24                     l3886:
  4305     0F24  084D               	movf	___flmul@bexp,w
  4306     0F25  0748               	addwf	___flmul@aexp,w
  4307     0F26  00C2               	movwf	??___flmul
  4308     0F27  01C3               	clrf	??___flmul+1
  4309     0F28  0DC3               	rlf	??___flmul+1,f
  4310     0F29  0842               	movf	??___flmul,w
  4311     0F2A  3E82               	addlw	130
  4312     0F2B  00D2               	movwf	___flmul@temp
  4313     0F2C  0843               	movf	??___flmul+1,w
  4314     0F2D  1803               	skipnc
  4315     0F2E  3E01               	addlw	1
  4316     0F2F  3EFF               	addlw	255
  4317     0F30  00D3               	movwf	___flmul@temp+1
  4318     0F31  2F4F               	goto	l3898
  4319     0F32                     l3888:
  4320     0F32  3001               	movlw	1
  4321     0F33  00C2               	movwf	??___flmul
  4322     0F34                     u5245:
  4323     0F34  1003               	clrc
  4324     0F35  0DCE               	rlf	___flmul@prod,f
  4325     0F36  0DCF               	rlf	___flmul@prod+1,f
  4326     0F37  0DD0               	rlf	___flmul@prod+2,f
  4327     0F38  0DD1               	rlf	___flmul@prod+3,f
  4328     0F39  0BC2               	decfsz	??___flmul,f
  4329     0F3A  2F34               	goto	u5245
  4330     0F3B                     l3890:
  4331     0F3B  1FCC               	btfss	___flmul@grs+3,7
  4332     0F3C  2F3E               	goto	u5251
  4333     0F3D  2F3F               	goto	u5250
  4334     0F3E                     u5251:
  4335     0F3E  2F40               	goto	l3894
  4336     0F3F                     u5250:
  4337     0F3F                     l3892:
  4338     0F3F  144E               	bsf	___flmul@prod,0
  4339     0F40                     l3894:
  4340     0F40  3001               	movlw	1
  4341     0F41  00C2               	movwf	??___flmul
  4342     0F42                     u5265:
  4343     0F42  1003               	clrc
  4344     0F43  0DC9               	rlf	___flmul@grs,f
  4345     0F44  0DCA               	rlf	___flmul@grs+1,f
  4346     0F45  0DCB               	rlf	___flmul@grs+2,f
  4347     0F46  0DCC               	rlf	___flmul@grs+3,f
  4348     0F47  0BC2               	decfsz	??___flmul,f
  4349     0F48  2F42               	goto	u5265
  4350     0F49                     l3896:
  4351     0F49  30FF               	movlw	255
  4352     0F4A  07D2               	addwf	___flmul@temp,f
  4353     0F4B  1803               	skipnc
  4354     0F4C  0AD3               	incf	___flmul@temp+1,f
  4355     0F4D  30FF               	movlw	255
  4356     0F4E  07D3               	addwf	___flmul@temp+1,f
  4357     0F4F                     l3898:
  4358     0F4F  1FD0               	btfss	___flmul@prod+2,7
  4359     0F50  2F52               	goto	u5271
  4360     0F51  2F53               	goto	u5270
  4361     0F52                     u5271:
  4362     0F52  2F32               	goto	l3888
  4363     0F53                     u5270:
  4364     0F53                     l3900:
  4365     0F53  01C8               	clrf	___flmul@aexp
  4366     0F54                     l3902:
  4367     0F54  1FCC               	btfss	___flmul@grs+3,7
  4368     0F55  2F57               	goto	u5281
  4369     0F56  2F58               	goto	u5280
  4370     0F57                     u5281:
  4371     0F57  2F74               	goto	l3910
  4372     0F58                     u5280:
  4373     0F58                     l3904:
  4374     0F58  30FF               	movlw	255
  4375     0F59  0549               	andwf	___flmul@grs,w
  4376     0F5A  00C2               	movwf	??___flmul
  4377     0F5B  30FF               	movlw	255
  4378     0F5C  054A               	andwf	___flmul@grs+1,w
  4379     0F5D  00C3               	movwf	??___flmul+1
  4380     0F5E  30FF               	movlw	255
  4381     0F5F  054B               	andwf	___flmul@grs+2,w
  4382     0F60  00C4               	movwf	??___flmul+2
  4383     0F61  307F               	movlw	127
  4384     0F62  054C               	andwf	___flmul@grs+3,w
  4385     0F63  00C5               	movwf	??___flmul+3
  4386     0F64  0845               	movf	??___flmul+3,w
  4387     0F65  0444               	iorwf	??___flmul+2,w
  4388     0F66  0443               	iorwf	??___flmul+1,w
  4389     0F67  0442               	iorwf	??___flmul,w
  4390     0F68  1903               	skipnz
  4391     0F69  2F6B               	goto	u5291
  4392     0F6A  2F6C               	goto	u5290
  4393     0F6B                     u5291:
  4394     0F6B  2F6F               	goto	l822
  4395     0F6C                     u5290:
  4396     0F6C                     l3906:
  4397     0F6C  01C8               	clrf	___flmul@aexp
  4398     0F6D  0AC8               	incf	___flmul@aexp,f
  4399     0F6E  2F74               	goto	l3910
  4400     0F6F                     l822:
  4401     0F6F  1C4E               	btfss	___flmul@prod,0
  4402     0F70  2F72               	goto	u5301
  4403     0F71  2F73               	goto	u5300
  4404     0F72                     u5301:
  4405     0F72  2F74               	goto	l3910
  4406     0F73                     u5300:
  4407     0F73  2F6C               	goto	l3906
  4408     0F74                     l3910:
  4409     0F74  0848               	movf	___flmul@aexp,w
  4410     0F75  1903               	btfsc	3,2
  4411     0F76  2F78               	goto	u5311
  4412     0F77  2F79               	goto	u5310
  4413     0F78                     u5311:
  4414     0F78  2FAA               	goto	l3920
  4415     0F79                     u5310:
  4416     0F79                     l3912:
  4417     0F79  3001               	movlw	1
  4418     0F7A  07CE               	addwf	___flmul@prod,f
  4419     0F7B  3000               	movlw	0
  4420     0F7C  1803               	skipnc
  4421     0F7D  3001               	movlw	1
  4422     0F7E  07CF               	addwf	___flmul@prod+1,f
  4423     0F7F  3000               	movlw	0
  4424     0F80  1803               	skipnc
  4425     0F81  3001               	movlw	1
  4426     0F82  07D0               	addwf	___flmul@prod+2,f
  4427     0F83  3000               	movlw	0
  4428     0F84  1803               	skipnc
  4429     0F85  3001               	movlw	1
  4430     0F86  07D1               	addwf	___flmul@prod+3,f
  4431     0F87                     l3914:
  4432     0F87  1C51               	btfss	___flmul@prod+3,0
  4433     0F88  2F8A               	goto	u5321
  4434     0F89  2F8B               	goto	u5320
  4435     0F8A                     u5321:
  4436     0F8A  2FAA               	goto	l3920
  4437     0F8B                     u5320:
  4438     0F8B                     l3916:
  4439     0F8B  084E               	movf	___flmul@prod,w
  4440     0F8C  00C2               	movwf	??___flmul
  4441     0F8D  084F               	movf	___flmul@prod+1,w
  4442     0F8E  00C3               	movwf	??___flmul+1
  4443     0F8F  0850               	movf	___flmul@prod+2,w
  4444     0F90  00C4               	movwf	??___flmul+2
  4445     0F91  0851               	movf	___flmul@prod+3,w
  4446     0F92  00C5               	movwf	??___flmul+3
  4447     0F93  3001               	movlw	1
  4448     0F94  00C6               	movwf	??___flmul+4
  4449     0F95                     u5335:
  4450     0F95  0D45               	rlf	??___flmul+3,w
  4451     0F96  0CC5               	rrf	??___flmul+3,f
  4452     0F97  0CC4               	rrf	??___flmul+2,f
  4453     0F98  0CC3               	rrf	??___flmul+1,f
  4454     0F99  0CC2               	rrf	??___flmul,f
  4455     0F9A                     u5330:
  4456     0F9A  0BC6               	decfsz	??___flmul+4,f
  4457     0F9B  2F95               	goto	u5335
  4458     0F9C  0845               	movf	??___flmul+3,w
  4459     0F9D  00D1               	movwf	___flmul@prod+3
  4460     0F9E  0844               	movf	??___flmul+2,w
  4461     0F9F  00D0               	movwf	___flmul@prod+2
  4462     0FA0  0843               	movf	??___flmul+1,w
  4463     0FA1  00CF               	movwf	___flmul@prod+1
  4464     0FA2  0842               	movf	??___flmul,w
  4465     0FA3  00CE               	movwf	___flmul@prod
  4466     0FA4                     l3918:
  4467     0FA4  3001               	movlw	1
  4468     0FA5  07D2               	addwf	___flmul@temp,f
  4469     0FA6  1803               	skipnc
  4470     0FA7  0AD3               	incf	___flmul@temp+1,f
  4471     0FA8  3000               	movlw	0
  4472     0FA9  07D3               	addwf	___flmul@temp+1,f
  4473     0FAA                     l3920:
  4474     0FAA  0853               	movf	___flmul@temp+1,w
  4475     0FAB  3A80               	xorlw	128
  4476     0FAC  00FF               	movwf	btemp+1
  4477     0FAD  3080               	movlw	128
  4478     0FAE  027F               	subwf	btemp+1,w
  4479     0FAF  1D03               	skipz
  4480     0FB0  2FB3               	goto	u5345
  4481     0FB1  30FF               	movlw	255
  4482     0FB2  0252               	subwf	___flmul@temp,w
  4483     0FB3                     u5345:
  4484     0FB3  1C03               	skipc
  4485     0FB4  2FB6               	goto	u5341
  4486     0FB5  2FB7               	goto	u5340
  4487     0FB6                     u5341:
  4488     0FB6  2FC2               	goto	l3924
  4489     0FB7                     u5340:
  4490     0FB7                     l3922:
  4491     0FB7  307F               	movlw	127
  4492     0FB8  1283               	bcf	3,5	;RP0=0, select bank0
  4493     0FB9  1303               	bcf	3,6	;RP1=0, select bank0
  4494     0FBA  00D1               	movwf	___flmul@prod+3
  4495     0FBB  3080               	movlw	128
  4496     0FBC  00D0               	movwf	___flmul@prod+2
  4497     0FBD  3000               	movlw	0
  4498     0FBE  00CF               	movwf	___flmul@prod+1
  4499     0FBF  3000               	movlw	0
  4500     0FC0  00CE               	movwf	___flmul@prod
  4501     0FC1  2FF3               	goto	l3938
  4502     0FC2                     l3924:
  4503     0FC2  1283               	bcf	3,5	;RP0=0, select bank0
  4504     0FC3  1303               	bcf	3,6	;RP1=0, select bank0
  4505     0FC4  0853               	movf	___flmul@temp+1,w
  4506     0FC5  3A80               	xorlw	128
  4507     0FC6  00FF               	movwf	btemp+1
  4508     0FC7  3080               	movlw	128
  4509     0FC8  027F               	subwf	btemp+1,w
  4510     0FC9  1D03               	skipz
  4511     0FCA  2FCD               	goto	u5355
  4512     0FCB  3001               	movlw	1
  4513     0FCC  0252               	subwf	___flmul@temp,w
  4514     0FCD                     u5355:
  4515     0FCD  1803               	skipnc
  4516     0FCE  2FD0               	goto	u5351
  4517     0FCF  2FD1               	goto	u5350
  4518     0FD0                     u5351:
  4519     0FD0  2FDD               	goto	l3930
  4520     0FD1                     u5350:
  4521     0FD1                     l3926:
  4522     0FD1  3000               	movlw	0
  4523     0FD2  1283               	bcf	3,5	;RP0=0, select bank0
  4524     0FD3  1303               	bcf	3,6	;RP1=0, select bank0
  4525     0FD4  00D1               	movwf	___flmul@prod+3
  4526     0FD5  3000               	movlw	0
  4527     0FD6  00D0               	movwf	___flmul@prod+2
  4528     0FD7  3000               	movlw	0
  4529     0FD8  00CF               	movwf	___flmul@prod+1
  4530     0FD9  3000               	movlw	0
  4531     0FDA  00CE               	movwf	___flmul@prod
  4532     0FDB                     l3928:
  4533     0FDB  01C7               	clrf	___flmul@sign
  4534     0FDC  2FF3               	goto	l3938
  4535     0FDD                     l3930:
  4536     0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  4537     0FDE  1303               	bcf	3,6	;RP1=0, select bank0
  4538     0FDF  0852               	movf	___flmul@temp,w
  4539     0FE0  00CD               	movwf	___flmul@bexp
  4540     0FE1  30FF               	movlw	255
  4541     0FE2  05CE               	andwf	___flmul@prod,f
  4542     0FE3  30FF               	movlw	255
  4543     0FE4  05CF               	andwf	___flmul@prod+1,f
  4544     0FE5  307F               	movlw	127
  4545     0FE6  05D0               	andwf	___flmul@prod+2,f
  4546     0FE7  3000               	movlw	0
  4547     0FE8  05D1               	andwf	___flmul@prod+3,f
  4548     0FE9                     l3932:
  4549     0FE9  1C4D               	btfss	___flmul@bexp,0
  4550     0FEA  2FEC               	goto	u5361
  4551     0FEB  2FED               	goto	u5360
  4552     0FEC                     u5361:
  4553     0FEC  2FEE               	goto	l3936
  4554     0FED                     u5360:
  4555     0FED                     l3934:
  4556     0FED  17D0               	bsf	___flmul@prod+2,7
  4557     0FEE                     l3936:
  4558     0FEE  084D               	movf	___flmul@bexp,w
  4559     0FEF  00C2               	movwf	??___flmul
  4560     0FF0  1003               	clrc
  4561     0FF1  0C42               	rrf	??___flmul,w
  4562     0FF2  00D1               	movwf	___flmul@prod+3
  4563     0FF3                     l3938:
  4564     0FF3  0847               	movf	___flmul@sign,w
  4565     0FF4  00FF               	movwf	btemp+1
  4566     0FF5  087F               	movf	btemp+1,w
  4567     0FF6  04D1               	iorwf	___flmul@prod+3,f
  4568     0FF7                     l3940:
  4569     0FF7  0851               	movf	___flmul@prod+3,w
  4570     0FF8  00BD               	movwf	?___flmul+3
  4571     0FF9  0850               	movf	___flmul@prod+2,w
  4572     0FFA  00BC               	movwf	?___flmul+2
  4573     0FFB  084F               	movf	___flmul@prod+1,w
  4574     0FFC  00BB               	movwf	?___flmul+1
  4575     0FFD  084E               	movf	___flmul@prod,w
  4576     0FFE  00BA               	movwf	?___flmul
  4577     0FFF                     l816:
  4578     0FFF  0008               	return
  4579     1000                     __end_of___flmul:
  4580                           
  4581                           	psect	text11
  4582     12D1                     __ptext11:	
  4583 ;; *************** function __Umul8_16 *****************
  4584 ;; Defined at:
  4585 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul8_16.c"
  4586 ;; Parameters:    Size  Location     Type
  4587 ;;  multiplier      1    wreg     unsigned char 
  4588 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  4589 ;; Auto vars:     Size  Location     Type
  4590 ;;  multiplier      1    8[BANK0 ] unsigned char 
  4591 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  4592 ;;  product         2    4[BANK0 ] unsigned int 
  4593 ;; Return value:  Size  Location     Type
  4594 ;;                  2    0[BANK0 ] unsigned int 
  4595 ;; Registers used:
  4596 ;;		wreg, status,2, status,0
  4597 ;; Tracked objects:
  4598 ;;		On entry : 0/0
  4599 ;;		On exit  : 0/0
  4600 ;;		Unchanged: 0/0
  4601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4602 ;;      Params:         0       2       0       0       0
  4603 ;;      Locals:         0       5       0       0       0
  4604 ;;      Temps:          0       2       0       0       0
  4605 ;;      Totals:         0       9       0       0       0
  4606 ;;Total ram usage:        9 bytes
  4607 ;; Hardware stack levels used: 1
  4608 ;; Hardware stack levels required when called: 2
  4609 ;; This function calls:
  4610 ;;		Nothing
  4611 ;; This function is called by:
  4612 ;;		___flmul
  4613 ;; This function uses a non-reentrant model
  4614 ;;
  4615                           
  4616     12D1                     __Umul8_16:	
  4617                           ;psect for function __Umul8_16
  4618                           
  4619                           
  4620                           ;incstack = 0
  4621                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  4622                           ;__Umul8_16@multiplier stored from wreg
  4623     12D1  1283               	bcf	3,5	;RP0=0, select bank0
  4624     12D2  1303               	bcf	3,6	;RP1=0, select bank0
  4625     12D3  00A8               	movwf	__Umul8_16@multiplier
  4626     12D4                     l3572:
  4627     12D4  01A4               	clrf	__Umul8_16@product
  4628     12D5  01A5               	clrf	__Umul8_16@product+1
  4629     12D6                     l3574:
  4630     12D6  0820               	movf	__Umul8_16@multiplicand,w
  4631     12D7  00A2               	movwf	??__Umul8_16
  4632     12D8  01A3               	clrf	??__Umul8_16+1
  4633     12D9  0822               	movf	??__Umul8_16,w
  4634     12DA  00A6               	movwf	__Umul8_16@word_mpld
  4635     12DB  0823               	movf	??__Umul8_16+1,w
  4636     12DC  00A7               	movwf	__Umul8_16@word_mpld+1
  4637     12DD                     l3576:
  4638     12DD  1C28               	btfss	__Umul8_16@multiplier,0
  4639     12DE  2AE0               	goto	u4581
  4640     12DF  2AE1               	goto	u4580
  4641     12E0                     u4581:
  4642     12E0  2AE7               	goto	l835
  4643     12E1                     u4580:
  4644     12E1                     l3578:
  4645     12E1  0826               	movf	__Umul8_16@word_mpld,w
  4646     12E2  07A4               	addwf	__Umul8_16@product,f
  4647     12E3  1803               	skipnc
  4648     12E4  0AA5               	incf	__Umul8_16@product+1,f
  4649     12E5  0827               	movf	__Umul8_16@word_mpld+1,w
  4650     12E6  07A5               	addwf	__Umul8_16@product+1,f
  4651     12E7                     l835:
  4652     12E7  3001               	movlw	1
  4653     12E8                     u4595:
  4654     12E8  1003               	clrc
  4655     12E9  0DA6               	rlf	__Umul8_16@word_mpld,f
  4656     12EA  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  4657     12EB  3EFF               	addlw	-1
  4658     12EC  1D03               	skipz
  4659     12ED  2AE8               	goto	u4595
  4660     12EE  1003               	clrc
  4661     12EF  0CA8               	rrf	__Umul8_16@multiplier,f
  4662     12F0                     l3580:
  4663     12F0  0828               	movf	__Umul8_16@multiplier,w
  4664     12F1  1D03               	btfss	3,2
  4665     12F2  2AF4               	goto	u4601
  4666     12F3  2AF5               	goto	u4600
  4667     12F4                     u4601:
  4668     12F4  2ADD               	goto	l3576
  4669     12F5                     u4600:
  4670     12F5                     l3582:
  4671     12F5  0825               	movf	__Umul8_16@product+1,w
  4672     12F6  00A1               	movwf	?__Umul8_16+1
  4673     12F7  0824               	movf	__Umul8_16@product,w
  4674     12F8  00A0               	movwf	?__Umul8_16
  4675     12F9                     l837:
  4676     12F9  0008               	return
  4677     12FA                     __end_of__Umul8_16:
  4678                           
  4679                           	psect	text12
  4680     08F5                     __ptext12:	
  4681 ;; *************** function ___fldiv *****************
  4682 ;; Defined at:
  4683 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcdiv.c"
  4684 ;; Parameters:    Size  Location     Type
  4685 ;;  a               4    0[BANK0 ] unsigned int 
  4686 ;;  b               4    4[BANK0 ] unsigned int 
  4687 ;; Auto vars:     Size  Location     Type
  4688 ;;  grs             4   20[BANK0 ] unsigned long 
  4689 ;;  rem             4   13[BANK0 ] unsigned long 
  4690 ;;  new_exp         2   18[BANK0 ] int 
  4691 ;;  aexp            1   25[BANK0 ] unsigned char 
  4692 ;;  bexp            1   24[BANK0 ] unsigned char 
  4693 ;;  sign            1   17[BANK0 ] unsigned char 
  4694 ;; Return value:  Size  Location     Type
  4695 ;;                  4    0[BANK0 ] unsigned char 
  4696 ;; Registers used:
  4697 ;;		wreg, status,2, status,0, btemp+1
  4698 ;; Tracked objects:
  4699 ;;		On entry : 0/0
  4700 ;;		On exit  : 0/0
  4701 ;;		Unchanged: 0/0
  4702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4703 ;;      Params:         0       8       0       0       0
  4704 ;;      Locals:         0      13       0       0       0
  4705 ;;      Temps:          0       5       0       0       0
  4706 ;;      Totals:         0      26       0       0       0
  4707 ;;Total ram usage:       26 bytes
  4708 ;; Hardware stack levels used: 1
  4709 ;; Hardware stack levels required when called: 2
  4710 ;; This function calls:
  4711 ;;		Nothing
  4712 ;; This function is called by:
  4713 ;;		_main
  4714 ;; This function uses a non-reentrant model
  4715 ;;
  4716                           
  4717     08F5                     ___fldiv:	
  4718                           ;psect for function ___fldiv
  4719                           
  4720     08F5                     l2590:	
  4721                           ;incstack = 0
  4722                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  4723                           
  4724     08F5  1283               	bcf	3,5	;RP0=0, select bank0
  4725     08F6  1303               	bcf	3,6	;RP1=0, select bank0
  4726     08F7  0827               	movf	___fldiv@b+3,w
  4727     08F8  3980               	andlw	128
  4728     08F9  00B1               	movwf	___fldiv@sign
  4729     08FA                     l2592:
  4730     08FA  0827               	movf	___fldiv@b+3,w
  4731     08FB  00A8               	movwf	??___fldiv
  4732     08FC  0728               	addwf	??___fldiv,w
  4733     08FD  00B8               	movwf	___fldiv@bexp
  4734     08FE                     l2594:
  4735     08FE  1FA6               	btfss	___fldiv@b+2,7
  4736     08FF  2901               	goto	u2941
  4737     0900  2902               	goto	u2940
  4738     0901                     u2941:
  4739     0901  2903               	goto	l2598
  4740     0902                     u2940:
  4741     0902                     l2596:
  4742     0902  1438               	bsf	___fldiv@bexp,0
  4743     0903                     l2598:
  4744     0903  0838               	movf	___fldiv@bexp,w
  4745     0904  1903               	btfsc	3,2
  4746     0905  2907               	goto	u2951
  4747     0906  2908               	goto	u2950
  4748     0907                     u2951:
  4749     0907  2918               	goto	l2608
  4750     0908                     u2950:
  4751     0908                     l2600:
  4752     0908  0A38               	incf	___fldiv@bexp,w
  4753     0909  1D03               	btfss	3,2
  4754     090A  290C               	goto	u2961
  4755     090B  290D               	goto	u2960
  4756     090C                     u2961:
  4757     090C  2915               	goto	l2604
  4758     090D                     u2960:
  4759     090D                     l2602:
  4760     090D  3000               	movlw	0
  4761     090E  00A7               	movwf	___fldiv@b+3
  4762     090F  3000               	movlw	0
  4763     0910  00A6               	movwf	___fldiv@b+2
  4764     0911  3000               	movlw	0
  4765     0912  00A5               	movwf	___fldiv@b+1
  4766     0913  3000               	movlw	0
  4767     0914  00A4               	movwf	___fldiv@b
  4768     0915                     l2604:
  4769     0915  17A6               	bsf	___fldiv@b+2,7
  4770     0916                     l2606:
  4771     0916  01A7               	clrf	___fldiv@b+3
  4772     0917  2920               	goto	l2610
  4773     0918                     l2608:
  4774     0918  3000               	movlw	0
  4775     0919  00A7               	movwf	___fldiv@b+3
  4776     091A  3000               	movlw	0
  4777     091B  00A6               	movwf	___fldiv@b+2
  4778     091C  3000               	movlw	0
  4779     091D  00A5               	movwf	___fldiv@b+1
  4780     091E  3000               	movlw	0
  4781     091F  00A4               	movwf	___fldiv@b
  4782     0920                     l2610:
  4783     0920  0823               	movf	___fldiv@a+3,w
  4784     0921  3980               	andlw	128
  4785     0922  00FF               	movwf	btemp+1
  4786     0923  087F               	movf	btemp+1,w
  4787     0924  06B1               	xorwf	___fldiv@sign,f
  4788     0925                     l2612:
  4789     0925  0823               	movf	___fldiv@a+3,w
  4790     0926  00A8               	movwf	??___fldiv
  4791     0927  0728               	addwf	??___fldiv,w
  4792     0928  00B9               	movwf	___fldiv@aexp
  4793     0929                     l2614:
  4794     0929  1FA2               	btfss	___fldiv@a+2,7
  4795     092A  292C               	goto	u2971
  4796     092B  292D               	goto	u2970
  4797     092C                     u2971:
  4798     092C  292E               	goto	l2618
  4799     092D                     u2970:
  4800     092D                     l2616:
  4801     092D  1439               	bsf	___fldiv@aexp,0
  4802     092E                     l2618:
  4803     092E  0839               	movf	___fldiv@aexp,w
  4804     092F  1903               	btfsc	3,2
  4805     0930  2932               	goto	u2981
  4806     0931  2933               	goto	u2980
  4807     0932                     u2981:
  4808     0932  2943               	goto	l2628
  4809     0933                     u2980:
  4810     0933                     l2620:
  4811     0933  0A39               	incf	___fldiv@aexp,w
  4812     0934  1D03               	btfss	3,2
  4813     0935  2937               	goto	u2991
  4814     0936  2938               	goto	u2990
  4815     0937                     u2991:
  4816     0937  2940               	goto	l2624
  4817     0938                     u2990:
  4818     0938                     l2622:
  4819     0938  3000               	movlw	0
  4820     0939  00A3               	movwf	___fldiv@a+3
  4821     093A  3000               	movlw	0
  4822     093B  00A2               	movwf	___fldiv@a+2
  4823     093C  3000               	movlw	0
  4824     093D  00A1               	movwf	___fldiv@a+1
  4825     093E  3000               	movlw	0
  4826     093F  00A0               	movwf	___fldiv@a
  4827     0940                     l2624:
  4828     0940  17A2               	bsf	___fldiv@a+2,7
  4829     0941                     l2626:
  4830     0941  01A3               	clrf	___fldiv@a+3
  4831     0942  294B               	goto	l776
  4832     0943                     l2628:
  4833     0943  3000               	movlw	0
  4834     0944  00A3               	movwf	___fldiv@a+3
  4835     0945  3000               	movlw	0
  4836     0946  00A2               	movwf	___fldiv@a+2
  4837     0947  3000               	movlw	0
  4838     0948  00A1               	movwf	___fldiv@a+1
  4839     0949  3000               	movlw	0
  4840     094A  00A0               	movwf	___fldiv@a
  4841     094B                     l776:
  4842     094B  0823               	movf	___fldiv@a+3,w
  4843     094C  0422               	iorwf	___fldiv@a+2,w
  4844     094D  0421               	iorwf	___fldiv@a+1,w
  4845     094E  0420               	iorwf	___fldiv@a,w
  4846     094F  1D03               	skipz
  4847     0950  2952               	goto	u3001
  4848     0951  2953               	goto	u3000
  4849     0952                     u3001:
  4850     0952  296C               	goto	l2638
  4851     0953                     u3000:
  4852     0953                     l2630:
  4853     0953  3000               	movlw	0
  4854     0954  00A7               	movwf	___fldiv@b+3
  4855     0955  3000               	movlw	0
  4856     0956  00A6               	movwf	___fldiv@b+2
  4857     0957  3000               	movlw	0
  4858     0958  00A5               	movwf	___fldiv@b+1
  4859     0959  3000               	movlw	0
  4860     095A  00A4               	movwf	___fldiv@b
  4861     095B  3080               	movlw	128
  4862     095C  04A6               	iorwf	___fldiv@b+2,f
  4863     095D  307F               	movlw	127
  4864     095E  04A7               	iorwf	___fldiv@b+3,f
  4865     095F                     l2632:
  4866     095F  0831               	movf	___fldiv@sign,w
  4867     0960  00FF               	movwf	btemp+1
  4868     0961  087F               	movf	btemp+1,w
  4869     0962  04A7               	iorwf	___fldiv@b+3,f
  4870     0963                     l2634:
  4871     0963  0827               	movf	___fldiv@b+3,w
  4872     0964  00A3               	movwf	?___fldiv+3
  4873     0965  0826               	movf	___fldiv@b+2,w
  4874     0966  00A2               	movwf	?___fldiv+2
  4875     0967  0825               	movf	___fldiv@b+1,w
  4876     0968  00A1               	movwf	?___fldiv+1
  4877     0969  0824               	movf	___fldiv@b,w
  4878     096A  00A0               	movwf	?___fldiv
  4879     096B  2AC3               	goto	l778
  4880     096C                     l2638:
  4881     096C  0838               	movf	___fldiv@bexp,w
  4882     096D  1D03               	btfss	3,2
  4883     096E  2970               	goto	u3011
  4884     096F  2971               	goto	u3010
  4885     0970                     u3011:
  4886     0970  297A               	goto	l2644
  4887     0971                     u3010:
  4888     0971                     l2640:
  4889     0971  3000               	movlw	0
  4890     0972  00A3               	movwf	?___fldiv+3
  4891     0973  3000               	movlw	0
  4892     0974  00A2               	movwf	?___fldiv+2
  4893     0975  3000               	movlw	0
  4894     0976  00A1               	movwf	?___fldiv+1
  4895     0977  3000               	movlw	0
  4896     0978  00A0               	movwf	?___fldiv
  4897     0979  2AC3               	goto	l778
  4898     097A                     l2644:
  4899     097A  0838               	movf	___fldiv@bexp,w
  4900     097B  00A8               	movwf	??___fldiv
  4901     097C  01A9               	clrf	??___fldiv+1
  4902     097D  0829               	movf	??___fldiv+1,w
  4903     097E  00AB               	movwf	??___fldiv+3
  4904     097F  0839               	movf	___fldiv@aexp,w
  4905     0980  0228               	subwf	??___fldiv,w
  4906     0981  00AA               	movwf	??___fldiv+2
  4907     0982  1C03               	skipc
  4908     0983  03AB               	decf	??___fldiv+3,f
  4909     0984  082A               	movf	??___fldiv+2,w
  4910     0985  3E7F               	addlw	127
  4911     0986  00B2               	movwf	___fldiv@new_exp
  4912     0987  082B               	movf	??___fldiv+3,w
  4913     0988  1803               	skipnc
  4914     0989  3E01               	addlw	1
  4915     098A  3E00               	addlw	0
  4916     098B  00B3               	movwf	___fldiv@new_exp+1
  4917     098C                     l2646:
  4918     098C  0827               	movf	___fldiv@b+3,w
  4919     098D  00B0               	movwf	___fldiv@rem+3
  4920     098E  0826               	movf	___fldiv@b+2,w
  4921     098F  00AF               	movwf	___fldiv@rem+2
  4922     0990  0825               	movf	___fldiv@b+1,w
  4923     0991  00AE               	movwf	___fldiv@rem+1
  4924     0992  0824               	movf	___fldiv@b,w
  4925     0993  00AD               	movwf	___fldiv@rem
  4926     0994                     l2648:
  4927     0994  3000               	movlw	0
  4928     0995  00A7               	movwf	___fldiv@b+3
  4929     0996  3000               	movlw	0
  4930     0997  00A6               	movwf	___fldiv@b+2
  4931     0998  3000               	movlw	0
  4932     0999  00A5               	movwf	___fldiv@b+1
  4933     099A  3000               	movlw	0
  4934     099B  00A4               	movwf	___fldiv@b
  4935     099C                     l2650:
  4936     099C  3000               	movlw	0
  4937     099D  00B7               	movwf	___fldiv@grs+3
  4938     099E  3000               	movlw	0
  4939     099F  00B6               	movwf	___fldiv@grs+2
  4940     09A0  3000               	movlw	0
  4941     09A1  00B5               	movwf	___fldiv@grs+1
  4942     09A2  3000               	movlw	0
  4943     09A3  00B4               	movwf	___fldiv@grs
  4944     09A4                     l2652:
  4945     09A4  01B9               	clrf	___fldiv@aexp
  4946     09A5  29F0               	goto	l2672
  4947     09A6                     l2654:
  4948     09A6  0839               	movf	___fldiv@aexp,w
  4949     09A7  1903               	btfsc	3,2
  4950     09A8  29AA               	goto	u3021
  4951     09A9  29AB               	goto	u3020
  4952     09AA                     u3021:
  4953     09AA  29CB               	goto	l2664
  4954     09AB                     u3020:
  4955     09AB                     l2656:
  4956     09AB  3001               	movlw	1
  4957     09AC  00A8               	movwf	??___fldiv
  4958     09AD                     u3035:
  4959     09AD  1003               	clrc
  4960     09AE  0DAD               	rlf	___fldiv@rem,f
  4961     09AF  0DAE               	rlf	___fldiv@rem+1,f
  4962     09B0  0DAF               	rlf	___fldiv@rem+2,f
  4963     09B1  0DB0               	rlf	___fldiv@rem+3,f
  4964     09B2  0BA8               	decfsz	??___fldiv,f
  4965     09B3  29AD               	goto	u3035
  4966     09B4  3001               	movlw	1
  4967     09B5  00A8               	movwf	??___fldiv
  4968     09B6                     u3045:
  4969     09B6  1003               	clrc
  4970     09B7  0DA4               	rlf	___fldiv@b,f
  4971     09B8  0DA5               	rlf	___fldiv@b+1,f
  4972     09B9  0DA6               	rlf	___fldiv@b+2,f
  4973     09BA  0DA7               	rlf	___fldiv@b+3,f
  4974     09BB  0BA8               	decfsz	??___fldiv,f
  4975     09BC  29B6               	goto	u3045
  4976     09BD                     l2658:
  4977     09BD  1FB7               	btfss	___fldiv@grs+3,7
  4978     09BE  29C0               	goto	u3051
  4979     09BF  29C1               	goto	u3050
  4980     09C0                     u3051:
  4981     09C0  29C2               	goto	l2662
  4982     09C1                     u3050:
  4983     09C1                     l2660:
  4984     09C1  1424               	bsf	___fldiv@b,0
  4985     09C2                     l2662:
  4986     09C2  3001               	movlw	1
  4987     09C3  00A8               	movwf	??___fldiv
  4988     09C4                     u3065:
  4989     09C4  1003               	clrc
  4990     09C5  0DB4               	rlf	___fldiv@grs,f
  4991     09C6  0DB5               	rlf	___fldiv@grs+1,f
  4992     09C7  0DB6               	rlf	___fldiv@grs+2,f
  4993     09C8  0DB7               	rlf	___fldiv@grs+3,f
  4994     09C9  0BA8               	decfsz	??___fldiv,f
  4995     09CA  29C4               	goto	u3065
  4996     09CB                     l2664:
  4997     09CB  0823               	movf	___fldiv@a+3,w
  4998     09CC  0230               	subwf	___fldiv@rem+3,w
  4999     09CD  1D03               	skipz
  5000     09CE  29D9               	goto	u3075
  5001     09CF  0822               	movf	___fldiv@a+2,w
  5002     09D0  022F               	subwf	___fldiv@rem+2,w
  5003     09D1  1D03               	skipz
  5004     09D2  29D9               	goto	u3075
  5005     09D3  0821               	movf	___fldiv@a+1,w
  5006     09D4  022E               	subwf	___fldiv@rem+1,w
  5007     09D5  1D03               	skipz
  5008     09D6  29D9               	goto	u3075
  5009     09D7  0820               	movf	___fldiv@a,w
  5010     09D8  022D               	subwf	___fldiv@rem,w
  5011     09D9                     u3075:
  5012     09D9  1C03               	skipc
  5013     09DA  29DC               	goto	u3071
  5014     09DB  29DD               	goto	u3070
  5015     09DC                     u3071:
  5016     09DC  29EC               	goto	l2670
  5017     09DD                     u3070:
  5018     09DD                     l2666:
  5019     09DD  1737               	bsf	___fldiv@grs+3,6
  5020     09DE                     l2668:
  5021     09DE  0820               	movf	___fldiv@a,w
  5022     09DF  02AD               	subwf	___fldiv@rem,f
  5023     09E0  0821               	movf	___fldiv@a+1,w
  5024     09E1  1C03               	skipc
  5025     09E2  0F21               	incfsz	___fldiv@a+1,w
  5026     09E3  02AE               	subwf	___fldiv@rem+1,f
  5027     09E4  0822               	movf	___fldiv@a+2,w
  5028     09E5  1C03               	skipc
  5029     09E6  0F22               	incfsz	___fldiv@a+2,w
  5030     09E7  02AF               	subwf	___fldiv@rem+2,f
  5031     09E8  0823               	movf	___fldiv@a+3,w
  5032     09E9  1C03               	skipc
  5033     09EA  0F23               	incfsz	___fldiv@a+3,w
  5034     09EB  02B0               	subwf	___fldiv@rem+3,f
  5035     09EC                     l2670:
  5036     09EC  3001               	movlw	1
  5037     09ED  00FF               	movwf	btemp+1
  5038     09EE  087F               	movf	btemp+1,w
  5039     09EF  07B9               	addwf	___fldiv@aexp,f
  5040     09F0                     l2672:
  5041     09F0  301A               	movlw	26
  5042     09F1  0239               	subwf	___fldiv@aexp,w
  5043     09F2  1C03               	skipc
  5044     09F3  29F5               	goto	u3081
  5045     09F4  29F6               	goto	u3080
  5046     09F5                     u3081:
  5047     09F5  29A6               	goto	l2654
  5048     09F6                     u3080:
  5049     09F6                     l2674:
  5050     09F6  0830               	movf	___fldiv@rem+3,w
  5051     09F7  042F               	iorwf	___fldiv@rem+2,w
  5052     09F8  042E               	iorwf	___fldiv@rem+1,w
  5053     09F9  042D               	iorwf	___fldiv@rem,w
  5054     09FA  1903               	skipnz
  5055     09FB  29FD               	goto	u3091
  5056     09FC  29FE               	goto	u3090
  5057     09FD                     u3091:
  5058     09FD  2A1D               	goto	l2688
  5059     09FE                     u3090:
  5060     09FE                     l2676:
  5061     09FE  1434               	bsf	___fldiv@grs,0
  5062     09FF  2A1D               	goto	l2688
  5063     0A00                     l2678:
  5064     0A00  3001               	movlw	1
  5065     0A01  00A8               	movwf	??___fldiv
  5066     0A02                     u3105:
  5067     0A02  1003               	clrc
  5068     0A03  0DA4               	rlf	___fldiv@b,f
  5069     0A04  0DA5               	rlf	___fldiv@b+1,f
  5070     0A05  0DA6               	rlf	___fldiv@b+2,f
  5071     0A06  0DA7               	rlf	___fldiv@b+3,f
  5072     0A07  0BA8               	decfsz	??___fldiv,f
  5073     0A08  2A02               	goto	u3105
  5074     0A09                     l2680:
  5075     0A09  1FB7               	btfss	___fldiv@grs+3,7
  5076     0A0A  2A0C               	goto	u3111
  5077     0A0B  2A0D               	goto	u3110
  5078     0A0C                     u3111:
  5079     0A0C  2A0E               	goto	l2684
  5080     0A0D                     u3110:
  5081     0A0D                     l2682:
  5082     0A0D  1424               	bsf	___fldiv@b,0
  5083     0A0E                     l2684:
  5084     0A0E  3001               	movlw	1
  5085     0A0F  00A8               	movwf	??___fldiv
  5086     0A10                     u3125:
  5087     0A10  1003               	clrc
  5088     0A11  0DB4               	rlf	___fldiv@grs,f
  5089     0A12  0DB5               	rlf	___fldiv@grs+1,f
  5090     0A13  0DB6               	rlf	___fldiv@grs+2,f
  5091     0A14  0DB7               	rlf	___fldiv@grs+3,f
  5092     0A15  0BA8               	decfsz	??___fldiv,f
  5093     0A16  2A10               	goto	u3125
  5094     0A17                     l2686:
  5095     0A17  30FF               	movlw	255
  5096     0A18  07B2               	addwf	___fldiv@new_exp,f
  5097     0A19  1803               	skipnc
  5098     0A1A  0AB3               	incf	___fldiv@new_exp+1,f
  5099     0A1B  30FF               	movlw	255
  5100     0A1C  07B3               	addwf	___fldiv@new_exp+1,f
  5101     0A1D                     l2688:
  5102     0A1D  1FA6               	btfss	___fldiv@b+2,7
  5103     0A1E  2A20               	goto	u3131
  5104     0A1F  2A21               	goto	u3130
  5105     0A20                     u3131:
  5106     0A20  2A00               	goto	l2678
  5107     0A21                     u3130:
  5108     0A21                     l2690:
  5109     0A21  01B9               	clrf	___fldiv@aexp
  5110     0A22                     l2692:
  5111     0A22  1FB7               	btfss	___fldiv@grs+3,7
  5112     0A23  2A25               	goto	u3141
  5113     0A24  2A26               	goto	u3140
  5114     0A25                     u3141:
  5115     0A25  2A42               	goto	l2700
  5116     0A26                     u3140:
  5117     0A26                     l2694:
  5118     0A26  30FF               	movlw	255
  5119     0A27  0534               	andwf	___fldiv@grs,w
  5120     0A28  00A8               	movwf	??___fldiv
  5121     0A29  30FF               	movlw	255
  5122     0A2A  0535               	andwf	___fldiv@grs+1,w
  5123     0A2B  00A9               	movwf	??___fldiv+1
  5124     0A2C  30FF               	movlw	255
  5125     0A2D  0536               	andwf	___fldiv@grs+2,w
  5126     0A2E  00AA               	movwf	??___fldiv+2
  5127     0A2F  307F               	movlw	127
  5128     0A30  0537               	andwf	___fldiv@grs+3,w
  5129     0A31  00AB               	movwf	??___fldiv+3
  5130     0A32  082B               	movf	??___fldiv+3,w
  5131     0A33  042A               	iorwf	??___fldiv+2,w
  5132     0A34  0429               	iorwf	??___fldiv+1,w
  5133     0A35  0428               	iorwf	??___fldiv,w
  5134     0A36  1903               	skipnz
  5135     0A37  2A39               	goto	u3151
  5136     0A38  2A3A               	goto	u3150
  5137     0A39                     u3151:
  5138     0A39  2A3D               	goto	l792
  5139     0A3A                     u3150:
  5140     0A3A                     l2696:
  5141     0A3A  01B9               	clrf	___fldiv@aexp
  5142     0A3B  0AB9               	incf	___fldiv@aexp,f
  5143     0A3C  2A42               	goto	l2700
  5144     0A3D                     l792:
  5145     0A3D  1C24               	btfss	___fldiv@b,0
  5146     0A3E  2A40               	goto	u3161
  5147     0A3F  2A41               	goto	u3160
  5148     0A40                     u3161:
  5149     0A40  2A42               	goto	l2700
  5150     0A41                     u3160:
  5151     0A41  2A3A               	goto	l2696
  5152     0A42                     l2700:
  5153     0A42  0839               	movf	___fldiv@aexp,w
  5154     0A43  1903               	btfsc	3,2
  5155     0A44  2A46               	goto	u3171
  5156     0A45  2A47               	goto	u3170
  5157     0A46                     u3171:
  5158     0A46  2A78               	goto	l2710
  5159     0A47                     u3170:
  5160     0A47                     l2702:
  5161     0A47  3001               	movlw	1
  5162     0A48  07A4               	addwf	___fldiv@b,f
  5163     0A49  3000               	movlw	0
  5164     0A4A  1803               	skipnc
  5165     0A4B  3001               	movlw	1
  5166     0A4C  07A5               	addwf	___fldiv@b+1,f
  5167     0A4D  3000               	movlw	0
  5168     0A4E  1803               	skipnc
  5169     0A4F  3001               	movlw	1
  5170     0A50  07A6               	addwf	___fldiv@b+2,f
  5171     0A51  3000               	movlw	0
  5172     0A52  1803               	skipnc
  5173     0A53  3001               	movlw	1
  5174     0A54  07A7               	addwf	___fldiv@b+3,f
  5175     0A55                     l2704:
  5176     0A55  1C27               	btfss	___fldiv@b+3,0
  5177     0A56  2A58               	goto	u3181
  5178     0A57  2A59               	goto	u3180
  5179     0A58                     u3181:
  5180     0A58  2A78               	goto	l2710
  5181     0A59                     u3180:
  5182     0A59                     l2706:
  5183     0A59  0824               	movf	___fldiv@b,w
  5184     0A5A  00A8               	movwf	??___fldiv
  5185     0A5B  0825               	movf	___fldiv@b+1,w
  5186     0A5C  00A9               	movwf	??___fldiv+1
  5187     0A5D  0826               	movf	___fldiv@b+2,w
  5188     0A5E  00AA               	movwf	??___fldiv+2
  5189     0A5F  0827               	movf	___fldiv@b+3,w
  5190     0A60  00AB               	movwf	??___fldiv+3
  5191     0A61  3001               	movlw	1
  5192     0A62  00AC               	movwf	??___fldiv+4
  5193     0A63                     u3195:
  5194     0A63  0D2B               	rlf	??___fldiv+3,w
  5195     0A64  0CAB               	rrf	??___fldiv+3,f
  5196     0A65  0CAA               	rrf	??___fldiv+2,f
  5197     0A66  0CA9               	rrf	??___fldiv+1,f
  5198     0A67  0CA8               	rrf	??___fldiv,f
  5199     0A68                     u3190:
  5200     0A68  0BAC               	decfsz	??___fldiv+4,f
  5201     0A69  2A63               	goto	u3195
  5202     0A6A  082B               	movf	??___fldiv+3,w
  5203     0A6B  00A7               	movwf	___fldiv@b+3
  5204     0A6C  082A               	movf	??___fldiv+2,w
  5205     0A6D  00A6               	movwf	___fldiv@b+2
  5206     0A6E  0829               	movf	??___fldiv+1,w
  5207     0A6F  00A5               	movwf	___fldiv@b+1
  5208     0A70  0828               	movf	??___fldiv,w
  5209     0A71  00A4               	movwf	___fldiv@b
  5210     0A72                     l2708:
  5211     0A72  3001               	movlw	1
  5212     0A73  07B2               	addwf	___fldiv@new_exp,f
  5213     0A74  1803               	skipnc
  5214     0A75  0AB3               	incf	___fldiv@new_exp+1,f
  5215     0A76  3000               	movlw	0
  5216     0A77  07B3               	addwf	___fldiv@new_exp+1,f
  5217     0A78                     l2710:
  5218     0A78  0833               	movf	___fldiv@new_exp+1,w
  5219     0A79  3A80               	xorlw	128
  5220     0A7A  00FF               	movwf	btemp+1
  5221     0A7B  3080               	movlw	128
  5222     0A7C  027F               	subwf	btemp+1,w
  5223     0A7D  1D03               	skipz
  5224     0A7E  2A81               	goto	u3205
  5225     0A7F  30FF               	movlw	255
  5226     0A80  0232               	subwf	___fldiv@new_exp,w
  5227     0A81                     u3205:
  5228     0A81  1C03               	skipc
  5229     0A82  2A84               	goto	u3201
  5230     0A83  2A85               	goto	u3200
  5231     0A84                     u3201:
  5232     0A84  2A93               	goto	l2714
  5233     0A85                     u3200:
  5234     0A85                     l2712:
  5235     0A85  30FF               	movlw	255
  5236     0A86  1283               	bcf	3,5	;RP0=0, select bank0
  5237     0A87  1303               	bcf	3,6	;RP1=0, select bank0
  5238     0A88  00B2               	movwf	___fldiv@new_exp
  5239     0A89  3000               	movlw	0
  5240     0A8A  00B3               	movwf	___fldiv@new_exp+1
  5241     0A8B  3000               	movlw	0
  5242     0A8C  00A7               	movwf	___fldiv@b+3
  5243     0A8D  3000               	movlw	0
  5244     0A8E  00A6               	movwf	___fldiv@b+2
  5245     0A8F  3000               	movlw	0
  5246     0A90  00A5               	movwf	___fldiv@b+1
  5247     0A91  3000               	movlw	0
  5248     0A92  00A4               	movwf	___fldiv@b
  5249     0A93                     l2714:
  5250     0A93  1283               	bcf	3,5	;RP0=0, select bank0
  5251     0A94  1303               	bcf	3,6	;RP1=0, select bank0
  5252     0A95  0833               	movf	___fldiv@new_exp+1,w
  5253     0A96  3A80               	xorlw	128
  5254     0A97  00FF               	movwf	btemp+1
  5255     0A98  3080               	movlw	128
  5256     0A99  027F               	subwf	btemp+1,w
  5257     0A9A  1D03               	skipz
  5258     0A9B  2A9E               	goto	u3215
  5259     0A9C  3001               	movlw	1
  5260     0A9D  0232               	subwf	___fldiv@new_exp,w
  5261     0A9E                     u3215:
  5262     0A9E  1803               	skipnc
  5263     0A9F  2AA1               	goto	u3211
  5264     0AA0  2AA2               	goto	u3210
  5265     0AA1                     u3211:
  5266     0AA1  2AAF               	goto	l798
  5267     0AA2                     u3210:
  5268     0AA2                     l2716:
  5269     0AA2  1283               	bcf	3,5	;RP0=0, select bank0
  5270     0AA3  1303               	bcf	3,6	;RP1=0, select bank0
  5271     0AA4  01B2               	clrf	___fldiv@new_exp
  5272     0AA5  01B3               	clrf	___fldiv@new_exp+1
  5273     0AA6                     l2718:
  5274     0AA6  3000               	movlw	0
  5275     0AA7  00A7               	movwf	___fldiv@b+3
  5276     0AA8  3000               	movlw	0
  5277     0AA9  00A6               	movwf	___fldiv@b+2
  5278     0AAA  3000               	movlw	0
  5279     0AAB  00A5               	movwf	___fldiv@b+1
  5280     0AAC  3000               	movlw	0
  5281     0AAD  00A4               	movwf	___fldiv@b
  5282     0AAE                     l2720:
  5283     0AAE  01B1               	clrf	___fldiv@sign
  5284     0AAF                     l798:
  5285     0AAF  1283               	bcf	3,5	;RP0=0, select bank0
  5286     0AB0  1303               	bcf	3,6	;RP1=0, select bank0
  5287     0AB1  0832               	movf	___fldiv@new_exp,w
  5288     0AB2  00B8               	movwf	___fldiv@bexp
  5289     0AB3                     l2722:
  5290     0AB3  1C38               	btfss	___fldiv@bexp,0
  5291     0AB4  2AB6               	goto	u3221
  5292     0AB5  2AB7               	goto	u3220
  5293     0AB6                     u3221:
  5294     0AB6  2AB9               	goto	l2726
  5295     0AB7                     u3220:
  5296     0AB7                     l2724:
  5297     0AB7  17A6               	bsf	___fldiv@b+2,7
  5298     0AB8  2ABD               	goto	l2728
  5299     0AB9                     l2726:
  5300     0AB9  307F               	movlw	127
  5301     0ABA  00FF               	movwf	btemp+1
  5302     0ABB  087F               	movf	btemp+1,w
  5303     0ABC  05A6               	andwf	___fldiv@b+2,f
  5304     0ABD                     l2728:
  5305     0ABD  0838               	movf	___fldiv@bexp,w
  5306     0ABE  00A8               	movwf	??___fldiv
  5307     0ABF  1003               	clrc
  5308     0AC0  0C28               	rrf	??___fldiv,w
  5309     0AC1  00A7               	movwf	___fldiv@b+3
  5310     0AC2  295F               	goto	l2632
  5311     0AC3                     l778:
  5312     0AC3  0008               	return
  5313     0AC4                     __end_of___fldiv:
  5314                           
  5315                           	psect	text13
  5316     137C                     __ptext13:	
  5317 ;; *************** function _UART_Write_Text *****************
  5318 ;; Defined at:
  5319 ;;		line 18 in file "uart_lib.c"
  5320 ;; Parameters:    Size  Location     Type
  5321 ;;  text            2    1[BANK0 ] PTR unsigned char 
  5322 ;;		 -> STR_41(5), STR_40(5), STR_37(5), main@combinedText_375(20), 
  5323 ;;		 -> main@uartMessage_371(8), STR_31(5), main@combinedText(20), main@uartMessage(8), 
  5324 ;;		 -> STR_25(5), 
  5325 ;; Auto vars:     Size  Location     Type
  5326 ;;  i               2    6[BANK0 ] int 
  5327 ;; Return value:  Size  Location     Type
  5328 ;;                  1    wreg      void 
  5329 ;; Registers used:
  5330 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5331 ;; Tracked objects:
  5332 ;;		On entry : 0/0
  5333 ;;		On exit  : 0/0
  5334 ;;		Unchanged: 0/0
  5335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5336 ;;      Params:         0       2       0       0       0
  5337 ;;      Locals:         0       2       0       0       0
  5338 ;;      Temps:          0       3       0       0       0
  5339 ;;      Totals:         0       7       0       0       0
  5340 ;;Total ram usage:        7 bytes
  5341 ;; Hardware stack levels used: 1
  5342 ;; Hardware stack levels required when called: 3
  5343 ;; This function calls:
  5344 ;;		_UART_Write
  5345 ;; This function is called by:
  5346 ;;		_main
  5347 ;; This function uses a non-reentrant model
  5348 ;;
  5349                           
  5350     137C                     _UART_Write_Text:	
  5351                           ;psect for function _UART_Write_Text
  5352                           
  5353     137C                     l3756:	
  5354                           ;incstack = 0
  5355                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5356                           
  5357                           
  5358                           ;uart_lib.c: 18: void UART_Write_Text(char *text);uart_lib.c: 19: {;uart_lib.c: 20:   in
      +                          t i;;uart_lib.c: 21:   for(i=0;text[i]!='\0';i++)
  5359     137C  1283               	bcf	3,5	;RP0=0, select bank0
  5360     137D  1303               	bcf	3,6	;RP1=0, select bank0
  5361     137E  01A6               	clrf	UART_Write_Text@i
  5362     137F  01A7               	clrf	UART_Write_Text@i+1
  5363     1380  2BA5               	goto	l3762
  5364     1381                     l3758:
  5365                           
  5366                           ;uart_lib.c: 22:     UART_Write(text[i]);
  5367     1381  0826               	movf	UART_Write_Text@i,w
  5368     1382  0721               	addwf	UART_Write_Text@text,w
  5369     1383  00A4               	movwf	??_UART_Write_Text+1
  5370     1384  0822               	movf	UART_Write_Text@text+1,w
  5371     1385  00A3               	movwf	??_UART_Write_Text
  5372     1386  1803               	skipnc
  5373     1387  0AA3               	incf	??_UART_Write_Text,f
  5374     1388  1FA6               	btfss	UART_Write_Text@i,7
  5375     1389  2B8B               	goto	u4870
  5376     138A  03A3               	decf	??_UART_Write_Text,f
  5377     138B                     u4870:
  5378     138B  1283               	bcf	3,5	;RP0=0, select bank0
  5379     138C  1303               	bcf	3,6	;RP1=0, select bank0
  5380     138D  0823               	movf	??_UART_Write_Text,w
  5381     138E  00A5               	movwf	??_UART_Write_Text+2
  5382     138F  0825               	movf	??_UART_Write_Text+2,w
  5383     1390  00FF               	movwf	btemp+1
  5384     1391  0824               	movf	??_UART_Write_Text+1,w
  5385     1392  0084               	movwf	4
  5386     1393  160A  158A  2000  160A  118A  	fcall	stringtab
  5387     1398  160A  118A  2204  160A  118A  	fcall	_UART_Write
  5388     139D                     l3760:
  5389     139D  3001               	movlw	1
  5390     139E  1283               	bcf	3,5	;RP0=0, select bank0
  5391     139F  1303               	bcf	3,6	;RP1=0, select bank0
  5392     13A0  07A6               	addwf	UART_Write_Text@i,f
  5393     13A1  1803               	skipnc
  5394     13A2  0AA7               	incf	UART_Write_Text@i+1,f
  5395     13A3  3000               	movlw	0
  5396     13A4  07A7               	addwf	UART_Write_Text@i+1,f
  5397     13A5                     l3762:
  5398     13A5  0826               	movf	UART_Write_Text@i,w
  5399     13A6  0721               	addwf	UART_Write_Text@text,w
  5400     13A7  00A4               	movwf	??_UART_Write_Text+1
  5401     13A8  0822               	movf	UART_Write_Text@text+1,w
  5402     13A9  00A3               	movwf	??_UART_Write_Text
  5403     13AA  1803               	skipnc
  5404     13AB  0AA3               	incf	??_UART_Write_Text,f
  5405     13AC  1FA6               	btfss	UART_Write_Text@i,7
  5406     13AD  2BAF               	goto	u4880
  5407     13AE  03A3               	decf	??_UART_Write_Text,f
  5408     13AF                     u4880:
  5409     13AF  1283               	bcf	3,5	;RP0=0, select bank0
  5410     13B0  1303               	bcf	3,6	;RP1=0, select bank0
  5411     13B1  0823               	movf	??_UART_Write_Text,w
  5412     13B2  00A5               	movwf	??_UART_Write_Text+2
  5413     13B3  0825               	movf	??_UART_Write_Text+2,w
  5414     13B4  00FF               	movwf	btemp+1
  5415     13B5  0824               	movf	??_UART_Write_Text+1,w
  5416     13B6  0084               	movwf	4
  5417     13B7  160A  158A  2000  160A  118A  	fcall	stringtab
  5418     13BC  3A00               	xorlw	0
  5419     13BD  1D03               	skipz
  5420     13BE  2BC0               	goto	u4891
  5421     13BF  2BC1               	goto	u4890
  5422     13C0                     u4891:
  5423     13C0  2B81               	goto	l3758
  5424     13C1                     u4890:
  5425     13C1                     l287:
  5426     13C1  0008               	return
  5427     13C2                     __end_of_UART_Write_Text:
  5428                           
  5429                           	psect	text14
  5430     1204                     __ptext14:	
  5431 ;; *************** function _UART_Write *****************
  5432 ;; Defined at:
  5433 ;;		line 12 in file "uart_lib.c"
  5434 ;; Parameters:    Size  Location     Type
  5435 ;;  data            1    wreg     unsigned char 
  5436 ;; Auto vars:     Size  Location     Type
  5437 ;;  data            1    0[BANK0 ] unsigned char 
  5438 ;; Return value:  Size  Location     Type
  5439 ;;                  1    wreg      void 
  5440 ;; Registers used:
  5441 ;;		wreg
  5442 ;; Tracked objects:
  5443 ;;		On entry : 0/0
  5444 ;;		On exit  : 0/0
  5445 ;;		Unchanged: 0/0
  5446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5447 ;;      Params:         0       0       0       0       0
  5448 ;;      Locals:         0       1       0       0       0
  5449 ;;      Temps:          0       0       0       0       0
  5450 ;;      Totals:         0       1       0       0       0
  5451 ;;Total ram usage:        1 bytes
  5452 ;; Hardware stack levels used: 1
  5453 ;; Hardware stack levels required when called: 2
  5454 ;; This function calls:
  5455 ;;		Nothing
  5456 ;; This function is called by:
  5457 ;;		_UART_Write_Text
  5458 ;; This function uses a non-reentrant model
  5459 ;;
  5460                           
  5461     1204                     _UART_Write:	
  5462                           ;psect for function _UART_Write
  5463                           
  5464                           
  5465                           ;incstack = 0
  5466                           ; Regs used in _UART_Write: [wreg]
  5467                           ;UART_Write@data stored from wreg
  5468     1204  1283               	bcf	3,5	;RP0=0, select bank0
  5469     1205  1303               	bcf	3,6	;RP1=0, select bank0
  5470     1206  00A0               	movwf	UART_Write@data
  5471     1207                     l3542:
  5472     1207                     l278:	
  5473                           ;uart_lib.c: 12: void UART_Write(char data);uart_lib.c: 13: {;uart_lib.c: 14:   while(!T
      +                          RMT);
  5474                           
  5475     1207  1683               	bsf	3,5	;RP0=1, select bank1
  5476     1208  1303               	bcf	3,6	;RP1=0, select bank1
  5477     1209  1C98               	btfss	24,1	;volatile
  5478     120A  2A0C               	goto	u4511
  5479     120B  2A0D               	goto	u4510
  5480     120C                     u4511:
  5481     120C  2A07               	goto	l278
  5482     120D                     u4510:
  5483     120D                     l3544:
  5484                           
  5485                           ;uart_lib.c: 15:   TXREG = data;
  5486     120D  1283               	bcf	3,5	;RP0=0, select bank0
  5487     120E  1303               	bcf	3,6	;RP1=0, select bank0
  5488     120F  0820               	movf	UART_Write@data,w
  5489     1210  0099               	movwf	25	;volatile
  5490     1211                     l281:
  5491     1211  0008               	return
  5492     1212                     __end_of_UART_Write:
  5493                           
  5494                           	psect	text15
  5495     1212                     __ptext15:	
  5496 ;; *************** function _UART_Initialize *****************
  5497 ;; Defined at:
  5498 ;;		line 4 in file "uart_lib.c"
  5499 ;; Parameters:    Size  Location     Type
  5500 ;;		None
  5501 ;; Auto vars:     Size  Location     Type
  5502 ;;		None
  5503 ;; Return value:  Size  Location     Type
  5504 ;;                  1    wreg      void 
  5505 ;; Registers used:
  5506 ;;		wreg, status,2
  5507 ;; Tracked objects:
  5508 ;;		On entry : 0/0
  5509 ;;		On exit  : 0/0
  5510 ;;		Unchanged: 0/0
  5511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5512 ;;      Params:         0       0       0       0       0
  5513 ;;      Locals:         0       0       0       0       0
  5514 ;;      Temps:          0       0       0       0       0
  5515 ;;      Totals:         0       0       0       0       0
  5516 ;;Total ram usage:        0 bytes
  5517 ;; Hardware stack levels used: 1
  5518 ;; Hardware stack levels required when called: 2
  5519 ;; This function calls:
  5520 ;;		Nothing
  5521 ;; This function is called by:
  5522 ;;		_main
  5523 ;; This function uses a non-reentrant model
  5524 ;;
  5525                           
  5526     1212                     _UART_Initialize:	
  5527                           ;psect for function _UART_Initialize
  5528                           
  5529     1212                     l2416:	
  5530                           ;incstack = 0
  5531                           ; Regs used in _UART_Initialize: [wreg+status,2]
  5532                           
  5533                           
  5534                           ;uart_lib.c: 6:     TXSTA=0b00100100;
  5535     1212  3024               	movlw	36
  5536     1213  1683               	bsf	3,5	;RP0=1, select bank1
  5537     1214  1303               	bcf	3,6	;RP1=0, select bank1
  5538     1215  0098               	movwf	24	;volatile
  5539                           
  5540                           ;uart_lib.c: 7:     RCSTA=0b10010000;
  5541     1216  3090               	movlw	144
  5542     1217  1283               	bcf	3,5	;RP0=0, select bank0
  5543     1218  1303               	bcf	3,6	;RP1=0, select bank0
  5544     1219  0098               	movwf	24	;volatile
  5545                           
  5546                           ;uart_lib.c: 8:     SPBRG=12;
  5547     121A  300C               	movlw	12
  5548     121B  1683               	bsf	3,5	;RP0=1, select bank1
  5549     121C  1303               	bcf	3,6	;RP1=0, select bank1
  5550     121D  0099               	movwf	25	;volatile
  5551     121E                     l2418:
  5552                           
  5553                           ;uart_lib.c: 9:     TXREG=0x00;
  5554     121E  1283               	bcf	3,5	;RP0=0, select bank0
  5555     121F  1303               	bcf	3,6	;RP1=0, select bank0
  5556     1220  0199               	clrf	25	;volatile
  5557     1221                     l275:
  5558     1221  0008               	return
  5559     1222                     __end_of_UART_Initialize:
  5560                           
  5561                           	psect	text16
  5562     1336                     __ptext16:	
  5563 ;; *************** function _Lcd_Write_String *****************
  5564 ;; Defined at:
  5565 ;;		line 96 in file "./lcd.h"
  5566 ;; Parameters:    Size  Location     Type
  5567 ;;  a               2    5[BANK0 ] PTR unsigned char 
  5568 ;;		 -> STR_43(24), STR_42(24), STR_39(27), STR_38(26), 
  5569 ;;		 -> STR_36(13), STR_34(14), STR_32(10), STR_30(9), 
  5570 ;;		 -> STR_28(15), STR_26(10), STR_24(9), main@rpmString(5), 
  5571 ;;		 -> STR_22(5), main@adcString1(4), STR_20(10), STR_19(3), 
  5572 ;;		 -> main@lcdText(9), STR_17(14), STR_16(19), STR_15(14), 
  5573 ;;		 -> STR_14(19), STR_13(14), STR_12(19), STR_11(14), 
  5574 ;;		 -> STR_10(19), STR_9(14), STR_8(19), STR_7(14), 
  5575 ;;		 -> STR_6(19), STR_5(21), STR_4(20), STR_3(3), 
  5576 ;;		 -> STR_2(15), STR_1(16), 
  5577 ;; Auto vars:     Size  Location     Type
  5578 ;;  i               2   10[BANK0 ] int 
  5579 ;; Return value:  Size  Location     Type
  5580 ;;                  1    wreg      void 
  5581 ;; Registers used:
  5582 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5583 ;; Tracked objects:
  5584 ;;		On entry : 0/0
  5585 ;;		On exit  : 0/0
  5586 ;;		Unchanged: 0/0
  5587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5588 ;;      Params:         0       2       0       0       0
  5589 ;;      Locals:         0       2       0       0       0
  5590 ;;      Temps:          0       3       0       0       0
  5591 ;;      Totals:         0       7       0       0       0
  5592 ;;Total ram usage:        7 bytes
  5593 ;; Hardware stack levels used: 1
  5594 ;; Hardware stack levels required when called: 4
  5595 ;; This function calls:
  5596 ;;		_Lcd_Write_Char
  5597 ;; This function is called by:
  5598 ;;		_main
  5599 ;; This function uses a non-reentrant model
  5600 ;;
  5601                           
  5602     1336                     _Lcd_Write_String:	
  5603                           ;psect for function _Lcd_Write_String
  5604                           
  5605     1336                     l3618:	
  5606                           ;incstack = 0
  5607                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5608                           
  5609                           
  5610                           ;./lcd.h: 96: void Lcd_Write_String(char *a);./lcd.h: 97: {;./lcd.h: 98:  int i;;./lcd.h
      +                          : 99:  for(i=0;a[i]!='\0';i++)
  5611     1336  1283               	bcf	3,5	;RP0=0, select bank0
  5612     1337  1303               	bcf	3,6	;RP1=0, select bank0
  5613     1338  01AA               	clrf	Lcd_Write_String@i
  5614     1339  01AB               	clrf	Lcd_Write_String@i+1
  5615     133A  2B5F               	goto	l3624
  5616     133B                     l3620:
  5617                           
  5618                           ;./lcd.h: 100:     Lcd_Write_Char(a[i]);
  5619     133B  082A               	movf	Lcd_Write_String@i,w
  5620     133C  0725               	addwf	Lcd_Write_String@a,w
  5621     133D  00A8               	movwf	??_Lcd_Write_String+1
  5622     133E  0826               	movf	Lcd_Write_String@a+1,w
  5623     133F  00A7               	movwf	??_Lcd_Write_String
  5624     1340  1803               	skipnc
  5625     1341  0AA7               	incf	??_Lcd_Write_String,f
  5626     1342  1FAA               	btfss	Lcd_Write_String@i,7
  5627     1343  2B45               	goto	u4650
  5628     1344  03A7               	decf	??_Lcd_Write_String,f
  5629     1345                     u4650:
  5630     1345  1283               	bcf	3,5	;RP0=0, select bank0
  5631     1346  1303               	bcf	3,6	;RP1=0, select bank0
  5632     1347  0827               	movf	??_Lcd_Write_String,w
  5633     1348  00A9               	movwf	??_Lcd_Write_String+2
  5634     1349  0829               	movf	??_Lcd_Write_String+2,w
  5635     134A  00FF               	movwf	btemp+1
  5636     134B  0828               	movf	??_Lcd_Write_String+1,w
  5637     134C  0084               	movwf	4
  5638     134D  160A  158A  2000  160A  118A  	fcall	stringtab
  5639     1352  120A  158A  2002  160A  118A  	fcall	_Lcd_Write_Char
  5640     1357                     l3622:
  5641     1357  3001               	movlw	1
  5642     1358  1283               	bcf	3,5	;RP0=0, select bank0
  5643     1359  1303               	bcf	3,6	;RP1=0, select bank0
  5644     135A  07AA               	addwf	Lcd_Write_String@i,f
  5645     135B  1803               	skipnc
  5646     135C  0AAB               	incf	Lcd_Write_String@i+1,f
  5647     135D  3000               	movlw	0
  5648     135E  07AB               	addwf	Lcd_Write_String@i+1,f
  5649     135F                     l3624:
  5650     135F  082A               	movf	Lcd_Write_String@i,w
  5651     1360  0725               	addwf	Lcd_Write_String@a,w
  5652     1361  00A8               	movwf	??_Lcd_Write_String+1
  5653     1362  0826               	movf	Lcd_Write_String@a+1,w
  5654     1363  00A7               	movwf	??_Lcd_Write_String
  5655     1364  1803               	skipnc
  5656     1365  0AA7               	incf	??_Lcd_Write_String,f
  5657     1366  1FAA               	btfss	Lcd_Write_String@i,7
  5658     1367  2B69               	goto	u4660
  5659     1368  03A7               	decf	??_Lcd_Write_String,f
  5660     1369                     u4660:
  5661     1369  1283               	bcf	3,5	;RP0=0, select bank0
  5662     136A  1303               	bcf	3,6	;RP1=0, select bank0
  5663     136B  0827               	movf	??_Lcd_Write_String,w
  5664     136C  00A9               	movwf	??_Lcd_Write_String+2
  5665     136D  0829               	movf	??_Lcd_Write_String+2,w
  5666     136E  00FF               	movwf	btemp+1
  5667     136F  0828               	movf	??_Lcd_Write_String+1,w
  5668     1370  0084               	movwf	4
  5669     1371  160A  158A  2000  160A  118A  	fcall	stringtab
  5670     1376  3A00               	xorlw	0
  5671     1377  1D03               	skipz
  5672     1378  2B7A               	goto	u4671
  5673     1379  2B7B               	goto	u4670
  5674     137A                     u4671:
  5675     137A  2B3B               	goto	l3620
  5676     137B                     u4670:
  5677     137B                     l145:
  5678     137B  0008               	return
  5679     137C                     __end_of_Lcd_Write_String:
  5680                           
  5681                           	psect	text17
  5682     0802                     __ptext17:	
  5683 ;; *************** function _Lcd_Write_Char *****************
  5684 ;; Defined at:
  5685 ;;		line 80 in file "./lcd.h"
  5686 ;; Parameters:    Size  Location     Type
  5687 ;;  a               1    wreg     unsigned char 
  5688 ;; Auto vars:     Size  Location     Type
  5689 ;;  a               1    4[BANK0 ] unsigned char 
  5690 ;;  y               1    3[BANK0 ] unsigned char 
  5691 ;;  temp            1    2[BANK0 ] unsigned char 
  5692 ;; Return value:  Size  Location     Type
  5693 ;;                  1    wreg      void 
  5694 ;; Registers used:
  5695 ;;		wreg, status,2, status,0, pclath, cstack
  5696 ;; Tracked objects:
  5697 ;;		On entry : 0/0
  5698 ;;		On exit  : 0/0
  5699 ;;		Unchanged: 0/0
  5700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5701 ;;      Params:         0       0       0       0       0
  5702 ;;      Locals:         0       3       0       0       0
  5703 ;;      Temps:          0       1       0       0       0
  5704 ;;      Totals:         0       4       0       0       0
  5705 ;;Total ram usage:        4 bytes
  5706 ;; Hardware stack levels used: 1
  5707 ;; Hardware stack levels required when called: 3
  5708 ;; This function calls:
  5709 ;;		_Lcd_Port
  5710 ;; This function is called by:
  5711 ;;		_Lcd_Write_String
  5712 ;; This function uses a non-reentrant model
  5713 ;;
  5714                           
  5715     0802                     _Lcd_Write_Char:	
  5716                           ;psect for function _Lcd_Write_Char
  5717                           
  5718                           
  5719                           ;incstack = 0
  5720                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  5721                           ;Lcd_Write_Char@a stored from wreg
  5722     0802  1283               	bcf	3,5	;RP0=0, select bank0
  5723     0803  1303               	bcf	3,6	;RP1=0, select bank0
  5724     0804  00A4               	movwf	Lcd_Write_Char@a
  5725     0805                     l3522:
  5726                           
  5727                           ;./lcd.h: 80: void Lcd_Write_Char(char a);./lcd.h: 81: {;./lcd.h: 82:    char temp,y;;./
      +                          lcd.h: 83:    temp = a&0x0F;
  5728     0805  0824               	movf	Lcd_Write_Char@a,w
  5729     0806  390F               	andlw	15
  5730     0807  00A2               	movwf	Lcd_Write_Char@temp
  5731                           
  5732                           ;./lcd.h: 84:    y = a&0xF0;
  5733     0808  0824               	movf	Lcd_Write_Char@a,w
  5734     0809  39F0               	andlw	240
  5735     080A  00A3               	movwf	Lcd_Write_Char@y
  5736     080B                     l3524:
  5737                           
  5738                           ;./lcd.h: 85:    RB5 = 1;
  5739     080B  1686               	bsf	6,5	;volatile
  5740     080C                     l3526:
  5741                           
  5742                           ;./lcd.h: 86:    Lcd_Port(y>>4);
  5743     080C  0823               	movf	Lcd_Write_Char@y,w
  5744     080D  00A1               	movwf	??_Lcd_Write_Char
  5745     080E  3004               	movlw	4
  5746     080F                     u4505:
  5747     080F  1003               	clrc
  5748     0810  0CA1               	rrf	??_Lcd_Write_Char,f
  5749     0811  3EFF               	addlw	-1
  5750     0812  1D03               	skipz
  5751     0813  280F               	goto	u4505
  5752     0814  0821               	movf	??_Lcd_Write_Char,w
  5753     0815  120A  118A  27DC  120A  158A  	fcall	_Lcd_Port
  5754     081A                     l3528:
  5755                           
  5756                           ;./lcd.h: 87:    RB4 = 1;
  5757     081A  1283               	bcf	3,5	;RP0=0, select bank0
  5758     081B  1303               	bcf	3,6	;RP1=0, select bank0
  5759     081C  1606               	bsf	6,4	;volatile
  5760     081D                     l3530:
  5761                           
  5762                           ;./lcd.h: 88:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  5763     081D  300C               	movlw	12
  5764     081E  1283               	bcf	3,5	;RP0=0, select bank0
  5765     081F  1303               	bcf	3,6	;RP1=0, select bank0
  5766     0820  00A1               	movwf	??_Lcd_Write_Char
  5767     0821                     u6127:
  5768     0821  0BA1               	decfsz	??_Lcd_Write_Char,f
  5769     0822  2821               	goto	u6127
  5770     0823  0000               	nop
  5771     0824                     l3532:
  5772                           
  5773                           ;./lcd.h: 89:    RB4 = 0;
  5774     0824  1283               	bcf	3,5	;RP0=0, select bank0
  5775     0825  1303               	bcf	3,6	;RP1=0, select bank0
  5776     0826  1206               	bcf	6,4	;volatile
  5777     0827                     l3534:
  5778                           
  5779                           ;./lcd.h: 90:    Lcd_Port(temp);
  5780     0827  0822               	movf	Lcd_Write_Char@temp,w
  5781     0828  120A  118A  27DC  120A  158A  	fcall	_Lcd_Port
  5782     082D                     l3536:
  5783                           
  5784                           ;./lcd.h: 91:    RB4 = 1;
  5785     082D  1283               	bcf	3,5	;RP0=0, select bank0
  5786     082E  1303               	bcf	3,6	;RP1=0, select bank0
  5787     082F  1606               	bsf	6,4	;volatile
  5788     0830                     l3538:
  5789                           
  5790                           ;./lcd.h: 92:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  5791     0830  300C               	movlw	12
  5792     0831  1283               	bcf	3,5	;RP0=0, select bank0
  5793     0832  1303               	bcf	3,6	;RP1=0, select bank0
  5794     0833  00A1               	movwf	??_Lcd_Write_Char
  5795     0834                     u6137:
  5796     0834  0BA1               	decfsz	??_Lcd_Write_Char,f
  5797     0835  2834               	goto	u6137
  5798     0836  0000               	nop
  5799     0837                     l3540:
  5800                           
  5801                           ;./lcd.h: 93:    RB4 = 0;
  5802     0837  1283               	bcf	3,5	;RP0=0, select bank0
  5803     0838  1303               	bcf	3,6	;RP1=0, select bank0
  5804     0839  1206               	bcf	6,4	;volatile
  5805     083A                     l139:
  5806     083A  0008               	return
  5807     083B                     __end_of_Lcd_Write_Char:
  5808                           
  5809                           	psect	text18
  5810     1450                     __ptext18:	
  5811 ;; *************** function _Lcd_Set_Cursor *****************
  5812 ;; Defined at:
  5813 ;;		line 40 in file "./lcd.h"
  5814 ;; Parameters:    Size  Location     Type
  5815 ;;  a               1    wreg     unsigned char 
  5816 ;;  b               1    4[BANK0 ] unsigned char 
  5817 ;; Auto vars:     Size  Location     Type
  5818 ;;  a               1    6[BANK0 ] unsigned char 
  5819 ;;  temp            1    9[BANK0 ] unsigned char 
  5820 ;;  y               1    8[BANK0 ] unsigned char 
  5821 ;;  z               1    7[BANK0 ] unsigned char 
  5822 ;; Return value:  Size  Location     Type
  5823 ;;                  1    wreg      void 
  5824 ;; Registers used:
  5825 ;;		wreg, status,2, status,0, pclath, cstack
  5826 ;; Tracked objects:
  5827 ;;		On entry : 0/0
  5828 ;;		On exit  : 0/0
  5829 ;;		Unchanged: 0/0
  5830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5831 ;;      Params:         0       1       0       0       0
  5832 ;;      Locals:         0       4       0       0       0
  5833 ;;      Temps:          0       1       0       0       0
  5834 ;;      Totals:         0       6       0       0       0
  5835 ;;Total ram usage:        6 bytes
  5836 ;; Hardware stack levels used: 1
  5837 ;; Hardware stack levels required when called: 4
  5838 ;; This function calls:
  5839 ;;		_Lcd_Cmd
  5840 ;; This function is called by:
  5841 ;;		_main
  5842 ;; This function uses a non-reentrant model
  5843 ;;
  5844                           
  5845     1450                     _Lcd_Set_Cursor:	
  5846                           ;psect for function _Lcd_Set_Cursor
  5847                           
  5848                           
  5849                           ;incstack = 0
  5850                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  5851                           ;Lcd_Set_Cursor@a stored from wreg
  5852     1450  1283               	bcf	3,5	;RP0=0, select bank0
  5853     1451  1303               	bcf	3,6	;RP1=0, select bank0
  5854     1452  00A6               	movwf	Lcd_Set_Cursor@a
  5855     1453                     l3588:
  5856                           
  5857                           ;./lcd.h: 40: void Lcd_Set_Cursor(char a, char b);./lcd.h: 41: {;./lcd.h: 42:  char temp
      +                          ,z,y;;./lcd.h: 43:  if(a == 1)
  5858     1453  0326               	decf	Lcd_Set_Cursor@a,w
  5859     1454  1D03               	btfss	3,2
  5860     1455  2C57               	goto	u4611
  5861     1456  2C58               	goto	u4610
  5862     1457                     u4611:
  5863     1457  2C77               	goto	l3598
  5864     1458                     u4610:
  5865     1458                     l3590:
  5866                           
  5867                           ;./lcd.h: 44:  {;./lcd.h: 45:    temp = 0x80 + b - 1;
  5868     1458  0824               	movf	Lcd_Set_Cursor@b,w
  5869     1459  3E7F               	addlw	127
  5870     145A  00A9               	movwf	Lcd_Set_Cursor@temp
  5871                           
  5872                           ;./lcd.h: 46:   z = temp>>4;
  5873     145B  0829               	movf	Lcd_Set_Cursor@temp,w
  5874     145C  00A5               	movwf	??_Lcd_Set_Cursor
  5875     145D  3004               	movlw	4
  5876     145E                     u4625:
  5877     145E  1003               	clrc
  5878     145F  0CA5               	rrf	??_Lcd_Set_Cursor,f
  5879     1460  3EFF               	addlw	-1
  5880     1461  1D03               	skipz
  5881     1462  2C5E               	goto	u4625
  5882     1463  0825               	movf	??_Lcd_Set_Cursor,w
  5883     1464  00A7               	movwf	Lcd_Set_Cursor@z
  5884     1465                     l3592:
  5885                           
  5886                           ;./lcd.h: 47:   y = temp & 0x0F;
  5887     1465  0829               	movf	Lcd_Set_Cursor@temp,w
  5888     1466  390F               	andlw	15
  5889     1467  00A8               	movwf	Lcd_Set_Cursor@y
  5890     1468                     l3594:
  5891                           
  5892                           ;./lcd.h: 48:   Lcd_Cmd(z);
  5893     1468  0827               	movf	Lcd_Set_Cursor@z,w
  5894     1469  160A  118A  224B  160A  118A  	fcall	_Lcd_Cmd
  5895     146E                     l3596:
  5896                           
  5897                           ;./lcd.h: 49:   Lcd_Cmd(y);
  5898     146E  1283               	bcf	3,5	;RP0=0, select bank0
  5899     146F  1303               	bcf	3,6	;RP1=0, select bank0
  5900     1470  0828               	movf	Lcd_Set_Cursor@y,w
  5901     1471  160A  118A  224B  160A  118A  	fcall	_Lcd_Cmd
  5902                           
  5903                           ;./lcd.h: 50:  }
  5904     1476  2C9B               	goto	l133
  5905     1477                     l3598:
  5906     1477  3002               	movlw	2
  5907     1478  0626               	xorwf	Lcd_Set_Cursor@a,w
  5908     1479  1D03               	btfss	3,2
  5909     147A  2C7C               	goto	u4631
  5910     147B  2C7D               	goto	u4630
  5911     147C                     u4631:
  5912     147C  2C9B               	goto	l133
  5913     147D                     u4630:
  5914     147D                     l3600:
  5915                           
  5916                           ;./lcd.h: 52:  {;./lcd.h: 53:   temp = 0xC0 + b - 1;
  5917     147D  0824               	movf	Lcd_Set_Cursor@b,w
  5918     147E  3EBF               	addlw	191
  5919     147F  00A9               	movwf	Lcd_Set_Cursor@temp
  5920                           
  5921                           ;./lcd.h: 54:   z = temp>>4;
  5922     1480  0829               	movf	Lcd_Set_Cursor@temp,w
  5923     1481  00A5               	movwf	??_Lcd_Set_Cursor
  5924     1482  3004               	movlw	4
  5925     1483                     u4645:
  5926     1483  1003               	clrc
  5927     1484  0CA5               	rrf	??_Lcd_Set_Cursor,f
  5928     1485  3EFF               	addlw	-1
  5929     1486  1D03               	skipz
  5930     1487  2C83               	goto	u4645
  5931     1488  0825               	movf	??_Lcd_Set_Cursor,w
  5932     1489  00A7               	movwf	Lcd_Set_Cursor@z
  5933     148A                     l3602:
  5934                           
  5935                           ;./lcd.h: 55:   y = temp & 0x0F;
  5936     148A  0829               	movf	Lcd_Set_Cursor@temp,w
  5937     148B  390F               	andlw	15
  5938     148C  00A8               	movwf	Lcd_Set_Cursor@y
  5939     148D                     l3604:
  5940                           
  5941                           ;./lcd.h: 56:   Lcd_Cmd(z);
  5942     148D  0827               	movf	Lcd_Set_Cursor@z,w
  5943     148E  160A  118A  224B  160A  118A  	fcall	_Lcd_Cmd
  5944     1493                     l3606:
  5945                           
  5946                           ;./lcd.h: 57:   Lcd_Cmd(y);
  5947     1493  1283               	bcf	3,5	;RP0=0, select bank0
  5948     1494  1303               	bcf	3,6	;RP1=0, select bank0
  5949     1495  0828               	movf	Lcd_Set_Cursor@y,w
  5950     1496  160A  118A  224B  160A  118A  	fcall	_Lcd_Cmd
  5951     149B                     l133:
  5952     149B  0008               	return
  5953     149C                     __end_of_Lcd_Set_Cursor:
  5954                           
  5955                           	psect	text19
  5956     149C                     __ptext19:	
  5957 ;; *************** function _Lcd_Init *****************
  5958 ;; Defined at:
  5959 ;;		line 61 in file "./lcd.h"
  5960 ;; Parameters:    Size  Location     Type
  5961 ;;		None
  5962 ;; Auto vars:     Size  Location     Type
  5963 ;;		None
  5964 ;; Return value:  Size  Location     Type
  5965 ;;                  1    wreg      void 
  5966 ;; Registers used:
  5967 ;;		wreg, status,2, status,0, pclath, cstack
  5968 ;; Tracked objects:
  5969 ;;		On entry : 0/0
  5970 ;;		On exit  : 0/0
  5971 ;;		Unchanged: 0/0
  5972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5973 ;;      Params:         0       0       0       0       0
  5974 ;;      Locals:         0       0       0       0       0
  5975 ;;      Temps:          0       2       0       0       0
  5976 ;;      Totals:         0       2       0       0       0
  5977 ;;Total ram usage:        2 bytes
  5978 ;; Hardware stack levels used: 1
  5979 ;; Hardware stack levels required when called: 4
  5980 ;; This function calls:
  5981 ;;		_Lcd_Cmd
  5982 ;;		_Lcd_Port
  5983 ;; This function is called by:
  5984 ;;		_main
  5985 ;; This function uses a non-reentrant model
  5986 ;;
  5987                           
  5988     149C                     _Lcd_Init:	
  5989                           ;psect for function _Lcd_Init
  5990                           
  5991     149C                     l3608:	
  5992                           ;incstack = 0
  5993                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  5994                           
  5995                           
  5996                           ;./lcd.h: 63:   Lcd_Port(0x00);
  5997     149C  3000               	movlw	0
  5998     149D  120A  118A  27DC  160A  118A  	fcall	_Lcd_Port
  5999     14A2                     l3610:
  6000                           
  6001                           ;./lcd.h: 64:    _delay((unsigned long)((20)*(4000000/4000.0)));
  6002     14A2  301A               	movlw	26
  6003     14A3  1283               	bcf	3,5	;RP0=0, select bank0
  6004     14A4  1303               	bcf	3,6	;RP1=0, select bank0
  6005     14A5  00A5               	movwf	??_Lcd_Init+1
  6006     14A6  30F7               	movlw	247
  6007     14A7  00A4               	movwf	??_Lcd_Init
  6008     14A8                     u6147:
  6009     14A8  0BA4               	decfsz	??_Lcd_Init,f
  6010     14A9  2CA8               	goto	u6147
  6011     14AA  0BA5               	decfsz	??_Lcd_Init+1,f
  6012     14AB  2CA8               	goto	u6147
  6013     14AC  2CAD               	nop2
  6014     14AD                     l3612:
  6015                           
  6016                           ;./lcd.h: 65:   Lcd_Cmd(0x03);
  6017     14AD  3003               	movlw	3
  6018     14AE  160A  118A  224B  160A  118A  	fcall	_Lcd_Cmd
  6019                           
  6020                           ;./lcd.h: 66:  _delay((unsigned long)((5)*(4000000/4000.0)));
  6021     14B3  3007               	movlw	7
  6022     14B4  1283               	bcf	3,5	;RP0=0, select bank0
  6023     14B5  1303               	bcf	3,6	;RP1=0, select bank0
  6024     14B6  00A5               	movwf	??_Lcd_Init+1
  6025     14B7  307C               	movlw	124
  6026     14B8  00A4               	movwf	??_Lcd_Init
  6027     14B9                     u6157:
  6028     14B9  0BA4               	decfsz	??_Lcd_Init,f
  6029     14BA  2CB9               	goto	u6157
  6030     14BB  0BA5               	decfsz	??_Lcd_Init+1,f
  6031     14BC  2CB9               	goto	u6157
  6032     14BD  0000               	nop
  6033     14BE                     l3614:
  6034                           
  6035                           ;./lcd.h: 67:   Lcd_Cmd(0x03);
  6036     14BE  3003               	movlw	3
  6037     14BF  160A  118A  224B  160A  118A  	fcall	_Lcd_Cmd
  6038     14C4                     l3616:
  6039                           
  6040                           ;./lcd.h: 68:  _delay((unsigned long)((11)*(4000000/4000.0)));
  6041     14C4  300F               	movlw	15
  6042     14C5  1283               	bcf	3,5	;RP0=0, select bank0
  6043     14C6  1303               	bcf	3,6	;RP1=0, select bank0
  6044     14C7  00A5               	movwf	??_Lcd_Init+1
  6045     14C8  3047               	movlw	71
  6046     14C9  00A4               	movwf	??_Lcd_Init
  6047     14CA                     u6167:
  6048     14CA  0BA4               	decfsz	??_Lcd_Init,f
  6049     14CB  2CCA               	goto	u6167
  6050     14CC  0BA5               	decfsz	??_Lcd_Init+1,f
  6051     14CD  2CCA               	goto	u6167
  6052                           
  6053                           ;./lcd.h: 69:   Lcd_Cmd(0x03);
  6054     14CE  3003               	movlw	3
  6055     14CF  160A  118A  224B  160A  118A  	fcall	_Lcd_Cmd
  6056                           
  6057                           ;./lcd.h: 71:   Lcd_Cmd(0x02);
  6058     14D4  3002               	movlw	2
  6059     14D5  160A  118A  224B  160A  118A  	fcall	_Lcd_Cmd
  6060                           
  6061                           ;./lcd.h: 72:   Lcd_Cmd(0x02);
  6062     14DA  3002               	movlw	2
  6063     14DB  160A  118A  224B  160A  118A  	fcall	_Lcd_Cmd
  6064                           
  6065                           ;./lcd.h: 73:   Lcd_Cmd(0x08);
  6066     14E0  3008               	movlw	8
  6067     14E1  160A  118A  224B  160A  118A  	fcall	_Lcd_Cmd
  6068                           
  6069                           ;./lcd.h: 74:   Lcd_Cmd(0x00);
  6070     14E6  3000               	movlw	0
  6071     14E7  160A  118A  224B  160A  118A  	fcall	_Lcd_Cmd
  6072                           
  6073                           ;./lcd.h: 75:   Lcd_Cmd(0x0C);
  6074     14EC  300C               	movlw	12
  6075     14ED  160A  118A  224B  160A  118A  	fcall	_Lcd_Cmd
  6076                           
  6077                           ;./lcd.h: 76:   Lcd_Cmd(0x00);
  6078     14F2  3000               	movlw	0
  6079     14F3  160A  118A  224B  160A  118A  	fcall	_Lcd_Cmd
  6080                           
  6081                           ;./lcd.h: 77:   Lcd_Cmd(0x06);
  6082     14F8  3006               	movlw	6
  6083     14F9  160A  118A  224B  160A  118A  	fcall	_Lcd_Cmd
  6084     14FE                     l136:
  6085     14FE  0008               	return
  6086     14FF                     __end_of_Lcd_Init:
  6087                           
  6088                           	psect	text20
  6089     11F7                     __ptext20:	
  6090 ;; *************** function _Lcd_Clear *****************
  6091 ;; Defined at:
  6092 ;;		line 34 in file "./lcd.h"
  6093 ;; Parameters:    Size  Location     Type
  6094 ;;		None
  6095 ;; Auto vars:     Size  Location     Type
  6096 ;;		None
  6097 ;; Return value:  Size  Location     Type
  6098 ;;                  1    wreg      void 
  6099 ;; Registers used:
  6100 ;;		wreg, status,2, status,0, pclath, cstack
  6101 ;; Tracked objects:
  6102 ;;		On entry : 0/0
  6103 ;;		On exit  : 0/0
  6104 ;;		Unchanged: 0/0
  6105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6106 ;;      Params:         0       0       0       0       0
  6107 ;;      Locals:         0       0       0       0       0
  6108 ;;      Temps:          0       0       0       0       0
  6109 ;;      Totals:         0       0       0       0       0
  6110 ;;Total ram usage:        0 bytes
  6111 ;; Hardware stack levels used: 1
  6112 ;; Hardware stack levels required when called: 4
  6113 ;; This function calls:
  6114 ;;		_Lcd_Cmd
  6115 ;; This function is called by:
  6116 ;;		_main
  6117 ;; This function uses a non-reentrant model
  6118 ;;
  6119                           
  6120     11F7                     _Lcd_Clear:	
  6121                           ;psect for function _Lcd_Clear
  6122                           
  6123     11F7                     l3586:	
  6124                           ;incstack = 0
  6125                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  6126                           
  6127                           
  6128                           ;./lcd.h: 36:  Lcd_Cmd(0);
  6129     11F7  3000               	movlw	0
  6130     11F8  160A  118A  224B  160A  118A  	fcall	_Lcd_Cmd
  6131                           
  6132                           ;./lcd.h: 37:  Lcd_Cmd(1);
  6133     11FD  3001               	movlw	1
  6134     11FE  160A  118A  224B  160A  118A  	fcall	_Lcd_Cmd
  6135     1203                     l127:
  6136     1203  0008               	return
  6137     1204                     __end_of_Lcd_Clear:
  6138                           
  6139                           	psect	text21
  6140     124B                     __ptext21:	
  6141 ;; *************** function _Lcd_Cmd *****************
  6142 ;; Defined at:
  6143 ;;		line 25 in file "./lcd.h"
  6144 ;; Parameters:    Size  Location     Type
  6145 ;;  a               1    wreg     unsigned char 
  6146 ;; Auto vars:     Size  Location     Type
  6147 ;;  a               1    3[BANK0 ] unsigned char 
  6148 ;; Return value:  Size  Location     Type
  6149 ;;                  1    wreg      void 
  6150 ;; Registers used:
  6151 ;;		wreg, status,2, status,0, pclath, cstack
  6152 ;; Tracked objects:
  6153 ;;		On entry : 0/0
  6154 ;;		On exit  : 0/0
  6155 ;;		Unchanged: 0/0
  6156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6157 ;;      Params:         0       0       0       0       0
  6158 ;;      Locals:         0       1       0       0       0
  6159 ;;      Temps:          0       2       0       0       0
  6160 ;;      Totals:         0       3       0       0       0
  6161 ;;Total ram usage:        3 bytes
  6162 ;; Hardware stack levels used: 1
  6163 ;; Hardware stack levels required when called: 3
  6164 ;; This function calls:
  6165 ;;		_Lcd_Port
  6166 ;; This function is called by:
  6167 ;;		_Lcd_Clear
  6168 ;;		_Lcd_Set_Cursor
  6169 ;;		_Lcd_Init
  6170 ;; This function uses a non-reentrant model
  6171 ;;
  6172                           
  6173     124B                     _Lcd_Cmd:	
  6174                           ;psect for function _Lcd_Cmd
  6175                           
  6176                           
  6177                           ;incstack = 0
  6178                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  6179                           ;Lcd_Cmd@a stored from wreg
  6180     124B  1283               	bcf	3,5	;RP0=0, select bank0
  6181     124C  1303               	bcf	3,6	;RP1=0, select bank0
  6182     124D  00A3               	movwf	Lcd_Cmd@a
  6183     124E                     l3512:
  6184                           
  6185                           ;./lcd.h: 25: void Lcd_Cmd(char a);./lcd.h: 26: {;./lcd.h: 27:  RB5 = 0;
  6186     124E  1286               	bcf	6,5	;volatile
  6187     124F                     l3514:
  6188                           
  6189                           ;./lcd.h: 28:  Lcd_Port(a);
  6190     124F  0823               	movf	Lcd_Cmd@a,w
  6191     1250  120A  118A  27DC  160A  118A  	fcall	_Lcd_Port
  6192     1255                     l3516:
  6193                           
  6194                           ;./lcd.h: 29:  RB4 = 1;
  6195     1255  1283               	bcf	3,5	;RP0=0, select bank0
  6196     1256  1303               	bcf	3,6	;RP1=0, select bank0
  6197     1257  1606               	bsf	6,4	;volatile
  6198     1258                     l3518:
  6199                           
  6200                           ;./lcd.h: 30:         _delay((unsigned long)((4)*(4000000/4000.0)));
  6201     1258  3006               	movlw	6
  6202     1259  1283               	bcf	3,5	;RP0=0, select bank0
  6203     125A  1303               	bcf	3,6	;RP1=0, select bank0
  6204     125B  00A2               	movwf	??_Lcd_Cmd+1
  6205     125C  302F               	movlw	47
  6206     125D  00A1               	movwf	??_Lcd_Cmd
  6207     125E                     u6177:
  6208     125E  0BA1               	decfsz	??_Lcd_Cmd,f
  6209     125F  2A5E               	goto	u6177
  6210     1260  0BA2               	decfsz	??_Lcd_Cmd+1,f
  6211     1261  2A5E               	goto	u6177
  6212     1262  2A63               	nop2
  6213     1263                     l3520:
  6214                           
  6215                           ;./lcd.h: 31:         RB4 = 0;
  6216     1263  1283               	bcf	3,5	;RP0=0, select bank0
  6217     1264  1303               	bcf	3,6	;RP1=0, select bank0
  6218     1265  1206               	bcf	6,4	;volatile
  6219     1266                     l124:
  6220     1266  0008               	return
  6221     1267                     __end_of_Lcd_Cmd:
  6222                           
  6223                           	psect	text22
  6224     07DC                     __ptext22:	
  6225 ;; *************** function _Lcd_Port *****************
  6226 ;; Defined at:
  6227 ;;		line 3 in file "./lcd.h"
  6228 ;; Parameters:    Size  Location     Type
  6229 ;;  a               1    wreg     unsigned char 
  6230 ;; Auto vars:     Size  Location     Type
  6231 ;;  a               1    0[BANK0 ] unsigned char 
  6232 ;; Return value:  Size  Location     Type
  6233 ;;                  1    wreg      void 
  6234 ;; Registers used:
  6235 ;;		wreg
  6236 ;; Tracked objects:
  6237 ;;		On entry : 0/0
  6238 ;;		On exit  : 0/0
  6239 ;;		Unchanged: 0/0
  6240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6241 ;;      Params:         0       0       0       0       0
  6242 ;;      Locals:         0       1       0       0       0
  6243 ;;      Temps:          0       0       0       0       0
  6244 ;;      Totals:         0       1       0       0       0
  6245 ;;Total ram usage:        1 bytes
  6246 ;; Hardware stack levels used: 1
  6247 ;; Hardware stack levels required when called: 2
  6248 ;; This function calls:
  6249 ;;		Nothing
  6250 ;; This function is called by:
  6251 ;;		_Lcd_Cmd
  6252 ;;		_Lcd_Init
  6253 ;;		_Lcd_Write_Char
  6254 ;; This function uses a non-reentrant model
  6255 ;;
  6256                           
  6257     07DC                     _Lcd_Port:	
  6258                           ;psect for function _Lcd_Port
  6259                           
  6260                           
  6261                           ;incstack = 0
  6262                           ; Regs used in _Lcd_Port: [wreg]
  6263                           ;Lcd_Port@a stored from wreg
  6264     07DC  1283               	bcf	3,5	;RP0=0, select bank0
  6265     07DD  1303               	bcf	3,6	;RP1=0, select bank0
  6266     07DE  00A0               	movwf	Lcd_Port@a
  6267     07DF                     l3502:
  6268                           
  6269                           ;./lcd.h: 3: void Lcd_Port(char a);./lcd.h: 4: {;./lcd.h: 5:  if(a & 1)
  6270     07DF  1C20               	btfss	Lcd_Port@a,0
  6271     07E0  2FE2               	goto	u4461
  6272     07E1  2FE3               	goto	u4460
  6273     07E2                     u4461:
  6274     07E2  2FE5               	goto	l113
  6275     07E3                     u4460:
  6276     07E3                     l3504:
  6277                           
  6278                           ;./lcd.h: 6:   RB3 = 1;
  6279     07E3  1586               	bsf	6,3	;volatile
  6280     07E4  2FE6               	goto	l114
  6281     07E5                     l113:	
  6282                           ;./lcd.h: 7:  else
  6283                           
  6284                           
  6285                           ;./lcd.h: 8:   RB3 = 0;
  6286     07E5  1186               	bcf	6,3	;volatile
  6287     07E6                     l114:
  6288                           
  6289                           ;./lcd.h: 10:  if(a & 2)
  6290     07E6  1CA0               	btfss	Lcd_Port@a,1
  6291     07E7  2FE9               	goto	u4471
  6292     07E8  2FEA               	goto	u4470
  6293     07E9                     u4471:
  6294     07E9  2FEC               	goto	l115
  6295     07EA                     u4470:
  6296     07EA                     l3506:
  6297                           
  6298                           ;./lcd.h: 11:   RB2 = 1;
  6299     07EA  1506               	bsf	6,2	;volatile
  6300     07EB  2FED               	goto	l116
  6301     07EC                     l115:	
  6302                           ;./lcd.h: 12:  else
  6303                           
  6304                           
  6305                           ;./lcd.h: 13:   RB2 = 0;
  6306     07EC  1106               	bcf	6,2	;volatile
  6307     07ED                     l116:
  6308                           
  6309                           ;./lcd.h: 15:  if(a & 4)
  6310     07ED  1D20               	btfss	Lcd_Port@a,2
  6311     07EE  2FF0               	goto	u4481
  6312     07EF  2FF1               	goto	u4480
  6313     07F0                     u4481:
  6314     07F0  2FF3               	goto	l117
  6315     07F1                     u4480:
  6316     07F1                     l3508:
  6317                           
  6318                           ;./lcd.h: 16:   RB1 = 1;
  6319     07F1  1486               	bsf	6,1	;volatile
  6320     07F2  2FF4               	goto	l118
  6321     07F3                     l117:	
  6322                           ;./lcd.h: 17:  else
  6323                           
  6324                           
  6325                           ;./lcd.h: 18:   RB1 = 0;
  6326     07F3  1086               	bcf	6,1	;volatile
  6327     07F4                     l118:
  6328                           
  6329                           ;./lcd.h: 20:  if(a & 8)
  6330     07F4  1DA0               	btfss	Lcd_Port@a,3
  6331     07F5  2FF7               	goto	u4491
  6332     07F6  2FF8               	goto	u4490
  6333     07F7                     u4491:
  6334     07F7  2FFA               	goto	l119
  6335     07F8                     u4490:
  6336     07F8                     l3510:
  6337                           
  6338                           ;./lcd.h: 21:   RB0 = 1;
  6339     07F8  1406               	bsf	6,0	;volatile
  6340     07F9  2FFB               	goto	l121
  6341     07FA                     l119:	
  6342                           ;./lcd.h: 22:  else
  6343                           
  6344                           
  6345                           ;./lcd.h: 23:   RB0 = 0;
  6346     07FA  1006               	bcf	6,0	;volatile
  6347     07FB                     l121:
  6348     07FB  0008               	return
  6349     07FC                     __end_of_Lcd_Port:
  6350                           
  6351                           	psect	text23
  6352     1283                     __ptext23:	
  6353 ;; *************** function _timer_isr *****************
  6354 ;; Defined at:
  6355 ;;		line 74 in file "main.c"
  6356 ;; Parameters:    Size  Location     Type
  6357 ;;		None
  6358 ;; Auto vars:     Size  Location     Type
  6359 ;;		None
  6360 ;; Return value:  Size  Location     Type
  6361 ;;                  1    wreg      void 
  6362 ;; Registers used:
  6363 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6364 ;; Tracked objects:
  6365 ;;		On entry : 0/0
  6366 ;;		On exit  : 0/0
  6367 ;;		Unchanged: 0/0
  6368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6369 ;;      Params:         0       0       0       0       0
  6370 ;;      Locals:         0       0       0       0       0
  6371 ;;      Temps:          3       0       0       0       0
  6372 ;;      Totals:         3       0       0       0       0
  6373 ;;Total ram usage:        3 bytes
  6374 ;; Hardware stack levels used: 1
  6375 ;; Hardware stack levels required when called: 1
  6376 ;; This function calls:
  6377 ;;		_incrementTime
  6378 ;; This function is called by:
  6379 ;;		Interrupt level 1
  6380 ;; This function uses a non-reentrant model
  6381 ;;
  6382                           
  6383     1283                     _timer_isr:	
  6384                           ;psect for function _timer_isr
  6385                           
  6386     1283                     i1l2926:
  6387                           
  6388                           ;main.c: 75:     if (T0IF) {
  6389     1283  1D0B               	btfss	11,2	;volatile
  6390     1284  2A86               	goto	u374_21
  6391     1285  2A87               	goto	u374_20
  6392     1286                     u374_21:
  6393     1286  2AA1               	goto	i1l170
  6394     1287                     u374_20:
  6395     1287                     i1l2928:
  6396                           
  6397                           ;main.c: 76:         T0IF = 0;
  6398     1287  110B               	bcf	11,2	;volatile
  6399     1288                     i1l2930:
  6400                           
  6401                           ;main.c: 77:         TMR0 = 61;
  6402     1288  303D               	movlw	61
  6403     1289  1283               	bcf	3,5	;RP0=0, select bank0
  6404     128A  1303               	bcf	3,6	;RP1=0, select bank0
  6405     128B  0081               	movwf	1	;volatile
  6406                           
  6407                           ;main.c: 79:         kesmeSayaci++;
  6408     128C  3001               	movlw	1
  6409     128D  07F6               	addwf	_kesmeSayaci,f
  6410     128E  1803               	skipnc
  6411     128F  0AF7               	incf	_kesmeSayaci+1,f
  6412     1290  3000               	movlw	0
  6413     1291  07F7               	addwf	_kesmeSayaci+1,f
  6414     1292                     i1l2932:
  6415                           
  6416                           ;main.c: 80:         if (kesmeSayaci==20){
  6417     1292  3014               	movlw	20
  6418     1293  0676               	xorwf	_kesmeSayaci,w
  6419     1294  0477               	iorwf	_kesmeSayaci+1,w
  6420     1295  1D03               	btfss	3,2
  6421     1296  2A98               	goto	u375_21
  6422     1297  2A99               	goto	u375_20
  6423     1298                     u375_21:
  6424     1298  2AA1               	goto	i1l170
  6425     1299                     u375_20:
  6426     1299                     i1l2934:
  6427                           
  6428                           ;main.c: 81:             kesmeSayaci = 0 ;
  6429     1299  01F6               	clrf	_kesmeSayaci
  6430     129A  01F7               	clrf	_kesmeSayaci+1
  6431     129B                     i1l2936:
  6432                           
  6433                           ;main.c: 82:             incrementTime(&currentTime);
  6434     129B  30A0               	movlw	(low (_currentTime| (0+256)))& (0+255)
  6435     129C  160A  118A  2408  160A  118A  	fcall	_incrementTime
  6436     12A1                     i1l170:
  6437     12A1  0875               	movf	??_timer_isr+2,w
  6438     12A2  008A               	movwf	10
  6439     12A3  0874               	movf	??_timer_isr+1,w
  6440     12A4  0084               	movwf	4
  6441     12A5  0E73               	swapf	??_timer_isr,w
  6442     12A6  0083               	movwf	3
  6443     12A7  0EFE               	swapf	btemp,f
  6444     12A8  0E7E               	swapf	btemp,w
  6445     12A9  0009               	retfie
  6446     12AA                     __end_of_timer_isr:
  6447                           
  6448                           	psect	intentry
  6449     0004                     __pintentry:	
  6450                           ;incstack = 0
  6451                           ; Regs used in _timer_isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6452                           
  6453     0004                     interrupt_function:
  6454     007E                     saved_w	set	btemp
  6455     0004  00FE               	movwf	btemp
  6456     0005  0E03               	swapf	3,w
  6457     0006  00F3               	movwf	??_timer_isr
  6458     0007  0804               	movf	4,w
  6459     0008  00F4               	movwf	??_timer_isr+1
  6460     0009  080A               	movf	10,w
  6461     000A  00F5               	movwf	??_timer_isr+2
  6462     000B  160A  118A  2A83   	ljmp	_timer_isr
  6463                           
  6464                           	psect	text24
  6465     1408                     __ptext24:	
  6466 ;; *************** function _incrementTime *****************
  6467 ;; Defined at:
  6468 ;;		line 60 in file "main.c"
  6469 ;; Parameters:    Size  Location     Type
  6470 ;;  time            1    wreg     PTR struct Time
  6471 ;;		 -> currentTime(6), 
  6472 ;; Auto vars:     Size  Location     Type
  6473 ;;  time            1    2[COMMON] PTR struct Time
  6474 ;;		 -> currentTime(6), 
  6475 ;; Return value:  Size  Location     Type
  6476 ;;                  1    wreg      void 
  6477 ;; Registers used:
  6478 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6479 ;; Tracked objects:
  6480 ;;		On entry : 0/0
  6481 ;;		On exit  : 0/0
  6482 ;;		Unchanged: 0/0
  6483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6484 ;;      Params:         0       0       0       0       0
  6485 ;;      Locals:         1       0       0       0       0
  6486 ;;      Temps:          2       0       0       0       0
  6487 ;;      Totals:         3       0       0       0       0
  6488 ;;Total ram usage:        3 bytes
  6489 ;; Hardware stack levels used: 1
  6490 ;; This function calls:
  6491 ;;		Nothing
  6492 ;; This function is called by:
  6493 ;;		_timer_isr
  6494 ;; This function uses a non-reentrant model
  6495 ;;
  6496                           
  6497     1408                     _incrementTime:	
  6498                           ;psect for function _incrementTime
  6499                           
  6500                           
  6501                           ;incstack = 0
  6502                           ; Regs used in _incrementTime: [wreg-fsr0h+status,2+status,0]
  6503                           ;incrementTime@time stored from wreg
  6504     1408  00F2               	movwf	incrementTime@time
  6505     1409                     i1l2410:
  6506                           
  6507                           ;main.c: 61:     time->seconds++;
  6508     1409  0872               	movf	incrementTime@time,w
  6509     140A  3E04               	addlw	4
  6510     140B  0084               	movwf	4
  6511     140C  3001               	movlw	1
  6512     140D  1783               	bsf	3,7	;select IRP bank2
  6513     140E  0780               	addwf	0,f
  6514     140F  0A84               	incf	4,f
  6515     1410  1803               	skipnc
  6516     1411  0A80               	incf	0,f
  6517                           
  6518                           ;main.c: 62:     if (time->seconds >= 60) {
  6519     1412  0872               	movf	incrementTime@time,w
  6520     1413  3E04               	addlw	4
  6521     1414  0084               	movwf	4
  6522     1415  0800               	movf	0,w
  6523     1416  00F0               	movwf	??_incrementTime
  6524     1417  0A84               	incf	4,f
  6525     1418  0800               	movf	0,w
  6526     1419  00F1               	movwf	??_incrementTime+1
  6527     141A  3000               	movlw	0
  6528     141B  0271               	subwf	??_incrementTime+1,w
  6529     141C  303C               	movlw	60
  6530     141D  1903               	skipnz
  6531     141E  0270               	subwf	??_incrementTime,w
  6532     141F  1C03               	skipc
  6533     1420  2C22               	goto	u260_21
  6534     1421  2C23               	goto	u260_20
  6535     1422                     u260_21:
  6536     1422  2C4F               	goto	i1l163
  6537     1423                     u260_20:
  6538     1423                     i1l2412:
  6539                           
  6540                           ;main.c: 63:         time->seconds = 0;
  6541     1423  0872               	movf	incrementTime@time,w
  6542     1424  3E04               	addlw	4
  6543     1425  0084               	movwf	4
  6544     1426  0180               	clrf	0
  6545     1427  0A84               	incf	4,f
  6546     1428  0180               	clrf	0
  6547                           
  6548                           ;main.c: 64:         time->minutes++;
  6549     1429  0872               	movf	incrementTime@time,w
  6550     142A  3E02               	addlw	2
  6551     142B  0084               	movwf	4
  6552     142C  3001               	movlw	1
  6553     142D  0780               	addwf	0,f
  6554     142E  0A84               	incf	4,f
  6555     142F  1803               	skipnc
  6556     1430  0A80               	incf	0,f
  6557                           
  6558                           ;main.c: 65:         if (time->minutes >= 60) {
  6559     1431  0872               	movf	incrementTime@time,w
  6560     1432  3E02               	addlw	2
  6561     1433  0084               	movwf	4
  6562     1434  0800               	movf	0,w
  6563     1435  00F0               	movwf	??_incrementTime
  6564     1436  0A84               	incf	4,f
  6565     1437  0800               	movf	0,w
  6566     1438  00F1               	movwf	??_incrementTime+1
  6567     1439  3000               	movlw	0
  6568     143A  0271               	subwf	??_incrementTime+1,w
  6569     143B  303C               	movlw	60
  6570     143C  1903               	skipnz
  6571     143D  0270               	subwf	??_incrementTime,w
  6572     143E  1C03               	skipc
  6573     143F  2C41               	goto	u261_21
  6574     1440  2C42               	goto	u261_20
  6575     1441                     u261_21:
  6576     1441  2C4F               	goto	i1l163
  6577     1442                     u261_20:
  6578     1442                     i1l2414:
  6579                           
  6580                           ;main.c: 66:             time->minutes = 0;
  6581     1442  0872               	movf	incrementTime@time,w
  6582     1443  3E02               	addlw	2
  6583     1444  0084               	movwf	4
  6584     1445  0180               	clrf	0
  6585     1446  0A84               	incf	4,f
  6586     1447  0180               	clrf	0
  6587                           
  6588                           ;main.c: 67:             time->hours++;
  6589     1448  0872               	movf	incrementTime@time,w
  6590     1449  0084               	movwf	4
  6591     144A  3001               	movlw	1
  6592     144B  0780               	addwf	0,f
  6593     144C  0A84               	incf	4,f
  6594     144D  1803               	skipnc
  6595     144E  0A80               	incf	0,f
  6596     144F                     i1l163:
  6597     144F  0008               	return
  6598     1450                     __end_of_incrementTime:
  6599     007E                     btemp	set	126	;btemp
  6600     007E                     wtemp0	set	126
  6601                           
  6602                           	psect	config
  6603                           
  6604                           ;Config register CONFIG @ 0x2007
  6605                           ;	Oscillator Selection bits
  6606                           ;	FOSC = XT, XT oscillator
  6607                           ;	Watchdog Timer Enable bit
  6608                           ;	WDTE = OFF, WDT disabled
  6609                           ;	Power-up Timer Enable bit
  6610                           ;	PWRTE = OFF, PWRT disabled
  6611                           ;	Brown-out Reset Enable bit
  6612                           ;	BOREN = ON, BOR enabled
  6613                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  6614                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  6615                           ;	Data EEPROM Memory Code Protection bit
  6616                           ;	CPD = OFF, Data EEPROM code protection off
  6617                           ;	Flash Program Memory Write Enable bits
  6618                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  6619                           ;	In-Circuit Debugger Mode bit
  6620                           ;	DEBUG = 0x1, unprogrammed default
  6621                           ;	Flash Program Memory Code Protection bit
  6622                           ;	CP = OFF, Code protection off
  6623     2007                     	org	8199
  6624     2007  3F79               	dw	16249
  6625                           
  6626                           	psect	maintext_split_1
  6627     1577                     u5380:
  6628     1577                     l4068:
  6629     1577  1809               	btfsc	9,0	;volatile
  6630     1578  2D7A               	goto	u5391
  6631     1579  2D7D               	goto	u5390
  6632     157A                     u5391:
  6633     157A  120A  118A  2EA6   	goto	l179
  6634     157D                     u5390:
  6635     157D                     l4070:
  6636     157D  1807               	btfsc	7,0	;volatile
  6637     157E  2D80               	goto	u5401
  6638     157F  2D81               	goto	u5400
  6639     1580                     u5401:
  6640     1580  2D7A               	goto	u5391
  6641     1581                     u5400:
  6642     1581                     l4072:
  6643     1581  1889               	btfsc	9,1	;volatile
  6644     1582  2D84               	goto	u5411
  6645     1583  2D85               	goto	u5410
  6646     1584                     u5411:
  6647     1584  2D7A               	goto	u5391
  6648     1585                     u5410:
  6649     1585                     l4074:
  6650                           
  6651                           ;main.c: 193:             ilkAcilis = 0;
  6652     1585  1683               	bsf	3,5	;RP0=1, select bank1
  6653     1586  1303               	bcf	3,6	;RP1=0, select bank1
  6654     1587  01E4               	clrf	main@ilkAcilis^(0+128)
  6655     1588  01E5               	clrf	(main@ilkAcilis+1)^(0+128)
  6656     1589                     l176:	
  6657                           ;main.c: 198:     }
  6658                           
  6659                           
  6660                           ;main.c: 200: if( !RC3 && !RD0){
  6661     1589  1283               	bcf	3,5	;RP0=0, select bank0
  6662     158A  1303               	bcf	3,6	;RP1=0, select bank0
  6663     158B  1987               	btfsc	7,3	;volatile
  6664     158C  2D8E               	goto	u5421
  6665     158D  2D91               	goto	u5420
  6666     158E                     u5421:
  6667     158E  120A  118A  2E11   	goto	l180
  6668     1591                     u5420:
  6669     1591                     l4076:
  6670     1591  1808               	btfsc	8,0	;volatile
  6671     1592  2D94               	goto	u5431
  6672     1593  2D95               	goto	u5430
  6673     1594                     u5431:
  6674     1594  2D8E               	goto	u5421
  6675     1595                     u5430:
  6676     1595                     l4078:
  6677                           
  6678                           ;main.c: 201:      if ((currentTime.hours == 500 || currentTime.hours == 501 || currentT
      +                          ime.hours == 502) && currentTime.minutes == 1) {
  6679     1595  30F4               	movlw	244
  6680     1596  1683               	bsf	3,5	;RP0=1, select bank3
  6681     1597  1703               	bsf	3,6	;RP1=1, select bank3
  6682     1598  0620               	xorwf	_currentTime^(0+384),w
  6683     1599  1D03               	skipz
  6684     159A  2DA0               	goto	u5440
  6685     159B  0321               	decf	(_currentTime+1)^(0+384),w
  6686     159C  1903               	btfsc	3,2
  6687     159D  2D9F               	goto	u5441
  6688     159E  2DA0               	goto	u5440
  6689     159F                     u5441:
  6690     159F  2DB2               	goto	l4084
  6691     15A0                     u5440:
  6692     15A0                     l4080:
  6693     15A0  30F5               	movlw	245
  6694     15A1  0620               	xorwf	_currentTime^(0+384),w
  6695     15A2  1D03               	skipz
  6696     15A3  2DA9               	goto	u5450
  6697     15A4  0321               	decf	(_currentTime+1)^(0+384),w
  6698     15A5  1903               	btfsc	3,2
  6699     15A6  2DA8               	goto	u5451
  6700     15A7  2DA9               	goto	u5450
  6701     15A8                     u5451:
  6702     15A8  2DB2               	goto	l4084
  6703     15A9                     u5450:
  6704     15A9                     l4082:
  6705     15A9  30F6               	movlw	246
  6706     15AA  0620               	xorwf	_currentTime^(0+384),w
  6707     15AB  1D03               	skipz
  6708     15AC  2DB1               	goto	u5461
  6709     15AD  0321               	decf	(_currentTime+1)^(0+384),w
  6710     15AE  1D03               	btfss	3,2
  6711     15AF  2DB1               	goto	u5461
  6712     15B0  2DB2               	goto	u5460
  6713     15B1                     u5461:
  6714     15B1  2E0D               	goto	l4110
  6715     15B2                     u5460:
  6716     15B2                     l4084:
  6717     15B2  0322               	decf	(_currentTime^(0+384)+2),w
  6718     15B3  0423               	iorwf	((_currentTime+1)^(0+384)+2),w
  6719     15B4  1D03               	btfss	3,2
  6720     15B5  2DB7               	goto	u5471
  6721     15B6  2DB8               	goto	u5470
  6722     15B7                     u5471:
  6723     15B7  2E0D               	goto	l4110
  6724     15B8                     u5470:
  6725     15B8                     l4086:
  6726                           
  6727                           ;main.c: 203:     Lcd_Clear();
  6728     15B8  160A  118A  21F7  160A  118A  	fcall	_Lcd_Clear
  6729     15BD                     l4088:
  6730                           
  6731                           ;main.c: 204:     int i=0 ;
  6732     15BD  1683               	bsf	3,5	;RP0=1, select bank1
  6733     15BE  1303               	bcf	3,6	;RP1=0, select bank1
  6734     15BF  01EC               	clrf	main@i^(0+128)
  6735     15C0  01ED               	clrf	(main@i+1)^(0+128)
  6736     15C1                     l4090:
  6737                           
  6738                           ;main.c: 205:     for(; i < 10; i++)
  6739     15C1  086D               	movf	(main@i+1)^(0+128),w
  6740     15C2  3A80               	xorlw	128
  6741     15C3  00FF               	movwf	btemp+1
  6742     15C4  3080               	movlw	128
  6743     15C5  027F               	subwf	btemp+1,w
  6744     15C6  1D03               	skipz
  6745     15C7  2DCA               	goto	u5485
  6746     15C8  300A               	movlw	10
  6747     15C9  026C               	subwf	main@i^(0+128),w
  6748     15CA                     u5485:
  6749     15CA  1C03               	skipc
  6750     15CB  2DCD               	goto	u5481
  6751     15CC  2DCE               	goto	u5480
  6752     15CD                     u5481:
  6753     15CD  2DCF               	goto	l4094
  6754     15CE                     u5480:
  6755     15CE  2E05               	goto	l4106
  6756     15CF                     l4094:
  6757                           
  6758                           ;main.c: 206: {;main.c: 207:    Lcd_Set_Cursor(1, 1);
  6759     15CF  1283               	bcf	3,5	;RP0=0, select bank0
  6760     15D0  1303               	bcf	3,6	;RP1=0, select bank0
  6761     15D1  01A4               	clrf	Lcd_Set_Cursor@b
  6762     15D2  0AA4               	incf	Lcd_Set_Cursor@b,f
  6763     15D3  3001               	movlw	1
  6764     15D4  160A  118A  2450  160A  118A  	fcall	_Lcd_Set_Cursor
  6765     15D9                     l4096:
  6766                           
  6767                           ;main.c: 208: Lcd_Write_String("YAG BAKIMI YAPINIZ");
  6768     15D9  30AA               	movlw	low (STR_6| (0+32768))
  6769     15DA  1283               	bcf	3,5	;RP0=0, select bank0
  6770     15DB  1303               	bcf	3,6	;RP1=0, select bank0
  6771     15DC  00A5               	movwf	Lcd_Write_String@a
  6772     15DD  3098               	movlw	high (STR_6| (0+32768))
  6773     15DE  00A6               	movwf	Lcd_Write_String@a+1
  6774     15DF  160A  118A  2336  160A  118A  	fcall	_Lcd_Write_String
  6775     15E4                     l4098:
  6776                           
  6777                           ;main.c: 209: Lcd_Set_Cursor(2, 1);
  6778     15E4  1283               	bcf	3,5	;RP0=0, select bank0
  6779     15E5  1303               	bcf	3,6	;RP1=0, select bank0
  6780     15E6  01A4               	clrf	Lcd_Set_Cursor@b
  6781     15E7  0AA4               	incf	Lcd_Set_Cursor@b,f
  6782     15E8  3002               	movlw	2
  6783     15E9  160A  118A  2450  160A  118A  	fcall	_Lcd_Set_Cursor
  6784                           
  6785                           ;main.c: 210: Lcd_Write_String("OIL THE GEARS");
  6786     15EE  30F9               	movlw	low (STR_7| (0+32768))
  6787     15EF  1283               	bcf	3,5	;RP0=0, select bank0
  6788     15F0  1303               	bcf	3,6	;RP1=0, select bank0
  6789     15F1  00A5               	movwf	Lcd_Write_String@a
  6790     15F2  3098               	movlw	high (STR_7| (0+32768))
  6791     15F3  00A6               	movwf	Lcd_Write_String@a+1
  6792     15F4  160A  118A  2336  160A  118A  	fcall	_Lcd_Write_String
  6793     15F9                     l4100:
  6794                           
  6795                           ;main.c: 211: RA4 = 1;
  6796     15F9  1283               	bcf	3,5	;RP0=0, select bank0
  6797     15FA  1303               	bcf	3,6	;RP1=0, select bank0
  6798     15FB  1605               	bsf	5,4	;volatile
  6799     15FC                     l4102:
  6800                           
  6801                           ;main.c: 212: }
  6802     15FC  3001               	movlw	1
  6803     15FD  1683               	bsf	3,5	;RP0=1, select bank1
  6804     15FE  1303               	bcf	3,6	;RP1=0, select bank1
  6805     15FF  07EC               	addwf	main@i^(0+128),f
  6806     1600  1803               	skipnc
  6807     1601  0AED               	incf	(main@i+1)^(0+128),f
  6808     1602  3000               	movlw	0
  6809     1603  07ED               	addwf	(main@i+1)^(0+128),f
  6810     1604  2DC1               	goto	l4090
  6811     1605                     l4106:
  6812                           
  6813                           ;main.c: 213:     Lcd_Clear();
  6814     1605  160A  118A  21F7  160A  118A  	fcall	_Lcd_Clear
  6815     160A                     l4108:
  6816                           
  6817                           ;main.c: 215:     RA4 = 0;
  6818     160A  1283               	bcf	3,5	;RP0=0, select bank0
  6819     160B  1303               	bcf	3,6	;RP1=0, select bank0
  6820     160C  1205               	bcf	5,4	;volatile
  6821     160D                     l4110:
  6822                           
  6823                           ;main.c: 218: if ((currentTime.hours == 500 || currentTime.hours == 501 || currentTime.h
      +                          ours == 502) && currentTime.minutes == 0) {
  6824     160D  30F4               	movlw	244
  6825     160E  1683               	bsf	3,5	;RP0=1, select bank3
  6826     160F  1703               	bsf	3,6	;RP1=1, select bank3
  6827     1610  0620               	xorwf	_currentTime^(0+384),w
  6828     1611  1D03               	skipz
  6829     1612  2E18               	goto	u5490
  6830     1613  0321               	decf	(_currentTime+1)^(0+384),w
  6831     1614  1903               	btfsc	3,2
  6832     1615  2E17               	goto	u5491
  6833     1616  2E18               	goto	u5490
  6834     1617                     u5491:
  6835     1617  2E2C               	goto	l4116
  6836     1618                     u5490:
  6837     1618                     l4112:
  6838     1618  30F5               	movlw	245
  6839     1619  0620               	xorwf	_currentTime^(0+384),w
  6840     161A  1D03               	skipz
  6841     161B  2E21               	goto	u5500
  6842     161C  0321               	decf	(_currentTime+1)^(0+384),w
  6843     161D  1903               	btfsc	3,2
  6844     161E  2E20               	goto	u5501
  6845     161F  2E21               	goto	u5500
  6846     1620                     u5501:
  6847     1620  2E2C               	goto	l4116
  6848     1621                     u5500:
  6849     1621                     l4114:
  6850     1621  30F6               	movlw	246
  6851     1622  0620               	xorwf	_currentTime^(0+384),w
  6852     1623  1D03               	skipz
  6853     1624  2E29               	goto	u5511
  6854     1625  0321               	decf	(_currentTime+1)^(0+384),w
  6855     1626  1D03               	btfss	3,2
  6856     1627  2E29               	goto	u5511
  6857     1628  2E2C               	goto	u5510
  6858     1629                     u5511:
  6859     1629  160A  118A  2E89   	goto	l4142
  6860     162C                     u5510:
  6861     162C                     l4116:
  6862     162C  0822               	movf	(_currentTime^(0+384)+2),w
  6863     162D  0423               	iorwf	((_currentTime+1)^(0+384)+2),w
  6864     162E  1D03               	btfss	3,2
  6865     162F  2E31               	goto	u5521
  6866     1630  2E32               	goto	u5520
  6867     1631                     u5521:
  6868     1631  2E29               	goto	u5511
  6869     1632                     u5520:
  6870     1632                     l4118:
  6871                           
  6872                           ;main.c: 220:     Lcd_Clear();
  6873     1632  160A  118A  21F7  160A  118A  	fcall	_Lcd_Clear
  6874     1637                     l4120:
  6875                           
  6876                           ;main.c: 221:     int i=0 ;
  6877     1637  1683               	bsf	3,5	;RP0=1, select bank1
  6878     1638  1303               	bcf	3,6	;RP1=0, select bank1
  6879     1639  01EE               	clrf	main@i_321^(0+128)
  6880     163A  01EF               	clrf	(main@i_321+1)^(0+128)
  6881     163B                     l4122:
  6882                           
  6883                           ;main.c: 222:     for(; i < 10; i++)
  6884     163B  086F               	movf	(main@i_321+1)^(0+128),w
  6885     163C  3A80               	xorlw	128
  6886     163D  00FF               	movwf	btemp+1
  6887     163E  3080               	movlw	128
  6888     163F  027F               	subwf	btemp+1,w
  6889     1640  1D03               	skipz
  6890     1641  2E44               	goto	u5535
  6891     1642  300A               	movlw	10
  6892     1643  026E               	subwf	main@i_321^(0+128),w
  6893     1644                     u5535:
  6894     1644  1C03               	skipc
  6895     1645  2E47               	goto	u5531
  6896     1646  2E48               	goto	u5530
  6897     1647                     u5531:
  6898     1647  2E4B               	goto	l4126
  6899     1648                     u5530:
  6900     1648  160A  118A  2E81   	goto	l4138
  6901     164B                     l4126:
  6902                           
  6903                           ;main.c: 223: {;main.c: 224:    Lcd_Set_Cursor(1, 1);
  6904     164B  1283               	bcf	3,5	;RP0=0, select bank0
  6905     164C  1303               	bcf	3,6	;RP1=0, select bank0
  6906     164D  01A4               	clrf	Lcd_Set_Cursor@b
  6907     164E  0AA4               	incf	Lcd_Set_Cursor@b,f
  6908     164F  3001               	movlw	1
  6909     1650  160A  118A  2450  160A  118A  	fcall	_Lcd_Set_Cursor
  6910     1655                     l4128:
  6911                           
  6912                           ;main.c: 225: Lcd_Write_String("YAG BAKIMI YAPINIZ");
  6913     1655  30AA               	movlw	low (STR_6| (0+32768))
  6914     1656  1283               	bcf	3,5	;RP0=0, select bank0
  6915     1657  1303               	bcf	3,6	;RP1=0, select bank0
  6916     1658  00A5               	movwf	Lcd_Write_String@a
  6917     1659  3098               	movlw	high (STR_6| (0+32768))
  6918     165A  00A6               	movwf	Lcd_Write_String@a+1
  6919     165B  160A  118A  2336  160A  118A  	fcall	_Lcd_Write_String
  6920     1660                     l4130:
  6921                           
  6922                           ;main.c: 226: Lcd_Set_Cursor(2, 1);
  6923     1660  1283               	bcf	3,5	;RP0=0, select bank0
  6924     1661  1303               	bcf	3,6	;RP1=0, select bank0
  6925     1662  01A4               	clrf	Lcd_Set_Cursor@b
  6926     1663  0AA4               	incf	Lcd_Set_Cursor@b,f
  6927     1664  3002               	movlw	2
  6928     1665  160A  118A  2450  160A  118A  	fcall	_Lcd_Set_Cursor
  6929                           
  6930                           ;main.c: 227: Lcd_Write_String("OIL THE GEARS");
  6931     166A  30F9               	movlw	low (STR_7| (0+32768))
  6932     166B  1283               	bcf	3,5	;RP0=0, select bank0
  6933     166C  1303               	bcf	3,6	;RP1=0, select bank0
  6934     166D  00A5               	movwf	Lcd_Write_String@a
  6935     166E  3098               	movlw	high (STR_7| (0+32768))
  6936     166F  00A6               	movwf	Lcd_Write_String@a+1
  6937     1670  160A  118A  2336  160A  118A  	fcall	_Lcd_Write_String
  6938     1675                     l4132:
  6939                           
  6940                           ;main.c: 228: RA4 = 1;
  6941     1675  1283               	bcf	3,5	;RP0=0, select bank0
  6942     1676  1303               	bcf	3,6	;RP1=0, select bank0
  6943     1677  1605               	bsf	5,4	;volatile
  6944     1678                     l4134:
  6945                           
  6946                           ;main.c: 229: }
  6947     1678  3001               	movlw	1
  6948     1679  1683               	bsf	3,5	;RP0=1, select bank1
  6949     167A  1303               	bcf	3,6	;RP1=0, select bank1
  6950     167B  07EE               	addwf	main@i_321^(0+128),f
  6951     167C  1803               	skipnc
  6952     167D  0AEF               	incf	(main@i_321+1)^(0+128),f
  6953     167E  3000               	movlw	0
  6954     167F  07EF               	addwf	(main@i_321+1)^(0+128),f
  6955     1680  2E3B               	goto	l4122
  6956                           
  6957                           	psect	maintext_split_2
  6958     1681                     l4138:
  6959                           
  6960                           ;main.c: 230:     Lcd_Clear();
  6961     1681  160A  118A  21F7  160A  118A  	fcall	_Lcd_Clear
  6962     1686                     l4140:
  6963                           
  6964                           ;main.c: 231:     RA4 = 0;
  6965     1686  1283               	bcf	3,5	;RP0=0, select bank0
  6966     1687  1303               	bcf	3,6	;RP1=0, select bank0
  6967     1688  1205               	bcf	5,4	;volatile
  6968     1689                     l4142:
  6969                           
  6970                           ;main.c: 234: if ((currentTime.hours == 1000 || currentTime.hours == 1001 || currentTime
      +                          .hours == 1002) && currentTime.minutes == 0) {
  6971     1689  30E8               	movlw	232
  6972     168A  1683               	bsf	3,5	;RP0=1, select bank3
  6973     168B  1703               	bsf	3,6	;RP1=1, select bank3
  6974     168C  0620               	xorwf	_currentTime^(0+384),w
  6975     168D  3003               	movlw	3
  6976     168E  1903               	skipnz
  6977     168F  0621               	xorwf	(_currentTime+1)^(0+384),w
  6978     1690  1903               	btfsc	3,2
  6979     1691  2E93               	goto	u5541
  6980     1692  2E94               	goto	u5540
  6981     1693                     u5541:
  6982     1693  2EA6               	goto	l4148
  6983     1694                     u5540:
  6984     1694                     l4144:
  6985     1694  30E9               	movlw	233
  6986     1695  0620               	xorwf	_currentTime^(0+384),w
  6987     1696  3003               	movlw	3
  6988     1697  1903               	skipnz
  6989     1698  0621               	xorwf	(_currentTime+1)^(0+384),w
  6990     1699  1903               	btfsc	3,2
  6991     169A  2E9C               	goto	u5551
  6992     169B  2E9D               	goto	u5550
  6993     169C                     u5551:
  6994     169C  2EA6               	goto	l4148
  6995     169D                     u5550:
  6996     169D                     l4146:
  6997     169D  30EA               	movlw	234
  6998     169E  0620               	xorwf	_currentTime^(0+384),w
  6999     169F  3003               	movlw	3
  7000     16A0  1903               	skipnz
  7001     16A1  0621               	xorwf	(_currentTime+1)^(0+384),w
  7002     16A2  1D03               	btfss	3,2
  7003     16A3  2EA5               	goto	u5561
  7004     16A4  2EA6               	goto	u5560
  7005     16A5                     u5561:
  7006     16A5  2F01               	goto	l4174
  7007     16A6                     u5560:
  7008     16A6                     l4148:
  7009     16A6  0822               	movf	(_currentTime^(0+384)+2),w
  7010     16A7  0423               	iorwf	((_currentTime+1)^(0+384)+2),w
  7011     16A8  1D03               	btfss	3,2
  7012     16A9  2EAB               	goto	u5571
  7013     16AA  2EAC               	goto	u5570
  7014     16AB                     u5571:
  7015     16AB  2F01               	goto	l4174
  7016     16AC                     u5570:
  7017     16AC                     l4150:
  7018                           
  7019                           ;main.c: 236:     Lcd_Clear();
  7020     16AC  160A  118A  21F7  160A  118A  	fcall	_Lcd_Clear
  7021     16B1                     l4152:
  7022                           
  7023                           ;main.c: 237:     int i=0 ;
  7024     16B1  1683               	bsf	3,5	;RP0=1, select bank3
  7025     16B2  1703               	bsf	3,6	;RP1=1, select bank3
  7026     16B3  0190               	clrf	main@i_324^(0+384)
  7027     16B4  0191               	clrf	(main@i_324+1)^(0+384)
  7028     16B5                     l4154:
  7029                           
  7030                           ;main.c: 238:     for(; i < 10; i++)
  7031     16B5  0811               	movf	(main@i_324+1)^(0+384),w
  7032     16B6  3A80               	xorlw	128
  7033     16B7  00FF               	movwf	btemp+1
  7034     16B8  3080               	movlw	128
  7035     16B9  027F               	subwf	btemp+1,w
  7036     16BA  1D03               	skipz
  7037     16BB  2EBE               	goto	u5585
  7038     16BC  300A               	movlw	10
  7039     16BD  0210               	subwf	main@i_324^(0+384),w
  7040     16BE                     u5585:
  7041     16BE  1C03               	skipc
  7042     16BF  2EC1               	goto	u5581
  7043     16C0  2EC2               	goto	u5580
  7044     16C1                     u5581:
  7045     16C1  2EC3               	goto	l4158
  7046     16C2                     u5580:
  7047     16C2  2EF9               	goto	l4170
  7048     16C3                     l4158:
  7049                           
  7050                           ;main.c: 239: {;main.c: 240:    Lcd_Set_Cursor(1, 1);
  7051     16C3  1283               	bcf	3,5	;RP0=0, select bank0
  7052     16C4  1303               	bcf	3,6	;RP1=0, select bank0
  7053     16C5  01A4               	clrf	Lcd_Set_Cursor@b
  7054     16C6  0AA4               	incf	Lcd_Set_Cursor@b,f
  7055     16C7  3001               	movlw	1
  7056     16C8  160A  118A  2450  160A  118A  	fcall	_Lcd_Set_Cursor
  7057     16CD                     l4160:
  7058                           
  7059                           ;main.c: 241: Lcd_Write_String("YAG BAKIMI YAPINIZ");
  7060     16CD  30AA               	movlw	low (STR_6| (0+32768))
  7061     16CE  1283               	bcf	3,5	;RP0=0, select bank0
  7062     16CF  1303               	bcf	3,6	;RP1=0, select bank0
  7063     16D0  00A5               	movwf	Lcd_Write_String@a
  7064     16D1  3098               	movlw	high (STR_6| (0+32768))
  7065     16D2  00A6               	movwf	Lcd_Write_String@a+1
  7066     16D3  160A  118A  2336  160A  118A  	fcall	_Lcd_Write_String
  7067     16D8                     l4162:
  7068                           
  7069                           ;main.c: 242: Lcd_Set_Cursor(2, 1);
  7070     16D8  1283               	bcf	3,5	;RP0=0, select bank0
  7071     16D9  1303               	bcf	3,6	;RP1=0, select bank0
  7072     16DA  01A4               	clrf	Lcd_Set_Cursor@b
  7073     16DB  0AA4               	incf	Lcd_Set_Cursor@b,f
  7074     16DC  3002               	movlw	2
  7075     16DD  160A  118A  2450  160A  118A  	fcall	_Lcd_Set_Cursor
  7076                           
  7077                           ;main.c: 243: Lcd_Write_String("OIL THE GEARS");
  7078     16E2  30F9               	movlw	low (STR_7| (0+32768))
  7079     16E3  1283               	bcf	3,5	;RP0=0, select bank0
  7080     16E4  1303               	bcf	3,6	;RP1=0, select bank0
  7081     16E5  00A5               	movwf	Lcd_Write_String@a
  7082     16E6  3098               	movlw	high (STR_7| (0+32768))
  7083     16E7  00A6               	movwf	Lcd_Write_String@a+1
  7084     16E8  160A  118A  2336  160A  118A  	fcall	_Lcd_Write_String
  7085     16ED                     l4164:
  7086                           
  7087                           ;main.c: 244: RA4 = 1;
  7088     16ED  1283               	bcf	3,5	;RP0=0, select bank0
  7089     16EE  1303               	bcf	3,6	;RP1=0, select bank0
  7090     16EF  1605               	bsf	5,4	;volatile
  7091     16F0                     l4166:
  7092                           
  7093                           ;main.c: 245: }
  7094     16F0  3001               	movlw	1
  7095     16F1  1683               	bsf	3,5	;RP0=1, select bank3
  7096     16F2  1703               	bsf	3,6	;RP1=1, select bank3
  7097     16F3  0790               	addwf	main@i_324^(0+384),f
  7098     16F4  1803               	skipnc
  7099     16F5  0A91               	incf	(main@i_324+1)^(0+384),f
  7100     16F6  3000               	movlw	0
  7101     16F7  0791               	addwf	(main@i_324+1)^(0+384),f
  7102     16F8  2EB5               	goto	l4154
  7103     16F9                     l4170:
  7104                           
  7105                           ;main.c: 246:     Lcd_Clear();
  7106     16F9  160A  118A  21F7  160A  118A  	fcall	_Lcd_Clear
  7107     16FE                     l4172:
  7108                           
  7109                           ;main.c: 247:     RA4 = 0;
  7110     16FE  1283               	bcf	3,5	;RP0=0, select bank0
  7111     16FF  1303               	bcf	3,6	;RP1=0, select bank0
  7112     1700  1205               	bcf	5,4	;volatile
  7113     1701                     l4174:
  7114                           
  7115                           ;main.c: 250: if ((currentTime.hours == 1500 || currentTime.hours == 1501 || currentTime
      +                          .hours == 1502) && currentTime.minutes == 0) {
  7116     1701  30DC               	movlw	220
  7117     1702  1683               	bsf	3,5	;RP0=1, select bank3
  7118     1703  1703               	bsf	3,6	;RP1=1, select bank3
  7119     1704  0620               	xorwf	_currentTime^(0+384),w
  7120     1705  3005               	movlw	5
  7121     1706  1903               	skipnz
  7122     1707  0621               	xorwf	(_currentTime+1)^(0+384),w
  7123     1708  1903               	btfsc	3,2
  7124     1709  2F0B               	goto	u5591
  7125     170A  2F0C               	goto	u5590
  7126     170B                     u5591:
  7127     170B  2F1E               	goto	l4180
  7128     170C                     u5590:
  7129     170C                     l4176:
  7130     170C  30DD               	movlw	221
  7131     170D  0620               	xorwf	_currentTime^(0+384),w
  7132     170E  3005               	movlw	5
  7133     170F  1903               	skipnz
  7134     1710  0621               	xorwf	(_currentTime+1)^(0+384),w
  7135     1711  1903               	btfsc	3,2
  7136     1712  2F14               	goto	u5601
  7137     1713  2F15               	goto	u5600
  7138     1714                     u5601:
  7139     1714  2F1E               	goto	l4180
  7140     1715                     u5600:
  7141     1715                     l4178:
  7142     1715  30DE               	movlw	222
  7143     1716  0620               	xorwf	_currentTime^(0+384),w
  7144     1717  3005               	movlw	5
  7145     1718  1903               	skipnz
  7146     1719  0621               	xorwf	(_currentTime+1)^(0+384),w
  7147     171A  1D03               	btfss	3,2
  7148     171B  2F1D               	goto	u5611
  7149     171C  2F1E               	goto	u5610
  7150     171D                     u5611:
  7151     171D  2F79               	goto	l4206
  7152     171E                     u5610:
  7153     171E                     l4180:
  7154     171E  0822               	movf	(_currentTime^(0+384)+2),w
  7155     171F  0423               	iorwf	((_currentTime+1)^(0+384)+2),w
  7156     1720  1D03               	btfss	3,2
  7157     1721  2F23               	goto	u5621
  7158     1722  2F24               	goto	u5620
  7159     1723                     u5621:
  7160     1723  2F79               	goto	l4206
  7161     1724                     u5620:
  7162     1724                     l4182:
  7163                           
  7164                           ;main.c: 252:     Lcd_Clear();
  7165     1724  160A  118A  21F7  160A  118A  	fcall	_Lcd_Clear
  7166     1729                     l4184:
  7167                           
  7168                           ;main.c: 253:     int i=0 ;
  7169     1729  1683               	bsf	3,5	;RP0=1, select bank3
  7170     172A  1703               	bsf	3,6	;RP1=1, select bank3
  7171     172B  0192               	clrf	main@i_327^(0+384)
  7172     172C  0193               	clrf	(main@i_327+1)^(0+384)
  7173     172D                     l4186:
  7174                           
  7175                           ;main.c: 254:     for(; i < 10; i++)
  7176     172D  0813               	movf	(main@i_327+1)^(0+384),w
  7177     172E  3A80               	xorlw	128
  7178     172F  00FF               	movwf	btemp+1
  7179     1730  3080               	movlw	128
  7180     1731  027F               	subwf	btemp+1,w
  7181     1732  1D03               	skipz
  7182     1733  2F36               	goto	u5635
  7183     1734  300A               	movlw	10
  7184     1735  0212               	subwf	main@i_327^(0+384),w
  7185     1736                     u5635:
  7186     1736  1C03               	skipc
  7187     1737  2F39               	goto	u5631
  7188     1738  2F3A               	goto	u5630
  7189     1739                     u5631:
  7190     1739  2F3B               	goto	l4190
  7191     173A                     u5630:
  7192     173A  2F71               	goto	l4202
  7193     173B                     l4190:
  7194                           
  7195                           ;main.c: 255: {;main.c: 256:    Lcd_Set_Cursor(1, 1);
  7196     173B  1283               	bcf	3,5	;RP0=0, select bank0
  7197     173C  1303               	bcf	3,6	;RP1=0, select bank0
  7198     173D  01A4               	clrf	Lcd_Set_Cursor@b
  7199     173E  0AA4               	incf	Lcd_Set_Cursor@b,f
  7200     173F  3001               	movlw	1
  7201     1740  160A  118A  2450  160A  118A  	fcall	_Lcd_Set_Cursor
  7202     1745                     l4192:
  7203                           
  7204                           ;main.c: 257: Lcd_Write_String("YAG BAKIMI YAPINIZ");
  7205     1745  30AA               	movlw	low (STR_6| (0+32768))
  7206     1746  1283               	bcf	3,5	;RP0=0, select bank0
  7207     1747  1303               	bcf	3,6	;RP1=0, select bank0
  7208     1748  00A5               	movwf	Lcd_Write_String@a
  7209     1749  3098               	movlw	high (STR_6| (0+32768))
  7210     174A  00A6               	movwf	Lcd_Write_String@a+1
  7211     174B  160A  118A  2336  160A  118A  	fcall	_Lcd_Write_String
  7212     1750                     l4194:
  7213                           
  7214                           ;main.c: 258: Lcd_Set_Cursor(2, 1);
  7215     1750  1283               	bcf	3,5	;RP0=0, select bank0
  7216     1751  1303               	bcf	3,6	;RP1=0, select bank0
  7217     1752  01A4               	clrf	Lcd_Set_Cursor@b
  7218     1753  0AA4               	incf	Lcd_Set_Cursor@b,f
  7219     1754  3002               	movlw	2
  7220     1755  160A  118A  2450  160A  118A  	fcall	_Lcd_Set_Cursor
  7221                           
  7222                           ;main.c: 259: Lcd_Write_String("OIL THE GEARS");
  7223     175A  30F9               	movlw	low (STR_7| (0+32768))
  7224     175B  1283               	bcf	3,5	;RP0=0, select bank0
  7225     175C  1303               	bcf	3,6	;RP1=0, select bank0
  7226     175D  00A5               	movwf	Lcd_Write_String@a
  7227     175E  3098               	movlw	high (STR_7| (0+32768))
  7228     175F  00A6               	movwf	Lcd_Write_String@a+1
  7229     1760  160A  118A  2336  160A  118A  	fcall	_Lcd_Write_String
  7230     1765                     l4196:
  7231                           
  7232                           ;main.c: 260: RA4 = 1;
  7233     1765  1283               	bcf	3,5	;RP0=0, select bank0
  7234     1766  1303               	bcf	3,6	;RP1=0, select bank0
  7235     1767  1605               	bsf	5,4	;volatile
  7236     1768                     l4198:
  7237                           
  7238                           ;main.c: 261: }
  7239     1768  3001               	movlw	1
  7240     1769  1683               	bsf	3,5	;RP0=1, select bank3
  7241     176A  1703               	bsf	3,6	;RP1=1, select bank3
  7242     176B  0792               	addwf	main@i_327^(0+384),f
  7243     176C  1803               	skipnc
  7244     176D  0A93               	incf	(main@i_327+1)^(0+384),f
  7245     176E  3000               	movlw	0
  7246     176F  0793               	addwf	(main@i_327+1)^(0+384),f
  7247     1770  2F2D               	goto	l4186
  7248     1771                     l4202:
  7249                           
  7250                           ;main.c: 262:     Lcd_Clear();
  7251     1771  160A  118A  21F7  160A  118A  	fcall	_Lcd_Clear
  7252     1776                     l4204:
  7253                           
  7254                           ;main.c: 263:     RA4 = 0;
  7255     1776  1283               	bcf	3,5	;RP0=0, select bank0
  7256     1777  1303               	bcf	3,6	;RP1=0, select bank0
  7257     1778  1205               	bcf	5,4	;volatile
  7258     1779                     l4206:
  7259                           
  7260                           ;main.c: 266: if ((currentTime.hours == 2000 || currentTime.hours == 2001 || currentTime
      +                          .hours == 2002) && currentTime.minutes == 0) {
  7261     1779  30D0               	movlw	208
  7262     177A  1683               	bsf	3,5	;RP0=1, select bank3
  7263     177B  1703               	bsf	3,6	;RP1=1, select bank3
  7264     177C  0620               	xorwf	_currentTime^(0+384),w
  7265     177D  3007               	movlw	7
  7266     177E  1903               	skipnz
  7267     177F  0621               	xorwf	(_currentTime+1)^(0+384),w
  7268     1780  1903               	btfsc	3,2
  7269     1781  2F83               	goto	u5641
  7270     1782  2F84               	goto	u5640
  7271     1783                     u5641:
  7272     1783  2F96               	goto	l4212
  7273     1784                     u5640:
  7274     1784                     l4208:
  7275     1784  30D1               	movlw	209
  7276     1785  0620               	xorwf	_currentTime^(0+384),w
  7277     1786  3007               	movlw	7
  7278     1787  1903               	skipnz
  7279     1788  0621               	xorwf	(_currentTime+1)^(0+384),w
  7280     1789  1903               	btfsc	3,2
  7281     178A  2F8C               	goto	u5651
  7282     178B  2F8D               	goto	u5650
  7283     178C                     u5651:
  7284     178C  2F96               	goto	l4212
  7285     178D                     u5650:
  7286     178D                     l4210:
  7287     178D  30D2               	movlw	210
  7288     178E  0620               	xorwf	_currentTime^(0+384),w
  7289     178F  3007               	movlw	7
  7290     1790  1903               	skipnz
  7291     1791  0621               	xorwf	(_currentTime+1)^(0+384),w
  7292     1792  1D03               	btfss	3,2
  7293     1793  2F95               	goto	u5661
  7294     1794  2F96               	goto	u5660
  7295     1795                     u5661:
  7296     1795  2FF1               	goto	l4238
  7297     1796                     u5660:
  7298     1796                     l4212:
  7299     1796  0822               	movf	(_currentTime^(0+384)+2),w
  7300     1797  0423               	iorwf	((_currentTime+1)^(0+384)+2),w
  7301     1798  1D03               	btfss	3,2
  7302     1799  2F9B               	goto	u5671
  7303     179A  2F9C               	goto	u5670
  7304     179B                     u5671:
  7305     179B  2FF1               	goto	l4238
  7306     179C                     u5670:
  7307     179C                     l4214:
  7308                           
  7309                           ;main.c: 268:     Lcd_Clear();
  7310     179C  160A  118A  21F7  160A  118A  	fcall	_Lcd_Clear
  7311     17A1                     l4216:
  7312                           
  7313                           ;main.c: 269:     int i=0 ;
  7314     17A1  1683               	bsf	3,5	;RP0=1, select bank3
  7315     17A2  1703               	bsf	3,6	;RP1=1, select bank3
  7316     17A3  0194               	clrf	main@i_330^(0+384)
  7317     17A4  0195               	clrf	(main@i_330+1)^(0+384)
  7318     17A5                     l4218:
  7319                           
  7320                           ;main.c: 270:     for(; i < 10; i++)
  7321     17A5  0815               	movf	(main@i_330+1)^(0+384),w
  7322     17A6  3A80               	xorlw	128
  7323     17A7  00FF               	movwf	btemp+1
  7324     17A8  3080               	movlw	128
  7325     17A9  027F               	subwf	btemp+1,w
  7326     17AA  1D03               	skipz
  7327     17AB  2FAE               	goto	u5685
  7328     17AC  300A               	movlw	10
  7329     17AD  0214               	subwf	main@i_330^(0+384),w
  7330     17AE                     u5685:
  7331     17AE  1C03               	skipc
  7332     17AF  2FB1               	goto	u5681
  7333     17B0  2FB2               	goto	u5680
  7334     17B1                     u5681:
  7335     17B1  2FB3               	goto	l4222
  7336     17B2                     u5680:
  7337     17B2  2FE9               	goto	l4234
  7338     17B3                     l4222:
  7339                           
  7340                           ;main.c: 271: {;main.c: 272:    Lcd_Set_Cursor(1, 1);
  7341     17B3  1283               	bcf	3,5	;RP0=0, select bank0
  7342     17B4  1303               	bcf	3,6	;RP1=0, select bank0
  7343     17B5  01A4               	clrf	Lcd_Set_Cursor@b
  7344     17B6  0AA4               	incf	Lcd_Set_Cursor@b,f
  7345     17B7  3001               	movlw	1
  7346     17B8  160A  118A  2450  160A  118A  	fcall	_Lcd_Set_Cursor
  7347     17BD                     l4224:
  7348                           
  7349                           ;main.c: 273: Lcd_Write_String("YAG BAKIMI YAPINIZ");
  7350     17BD  30AA               	movlw	low (STR_6| (0+32768))
  7351     17BE  1283               	bcf	3,5	;RP0=0, select bank0
  7352     17BF  1303               	bcf	3,6	;RP1=0, select bank0
  7353     17C0  00A5               	movwf	Lcd_Write_String@a
  7354     17C1  3098               	movlw	high (STR_6| (0+32768))
  7355     17C2  00A6               	movwf	Lcd_Write_String@a+1
  7356     17C3  160A  118A  2336  160A  118A  	fcall	_Lcd_Write_String
  7357     17C8                     l4226:
  7358                           
  7359                           ;main.c: 274: Lcd_Set_Cursor(2, 1);
  7360     17C8  1283               	bcf	3,5	;RP0=0, select bank0
  7361     17C9  1303               	bcf	3,6	;RP1=0, select bank0
  7362     17CA  01A4               	clrf	Lcd_Set_Cursor@b
  7363     17CB  0AA4               	incf	Lcd_Set_Cursor@b,f
  7364     17CC  3002               	movlw	2
  7365     17CD  160A  118A  2450  160A  118A  	fcall	_Lcd_Set_Cursor
  7366                           
  7367                           ;main.c: 275: Lcd_Write_String("OIL THE GEARS");
  7368     17D2  30F9               	movlw	low (STR_7| (0+32768))
  7369     17D3  1283               	bcf	3,5	;RP0=0, select bank0
  7370     17D4  1303               	bcf	3,6	;RP1=0, select bank0
  7371     17D5  00A5               	movwf	Lcd_Write_String@a
  7372     17D6  3098               	movlw	high (STR_7| (0+32768))
  7373     17D7  00A6               	movwf	Lcd_Write_String@a+1
  7374     17D8  160A  118A  2336  160A  118A  	fcall	_Lcd_Write_String
  7375     17DD                     l4228:
  7376                           
  7377                           ;main.c: 276: RA4 = 1;
  7378     17DD  1283               	bcf	3,5	;RP0=0, select bank0
  7379     17DE  1303               	bcf	3,6	;RP1=0, select bank0
  7380     17DF  1605               	bsf	5,4	;volatile
  7381     17E0                     l4230:
  7382                           
  7383                           ;main.c: 277: }
  7384     17E0  3001               	movlw	1
  7385     17E1  1683               	bsf	3,5	;RP0=1, select bank3
  7386     17E2  1703               	bsf	3,6	;RP1=1, select bank3
  7387     17E3  0794               	addwf	main@i_330^(0+384),f
  7388     17E4  1803               	skipnc
  7389     17E5  0A95               	incf	(main@i_330+1)^(0+384),f
  7390     17E6  3000               	movlw	0
  7391     17E7  0795               	addwf	(main@i_330+1)^(0+384),f
  7392     17E8  2FA5               	goto	l4218
  7393     17E9                     l4234:
  7394                           
  7395                           ;main.c: 278:     Lcd_Clear();
  7396     17E9  160A  118A  21F7  160A  118A  	fcall	_Lcd_Clear
  7397     17EE                     l4236:
  7398                           
  7399                           ;main.c: 279:     RA4 = 0;
  7400     17EE  1283               	bcf	3,5	;RP0=0, select bank0
  7401     17EF  1303               	bcf	3,6	;RP1=0, select bank0
  7402     17F0  1205               	bcf	5,4	;volatile
  7403     17F1                     l4238:
  7404                           
  7405                           ;main.c: 282: if ((currentTime.hours == 2500 || currentTime.hours == 2501 || currentTime
      +                          .hours == 2502) && currentTime.minutes == 0) {
  7406     17F1  30C4               	movlw	196
  7407     17F2  1683               	bsf	3,5	;RP0=1, select bank3
  7408     17F3  1703               	bsf	3,6	;RP1=1, select bank3
  7409     17F4  0620               	xorwf	_currentTime^(0+384),w
  7410     17F5  3009               	movlw	9
  7411     17F6  1903               	skipnz
  7412     17F7  0621               	xorwf	(_currentTime+1)^(0+384),w
  7413     17F8  1903               	btfsc	3,2
  7414     17F9  2FFD               	goto	u5691
  7415     17FA  120A  118A  281F   	goto	u5690
  7416     17FD                     u5691:
  7417     17FD  120A  118A  2831   	goto	l4244
  7418                           
  7419                           	psect	maintext_split_3
  7420     001F                     u5690:
  7421     001F                     l4240:
  7422     001F  30C5               	movlw	197
  7423     0020  0620               	xorwf	_currentTime^(0+384),w
  7424     0021  3009               	movlw	9
  7425     0022  1903               	skipnz
  7426     0023  0621               	xorwf	(_currentTime+1)^(0+384),w
  7427     0024  1903               	btfsc	3,2
  7428     0025  2827               	goto	u5701
  7429     0026  2828               	goto	u5700
  7430     0027                     u5701:
  7431     0027  2831               	goto	l4244
  7432     0028                     u5700:
  7433     0028                     l4242:
  7434     0028  30C6               	movlw	198
  7435     0029  0620               	xorwf	_currentTime^(0+384),w
  7436     002A  3009               	movlw	9
  7437     002B  1903               	skipnz
  7438     002C  0621               	xorwf	(_currentTime+1)^(0+384),w
  7439     002D  1D03               	btfss	3,2
  7440     002E  2830               	goto	u5711
  7441     002F  2831               	goto	u5710
  7442     0030                     u5711:
  7443     0030  288C               	goto	l4270
  7444     0031                     u5710:
  7445     0031                     l4244:
  7446     0031  0822               	movf	(_currentTime^(0+384)+2),w
  7447     0032  0423               	iorwf	((_currentTime+1)^(0+384)+2),w
  7448     0033  1D03               	btfss	3,2
  7449     0034  2836               	goto	u5721
  7450     0035  2837               	goto	u5720
  7451     0036                     u5721:
  7452     0036  288C               	goto	l4270
  7453     0037                     u5720:
  7454     0037                     l4246:
  7455                           
  7456                           ;main.c: 284:     Lcd_Clear();
  7457     0037  160A  118A  21F7  120A  118A  	fcall	_Lcd_Clear
  7458     003C                     l4248:
  7459                           
  7460                           ;main.c: 285:     int i=0 ;
  7461     003C  1683               	bsf	3,5	;RP0=1, select bank3
  7462     003D  1703               	bsf	3,6	;RP1=1, select bank3
  7463     003E  0196               	clrf	main@i_333^(0+384)
  7464     003F  0197               	clrf	(main@i_333+1)^(0+384)
  7465     0040                     l4250:
  7466                           
  7467                           ;main.c: 286:     for(; i < 10; i++)
  7468     0040  0817               	movf	(main@i_333+1)^(0+384),w
  7469     0041  3A80               	xorlw	128
  7470     0042  00FF               	movwf	btemp+1
  7471     0043  3080               	movlw	128
  7472     0044  027F               	subwf	btemp+1,w
  7473     0045  1D03               	skipz
  7474     0046  2849               	goto	u5735
  7475     0047  300A               	movlw	10
  7476     0048  0216               	subwf	main@i_333^(0+384),w
  7477     0049                     u5735:
  7478     0049  1C03               	skipc
  7479     004A  284C               	goto	u5731
  7480     004B  284D               	goto	u5730
  7481     004C                     u5731:
  7482     004C  284E               	goto	l4254
  7483     004D                     u5730:
  7484     004D  2884               	goto	l4266
  7485     004E                     l4254:
  7486                           
  7487                           ;main.c: 287: {;main.c: 288:    Lcd_Set_Cursor(1, 1);
  7488     004E  1283               	bcf	3,5	;RP0=0, select bank0
  7489     004F  1303               	bcf	3,6	;RP1=0, select bank0
  7490     0050  01A4               	clrf	Lcd_Set_Cursor@b
  7491     0051  0AA4               	incf	Lcd_Set_Cursor@b,f
  7492     0052  3001               	movlw	1
  7493     0053  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  7494     0058                     l4256:
  7495                           
  7496                           ;main.c: 289: Lcd_Write_String("YAG BAKIMI YAPINIZ");
  7497     0058  30AA               	movlw	low (STR_6| (0+32768))
  7498     0059  1283               	bcf	3,5	;RP0=0, select bank0
  7499     005A  1303               	bcf	3,6	;RP1=0, select bank0
  7500     005B  00A5               	movwf	Lcd_Write_String@a
  7501     005C  3098               	movlw	high (STR_6| (0+32768))
  7502     005D  00A6               	movwf	Lcd_Write_String@a+1
  7503     005E  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  7504     0063                     l4258:
  7505                           
  7506                           ;main.c: 290: Lcd_Set_Cursor(2, 1);
  7507     0063  1283               	bcf	3,5	;RP0=0, select bank0
  7508     0064  1303               	bcf	3,6	;RP1=0, select bank0
  7509     0065  01A4               	clrf	Lcd_Set_Cursor@b
  7510     0066  0AA4               	incf	Lcd_Set_Cursor@b,f
  7511     0067  3002               	movlw	2
  7512     0068  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  7513                           
  7514                           ;main.c: 291: Lcd_Write_String("OIL THE GEARS");
  7515     006D  30F9               	movlw	low (STR_7| (0+32768))
  7516     006E  1283               	bcf	3,5	;RP0=0, select bank0
  7517     006F  1303               	bcf	3,6	;RP1=0, select bank0
  7518     0070  00A5               	movwf	Lcd_Write_String@a
  7519     0071  3098               	movlw	high (STR_7| (0+32768))
  7520     0072  00A6               	movwf	Lcd_Write_String@a+1
  7521     0073  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  7522     0078                     l4260:
  7523                           
  7524                           ;main.c: 292: RA4 = 1;
  7525     0078  1283               	bcf	3,5	;RP0=0, select bank0
  7526     0079  1303               	bcf	3,6	;RP1=0, select bank0
  7527     007A  1605               	bsf	5,4	;volatile
  7528     007B                     l4262:
  7529                           
  7530                           ;main.c: 293: }
  7531     007B  3001               	movlw	1
  7532     007C  1683               	bsf	3,5	;RP0=1, select bank3
  7533     007D  1703               	bsf	3,6	;RP1=1, select bank3
  7534     007E  0796               	addwf	main@i_333^(0+384),f
  7535     007F  1803               	skipnc
  7536     0080  0A97               	incf	(main@i_333+1)^(0+384),f
  7537     0081  3000               	movlw	0
  7538     0082  0797               	addwf	(main@i_333+1)^(0+384),f
  7539     0083  2840               	goto	l4250
  7540     0084                     l4266:
  7541                           
  7542                           ;main.c: 294:     Lcd_Clear();
  7543     0084  160A  118A  21F7  120A  118A  	fcall	_Lcd_Clear
  7544     0089                     l4268:
  7545                           
  7546                           ;main.c: 295:     RA4 = 0;
  7547     0089  1283               	bcf	3,5	;RP0=0, select bank0
  7548     008A  1303               	bcf	3,6	;RP1=0, select bank0
  7549     008B  1205               	bcf	5,4	;volatile
  7550     008C                     l4270:
  7551                           
  7552                           ;main.c: 299:         sprintf(lcdText, "%5uh %02um", currentTime.hours, currentTime.minu
      +                          tes);
  7553     008C  3014               	movlw	low (STR_18| (0+32768))
  7554     008D  1283               	bcf	3,5	;RP0=0, select bank0
  7555     008E  1303               	bcf	3,6	;RP1=0, select bank0
  7556     008F  00B2               	movwf	sprintf@f
  7557     0090  3099               	movlw	high (STR_18| (0+32768))
  7558     0091  00B3               	movwf	sprintf@f+1
  7559     0092  1683               	bsf	3,5	;RP0=1, select bank3
  7560     0093  1703               	bsf	3,6	;RP1=1, select bank3
  7561     0094  0821               	movf	(_currentTime+1)^(0+384),w
  7562     0095  1283               	bcf	3,5	;RP0=0, select bank0
  7563     0096  1303               	bcf	3,6	;RP1=0, select bank0
  7564     0097  00B5               	movwf	?_sprintf+3
  7565     0098  1683               	bsf	3,5	;RP0=1, select bank3
  7566     0099  1703               	bsf	3,6	;RP1=1, select bank3
  7567     009A  0820               	movf	_currentTime^(0+384),w
  7568     009B  1283               	bcf	3,5	;RP0=0, select bank0
  7569     009C  1303               	bcf	3,6	;RP1=0, select bank0
  7570     009D  00B4               	movwf	?_sprintf+2
  7571     009E  1683               	bsf	3,5	;RP0=1, select bank3
  7572     009F  1703               	bsf	3,6	;RP1=1, select bank3
  7573     00A0  0823               	movf	((_currentTime+1)^(0+384)+2),w
  7574     00A1  1283               	bcf	3,5	;RP0=0, select bank0
  7575     00A2  1303               	bcf	3,6	;RP1=0, select bank0
  7576     00A3  00B7               	movwf	?_sprintf+5
  7577     00A4  1683               	bsf	3,5	;RP0=1, select bank3
  7578     00A5  1703               	bsf	3,6	;RP1=1, select bank3
  7579     00A6  0822               	movf	(_currentTime^(0+384)+2),w
  7580     00A7  1283               	bcf	3,5	;RP0=0, select bank0
  7581     00A8  1303               	bcf	3,6	;RP1=0, select bank0
  7582     00A9  00B6               	movwf	?_sprintf+4
  7583     00AA  30B4               	movlw	(low (main@lcdText| 0))& (0+255)
  7584     00AB  120A  158A  22C4  120A  118A  	fcall	_sprintf
  7585     00B0                     l4272:
  7586                           
  7587                           ;main.c: 302:      Lcd_Set_Cursor(1, 10);
  7588     00B0  300A               	movlw	10
  7589     00B1  1283               	bcf	3,5	;RP0=0, select bank0
  7590     00B2  1303               	bcf	3,6	;RP1=0, select bank0
  7591     00B3  00A4               	movwf	Lcd_Set_Cursor@b
  7592     00B4  3001               	movlw	1
  7593     00B5  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  7594                           
  7595                           ;main.c: 303:      Lcd_Write_String("  ");
  7596     00BA  30D9               	movlw	low ((STR_28+12)| (0+32768))
  7597     00BB  1283               	bcf	3,5	;RP0=0, select bank0
  7598     00BC  1303               	bcf	3,6	;RP1=0, select bank0
  7599     00BD  00A5               	movwf	Lcd_Write_String@a
  7600     00BE  3098               	movlw	high ((STR_28+12)| (0+32768))
  7601     00BF  00A6               	movwf	Lcd_Write_String@a+1
  7602     00C0  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  7603     00C5                     l4274:
  7604                           
  7605                           ;main.c: 304:      Lcd_Set_Cursor(1, 11);
  7606     00C5  300B               	movlw	11
  7607     00C6  1283               	bcf	3,5	;RP0=0, select bank0
  7608     00C7  1303               	bcf	3,6	;RP1=0, select bank0
  7609     00C8  00A4               	movwf	Lcd_Set_Cursor@b
  7610     00C9  3001               	movlw	1
  7611     00CA  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  7612     00CF                     l4276:
  7613                           
  7614                           ;main.c: 305:      Lcd_Write_String(lcdText);
  7615     00CF  30B4               	movlw	(low (main@lcdText| 0))& (0+255)
  7616     00D0  1283               	bcf	3,5	;RP0=0, select bank0
  7617     00D1  1303               	bcf	3,6	;RP1=0, select bank0
  7618     00D2  00A5               	movwf	Lcd_Write_String@a
  7619     00D3  3000               	movlw	0
  7620     00D4  00A6               	movwf	Lcd_Write_String@a+1
  7621     00D5  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  7622                           
  7623                           ;main.c: 308:         writeEEPROM(0x00, currentTime.hours);
  7624     00DA  3000               	movlw	0
  7625     00DB  1283               	bcf	3,5	;RP0=0, select bank0
  7626     00DC  1303               	bcf	3,6	;RP1=0, select bank0
  7627     00DD  00A0               	movwf	writeEEPROM@address
  7628     00DE  00A1               	movwf	writeEEPROM@address+1
  7629     00DF  1683               	bsf	3,5	;RP0=1, select bank3
  7630     00E0  1703               	bsf	3,6	;RP1=1, select bank3
  7631     00E1  0821               	movf	(_currentTime+1)^(0+384),w
  7632     00E2  1283               	bcf	3,5	;RP0=0, select bank0
  7633     00E3  1303               	bcf	3,6	;RP1=0, select bank0
  7634     00E4  00A3               	movwf	writeEEPROM@data+1
  7635     00E5  1683               	bsf	3,5	;RP0=1, select bank3
  7636     00E6  1703               	bsf	3,6	;RP1=1, select bank3
  7637     00E7  0820               	movf	_currentTime^(0+384),w
  7638     00E8  1283               	bcf	3,5	;RP0=0, select bank0
  7639     00E9  1303               	bcf	3,6	;RP1=0, select bank0
  7640     00EA  00A2               	movwf	writeEEPROM@data
  7641     00EB  160A  118A  2267  120A  118A  	fcall	_writeEEPROM
  7642                           
  7643                           ;main.c: 309:         writeEEPROM(0x01, currentTime.minutes);
  7644     00F0  3001               	movlw	1
  7645     00F1  1283               	bcf	3,5	;RP0=0, select bank0
  7646     00F2  1303               	bcf	3,6	;RP1=0, select bank0
  7647     00F3  00A0               	movwf	writeEEPROM@address
  7648     00F4  3000               	movlw	0
  7649     00F5  00A1               	movwf	writeEEPROM@address+1
  7650     00F6  1683               	bsf	3,5	;RP0=1, select bank3
  7651     00F7  1703               	bsf	3,6	;RP1=1, select bank3
  7652     00F8  0823               	movf	((_currentTime+1)^(0+384)+2),w
  7653     00F9  1283               	bcf	3,5	;RP0=0, select bank0
  7654     00FA  1303               	bcf	3,6	;RP1=0, select bank0
  7655     00FB  00A3               	movwf	writeEEPROM@data+1
  7656     00FC  1683               	bsf	3,5	;RP0=1, select bank3
  7657     00FD  1703               	bsf	3,6	;RP1=1, select bank3
  7658     00FE  0822               	movf	(_currentTime^(0+384)+2),w
  7659     00FF  1283               	bcf	3,5	;RP0=0, select bank0
  7660     0100  1303               	bcf	3,6	;RP1=0, select bank0
  7661     0101  00A2               	movwf	writeEEPROM@data
  7662     0102  160A  118A  2267  120A  118A  	fcall	_writeEEPROM
  7663                           
  7664                           ;main.c: 310:         writeEEPROM(0x02, currentTime.seconds);
  7665     0107  3002               	movlw	2
  7666     0108  1283               	bcf	3,5	;RP0=0, select bank0
  7667     0109  1303               	bcf	3,6	;RP1=0, select bank0
  7668     010A  00A0               	movwf	writeEEPROM@address
  7669     010B  3000               	movlw	0
  7670     010C  00A1               	movwf	writeEEPROM@address+1
  7671     010D  1683               	bsf	3,5	;RP0=1, select bank3
  7672     010E  1703               	bsf	3,6	;RP1=1, select bank3
  7673     010F  0825               	movf	((_currentTime+1)^(0+384)+4),w
  7674     0110  1283               	bcf	3,5	;RP0=0, select bank0
  7675     0111  1303               	bcf	3,6	;RP1=0, select bank0
  7676     0112  00A3               	movwf	writeEEPROM@data+1
  7677     0113  1683               	bsf	3,5	;RP0=1, select bank3
  7678     0114  1703               	bsf	3,6	;RP1=1, select bank3
  7679     0115  0824               	movf	(_currentTime^(0+384)+4),w
  7680     0116  1283               	bcf	3,5	;RP0=0, select bank0
  7681     0117  1303               	bcf	3,6	;RP1=0, select bank0
  7682     0118  00A2               	movwf	writeEEPROM@data
  7683     0119  160A  118A  2267  120A  118A  	fcall	_writeEEPROM
  7684     011E                     l4278:
  7685                           
  7686                           ;main.c: 313:     ADCON0bits.CHS = 0b0011;
  7687     011E  1283               	bcf	3,5	;RP0=0, select bank0
  7688     011F  1303               	bcf	3,6	;RP1=0, select bank0
  7689     0120  081F               	movf	31,w	;volatile
  7690     0121  39C7               	andlw	-57
  7691     0122  3818               	iorlw	24
  7692     0123  009F               	movwf	31	;volatile
  7693     0124                     l4280:
  7694                           
  7695                           ;main.c: 314:     ADCON0bits.GO = 1;
  7696     0124  151F               	bsf	31,2	;volatile
  7697     0125                     l211:	
  7698                           ;main.c: 315:     while (ADCON0bits.GO);
  7699                           
  7700     0125  191F               	btfsc	31,2	;volatile
  7701     0126  2928               	goto	u5741
  7702     0127  2929               	goto	u5740
  7703     0128                     u5741:
  7704     0128  2925               	goto	l211
  7705     0129                     u5740:
  7706     0129                     l4282:
  7707                           
  7708                           ;main.c: 316:     adcValue2 = (ADRESH << 8) | ADRESL;
  7709     0129  081E               	movf	30,w	;volatile
  7710     012A  1683               	bsf	3,5	;RP0=1, select bank1
  7711     012B  1303               	bcf	3,6	;RP1=0, select bank1
  7712     012C  00D7               	movwf	(main@adcValue2+1)^(0+128)
  7713     012D  081E               	movf	30,w	;volatile
  7714     012E  00D6               	movwf	main@adcValue2^(0+128)
  7715     012F                     l4284:
  7716                           
  7717                           ;main.c: 318:     unsigned int integerPart = adcValue2*3 ;
  7718     012F  0857               	movf	(main@adcValue2+1)^(0+128),w
  7719     0130  1283               	bcf	3,5	;RP0=0, select bank0
  7720     0131  1303               	bcf	3,6	;RP1=0, select bank0
  7721     0132  00A1               	movwf	___wmul@multiplier+1
  7722     0133  1683               	bsf	3,5	;RP0=1, select bank1
  7723     0134  1303               	bcf	3,6	;RP1=0, select bank1
  7724     0135  0856               	movf	main@adcValue2^(0+128),w
  7725     0136  1283               	bcf	3,5	;RP0=0, select bank0
  7726     0137  1303               	bcf	3,6	;RP1=0, select bank0
  7727     0138  00A0               	movwf	___wmul@multiplier
  7728     0139  3003               	movlw	3
  7729     013A  00A2               	movwf	___wmul@multiplicand
  7730     013B  3000               	movlw	0
  7731     013C  00A3               	movwf	___wmul@multiplicand+1
  7732     013D  160A  118A  22AA  120A  118A  	fcall	___wmul
  7733     0142  1283               	bcf	3,5	;RP0=0, select bank0
  7734     0143  1303               	bcf	3,6	;RP1=0, select bank0
  7735     0144  0821               	movf	?___wmul+1,w
  7736     0145  1683               	bsf	3,5	;RP0=1, select bank3
  7737     0146  1703               	bsf	3,6	;RP1=1, select bank3
  7738     0147  009B               	movwf	(main@integerPart+1)^(0+384)
  7739     0148  1283               	bcf	3,5	;RP0=0, select bank0
  7740     0149  1303               	bcf	3,6	;RP1=0, select bank0
  7741     014A  0820               	movf	?___wmul,w
  7742     014B  1683               	bsf	3,5	;RP0=1, select bank3
  7743     014C  1703               	bsf	3,6	;RP1=1, select bank3
  7744     014D  009A               	movwf	main@integerPart^(0+384)
  7745     014E                     l4286:
  7746                           
  7747                           ;main.c: 320:     int binler = integerPart/1000;
  7748     014E  30E8               	movlw	232
  7749     014F  1283               	bcf	3,5	;RP0=0, select bank0
  7750     0150  1303               	bcf	3,6	;RP1=0, select bank0
  7751     0151  00A6               	movwf	___lwdiv@divisor
  7752     0152  3003               	movlw	3
  7753     0153  00A7               	movwf	___lwdiv@divisor+1
  7754     0154  1683               	bsf	3,5	;RP0=1, select bank3
  7755     0155  1703               	bsf	3,6	;RP1=1, select bank3
  7756     0156  081B               	movf	(main@integerPart+1)^(0+384),w
  7757     0157  1283               	bcf	3,5	;RP0=0, select bank0
  7758     0158  1303               	bcf	3,6	;RP1=0, select bank0
  7759     0159  00A9               	movwf	___lwdiv@dividend+1
  7760     015A  1683               	bsf	3,5	;RP0=1, select bank3
  7761     015B  1703               	bsf	3,6	;RP1=1, select bank3
  7762     015C  081A               	movf	main@integerPart^(0+384),w
  7763     015D  1283               	bcf	3,5	;RP0=0, select bank0
  7764     015E  1303               	bcf	3,6	;RP1=0, select bank0
  7765     015F  00A8               	movwf	___lwdiv@dividend
  7766     0160  160A  118A  23C2  120A  118A  	fcall	___lwdiv
  7767     0165  1283               	bcf	3,5	;RP0=0, select bank0
  7768     0166  1303               	bcf	3,6	;RP1=0, select bank0
  7769     0167  0827               	movf	?___lwdiv+1,w
  7770     0168  1683               	bsf	3,5	;RP0=1, select bank3
  7771     0169  1703               	bsf	3,6	;RP1=1, select bank3
  7772     016A  0099               	movwf	(main@binler+1)^(0+384)
  7773     016B  1283               	bcf	3,5	;RP0=0, select bank0
  7774     016C  1303               	bcf	3,6	;RP1=0, select bank0
  7775     016D  0826               	movf	?___lwdiv,w
  7776     016E  1683               	bsf	3,5	;RP0=1, select bank3
  7777     016F  1703               	bsf	3,6	;RP1=1, select bank3
  7778     0170  0098               	movwf	main@binler^(0+384)
  7779     0171                     l4288:
  7780                           
  7781                           ;main.c: 321:     int yuzler = (integerPart-binler*1000)/100;
  7782     0171  3064               	movlw	100
  7783     0172  1283               	bcf	3,5	;RP0=0, select bank0
  7784     0173  1303               	bcf	3,6	;RP1=0, select bank0
  7785     0174  00A6               	movwf	___lwdiv@divisor
  7786     0175  3000               	movlw	0
  7787     0176  00A7               	movwf	___lwdiv@divisor+1
  7788     0177  1683               	bsf	3,5	;RP0=1, select bank3
  7789     0178  1703               	bsf	3,6	;RP1=1, select bank3
  7790     0179  0819               	movf	(main@binler+1)^(0+384),w
  7791     017A  1283               	bcf	3,5	;RP0=0, select bank0
  7792     017B  1303               	bcf	3,6	;RP1=0, select bank0
  7793     017C  00A1               	movwf	___wmul@multiplier+1
  7794     017D  1683               	bsf	3,5	;RP0=1, select bank3
  7795     017E  1703               	bsf	3,6	;RP1=1, select bank3
  7796     017F  0818               	movf	main@binler^(0+384),w
  7797     0180  1283               	bcf	3,5	;RP0=0, select bank0
  7798     0181  1303               	bcf	3,6	;RP1=0, select bank0
  7799     0182  00A0               	movwf	___wmul@multiplier
  7800     0183  3018               	movlw	24
  7801     0184  00A2               	movwf	___wmul@multiplicand
  7802     0185  30FC               	movlw	252
  7803     0186  00A3               	movwf	___wmul@multiplicand+1
  7804     0187  160A  118A  22AA  120A  118A  	fcall	___wmul
  7805     018C  1683               	bsf	3,5	;RP0=1, select bank3
  7806     018D  1703               	bsf	3,6	;RP1=1, select bank3
  7807     018E  081A               	movf	main@integerPart^(0+384),w
  7808     018F  1283               	bcf	3,5	;RP0=0, select bank0
  7809     0190  1303               	bcf	3,6	;RP1=0, select bank0
  7810     0191  0720               	addwf	?___wmul,w
  7811     0192  00A8               	movwf	___lwdiv@dividend
  7812     0193  1683               	bsf	3,5	;RP0=1, select bank3
  7813     0194  1703               	bsf	3,6	;RP1=1, select bank3
  7814     0195  081B               	movf	(main@integerPart+1)^(0+384),w
  7815     0196  1803               	skipnc
  7816     0197  0A1B               	incf	(main@integerPart+1)^(0+384),w
  7817     0198  1283               	bcf	3,5	;RP0=0, select bank0
  7818     0199  1303               	bcf	3,6	;RP1=0, select bank0
  7819     019A  0721               	addwf	?___wmul+1,w
  7820     019B  00A9               	movwf	___lwdiv@dividend+1
  7821     019C  160A  118A  23C2  120A  118A  	fcall	___lwdiv
  7822     01A1  1283               	bcf	3,5	;RP0=0, select bank0
  7823     01A2  1303               	bcf	3,6	;RP1=0, select bank0
  7824     01A3  0827               	movf	?___lwdiv+1,w
  7825     01A4  1683               	bsf	3,5	;RP0=1, select bank1
  7826     01A5  1303               	bcf	3,6	;RP1=0, select bank1
  7827     01A6  00EB               	movwf	(main@yuzler+1)^(0+128)
  7828     01A7  1283               	bcf	3,5	;RP0=0, select bank0
  7829     01A8  1303               	bcf	3,6	;RP1=0, select bank0
  7830     01A9  0826               	movf	?___lwdiv,w
  7831     01AA  1683               	bsf	3,5	;RP0=1, select bank1
  7832     01AB  1303               	bcf	3,6	;RP1=0, select bank1
  7833     01AC  00EA               	movwf	main@yuzler^(0+128)
  7834     01AD                     l4290:
  7835                           
  7836                           ;main.c: 322:     int onlar = (integerPart-binler*1000-yuzler*100)/10;
  7837     01AD  300A               	movlw	10
  7838     01AE  1283               	bcf	3,5	;RP0=0, select bank0
  7839     01AF  1303               	bcf	3,6	;RP1=0, select bank0
  7840     01B0  00A6               	movwf	___lwdiv@divisor
  7841     01B1  3000               	movlw	0
  7842     01B2  00A7               	movwf	___lwdiv@divisor+1
  7843     01B3  1683               	bsf	3,5	;RP0=1, select bank3
  7844     01B4  1703               	bsf	3,6	;RP1=1, select bank3
  7845     01B5  0819               	movf	(main@binler+1)^(0+384),w
  7846     01B6  1283               	bcf	3,5	;RP0=0, select bank0
  7847     01B7  1303               	bcf	3,6	;RP1=0, select bank0
  7848     01B8  00A1               	movwf	___wmul@multiplier+1
  7849     01B9  1683               	bsf	3,5	;RP0=1, select bank3
  7850     01BA  1703               	bsf	3,6	;RP1=1, select bank3
  7851     01BB  0818               	movf	main@binler^(0+384),w
  7852     01BC  1283               	bcf	3,5	;RP0=0, select bank0
  7853     01BD  1303               	bcf	3,6	;RP1=0, select bank0
  7854     01BE  00A0               	movwf	___wmul@multiplier
  7855     01BF  3018               	movlw	24
  7856     01C0  00A2               	movwf	___wmul@multiplicand
  7857     01C1  30FC               	movlw	252
  7858     01C2  00A3               	movwf	___wmul@multiplicand+1
  7859     01C3  160A  118A  22AA  120A  118A  	fcall	___wmul
  7860     01C8  1283               	bcf	3,5	;RP0=0, select bank0
  7861     01C9  1303               	bcf	3,6	;RP1=0, select bank0
  7862     01CA  0820               	movf	?___wmul,w
  7863     01CB  00D4               	movwf	??_main
  7864     01CC  0821               	movf	?___wmul+1,w
  7865     01CD  00D5               	movwf	??_main+1
  7866     01CE  1683               	bsf	3,5	;RP0=1, select bank1
  7867     01CF  1303               	bcf	3,6	;RP1=0, select bank1
  7868     01D0  086B               	movf	(main@yuzler+1)^(0+128),w
  7869     01D1  1283               	bcf	3,5	;RP0=0, select bank0
  7870     01D2  1303               	bcf	3,6	;RP1=0, select bank0
  7871     01D3  00A1               	movwf	___wmul@multiplier+1
  7872     01D4  1683               	bsf	3,5	;RP0=1, select bank1
  7873     01D5  1303               	bcf	3,6	;RP1=0, select bank1
  7874     01D6  086A               	movf	main@yuzler^(0+128),w
  7875     01D7  1283               	bcf	3,5	;RP0=0, select bank0
  7876     01D8  1303               	bcf	3,6	;RP1=0, select bank0
  7877     01D9  00A0               	movwf	___wmul@multiplier
  7878     01DA  309C               	movlw	156
  7879     01DB  00A2               	movwf	___wmul@multiplicand
  7880     01DC  30FF               	movlw	255
  7881     01DD  00A3               	movwf	___wmul@multiplicand+1
  7882     01DE  160A  118A  22AA  120A  118A  	fcall	___wmul
  7883     01E3  1283               	bcf	3,5	;RP0=0, select bank0
  7884     01E4  1303               	bcf	3,6	;RP1=0, select bank0
  7885     01E5  0820               	movf	?___wmul,w
  7886     01E6  0754               	addwf	??_main,w
  7887     01E7  00D6               	movwf	??_main+2
  7888     01E8  0821               	movf	?___wmul+1,w
  7889     01E9  1803               	skipnc
  7890     01EA  0A21               	incf	?___wmul+1,w
  7891     01EB  0755               	addwf	??_main+1,w
  7892     01EC  00D7               	movwf	??_main+3
  7893     01ED  1683               	bsf	3,5	;RP0=1, select bank3
  7894     01EE  1703               	bsf	3,6	;RP1=1, select bank3
  7895     01EF  081A               	movf	main@integerPart^(0+384),w
  7896     01F0  1283               	bcf	3,5	;RP0=0, select bank0
  7897     01F1  1303               	bcf	3,6	;RP1=0, select bank0
  7898     01F2  0756               	addwf	??_main+2,w
  7899     01F3  00A8               	movwf	___lwdiv@dividend
  7900     01F4  1683               	bsf	3,5	;RP0=1, select bank3
  7901     01F5  1703               	bsf	3,6	;RP1=1, select bank3
  7902     01F6  081B               	movf	(main@integerPart+1)^(0+384),w
  7903     01F7  1803               	skipnc
  7904     01F8  0A1B               	incf	(main@integerPart+1)^(0+384),w
  7905     01F9  1283               	bcf	3,5	;RP0=0, select bank0
  7906     01FA  1303               	bcf	3,6	;RP1=0, select bank0
  7907     01FB  0757               	addwf	??_main+3,w
  7908     01FC  00A9               	movwf	___lwdiv@dividend+1
  7909     01FD  160A  118A  23C2  120A  118A  	fcall	___lwdiv
  7910     0202  1283               	bcf	3,5	;RP0=0, select bank0
  7911     0203  1303               	bcf	3,6	;RP1=0, select bank0
  7912     0204  0827               	movf	?___lwdiv+1,w
  7913     0205  1683               	bsf	3,5	;RP0=1, select bank1
  7914     0206  1303               	bcf	3,6	;RP1=0, select bank1
  7915     0207  00DB               	movwf	(main@onlar+1)^(0+128)
  7916     0208  1283               	bcf	3,5	;RP0=0, select bank0
  7917     0209  1303               	bcf	3,6	;RP1=0, select bank0
  7918     020A  0826               	movf	?___lwdiv,w
  7919     020B  1683               	bsf	3,5	;RP0=1, select bank1
  7920     020C  1303               	bcf	3,6	;RP1=0, select bank1
  7921     020D  00DA               	movwf	main@onlar^(0+128)
  7922     020E                     l4292:
  7923                           
  7924                           ;main.c: 323:     int birler = integerPart%10;
  7925     020E  300A               	movlw	10
  7926     020F  1283               	bcf	3,5	;RP0=0, select bank0
  7927     0210  1303               	bcf	3,6	;RP1=0, select bank0
  7928     0211  00AD               	movwf	___lwmod@divisor
  7929     0212  3000               	movlw	0
  7930     0213  00AE               	movwf	___lwmod@divisor+1
  7931     0214  1683               	bsf	3,5	;RP0=1, select bank3
  7932     0215  1703               	bsf	3,6	;RP1=1, select bank3
  7933     0216  081B               	movf	(main@integerPart+1)^(0+384),w
  7934     0217  1283               	bcf	3,5	;RP0=0, select bank0
  7935     0218  1303               	bcf	3,6	;RP1=0, select bank0
  7936     0219  00B0               	movwf	___lwmod@dividend+1
  7937     021A  1683               	bsf	3,5	;RP0=1, select bank3
  7938     021B  1703               	bsf	3,6	;RP1=1, select bank3
  7939     021C  081A               	movf	main@integerPart^(0+384),w
  7940     021D  1283               	bcf	3,5	;RP0=0, select bank0
  7941     021E  1303               	bcf	3,6	;RP1=0, select bank0
  7942     021F  00AF               	movwf	___lwmod@dividend
  7943     0220  160A  118A  22FA  120A  118A  	fcall	___lwmod
  7944     0225  1283               	bcf	3,5	;RP0=0, select bank0
  7945     0226  1303               	bcf	3,6	;RP1=0, select bank0
  7946     0227  082E               	movf	?___lwmod+1,w
  7947     0228  1683               	bsf	3,5	;RP0=1, select bank1
  7948     0229  1303               	bcf	3,6	;RP1=0, select bank1
  7949     022A  00DD               	movwf	(main@birler+1)^(0+128)
  7950     022B  1283               	bcf	3,5	;RP0=0, select bank0
  7951     022C  1303               	bcf	3,6	;RP1=0, select bank0
  7952     022D  082D               	movf	?___lwmod,w
  7953     022E  1683               	bsf	3,5	;RP0=1, select bank1
  7954     022F  1303               	bcf	3,6	;RP1=0, select bank1
  7955     0230  00DC               	movwf	main@birler^(0+128)
  7956     0231                     l4294:
  7957                           
  7958                           ;main.c: 329:         ADCON0bits.CHS = 0b0001;
  7959     0231  1283               	bcf	3,5	;RP0=0, select bank0
  7960     0232  1303               	bcf	3,6	;RP1=0, select bank0
  7961     0233  081F               	movf	31,w	;volatile
  7962     0234  39C7               	andlw	-57
  7963     0235  3808               	iorlw	8
  7964     0236  009F               	movwf	31	;volatile
  7965     0237                     l4296:
  7966                           
  7967                           ;main.c: 330:         _delay((unsigned long)((50)*(4000000/4000000.0)));
  7968     0237  300F               	movlw	15
  7969     0238  1283               	bcf	3,5	;RP0=0, select bank0
  7970     0239  1303               	bcf	3,6	;RP1=0, select bank0
  7971     023A  00D4               	movwf	??_main
  7972     023B                     u6097:
  7973     023B  0BD4               	decfsz	??_main,f
  7974     023C  2A3B               	goto	u6097
  7975     023D  2A3E               	nop2
  7976     023E                     l4298:
  7977                           
  7978                           ;main.c: 331:         ADCON0bits.GO = 1;
  7979     023E  1283               	bcf	3,5	;RP0=0, select bank0
  7980     023F  1303               	bcf	3,6	;RP1=0, select bank0
  7981     0240  151F               	bsf	31,2	;volatile
  7982     0241                     l214:	
  7983                           ;main.c: 332:         while (ADCON0bits.GO);
  7984                           
  7985     0241  191F               	btfsc	31,2	;volatile
  7986     0242  2A44               	goto	u5751
  7987     0243  2A45               	goto	u5750
  7988     0244                     u5751:
  7989     0244  2A41               	goto	l214
  7990     0245                     u5750:
  7991     0245                     l4300:
  7992                           
  7993                           ;main.c: 333:         adcValue1 = (ADRESH << 8) | ADRESL;
  7994     0245  1683               	bsf	3,5	;RP0=1, select bank1
  7995     0246  1303               	bcf	3,6	;RP1=0, select bank1
  7996     0247  081E               	movf	30,w	;volatile
  7997     0248  1283               	bcf	3,5	;RP0=0, select bank0
  7998     0249  1303               	bcf	3,6	;RP1=0, select bank0
  7999     024A  00D4               	movwf	??_main
  8000     024B  01D5               	clrf	??_main+1
  8001     024C  081E               	movf	30,w	;volatile
  8002     024D  00D6               	movwf	??_main+2
  8003     024E  01D7               	clrf	??_main+3
  8004     024F  0856               	movf	??_main+2,w
  8005     0250  00D7               	movwf	??_main+3
  8006     0251  01D6               	clrf	??_main+2
  8007     0252  0854               	movf	??_main,w
  8008     0253  0456               	iorwf	??_main+2,w
  8009     0254  00A0               	movwf	___xxtofl@val
  8010     0255  0855               	movf	??_main+1,w
  8011     0256  0457               	iorwf	??_main+3,w
  8012     0257  00A1               	movwf	___xxtofl@val+1
  8013     0258  01A2               	clrf	___xxtofl@val+2
  8014     0259  1BA1               	btfsc	___xxtofl@val+1,7
  8015     025A  03A2               	decf	___xxtofl@val+2,f
  8016     025B  0822               	movf	___xxtofl@val+2,w
  8017     025C  00A3               	movwf	___xxtofl@val+3
  8018     025D  3001               	movlw	1
  8019     025E  120A  158A  203B  120A  118A  	fcall	___xxtofl
  8020     0263  1283               	bcf	3,5	;RP0=0, select bank0
  8021     0264  1303               	bcf	3,6	;RP1=0, select bank0
  8022     0265  0823               	movf	?___xxtofl+3,w
  8023     0266  1683               	bsf	3,5	;RP0=1, select bank1
  8024     0267  1303               	bcf	3,6	;RP1=0, select bank1
  8025     0268  00E9               	movwf	(main@adcValue1+3)^(0+128)
  8026     0269  1283               	bcf	3,5	;RP0=0, select bank0
  8027     026A  1303               	bcf	3,6	;RP1=0, select bank0
  8028     026B  0822               	movf	?___xxtofl+2,w
  8029     026C  1683               	bsf	3,5	;RP0=1, select bank1
  8030     026D  1303               	bcf	3,6	;RP1=0, select bank1
  8031     026E  00E8               	movwf	(main@adcValue1+2)^(0+128)
  8032     026F  1283               	bcf	3,5	;RP0=0, select bank0
  8033     0270  1303               	bcf	3,6	;RP1=0, select bank0
  8034     0271  0821               	movf	?___xxtofl+1,w
  8035     0272  1683               	bsf	3,5	;RP0=1, select bank1
  8036     0273  1303               	bcf	3,6	;RP1=0, select bank1
  8037     0274  00E7               	movwf	(main@adcValue1+1)^(0+128)
  8038     0275  1283               	bcf	3,5	;RP0=0, select bank0
  8039     0276  1303               	bcf	3,6	;RP1=0, select bank0
  8040     0277  0820               	movf	?___xxtofl,w
  8041     0278  1683               	bsf	3,5	;RP0=1, select bank1
  8042     0279  1303               	bcf	3,6	;RP1=0, select bank1
  8043     027A  00E6               	movwf	main@adcValue1^(0+128)
  8044     027B                     l4302:
  8045                           
  8046                           ;main.c: 334:         if (RE2==0 && RC0== 0 ){
  8047     027B  1283               	bcf	3,5	;RP0=0, select bank0
  8048     027C  1303               	bcf	3,6	;RP1=0, select bank0
  8049     027D  1909               	btfsc	9,2	;volatile
  8050     027E  2A80               	goto	u5761
  8051     027F  2A81               	goto	u5760
  8052     0280                     u5761:
  8053     0280  2AAF               	goto	l217
  8054     0281                     u5760:
  8055     0281                     l4304:
  8056     0281  1807               	btfsc	7,0	;volatile
  8057     0282  2A84               	goto	u5771
  8058     0283  2A85               	goto	u5770
  8059     0284                     u5771:
  8060     0284  2AAF               	goto	l217
  8061     0285                     u5770:
  8062     0285                     l4306:
  8063                           
  8064                           ;main.c: 335:         displayValue = (int)adcValue1 >> 1;
  8065     0285  1683               	bsf	3,5	;RP0=1, select bank1
  8066     0286  1303               	bcf	3,6	;RP1=0, select bank1
  8067     0287  0869               	movf	(main@adcValue1+3)^(0+128),w
  8068     0288  1283               	bcf	3,5	;RP0=0, select bank0
  8069     0289  1303               	bcf	3,6	;RP1=0, select bank0
  8070     028A  00A3               	movwf	___fltol@f1+3
  8071     028B  1683               	bsf	3,5	;RP0=1, select bank1
  8072     028C  1303               	bcf	3,6	;RP1=0, select bank1
  8073     028D  0868               	movf	(main@adcValue1+2)^(0+128),w
  8074     028E  1283               	bcf	3,5	;RP0=0, select bank0
  8075     028F  1303               	bcf	3,6	;RP1=0, select bank0
  8076     0290  00A2               	movwf	___fltol@f1+2
  8077     0291  1683               	bsf	3,5	;RP0=1, select bank1
  8078     0292  1303               	bcf	3,6	;RP1=0, select bank1
  8079     0293  0867               	movf	(main@adcValue1+1)^(0+128),w
  8080     0294  1283               	bcf	3,5	;RP0=0, select bank0
  8081     0295  1303               	bcf	3,6	;RP1=0, select bank0
  8082     0296  00A1               	movwf	___fltol@f1+1
  8083     0297  1683               	bsf	3,5	;RP0=1, select bank1
  8084     0298  1303               	bcf	3,6	;RP1=0, select bank1
  8085     0299  0866               	movf	main@adcValue1^(0+128),w
  8086     029A  1283               	bcf	3,5	;RP0=0, select bank0
  8087     029B  1303               	bcf	3,6	;RP1=0, select bank0
  8088     029C  00A0               	movwf	___fltol@f1
  8089     029D  160A  118A  24FF  120A  118A  	fcall	___fltol
  8090     02A2  1283               	bcf	3,5	;RP0=0, select bank0
  8091     02A3  1303               	bcf	3,6	;RP1=0, select bank0
  8092     02A4  0D21               	rlf	?___fltol+1,w
  8093     02A5  0C21               	rrf	?___fltol+1,w
  8094     02A6  1683               	bsf	3,5	;RP0=1, select bank3
  8095     02A7  1703               	bsf	3,6	;RP1=1, select bank3
  8096     02A8  009F               	movwf	(main@displayValue+1)^(0+384)
  8097     02A9  1283               	bcf	3,5	;RP0=0, select bank0
  8098     02AA  1303               	bcf	3,6	;RP1=0, select bank0
  8099     02AB  0C20               	rrf	?___fltol,w
  8100     02AC  1683               	bsf	3,5	;RP0=1, select bank3
  8101     02AD  1703               	bsf	3,6	;RP1=1, select bank3
  8102     02AE  009E               	movwf	main@displayValue^(0+384)
  8103     02AF                     l217:	
  8104                           ;main.c: 336:         }
  8105                           
  8106                           
  8107                           ;main.c: 337:         float gostermeliklcd = adcValue1 / 1024 * 1000;
  8108     02AF  3044               	movlw	68
  8109     02B0  1283               	bcf	3,5	;RP0=0, select bank0
  8110     02B1  1303               	bcf	3,6	;RP1=0, select bank0
  8111     02B2  00BD               	movwf	___flmul@b+3
  8112     02B3  307A               	movlw	122
  8113     02B4  00BC               	movwf	___flmul@b+2
  8114     02B5  3000               	movlw	0
  8115     02B6  00BB               	movwf	___flmul@b+1
  8116     02B7  3000               	movlw	0
  8117     02B8  00BA               	movwf	___flmul@b
  8118     02B9  3044               	movlw	68
  8119     02BA  00A3               	movwf	___fldiv@a+3
  8120     02BB  3080               	movlw	128
  8121     02BC  00A2               	movwf	___fldiv@a+2
  8122     02BD  3000               	movlw	0
  8123     02BE  00A1               	movwf	___fldiv@a+1
  8124     02BF  3000               	movlw	0
  8125     02C0  00A0               	movwf	___fldiv@a
  8126     02C1  1683               	bsf	3,5	;RP0=1, select bank1
  8127     02C2  1303               	bcf	3,6	;RP1=0, select bank1
  8128     02C3  0869               	movf	(main@adcValue1+3)^(0+128),w
  8129     02C4  1283               	bcf	3,5	;RP0=0, select bank0
  8130     02C5  1303               	bcf	3,6	;RP1=0, select bank0
  8131     02C6  00A7               	movwf	___fldiv@b+3
  8132     02C7  1683               	bsf	3,5	;RP0=1, select bank1
  8133     02C8  1303               	bcf	3,6	;RP1=0, select bank1
  8134     02C9  0868               	movf	(main@adcValue1+2)^(0+128),w
  8135     02CA  1283               	bcf	3,5	;RP0=0, select bank0
  8136     02CB  1303               	bcf	3,6	;RP1=0, select bank0
  8137     02CC  00A6               	movwf	___fldiv@b+2
  8138     02CD  1683               	bsf	3,5	;RP0=1, select bank1
  8139     02CE  1303               	bcf	3,6	;RP1=0, select bank1
  8140     02CF  0867               	movf	(main@adcValue1+1)^(0+128),w
  8141     02D0  1283               	bcf	3,5	;RP0=0, select bank0
  8142     02D1  1303               	bcf	3,6	;RP1=0, select bank0
  8143     02D2  00A5               	movwf	___fldiv@b+1
  8144     02D3  1683               	bsf	3,5	;RP0=1, select bank1
  8145     02D4  1303               	bcf	3,6	;RP1=0, select bank1
  8146     02D5  0866               	movf	main@adcValue1^(0+128),w
  8147     02D6  1283               	bcf	3,5	;RP0=0, select bank0
  8148     02D7  1303               	bcf	3,6	;RP1=0, select bank0
  8149     02D8  00A4               	movwf	___fldiv@b
  8150     02D9  120A  158A  20F5  120A  118A  	fcall	___fldiv
  8151     02DE  1283               	bcf	3,5	;RP0=0, select bank0
  8152     02DF  1303               	bcf	3,6	;RP1=0, select bank0
  8153     02E0  0823               	movf	?___fldiv+3,w
  8154     02E1  00C1               	movwf	___flmul@a+3
  8155     02E2  0822               	movf	?___fldiv+2,w
  8156     02E3  00C0               	movwf	___flmul@a+2
  8157     02E4  0821               	movf	?___fldiv+1,w
  8158     02E5  00BF               	movwf	___flmul@a+1
  8159     02E6  0820               	movf	?___fldiv,w
  8160     02E7  00BE               	movwf	___flmul@a
  8161     02E8  120A  158A  24BB  120A  118A  	fcall	___flmul
  8162     02ED  1283               	bcf	3,5	;RP0=0, select bank0
  8163     02EE  1303               	bcf	3,6	;RP1=0, select bank0
  8164     02EF  083D               	movf	?___flmul+3,w
  8165     02F0  1683               	bsf	3,5	;RP0=1, select bank1
  8166     02F1  1303               	bcf	3,6	;RP1=0, select bank1
  8167     02F2  00D0               	movwf	(main@gostermeliklcd+3)^(0+128)
  8168     02F3  1283               	bcf	3,5	;RP0=0, select bank0
  8169     02F4  1303               	bcf	3,6	;RP1=0, select bank0
  8170     02F5  083C               	movf	?___flmul+2,w
  8171     02F6  1683               	bsf	3,5	;RP0=1, select bank1
  8172     02F7  1303               	bcf	3,6	;RP1=0, select bank1
  8173     02F8  00CF               	movwf	(main@gostermeliklcd+2)^(0+128)
  8174     02F9  1283               	bcf	3,5	;RP0=0, select bank0
  8175     02FA  1303               	bcf	3,6	;RP1=0, select bank0
  8176     02FB  083B               	movf	?___flmul+1,w
  8177     02FC  1683               	bsf	3,5	;RP0=1, select bank1
  8178     02FD  1303               	bcf	3,6	;RP1=0, select bank1
  8179     02FE  00CE               	movwf	(main@gostermeliklcd+1)^(0+128)
  8180     02FF  1283               	bcf	3,5	;RP0=0, select bank0
  8181     0300  1303               	bcf	3,6	;RP1=0, select bank0
  8182     0301  083A               	movf	?___flmul,w
  8183     0302  1683               	bsf	3,5	;RP0=1, select bank1
  8184     0303  1303               	bcf	3,6	;RP1=0, select bank1
  8185     0304  00CD               	movwf	main@gostermeliklcd^(0+128)
  8186     0305                     l4308:
  8187                           
  8188                           ;main.c: 340:     ADCON0bits.CHS = 0b0010;
  8189     0305  1283               	bcf	3,5	;RP0=0, select bank0
  8190     0306  1303               	bcf	3,6	;RP1=0, select bank0
  8191     0307  081F               	movf	31,w	;volatile
  8192     0308  39C7               	andlw	-57
  8193     0309  3810               	iorlw	16
  8194     030A  009F               	movwf	31	;volatile
  8195     030B                     l4310:
  8196                           
  8197                           ;main.c: 341:     ADCON0bits.GO = 1;
  8198     030B  151F               	bsf	31,2	;volatile
  8199     030C                     l218:	
  8200                           ;main.c: 342:     while (ADCON0bits.GO);
  8201                           
  8202     030C  191F               	btfsc	31,2	;volatile
  8203     030D  2B0F               	goto	u5781
  8204     030E  2B10               	goto	u5780
  8205     030F                     u5781:
  8206     030F  2B0C               	goto	l218
  8207     0310                     u5780:
  8208     0310                     l4312:
  8209                           
  8210                           ;main.c: 343:     adcValue3 = (ADRESH << 8) | ADRESL;
  8211     0310  081E               	movf	30,w	;volatile
  8212     0311  1683               	bsf	3,5	;RP0=1, select bank1
  8213     0312  1303               	bcf	3,6	;RP1=0, select bank1
  8214     0313  00D9               	movwf	(main@adcValue3+1)^(0+128)
  8215     0314  081E               	movf	30,w	;volatile
  8216     0315  00D8               	movwf	main@adcValue3^(0+128)
  8217     0316                     l4314:
  8218                           
  8219                           ;main.c: 344:     unsigned int rpmValue = adcValue3 >> 1;
  8220     0316  0859               	movf	(main@adcValue3+1)^(0+128),w
  8221     0317  1283               	bcf	3,5	;RP0=0, select bank0
  8222     0318  1303               	bcf	3,6	;RP1=0, select bank0
  8223     0319  00D5               	movwf	??_main+1
  8224     031A  1683               	bsf	3,5	;RP0=1, select bank1
  8225     031B  1303               	bcf	3,6	;RP1=0, select bank1
  8226     031C  0858               	movf	main@adcValue3^(0+128),w
  8227     031D  1283               	bcf	3,5	;RP0=0, select bank0
  8228     031E  1303               	bcf	3,6	;RP1=0, select bank0
  8229     031F  00D4               	movwf	??_main
  8230     0320  1003               	clrc
  8231     0321  0CD5               	rrf	??_main+1,f
  8232     0322  0CD4               	rrf	??_main,f
  8233     0323  0854               	movf	??_main,w
  8234     0324  00EC               	movwf	main@rpmValue
  8235     0325  0855               	movf	??_main+1,w
  8236     0326  00ED               	movwf	main@rpmValue+1
  8237     0327                     l4316:
  8238                           
  8239                           ;main.c: 347:         Lcd_Set_Cursor(2, 1);
  8240     0327  01A4               	clrf	Lcd_Set_Cursor@b
  8241     0328  0AA4               	incf	Lcd_Set_Cursor@b,f
  8242     0329  3002               	movlw	2
  8243     032A  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  8244     032F                     l4318:
  8245                           
  8246                           ;main.c: 348:         Lcd_Write_String("FeedRate:");
  8247     032F  301F               	movlw	low (STR_20| (0+32768))
  8248     0330  1283               	bcf	3,5	;RP0=0, select bank0
  8249     0331  1303               	bcf	3,6	;RP1=0, select bank0
  8250     0332  00A5               	movwf	Lcd_Write_String@a
  8251     0333  3099               	movlw	high (STR_20| (0+32768))
  8252     0334  00A6               	movwf	Lcd_Write_String@a+1
  8253     0335  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  8254     033A                     l4320:
  8255                           
  8256                           ;main.c: 349:         char adcString1[4];;main.c: 350:         sprintf(adcString1, "%003
      +                          u", (int)gostermeliklcd);
  8257     033A  305F               	movlw	low (STR_21| (0+32768))
  8258     033B  1283               	bcf	3,5	;RP0=0, select bank0
  8259     033C  1303               	bcf	3,6	;RP1=0, select bank0
  8260     033D  00B2               	movwf	sprintf@f
  8261     033E  3099               	movlw	high (STR_21| (0+32768))
  8262     033F  00B3               	movwf	sprintf@f+1
  8263     0340  1683               	bsf	3,5	;RP0=1, select bank1
  8264     0341  1303               	bcf	3,6	;RP1=0, select bank1
  8265     0342  0850               	movf	(main@gostermeliklcd+3)^(0+128),w
  8266     0343  1283               	bcf	3,5	;RP0=0, select bank0
  8267     0344  1303               	bcf	3,6	;RP1=0, select bank0
  8268     0345  00A3               	movwf	___fltol@f1+3
  8269     0346  1683               	bsf	3,5	;RP0=1, select bank1
  8270     0347  1303               	bcf	3,6	;RP1=0, select bank1
  8271     0348  084F               	movf	(main@gostermeliklcd+2)^(0+128),w
  8272     0349  1283               	bcf	3,5	;RP0=0, select bank0
  8273     034A  1303               	bcf	3,6	;RP1=0, select bank0
  8274     034B  00A2               	movwf	___fltol@f1+2
  8275     034C  1683               	bsf	3,5	;RP0=1, select bank1
  8276     034D  1303               	bcf	3,6	;RP1=0, select bank1
  8277     034E  084E               	movf	(main@gostermeliklcd+1)^(0+128),w
  8278     034F  1283               	bcf	3,5	;RP0=0, select bank0
  8279     0350  1303               	bcf	3,6	;RP1=0, select bank0
  8280     0351  00A1               	movwf	___fltol@f1+1
  8281     0352  1683               	bsf	3,5	;RP0=1, select bank1
  8282     0353  1303               	bcf	3,6	;RP1=0, select bank1
  8283     0354  084D               	movf	main@gostermeliklcd^(0+128),w
  8284     0355  1283               	bcf	3,5	;RP0=0, select bank0
  8285     0356  1303               	bcf	3,6	;RP1=0, select bank0
  8286     0357  00A0               	movwf	___fltol@f1
  8287     0358  160A  118A  24FF  120A  118A  	fcall	___fltol
  8288     035D  1283               	bcf	3,5	;RP0=0, select bank0
  8289     035E  1303               	bcf	3,6	;RP1=0, select bank0
  8290     035F  0821               	movf	?___fltol+1,w
  8291     0360  00B5               	movwf	?_sprintf+3
  8292     0361  0820               	movf	?___fltol,w
  8293     0362  00B4               	movwf	?_sprintf+2
  8294     0363  30E0               	movlw	(low (main@adcString1| 0))& (0+255)
  8295     0364  120A  158A  22C4  120A  118A  	fcall	_sprintf
  8296     0369                     l4322:
  8297                           
  8298                           ;main.c: 351:         Lcd_Set_Cursor(2, 10);
  8299     0369  300A               	movlw	10
  8300     036A  1283               	bcf	3,5	;RP0=0, select bank0
  8301     036B  1303               	bcf	3,6	;RP1=0, select bank0
  8302     036C  00A4               	movwf	Lcd_Set_Cursor@b
  8303     036D  3002               	movlw	2
  8304     036E  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  8305     0373                     l4324:
  8306                           
  8307                           ;main.c: 352:         Lcd_Write_String(adcString1);
  8308     0373  30E0               	movlw	(low (main@adcString1| 0))& (0+255)
  8309     0374  1283               	bcf	3,5	;RP0=0, select bank0
  8310     0375  1303               	bcf	3,6	;RP1=0, select bank0
  8311     0376  00A5               	movwf	Lcd_Write_String@a
  8312     0377  3000               	movlw	0
  8313     0378  00A6               	movwf	Lcd_Write_String@a+1
  8314     0379  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  8315     037E                     l4326:
  8316                           
  8317                           ;main.c: 355:         Lcd_Set_Cursor(1, 1);
  8318     037E  1283               	bcf	3,5	;RP0=0, select bank0
  8319     037F  1303               	bcf	3,6	;RP1=0, select bank0
  8320     0380  01A4               	clrf	Lcd_Set_Cursor@b
  8321     0381  0AA4               	incf	Lcd_Set_Cursor@b,f
  8322     0382  3001               	movlw	1
  8323     0383  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  8324     0388                     l4328:
  8325                           
  8326                           ;main.c: 356:         Lcd_Write_String("RPM:");
  8327     0388  306A               	movlw	low (STR_22| (0+32768))
  8328     0389  1283               	bcf	3,5	;RP0=0, select bank0
  8329     038A  1303               	bcf	3,6	;RP1=0, select bank0
  8330     038B  00A5               	movwf	Lcd_Write_String@a
  8331     038C  3099               	movlw	high (STR_22| (0+32768))
  8332     038D  00A6               	movwf	Lcd_Write_String@a+1
  8333     038E  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  8334     0393                     l4330:
  8335                           
  8336                           ;main.c: 357:         char rpmString[5];;main.c: 358: sprintf(rpmString, "%u%u%u.%u", bi
      +                          nler,yuzler,onlar,birler);
  8337     0393  303D               	movlw	low (STR_23| (0+32768))
  8338     0394  1283               	bcf	3,5	;RP0=0, select bank0
  8339     0395  1303               	bcf	3,6	;RP1=0, select bank0
  8340     0396  00B2               	movwf	sprintf@f
  8341     0397  3099               	movlw	high (STR_23| (0+32768))
  8342     0398  00B3               	movwf	sprintf@f+1
  8343     0399  1683               	bsf	3,5	;RP0=1, select bank3
  8344     039A  1703               	bsf	3,6	;RP1=1, select bank3
  8345     039B  0819               	movf	(main@binler+1)^(0+384),w
  8346     039C  1283               	bcf	3,5	;RP0=0, select bank0
  8347     039D  1303               	bcf	3,6	;RP1=0, select bank0
  8348     039E  00B5               	movwf	?_sprintf+3
  8349     039F  1683               	bsf	3,5	;RP0=1, select bank3
  8350     03A0  1703               	bsf	3,6	;RP1=1, select bank3
  8351     03A1  0818               	movf	main@binler^(0+384),w
  8352     03A2  1283               	bcf	3,5	;RP0=0, select bank0
  8353     03A3  1303               	bcf	3,6	;RP1=0, select bank0
  8354     03A4  00B4               	movwf	?_sprintf+2
  8355     03A5  1683               	bsf	3,5	;RP0=1, select bank1
  8356     03A6  1303               	bcf	3,6	;RP1=0, select bank1
  8357     03A7  086B               	movf	(main@yuzler+1)^(0+128),w
  8358     03A8  1283               	bcf	3,5	;RP0=0, select bank0
  8359     03A9  1303               	bcf	3,6	;RP1=0, select bank0
  8360     03AA  00B7               	movwf	?_sprintf+5
  8361     03AB  1683               	bsf	3,5	;RP0=1, select bank1
  8362     03AC  1303               	bcf	3,6	;RP1=0, select bank1
  8363     03AD  086A               	movf	main@yuzler^(0+128),w
  8364     03AE  1283               	bcf	3,5	;RP0=0, select bank0
  8365     03AF  1303               	bcf	3,6	;RP1=0, select bank0
  8366     03B0  00B6               	movwf	?_sprintf+4
  8367     03B1  1683               	bsf	3,5	;RP0=1, select bank1
  8368     03B2  1303               	bcf	3,6	;RP1=0, select bank1
  8369     03B3  085B               	movf	(main@onlar+1)^(0+128),w
  8370     03B4  1283               	bcf	3,5	;RP0=0, select bank0
  8371     03B5  1303               	bcf	3,6	;RP1=0, select bank0
  8372     03B6  00B9               	movwf	?_sprintf+7
  8373     03B7  1683               	bsf	3,5	;RP0=1, select bank1
  8374     03B8  1303               	bcf	3,6	;RP1=0, select bank1
  8375     03B9  085A               	movf	main@onlar^(0+128),w
  8376     03BA  1283               	bcf	3,5	;RP0=0, select bank0
  8377     03BB  1303               	bcf	3,6	;RP1=0, select bank0
  8378     03BC  00B8               	movwf	?_sprintf+6
  8379     03BD  1683               	bsf	3,5	;RP0=1, select bank1
  8380     03BE  1303               	bcf	3,6	;RP1=0, select bank1
  8381     03BF  085D               	movf	(main@birler+1)^(0+128),w
  8382     03C0  1283               	bcf	3,5	;RP0=0, select bank0
  8383     03C1  1303               	bcf	3,6	;RP1=0, select bank0
  8384     03C2  00BB               	movwf	?_sprintf+9
  8385     03C3  1683               	bsf	3,5	;RP0=1, select bank1
  8386     03C4  1303               	bcf	3,6	;RP1=0, select bank1
  8387     03C5  085C               	movf	main@birler^(0+128),w
  8388     03C6  1283               	bcf	3,5	;RP0=0, select bank0
  8389     03C7  1303               	bcf	3,6	;RP1=0, select bank0
  8390     03C8  00BA               	movwf	?_sprintf+8
  8391     03C9  30D1               	movlw	(low (main@rpmString| 0))& (0+255)
  8392     03CA  120A  158A  22C4  120A  118A  	fcall	_sprintf
  8393     03CF                     l4332:
  8394                           
  8395                           ;main.c: 359: Lcd_Set_Cursor(1, 5);
  8396     03CF  3005               	movlw	5
  8397     03D0  1283               	bcf	3,5	;RP0=0, select bank0
  8398     03D1  1303               	bcf	3,6	;RP1=0, select bank0
  8399     03D2  00A4               	movwf	Lcd_Set_Cursor@b
  8400     03D3  3001               	movlw	1
  8401     03D4  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  8402     03D9                     l4334:
  8403                           
  8404                           ;main.c: 360: Lcd_Write_String(rpmString);
  8405     03D9  30D1               	movlw	(low (main@rpmString| 0))& (0+255)
  8406     03DA  1283               	bcf	3,5	;RP0=0, select bank0
  8407     03DB  1303               	bcf	3,6	;RP1=0, select bank0
  8408     03DC  00A5               	movwf	Lcd_Write_String@a
  8409     03DD  3000               	movlw	0
  8410     03DE  00A6               	movwf	Lcd_Write_String@a+1
  8411     03DF  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  8412     03E4                     l4336:
  8413                           
  8414                           ;main.c: 367:  if (RC1 == 1 && (RE0 == 1 || RE2 == 1)) {
  8415     03E4  1283               	bcf	3,5	;RP0=0, select bank0
  8416     03E5  1303               	bcf	3,6	;RP1=0, select bank0
  8417     03E6  1C87               	btfss	7,1	;volatile
  8418     03E7  2BE9               	goto	u5791
  8419     03E8  2BEA               	goto	u5790
  8420     03E9                     u5791:
  8421     03E9  2C11               	goto	l221
  8422     03EA                     u5790:
  8423     03EA                     l4338:
  8424     03EA  1809               	btfsc	9,0	;volatile
  8425     03EB  2BED               	goto	u5801
  8426     03EC  2BEE               	goto	u5800
  8427     03ED                     u5801:
  8428     03ED  2BF2               	goto	l4342
  8429     03EE                     u5800:
  8430     03EE                     l4340:
  8431     03EE  1D09               	btfss	9,2	;volatile
  8432     03EF  2BF1               	goto	u5811
  8433     03F0  2BF2               	goto	u5810
  8434     03F1                     u5811:
  8435     03F1  2C11               	goto	l221
  8436     03F2                     u5810:
  8437     03F2                     l4342:
  8438                           
  8439                           ;main.c: 368:             Lcd_Set_Cursor(2, 13);
  8440     03F2  300D               	movlw	13
  8441     03F3  00A4               	movwf	Lcd_Set_Cursor@b
  8442     03F4  3002               	movlw	2
  8443     03F5  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  8444     03FA                     l4344:
  8445                           
  8446                           ;main.c: 369:             Lcd_Write_String(" FWD LMT");
  8447     03FA  3047               	movlw	low (STR_24| (0+32768))
  8448     03FB  1283               	bcf	3,5	;RP0=0, select bank0
  8449     03FC  1303               	bcf	3,6	;RP1=0, select bank0
  8450     03FD  00A5               	movwf	Lcd_Write_String@a
  8451     03FE  3099               	movlw	high (STR_24| (0+32768))
  8452     03FF  00A6               	movwf	Lcd_Write_String@a+1
  8453     0400  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  8454     0405                     l4346:
  8455                           
  8456                           ;main.c: 370:             UART_Write_Text("s0\r\n");
  8457     0405  3065               	movlw	low (STR_25| (0+32768))
  8458     0406  1283               	bcf	3,5	;RP0=0, select bank0
  8459     0407  1303               	bcf	3,6	;RP1=0, select bank0
  8460     0408  00A1               	movwf	UART_Write_Text@text
  8461     0409  3099               	movlw	high (STR_25| (0+32768))
  8462     040A  00A2               	movwf	UART_Write_Text@text+1
  8463     040B  160A  118A  237C  120A  118A  	fcall	_UART_Write_Text
  8464                           
  8465                           ;main.c: 372:         } else if ((RE2 == 1 && RE0 == 1) || (RE2 == 1 && RE1 == 0)) {
  8466     0410  2DF0               	goto	l4424
  8467     0411                     l221:
  8468     0411  1D09               	btfss	9,2	;volatile
  8469     0412  2C14               	goto	u5821
  8470     0413  2C15               	goto	u5820
  8471     0414                     u5821:
  8472     0414  2C19               	goto	l229
  8473     0415                     u5820:
  8474     0415                     l4348:
  8475     0415  1809               	btfsc	9,0	;volatile
  8476     0416  2C18               	goto	u5831
  8477     0417  2C19               	goto	u5830
  8478     0418                     u5831:
  8479     0418  2C21               	goto	l4352
  8480     0419                     u5830:
  8481     0419                     l229:
  8482     0419  1D09               	btfss	9,2	;volatile
  8483     041A  2C1C               	goto	u5841
  8484     041B  2C1D               	goto	u5840
  8485     041C                     u5841:
  8486     041C  2C77               	goto	l225
  8487     041D                     u5840:
  8488     041D                     l4350:
  8489     041D  1889               	btfsc	9,1	;volatile
  8490     041E  2C20               	goto	u5851
  8491     041F  2C21               	goto	u5850
  8492     0420                     u5851:
  8493     0420  2C77               	goto	l225
  8494     0421                     u5850:
  8495     0421                     l4352:
  8496                           
  8497                           ;main.c: 373:             Lcd_Set_Cursor(2, 13);
  8498     0421  300D               	movlw	13
  8499     0422  00A4               	movwf	Lcd_Set_Cursor@b
  8500     0423  3002               	movlw	2
  8501     0424  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  8502     0429                     l4354:
  8503                           
  8504                           ;main.c: 374:             Lcd_Write_String(" FWD 1.6K");
  8505     0429  3029               	movlw	low (STR_26| (0+32768))
  8506     042A  1283               	bcf	3,5	;RP0=0, select bank0
  8507     042B  1303               	bcf	3,6	;RP1=0, select bank0
  8508     042C  00A5               	movwf	Lcd_Write_String@a
  8509     042D  3099               	movlw	high (STR_26| (0+32768))
  8510     042E  00A6               	movwf	Lcd_Write_String@a+1
  8511     042F  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  8512     0434                     l4356:
  8513                           
  8514                           ;main.c: 375:             if (displayValue < 800) {
  8515     0434  3003               	movlw	3
  8516     0435  1683               	bsf	3,5	;RP0=1, select bank3
  8517     0436  1703               	bsf	3,6	;RP1=1, select bank3
  8518     0437  021F               	subwf	(main@displayValue+1)^(0+384),w
  8519     0438  3020               	movlw	32
  8520     0439  1903               	skipnz
  8521     043A  021E               	subwf	main@displayValue^(0+384),w
  8522     043B  1803               	skipnc
  8523     043C  2C3E               	goto	u5861
  8524     043D  2C3F               	goto	u5860
  8525     043E                     u5861:
  8526     043E  2DF0               	goto	l4424
  8527     043F                     u5860:
  8528     043F                     l4358:
  8529                           
  8530                           ;main.c: 376:                 char uartMessage[8];;main.c: 377:                 displayV
      +                          alue += 80;
  8531     043F  3050               	movlw	80
  8532     0440  079E               	addwf	main@displayValue^(0+384),f
  8533     0441  1803               	skipnc
  8534     0442  0A9F               	incf	(main@displayValue+1)^(0+384),f
  8535     0443  3000               	movlw	0
  8536     0444  079F               	addwf	(main@displayValue+1)^(0+384),f
  8537                           
  8538                           ;main.c: 379:                 if (displayValue > 800) {
  8539     0445  3003               	movlw	3
  8540     0446  021F               	subwf	(main@displayValue+1)^(0+384),w
  8541     0447  3021               	movlw	33
  8542     0448  1903               	skipnz
  8543     0449  021E               	subwf	main@displayValue^(0+384),w
  8544     044A  1C03               	skipc
  8545     044B  2C4D               	goto	u5871
  8546     044C  2C4E               	goto	u5870
  8547     044D                     u5871:
  8548     044D  2C52               	goto	l4362
  8549     044E                     u5870:
  8550     044E                     l4360:
  8551                           
  8552                           ;main.c: 380:                     displayValue = 800;
  8553     044E  3020               	movlw	32
  8554     044F  009E               	movwf	main@displayValue^(0+384)
  8555     0450  3003               	movlw	3
  8556     0451  009F               	movwf	(main@displayValue^(0+384)+1)
  8557     0452                     l4362:
  8558                           
  8559                           ;main.c: 382:                 sprintf(uartMessage, "s%d\r\n", displayValue);
  8560     0452  3059               	movlw	low (STR_27| (0+32768))
  8561     0453  1283               	bcf	3,5	;RP0=0, select bank0
  8562     0454  1303               	bcf	3,6	;RP1=0, select bank0
  8563     0455  00B2               	movwf	sprintf@f
  8564     0456  3099               	movlw	high (STR_27| (0+32768))
  8565     0457  00B3               	movwf	sprintf@f+1
  8566     0458  1683               	bsf	3,5	;RP0=1, select bank3
  8567     0459  1703               	bsf	3,6	;RP1=1, select bank3
  8568     045A  081F               	movf	(main@displayValue+1)^(0+384),w
  8569     045B  1283               	bcf	3,5	;RP0=0, select bank0
  8570     045C  1303               	bcf	3,6	;RP1=0, select bank0
  8571     045D  00B5               	movwf	?_sprintf+3
  8572     045E  1683               	bsf	3,5	;RP0=1, select bank3
  8573     045F  1703               	bsf	3,6	;RP1=1, select bank3
  8574     0460  081E               	movf	main@displayValue^(0+384),w
  8575     0461  1283               	bcf	3,5	;RP0=0, select bank0
  8576     0462  1303               	bcf	3,6	;RP1=0, select bank0
  8577     0463  00B4               	movwf	?_sprintf+2
  8578     0464  30BD               	movlw	(low (main@uartMessage| 0))& (0+255)
  8579     0465  120A  158A  22C4  120A  118A  	fcall	_sprintf
  8580     046A                     l4364:
  8581                           
  8582                           ;main.c: 383:                 UART_Write_Text(uartMessage);
  8583     046A  30BD               	movlw	(low (main@uartMessage| 0))& (0+255)
  8584     046B  1283               	bcf	3,5	;RP0=0, select bank0
  8585     046C  1303               	bcf	3,6	;RP1=0, select bank0
  8586     046D  00A1               	movwf	UART_Write_Text@text
  8587     046E  3000               	movlw	0
  8588     046F  00A2               	movwf	UART_Write_Text@text+1
  8589     0470  160A  118A  237C  120A  118A  	fcall	_UART_Write_Text
  8590     0475  2DF0               	goto	l4424
  8591     0476                     l230:	
  8592                           ;main.c: 384:             }
  8593                           
  8594                           
  8595                           ;main.c: 386:         } else if (RE0 == 1) {
  8596     0476  2DF0               	goto	l4424
  8597     0477                     l225:
  8598     0477  1C09               	btfss	9,0	;volatile
  8599     0478  2C7A               	goto	u5881
  8600     0479  2C7B               	goto	u5880
  8601     047A                     u5881:
  8602     047A  2CB2               	goto	l233
  8603     047B                     u5880:
  8604     047B                     l4366:
  8605                           
  8606                           ;main.c: 387:             Lcd_Set_Cursor(2, 13);
  8607     047B  300D               	movlw	13
  8608     047C  00A4               	movwf	Lcd_Set_Cursor@b
  8609     047D  3002               	movlw	2
  8610     047E  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  8611     0483                     l4368:
  8612                           
  8613                           ;main.c: 388:             Lcd_Write_String(" FWD          ");
  8614     0483  30CD               	movlw	low (STR_28| (0+32768))
  8615     0484  1283               	bcf	3,5	;RP0=0, select bank0
  8616     0485  1303               	bcf	3,6	;RP1=0, select bank0
  8617     0486  00A5               	movwf	Lcd_Write_String@a
  8618     0487  3098               	movlw	high (STR_28| (0+32768))
  8619     0488  00A6               	movwf	Lcd_Write_String@a+1
  8620     0489  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  8621     048E                     l4370:
  8622                           
  8623                           ;main.c: 389:             char combinedText[20];;main.c: 390:             sprintf(combin
      +                          edText, "s%d\r\n", displayValue);
  8624     048E  3059               	movlw	low (STR_27| (0+32768))
  8625     048F  1283               	bcf	3,5	;RP0=0, select bank0
  8626     0490  1303               	bcf	3,6	;RP1=0, select bank0
  8627     0491  00B2               	movwf	sprintf@f
  8628     0492  3099               	movlw	high (STR_27| (0+32768))
  8629     0493  00B3               	movwf	sprintf@f+1
  8630     0494  1683               	bsf	3,5	;RP0=1, select bank3
  8631     0495  1703               	bsf	3,6	;RP1=1, select bank3
  8632     0496  081F               	movf	(main@displayValue+1)^(0+384),w
  8633     0497  1283               	bcf	3,5	;RP0=0, select bank0
  8634     0498  1303               	bcf	3,6	;RP1=0, select bank0
  8635     0499  00B5               	movwf	?_sprintf+3
  8636     049A  1683               	bsf	3,5	;RP0=1, select bank3
  8637     049B  1703               	bsf	3,6	;RP1=1, select bank3
  8638     049C  081E               	movf	main@displayValue^(0+384),w
  8639     049D  1283               	bcf	3,5	;RP0=0, select bank0
  8640     049E  1303               	bcf	3,6	;RP1=0, select bank0
  8641     049F  00B4               	movwf	?_sprintf+2
  8642     04A0  3058               	movlw	(low (main@combinedText| 0))& (0+255)
  8643     04A1  120A  158A  22C4  120A  118A  	fcall	_sprintf
  8644     04A6                     l4372:
  8645                           
  8646                           ;main.c: 391:             UART_Write_Text(combinedText);
  8647     04A6  3058               	movlw	(low (main@combinedText| 0))& (0+255)
  8648     04A7  1283               	bcf	3,5	;RP0=0, select bank0
  8649     04A8  1303               	bcf	3,6	;RP1=0, select bank0
  8650     04A9  00A1               	movwf	UART_Write_Text@text
  8651     04AA  3000               	movlw	0
  8652     04AB  00A2               	movwf	UART_Write_Text@text+1
  8653     04AC  160A  118A  237C  120A  118A  	fcall	_UART_Write_Text
  8654                           
  8655                           ;main.c: 394:         } else if (RC2 == 1 && (RE1 == 1 || RC0 == 1)) {
  8656     04B1  2DF0               	goto	l4424
  8657     04B2                     l233:
  8658     04B2  1D07               	btfss	7,2	;volatile
  8659     04B3  2CB5               	goto	u5891
  8660     04B4  2CB6               	goto	u5890
  8661     04B5                     u5891:
  8662     04B5  2CDD               	goto	l235
  8663     04B6                     u5890:
  8664     04B6                     l4374:
  8665     04B6  1889               	btfsc	9,1	;volatile
  8666     04B7  2CB9               	goto	u5901
  8667     04B8  2CBA               	goto	u5900
  8668     04B9                     u5901:
  8669     04B9  2CBE               	goto	l4378
  8670     04BA                     u5900:
  8671     04BA                     l4376:
  8672     04BA  1C07               	btfss	7,0	;volatile
  8673     04BB  2CBD               	goto	u5911
  8674     04BC  2CBE               	goto	u5910
  8675     04BD                     u5911:
  8676     04BD  2CDD               	goto	l235
  8677     04BE                     u5910:
  8678     04BE                     l4378:
  8679                           
  8680                           ;main.c: 395:             Lcd_Set_Cursor(2, 13);
  8681     04BE  300D               	movlw	13
  8682     04BF  00A4               	movwf	Lcd_Set_Cursor@b
  8683     04C0  3002               	movlw	2
  8684     04C1  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  8685     04C6                     l4380:
  8686                           
  8687                           ;main.c: 396:             Lcd_Write_String(" REW LMT");
  8688     04C6  3050               	movlw	low (STR_30| (0+32768))
  8689     04C7  1283               	bcf	3,5	;RP0=0, select bank0
  8690     04C8  1303               	bcf	3,6	;RP1=0, select bank0
  8691     04C9  00A5               	movwf	Lcd_Write_String@a
  8692     04CA  3099               	movlw	high (STR_30| (0+32768))
  8693     04CB  00A6               	movwf	Lcd_Write_String@a+1
  8694     04CC  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  8695     04D1                     l4382:
  8696                           
  8697                           ;main.c: 397:             UART_Write_Text("s0\r\n");
  8698     04D1  3065               	movlw	low (STR_25| (0+32768))
  8699     04D2  1283               	bcf	3,5	;RP0=0, select bank0
  8700     04D3  1303               	bcf	3,6	;RP1=0, select bank0
  8701     04D4  00A1               	movwf	UART_Write_Text@text
  8702     04D5  3099               	movlw	high (STR_25| (0+32768))
  8703     04D6  00A2               	movwf	UART_Write_Text@text+1
  8704     04D7  160A  118A  237C  120A  118A  	fcall	_UART_Write_Text
  8705                           
  8706                           ;main.c: 399:         } else if ((RC0 == 1 && RE1 == 1) || (RC0 == 1 && RE0 == 0)) {
  8707     04DC  2DF0               	goto	l4424
  8708     04DD                     l235:
  8709     04DD  1C07               	btfss	7,0	;volatile
  8710     04DE  2CE0               	goto	u5921
  8711     04DF  2CE1               	goto	u5920
  8712     04E0                     u5921:
  8713     04E0  2CE5               	goto	l243
  8714     04E1                     u5920:
  8715     04E1                     l4384:
  8716     04E1  1889               	btfsc	9,1	;volatile
  8717     04E2  2CE4               	goto	u5931
  8718     04E3  2CE5               	goto	u5930
  8719     04E4                     u5931:
  8720     04E4  2CED               	goto	l4388
  8721     04E5                     u5930:
  8722     04E5                     l243:
  8723     04E5  1C07               	btfss	7,0	;volatile
  8724     04E6  2CE8               	goto	u5941
  8725     04E7  2CE9               	goto	u5940
  8726     04E8                     u5941:
  8727     04E8  2D7E               	goto	l239
  8728     04E9                     u5940:
  8729     04E9                     l4386:
  8730     04E9  1809               	btfsc	9,0	;volatile
  8731     04EA  2CEC               	goto	u5951
  8732     04EB  2CED               	goto	u5950
  8733     04EC                     u5951:
  8734     04EC  2D7E               	goto	l239
  8735     04ED                     u5950:
  8736     04ED                     l4388:
  8737                           
  8738                           ;main.c: 400:             Lcd_Set_Cursor(2, 13);
  8739     04ED  300D               	movlw	13
  8740     04EE  00A4               	movwf	Lcd_Set_Cursor@b
  8741     04EF  3002               	movlw	2
  8742     04F0  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  8743     04F5                     l4390:
  8744                           
  8745                           ;main.c: 401:             Lcd_Write_String(" REW 1.6K");
  8746     04F5  3033               	movlw	low (STR_32| (0+32768))
  8747     04F6  1283               	bcf	3,5	;RP0=0, select bank0
  8748     04F7  1303               	bcf	3,6	;RP1=0, select bank0
  8749     04F8  00A5               	movwf	Lcd_Write_String@a
  8750     04F9  3099               	movlw	high (STR_32| (0+32768))
  8751     04FA  00A6               	movwf	Lcd_Write_String@a+1
  8752     04FB  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  8753     0500                     l4392:
  8754                           
  8755                           ;main.c: 402:             int negativeFeedValue = -displayValue;
  8756     0500  1683               	bsf	3,5	;RP0=1, select bank3
  8757     0501  1703               	bsf	3,6	;RP1=1, select bank3
  8758     0502  091E               	comf	main@displayValue^(0+384),w
  8759     0503  1283               	bcf	3,5	;RP0=0, select bank0
  8760     0504  1303               	bcf	3,6	;RP1=0, select bank0
  8761     0505  00D4               	movwf	??_main
  8762     0506  1683               	bsf	3,5	;RP0=1, select bank3
  8763     0507  1703               	bsf	3,6	;RP1=1, select bank3
  8764     0508  091F               	comf	(main@displayValue+1)^(0+384),w
  8765     0509  1283               	bcf	3,5	;RP0=0, select bank0
  8766     050A  1303               	bcf	3,6	;RP1=0, select bank0
  8767     050B  00D5               	movwf	??_main+1
  8768     050C  0AD4               	incf	??_main,f
  8769     050D  1903               	skipnz
  8770     050E  0AD5               	incf	??_main+1,f
  8771     050F  0854               	movf	??_main,w
  8772     0510  1683               	bsf	3,5	;RP0=1, select bank3
  8773     0511  1703               	bsf	3,6	;RP1=1, select bank3
  8774     0512  009C               	movwf	main@negativeFeedValue^(0+384)
  8775     0513  1283               	bcf	3,5	;RP0=0, select bank0
  8776     0514  1303               	bcf	3,6	;RP1=0, select bank0
  8777     0515  0855               	movf	??_main+1,w
  8778     0516  1683               	bsf	3,5	;RP0=1, select bank3
  8779     0517  1703               	bsf	3,6	;RP1=1, select bank3
  8780     0518  009D               	movwf	(main@negativeFeedValue+1)^(0+384)
  8781     0519                     l4394:
  8782                           
  8783                           ;main.c: 403:             if (negativeFeedValue > -800) {
  8784     0519  081D               	movf	(main@negativeFeedValue+1)^(0+384),w
  8785     051A  3A80               	xorlw	128
  8786     051B  00FF               	movwf	btemp+1
  8787     051C  307C               	movlw	124
  8788     051D  027F               	subwf	btemp+1,w
  8789     051E  1D03               	skipz
  8790     051F  2D22               	goto	u5965
  8791     0520  30E1               	movlw	225
  8792     0521  021C               	subwf	main@negativeFeedValue^(0+384),w
  8793     0522                     u5965:
  8794     0522  1C03               	skipc
  8795     0523  2D25               	goto	u5961
  8796     0524  2D26               	goto	u5960
  8797     0525                     u5961:
  8798     0525  2C76               	goto	l230
  8799     0526                     u5960:
  8800     0526                     l4396:
  8801                           
  8802                           ;main.c: 404:                 char uartMessage[8];;main.c: 405:                 negative
      +                          FeedValue -= 80;
  8803     0526  30B0               	movlw	176
  8804     0527  1683               	bsf	3,5	;RP0=1, select bank3
  8805     0528  1703               	bsf	3,6	;RP1=1, select bank3
  8806     0529  079C               	addwf	main@negativeFeedValue^(0+384),f
  8807     052A  1803               	skipnc
  8808     052B  0A9D               	incf	(main@negativeFeedValue+1)^(0+384),f
  8809     052C  30FF               	movlw	255
  8810     052D  079D               	addwf	(main@negativeFeedValue+1)^(0+384),f
  8811     052E                     l4398:
  8812                           
  8813                           ;main.c: 406:                 if (negativeFeedValue < -800) {
  8814     052E  081D               	movf	(main@negativeFeedValue+1)^(0+384),w
  8815     052F  3A80               	xorlw	128
  8816     0530  00FF               	movwf	btemp+1
  8817     0531  307C               	movlw	124
  8818     0532  027F               	subwf	btemp+1,w
  8819     0533  1D03               	skipz
  8820     0534  2D37               	goto	u5975
  8821     0535  30E0               	movlw	224
  8822     0536  021C               	subwf	main@negativeFeedValue^(0+384),w
  8823     0537                     u5975:
  8824     0537  1803               	skipnc
  8825     0538  2D3A               	goto	u5971
  8826     0539  2D3B               	goto	u5970
  8827     053A                     u5971:
  8828     053A  2D41               	goto	l4402
  8829     053B                     u5970:
  8830     053B                     l4400:
  8831                           
  8832                           ;main.c: 407:                     negativeFeedValue = -800;
  8833     053B  30E0               	movlw	224
  8834     053C  1683               	bsf	3,5	;RP0=1, select bank3
  8835     053D  1703               	bsf	3,6	;RP1=1, select bank3
  8836     053E  009C               	movwf	main@negativeFeedValue^(0+384)
  8837     053F  30FC               	movlw	252
  8838     0540  009D               	movwf	(main@negativeFeedValue^(0+384)+1)
  8839     0541                     l4402:
  8840                           
  8841                           ;main.c: 409:                 displayValue=-negativeFeedValue;
  8842     0541  1683               	bsf	3,5	;RP0=1, select bank3
  8843     0542  1703               	bsf	3,6	;RP1=1, select bank3
  8844     0543  091C               	comf	main@negativeFeedValue^(0+384),w
  8845     0544  1283               	bcf	3,5	;RP0=0, select bank0
  8846     0545  1303               	bcf	3,6	;RP1=0, select bank0
  8847     0546  00D4               	movwf	??_main
  8848     0547  1683               	bsf	3,5	;RP0=1, select bank3
  8849     0548  1703               	bsf	3,6	;RP1=1, select bank3
  8850     0549  091D               	comf	(main@negativeFeedValue+1)^(0+384),w
  8851     054A  1283               	bcf	3,5	;RP0=0, select bank0
  8852     054B  1303               	bcf	3,6	;RP1=0, select bank0
  8853     054C  00D5               	movwf	??_main+1
  8854     054D  0AD4               	incf	??_main,f
  8855     054E  1903               	skipnz
  8856     054F  0AD5               	incf	??_main+1,f
  8857     0550  0854               	movf	??_main,w
  8858     0551  1683               	bsf	3,5	;RP0=1, select bank3
  8859     0552  1703               	bsf	3,6	;RP1=1, select bank3
  8860     0553  009E               	movwf	main@displayValue^(0+384)
  8861     0554  1283               	bcf	3,5	;RP0=0, select bank0
  8862     0555  1303               	bcf	3,6	;RP1=0, select bank0
  8863     0556  0855               	movf	??_main+1,w
  8864     0557  1683               	bsf	3,5	;RP0=1, select bank3
  8865     0558  1703               	bsf	3,6	;RP1=1, select bank3
  8866     0559  009F               	movwf	(main@displayValue+1)^(0+384)
  8867     055A                     l4404:
  8868                           
  8869                           ;main.c: 410:                 sprintf(uartMessage, "s%d\r\n", negativeFeedValue);
  8870     055A  3059               	movlw	low (STR_27| (0+32768))
  8871     055B  1283               	bcf	3,5	;RP0=0, select bank0
  8872     055C  1303               	bcf	3,6	;RP1=0, select bank0
  8873     055D  00B2               	movwf	sprintf@f
  8874     055E  3099               	movlw	high (STR_27| (0+32768))
  8875     055F  00B3               	movwf	sprintf@f+1
  8876     0560  1683               	bsf	3,5	;RP0=1, select bank3
  8877     0561  1703               	bsf	3,6	;RP1=1, select bank3
  8878     0562  081D               	movf	(main@negativeFeedValue+1)^(0+384),w
  8879     0563  1283               	bcf	3,5	;RP0=0, select bank0
  8880     0564  1303               	bcf	3,6	;RP1=0, select bank0
  8881     0565  00B5               	movwf	?_sprintf+3
  8882     0566  1683               	bsf	3,5	;RP0=1, select bank3
  8883     0567  1703               	bsf	3,6	;RP1=1, select bank3
  8884     0568  081C               	movf	main@negativeFeedValue^(0+384),w
  8885     0569  1283               	bcf	3,5	;RP0=0, select bank0
  8886     056A  1303               	bcf	3,6	;RP1=0, select bank0
  8887     056B  00B4               	movwf	?_sprintf+2
  8888     056C  30C5               	movlw	(low (main@uartMessage_371| 0))& (0+255)
  8889     056D  120A  158A  22C4  120A  118A  	fcall	_sprintf
  8890     0572                     l4406:
  8891                           
  8892                           ;main.c: 411:                 UART_Write_Text(uartMessage);
  8893     0572  30C5               	movlw	(low (main@uartMessage_371| 0))& (0+255)
  8894     0573  1283               	bcf	3,5	;RP0=0, select bank0
  8895     0574  1303               	bcf	3,6	;RP1=0, select bank0
  8896     0575  00A1               	movwf	UART_Write_Text@text
  8897     0576  3000               	movlw	0
  8898     0577  00A2               	movwf	UART_Write_Text@text+1
  8899     0578  160A  118A  237C  120A  118A  	fcall	_UART_Write_Text
  8900     057D  2DF0               	goto	l4424
  8901     057E                     l239:
  8902     057E  1C89               	btfss	9,1	;volatile
  8903     057F  2D81               	goto	u5981
  8904     0580  2D82               	goto	u5980
  8905     0581                     u5981:
  8906     0581  2DD2               	goto	l4418
  8907     0582                     u5980:
  8908     0582                     l4408:
  8909                           
  8910                           ;main.c: 415:             Lcd_Set_Cursor(2, 13);
  8911     0582  300D               	movlw	13
  8912     0583  00A4               	movwf	Lcd_Set_Cursor@b
  8913     0584  3002               	movlw	2
  8914     0585  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  8915     058A                     l4410:
  8916                           
  8917                           ;main.c: 416:             Lcd_Write_String(" REW         ");
  8918     058A  30EB               	movlw	low (STR_34| (0+32768))
  8919     058B  1283               	bcf	3,5	;RP0=0, select bank0
  8920     058C  1303               	bcf	3,6	;RP1=0, select bank0
  8921     058D  00A5               	movwf	Lcd_Write_String@a
  8922     058E  3098               	movlw	high (STR_34| (0+32768))
  8923     058F  00A6               	movwf	Lcd_Write_String@a+1
  8924     0590  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  8925     0595                     l4412:
  8926                           
  8927                           ;main.c: 417:             int negativeDisplayValue = -displayValue;
  8928     0595  1683               	bsf	3,5	;RP0=1, select bank3
  8929     0596  1703               	bsf	3,6	;RP1=1, select bank3
  8930     0597  091E               	comf	main@displayValue^(0+384),w
  8931     0598  1283               	bcf	3,5	;RP0=0, select bank0
  8932     0599  1303               	bcf	3,6	;RP1=0, select bank0
  8933     059A  00D4               	movwf	??_main
  8934     059B  1683               	bsf	3,5	;RP0=1, select bank3
  8935     059C  1703               	bsf	3,6	;RP1=1, select bank3
  8936     059D  091F               	comf	(main@displayValue+1)^(0+384),w
  8937     059E  1283               	bcf	3,5	;RP0=0, select bank0
  8938     059F  1303               	bcf	3,6	;RP1=0, select bank0
  8939     05A0  00D5               	movwf	??_main+1
  8940     05A1  0AD4               	incf	??_main,f
  8941     05A2  1903               	skipnz
  8942     05A3  0AD5               	incf	??_main+1,f
  8943     05A4  0854               	movf	??_main,w
  8944     05A5  1683               	bsf	3,5	;RP0=1, select bank1
  8945     05A6  1303               	bcf	3,6	;RP1=0, select bank1
  8946     05A7  00DE               	movwf	main@negativeDisplayValue^(0+128)
  8947     05A8  1283               	bcf	3,5	;RP0=0, select bank0
  8948     05A9  1303               	bcf	3,6	;RP1=0, select bank0
  8949     05AA  0855               	movf	??_main+1,w
  8950     05AB  1683               	bsf	3,5	;RP0=1, select bank1
  8951     05AC  1303               	bcf	3,6	;RP1=0, select bank1
  8952     05AD  00DF               	movwf	(main@negativeDisplayValue+1)^(0+128)
  8953     05AE                     l4414:
  8954                           
  8955                           ;main.c: 418:             char combinedText[20];;main.c: 419:             sprintf(combin
      +                          edText, "s%d\r\n", negativeDisplayValue);
  8956     05AE  3059               	movlw	low (STR_27| (0+32768))
  8957     05AF  1283               	bcf	3,5	;RP0=0, select bank0
  8958     05B0  1303               	bcf	3,6	;RP1=0, select bank0
  8959     05B1  00B2               	movwf	sprintf@f
  8960     05B2  3099               	movlw	high (STR_27| (0+32768))
  8961     05B3  00B3               	movwf	sprintf@f+1
  8962     05B4  1683               	bsf	3,5	;RP0=1, select bank1
  8963     05B5  1303               	bcf	3,6	;RP1=0, select bank1
  8964     05B6  085F               	movf	(main@negativeDisplayValue+1)^(0+128),w
  8965     05B7  1283               	bcf	3,5	;RP0=0, select bank0
  8966     05B8  1303               	bcf	3,6	;RP1=0, select bank0
  8967     05B9  00B5               	movwf	?_sprintf+3
  8968     05BA  1683               	bsf	3,5	;RP0=1, select bank1
  8969     05BB  1303               	bcf	3,6	;RP1=0, select bank1
  8970     05BC  085E               	movf	main@negativeDisplayValue^(0+128),w
  8971     05BD  1283               	bcf	3,5	;RP0=0, select bank0
  8972     05BE  1303               	bcf	3,6	;RP1=0, select bank0
  8973     05BF  00B4               	movwf	?_sprintf+2
  8974     05C0  30A0               	movlw	(low (main@combinedText_375| 0))& (0+255)
  8975     05C1  120A  158A  22C4  120A  118A  	fcall	_sprintf
  8976     05C6                     l4416:
  8977                           
  8978                           ;main.c: 420:             UART_Write_Text(combinedText);
  8979     05C6  30A0               	movlw	(low (main@combinedText_375| 0))& (0+255)
  8980     05C7  1283               	bcf	3,5	;RP0=0, select bank0
  8981     05C8  1303               	bcf	3,6	;RP1=0, select bank0
  8982     05C9  00A1               	movwf	UART_Write_Text@text
  8983     05CA  3000               	movlw	0
  8984     05CB  00A2               	movwf	UART_Write_Text@text+1
  8985     05CC  160A  118A  237C  120A  118A  	fcall	_UART_Write_Text
  8986                           
  8987                           ;main.c: 421:         } else {
  8988     05D1  2DF0               	goto	l4424
  8989     05D2                     l4418:
  8990                           
  8991                           ;main.c: 423:             Lcd_Set_Cursor(2, 13);
  8992     05D2  300D               	movlw	13
  8993     05D3  00A4               	movwf	Lcd_Set_Cursor@b
  8994     05D4  3002               	movlw	2
  8995     05D5  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  8996     05DA                     l4420:
  8997                           
  8998                           ;main.c: 424:             Lcd_Write_String(" STOP       ");
  8999     05DA  3007               	movlw	low (STR_36| (0+32768))
  9000     05DB  1283               	bcf	3,5	;RP0=0, select bank0
  9001     05DC  1303               	bcf	3,6	;RP1=0, select bank0
  9002     05DD  00A5               	movwf	Lcd_Write_String@a
  9003     05DE  3099               	movlw	high (STR_36| (0+32768))
  9004     05DF  00A6               	movwf	Lcd_Write_String@a+1
  9005     05E0  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  9006     05E5                     l4422:
  9007                           
  9008                           ;main.c: 425:             UART_Write_Text("s0\r\n");
  9009     05E5  3065               	movlw	low (STR_25| (0+32768))
  9010     05E6  1283               	bcf	3,5	;RP0=0, select bank0
  9011     05E7  1303               	bcf	3,6	;RP1=0, select bank0
  9012     05E8  00A1               	movwf	UART_Write_Text@text
  9013     05E9  3099               	movlw	high (STR_25| (0+32768))
  9014     05EA  00A2               	movwf	UART_Write_Text@text+1
  9015     05EB  160A  118A  237C  120A  118A  	fcall	_UART_Write_Text
  9016     05F0                     l4424:
  9017                           
  9018                           ;main.c: 432:         if((RC1==1) &&( RE0==1 || RE2 )){
  9019     05F0  1283               	bcf	3,5	;RP0=0, select bank0
  9020     05F1  1303               	bcf	3,6	;RP1=0, select bank0
  9021     05F2  1C87               	btfss	7,1	;volatile
  9022     05F3  2DF5               	goto	u5991
  9023     05F4  2DF6               	goto	u5990
  9024     05F5                     u5991:
  9025     05F5  2E02               	goto	l249
  9026     05F6                     u5990:
  9027     05F6                     l4426:
  9028     05F6  1809               	btfsc	9,0	;volatile
  9029     05F7  2DF9               	goto	u6001
  9030     05F8  2DFA               	goto	u6000
  9031     05F9                     u6001:
  9032     05F9  2DFE               	goto	l251
  9033     05FA                     u6000:
  9034     05FA                     l4428:
  9035     05FA  1D09               	btfss	9,2	;volatile
  9036     05FB  2DFD               	goto	u6011
  9037     05FC  2DFE               	goto	u6010
  9038     05FD                     u6011:
  9039     05FD  2E02               	goto	l249
  9040     05FE                     u6010:
  9041     05FE                     l251:
  9042                           
  9043                           ;main.c: 434:             RA4=1;
  9044     05FE  1283               	bcf	3,5	;RP0=0, select bank0
  9045     05FF  1303               	bcf	3,6	;RP1=0, select bank0
  9046     0600  1605               	bsf	5,4	;volatile
  9047                           
  9048                           ;main.c: 435:         }
  9049     0601  2EA3               	goto	l257
  9050     0602                     l249:	
  9051                           ;main.c: 436:         else if(( RC2==1) && (RE1==1 || RC0)){
  9052                           
  9053     0602  1D07               	btfss	7,2	;volatile
  9054     0603  2E05               	goto	u6021
  9055     0604  2E06               	goto	u6020
  9056     0605                     u6021:
  9057     0605  2E0F               	goto	l253
  9058     0606                     u6020:
  9059     0606                     l4430:
  9060     0606  1889               	btfsc	9,1	;volatile
  9061     0607  2E09               	goto	u6031
  9062     0608  2E0A               	goto	u6030
  9063     0609                     u6031:
  9064     0609  2DFE               	goto	l251
  9065     060A                     u6030:
  9066     060A                     l4432:
  9067     060A  1C07               	btfss	7,0	;volatile
  9068     060B  2E0D               	goto	u6041
  9069     060C  2E0E               	goto	u6040
  9070     060D                     u6041:
  9071     060D  2E0F               	goto	l253
  9072     060E                     u6040:
  9073     060E  2DFE               	goto	l251
  9074     060F                     l253:	
  9075                           ;main.c: 440:         else {
  9076                           
  9077                           
  9078                           ;main.c: 441:             RA4=0;
  9079     060F  1205               	bcf	5,4	;volatile
  9080     0610  2EA3               	goto	l257
  9081     0611                     l180:	
  9082                           ;main.c: 446: else if( RC3==1) {
  9083                           
  9084     0611  1D87               	btfss	7,3	;volatile
  9085     0612  2E14               	goto	u6051
  9086     0613  2E15               	goto	u6050
  9087     0614                     u6051:
  9088     0614  2E6B               	goto	l258
  9089     0615                     u6050:
  9090     0615                     l4434:
  9091                           
  9092                           ;main.c: 451:     Lcd_Set_Cursor(1,1);
  9093     0615  01A4               	clrf	Lcd_Set_Cursor@b
  9094     0616  0AA4               	incf	Lcd_Set_Cursor@b,f
  9095     0617  3001               	movlw	1
  9096     0618  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  9097     061D                     l4436:
  9098                           
  9099                           ;main.c: 452:             Lcd_Write_String("   FEED RATE ERROR       ");
  9100     061D  3037               	movlw	low (STR_38| (0+32768))
  9101     061E  1283               	bcf	3,5	;RP0=0, select bank0
  9102     061F  1303               	bcf	3,6	;RP1=0, select bank0
  9103     0620  00A5               	movwf	Lcd_Write_String@a
  9104     0621  3098               	movlw	high (STR_38| (0+32768))
  9105     0622  00A6               	movwf	Lcd_Write_String@a+1
  9106     0623  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  9107     0628                     l4438:
  9108                           
  9109                           ;main.c: 453:     Lcd_Set_Cursor(2,1);
  9110     0628  1283               	bcf	3,5	;RP0=0, select bank0
  9111     0629  1303               	bcf	3,6	;RP1=0, select bank0
  9112     062A  01A4               	clrf	Lcd_Set_Cursor@b
  9113     062B  0AA4               	incf	Lcd_Set_Cursor@b,f
  9114     062C  3002               	movlw	2
  9115     062D  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  9116                           
  9117                           ;main.c: 454:             Lcd_Write_String("   ILERLEME HATASI        ");
  9118     0632  301C               	movlw	low (STR_39| (0+32768))
  9119     0633  1283               	bcf	3,5	;RP0=0, select bank0
  9120     0634  1303               	bcf	3,6	;RP1=0, select bank0
  9121     0635  00A5               	movwf	Lcd_Write_String@a
  9122     0636  3098               	movlw	high (STR_39| (0+32768))
  9123     0637  00A6               	movwf	Lcd_Write_String@a+1
  9124     0638  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  9125                           
  9126                           ;main.c: 455:      UART_Write_Text("s0\r\n");
  9127     063D  3065               	movlw	low (STR_25| (0+32768))
  9128     063E  1283               	bcf	3,5	;RP0=0, select bank0
  9129     063F  1303               	bcf	3,6	;RP1=0, select bank0
  9130     0640  00A1               	movwf	UART_Write_Text@text
  9131     0641  3099               	movlw	high (STR_25| (0+32768))
  9132     0642  00A2               	movwf	UART_Write_Text@text+1
  9133     0643  160A  118A  237C  120A  118A  	fcall	_UART_Write_Text
  9134     0648                     l4440:
  9135                           
  9136                           ;main.c: 456:       RA4=1;
  9137     0648  1283               	bcf	3,5	;RP0=0, select bank0
  9138     0649  1303               	bcf	3,6	;RP1=0, select bank0
  9139     064A  1605               	bsf	5,4	;volatile
  9140     064B                     l4442:
  9141                           
  9142                           ;main.c: 457:       _delay((unsigned long)((1000)*(4000000/4000.0)));
  9143     064B  3006               	movlw	6
  9144     064C  1283               	bcf	3,5	;RP0=0, select bank0
  9145     064D  1303               	bcf	3,6	;RP1=0, select bank0
  9146     064E  00D6               	movwf	??_main+2
  9147     064F  3013               	movlw	19
  9148     0650  00D5               	movwf	??_main+1
  9149     0651  30AD               	movlw	173
  9150     0652  00D4               	movwf	??_main
  9151     0653                     u6107:
  9152     0653  0BD4               	decfsz	??_main,f
  9153     0654  2E53               	goto	u6107
  9154     0655  0BD5               	decfsz	??_main+1,f
  9155     0656  2E53               	goto	u6107
  9156     0657  0BD6               	decfsz	??_main+2,f
  9157     0658  2E53               	goto	u6107
  9158     0659                     l4444:
  9159                           
  9160                           ;main.c: 458:       RA4=0;
  9161     0659  1283               	bcf	3,5	;RP0=0, select bank0
  9162     065A  1303               	bcf	3,6	;RP1=0, select bank0
  9163     065B  1205               	bcf	5,4	;volatile
  9164     065C                     l4446:
  9165                           
  9166                           ;main.c: 459:       _delay((unsigned long)((3000)*(4000000/4000.0)));
  9167     065C  3010               	movlw	16
  9168     065D  1283               	bcf	3,5	;RP0=0, select bank0
  9169     065E  1303               	bcf	3,6	;RP1=0, select bank0
  9170     065F  00D6               	movwf	??_main+2
  9171     0660  3039               	movlw	57
  9172     0661  00D5               	movwf	??_main+1
  9173     0662  300D               	movlw	13
  9174     0663  00D4               	movwf	??_main
  9175     0664                     u6117:
  9176     0664  0BD4               	decfsz	??_main,f
  9177     0665  2E64               	goto	u6117
  9178     0666  0BD5               	decfsz	??_main+1,f
  9179     0667  2E64               	goto	u6117
  9180     0668  0BD6               	decfsz	??_main+2,f
  9181     0669  2E64               	goto	u6117
  9182     066A  2DFE               	goto	l251
  9183     066B                     l258:	
  9184                           ;main.c: 465:      else if (RD0 == 1 ){
  9185                           
  9186     066B  1C08               	btfss	8,0	;volatile
  9187     066C  2E6E               	goto	u6061
  9188     066D  2E6F               	goto	u6060
  9189     066E                     u6061:
  9190     066E  2EA3               	goto	l257
  9191     066F                     u6060:
  9192     066F                     l4450:
  9193                           
  9194                           ;main.c: 466:     UART_Write_Text("s0\r\n");
  9195     066F  3065               	movlw	low (STR_25| (0+32768))
  9196     0670  00A1               	movwf	UART_Write_Text@text
  9197     0671  3099               	movlw	high (STR_25| (0+32768))
  9198     0672  00A2               	movwf	UART_Write_Text@text+1
  9199     0673  160A  118A  237C  120A  118A  	fcall	_UART_Write_Text
  9200     0678                     l4452:
  9201                           
  9202                           ;main.c: 467:     Lcd_Set_Cursor(1,1);
  9203     0678  1283               	bcf	3,5	;RP0=0, select bank0
  9204     0679  1303               	bcf	3,6	;RP1=0, select bank0
  9205     067A  01A4               	clrf	Lcd_Set_Cursor@b
  9206     067B  0AA4               	incf	Lcd_Set_Cursor@b,f
  9207     067C  3001               	movlw	1
  9208     067D  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  9209     0682                     l4454:
  9210                           
  9211                           ;main.c: 468:             Lcd_Write_String("   ROTATION ERROR      ");
  9212     0682  3069               	movlw	low (STR_42| (0+32768))
  9213     0683  1283               	bcf	3,5	;RP0=0, select bank0
  9214     0684  1303               	bcf	3,6	;RP1=0, select bank0
  9215     0685  00A5               	movwf	Lcd_Write_String@a
  9216     0686  3098               	movlw	high (STR_42| (0+32768))
  9217     0687  00A6               	movwf	Lcd_Write_String@a+1
  9218     0688  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  9219                           
  9220                           ;main.c: 469:     Lcd_Set_Cursor(2,1);
  9221     068D  1283               	bcf	3,5	;RP0=0, select bank0
  9222     068E  1303               	bcf	3,6	;RP1=0, select bank0
  9223     068F  01A4               	clrf	Lcd_Set_Cursor@b
  9224     0690  0AA4               	incf	Lcd_Set_Cursor@b,f
  9225     0691  3002               	movlw	2
  9226     0692  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  9227     0697                     l4456:
  9228                           
  9229                           ;main.c: 470:             Lcd_Write_String("   DONME HATASI        ");
  9230     0697  3051               	movlw	low (STR_43| (0+32768))
  9231     0698  1283               	bcf	3,5	;RP0=0, select bank0
  9232     0699  1303               	bcf	3,6	;RP1=0, select bank0
  9233     069A  00A5               	movwf	Lcd_Write_String@a
  9234     069B  3098               	movlw	high (STR_43| (0+32768))
  9235     069C  00A6               	movwf	Lcd_Write_String@a+1
  9236     069D  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  9237     06A2  2E48               	goto	l4440
  9238     06A3                     l257:
  9239     06A3  120A  118A  2F9E   	goto	l4058
  9240     06A6                     l179:
  9241     06A6  120A  118A  280E   	ljmp	start
  9242     06A9                     __end_of_main:

Data Sizes:
    Strings     342
    Constant    10
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       8
    BANK0            80     78      78
    BANK1            80     80      80
    BANK3            96     16      22
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_35(CODE[6]), STR_33(CODE[6]), STR_29(CODE[6]), STR_27(CODE[6]), 
		 -> STR_23(CODE[10]), STR_21(CODE[6]), STR_18(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> main@combinedText_375(BANK1[20]), main@uartMessage_371(BANK1[8]), main@combinedText(BANK0[20]), main@uartMessage(BANK1[8]), 
		 -> main@rpmString(BANK1[5]), main@adcString1(BANK1[4]), main@lcdText(BANK1[9]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 20
		 -> STR_41(CODE[5]), STR_40(CODE[5]), STR_37(CODE[5]), main@combinedText_375(BANK1[20]), 
		 -> main@uartMessage_371(BANK1[8]), STR_31(CODE[5]), main@combinedText(BANK0[20]), main@uartMessage(BANK1[8]), 
		 -> STR_25(CODE[5]), 

    incrementTime@time	PTR struct Time size(1) Largest target is 6
		 -> currentTime(BANK3[6]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 27
		 -> STR_43(CODE[24]), STR_42(CODE[24]), STR_39(CODE[27]), STR_38(CODE[26]), 
		 -> STR_36(CODE[13]), STR_34(CODE[14]), STR_32(CODE[10]), STR_30(CODE[9]), 
		 -> STR_28(CODE[15]), STR_26(CODE[10]), STR_24(CODE[9]), main@rpmString(BANK1[5]), 
		 -> STR_22(CODE[5]), main@adcString1(BANK1[4]), STR_20(CODE[10]), STR_19(CODE[3]), 
		 -> main@lcdText(BANK1[9]), STR_17(CODE[14]), STR_16(CODE[19]), STR_15(CODE[14]), 
		 -> STR_14(CODE[19]), STR_13(CODE[14]), STR_12(CODE[19]), STR_11(CODE[14]), 
		 -> STR_10(CODE[19]), STR_9(CODE[14]), STR_8(CODE[19]), STR_7(CODE[14]), 
		 -> STR_6(CODE[19]), STR_5(CODE[21]), STR_4(CODE[20]), STR_3(CODE[3]), 
		 -> STR_2(CODE[15]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _timer_isr in COMMON

    _timer_isr->_incrementTime

Critical Paths under _main in BANK0

    _main->___flmul
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    ___lwdiv->___wmul
    ___flmul->___fldiv
    _UART_Write_Text->_UART_Write
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _timer_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer_isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer_isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               128   128      0   23819
                                             52 BANK0     26    26      0
                                              0 BANK1     80    80      0
                                              0 BANK3     16    16      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                    _UART_Initialize
                    _UART_Write_Text
                            ___fldiv
                            ___flmul
                            ___fltol
                            ___lwdiv
                            ___lwmod
                             ___wmul
                           ___xxtofl
                         _readEEPROM
                            _sprintf
                        _writeEEPROM
 ---------------------------------------------------------------------------------
 (1) _writeEEPROM                                          4     0      4     500
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             31    21     10    4645
                                             18 BANK0     23    13     10
                            ___fltol (ARG)
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1036
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     463
                                             13 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     770
                                              6 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _readEEPROM                                           4     2      2     301
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     517
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    3353
                                             26 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     980
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1273
                                              0 BANK0     26    18      8
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      7     5      2     971
                                              1 BANK0      7     5      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2    3444
                                              5 BANK0      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     254
                                              1 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1    3605
                                              4 BANK0      6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                              4 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     155
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _timer_isr                                            3     3      0     187
                                              3 COMMON     3     3      0
                      _incrementTime
 ---------------------------------------------------------------------------------
 (5) _incrementTime                                        3     3      0     187
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _UART_Initialize
   _UART_Write_Text
     _UART_Write
   ___fldiv
   ___flmul
     __Umul8_16
     ___fldiv (ARG)
   ___fltol
   ___lwdiv
     ___wmul (ARG)
   ___lwmod
     ___lwdiv (ARG)
   ___wmul
   ___xxtofl
   _readEEPROM
   _sprintf
     ___fltol (ARG)
     ___lwdiv (ARG)
     ___lwmod (ARG)
     ___wmul (ARG)
     _isdigit (ARG)
   _writeEEPROM

 _timer_isr (ROOT)
   _incrementTime

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      BC       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60     10      16       9       22.9%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      BC      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Sep 18 08:51:27 2023

            ___fldiv@aexp 0039              ___fldiv@bexp 0038                         pc 0002  
            ___fldiv@sign 0031                        _RD 0C60                        _WR 0C61  
                      fsr 0004       ___wmul@multiplicand 0022       __Umul8_16@word_mpld 0026  
                     l121 07FB                       l113 07E5                       l114 07E6  
                     l115 07EC                       l211 0125                       l116 07ED  
                     l124 1266                       l117 07F3                       l133 149B  
                     l221 0411                       l118 07F4                       l230 0476  
                     l214 0241                       l119 07FA                       l127 1203  
                     l136 14FE                       l152 127E                       l145 137B  
                     l233 04B2                       l225 0477                       l217 02AF  
                     l218 030C                       l139 083A                       l155 1282  
                     l251 05FE                       l243 04E5                       l235 04DD  
                     l180 0611                       l253 060F                       l229 0419  
                     l158 124A                       l406 0BE5                       l423 0CBA  
                     l239 057E                       l176 1589                       l281 1211  
                     l257 06A3                       l249 0602                       l258 066B  
                     l275 1221                       l427 12B8                       l179 06A6  
                     l620 1561                       l613 1576                       l429 12D0  
                     l278 1207                       l287 13C1                       l623 1576  
                     l385 0ADE                       l709 1335                       l397 0B7D  
                     l822 0F6F                       l399 0B53                       l816 0FFF  
                     l835 12E7                       l860 085F                       l837 12F9  
                     l862 08F4                       l792 0A3D                       l776 094B  
                     l880 1235                       l873 08BE                       l778 0AC3  
                     l874 08CA                       l699 1407                       l798 0AAF  
                     _GIE 005F                       _RB0 0030                       _RB1 0031  
                     _RB2 0032                       _RA4 002C                       _RC0 0038  
                     _RB3 0033                       _RC1 0039                       _RB4 0034  
                     _RC2 003A                       _RD0 0040                       _RB5 0035  
                     _RC3 003B                       _RE0 0048                       _RE1 0049  
                     _RE2 004A                       fsr0 0004                       indf 0000  
            ___flmul@aexp 0048              ___flmul@bexp 004D              ___flmul@sign 0047  
            ___flmul@temp 0052              ___flmul@prod 004E               main@lcdText 00B4  
            ___fltol@exp1 0029                      l2300 13DA                      l2310 13FD  
                    l2302 13DE                      l2304 13EF                      l2312 1403  
                    l2320 1305                      l2400 127C                      l4000 071A  
                    l2306 13F5                      l2330 1324                      l2322 130C  
                    l2402 127D                      l4010 071F                      l4002 071B  
                    l2308 13F6                      l2332 132B                      l2324 1310  
                    l2316 12FA                      l4100 15F9                      l4020 0744  
                    l4012 0720                      l4004 071C                      l2326 1314  
                    l2318 1302                      l2334 1331                      l4102 15FC  
                    l4110 160D                      l4030 0777                      l4022 074F  
                    l4014 0725                      l4006 071D                      l2416 1212  
                    l2600 0908                      l2328 131E                      l4120 1637  
                    l4112 1618                      l4040 078B                      l4032 077B  
                    l4024 0759                      l4016 072F                      l4008 071E  
                    l2418 121E                      l2610 0920                      l2602 090D  
                    l2290 13C2                      l4210 178D                      l4202 1771  
                    l4130 1660                      l4122 163B                      l4114 1621  
                    l4106 1605                      l4050 0795                      l4042 0791  
                    l4034 0780                      l4026 0764                      l4018 073A  
                    l2700 0A42                      l2620 0933                      l2612 0925  
                    l2604 0915                      l2292 13C6                      l4300 0245  
                    l4212 1796                      l4204 1776                      l4140 1686  
                    l4132 1675                      l4116 162C                      l4108 160A  
                    l4060 07A8                      l4052 0796                      l4044 0792  
                    l4036 0784                      l4028 0772                      l3510 07F8  
                    l3502 07DF                      l2702 0A47                      l2710 0A78  
                    l2630 0953                      l2622 0938                      l2614 0929  
                    l2606 0916                      l2294 13CC                      l4310 030B  
                    l4302 027B                      l4230 17E0                      l4222 17B3  
                    l4214 179C                      l4206 1779                      l4150 16AC  
                    l4134 1678                      l4126 164B                      l4118 1632  
                    l4142 1689                      l4070 157D                      l4062 07B2  
                    l4054 0797                      l4046 0793                      l4038 0787  
                    l3504 07E3                      l3520 1263                      l3512 124E  
                    l3600 147D                      l2720 0AAE                      l2712 0A85  
                    l2704 0A55                      l2640 0971                      l2632 095F  
                    l2624 0940                      l2616 092D                      l2608 0918  
                    l2296 13CF                      l2392 1267                      l4400 053B  
                    l4320 033A                      l4312 0310                      l4304 0281  
                    l4240 001F                      l4224 17BD                      l4216 17A1  
                    l4208 1784                      l4160 16CD                      l4152 16B1  
                    l4144 1694                      l4128 1655                      l4080 15A0  
                    l4072 1581                      l4064 07BD                      l4056 0798  
                    l4048 0794                      l3506 07EA                      l3514 124F  
                    l3610 14A2                      l3602 148A                      l3530 081D  
                    l3522 0805                      l2722 0AB3                      l2714 0A93  
                    l2706 0A59                      l2650 099C                      l2634 0963  
                    l2626 0941                      l2618 092E                      l2298 13D6  
                    l2394 1273                      l4410 058A                      l4402 0541  
                    l4330 0393                      l4322 0369                      l4314 0316  
                    l4306 0285                      l4250 0040                      l4242 0028  
                    l4226 17C8                      l4234 17E9                      l4218 17A5  
                    l4162 16D8                      l4170 16F9                      l4154 16B5  
                    l4146 169D                      l4138 1681                      l4090 15C1  
                    l4082 15A9                      l4074 1585                      l4066 07D2  
                    l4058 079E                      l3508 07F1                      l3516 1255  
                    l3612 14AD                      l3604 148D                      l3540 0837  
                    l3532 0824                      l3524 080B                      l3620 133B  
                    l2724 0AB7                      l2716 0AA2                      l2708 0A72  
                    l2660 09C1                      l2652 09A4                      l2644 097A  
                    l2628 0943                      l2900 088B                      l3700 0BFC  
                    l2396 1276                      l4420 05DA                      l4412 0595  
                    l4404 055A                      l4340 03EE                      l4332 03CF  
                    l4324 0373                      l4316 0327                      l4308 0305  
                    l4260 0078                      l4244 0031                      l4236 17EE  
                    l4228 17DD                      l4180 171E                      l4172 16FE  
                    l4164 16ED                      l4148 16A6                      l4084 15B2  
                    l4076 1591                      l4068 1577                      l3518 1258  
                    l3614 14BE                      l3606 1493                      l3534 0827  
                    l3526 080C                      l3622 1357                      l3542 1207  
                    l2726 0AB9                      l2718 0AA6                      l2670 09EC  
                    l2662 09C2                      l2654 09A6                      l2646 098C  
                    l2638 096C                      l2590 08F5                      l2910 08B8  
                    l2902 0899                      l3550 122C                      l3710 0C13  
                    l3702 0C00                      l4510 0B6F                      l2398 127B  
                    l4430 0606                      l4422 05E5                      l4414 05AE  
                    l4406 0572                      l4350 041D                      l4342 03F2  
                    l4334 03D9                      l4326 037E                      l4318 032F  
                    l4262 007B                      l4254 004E                      l4246 0037  
                    l4270 008C                      l4238 17F1                      l4190 173B  
                    l4182 1724                      l4166 16F0                      l4158 16C3  
                    l4174 1701                      l4094 15CF                      l4086 15B8  
                    l4078 1595                      l3616 14C4                      l3608 149C  
                    l3536 082D                      l3528 081A                      l3624 135F  
                    l3544 120D                      l2728 0ABD                      l2680 0A09  
                    l2656 09AB                      l2664 09CB                      l2672 09F0  
                    l2648 0994                      l2592 08FA                      l3800 156B  
                    l2920 08EB                      l2912 08C2                      l2904 08A2  
                    l3560 12AE                      l3552 1232                      l3720 0C35  
                    l3712 0C19                      l3704 0C04                      l3640 0ADA  
                    l3632 0AC7                      l4440 0648                      l4432 060A  
                    l4416 05C6                      l4408 0582                      l4360 044E  
                    l4352 0421                      l4424 05F0                      l4344 03FA  
                    l4336 03E4                      l4328 0388                      l4280 0124  
                    l4272 00B0                      l4256 0058                      l4248 003C  
                    l4192 1745                      l4184 1729                      l4176 170C  
                    l4096 15D9                      l4088 15BD                      l3538 0830  
                    l3618 1336                      l2690 0A21                      l2682 0A0D  
                    l2674 09F6                      l2666 09DD                      l2658 09BD  
                    l2594 08FE                      l3810 0CC9                      l3802 0CBB  
                    l2922 08EC                      l2914 08CC                      l2906 08A9  
                    l3626 1236                      l3562 12B2                      l3554 1234  
                    l3546 1225                      l3730 0C55                      l3722 0C3A  
                    l3714 0C1E                      l3706 0C0A                      l3650 0B0C  
                    l3642 0ADF                      l3634 0ACA                      l4450 066F  
                    l4442 064B                      l4434 0615                      l4426 05F6  
                    l4418 05D2                      l4370 048E                      l4362 0452  
                    l4354 0429                      l4346 0405                      l4338 03EA  
                    l4290 01AD                      l4282 0129                      l4274 00C5  
                    l4258 0063                      l4266 0084                      l4194 1750  
                    l4186 172D                      l4178 1715                      l4098 15E4  
                    l2692 0A22                      l2684 0A0E                      l2676 09FE  
                    l2668 09DE                      l2596 0902                      l3580 12F0  
                    l3572 12D4                      l3900 0F53                      l3820 0CE5  
                    l3812 0CCE                      l3804 0CC0                      l2916 08E2  
                    l2908 08B4                      l3628 123C                      l3564 12BF  
                    l3548 1226                      l3740 0C97                      l3724 0C3E  
                    l3716 0C22                      l3732 0C59                      l3708 0C0F  
                    l3652 0B10                      l4508 0AF5                      l3636 0AD0  
                    l4452 0678                      l4444 0659                      l4436 061D  
                    l4428 05FA                      l4380 04C6                      l4372 04A6  
                    l4364 046A                      l4356 0434                      l4348 0415  
                    l4292 020E                      l4284 012F                      l4276 00CF  
                    l4268 0089                      l4196 1765                      l3590 1458  
                    l2694 0A26                      l2686 0A17                      l2678 0A00  
                    l2598 0903                      l3582 12F5                      l3574 12D6  
                    l3910 0F74                      l3902 0F54                      l3830 0CF8  
                    l3822 0CEA                      l3814 0CD3                      l3806 0CC4  
                    l2918 08E7                      l3566 12C6                      l3558 12AA  
                    l3734 0C5C                      l3726 0C4A                      l3718 0C2F  
                    l3670 0B91                      l3654 0B25                      l3662 0B55  
                    l3646 0AE5                      l3638 0AD5                      l3742 0CA0  
                    l4454 0682                      l4446 065C                      l4438 0628  
                    l4390 04F5                      l4382 04D1                      l4374 04B6  
                    l4366 047B                      l4358 043F                      l4294 0231  
                    l4286 014E                      l4278 011E                      l4198 1768  
                    l3592 1465                      l3760 139D                      l2696 0A3A  
                    l2688 0A1D                      l3576 12DD                      l3912 0F79  
                    l3920 0FAA                      l3904 0F58                      l3840 0D14  
                    l3832 0CFD                      l3824 0CEE                      l3816 0CDB  
                    l3808 0CC8                      l2880 0843                      l3568 12CC  
                    l3736 0C8E                      l3728 0C50                      l3672 0B95  
                    l3664 0B81                      l3744 0CB6                      l3656 0B3A  
                    l3648 0AFA                      l4456 0697                      l4392 0500  
                    l4384 04E1                      l4376 04BA                      l4368 0483  
                    l4296 0237                      l4288 0171                      l3586 11F7  
                    l3594 1468                      l3762 13A5                      l3578 12E1  
                    l3930 0FDD                      l3922 0FB7                      l3914 0F87  
                    l3906 0F6C                      l3850 0D3D                      l3842 0D19  
                    l3834 0D05                      l3826 0CF2                      l3818 0CDD  
                    l3770 1513                      l2890 0870                      l2882 0847  
                    l3738 0C93                      l3690 0BCD                      l3666 0B89  
                    l3674 0B9B                      l3658 0B40                      l4394 0519  
                    l4386 04E9                      l4378 04BE                      l4298 023E  
                    l3596 146E                      l3588 1453                      l3756 137C  
                    l3940 0FF7                      l3932 0FE9                      l3924 0FC2  
                    l3916 0F8B                      l3860 0DD6                      l3852 0D58  
                    l3836 0D07                      l3828 0CF3                      l3780 1535  
                    l3772 1526                      l3764 14FF                      l2892 0873  
                    l2884 0857                      l3692 0BD3                      l3684 0BA9  
                    l3676 0BA3                      l3668 0B8D                      l4396 0526  
                    l4388 04ED                      l3598 1477                      l3758 1381  
                    l3934 0FED                      l3926 0FD1                      l3918 0FA4  
                    l3870 0E35                      l3862 0DDF                      l3854 0D74  
                    l3846 0D22                      l3838 0D0F                      l3790 154F  
                    l3774 1527                      l3766 150A                      l2894 0877  
                    l2886 0867                      l2878 083E                      l3694 0BD9  
                    l3678 0BA7                      l4398 052E                      l3950 06AE  
                    l3936 0FEE                      l3928 0FDB                      l3880 0ECD  
                    l3872 0E4C                      l3864 0DED                      l3856 0D9E  
                    l3848 0D30                      l3776 152F                      l2896 0880  
                    l3696 0BDF                      l3688 0BC9                      l3960 06B3  
                    l3952 06AF                      l3944 06A9                      l3938 0FF3  
                    l3890 0F3B                      l3882 0EF3                      l3874 0E69  
                    l3866 0E0A                      l3858 0DBA                      l3786 153D  
                    l3778 1531                      l2898 0887                      l3698 0BF0  
                    l3970 06B8                      l3962 06B4                      l3954 06B0  
                    l3946 06AC                      l3892 0F3F                      l3884 0F1B  
                    l3876 0E94                      l3868 0E18                      l3796 1556  
                    l3788 1546                      l3980 06C3                      l3972 06BD  
                    l3964 06B5                      l3956 06B1                      l3948 06AD  
                    l3894 0F40                      l3886 0F24                      l3878 0EA2  
                    l3798 1566                      l3990 06D4                      l3982 06C4  
                    l3974 06C0                      l3966 06B6                      l3958 06B2  
                    l3896 0F49                      l3888 0F32                      l3992 06E8  
                    l3984 06C5                      l3976 06C1                      l3968 06B7  
                    l3898 0F4F                      l3994 06FF                      l3986 06C7  
                    l3978 06C2                      l3996 0716                      l3988 06D1  
                    l3998 0719                      STR_1 18BD                      STR_2 18DC  
                    STR_3 196F                      STR_4 1896                      STR_5 1881  
                    STR_6 18AA                      STR_7 18F9                      STR_8 18AA  
                    STR_9 18F9                      _T0IF 005A                      u3000 0953  
                    u3001 0952                      u3010 0971                      u3011 0970  
                    u3020 09AB                      u3021 09AA                      u3110 0A0D  
                    u3111 0A0C                      u3200 0A85                      u2400 13EF  
                    u3201 0A84                      u3105 0A02                      u2401 13EE  
                    u3210 0AA2                      u3130 0A21                      u3050 09C1  
                    u3211 0AA1                      u3131 0A20                      u3051 09C0  
                    u3035 09AD                      u3220 0AB7                      u3140 0A26  
                    u2420 1403                      u3221 0AB6                      u3205 0A81  
                    u3141 0A25                      u3125 0A10                      u3045 09B6  
                    u2421 1402                      u2405 13EB                      u3150 0A3A  
                    u3070 09DD                      u2430 1302                      u3215 0A9E  
                    u3151 0A39                      u3071 09DC                      u2415 13F7  
                    u2431 1301                      u3160 0A41                      u3080 09F6  
                    u5000 0CC8                      u2360 13CC                      u3161 0A40  
                    u3081 09F5                      u3065 09C4                      u5001 0CC7  
                    u2361 13CB                      u3170 0A47                      u3090 09FE  
                    u5010 0CCE                      u2450 1314                      u3171 0A46  
                    u3091 09FD                      u3075 09D9                      u5011 0CCD  
                    u2451 1313                      u3180 0A59                      u5020 0CD3  
                    u2380 13DE                      u2460 131E                      u3181 0A58  
                    u5101 0DAC                      u5021 0CD2                      u2381 13DD  
                    u2461 131D                      u2445 1306                      u3190 0A68  
                    u5102 0DB3                      u5030 0CF2                      u5111 0DC8  
                    u5103 0DBA                      u5031 0CF1                      u2375 13D0  
                    u5112 0DCF                      u5040 0CF8                      u3600 0843  
                    u2480 1331                      u6000 05FA                      u5201 0EE5  
                    u5113 0DD6                      u5041 0CF7                      u3601 0842  
                    u2481 1330                      u2465 131A                      u6001 05F9  
                    u5210 0F01                      u5202 0EEC                      u5050 0CFD  
                    u3610 0847                      u6010 05FE                      u3195 0A63  
                    u5203 0EF3                      u5131 0DFC                      u5051 0CFC  
                    u3611 0846                      u2395 13DF                      u2475 1325  
                    u6011 05FD                      u5300 0F73                      u5132 0E03  
                    u5060 0D14                      u3700 08C2                      u3620 0867  
                    u6020 0606                      u5301 0F72                      u5221 0F0D  
                    u5141 0E27                      u5133 0E0A                      u5125 0DD8  
                    u5061 0D13                      u3701 08C1                      u3621 0866  
                    u6021 0605                      u4510 120D                      u5310 0F79  
                    u5222 0F14                      u5142 0E2E                      u5070 0D19  
                    u3710 08D7                      u2590 1282                      u6030 060A  
                    u4511 120C                      u5311 0F78                      u5223 0F1B  
                    u5215 0EFC                      u5143 0E35                      u5071 0D18  
                    u2591 1281                      u6031 0609                      u4600 12F5  
                    u5320 0F8B                      u3720 08E7                      u3640 0886  
                    u4520 122C                      u6040 060E                      u5400 1581  
                    u4505 080F                      u4601 12F4                      u5321 0F8A  
                    u5161 0E5B                      u5081 0D66                      u3721 08E6  
                    u3641 0885                      u4521 122B                      u6041 060D  
                    u5401 1580                      u4610 1458                      u5330 0F9A  
                    u5250 0F3F                      u5162 0E62                      u5082 0D6D  
                    u3730 08EB                      u4530 1232                      u6050 0615  
                    u5410 1585                      u4611 1457                      u5251 0F3E  
                    u5235 0F1D                      u5171 0E86                      u5163 0E69  
                    u5155 0E37                      u5091 0D82                      u5083 0D74  
                    u3731 08EA                      u3715 08D2                      u3635 0878  
                    u4531 1231                      u6107 0653                      u6051 0614  
                    u5411 1584                      u4460 07E3                      u2940 0902  
                    u5340 0FB7                      u5172 0E8D                      u5092 0D89  
                    u3660 08A8                      u4540 12B2                      u4700 0B52  
                    u6060 066F                      u5500 1621                      u5420 1591  
                    u4461 07E2                      u2941 0901                      u5341 0FB6  
                    u5245 0F34                      u5181 0EB1                      u5173 0E94  
                    u5093 0D90                      u3661 08A7                      u4541 12B1  
                    u4701 0B51                      u6061 066E                      u6117 0664  
                    u5501 1620                      u5421 158E                      u4470 07EA  
                    u4630 147D                      u2950 0908                      u5350 0FD1  
                    u5270 0F53                      u5190 0ED9                      u5182 0EB8  
                    u4710 0B81                      u5510 162C                      u5430 1595  
                    u4471 07E9                      u4631 147C                      u6127 0821  
                    u2951 0907                      u5351 0FD0                      u5335 0F95  
                    u5271 0F52                      u5183 0EBF                      u3655 089A  
                    u4711 0B80                      u5511 1629                      u5431 1594  
                    u4480 07F1                      u2960 090D                      u5360 0FED  
                    u5280 0F58                      u3680 08B8                      u4800 0C19  
                    u4720 0B91                      u5600 1715                      u5520 1632  
                    u5440 15A0                      u4481 07F0                      u4625 145E  
                    u6137 0834                      u2961 090C                      u5361 0FEC  
                    u5345 0FB3                      u5281 0F57                      u5265 0F42  
                    u3681 08B7                      u4801 0C18                      u4721 0B90  
                    u5601 1714                      u5521 1631                      u5441 159F  
                    u4490 07F8                      u4650 1345                      u2970 092D  
                    u5290 0F6C                      u3690 08BE                      u4570 12CC  
                    u4810 0C2E                      u4730 0BC8                      u5610 171E  
                    u5530 1648                      u5450 15A9                      u5370 07A8  
                    u4491 07F7                      u6147 14A8                      u2971 092C  
                    u5355 0FCD                      u5291 0F6B                      u5195 0ED4  
                    u3691 08BD                      u3675 08AD                      u4571 12CB  
                    u4555 12B9                      u4811 0C2D                      u4731 0BC7  
                    u5611 171D                      u5531 1647                      u5451 15A8  
                    u5371 07A5                      u4660 1369                      u2980 0933  
                    u4580 12E1                      u4900 150A                      u4820 0C35  
                    u4740 0BD3                      u5700 0028                      u5620 1724  
                    u5540 1694                      u5460 15B2                      u5380 1577  
                    u6157 14B9                      u4645 1483                      u2981 0932  
                    u4581 12E0                      u4901 1509                      u4565 12C0  
                    u4821 0C34                      u4741 0BD2                      u5701 0027  
                    u5621 1723                      u5541 1693                      u5461 15B1  
                    u5381 07D9                      u6077 06CD                      u4670 137B  
                    u2990 0938                      u4910 1521                      u4830 0C4A  
                    u4750 0BD9                      u5710 0031                      u5630 173A  
                    u5550 169D                      u5470 15B8                      u5390 157D  
                    u6167 14CA                      u4671 137A                      u2991 0937  
                    u4831 0C49                      u4751 0BD8                      u4735 0BC4  
                    u5711 0030                      u5631 1739                      u5551 169C  
                    u5535 1644                      u5471 15B7                      u5391 157A  
                    u6087 076C                      u4920 1535                      u4840 0C50  
                    u4760 0BDF                      u4680 0AD0                      u5800 03EE  
                    u5720 0037                      u5640 1784                      u5560 16A6  
                    u5480 15CE                      u6177 125E                      u4921 1534  
                    u4841 0C4F                      u4761 0BDE                      u4681 0ACF  
                    u5801 03ED                      u6097 023B                      u5721 0036  
                    u5641 1783                      u5561 16A5                      u5481 15CD  
                    u4930 153C                      u4850 0CA0                      u4770 0BF0  
                    u4690 0B0C                      u5810 03F2                      u5730 004D  
                    u5650 178D                      u5570 16AC                      u5490 1618  
                    u4595 12E8                      u4931 153B                      u4915 151C  
                    u4851 0C9F                      u4771 0BEF                      u4691 0B0B  
                    u5811 03F1                      u5731 004C                      u5651 178C  
                    u5635 1736                      u5571 16AB                      u5491 1617  
                    u4860 0CB6                      u4780 0C04                      u5900 04BA  
                    u5820 0415                      u5740 0129                      u5660 1796  
                    u5580 16C2                      u4861 0CB5                      u4781 0C03  
                    u5901 04B9                      u5821 0414                      u5741 0128  
                    u5661 1795                      u5581 16C1                      u5485 15CA  
                    u4870 138B                      u4950 154E                      u4790 0C0A  
                    u5910 04BE                      u5830 0419                      u5750 0245  
                    u5670 179C                      u5590 170C                      u4951 154D  
                    u4791 0C09                      u4775 0BEC                      u5911 04BD  
                    u5831 0418                      u5751 0244                      u5735 0049  
                    u5671 179B                      u5591 170B                      u4880 13AF  
                    u4960 1555                      u5920 04E1                      u5840 041D  
                    u5760 0281                      u5680 17B2                      u4961 1554  
                    u4945 153E                      u5921 04E0                      u5841 041C  
                    u5761 0280                      u5681 17B1                      u5585 16BE  
                    u4890 13C1                      u5930 04E5                      u5850 0421  
                    u5770 0285                      u5690 001F                      u4891 13C0  
                    u5931 04E4                      u5851 0420                      u5771 0284  
                    u5691 17FD                      u4980 1566                      u5940 04E9  
                    u5860 043F                      u5780 0310                      u4981 1565  
                    u5941 04E8                      u5861 043E                      u5781 030F  
                    u5685 17AE                      u4990 156B                      u5950 04ED  
                    u5870 044E                      u5790 03EA                      u4991 156A  
                    u4975 1558                      u5951 04EC                      u5871 044D  
                    u5791 03E9                      u5960 0526                      u5880 047B  
                    u5961 0525                      u5881 047A                      u5970 053B  
                    u5890 04B6                      u5971 053A                      u5891 04B5  
                    u5980 0582                      u5981 0581                      u5965 0522  
                    u5990 05F6                      u5991 05F5                      u5975 0537  
                    _TMR0 0001                      _TRMT 04C1                      _WREN 0C62  
       ?_Lcd_Write_String 0025                      _main 06A9                      btemp 007E  
                    start 000E        ??_Lcd_Write_String 0027           ___fldiv@new_exp 0032  
         __end_of_Lcd_Cmd 1267               _writeEEPROM 1267   __end_of_UART_Write_Text 13C2  
        ?_UART_Initialize 0070             ___fltol@sign1 0028        writeEEPROM@address 0020  
                   ?_main 0070           __end_of___fldiv 0AC4                     _EEADR 010D  
                   STR_10 18AA                     STR_11 18F9                     STR_12 18AA  
                   STR_20 191F                     STR_13 18F9                     STR_21 195F  
                   STR_14 18AA                     STR_22 196A                     STR_30 1950  
                   STR_31 1965                     STR_15 18F9                     STR_23 193D  
                   STR_40 1965                     STR_16 18AA                     STR_24 1947  
                   STR_32 1933                     STR_41 1965                     STR_33 1959  
                   STR_17 18F9                     STR_25 1965                     STR_26 1929  
                   STR_18 1914                     STR_34 18EB                     STR_42 1869  
                   STR_35 1959                     STR_19 18D9                     STR_27 1959  
                   STR_43 1851                     STR_36 1907                     STR_28 18CD  
                   STR_37 1965                     STR_29 1959                     STR_38 1837  
                   STR_39 181C           __end_of___flmul 1000           __end_of___fltol 1577  
         __end_of___lwdiv 1408                     i1l170 12A1                     i1l163 144F  
         __end_of___lwmod 1336                     _RCSTA 0018                     _SPBRG 0099  
                   _TRISB 0086                     _TRISD 0088                     _TXREG 0019  
                   _TXSTA 0098               ?_UART_Write 0070           __end_of_dpowers 181C  
         __end_of_isdigit 1236                     main@i 00EC              main@rpmValue 006C  
           main@adcValue1 00E6             main@adcValue2 00D6             main@adcValue3 00D8  
                   pclath 000A                     status 0003                     wtemp0 007E  
         __end_of_sprintf 0CBB          __end_of_Lcd_Init 14FF          __end_of_Lcd_Port 07FC  
         __initialization 0011              __end_of_main 06A9                    ??_main 0054  
           main@ilkAcilis 00E4                    _ADRESH 001E                    _ADRESL 009E  
                  _EEDATA 010C                    _EECON2 018D                    i1l2410 1409  
                  i1l2412 1423                    i1l2414 1442                    i1l2930 1288  
                  i1l2932 1292                    i1l2934 1299                    i1l2926 1283  
                  i1l2936 129B                    i1l2928 1287                    u260_20 1423  
                  u260_21 1422                    u261_20 1442                    u261_21 1441  
                  u374_20 1287                    u374_21 1286                    u375_20 1299  
                  u375_21 1298                 ??_Lcd_Cmd 0021                    _TRISA0 0428  
                  _TRISA1 0429                    _TRISA2 042A                    _TRISA3 042B  
                  _TRISA4 042C                    _TRISC0 0438                    _TRISC1 0439  
                  _TRISA5 042D                    _TRISC2 043A                    _TRISD0 0440  
                  _TRISC3 043B                    _TRISE0 0448                    _TRISC4 043C  
                  _TRISE1 0449                    _TRISC5 043D                    _TRISE2 044A  
                  _TRISC6 043E                    _TRISC7 043F          __end_of___xxtofl 08F5  
                  ___wmul 12AA                 ??___fldiv 0028                 ??___flmul 0042  
        ?_UART_Write_Text 0021                 ??___fltol 0024                 ??___lwdiv 0076  
               ??___lwmod 0076             _incrementTime 1408             main@rpmString 00D1  
               ??_isdigit 0076                    saved_w 007E            main@adcString1 00E0  
               ??_sprintf 003C           Lcd_Set_Cursor@a 0026           Lcd_Set_Cursor@b 0024  
         Lcd_Set_Cursor@y 0028           Lcd_Set_Cursor@z 0027              ___xxtofl@arg 002A  
            ___xxtofl@exp 0029              ___xxtofl@val 0020   __end_of__initialization 001B  
       __end_of_Lcd_Clear 1204                ___fltol@f1 0020           writeEEPROM@data 0022  
          __pcstackCOMMON 0070            ?_incrementTime 0070            _Lcd_Set_Cursor 1450  
       incrementTime@time 0072            _OPTION_REGbits 0081        main@gostermeliklcd 00CD  
               ?_Lcd_Init 0070                 ?_Lcd_Port 0070              sprintf@width 0045  
        main@combinedText 0058                __pbssBANK3 01A0         __end_of__Umul8_16 12FA  
              __pmaintext 06A9              ?_writeEEPROM 0020                   ?___wmul 0020  
              __pintentry 0004    __end_of_Lcd_Set_Cursor 149C          main@displayValue 019E  
               ?___xxtofl 0020              ??_UART_Write 0076                ??_Lcd_Init 0024  
              ??_Lcd_Port 0076                __stringtab 1800            _Lcd_Write_Char 0802  
                 _Lcd_Cmd 124B                _readEEPROM 1236                   ___fldiv 08F5  
         ??_incrementTime 0070                   ___flmul 0CBB                   ___fltol 14FF  
      __end_of_UART_Write 1212                   ___lwdiv 13C2                   ___lwmod 12FA  
         ?_Lcd_Set_Cursor 0024                   __ptext1 1267                   __ptext2 0AC4  
                 __ptext3 1222                   __ptext4 12AA                   __ptext5 12FA  
                 __ptext6 13C2                   __ptext7 1236                   __ptext8 083B  
                 __ptext9 14FF                   _dpowers 1812                   _isdigit 1222  
              ??___xxtofl 0024     main@negativeFeedValue 019C                   _sprintf 0AC4  
  __end_of_Lcd_Write_Char 083B      end_of_initialization 001B         __end_of_timer_isr 12AA  
                 psplit$0 A0025                   psplit$1 250026                   psplit$2 260027  
               Lcd_Port@a 0020              __pstringtext 1800            UART_Write@data 0020  
           ___xxtofl@sign 0028               ___fldiv@grs 0034               ___fldiv@rem 002D  
    pnum$maintext_split_1 0025      pnum$maintext_split_2 0026      pnum$maintext_split_3 0027  
       readEEPROM@address 0020           ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0025  
       Lcd_Write_String@i 002A               ___flmul@grs 0049                main@binler 0198  
              main@birler 00DC               ?_readEEPROM 0020                main@yuzler 00EA  
               _Lcd_Clear 11F7            __end_of___wmul 12D1          _Lcd_Write_String 1336  
     start_initialization 0011         ??_UART_Initialize 0076                ?_Lcd_Clear 0070  
                ??___wmul 0076                 __Umul8_16 12D1           Lcd_Write_Char@a 0024  
         Lcd_Write_Char@y 0023                 ___fldiv@a 0020                 ___fldiv@b 0024  
               ___flmul@a 003E                 ___flmul@b 003A               __pbssCOMMON 0076  
               ___latbits 0002             __pcstackBANK0 0020             __pcstackBANK1 00A0  
           __pcstackBANK3 0190                  ?_Lcd_Cmd 0070               sprintf@flag 0044  
             sprintf@prec 0040          ___lwdiv@dividend 0028  main@negativeDisplayValue 00DE  
        ??_Lcd_Set_Cursor 0025                  ?___fldiv 0020                  ?___flmul 003A  
                ?___fltol 0020                ?__Umul8_16 0020                  ?___lwdiv 0026  
                ?___lwmod 002D                  ?_isdigit 0070          ___lwdiv@quotient 002A  
                ?_sprintf 0032         ??_UART_Write_Text 0023         interrupt_function 0004  
          ___wmul@product 0024                  Lcd_Cmd@a 0023               ??_Lcd_Clear 0076  
               _timer_isr 1283     __end_of_incrementTime 1450                _ADCON0bits 001F  
             __stringbase 1812                _ADCON1bits 009F                 main@i_321 00EE  
               main@i_330 0194                 main@i_324 0190                 main@i_333 0196  
               main@i_327 0192         ___wmul@multiplier 0020          ??_Lcd_Write_Char 0021  
               main@onlar 00DA                  _Lcd_Init 149C                  _Lcd_Port 07DC  
         main@integerPart 019A  __end_of_Lcd_Write_String 137C              ??_readEEPROM 0022  
             _kesmeSayaci 0076               ??__Umul8_16 0022                ?_timer_isr 0070  
            pnum$maintext 000A        __end_of__stringtab 1812               _isdigit$850 0020  
         _UART_Initialize 1212               _currentTime 01A0                sprintf@val 0042  
                ___xxtofl 083B        __end_of_readEEPROM 124B           ___lwdiv@divisor 0026  
         ___lwdiv@counter 002C                  __ptext10 0CBB                  __ptext11 12D1  
                __ptext20 11F7                  __ptext12 08F5                  __ptext21 124B  
                __ptext13 137C                  __ptext22 07DC                  __ptext14 1204  
                __ptext23 1283                  __ptext15 1212                  __ptext24 1408  
                __ptext16 1336                  __ptext17 0802                  __ptext18 1450  
                __ptext19 149C       UART_Write_Text@text 0021             ??_writeEEPROM 0076  
         main@uartMessage 00BD                _INTCONbits 000B                  isdigit@c 0021  
      Lcd_Write_Char@temp 0022                  intlevel1 0000                 sprintf@ap 0041  
               sprintf@sp 0048          ___lwmod@dividend 002F                 stringcode 180A  
             ??_timer_isr 0073   __end_of_UART_Initialize 1222       main@uartMessage_371 00C5  
      Lcd_Set_Cursor@temp 0029      main@combinedText_375 00A0       __end_of_writeEEPROM 1283  
  __Umul8_16@multiplicand 0020           _UART_Write_Text 137C                  sprintf@c 0047  
                sprintf@f 0032           ___lwmod@divisor 002D           ___lwmod@counter 0031  
                stringtab 1800                _UART_Write 1204          UART_Write_Text@i 0026  
    __Umul8_16@multiplier 0028         __Umul8_16@product 0024  
