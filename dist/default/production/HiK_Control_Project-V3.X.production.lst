

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Oct 11 12:16:10 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     8                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    43                           	psect	maintext_split_1,global,class=CODE,split=1,delta=2
    44                           	psect	maintext_split_2,global,class=CODE,split=1,delta=2
    45                           	dabs	1,0x7E,2
    46     0000                     
    47                           ; Generated 22/03/2023 GMT
    48                           ; 
    49                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution. Publication is not required when
    63                           ;        this file is used in an embedded application.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F877A Definitions
    79                           ; 
    80                           ; SFR Addresses
    81     0000                     	;# 
    82     0001                     	;# 
    83     0002                     	;# 
    84     0003                     	;# 
    85     0004                     	;# 
    86     0005                     	;# 
    87     0006                     	;# 
    88     0007                     	;# 
    89     0008                     	;# 
    90     0009                     	;# 
    91     000A                     	;# 
    92     000B                     	;# 
    93     000C                     	;# 
    94     000D                     	;# 
    95     000E                     	;# 
    96     000E                     	;# 
    97     000F                     	;# 
    98     0010                     	;# 
    99     0011                     	;# 
   100     0012                     	;# 
   101     0013                     	;# 
   102     0014                     	;# 
   103     0015                     	;# 
   104     0015                     	;# 
   105     0016                     	;# 
   106     0017                     	;# 
   107     0018                     	;# 
   108     0019                     	;# 
   109     001A                     	;# 
   110     001B                     	;# 
   111     001B                     	;# 
   112     001C                     	;# 
   113     001D                     	;# 
   114     001E                     	;# 
   115     001F                     	;# 
   116     0081                     	;# 
   117     0085                     	;# 
   118     0086                     	;# 
   119     0087                     	;# 
   120     0088                     	;# 
   121     0089                     	;# 
   122     008C                     	;# 
   123     008D                     	;# 
   124     008E                     	;# 
   125     0091                     	;# 
   126     0092                     	;# 
   127     0093                     	;# 
   128     0094                     	;# 
   129     0098                     	;# 
   130     0099                     	;# 
   131     009C                     	;# 
   132     009D                     	;# 
   133     009E                     	;# 
   134     009F                     	;# 
   135     010C                     	;# 
   136     010D                     	;# 
   137     010E                     	;# 
   138     010F                     	;# 
   139     018C                     	;# 
   140     018D                     	;# 
   141     0000                     	;# 
   142     0001                     	;# 
   143     0002                     	;# 
   144     0003                     	;# 
   145     0004                     	;# 
   146     0005                     	;# 
   147     0006                     	;# 
   148     0007                     	;# 
   149     0008                     	;# 
   150     0009                     	;# 
   151     000A                     	;# 
   152     000B                     	;# 
   153     000C                     	;# 
   154     000D                     	;# 
   155     000E                     	;# 
   156     000E                     	;# 
   157     000F                     	;# 
   158     0010                     	;# 
   159     0011                     	;# 
   160     0012                     	;# 
   161     0013                     	;# 
   162     0014                     	;# 
   163     0015                     	;# 
   164     0015                     	;# 
   165     0016                     	;# 
   166     0017                     	;# 
   167     0018                     	;# 
   168     0019                     	;# 
   169     001A                     	;# 
   170     001B                     	;# 
   171     001B                     	;# 
   172     001C                     	;# 
   173     001D                     	;# 
   174     001E                     	;# 
   175     001F                     	;# 
   176     0081                     	;# 
   177     0085                     	;# 
   178     0086                     	;# 
   179     0087                     	;# 
   180     0088                     	;# 
   181     0089                     	;# 
   182     008C                     	;# 
   183     008D                     	;# 
   184     008E                     	;# 
   185     0091                     	;# 
   186     0092                     	;# 
   187     0093                     	;# 
   188     0094                     	;# 
   189     0098                     	;# 
   190     0099                     	;# 
   191     009C                     	;# 
   192     009D                     	;# 
   193     009E                     	;# 
   194     009F                     	;# 
   195     010C                     	;# 
   196     010D                     	;# 
   197     010E                     	;# 
   198     010F                     	;# 
   199     018C                     	;# 
   200     018D                     	;# 
   201     0000                     	;# 
   202     0001                     	;# 
   203     0002                     	;# 
   204     0003                     	;# 
   205     0004                     	;# 
   206     0005                     	;# 
   207     0006                     	;# 
   208     0007                     	;# 
   209     0008                     	;# 
   210     0009                     	;# 
   211     000A                     	;# 
   212     000B                     	;# 
   213     000C                     	;# 
   214     000D                     	;# 
   215     000E                     	;# 
   216     000E                     	;# 
   217     000F                     	;# 
   218     0010                     	;# 
   219     0011                     	;# 
   220     0012                     	;# 
   221     0013                     	;# 
   222     0014                     	;# 
   223     0015                     	;# 
   224     0015                     	;# 
   225     0016                     	;# 
   226     0017                     	;# 
   227     0018                     	;# 
   228     0019                     	;# 
   229     001A                     	;# 
   230     001B                     	;# 
   231     001B                     	;# 
   232     001C                     	;# 
   233     001D                     	;# 
   234     001E                     	;# 
   235     001F                     	;# 
   236     0081                     	;# 
   237     0085                     	;# 
   238     0086                     	;# 
   239     0087                     	;# 
   240     0088                     	;# 
   241     0089                     	;# 
   242     008C                     	;# 
   243     008D                     	;# 
   244     008E                     	;# 
   245     0091                     	;# 
   246     0092                     	;# 
   247     0093                     	;# 
   248     0094                     	;# 
   249     0098                     	;# 
   250     0099                     	;# 
   251     009C                     	;# 
   252     009D                     	;# 
   253     009E                     	;# 
   254     009F                     	;# 
   255     010C                     	;# 
   256     010D                     	;# 
   257     010E                     	;# 
   258     010F                     	;# 
   259     018C                     	;# 
   260     018D                     	;# 
   261                           
   262                           	psect	stringtext
   263     1000                     __pstringtext:
   264     1000                     stringtab:
   265     1000                     __stringtab:
   266                           
   267                           ;	String table - string pointers are 2 bytes each
   268     1000  1BFF               	btfsc	btemp+1,7
   269     1001  280A               	ljmp	stringcode
   270     1002  1383               	bcf	3,7
   271     1003  187F               	btfsc	btemp+1,0
   272     1004  1783               	bsf	3,7
   273     1005  0800               	movf	0,w
   274     1006  0A84               	incf	4,f
   275     1007  1903               	skipnz
   276     1008  0AFF               	incf	btemp+1,f
   277     1009  0008               	return
   278     100A                     stringcode:
   279     100A  087F               	movf	btemp+1,w
   280     100B  397F               	andlw	127
   281     100C  008A               	movwf	10
   282     100D  0804               	movf	4,w
   283     100E  0A84               	incf	4,f
   284     100F  1903               	skipnz
   285     1010  0AFF               	incf	btemp+1,f
   286     1011  0082               	movwf	2
   287     1012                     __stringbase:
   288     1012                     __end_of__stringtab:
   289     1012                     _dpowers:
   290     1012  3401               	retlw	1
   291     1013  3400               	retlw	0
   292     1014  340A               	retlw	10
   293     1015  3400               	retlw	0
   294     1016  3464               	retlw	100
   295     1017  3400               	retlw	0
   296     1018  34E8               	retlw	232
   297     1019  3403               	retlw	3
   298     101A  3410               	retlw	16
   299     101B  3427               	retlw	39
   300     101C                     __end_of_dpowers:
   301     001E                     _ADRESH	set	30
   302     001F                     _ADCON0bits	set	31
   303     000B                     _INTCONbits	set	11
   304     0001                     _TMR0	set	1
   305     0019                     _TXREG	set	25
   306     0018                     _RCSTA	set	24
   307     0040                     _RD0	set	64
   308     003B                     _RC3	set	59
   309     0049                     _RE1	set	73
   310     0038                     _RC0	set	56
   311     003A                     _RC2	set	58
   312     0048                     _RE0	set	72
   313     004A                     _RE2	set	74
   314     0039                     _RC1	set	57
   315     005A                     _T0IF	set	90
   316     005F                     _GIE	set	95
   317     002C                     _RA4	set	44
   318     0034                     _RB4	set	52
   319     0035                     _RB5	set	53
   320     0030                     _RB0	set	48
   321     0031                     _RB1	set	49
   322     0032                     _RB2	set	50
   323     0033                     _RB3	set	51
   324     009E                     _ADRESL	set	158
   325     009F                     _ADCON1bits	set	159
   326     0081                     _OPTION_REGbits	set	129
   327     0088                     _TRISD	set	136
   328     0086                     _TRISB	set	134
   329     0099                     _SPBRG	set	153
   330     0098                     _TXSTA	set	152
   331     043D                     _TRISC5	set	1085
   332     043C                     _TRISC4	set	1084
   333     042D                     _TRISA5	set	1069
   334     0428                     _TRISA0	set	1064
   335     043F                     _TRISC7	set	1087
   336     043E                     _TRISC6	set	1086
   337     042B                     _TRISA3	set	1067
   338     042A                     _TRISA2	set	1066
   339     0429                     _TRISA1	set	1065
   340     0440                     _TRISD0	set	1088
   341     043B                     _TRISC3	set	1083
   342     0438                     _TRISC0	set	1080
   343     044A                     _TRISE2	set	1098
   344     043A                     _TRISC2	set	1082
   345     0439                     _TRISC1	set	1081
   346     0449                     _TRISE1	set	1097
   347     0448                     _TRISE0	set	1096
   348     042C                     _TRISA4	set	1068
   349     04C1                     _TRMT	set	1217
   350     010C                     _EEDATA	set	268
   351     010D                     _EEADR	set	269
   352     018D                     _EECON2	set	397
   353     0C60                     _RD	set	3168
   354     0C61                     _WR	set	3169
   355     0C62                     _WREN	set	3170
   356     101C                     STR_29:
   357     101C  3420               	retlw	32	;' '
   358     101D  3420               	retlw	32	;' '
   359     101E  3420               	retlw	32	;' '
   360     101F  3449               	retlw	73	;'I'
   361     1020  344C               	retlw	76	;'L'
   362     1021  3445               	retlw	69	;'E'
   363     1022  3452               	retlw	82	;'R'
   364     1023  344C               	retlw	76	;'L'
   365     1024  3445               	retlw	69	;'E'
   366     1025  344D               	retlw	77	;'M'
   367     1026  3445               	retlw	69	;'E'
   368     1027  3420               	retlw	32	;' '
   369     1028  3448               	retlw	72	;'H'
   370     1029  3441               	retlw	65	;'A'
   371     102A  3454               	retlw	84	;'T'
   372     102B  3441               	retlw	65	;'A'
   373     102C  3453               	retlw	83	;'S'
   374     102D  3449               	retlw	73	;'I'
   375     102E  3420               	retlw	32	;' '
   376     102F  3420               	retlw	32	;' '
   377     1030  3420               	retlw	32	;' '
   378     1031  3420               	retlw	32	;' '
   379     1032  3420               	retlw	32	;' '
   380     1033  3420               	retlw	32	;' '
   381     1034  3420               	retlw	32	;' '
   382     1035  3420               	retlw	32	;' '
   383     1036  3400               	retlw	0
   384     1037                     STR_28:
   385     1037  3420               	retlw	32	;' '
   386     1038  3420               	retlw	32	;' '
   387     1039  3420               	retlw	32	;' '
   388     103A  3446               	retlw	70	;'F'
   389     103B  3445               	retlw	69	;'E'
   390     103C  3445               	retlw	69	;'E'
   391     103D  3444               	retlw	68	;'D'
   392     103E  3420               	retlw	32	;' '
   393     103F  3452               	retlw	82	;'R'
   394     1040  3441               	retlw	65	;'A'
   395     1041  3454               	retlw	84	;'T'
   396     1042  3445               	retlw	69	;'E'
   397     1043  3420               	retlw	32	;' '
   398     1044  3445               	retlw	69	;'E'
   399     1045  3452               	retlw	82	;'R'
   400     1046  3452               	retlw	82	;'R'
   401     1047  344F               	retlw	79	;'O'
   402     1048  3452               	retlw	82	;'R'
   403     1049  3420               	retlw	32	;' '
   404     104A  3420               	retlw	32	;' '
   405     104B  3420               	retlw	32	;' '
   406     104C  3420               	retlw	32	;' '
   407     104D  3420               	retlw	32	;' '
   408     104E  3420               	retlw	32	;' '
   409     104F  3420               	retlw	32	;' '
   410     1050  3400               	retlw	0
   411     1051                     STR_33:
   412     1051  3420               	retlw	32	;' '
   413     1052  3420               	retlw	32	;' '
   414     1053  3420               	retlw	32	;' '
   415     1054  3444               	retlw	68	;'D'
   416     1055  344F               	retlw	79	;'O'
   417     1056  344E               	retlw	78	;'N'
   418     1057  344D               	retlw	77	;'M'
   419     1058  3445               	retlw	69	;'E'
   420     1059  3420               	retlw	32	;' '
   421     105A  3448               	retlw	72	;'H'
   422     105B  3441               	retlw	65	;'A'
   423     105C  3454               	retlw	84	;'T'
   424     105D  3441               	retlw	65	;'A'
   425     105E  3453               	retlw	83	;'S'
   426     105F  3449               	retlw	73	;'I'
   427     1060  3420               	retlw	32	;' '
   428     1061  3420               	retlw	32	;' '
   429     1062  3420               	retlw	32	;' '
   430     1063  3420               	retlw	32	;' '
   431     1064  3420               	retlw	32	;' '
   432     1065  3420               	retlw	32	;' '
   433     1066  3420               	retlw	32	;' '
   434     1067  3420               	retlw	32	;' '
   435     1068  3400               	retlw	0
   436     1069                     STR_32:
   437     1069  3420               	retlw	32	;' '
   438     106A  3420               	retlw	32	;' '
   439     106B  3420               	retlw	32	;' '
   440     106C  3452               	retlw	82	;'R'
   441     106D  344F               	retlw	79	;'O'
   442     106E  3454               	retlw	84	;'T'
   443     106F  3441               	retlw	65	;'A'
   444     1070  3454               	retlw	84	;'T'
   445     1071  3449               	retlw	73	;'I'
   446     1072  344F               	retlw	79	;'O'
   447     1073  344E               	retlw	78	;'N'
   448     1074  3420               	retlw	32	;' '
   449     1075  3445               	retlw	69	;'E'
   450     1076  3452               	retlw	82	;'R'
   451     1077  3452               	retlw	82	;'R'
   452     1078  344F               	retlw	79	;'O'
   453     1079  3452               	retlw	82	;'R'
   454     107A  3420               	retlw	32	;' '
   455     107B  3420               	retlw	32	;' '
   456     107C  3420               	retlw	32	;' '
   457     107D  3420               	retlw	32	;' '
   458     107E  3420               	retlw	32	;' '
   459     107F  3420               	retlw	32	;' '
   460     1080  3400               	retlw	0
   461     1081                     STR_7:
   462     1081  3450               	retlw	80	;'P'
   463     1082  3455               	retlw	85	;'U'
   464     1083  3454               	retlw	84	;'T'
   465     1084  3420               	retlw	32	;' '
   466     1085  3449               	retlw	73	;'I'
   467     1086  3454               	retlw	84	;'T'
   468     1087  3420               	retlw	32	;' '
   469     1088  3449               	retlw	73	;'I'
   470     1089  344E               	retlw	78	;'N'
   471     108A  3420               	retlw	32	;' '
   472     108B  3453               	retlw	83	;'S'
   473     108C  3454               	retlw	84	;'T'
   474     108D  344F               	retlw	79	;'O'
   475     108E  3450               	retlw	80	;'P'
   476     108F  3420               	retlw	32	;' '
   477     1090  3453               	retlw	83	;'S'
   478     1091  3454               	retlw	84	;'T'
   479     1092  3441               	retlw	65	;'A'
   480     1093  3454               	retlw	84	;'T'
   481     1094  3445               	retlw	69	;'E'
   482     1095  3400               	retlw	0
   483     1096                     STR_6:
   484     1096  3453               	retlw	83	;'S'
   485     1097  3454               	retlw	84	;'T'
   486     1098  344F               	retlw	79	;'O'
   487     1099  3450               	retlw	80	;'P'
   488     109A  3420               	retlw	32	;' '
   489     109B  3444               	retlw	68	;'D'
   490     109C  3455               	retlw	85	;'U'
   491     109D  3452               	retlw	82	;'R'
   492     109E  3455               	retlw	85	;'U'
   493     109F  344D               	retlw	77	;'M'
   494     10A0  3455               	retlw	85	;'U'
   495     10A1  344E               	retlw	78	;'N'
   496     10A2  3441               	retlw	65	;'A'
   497     10A3  3420               	retlw	32	;' '
   498     10A4  3447               	retlw	71	;'G'
   499     10A5  3445               	retlw	69	;'E'
   500     10A6  3454               	retlw	84	;'T'
   501     10A7  3449               	retlw	73	;'I'
   502     10A8  3452               	retlw	82	;'R'
   503     10A9  3400               	retlw	0
   504     10AA                     STR_1:
   505     10AA  3459               	retlw	89	;'Y'
   506     10AB  3441               	retlw	65	;'A'
   507     10AC  3447               	retlw	71	;'G'
   508     10AD  3420               	retlw	32	;' '
   509     10AE  3442               	retlw	66	;'B'
   510     10AF  3441               	retlw	65	;'A'
   511     10B0  344B               	retlw	75	;'K'
   512     10B1  3449               	retlw	73	;'I'
   513     10B2  344D               	retlw	77	;'M'
   514     10B3  3449               	retlw	73	;'I'
   515     10B4  3420               	retlw	32	;' '
   516     10B5  3459               	retlw	89	;'Y'
   517     10B6  3441               	retlw	65	;'A'
   518     10B7  3450               	retlw	80	;'P'
   519     10B8  3449               	retlw	73	;'I'
   520     10B9  344E               	retlw	78	;'N'
   521     10BA  3449               	retlw	73	;'I'
   522     10BB  345A               	retlw	90	;'Z'
   523     10BC  3400               	retlw	0
   524     10BD                     STR_3:
   525     10BD  3455               	retlw	85	;'U'
   526     10BE  345A               	retlw	90	;'Z'
   527     10BF  344D               	retlw	77	;'M'
   528     10C0  3441               	retlw	65	;'A'
   529     10C1  344E               	retlw	78	;'N'
   530     10C2  344C               	retlw	76	;'L'
   531     10C3  3441               	retlw	65	;'A'
   532     10C4  3452               	retlw	82	;'R'
   533     10C5  3420               	retlw	32	;' '
   534     10C6  344D               	retlw	77	;'M'
   535     10C7  3441               	retlw	65	;'A'
   536     10C8  344B               	retlw	75	;'K'
   537     10C9  3449               	retlw	73	;'I'
   538     10CA  344E               	retlw	78	;'N'
   539     10CB  3441               	retlw	65	;'A'
   540     10CC  3400               	retlw	0
   541     10CD                     STR_18:
   542     10CD  3420               	retlw	32	;' '
   543     10CE  3446               	retlw	70	;'F'
   544     10CF  3457               	retlw	87	;'W'
   545     10D0  3444               	retlw	68	;'D'
   546     10D1  3420               	retlw	32	;' '
   547     10D2  3420               	retlw	32	;' '
   548     10D3  3420               	retlw	32	;' '
   549     10D4  3420               	retlw	32	;' '
   550     10D5  3420               	retlw	32	;' '
   551     10D6  3420               	retlw	32	;' '
   552     10D7  3420               	retlw	32	;' '
   553     10D8  3420               	retlw	32	;' '
   554     10D9  3420               	retlw	32	;' '
   555     10DA  3420               	retlw	32	;' '
   556     10DB  3400               	retlw	0
   557     10DC                     STR_4:
   558     10DC  3477               	retlw	119	;'w'
   559     10DD  3477               	retlw	119	;'w'
   560     10DE  3477               	retlw	119	;'w'
   561     10DF  342E               	retlw	46	;'.'
   562     10E0  3462               	retlw	98	;'b'
   563     10E1  346F               	retlw	111	;'o'
   564     10E2  3472               	retlw	114	;'r'
   565     10E3  3476               	retlw	118	;'v'
   566     10E4  3465               	retlw	101	;'e'
   567     10E5  346B               	retlw	107	;'k'
   568     10E6  342E               	retlw	46	;'.'
   569     10E7  3463               	retlw	99	;'c'
   570     10E8  346F               	retlw	111	;'o'
   571     10E9  346D               	retlw	109	;'m'
   572     10EA  3400               	retlw	0
   573     10EB                     STR_24:
   574     10EB  3420               	retlw	32	;' '
   575     10EC  3452               	retlw	82	;'R'
   576     10ED  3445               	retlw	69	;'E'
   577     10EE  3457               	retlw	87	;'W'
   578     10EF  3420               	retlw	32	;' '
   579     10F0  3420               	retlw	32	;' '
   580     10F1  3420               	retlw	32	;' '
   581     10F2  3420               	retlw	32	;' '
   582     10F3  3420               	retlw	32	;' '
   583     10F4  3420               	retlw	32	;' '
   584     10F5  3420               	retlw	32	;' '
   585     10F6  3420               	retlw	32	;' '
   586     10F7  3420               	retlw	32	;' '
   587     10F8  3400               	retlw	0
   588     10F9                     STR_2:
   589     10F9  344F               	retlw	79	;'O'
   590     10FA  3449               	retlw	73	;'I'
   591     10FB  344C               	retlw	76	;'L'
   592     10FC  3420               	retlw	32	;' '
   593     10FD  3454               	retlw	84	;'T'
   594     10FE  3448               	retlw	72	;'H'
   595     10FF  3445               	retlw	69	;'E'
   596     1100  3420               	retlw	32	;' '
   597     1101  3447               	retlw	71	;'G'
   598     1102  3445               	retlw	69	;'E'
   599     1103  3441               	retlw	65	;'A'
   600     1104  3452               	retlw	82	;'R'
   601     1105  3453               	retlw	83	;'S'
   602     1106  3400               	retlw	0
   603     1107                     STR_26:
   604     1107  3420               	retlw	32	;' '
   605     1108  3453               	retlw	83	;'S'
   606     1109  3454               	retlw	84	;'T'
   607     110A  344F               	retlw	79	;'O'
   608     110B  3450               	retlw	80	;'P'
   609     110C  3420               	retlw	32	;' '
   610     110D  3420               	retlw	32	;' '
   611     110E  3420               	retlw	32	;' '
   612     110F  3420               	retlw	32	;' '
   613     1110  3420               	retlw	32	;' '
   614     1111  3420               	retlw	32	;' '
   615     1112  3420               	retlw	32	;' '
   616     1113  3400               	retlw	0
   617     1114                     STR_8:
   618     1114  3425               	retlw	37	;'%'
   619     1115  3435               	retlw	53	;'5'
   620     1116  3475               	retlw	117	;'u'
   621     1117  3468               	retlw	104	;'h'
   622     1118  3420               	retlw	32	;' '
   623     1119  3425               	retlw	37	;'%'
   624     111A  3430               	retlw	48	;'0'
   625     111B  3432               	retlw	50	;'2'
   626     111C  3475               	retlw	117	;'u'
   627     111D  346D               	retlw	109	;'m'
   628     111E  3400               	retlw	0
   629     111F                     STR_10:
   630     111F  3446               	retlw	70	;'F'
   631     1120  3465               	retlw	101	;'e'
   632     1121  3465               	retlw	101	;'e'
   633     1122  3464               	retlw	100	;'d'
   634     1123  3452               	retlw	82	;'R'
   635     1124  3461               	retlw	97	;'a'
   636     1125  3474               	retlw	116	;'t'
   637     1126  3465               	retlw	101	;'e'
   638     1127  343A               	retlw	58	;':'
   639     1128  3400               	retlw	0
   640     1129                     STR_16:
   641     1129  3420               	retlw	32	;' '
   642     112A  3446               	retlw	70	;'F'
   643     112B  3457               	retlw	87	;'W'
   644     112C  3444               	retlw	68	;'D'
   645     112D  3420               	retlw	32	;' '
   646     112E  3431               	retlw	49	;'1'
   647     112F  342E               	retlw	46	;'.'
   648     1130  3436               	retlw	54	;'6'
   649     1131  344B               	retlw	75	;'K'
   650     1132  3400               	retlw	0
   651     1133                     STR_22:
   652     1133  3420               	retlw	32	;' '
   653     1134  3452               	retlw	82	;'R'
   654     1135  3445               	retlw	69	;'E'
   655     1136  3457               	retlw	87	;'W'
   656     1137  3420               	retlw	32	;' '
   657     1138  3431               	retlw	49	;'1'
   658     1139  342E               	retlw	46	;'.'
   659     113A  3436               	retlw	54	;'6'
   660     113B  344B               	retlw	75	;'K'
   661     113C  3400               	retlw	0
   662     113D                     STR_13:
   663     113D  3425               	retlw	37	;'%'
   664     113E  3475               	retlw	117	;'u'
   665     113F  3425               	retlw	37	;'%'
   666     1140  3475               	retlw	117	;'u'
   667     1141  3425               	retlw	37	;'%'
   668     1142  3475               	retlw	117	;'u'
   669     1143  342E               	retlw	46	;'.'
   670     1144  3425               	retlw	37	;'%'
   671     1145  3475               	retlw	117	;'u'
   672     1146  3400               	retlw	0
   673     1147                     STR_14:
   674     1147  3420               	retlw	32	;' '
   675     1148  3446               	retlw	70	;'F'
   676     1149  3457               	retlw	87	;'W'
   677     114A  3444               	retlw	68	;'D'
   678     114B  3420               	retlw	32	;' '
   679     114C  344C               	retlw	76	;'L'
   680     114D  344D               	retlw	77	;'M'
   681     114E  3454               	retlw	84	;'T'
   682     114F  3400               	retlw	0
   683     1150                     STR_20:
   684     1150  3420               	retlw	32	;' '
   685     1151  3452               	retlw	82	;'R'
   686     1152  3445               	retlw	69	;'E'
   687     1153  3457               	retlw	87	;'W'
   688     1154  3420               	retlw	32	;' '
   689     1155  344C               	retlw	76	;'L'
   690     1156  344D               	retlw	77	;'M'
   691     1157  3454               	retlw	84	;'T'
   692     1158  3400               	retlw	0
   693     1159                     STR_17:
   694     1159  3473               	retlw	115	;'s'
   695     115A  3425               	retlw	37	;'%'
   696     115B  3464               	retlw	100	;'d'
   697     115C  340D               	retlw	13
   698     115D  340A               	retlw	10
   699     115E  3400               	retlw	0
   700     115F                     STR_11:
   701     115F  3425               	retlw	37	;'%'
   702     1160  3430               	retlw	48	;'0'
   703     1161  3430               	retlw	48	;'0'
   704     1162  3433               	retlw	51	;'3'
   705     1163  3475               	retlw	117	;'u'
   706     1164  3400               	retlw	0
   707     1165                     STR_15:
   708     1165  3473               	retlw	115	;'s'
   709     1166  3430               	retlw	48	;'0'
   710     1167  340D               	retlw	13
   711     1168  340A               	retlw	10
   712     1169  3400               	retlw	0
   713     116A                     STR_12:
   714     116A  3452               	retlw	82	;'R'
   715     116B  3450               	retlw	80	;'P'
   716     116C  344D               	retlw	77	;'M'
   717     116D  343A               	retlw	58	;':'
   718     116E  3400               	retlw	0
   719     116F                     STR_5:
   720     116F  3456               	retlw	86	;'V'
   721     1170  3433               	retlw	51	;'3'
   722     1171  3400               	retlw	0
   723     1165                     
   724                           	psect	cinit
   725     0011                     start_initialization:	
   726                           ; #config settings
   727                           
   728     0011                     __initialization:
   729                           
   730                           ; Clear objects allocated to COMMON
   731     0011  01F7               	clrf	__pbssCOMMON& (0+127)
   732     0012  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   733     0013  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   734     0014  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   735                           
   736                           ; Clear objects allocated to BANK3
   737     0015  1683               	bsf	3,5	;RP0=1, select bank3
   738     0016  1703               	bsf	3,6	;RP1=1, select bank3
   739     0017  01A8               	clrf	__pbssBANK3& (0+127)
   740     0018  01A9               	clrf	(__pbssBANK3+1)& (0+127)
   741     0019  01AA               	clrf	(__pbssBANK3+2)& (0+127)
   742     001A  01AB               	clrf	(__pbssBANK3+3)& (0+127)
   743     001B  01AC               	clrf	(__pbssBANK3+4)& (0+127)
   744     001C  01AD               	clrf	(__pbssBANK3+5)& (0+127)
   745     001D  01AE               	clrf	(__pbssBANK3+6)& (0+127)
   746     001E  01AF               	clrf	(__pbssBANK3+7)& (0+127)
   747     001F                     end_of_initialization:	
   748                           ;End of C runtime variable initialization code
   749                           
   750     001F                     __end_of__initialization:
   751     001F  0183               	clrf	3
   752     0020  160A  118A  2E9C   	ljmp	_main	;jump to C main() function
   753                           
   754                           	psect	bssCOMMON
   755     0077                     __pbssCOMMON:
   756     0077                     _kesmeSayaci:
   757     0077                     	ds	2
   758     0079                     _eepromWRclc:
   759     0079                     	ds	2
   760                           
   761                           	psect	bssBANK3
   762     01A8                     __pbssBANK3:
   763     01A8                     _currentTime:
   764     01A8                     	ds	8
   765                           
   766                           	psect	cstackBANK3
   767     0190                     __pcstackBANK3:
   768     0190                     main@negativeDisplayValue:
   769                           
   770                           ; 2 bytes @ 0x0
   771     0190                     	ds	2
   772     0192                     main@ilkAcilis:
   773                           
   774                           ; 2 bytes @ 0x2
   775     0192                     	ds	2
   776     0194                     main@adcValue1:
   777                           
   778                           ; 4 bytes @ 0x4
   779     0194                     	ds	4
   780     0198                     main@yuzler:
   781                           
   782                           ; 2 bytes @ 0x8
   783     0198                     	ds	2
   784     019A                     main@binler:
   785                           
   786                           ; 2 bytes @ 0xA
   787     019A                     	ds	2
   788     019C                     main@integerPart:
   789                           
   790                           ; 4 bytes @ 0xC
   791     019C                     	ds	4
   792     01A0                     main@epromAdresi:
   793                           
   794                           ; 2 bytes @ 0x10
   795     01A0                     	ds	2
   796     01A2                     main@negativeFeedValue:
   797                           
   798                           ; 2 bytes @ 0x12
   799     01A2                     	ds	2
   800     01A4                     main@realSaat:
   801                           
   802                           ; 2 bytes @ 0x14
   803     01A4                     	ds	2
   804     01A6                     main@displayValue:
   805                           
   806                           ; 2 bytes @ 0x16
   807     01A6                     	ds	2
   808                           
   809                           	psect	cstackBANK1
   810     00A0                     __pcstackBANK1:
   811     00A0                     main@combinedText_376:
   812                           
   813                           ; 20 bytes @ 0x0
   814     00A0                     	ds	20
   815     00B4                     main@lcdText:
   816                           
   817                           ; 9 bytes @ 0x14
   818     00B4                     	ds	9
   819     00BD                     main@uartMessage:
   820                           
   821                           ; 8 bytes @ 0x1D
   822     00BD                     	ds	8
   823     00C5                     main@uartMessage_372:
   824                           
   825                           ; 8 bytes @ 0x25
   826     00C5                     	ds	8
   827     00CD                     main@adcValue3:
   828                           
   829                           ; 4 bytes @ 0x2D
   830     00CD                     	ds	4
   831     00D1                     main@oranValue:
   832                           
   833                           ; 4 bytes @ 0x31
   834     00D1                     	ds	4
   835     00D5                     main@gostermeliklcd:
   836                           
   837                           ; 4 bytes @ 0x35
   838     00D5                     	ds	4
   839     00D9                     _main$1030:
   840                           
   841                           ; 4 bytes @ 0x39
   842     00D9                     	ds	4
   843     00DD                     main@rpmString:
   844                           
   845                           ; 5 bytes @ 0x3D
   846     00DD                     	ds	5
   847     00E2                     main@adcValue2:
   848                           
   849                           ; 2 bytes @ 0x42
   850     00E2                     	ds	2
   851     00E4                     main@olmazlar:
   852                           
   853                           ; 2 bytes @ 0x44
   854     00E4                     	ds	2
   855     00E6                     main@dakika:
   856                           
   857                           ; 2 bytes @ 0x46
   858     00E6                     	ds	2
   859     00E8                     main@onlar:
   860                           
   861                           ; 2 bytes @ 0x48
   862     00E8                     	ds	2
   863     00EA                     main@birler:
   864                           
   865                           ; 2 bytes @ 0x4A
   866     00EA                     	ds	2
   867     00EC                     main@adcString1:
   868                           
   869                           ; 4 bytes @ 0x4C
   870     00EC                     	ds	4
   871                           
   872                           	psect	cstackCOMMON
   873     0070                     __pcstackCOMMON:
   874     0070                     ?_isdigit:
   875     0070                     ?_UART_Initialize:	
   876                           ; 1 bit 
   877                           
   878     0070                     ?_UART_Write:	
   879                           ; 1 bytes @ 0x0
   880                           
   881     0070                     ?_Lcd_Port:	
   882                           ; 1 bytes @ 0x0
   883                           
   884     0070                     ?_Lcd_Cmd:	
   885                           ; 1 bytes @ 0x0
   886                           
   887     0070                     ?_Lcd_Clear:	
   888                           ; 1 bytes @ 0x0
   889                           
   890     0070                     ?_Lcd_Init:	
   891                           ; 1 bytes @ 0x0
   892                           
   893     0070                     ?_Lcd_Write_Char:	
   894                           ; 1 bytes @ 0x0
   895                           
   896     0070                     ?_yagBakim:	
   897                           ; 1 bytes @ 0x0
   898                           
   899     0070                     ?_incrementTime:	
   900                           ; 1 bytes @ 0x0
   901                           
   902     0070                     ??_incrementTime:	
   903                           ; 1 bytes @ 0x0
   904                           
   905     0070                     ?_timer_isr:	
   906                           ; 1 bytes @ 0x0
   907                           
   908     0070                     ?i1_writeEEPROM:	
   909                           ; 1 bytes @ 0x0
   910                           
   911     0070                     ?_main:	
   912                           ; 1 bytes @ 0x0
   913                           
   914     0070                     i1writeEEPROM@address:	
   915                           ; 2 bytes @ 0x0
   916                           
   917                           
   918                           ; 2 bytes @ 0x0
   919     0070                     	ds	2
   920     0072                     incrementTime@time:
   921     0072                     i1writeEEPROM@data:	
   922                           ; 1 bytes @ 0x2
   923                           
   924                           
   925                           ; 2 bytes @ 0x2
   926     0072                     	ds	2
   927     0074                     ??_timer_isr:
   928     0074                     ??i1_writeEEPROM:	
   929                           ; 1 bytes @ 0x4
   930                           
   931                           
   932                           ; 1 bytes @ 0x4
   933     0074                     	ds	3
   934                           
   935                           	psect	cstackBANK0
   936     0020                     __pcstackBANK0:
   937     0020                     ??_isdigit:
   938     0020                     ??_UART_Initialize:	
   939                           ; 1 bytes @ 0x0
   940                           
   941     0020                     ??_UART_Write:	
   942                           ; 1 bytes @ 0x0
   943                           
   944     0020                     ??_Lcd_Port:	
   945                           ; 1 bytes @ 0x0
   946                           
   947     0020                     ?_writeEEPROM:	
   948                           ; 1 bytes @ 0x0
   949                           
   950     0020                     ?__Umul8_16:	
   951                           ; 1 bytes @ 0x0
   952                           
   953     0020                     ?_readEEPROM:	
   954                           ; 2 bytes @ 0x0
   955                           
   956     0020                     ?___lwdiv:	
   957                           ; 2 bytes @ 0x0
   958                           
   959     0020                     ?___fltol:	
   960                           ; 2 bytes @ 0x0
   961                           
   962     0020                     ?___fldiv:	
   963                           ; 4 bytes @ 0x0
   964                           
   965     0020                     ?___xxtofl:	
   966                           ; 4 bytes @ 0x0
   967                           
   968     0020                     UART_Write@data:	
   969                           ; 4 bytes @ 0x0
   970                           
   971     0020                     Lcd_Port@a:	
   972                           ; 1 bytes @ 0x0
   973                           
   974     0020                     __Umul8_16@multiplicand:	
   975                           ; 1 bytes @ 0x0
   976                           
   977     0020                     _isdigit$839:	
   978                           ; 1 bytes @ 0x0
   979                           
   980     0020                     writeEEPROM@address:	
   981                           ; 1 bytes @ 0x0
   982                           
   983     0020                     readEEPROM@address:	
   984                           ; 2 bytes @ 0x0
   985                           
   986     0020                     ___lwdiv@divisor:	
   987                           ; 2 bytes @ 0x0
   988                           
   989     0020                     ___fltol@f1:	
   990                           ; 2 bytes @ 0x0
   991                           
   992     0020                     ___fldiv@a:	
   993                           ; 4 bytes @ 0x0
   994                           
   995     0020                     ___xxtofl@val:	
   996                           ; 4 bytes @ 0x0
   997                           
   998                           
   999                           ; 4 bytes @ 0x0
  1000     0020                     	ds	1
  1001     0021                     ?_UART_Write_Text:
  1002     0021                     ??_Lcd_Cmd:	
  1003                           ; 1 bytes @ 0x1
  1004                           
  1005     0021                     ??_Lcd_Write_Char:	
  1006                           ; 1 bytes @ 0x1
  1007                           
  1008     0021                     isdigit@c:	
  1009                           ; 1 bytes @ 0x1
  1010                           
  1011     0021                     UART_Write_Text@text:	
  1012                           ; 1 bytes @ 0x1
  1013                           
  1014                           
  1015                           ; 2 bytes @ 0x1
  1016     0021                     	ds	1
  1017     0022                     ??__Umul8_16:
  1018     0022                     ??_readEEPROM:	
  1019                           ; 1 bytes @ 0x2
  1020                           
  1021     0022                     Lcd_Write_Char@temp:	
  1022                           ; 1 bytes @ 0x2
  1023                           
  1024     0022                     writeEEPROM@data:	
  1025                           ; 1 bytes @ 0x2
  1026                           
  1027     0022                     ___lwdiv@dividend:	
  1028                           ; 2 bytes @ 0x2
  1029                           
  1030                           
  1031                           ; 2 bytes @ 0x2
  1032     0022                     	ds	1
  1033     0023                     ??_UART_Write_Text:
  1034     0023                     Lcd_Cmd@a:	
  1035                           ; 1 bytes @ 0x3
  1036                           
  1037     0023                     Lcd_Write_Char@y:	
  1038                           ; 1 bytes @ 0x3
  1039                           
  1040                           
  1041                           ; 1 bytes @ 0x3
  1042     0023                     	ds	1
  1043     0024                     ??_Lcd_Clear:
  1044     0024                     ?_Lcd_Set_Cursor:	
  1045                           ; 1 bytes @ 0x4
  1046                           
  1047     0024                     ??_Lcd_Init:	
  1048                           ; 1 bytes @ 0x4
  1049                           
  1050     0024                     ??_writeEEPROM:	
  1051                           ; 1 bytes @ 0x4
  1052                           
  1053     0024                     ??___fltol:	
  1054                           ; 1 bytes @ 0x4
  1055                           
  1056     0024                     ??___lwdiv:	
  1057                           ; 1 bytes @ 0x4
  1058                           
  1059     0024                     ??___xxtofl:	
  1060                           ; 1 bytes @ 0x4
  1061                           
  1062     0024                     ?___wmul:	
  1063                           ; 1 bytes @ 0x4
  1064                           
  1065     0024                     Lcd_Set_Cursor@b:	
  1066                           ; 2 bytes @ 0x4
  1067                           
  1068     0024                     Lcd_Write_Char@a:	
  1069                           ; 1 bytes @ 0x4
  1070                           
  1071     0024                     ___lwdiv@counter:	
  1072                           ; 1 bytes @ 0x4
  1073                           
  1074     0024                     ___wmul@multiplier:	
  1075                           ; 1 bytes @ 0x4
  1076                           
  1077     0024                     __Umul8_16@product:	
  1078                           ; 2 bytes @ 0x4
  1079                           
  1080     0024                     ___fldiv@b:	
  1081                           ; 2 bytes @ 0x4
  1082                           
  1083                           
  1084                           ; 4 bytes @ 0x4
  1085     0024                     	ds	1
  1086     0025                     ??_Lcd_Set_Cursor:
  1087     0025                     ?_Lcd_Write_String:	
  1088                           ; 1 bytes @ 0x5
  1089                           
  1090     0025                     Lcd_Write_String@a:	
  1091                           ; 1 bytes @ 0x5
  1092                           
  1093     0025                     ___lwdiv@quotient:	
  1094                           ; 2 bytes @ 0x5
  1095                           
  1096                           
  1097                           ; 2 bytes @ 0x5
  1098     0025                     	ds	1
  1099     0026                     Lcd_Set_Cursor@a:
  1100     0026                     UART_Write_Text@i:	
  1101                           ; 1 bytes @ 0x6
  1102                           
  1103     0026                     ___wmul@multiplicand:	
  1104                           ; 2 bytes @ 0x6
  1105                           
  1106     0026                     __Umul8_16@word_mpld:	
  1107                           ; 2 bytes @ 0x6
  1108                           
  1109                           
  1110                           ; 2 bytes @ 0x6
  1111     0026                     	ds	1
  1112     0027                     ??_Lcd_Write_String:
  1113     0027                     ?___lwmod:	
  1114                           ; 1 bytes @ 0x7
  1115                           
  1116     0027                     Lcd_Set_Cursor@z:	
  1117                           ; 2 bytes @ 0x7
  1118                           
  1119     0027                     ___lwmod@divisor:	
  1120                           ; 1 bytes @ 0x7
  1121                           
  1122                           
  1123                           ; 2 bytes @ 0x7
  1124     0027                     	ds	1
  1125     0028                     ??___wmul:
  1126     0028                     ??___fldiv:	
  1127                           ; 1 bytes @ 0x8
  1128                           
  1129     0028                     Lcd_Set_Cursor@y:	
  1130                           ; 1 bytes @ 0x8
  1131                           
  1132     0028                     ___fltol@sign1:	
  1133                           ; 1 bytes @ 0x8
  1134                           
  1135     0028                     __Umul8_16@multiplier:	
  1136                           ; 1 bytes @ 0x8
  1137                           
  1138     0028                     ___xxtofl@sign:	
  1139                           ; 1 bytes @ 0x8
  1140                           
  1141     0028                     ___wmul@product:	
  1142                           ; 1 bytes @ 0x8
  1143                           
  1144                           
  1145                           ; 2 bytes @ 0x8
  1146     0028                     	ds	1
  1147     0029                     Lcd_Set_Cursor@temp:
  1148     0029                     ___fltol@exp1:	
  1149                           ; 1 bytes @ 0x9
  1150                           
  1151     0029                     ___xxtofl@exp:	
  1152                           ; 1 bytes @ 0x9
  1153                           
  1154     0029                     ___lwmod@dividend:	
  1155                           ; 1 bytes @ 0x9
  1156                           
  1157                           
  1158                           ; 2 bytes @ 0x9
  1159     0029                     	ds	1
  1160     002A                     ?___awdiv:
  1161     002A                     ?___awmod:	
  1162                           ; 2 bytes @ 0xA
  1163                           
  1164     002A                     Lcd_Write_String@i:	
  1165                           ; 2 bytes @ 0xA
  1166                           
  1167     002A                     ___awdiv@divisor:	
  1168                           ; 2 bytes @ 0xA
  1169                           
  1170     002A                     ___awmod@divisor:	
  1171                           ; 2 bytes @ 0xA
  1172                           
  1173     002A                     ___xxtofl@arg:	
  1174                           ; 2 bytes @ 0xA
  1175                           
  1176                           
  1177                           ; 4 bytes @ 0xA
  1178     002A                     	ds	1
  1179     002B                     ??___lwmod:
  1180     002B                     ___lwmod@counter:	
  1181                           ; 1 bytes @ 0xB
  1182                           
  1183                           
  1184                           ; 1 bytes @ 0xB
  1185     002B                     	ds	1
  1186     002C                     ??_yagBakim:
  1187     002C                     ?_sprintf:	
  1188                           ; 1 bytes @ 0xC
  1189                           
  1190     002C                     yagBakim@i:	
  1191                           ; 2 bytes @ 0xC
  1192                           
  1193     002C                     sprintf@f:	
  1194                           ; 2 bytes @ 0xC
  1195                           
  1196     002C                     ___awdiv@dividend:	
  1197                           ; 2 bytes @ 0xC
  1198                           
  1199     002C                     ___awmod@dividend:	
  1200                           ; 2 bytes @ 0xC
  1201                           
  1202                           
  1203                           ; 2 bytes @ 0xC
  1204     002C                     	ds	1
  1205     002D                     ___fldiv@rem:
  1206                           
  1207                           ; 4 bytes @ 0xD
  1208     002D                     	ds	1
  1209     002E                     ??___awdiv:
  1210     002E                     ??___awmod:	
  1211                           ; 1 bytes @ 0xE
  1212                           
  1213     002E                     ___awdiv@counter:	
  1214                           ; 1 bytes @ 0xE
  1215                           
  1216     002E                     ___awmod@counter:	
  1217                           ; 1 bytes @ 0xE
  1218                           
  1219                           
  1220                           ; 1 bytes @ 0xE
  1221     002E                     	ds	1
  1222     002F                     ___awdiv@sign:
  1223     002F                     ___awmod@sign:	
  1224                           ; 1 bytes @ 0xF
  1225                           
  1226                           
  1227                           ; 1 bytes @ 0xF
  1228     002F                     	ds	1
  1229     0030                     ___awdiv@quotient:
  1230                           
  1231                           ; 2 bytes @ 0x10
  1232     0030                     	ds	1
  1233     0031                     ___fldiv@sign:
  1234                           
  1235                           ; 1 bytes @ 0x11
  1236     0031                     	ds	1
  1237     0032                     ___fldiv@new_exp:
  1238                           
  1239                           ; 2 bytes @ 0x12
  1240     0032                     	ds	2
  1241     0034                     ___fldiv@grs:
  1242                           
  1243                           ; 4 bytes @ 0x14
  1244     0034                     	ds	2
  1245     0036                     ??_sprintf:
  1246                           
  1247                           ; 1 bytes @ 0x16
  1248     0036                     	ds	2
  1249     0038                     ___fldiv@bexp:
  1250                           
  1251                           ; 1 bytes @ 0x18
  1252     0038                     	ds	1
  1253     0039                     ___fldiv@aexp:
  1254                           
  1255                           ; 1 bytes @ 0x19
  1256     0039                     	ds	1
  1257     003A                     ?___flmul:
  1258     003A                     sprintf@prec:	
  1259                           ; 4 bytes @ 0x1A
  1260                           
  1261     003A                     ___flmul@b:	
  1262                           ; 1 bytes @ 0x1A
  1263                           
  1264                           
  1265                           ; 4 bytes @ 0x1A
  1266     003A                     	ds	1
  1267     003B                     sprintf@ap:
  1268                           
  1269                           ; 1 bytes @ 0x1B
  1270     003B                     	ds	1
  1271     003C                     sprintf@val:
  1272                           
  1273                           ; 2 bytes @ 0x1C
  1274     003C                     	ds	2
  1275     003E                     sprintf@flag:
  1276     003E                     ___flmul@a:	
  1277                           ; 1 bytes @ 0x1E
  1278                           
  1279                           
  1280                           ; 4 bytes @ 0x1E
  1281     003E                     	ds	1
  1282     003F                     sprintf@width:
  1283                           
  1284                           ; 2 bytes @ 0x1F
  1285     003F                     	ds	2
  1286     0041                     sprintf@c:
  1287                           
  1288                           ; 1 bytes @ 0x21
  1289     0041                     	ds	1
  1290     0042                     ??___flmul:
  1291     0042                     sprintf@sp:	
  1292                           ; 1 bytes @ 0x22
  1293                           
  1294                           
  1295                           ; 1 bytes @ 0x22
  1296     0042                     	ds	5
  1297     0047                     ___flmul@sign:
  1298                           
  1299                           ; 1 bytes @ 0x27
  1300     0047                     	ds	1
  1301     0048                     ___flmul@grs:
  1302                           
  1303                           ; 4 bytes @ 0x28
  1304     0048                     	ds	4
  1305     004C                     ___flmul@aexp:
  1306                           
  1307                           ; 1 bytes @ 0x2C
  1308     004C                     	ds	1
  1309     004D                     ___flmul@bexp:
  1310                           
  1311                           ; 1 bytes @ 0x2D
  1312     004D                     	ds	1
  1313     004E                     ___flmul@prod:
  1314                           
  1315                           ; 4 bytes @ 0x2E
  1316     004E                     	ds	4
  1317     0052                     ___flmul@temp:
  1318                           
  1319                           ; 2 bytes @ 0x32
  1320     0052                     	ds	2
  1321     0054                     ??_main:
  1322                           
  1323                           ; 1 bytes @ 0x34
  1324     0054                     	ds	6
  1325     005A                     main@combinedText:
  1326                           
  1327                           ; 20 bytes @ 0x3A
  1328     005A                     	ds	20
  1329                           
  1330                           	psect	maintext
  1331     169C                     __pmaintext:	
  1332 ;;
  1333 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
  1334 ;;
  1335 ;; *************** function _main *****************
  1336 ;; Defined at:
  1337 ;;		line 117 in file "main1.c"
  1338 ;; Parameters:    Size  Location     Type
  1339 ;;		None
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;  uartMessage     8   37[BANK1 ] unsigned char [8]
  1342 ;;  uartMessage     8   29[BANK1 ] unsigned char [8]
  1343 ;;  combinedText   20    0[BANK1 ] unsigned char [20]
  1344 ;;  negativeDisp    2    0[BANK3 ] int 
  1345 ;;  negativeFeed    2   18[BANK3 ] int 
  1346 ;;  combinedText   20   58[BANK0 ] unsigned char [20]
  1347 ;;  olmazlar        2   68[BANK1 ] int 
  1348 ;;  rpmString       5   61[BANK1 ] unsigned char [5]
  1349 ;;  adcString1      4   76[BANK1 ] unsigned char [4]
  1350 ;;  integerPart     4   12[BANK3 ] float 
  1351 ;;  gostermelikl    4   53[BANK1 ] float 
  1352 ;;  oranValue       4   49[BANK1 ] float 
  1353 ;;  realSaat        2   20[BANK3 ] int 
  1354 ;;  binler          2   10[BANK3 ] int 
  1355 ;;  yuzler          2    8[BANK3 ] int 
  1356 ;;  birler          2   74[BANK1 ] int 
  1357 ;;  onlar           2   72[BANK1 ] int 
  1358 ;;  dakika          2   70[BANK1 ] int 
  1359 ;;  epromAdresi     2   16[BANK3 ] int 
  1360 ;;  lcdText         9   20[BANK1 ] unsigned char [9]
  1361 ;;  adcValue1       4    4[BANK3 ] float 
  1362 ;;  adcValue3       4   45[BANK1 ] float 
  1363 ;;  displayValue    2   22[BANK3 ] unsigned int 
  1364 ;;  ilkAcilis       2    2[BANK3 ] int 
  1365 ;;  adcValue2       2   66[BANK1 ] int 
  1366 ;;  a               2    0        unsigned int 
  1367 ;; Return value:  Size  Location     Type
  1368 ;;                  2  208[None  ] int 
  1369 ;; Registers used:
  1370 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1371 ;; Tracked objects:
  1372 ;;		On entry : B00/0
  1373 ;;		On exit  : 0/0
  1374 ;;		Unchanged: 0/0
  1375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1376 ;;      Params:         0       0       0       0       0
  1377 ;;      Locals:         0      20      80      24       0
  1378 ;;      Temps:          0       6       0       0       0
  1379 ;;      Totals:         0      26      80      24       0
  1380 ;;Total ram usage:      130 bytes
  1381 ;; Hardware stack levels required when called: 6
  1382 ;; This function calls:
  1383 ;;		_Lcd_Clear
  1384 ;;		_Lcd_Init
  1385 ;;		_Lcd_Set_Cursor
  1386 ;;		_Lcd_Write_String
  1387 ;;		_UART_Initialize
  1388 ;;		_UART_Write_Text
  1389 ;;		___awdiv
  1390 ;;		___awmod
  1391 ;;		___fldiv
  1392 ;;		___flmul
  1393 ;;		___fltol
  1394 ;;		___wmul
  1395 ;;		___xxtofl
  1396 ;;		_readEEPROM
  1397 ;;		_sprintf
  1398 ;;		_writeEEPROM
  1399 ;;		_yagBakim
  1400 ;; This function is called by:
  1401 ;;		Startup code after reset
  1402 ;; This function uses a non-reentrant model
  1403 ;;
  1404                           
  1405     169C                     _main:	
  1406                           ;psect for function _main
  1407                           
  1408     169C                     l3883:	
  1409                           ;incstack = 0
  1410                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1411                           
  1412                           
  1413                           ;main1.c: 119:   unsigned int a;;main1.c: 122: TRISB = 0b00000000;
  1414     169C  1683               	bsf	3,5	;RP0=1, select bank1
  1415     169D  1303               	bcf	3,6	;RP1=0, select bank1
  1416     169E  0186               	clrf	6	;volatile
  1417     169F                     l3885:
  1418                           
  1419                           ;main1.c: 123: TRISA4 = 0;
  1420     169F  1205               	bcf	5,4	;volatile
  1421     16A0                     l3887:
  1422                           
  1423                           ;main1.c: 124: TRISE0 = 1;
  1424     16A0  1409               	bsf	9,0	;volatile
  1425     16A1                     l3889:
  1426                           
  1427                           ;main1.c: 125: TRISE1 = 1;
  1428     16A1  1489               	bsf	9,1	;volatile
  1429     16A2                     l3891:
  1430                           
  1431                           ;main1.c: 126: TRISC1 = 1;
  1432     16A2  1487               	bsf	7,1	;volatile
  1433     16A3                     l3893:
  1434                           
  1435                           ;main1.c: 127: TRISC2 = 1;
  1436     16A3  1507               	bsf	7,2	;volatile
  1437     16A4                     l3895:
  1438                           
  1439                           ;main1.c: 128: TRISE2 = 1;
  1440     16A4  1509               	bsf	9,2	;volatile
  1441     16A5                     l3897:
  1442                           
  1443                           ;main1.c: 129: TRISC0 = 1;
  1444     16A5  1407               	bsf	7,0	;volatile
  1445     16A6                     l3899:
  1446                           
  1447                           ;main1.c: 130: TRISC3 = 1;
  1448     16A6  1587               	bsf	7,3	;volatile
  1449     16A7                     l3901:
  1450                           
  1451                           ;main1.c: 131: TRISD0 = 1;
  1452     16A7  1408               	bsf	8,0	;volatile
  1453     16A8                     l3903:
  1454                           
  1455                           ;main1.c: 133: TRISA1 = 1;
  1456     16A8  1485               	bsf	5,1	;volatile
  1457     16A9                     l3905:
  1458                           
  1459                           ;main1.c: 134: TRISA2 = 1;
  1460     16A9  1505               	bsf	5,2	;volatile
  1461     16AA                     l3907:
  1462                           
  1463                           ;main1.c: 135: TRISA3 = 1;
  1464     16AA  1585               	bsf	5,3	;volatile
  1465     16AB                     l3909:
  1466                           
  1467                           ;main1.c: 136: Lcd_Init();
  1468     16AB  160A  118A  23C3  160A  118A  	fcall	_Lcd_Init
  1469     16B0                     l3911:
  1470                           
  1471                           ;main1.c: 138: TRISC6 = 0;
  1472     16B0  1683               	bsf	3,5	;RP0=1, select bank1
  1473     16B1  1303               	bcf	3,6	;RP1=0, select bank1
  1474     16B2  1307               	bcf	7,6	;volatile
  1475     16B3                     l3913:
  1476                           
  1477                           ;main1.c: 139: TRISC7 = 1;
  1478     16B3  1787               	bsf	7,7	;volatile
  1479     16B4                     l3915:
  1480                           
  1481                           ;main1.c: 142: TRISA0 = 0;
  1482     16B4  1005               	bcf	5,0	;volatile
  1483     16B5                     l3917:
  1484                           
  1485                           ;main1.c: 143: TRISA5 = 0;
  1486     16B5  1285               	bcf	5,5	;volatile
  1487     16B6                     l3919:
  1488                           
  1489                           ;main1.c: 144: TRISC4 = 0;
  1490     16B6  1207               	bcf	7,4	;volatile
  1491     16B7                     l3921:
  1492                           
  1493                           ;main1.c: 145: TRISC5 = 0;
  1494     16B7  1287               	bcf	7,5	;volatile
  1495     16B8                     l3923:
  1496                           
  1497                           ;main1.c: 146: TRISD = 0b00000001;
  1498     16B8  3001               	movlw	1
  1499     16B9  0088               	movwf	8	;volatile
  1500     16BA                     l3925:
  1501                           
  1502                           ;main1.c: 149:   _delay((unsigned long)((200)*(4000000/4000.0)));
  1503     16BA  3002               	movlw	2
  1504     16BB  1283               	bcf	3,5	;RP0=0, select bank0
  1505     16BC  1303               	bcf	3,6	;RP1=0, select bank0
  1506     16BD  00D6               	movwf	??_main+2
  1507     16BE  3004               	movlw	4
  1508     16BF  00D5               	movwf	??_main+1
  1509     16C0  30B9               	movlw	185
  1510     16C1  00D4               	movwf	??_main
  1511     16C2                     u5737:
  1512     16C2  0BD4               	decfsz	??_main,f
  1513     16C3  2EC2               	goto	u5737
  1514     16C4  0BD5               	decfsz	??_main+1,f
  1515     16C5  2EC2               	goto	u5737
  1516     16C6  0BD6               	decfsz	??_main+2,f
  1517     16C7  2EC2               	goto	u5737
  1518     16C8  2EC9               	nop2
  1519     16C9                     l3927:
  1520                           
  1521                           ;main1.c: 150:   RA4 = 0;
  1522     16C9  1283               	bcf	3,5	;RP0=0, select bank0
  1523     16CA  1303               	bcf	3,6	;RP1=0, select bank0
  1524     16CB  1205               	bcf	5,4	;volatile
  1525     16CC                     l3929:
  1526                           
  1527                           ;main1.c: 156:     currentTime.hours = readEEPROM(0x01);
  1528     16CC  3001               	movlw	1
  1529     16CD  00A0               	movwf	readEEPROM@address
  1530     16CE  3000               	movlw	0
  1531     16CF  00A1               	movwf	readEEPROM@address+1
  1532     16D0  160A  158A  2799  160A  118A  	fcall	_readEEPROM
  1533     16D5  1283               	bcf	3,5	;RP0=0, select bank0
  1534     16D6  1303               	bcf	3,6	;RP1=0, select bank0
  1535     16D7  0821               	movf	?_readEEPROM+1,w
  1536     16D8  1683               	bsf	3,5	;RP0=1, select bank3
  1537     16D9  1703               	bsf	3,6	;RP1=1, select bank3
  1538     16DA  00AB               	movwf	((_currentTime+1)^(0+384)+2)
  1539     16DB  1283               	bcf	3,5	;RP0=0, select bank0
  1540     16DC  1303               	bcf	3,6	;RP1=0, select bank0
  1541     16DD  0820               	movf	?_readEEPROM,w
  1542     16DE  1683               	bsf	3,5	;RP0=1, select bank3
  1543     16DF  1703               	bsf	3,6	;RP1=1, select bank3
  1544     16E0  00AA               	movwf	(_currentTime^(0+384)+2)
  1545     16E1                     l3931:
  1546                           
  1547                           ;main1.c: 157:     currentTime.minutes = readEEPROM(0x02);
  1548     16E1  3002               	movlw	2
  1549     16E2  1283               	bcf	3,5	;RP0=0, select bank0
  1550     16E3  1303               	bcf	3,6	;RP1=0, select bank0
  1551     16E4  00A0               	movwf	readEEPROM@address
  1552     16E5  3000               	movlw	0
  1553     16E6  00A1               	movwf	readEEPROM@address+1
  1554     16E7  160A  158A  2799  160A  118A  	fcall	_readEEPROM
  1555     16EC  1283               	bcf	3,5	;RP0=0, select bank0
  1556     16ED  1303               	bcf	3,6	;RP1=0, select bank0
  1557     16EE  0821               	movf	?_readEEPROM+1,w
  1558     16EF  1683               	bsf	3,5	;RP0=1, select bank3
  1559     16F0  1703               	bsf	3,6	;RP1=1, select bank3
  1560     16F1  00AD               	movwf	((_currentTime+1)^(0+384)+4)
  1561     16F2  1283               	bcf	3,5	;RP0=0, select bank0
  1562     16F3  1303               	bcf	3,6	;RP1=0, select bank0
  1563     16F4  0820               	movf	?_readEEPROM,w
  1564     16F5  1683               	bsf	3,5	;RP0=1, select bank3
  1565     16F6  1703               	bsf	3,6	;RP1=1, select bank3
  1566     16F7  00AC               	movwf	(_currentTime^(0+384)+4)
  1567     16F8                     l3933:
  1568                           
  1569                           ;main1.c: 158:     currentTime.seconds = readEEPROM(0x03);
  1570     16F8  3003               	movlw	3
  1571     16F9  1283               	bcf	3,5	;RP0=0, select bank0
  1572     16FA  1303               	bcf	3,6	;RP1=0, select bank0
  1573     16FB  00A0               	movwf	readEEPROM@address
  1574     16FC  3000               	movlw	0
  1575     16FD  00A1               	movwf	readEEPROM@address+1
  1576     16FE  160A  158A  2799  160A  118A  	fcall	_readEEPROM
  1577     1703  1283               	bcf	3,5	;RP0=0, select bank0
  1578     1704  1303               	bcf	3,6	;RP1=0, select bank0
  1579     1705  0821               	movf	?_readEEPROM+1,w
  1580     1706  1683               	bsf	3,5	;RP0=1, select bank3
  1581     1707  1703               	bsf	3,6	;RP1=1, select bank3
  1582     1708  00AF               	movwf	((_currentTime+1)^(0+384)+6)
  1583     1709  1283               	bcf	3,5	;RP0=0, select bank0
  1584     170A  1303               	bcf	3,6	;RP1=0, select bank0
  1585     170B  0820               	movf	?_readEEPROM,w
  1586     170C  1683               	bsf	3,5	;RP0=1, select bank3
  1587     170D  1703               	bsf	3,6	;RP1=1, select bank3
  1588     170E  00AE               	movwf	(_currentTime^(0+384)+6)
  1589     170F                     l3935:
  1590                           
  1591                           ;main1.c: 159:     currentTime.carpan = readEEPROM(0x04);
  1592     170F  3004               	movlw	4
  1593     1710  1283               	bcf	3,5	;RP0=0, select bank0
  1594     1711  1303               	bcf	3,6	;RP1=0, select bank0
  1595     1712  00A0               	movwf	readEEPROM@address
  1596     1713  3000               	movlw	0
  1597     1714  00A1               	movwf	readEEPROM@address+1
  1598     1715  160A  158A  2799  160A  118A  	fcall	_readEEPROM
  1599     171A  1283               	bcf	3,5	;RP0=0, select bank0
  1600     171B  1303               	bcf	3,6	;RP1=0, select bank0
  1601     171C  0821               	movf	?_readEEPROM+1,w
  1602     171D  1683               	bsf	3,5	;RP0=1, select bank3
  1603     171E  1703               	bsf	3,6	;RP1=1, select bank3
  1604     171F  00A9               	movwf	(_currentTime+1)^(0+384)
  1605     1720  1283               	bcf	3,5	;RP0=0, select bank0
  1606     1721  1303               	bcf	3,6	;RP1=0, select bank0
  1607     1722  0820               	movf	?_readEEPROM,w
  1608     1723  1683               	bsf	3,5	;RP0=1, select bank3
  1609     1724  1703               	bsf	3,6	;RP1=1, select bank3
  1610     1725  00A8               	movwf	_currentTime^(0+384)
  1611     1726                     l3937:
  1612                           
  1613                           ;main1.c: 162:     char lcdText[9];;main1.c: 164:     OPTION_REGbits.T0CS = 0;
  1614     1726  1683               	bsf	3,5	;RP0=1, select bank1
  1615     1727  1303               	bcf	3,6	;RP1=0, select bank1
  1616     1728  1281               	bcf	1,5	;volatile
  1617     1729                     l3939:
  1618                           
  1619                           ;main1.c: 165:     OPTION_REGbits.PSA = 0;
  1620     1729  1181               	bcf	1,3	;volatile
  1621     172A                     l3941:
  1622                           
  1623                           ;main1.c: 166:     OPTION_REGbits.PS2 = 1;
  1624     172A  1501               	bsf	1,2	;volatile
  1625     172B                     l3943:
  1626                           
  1627                           ;main1.c: 167:     OPTION_REGbits.PS1 = 1;
  1628     172B  1481               	bsf	1,1	;volatile
  1629     172C                     l3945:
  1630                           
  1631                           ;main1.c: 168:     OPTION_REGbits.PS0 = 1;
  1632     172C  1401               	bsf	1,0	;volatile
  1633     172D                     l3947:
  1634                           
  1635                           ;main1.c: 171:     INTCONbits.GIE = 1;
  1636     172D  178B               	bsf	11,7	;volatile
  1637     172E                     l3949:
  1638                           
  1639                           ;main1.c: 172:     INTCONbits.PEIE = 1;
  1640     172E  170B               	bsf	11,6	;volatile
  1641     172F                     l3951:
  1642                           
  1643                           ;main1.c: 173:     INTCONbits.T0IE = 1;
  1644     172F  168B               	bsf	11,5	;volatile
  1645     1730                     l3953:
  1646                           
  1647                           ;main1.c: 176:     Lcd_Clear();
  1648     1730  160A  158A  276A  160A  118A  	fcall	_Lcd_Clear
  1649     1735                     l3955:
  1650                           
  1651                           ;main1.c: 177:     Lcd_Set_Cursor(1,1);
  1652     1735  1283               	bcf	3,5	;RP0=0, select bank0
  1653     1736  1303               	bcf	3,6	;RP1=0, select bank0
  1654     1737  01A4               	clrf	Lcd_Set_Cursor@b
  1655     1738  0AA4               	incf	Lcd_Set_Cursor@b,f
  1656     1739  3001               	movlw	1
  1657     173A  160A  118A  231C  160A  118A  	fcall	_Lcd_Set_Cursor
  1658     173F                     l3957:
  1659                           
  1660                           ;main1.c: 178:     Lcd_Write_String("UZMANLAR MAKINA");
  1661     173F  30BD               	movlw	low (STR_3| (0+32768))
  1662     1740  1283               	bcf	3,5	;RP0=0, select bank0
  1663     1741  1303               	bcf	3,6	;RP1=0, select bank0
  1664     1742  00A5               	movwf	Lcd_Write_String@a
  1665     1743  3090               	movlw	high (STR_3| (0+32768))
  1666     1744  00A6               	movwf	Lcd_Write_String@a+1
  1667     1745  160A  118A  22D6  160A  118A  	fcall	_Lcd_Write_String
  1668     174A                     l3959:
  1669                           
  1670                           ;main1.c: 179:     Lcd_Set_Cursor(2,1);
  1671     174A  1283               	bcf	3,5	;RP0=0, select bank0
  1672     174B  1303               	bcf	3,6	;RP1=0, select bank0
  1673     174C  01A4               	clrf	Lcd_Set_Cursor@b
  1674     174D  0AA4               	incf	Lcd_Set_Cursor@b,f
  1675     174E  3002               	movlw	2
  1676     174F  160A  118A  231C  160A  118A  	fcall	_Lcd_Set_Cursor
  1677     1754                     l3961:
  1678                           
  1679                           ;main1.c: 180:     Lcd_Write_String("www.borvek.com");
  1680     1754  30DC               	movlw	low (STR_4| (0+32768))
  1681     1755  1283               	bcf	3,5	;RP0=0, select bank0
  1682     1756  1303               	bcf	3,6	;RP1=0, select bank0
  1683     1757  00A5               	movwf	Lcd_Write_String@a
  1684     1758  3090               	movlw	high (STR_4| (0+32768))
  1685     1759  00A6               	movwf	Lcd_Write_String@a+1
  1686     175A  160A  118A  22D6  160A  118A  	fcall	_Lcd_Write_String
  1687     175F                     l3963:
  1688                           
  1689                           ;main1.c: 181:     Lcd_Set_Cursor(2,17);
  1690     175F  3011               	movlw	17
  1691     1760  1283               	bcf	3,5	;RP0=0, select bank0
  1692     1761  1303               	bcf	3,6	;RP1=0, select bank0
  1693     1762  00A4               	movwf	Lcd_Set_Cursor@b
  1694     1763  3002               	movlw	2
  1695     1764  160A  118A  231C  160A  118A  	fcall	_Lcd_Set_Cursor
  1696     1769                     l3965:
  1697                           
  1698                           ;main1.c: 182:     Lcd_Write_String("V3");
  1699     1769  306F               	movlw	low (STR_5| (0+32768))
  1700     176A  1283               	bcf	3,5	;RP0=0, select bank0
  1701     176B  1303               	bcf	3,6	;RP1=0, select bank0
  1702     176C  00A5               	movwf	Lcd_Write_String@a
  1703     176D  3091               	movlw	high (STR_5| (0+32768))
  1704     176E  00A6               	movwf	Lcd_Write_String@a+1
  1705     176F  160A  118A  22D6  160A  118A  	fcall	_Lcd_Write_String
  1706     1774                     l3967:
  1707                           
  1708                           ;main1.c: 184:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1709     1774  3006               	movlw	6
  1710     1775  1283               	bcf	3,5	;RP0=0, select bank0
  1711     1776  1303               	bcf	3,6	;RP1=0, select bank0
  1712     1777  00D6               	movwf	??_main+2
  1713     1778  3013               	movlw	19
  1714     1779  00D5               	movwf	??_main+1
  1715     177A  30AD               	movlw	173
  1716     177B  00D4               	movwf	??_main
  1717     177C                     u5747:
  1718     177C  0BD4               	decfsz	??_main,f
  1719     177D  2F7C               	goto	u5747
  1720     177E  0BD5               	decfsz	??_main+1,f
  1721     177F  2F7C               	goto	u5747
  1722     1780  0BD6               	decfsz	??_main+2,f
  1723     1781  2F7C               	goto	u5747
  1724     1782                     l3969:
  1725                           
  1726                           ;main1.c: 185:     Lcd_Clear();
  1727     1782  160A  158A  276A  160A  118A  	fcall	_Lcd_Clear
  1728     1787                     l3971:
  1729                           
  1730                           ;main1.c: 190:     SPBRG = ((4000000/16)/19200) - 1;
  1731     1787  300C               	movlw	12
  1732     1788  1683               	bsf	3,5	;RP0=1, select bank1
  1733     1789  1303               	bcf	3,6	;RP1=0, select bank1
  1734     178A  0099               	movwf	25	;volatile
  1735     178B                     l3973:
  1736                           
  1737                           ;main1.c: 191:     UART_Initialize();
  1738     178B  160A  118A  2175  160A  118A  	fcall	_UART_Initialize
  1739     1790                     l3975:
  1740                           
  1741                           ;main1.c: 192: unsigned int displayValue = 0;
  1742     1790  1683               	bsf	3,5	;RP0=1, select bank3
  1743     1791  1703               	bsf	3,6	;RP1=1, select bank3
  1744     1792  01A6               	clrf	main@displayValue^(0+384)
  1745     1793  01A7               	clrf	(main@displayValue+1)^(0+384)
  1746     1794                     l3977:
  1747                           
  1748                           ;main1.c: 197:     ADCON1bits.ADFM = 1;
  1749     1794  1683               	bsf	3,5	;RP0=1, select bank1
  1750     1795  1303               	bcf	3,6	;RP1=0, select bank1
  1751     1796  179F               	bsf	31,7	;volatile
  1752     1797                     l3979:
  1753                           
  1754                           ;main1.c: 198:     ADCON1bits.PCFG = 0b100;
  1755     1797  081F               	movf	31,w	;volatile
  1756     1798  39F0               	andlw	-16
  1757     1799  3804               	iorlw	4
  1758     179A  009F               	movwf	31	;volatile
  1759     179B                     l3981:
  1760                           
  1761                           ;main1.c: 199:     ADCON0bits.ADCS = 0b10;
  1762     179B  1283               	bcf	3,5	;RP0=0, select bank0
  1763     179C  1303               	bcf	3,6	;RP1=0, select bank0
  1764     179D  081F               	movf	31,w	;volatile
  1765     179E  393F               	andlw	-193
  1766     179F  3880               	iorlw	128
  1767     17A0  009F               	movwf	31	;volatile
  1768     17A1                     l3983:
  1769                           
  1770                           ;main1.c: 200:     ADCON0bits.ADON = 1;
  1771     17A1  141F               	bsf	31,0	;volatile
  1772     17A2                     l3985:
  1773                           
  1774                           ;main1.c: 202:     float adcValue1;;main1.c: 203:     int adcValue2;;main1.c: 204:     f
      +                          loat adcValue3;;main1.c: 210:     RC1 = 0;
  1775     17A2  1087               	bcf	7,1	;volatile
  1776     17A3                     l3987:
  1777                           
  1778                           ;main1.c: 211:     RE2 = 0;
  1779     17A3  1109               	bcf	9,2	;volatile
  1780     17A4                     l3989:
  1781                           
  1782                           ;main1.c: 212:     RE0 = 0;
  1783     17A4  1009               	bcf	9,0	;volatile
  1784     17A5                     l3991:
  1785                           
  1786                           ;main1.c: 213:     RC2 = 0;
  1787     17A5  1107               	bcf	7,2	;volatile
  1788     17A6                     l3993:
  1789                           
  1790                           ;main1.c: 214:     RC0 = 0;
  1791     17A6  1007               	bcf	7,0	;volatile
  1792     17A7                     l3995:
  1793                           
  1794                           ;main1.c: 215:     RE1 = 0;
  1795     17A7  1089               	bcf	9,1	;volatile
  1796     17A8                     l3997:
  1797                           
  1798                           ;main1.c: 217: int ilkAcilis = 1;
  1799     17A8  3001               	movlw	1
  1800     17A9  1683               	bsf	3,5	;RP0=1, select bank3
  1801     17AA  1703               	bsf	3,6	;RP1=1, select bank3
  1802     17AB  0092               	movwf	main@ilkAcilis^(0+384)
  1803     17AC  3000               	movlw	0
  1804     17AD  0093               	movwf	(main@ilkAcilis^(0+384)+1)
  1805     17AE                     l3999:
  1806                           
  1807                           ;main1.c: 224:       for ( int epromAdresi = 0 ; epromAdresi<255; epromAdresi++){
  1808     17AE  1683               	bsf	3,5	;RP0=1, select bank3
  1809     17AF  1703               	bsf	3,6	;RP1=1, select bank3
  1810     17B0  01A0               	clrf	main@epromAdresi^(0+384)
  1811     17B1  01A1               	clrf	(main@epromAdresi+1)^(0+384)
  1812     17B2                     l4005:
  1813                           
  1814                           ;main1.c: 225:         int olmazlar = readEEPROM(epromAdresi);
  1815     17B2  1683               	bsf	3,5	;RP0=1, select bank3
  1816     17B3  1703               	bsf	3,6	;RP1=1, select bank3
  1817     17B4  0821               	movf	(main@epromAdresi+1)^(0+384),w
  1818     17B5  1283               	bcf	3,5	;RP0=0, select bank0
  1819     17B6  1303               	bcf	3,6	;RP1=0, select bank0
  1820     17B7  00A1               	movwf	readEEPROM@address+1
  1821     17B8  1683               	bsf	3,5	;RP0=1, select bank3
  1822     17B9  1703               	bsf	3,6	;RP1=1, select bank3
  1823     17BA  0820               	movf	main@epromAdresi^(0+384),w
  1824     17BB  1283               	bcf	3,5	;RP0=0, select bank0
  1825     17BC  1303               	bcf	3,6	;RP1=0, select bank0
  1826     17BD  00A0               	movwf	readEEPROM@address
  1827     17BE  160A  158A  2799  160A  118A  	fcall	_readEEPROM
  1828     17C3  1283               	bcf	3,5	;RP0=0, select bank0
  1829     17C4  1303               	bcf	3,6	;RP1=0, select bank0
  1830     17C5  0821               	movf	?_readEEPROM+1,w
  1831     17C6  1683               	bsf	3,5	;RP0=1, select bank1
  1832     17C7  1303               	bcf	3,6	;RP1=0, select bank1
  1833     17C8  00E5               	movwf	(main@olmazlar+1)^(0+128)
  1834     17C9  1283               	bcf	3,5	;RP0=0, select bank0
  1835     17CA  1303               	bcf	3,6	;RP1=0, select bank0
  1836     17CB  0820               	movf	?_readEEPROM,w
  1837     17CC  1683               	bsf	3,5	;RP0=1, select bank1
  1838     17CD  1303               	bcf	3,6	;RP1=0, select bank1
  1839     17CE  00E4               	movwf	main@olmazlar^(0+128)
  1840     17CF                     l4007:
  1841                           
  1842                           ;main1.c: 226:         if (olmazlar==255){
  1843     17CF  0A64               	incf	main@olmazlar^(0+128),w
  1844     17D0  0465               	iorwf	(main@olmazlar+1)^(0+128),w
  1845     17D1  1D03               	btfss	3,2
  1846     17D2  2FD4               	goto	u5241
  1847     17D3  2FD5               	goto	u5240
  1848     17D4                     u5241:
  1849     17D4  2FE9               	goto	l4011
  1850     17D5                     u5240:
  1851     17D5                     l4009:
  1852                           
  1853                           ;main1.c: 227:        writeEEPROM(epromAdresi,0);
  1854     17D5  1683               	bsf	3,5	;RP0=1, select bank3
  1855     17D6  1703               	bsf	3,6	;RP1=1, select bank3
  1856     17D7  0821               	movf	(main@epromAdresi+1)^(0+384),w
  1857     17D8  1283               	bcf	3,5	;RP0=0, select bank0
  1858     17D9  1303               	bcf	3,6	;RP1=0, select bank0
  1859     17DA  00A1               	movwf	writeEEPROM@address+1
  1860     17DB  1683               	bsf	3,5	;RP0=1, select bank3
  1861     17DC  1703               	bsf	3,6	;RP1=1, select bank3
  1862     17DD  0820               	movf	main@epromAdresi^(0+384),w
  1863     17DE  1283               	bcf	3,5	;RP0=0, select bank0
  1864     17DF  1303               	bcf	3,6	;RP1=0, select bank0
  1865     17E0  00A0               	movwf	writeEEPROM@address
  1866     17E1  3000               	movlw	0
  1867     17E2  00A2               	movwf	writeEEPROM@data
  1868     17E3  00A3               	movwf	writeEEPROM@data+1
  1869     17E4  120A  158A  2003  160A  118A  	fcall	_writeEEPROM
  1870     17E9                     l4011:
  1871                           
  1872                           ;main1.c: 229:     }
  1873     17E9  3001               	movlw	1
  1874     17EA  1683               	bsf	3,5	;RP0=1, select bank3
  1875     17EB  1703               	bsf	3,6	;RP1=1, select bank3
  1876     17EC  07A0               	addwf	main@epromAdresi^(0+384),f
  1877     17ED  1803               	skipnc
  1878     17EE  0AA1               	incf	(main@epromAdresi+1)^(0+384),f
  1879     17EF  3000               	movlw	0
  1880     17F0  07A1               	addwf	(main@epromAdresi+1)^(0+384),f
  1881     17F1                     l4013:
  1882     17F1  0821               	movf	(main@epromAdresi+1)^(0+384),w
  1883     17F2  3A80               	xorlw	128
  1884     17F3  00FF               	movwf	btemp+1
  1885     17F4  3080               	movlw	128
  1886     17F5  027F               	subwf	btemp+1,w
  1887     17F6  1D03               	skipz
  1888     17F7  2FFA               	goto	u5255
  1889     17F8  30FF               	movlw	255
  1890     17F9  0220               	subwf	main@epromAdresi^(0+384),w
  1891     17FA                     u5255:
  1892     17FA  1C03               	skipc
  1893     17FB  2FFF               	goto	u5251
  1894     17FC  120A  158A  2BE5   	goto	u5250
  1895     17FF                     u5251:
  1896     17FF  2FB2               	goto	l4005
  1897                           
  1898                           	psect	text1
  1899     07AC                     __ptext1:	
  1900 ;; *************** function _yagBakim *****************
  1901 ;; Defined at:
  1902 ;;		line 27 in file "main1.c"
  1903 ;; Parameters:    Size  Location     Type
  1904 ;;		None
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;  i               2   12[BANK0 ] int 
  1907 ;; Return value:  Size  Location     Type
  1908 ;;                  1    wreg      void 
  1909 ;; Registers used:
  1910 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1911 ;; Tracked objects:
  1912 ;;		On entry : 0/0
  1913 ;;		On exit  : 0/0
  1914 ;;		Unchanged: 0/0
  1915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1916 ;;      Params:         0       0       0       0       0
  1917 ;;      Locals:         0       2       0       0       0
  1918 ;;      Temps:          0       0       0       0       0
  1919 ;;      Totals:         0       2       0       0       0
  1920 ;;Total ram usage:        2 bytes
  1921 ;; Hardware stack levels used: 1
  1922 ;; Hardware stack levels required when called: 5
  1923 ;; This function calls:
  1924 ;;		_Lcd_Clear
  1925 ;;		_Lcd_Set_Cursor
  1926 ;;		_Lcd_Write_String
  1927 ;; This function is called by:
  1928 ;;		_main
  1929 ;; This function uses a non-reentrant model
  1930 ;;
  1931                           
  1932     07AC                     _yagBakim:	
  1933                           ;psect for function _yagBakim
  1934                           
  1935     07AC                     l3641:	
  1936                           ;incstack = 0
  1937                           ; Regs used in _yagBakim: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1938                           
  1939                           
  1940                           ;main1.c: 28:     Lcd_Clear();
  1941     07AC  160A  158A  276A  120A  118A  	fcall	_Lcd_Clear
  1942     07B1                     l3643:
  1943                           
  1944                           ;main1.c: 29:     for (int i = 0; i < 10; i++) {
  1945     07B1  1283               	bcf	3,5	;RP0=0, select bank0
  1946     07B2  1303               	bcf	3,6	;RP1=0, select bank0
  1947     07B3  01AC               	clrf	yagBakim@i
  1948     07B4  01AD               	clrf	yagBakim@i+1
  1949     07B5                     l3649:
  1950                           
  1951                           ;main1.c: 30:         Lcd_Set_Cursor(1, 1);
  1952     07B5  1283               	bcf	3,5	;RP0=0, select bank0
  1953     07B6  1303               	bcf	3,6	;RP1=0, select bank0
  1954     07B7  01A4               	clrf	Lcd_Set_Cursor@b
  1955     07B8  0AA4               	incf	Lcd_Set_Cursor@b,f
  1956     07B9  3001               	movlw	1
  1957     07BA  160A  118A  231C  120A  118A  	fcall	_Lcd_Set_Cursor
  1958     07BF                     l3651:
  1959                           
  1960                           ;main1.c: 31:         Lcd_Write_String("YAG BAKIMI YAPINIZ");
  1961     07BF  30AA               	movlw	low (STR_1| (0+32768))
  1962     07C0  1283               	bcf	3,5	;RP0=0, select bank0
  1963     07C1  1303               	bcf	3,6	;RP1=0, select bank0
  1964     07C2  00A5               	movwf	Lcd_Write_String@a
  1965     07C3  3090               	movlw	high (STR_1| (0+32768))
  1966     07C4  00A6               	movwf	Lcd_Write_String@a+1
  1967     07C5  160A  118A  22D6  120A  118A  	fcall	_Lcd_Write_String
  1968     07CA                     l3653:
  1969                           
  1970                           ;main1.c: 32:         Lcd_Set_Cursor(2, 1);
  1971     07CA  1283               	bcf	3,5	;RP0=0, select bank0
  1972     07CB  1303               	bcf	3,6	;RP1=0, select bank0
  1973     07CC  01A4               	clrf	Lcd_Set_Cursor@b
  1974     07CD  0AA4               	incf	Lcd_Set_Cursor@b,f
  1975     07CE  3002               	movlw	2
  1976     07CF  160A  118A  231C  120A  118A  	fcall	_Lcd_Set_Cursor
  1977                           
  1978                           ;main1.c: 33:         Lcd_Write_String("OIL THE GEARS");
  1979     07D4  30F9               	movlw	low (STR_2| (0+32768))
  1980     07D5  1283               	bcf	3,5	;RP0=0, select bank0
  1981     07D6  1303               	bcf	3,6	;RP1=0, select bank0
  1982     07D7  00A5               	movwf	Lcd_Write_String@a
  1983     07D8  3090               	movlw	high (STR_2| (0+32768))
  1984     07D9  00A6               	movwf	Lcd_Write_String@a+1
  1985     07DA  160A  118A  22D6  120A  118A  	fcall	_Lcd_Write_String
  1986     07DF                     l3655:
  1987                           
  1988                           ;main1.c: 34:         RA4 = 1;
  1989     07DF  1283               	bcf	3,5	;RP0=0, select bank0
  1990     07E0  1303               	bcf	3,6	;RP1=0, select bank0
  1991     07E1  1605               	bsf	5,4	;volatile
  1992     07E2                     l3657:
  1993                           
  1994                           ;main1.c: 35:     }
  1995     07E2  3001               	movlw	1
  1996     07E3  07AC               	addwf	yagBakim@i,f
  1997     07E4  1803               	skipnc
  1998     07E5  0AAD               	incf	yagBakim@i+1,f
  1999     07E6  3000               	movlw	0
  2000     07E7  07AD               	addwf	yagBakim@i+1,f
  2001     07E8                     l3659:
  2002     07E8  082D               	movf	yagBakim@i+1,w
  2003     07E9  3A80               	xorlw	128
  2004     07EA  00FF               	movwf	btemp+1
  2005     07EB  3080               	movlw	128
  2006     07EC  027F               	subwf	btemp+1,w
  2007     07ED  1D03               	skipz
  2008     07EE  2FF1               	goto	u4845
  2009     07EF  300A               	movlw	10
  2010     07F0  022C               	subwf	yagBakim@i,w
  2011     07F1                     u4845:
  2012     07F1  1C03               	skipc
  2013     07F2  2FF4               	goto	u4841
  2014     07F3  2FF5               	goto	u4840
  2015     07F4                     u4841:
  2016     07F4  2FB5               	goto	l3649
  2017     07F5                     u4840:
  2018     07F5                     l3661:
  2019                           
  2020                           ;main1.c: 36:     Lcd_Clear();
  2021     07F5  160A  158A  276A  120A  118A  	fcall	_Lcd_Clear
  2022     07FA                     l3663:
  2023                           
  2024                           ;main1.c: 37:     RA4 = 0;
  2025     07FA  1283               	bcf	3,5	;RP0=0, select bank0
  2026     07FB  1303               	bcf	3,6	;RP1=0, select bank0
  2027     07FC  1205               	bcf	5,4	;volatile
  2028     07FD                     l175:
  2029     07FD  0008               	return
  2030     07FE                     __end_of_yagBakim:
  2031                           
  2032                           	psect	text2
  2033     12D6                     __ptext2:	
  2034 ;; *************** function _Lcd_Write_String *****************
  2035 ;; Defined at:
  2036 ;;		line 96 in file "./lcd.h"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;  a               2    5[BANK0 ] PTR unsigned char 
  2039 ;;		 -> STR_33(24), STR_32(24), STR_29(27), STR_28(26), 
  2040 ;;		 -> STR_26(13), STR_24(14), STR_22(10), STR_20(9), 
  2041 ;;		 -> STR_18(15), STR_16(10), STR_14(9), main@rpmString(5), 
  2042 ;;		 -> STR_12(5), main@adcString1(4), STR_10(10), STR_9(3), 
  2043 ;;		 -> main@lcdText(9), STR_7(21), STR_6(20), STR_5(3), 
  2044 ;;		 -> STR_4(15), STR_3(16), STR_2(14), STR_1(19), 
  2045 ;; Auto vars:     Size  Location     Type
  2046 ;;  i               2   10[BANK0 ] int 
  2047 ;; Return value:  Size  Location     Type
  2048 ;;                  1    wreg      void 
  2049 ;; Registers used:
  2050 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2051 ;; Tracked objects:
  2052 ;;		On entry : 0/0
  2053 ;;		On exit  : 0/0
  2054 ;;		Unchanged: 0/0
  2055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2056 ;;      Params:         0       2       0       0       0
  2057 ;;      Locals:         0       2       0       0       0
  2058 ;;      Temps:          0       3       0       0       0
  2059 ;;      Totals:         0       7       0       0       0
  2060 ;;Total ram usage:        7 bytes
  2061 ;; Hardware stack levels used: 1
  2062 ;; Hardware stack levels required when called: 4
  2063 ;; This function calls:
  2064 ;;		_Lcd_Write_Char
  2065 ;; This function is called by:
  2066 ;;		_yagBakim
  2067 ;;		_main
  2068 ;; This function uses a non-reentrant model
  2069 ;;
  2070                           
  2071     12D6                     _Lcd_Write_String:	
  2072                           ;psect for function _Lcd_Write_String
  2073                           
  2074     12D6                     l3537:	
  2075                           ;incstack = 0
  2076                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2077                           
  2078                           
  2079                           ;./lcd.h: 96: void Lcd_Write_String(char *a);./lcd.h: 97: {;./lcd.h: 98:  int i;;./lcd.h
      +                          : 99:  for(i=0;a[i]!='\0';i++)
  2080     12D6  1283               	bcf	3,5	;RP0=0, select bank0
  2081     12D7  1303               	bcf	3,6	;RP1=0, select bank0
  2082     12D8  01AA               	clrf	Lcd_Write_String@i
  2083     12D9  01AB               	clrf	Lcd_Write_String@i+1
  2084     12DA  2AFF               	goto	l3543
  2085     12DB                     l3539:
  2086                           
  2087                           ;./lcd.h: 100:     Lcd_Write_Char(a[i]);
  2088     12DB  082A               	movf	Lcd_Write_String@i,w
  2089     12DC  0725               	addwf	Lcd_Write_String@a,w
  2090     12DD  00A8               	movwf	??_Lcd_Write_String+1
  2091     12DE  0826               	movf	Lcd_Write_String@a+1,w
  2092     12DF  00A7               	movwf	??_Lcd_Write_String
  2093     12E0  1803               	skipnc
  2094     12E1  0AA7               	incf	??_Lcd_Write_String,f
  2095     12E2  1FAA               	btfss	Lcd_Write_String@i,7
  2096     12E3  2AE5               	goto	u4590
  2097     12E4  03A7               	decf	??_Lcd_Write_String,f
  2098     12E5                     u4590:
  2099     12E5  1283               	bcf	3,5	;RP0=0, select bank0
  2100     12E6  1303               	bcf	3,6	;RP1=0, select bank0
  2101     12E7  0827               	movf	??_Lcd_Write_String,w
  2102     12E8  00A9               	movwf	??_Lcd_Write_String+2
  2103     12E9  0829               	movf	??_Lcd_Write_String+2,w
  2104     12EA  00FF               	movwf	btemp+1
  2105     12EB  0828               	movf	??_Lcd_Write_String+1,w
  2106     12EC  0084               	movwf	4
  2107     12ED  160A  118A  2000  160A  118A  	fcall	stringtab
  2108     12F2  160A  118A  21D5  160A  118A  	fcall	_Lcd_Write_Char
  2109     12F7                     l3541:
  2110     12F7  3001               	movlw	1
  2111     12F8  1283               	bcf	3,5	;RP0=0, select bank0
  2112     12F9  1303               	bcf	3,6	;RP1=0, select bank0
  2113     12FA  07AA               	addwf	Lcd_Write_String@i,f
  2114     12FB  1803               	skipnc
  2115     12FC  0AAB               	incf	Lcd_Write_String@i+1,f
  2116     12FD  3000               	movlw	0
  2117     12FE  07AB               	addwf	Lcd_Write_String@i+1,f
  2118     12FF                     l3543:
  2119     12FF  082A               	movf	Lcd_Write_String@i,w
  2120     1300  0725               	addwf	Lcd_Write_String@a,w
  2121     1301  00A8               	movwf	??_Lcd_Write_String+1
  2122     1302  0826               	movf	Lcd_Write_String@a+1,w
  2123     1303  00A7               	movwf	??_Lcd_Write_String
  2124     1304  1803               	skipnc
  2125     1305  0AA7               	incf	??_Lcd_Write_String,f
  2126     1306  1FAA               	btfss	Lcd_Write_String@i,7
  2127     1307  2B09               	goto	u4600
  2128     1308  03A7               	decf	??_Lcd_Write_String,f
  2129     1309                     u4600:
  2130     1309  1283               	bcf	3,5	;RP0=0, select bank0
  2131     130A  1303               	bcf	3,6	;RP1=0, select bank0
  2132     130B  0827               	movf	??_Lcd_Write_String,w
  2133     130C  00A9               	movwf	??_Lcd_Write_String+2
  2134     130D  0829               	movf	??_Lcd_Write_String+2,w
  2135     130E  00FF               	movwf	btemp+1
  2136     130F  0828               	movf	??_Lcd_Write_String+1,w
  2137     1310  0084               	movwf	4
  2138     1311  160A  118A  2000  160A  118A  	fcall	stringtab
  2139     1316  3A00               	xorlw	0
  2140     1317  1D03               	skipz
  2141     1318  2B1A               	goto	u4611
  2142     1319  2B1B               	goto	u4610
  2143     131A                     u4611:
  2144     131A  2ADB               	goto	l3539
  2145     131B                     u4610:
  2146     131B                     l170:
  2147     131B  0008               	return
  2148     131C                     __end_of_Lcd_Write_String:
  2149                           
  2150                           	psect	text3
  2151     11D5                     __ptext3:	
  2152 ;; *************** function _Lcd_Write_Char *****************
  2153 ;; Defined at:
  2154 ;;		line 80 in file "./lcd.h"
  2155 ;; Parameters:    Size  Location     Type
  2156 ;;  a               1    wreg     unsigned char 
  2157 ;; Auto vars:     Size  Location     Type
  2158 ;;  a               1    4[BANK0 ] unsigned char 
  2159 ;;  y               1    3[BANK0 ] unsigned char 
  2160 ;;  temp            1    2[BANK0 ] unsigned char 
  2161 ;; Return value:  Size  Location     Type
  2162 ;;                  1    wreg      void 
  2163 ;; Registers used:
  2164 ;;		wreg, status,2, status,0, pclath, cstack
  2165 ;; Tracked objects:
  2166 ;;		On entry : 0/0
  2167 ;;		On exit  : 0/0
  2168 ;;		Unchanged: 0/0
  2169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2170 ;;      Params:         0       0       0       0       0
  2171 ;;      Locals:         0       3       0       0       0
  2172 ;;      Temps:          0       1       0       0       0
  2173 ;;      Totals:         0       4       0       0       0
  2174 ;;Total ram usage:        4 bytes
  2175 ;; Hardware stack levels used: 1
  2176 ;; Hardware stack levels required when called: 3
  2177 ;; This function calls:
  2178 ;;		_Lcd_Port
  2179 ;; This function is called by:
  2180 ;;		_Lcd_Write_String
  2181 ;; This function uses a non-reentrant model
  2182 ;;
  2183                           
  2184     11D5                     _Lcd_Write_Char:	
  2185                           ;psect for function _Lcd_Write_Char
  2186                           
  2187                           
  2188                           ;incstack = 0
  2189                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2190                           ;Lcd_Write_Char@a stored from wreg
  2191     11D5  1283               	bcf	3,5	;RP0=0, select bank0
  2192     11D6  1303               	bcf	3,6	;RP1=0, select bank0
  2193     11D7  00A4               	movwf	Lcd_Write_Char@a
  2194     11D8                     l3491:
  2195                           
  2196                           ;./lcd.h: 80: void Lcd_Write_Char(char a);./lcd.h: 81: {;./lcd.h: 82:    char temp,y;;./
      +                          lcd.h: 83:    temp = a&0x0F;
  2197     11D8  0824               	movf	Lcd_Write_Char@a,w
  2198     11D9  390F               	andlw	15
  2199     11DA  00A2               	movwf	Lcd_Write_Char@temp
  2200                           
  2201                           ;./lcd.h: 84:    y = a&0xF0;
  2202     11DB  0824               	movf	Lcd_Write_Char@a,w
  2203     11DC  39F0               	andlw	240
  2204     11DD  00A3               	movwf	Lcd_Write_Char@y
  2205     11DE                     l3493:
  2206                           
  2207                           ;./lcd.h: 85:    RB5 = 1;
  2208     11DE  1686               	bsf	6,5	;volatile
  2209     11DF                     l3495:
  2210                           
  2211                           ;./lcd.h: 86:    Lcd_Port(y>>4);
  2212     11DF  0823               	movf	Lcd_Write_Char@y,w
  2213     11E0  00A1               	movwf	??_Lcd_Write_Char
  2214     11E1  3004               	movlw	4
  2215     11E2                     u4535:
  2216     11E2  1003               	clrc
  2217     11E3  0CA1               	rrf	??_Lcd_Write_Char,f
  2218     11E4  3EFF               	addlw	-1
  2219     11E5  1D03               	skipz
  2220     11E6  29E2               	goto	u4535
  2221     11E7  0821               	movf	??_Lcd_Write_Char,w
  2222     11E8  160A  158A  27E0  160A  118A  	fcall	_Lcd_Port
  2223     11ED                     l3497:
  2224                           
  2225                           ;./lcd.h: 87:    RB4 = 1;
  2226     11ED  1283               	bcf	3,5	;RP0=0, select bank0
  2227     11EE  1303               	bcf	3,6	;RP1=0, select bank0
  2228     11EF  1606               	bsf	6,4	;volatile
  2229     11F0                     l3499:
  2230                           
  2231                           ;./lcd.h: 88:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  2232     11F0  300C               	movlw	12
  2233     11F1  1283               	bcf	3,5	;RP0=0, select bank0
  2234     11F2  1303               	bcf	3,6	;RP1=0, select bank0
  2235     11F3  00A1               	movwf	??_Lcd_Write_Char
  2236     11F4                     u5817:
  2237     11F4  0BA1               	decfsz	??_Lcd_Write_Char,f
  2238     11F5  29F4               	goto	u5817
  2239     11F6  0000               	nop
  2240     11F7                     l3501:
  2241                           
  2242                           ;./lcd.h: 89:    RB4 = 0;
  2243     11F7  1283               	bcf	3,5	;RP0=0, select bank0
  2244     11F8  1303               	bcf	3,6	;RP1=0, select bank0
  2245     11F9  1206               	bcf	6,4	;volatile
  2246     11FA                     l3503:
  2247                           
  2248                           ;./lcd.h: 90:    Lcd_Port(temp);
  2249     11FA  0822               	movf	Lcd_Write_Char@temp,w
  2250     11FB  160A  158A  27E0  160A  118A  	fcall	_Lcd_Port
  2251     1200                     l3505:
  2252                           
  2253                           ;./lcd.h: 91:    RB4 = 1;
  2254     1200  1283               	bcf	3,5	;RP0=0, select bank0
  2255     1201  1303               	bcf	3,6	;RP1=0, select bank0
  2256     1202  1606               	bsf	6,4	;volatile
  2257     1203                     l3507:
  2258                           
  2259                           ;./lcd.h: 92:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  2260     1203  300C               	movlw	12
  2261     1204  1283               	bcf	3,5	;RP0=0, select bank0
  2262     1205  1303               	bcf	3,6	;RP1=0, select bank0
  2263     1206  00A1               	movwf	??_Lcd_Write_Char
  2264     1207                     u5827:
  2265     1207  0BA1               	decfsz	??_Lcd_Write_Char,f
  2266     1208  2A07               	goto	u5827
  2267     1209  0000               	nop
  2268     120A                     l3509:
  2269                           
  2270                           ;./lcd.h: 93:    RB4 = 0;
  2271     120A  1283               	bcf	3,5	;RP0=0, select bank0
  2272     120B  1303               	bcf	3,6	;RP1=0, select bank0
  2273     120C  1206               	bcf	6,4	;volatile
  2274     120D                     l164:
  2275     120D  0008               	return
  2276     120E                     __end_of_Lcd_Write_Char:
  2277                           
  2278                           	psect	text4
  2279     131C                     __ptext4:	
  2280 ;; *************** function _Lcd_Set_Cursor *****************
  2281 ;; Defined at:
  2282 ;;		line 40 in file "./lcd.h"
  2283 ;; Parameters:    Size  Location     Type
  2284 ;;  a               1    wreg     unsigned char 
  2285 ;;  b               1    4[BANK0 ] unsigned char 
  2286 ;; Auto vars:     Size  Location     Type
  2287 ;;  a               1    6[BANK0 ] unsigned char 
  2288 ;;  temp            1    9[BANK0 ] unsigned char 
  2289 ;;  y               1    8[BANK0 ] unsigned char 
  2290 ;;  z               1    7[BANK0 ] unsigned char 
  2291 ;; Return value:  Size  Location     Type
  2292 ;;                  1    wreg      void 
  2293 ;; Registers used:
  2294 ;;		wreg, status,2, status,0, pclath, cstack
  2295 ;; Tracked objects:
  2296 ;;		On entry : 0/0
  2297 ;;		On exit  : 0/0
  2298 ;;		Unchanged: 0/0
  2299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2300 ;;      Params:         0       1       0       0       0
  2301 ;;      Locals:         0       4       0       0       0
  2302 ;;      Temps:          0       1       0       0       0
  2303 ;;      Totals:         0       6       0       0       0
  2304 ;;Total ram usage:        6 bytes
  2305 ;; Hardware stack levels used: 1
  2306 ;; Hardware stack levels required when called: 4
  2307 ;; This function calls:
  2308 ;;		_Lcd_Cmd
  2309 ;; This function is called by:
  2310 ;;		_yagBakim
  2311 ;;		_main
  2312 ;; This function uses a non-reentrant model
  2313 ;;
  2314                           
  2315     131C                     _Lcd_Set_Cursor:	
  2316                           ;psect for function _Lcd_Set_Cursor
  2317                           
  2318                           
  2319                           ;incstack = 0
  2320                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2321                           ;Lcd_Set_Cursor@a stored from wreg
  2322     131C  1283               	bcf	3,5	;RP0=0, select bank0
  2323     131D  1303               	bcf	3,6	;RP1=0, select bank0
  2324     131E  00A6               	movwf	Lcd_Set_Cursor@a
  2325     131F                     l3517:
  2326                           
  2327                           ;./lcd.h: 40: void Lcd_Set_Cursor(char a, char b);./lcd.h: 41: {;./lcd.h: 42:  char temp
      +                          ,z,y;;./lcd.h: 43:  if(a == 1)
  2328     131F  0326               	decf	Lcd_Set_Cursor@a,w
  2329     1320  1D03               	btfss	3,2
  2330     1321  2B23               	goto	u4551
  2331     1322  2B24               	goto	u4550
  2332     1323                     u4551:
  2333     1323  2B43               	goto	l3527
  2334     1324                     u4550:
  2335     1324                     l3519:
  2336                           
  2337                           ;./lcd.h: 44:  {;./lcd.h: 45:    temp = 0x80 + b - 1;
  2338     1324  0824               	movf	Lcd_Set_Cursor@b,w
  2339     1325  3E7F               	addlw	127
  2340     1326  00A9               	movwf	Lcd_Set_Cursor@temp
  2341                           
  2342                           ;./lcd.h: 46:   z = temp>>4;
  2343     1327  0829               	movf	Lcd_Set_Cursor@temp,w
  2344     1328  00A5               	movwf	??_Lcd_Set_Cursor
  2345     1329  3004               	movlw	4
  2346     132A                     u4565:
  2347     132A  1003               	clrc
  2348     132B  0CA5               	rrf	??_Lcd_Set_Cursor,f
  2349     132C  3EFF               	addlw	-1
  2350     132D  1D03               	skipz
  2351     132E  2B2A               	goto	u4565
  2352     132F  0825               	movf	??_Lcd_Set_Cursor,w
  2353     1330  00A7               	movwf	Lcd_Set_Cursor@z
  2354     1331                     l3521:
  2355                           
  2356                           ;./lcd.h: 47:   y = temp & 0x0F;
  2357     1331  0829               	movf	Lcd_Set_Cursor@temp,w
  2358     1332  390F               	andlw	15
  2359     1333  00A8               	movwf	Lcd_Set_Cursor@y
  2360     1334                     l3523:
  2361                           
  2362                           ;./lcd.h: 48:   Lcd_Cmd(z);
  2363     1334  0827               	movf	Lcd_Set_Cursor@z,w
  2364     1335  160A  158A  27C4  160A  118A  	fcall	_Lcd_Cmd
  2365     133A                     l3525:
  2366                           
  2367                           ;./lcd.h: 49:   Lcd_Cmd(y);
  2368     133A  1283               	bcf	3,5	;RP0=0, select bank0
  2369     133B  1303               	bcf	3,6	;RP1=0, select bank0
  2370     133C  0828               	movf	Lcd_Set_Cursor@y,w
  2371     133D  160A  158A  27C4  160A  118A  	fcall	_Lcd_Cmd
  2372                           
  2373                           ;./lcd.h: 50:  }
  2374     1342  2B67               	goto	l158
  2375     1343                     l3527:
  2376     1343  3002               	movlw	2
  2377     1344  0626               	xorwf	Lcd_Set_Cursor@a,w
  2378     1345  1D03               	btfss	3,2
  2379     1346  2B48               	goto	u4571
  2380     1347  2B49               	goto	u4570
  2381     1348                     u4571:
  2382     1348  2B67               	goto	l158
  2383     1349                     u4570:
  2384     1349                     l3529:
  2385                           
  2386                           ;./lcd.h: 52:  {;./lcd.h: 53:   temp = 0xC0 + b - 1;
  2387     1349  0824               	movf	Lcd_Set_Cursor@b,w
  2388     134A  3EBF               	addlw	191
  2389     134B  00A9               	movwf	Lcd_Set_Cursor@temp
  2390                           
  2391                           ;./lcd.h: 54:   z = temp>>4;
  2392     134C  0829               	movf	Lcd_Set_Cursor@temp,w
  2393     134D  00A5               	movwf	??_Lcd_Set_Cursor
  2394     134E  3004               	movlw	4
  2395     134F                     u4585:
  2396     134F  1003               	clrc
  2397     1350  0CA5               	rrf	??_Lcd_Set_Cursor,f
  2398     1351  3EFF               	addlw	-1
  2399     1352  1D03               	skipz
  2400     1353  2B4F               	goto	u4585
  2401     1354  0825               	movf	??_Lcd_Set_Cursor,w
  2402     1355  00A7               	movwf	Lcd_Set_Cursor@z
  2403     1356                     l3531:
  2404                           
  2405                           ;./lcd.h: 55:   y = temp & 0x0F;
  2406     1356  0829               	movf	Lcd_Set_Cursor@temp,w
  2407     1357  390F               	andlw	15
  2408     1358  00A8               	movwf	Lcd_Set_Cursor@y
  2409     1359                     l3533:
  2410                           
  2411                           ;./lcd.h: 56:   Lcd_Cmd(z);
  2412     1359  0827               	movf	Lcd_Set_Cursor@z,w
  2413     135A  160A  158A  27C4  160A  118A  	fcall	_Lcd_Cmd
  2414     135F                     l3535:
  2415                           
  2416                           ;./lcd.h: 57:   Lcd_Cmd(y);
  2417     135F  1283               	bcf	3,5	;RP0=0, select bank0
  2418     1360  1303               	bcf	3,6	;RP1=0, select bank0
  2419     1361  0828               	movf	Lcd_Set_Cursor@y,w
  2420     1362  160A  158A  27C4  160A  118A  	fcall	_Lcd_Cmd
  2421     1367                     l158:
  2422     1367  0008               	return
  2423     1368                     __end_of_Lcd_Set_Cursor:
  2424                           
  2425                           	psect	text5
  2426     1F6A                     __ptext5:	
  2427 ;; *************** function _Lcd_Clear *****************
  2428 ;; Defined at:
  2429 ;;		line 34 in file "./lcd.h"
  2430 ;; Parameters:    Size  Location     Type
  2431 ;;		None
  2432 ;; Auto vars:     Size  Location     Type
  2433 ;;		None
  2434 ;; Return value:  Size  Location     Type
  2435 ;;                  1    wreg      void 
  2436 ;; Registers used:
  2437 ;;		wreg, status,2, status,0, pclath, cstack
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/0
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2443 ;;      Params:         0       0       0       0       0
  2444 ;;      Locals:         0       0       0       0       0
  2445 ;;      Temps:          0       0       0       0       0
  2446 ;;      Totals:         0       0       0       0       0
  2447 ;;Total ram usage:        0 bytes
  2448 ;; Hardware stack levels used: 1
  2449 ;; Hardware stack levels required when called: 4
  2450 ;; This function calls:
  2451 ;;		_Lcd_Cmd
  2452 ;; This function is called by:
  2453 ;;		_yagBakim
  2454 ;;		_main
  2455 ;; This function uses a non-reentrant model
  2456 ;;
  2457                           
  2458     1F6A                     _Lcd_Clear:	
  2459                           ;psect for function _Lcd_Clear
  2460                           
  2461     1F6A                     l3515:	
  2462                           ;incstack = 0
  2463                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2464                           
  2465                           
  2466                           ;./lcd.h: 36:  Lcd_Cmd(0);
  2467     1F6A  3000               	movlw	0
  2468     1F6B  160A  158A  27C4  160A  158A  	fcall	_Lcd_Cmd
  2469                           
  2470                           ;./lcd.h: 37:  Lcd_Cmd(1);
  2471     1F70  3001               	movlw	1
  2472     1F71  160A  158A  27C4  160A  158A  	fcall	_Lcd_Cmd
  2473     1F76                     l152:
  2474     1F76  0008               	return
  2475     1F77                     __end_of_Lcd_Clear:
  2476                           
  2477                           	psect	text6
  2478     0803                     __ptext6:	
  2479 ;; *************** function _writeEEPROM *****************
  2480 ;; Defined at:
  2481 ;;		line 51 in file "main1.c"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;  address         2    0[BANK0 ] unsigned int 
  2484 ;;  data            2    2[BANK0 ] unsigned int 
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;		None
  2487 ;; Return value:  Size  Location     Type
  2488 ;;                  1    wreg      void 
  2489 ;; Registers used:
  2490 ;;		wreg
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2496 ;;      Params:         0       4       0       0       0
  2497 ;;      Locals:         0       0       0       0       0
  2498 ;;      Temps:          0       0       0       0       0
  2499 ;;      Totals:         0       4       0       0       0
  2500 ;;Total ram usage:        4 bytes
  2501 ;; Hardware stack levels used: 1
  2502 ;; Hardware stack levels required when called: 2
  2503 ;; This function calls:
  2504 ;;		Nothing
  2505 ;; This function is called by:
  2506 ;;		_main
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           
  2510     0803                     _writeEEPROM:	
  2511                           ;psect for function _writeEEPROM
  2512                           
  2513     0803                     l3665:	
  2514                           ;incstack = 0
  2515                           ; Regs used in _writeEEPROM: [wreg]
  2516                           
  2517                           
  2518                           ;main1.c: 53:     EEADR = address;
  2519     0803  1283               	bcf	3,5	;RP0=0, select bank0
  2520     0804  1303               	bcf	3,6	;RP1=0, select bank0
  2521     0805  0820               	movf	writeEEPROM@address,w
  2522     0806  1283               	bcf	3,5	;RP0=0, select bank2
  2523     0807  1703               	bsf	3,6	;RP1=1, select bank2
  2524     0808  008D               	movwf	13	;volatile
  2525                           
  2526                           ;main1.c: 54:     EEDATA = data;
  2527     0809  1283               	bcf	3,5	;RP0=0, select bank0
  2528     080A  1303               	bcf	3,6	;RP1=0, select bank0
  2529     080B  0822               	movf	writeEEPROM@data,w
  2530     080C  1283               	bcf	3,5	;RP0=0, select bank2
  2531     080D  1703               	bsf	3,6	;RP1=1, select bank2
  2532     080E  008C               	movwf	12	;volatile
  2533     080F                     l3667:
  2534                           
  2535                           ;main1.c: 55:     WREN = 1;
  2536     080F  1683               	bsf	3,5	;RP0=1, select bank3
  2537     0810  1703               	bsf	3,6	;RP1=1, select bank3
  2538     0811  150C               	bsf	12,2	;volsfr
  2539     0812                     l3669:
  2540                           
  2541                           ;main1.c: 56:     GIE = 0;
  2542     0812  138B               	bcf	11,7	;volatile
  2543                           
  2544                           ;main1.c: 57:     EECON2 = 0x55;
  2545     0813  3055               	movlw	85
  2546     0814  008D               	movwf	13	;volsfr
  2547                           
  2548                           ;main1.c: 58:     EECON2 = 0xAA;
  2549     0815  30AA               	movlw	170
  2550     0816  008D               	movwf	13	;volsfr
  2551     0817                     l3671:
  2552                           
  2553                           ;main1.c: 59:     WR = 1;
  2554     0817  148C               	bsf	12,1	;volsfr
  2555     0818                     l3673:
  2556                           
  2557                           ;main1.c: 60:     GIE = 1;
  2558     0818  178B               	bsf	11,7	;volatile
  2559     0819                     l3675:
  2560                           
  2561                           ;main1.c: 61:     WREN = 0;
  2562     0819  110C               	bcf	12,2	;volsfr
  2563     081A                     l184:	
  2564                           ;main1.c: 62:     while (WR == 1);
  2565                           
  2566     081A  188C               	btfsc	12,1	;volsfr
  2567     081B  281D               	goto	u4851
  2568     081C  281E               	goto	u4850
  2569     081D                     u4851:
  2570     081D  281A               	goto	l184
  2571     081E                     u4850:
  2572     081E                     l187:
  2573     081E  0008               	return
  2574     081F                     __end_of_writeEEPROM:
  2575                           
  2576                           	psect	text7
  2577     09EE                     __ptext7:	
  2578 ;; *************** function _sprintf *****************
  2579 ;; Defined at:
  2580 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  2581 ;; Parameters:    Size  Location     Type
  2582 ;;  sp              1    wreg     PTR unsigned char 
  2583 ;;		 -> main@combinedText_376(20), main@uartMessage_372(8), main@combinedText(20), main@uartMessage(8), 
  2584 ;;		 -> main@rpmString(5), main@adcString1(4), main@lcdText(9), 
  2585 ;;  f               2   12[BANK0 ] PTR const unsigned char 
  2586 ;;		 -> STR_25(6), STR_23(6), STR_19(6), STR_17(6), 
  2587 ;;		 -> STR_13(10), STR_11(6), STR_8(11), 
  2588 ;; Auto vars:     Size  Location     Type
  2589 ;;  sp              1   34[BANK0 ] PTR unsigned char 
  2590 ;;		 -> main@combinedText_376(20), main@uartMessage_372(8), main@combinedText(20), main@uartMessage(8), 
  2591 ;;		 -> main@rpmString(5), main@adcString1(4), main@lcdText(9), 
  2592 ;;  tmpval          4    0        struct .
  2593 ;;  width           2   31[BANK0 ] int 
  2594 ;;  val             2   28[BANK0 ] unsigned int 
  2595 ;;  cp              2    0        PTR const unsigned char 
  2596 ;;  len             2    0        unsigned int 
  2597 ;;  c               1   33[BANK0 ] unsigned char 
  2598 ;;  flag            1   30[BANK0 ] unsigned char 
  2599 ;;  ap              1   27[BANK0 ] PTR void [1]
  2600 ;;		 -> ?_sprintf(2), 
  2601 ;;  prec            1   26[BANK0 ] char 
  2602 ;; Return value:  Size  Location     Type
  2603 ;;                  2   12[BANK0 ] int 
  2604 ;; Registers used:
  2605 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2606 ;; Tracked objects:
  2607 ;;		On entry : 0/0
  2608 ;;		On exit  : 0/0
  2609 ;;		Unchanged: 0/0
  2610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2611 ;;      Params:         0      10       0       0       0
  2612 ;;      Locals:         0       9       0       0       0
  2613 ;;      Temps:          0       4       0       0       0
  2614 ;;      Totals:         0      23       0       0       0
  2615 ;;Total ram usage:       23 bytes
  2616 ;; Hardware stack levels used: 1
  2617 ;; Hardware stack levels required when called: 3
  2618 ;; This function calls:
  2619 ;;		___lwdiv
  2620 ;;		___lwmod
  2621 ;;		___wmul
  2622 ;;		_isdigit
  2623 ;; This function is called by:
  2624 ;;		_main
  2625 ;; This function uses a non-reentrant model
  2626 ;;
  2627                           
  2628     09EE                     _sprintf:	
  2629                           ;psect for function _sprintf
  2630                           
  2631                           
  2632                           ;incstack = 0
  2633                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2634                           ;sprintf@sp stored from wreg
  2635     09EE  1283               	bcf	3,5	;RP0=0, select bank0
  2636     09EF  1303               	bcf	3,6	;RP1=0, select bank0
  2637     09F0  00C2               	movwf	sprintf@sp
  2638     09F1                     l3677:
  2639                           
  2640                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  2641     09F1  302E               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  2642     09F2  00BB               	movwf	sprintf@ap
  2643                           
  2644                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2645     09F3  2BCA               	goto	l3787
  2646     09F4                     l3679:
  2647                           
  2648                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2649     09F4  3025               	movlw	37
  2650     09F5  0641               	xorwf	sprintf@c,w
  2651     09F6  1903               	btfsc	3,2
  2652     09F7  29F9               	goto	u4861
  2653     09F8  29FA               	goto	u4860
  2654     09F9                     u4861:
  2655     09F9  2A04               	goto	l3685
  2656     09FA                     u4860:
  2657     09FA                     l3681:
  2658                           
  2659                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2660     09FA  0842               	movf	sprintf@sp,w
  2661     09FB  0084               	movwf	4
  2662     09FC  0841               	movf	sprintf@c,w
  2663     09FD  1383               	bcf	3,7	;select IRP bank0
  2664     09FE  0080               	movwf	0
  2665     09FF                     l3683:
  2666     09FF  3001               	movlw	1
  2667     0A00  00FF               	movwf	btemp+1
  2668     0A01  087F               	movf	btemp+1,w
  2669     0A02  07C2               	addwf	sprintf@sp,f
  2670                           
  2671                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 559:    continue;
  2672     0A03  2BCA               	goto	l3787
  2673     0A04                     l3685:
  2674                           
  2675                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2676     0A04  01BF               	clrf	sprintf@width
  2677     0A05  01C0               	clrf	sprintf@width+1
  2678                           
  2679                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2680     0A06  01BE               	clrf	sprintf@flag
  2681     0A07  2A0F               	goto	l3691
  2682     0A08                     l374:	
  2683                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 596:    case '0':
  2684                           
  2685                           
  2686                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  2687     0A08  153E               	bsf	sprintf@flag,2
  2688     0A09                     l3687:
  2689                           
  2690                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 598:     f++;
  2691     0A09  3001               	movlw	1
  2692     0A0A  07AC               	addwf	sprintf@f,f
  2693     0A0B  1803               	skipnc
  2694     0A0C  0AAD               	incf	sprintf@f+1,f
  2695     0A0D  3000               	movlw	0
  2696     0A0E  07AD               	addwf	sprintf@f+1,f
  2697     0A0F                     l3691:	
  2698                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  2699                           
  2700     0A0F  082D               	movf	sprintf@f+1,w
  2701     0A10  00FF               	movwf	btemp+1
  2702     0A11  082C               	movf	sprintf@f,w
  2703     0A12  0084               	movwf	4
  2704     0A13  160A  118A  2000  120A  158A  	fcall	stringtab
  2705     0A18  00B6               	movwf	??_sprintf
  2706     0A19  01B7               	clrf	??_sprintf+1
  2707                           
  2708                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2709                           ; Switch size 1, requested type "simple"
  2710                           ; Number of cases is 1, Range of values is 0 to 0
  2711                           ; switch strategies available:
  2712                           ; Name         Instructions Cycles
  2713                           ; simple_byte            4     3 (average)
  2714                           ; direct_byte           11     8 (fixed)
  2715                           ; jumptable            260     6 (fixed)
  2716                           ;	Chosen strategy is simple_byte
  2717     0A1A  0837               	movf	??_sprintf+1,w
  2718     0A1B  3A00               	xorlw	0	; case 0
  2719     0A1C  1903               	skipnz
  2720     0A1D  2A1F               	goto	l4303
  2721     0A1E  2A24               	goto	l3693
  2722     0A1F                     l4303:
  2723                           
  2724                           ; Switch size 1, requested type "simple"
  2725                           ; Number of cases is 1, Range of values is 48 to 48
  2726                           ; switch strategies available:
  2727                           ; Name         Instructions Cycles
  2728                           ; simple_byte            4     3 (average)
  2729                           ; direct_byte           14    11 (fixed)
  2730                           ; jumptable            263     9 (fixed)
  2731                           ;	Chosen strategy is simple_byte
  2732     0A1F  0836               	movf	??_sprintf,w
  2733     0A20  3A30               	xorlw	48	; case 48
  2734     0A21  1903               	skipnz
  2735     0A22  2A08               	goto	l374
  2736     0A23  2A24               	goto	l3693
  2737     0A24                     l3693:
  2738                           
  2739                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  2740     0A24  082D               	movf	sprintf@f+1,w
  2741     0A25  00FF               	movwf	btemp+1
  2742     0A26  082C               	movf	sprintf@f,w
  2743     0A27  0084               	movwf	4
  2744     0A28  160A  118A  2000  120A  158A  	fcall	stringtab
  2745     0A2D  160A  158A  2785  120A  158A  	fcall	_isdigit
  2746     0A32  1C03               	btfss	3,0
  2747     0A33  2A35               	goto	u4871
  2748     0A34  2A36               	goto	u4870
  2749     0A35                     u4871:
  2750     0A35  2A7F               	goto	l3707
  2751     0A36                     u4870:
  2752     0A36                     l3695:
  2753                           
  2754                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2755     0A36  1283               	bcf	3,5	;RP0=0, select bank0
  2756     0A37  1303               	bcf	3,6	;RP1=0, select bank0
  2757     0A38  01BF               	clrf	sprintf@width
  2758     0A39  01C0               	clrf	sprintf@width+1
  2759     0A3A                     l3697:
  2760                           
  2761                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2762     0A3A  300A               	movlw	10
  2763     0A3B  1283               	bcf	3,5	;RP0=0, select bank0
  2764     0A3C  1303               	bcf	3,6	;RP1=0, select bank0
  2765     0A3D  00A4               	movwf	___wmul@multiplier
  2766     0A3E  3000               	movlw	0
  2767     0A3F  00A5               	movwf	___wmul@multiplier+1
  2768     0A40  0840               	movf	sprintf@width+1,w
  2769     0A41  00A7               	movwf	___wmul@multiplicand+1
  2770     0A42  083F               	movf	sprintf@width,w
  2771     0A43  00A6               	movwf	___wmul@multiplicand
  2772     0A44  160A  118A  2185  120A  158A  	fcall	___wmul
  2773     0A49  1283               	bcf	3,5	;RP0=0, select bank0
  2774     0A4A  1303               	bcf	3,6	;RP1=0, select bank0
  2775     0A4B  0825               	movf	?___wmul+1,w
  2776     0A4C  00C0               	movwf	sprintf@width+1
  2777     0A4D  0824               	movf	?___wmul,w
  2778     0A4E  00BF               	movwf	sprintf@width
  2779     0A4F                     l3699:
  2780                           
  2781                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2782     0A4F  082D               	movf	sprintf@f+1,w
  2783     0A50  00FF               	movwf	btemp+1
  2784     0A51  082C               	movf	sprintf@f,w
  2785     0A52  0084               	movwf	4
  2786     0A53  160A  118A  2000  120A  158A  	fcall	stringtab
  2787     0A58  3ED0               	addlw	208
  2788     0A59  00B6               	movwf	??_sprintf
  2789     0A5A  30FF               	movlw	255
  2790     0A5B  1803               	skipnc
  2791     0A5C  3000               	movlw	0
  2792     0A5D  00B7               	movwf	??_sprintf+1
  2793     0A5E  0836               	movf	??_sprintf,w
  2794     0A5F  07BF               	addwf	sprintf@width,f
  2795     0A60  1803               	skipnc
  2796     0A61  0AC0               	incf	sprintf@width+1,f
  2797     0A62  0837               	movf	??_sprintf+1,w
  2798     0A63  07C0               	addwf	sprintf@width+1,f
  2799     0A64                     l3701:
  2800     0A64  3001               	movlw	1
  2801     0A65  07AC               	addwf	sprintf@f,f
  2802     0A66  1803               	skipnc
  2803     0A67  0AAD               	incf	sprintf@f+1,f
  2804     0A68  3000               	movlw	0
  2805     0A69  07AD               	addwf	sprintf@f+1,f
  2806     0A6A                     l3703:
  2807                           
  2808                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2809     0A6A  082D               	movf	sprintf@f+1,w
  2810     0A6B  00FF               	movwf	btemp+1
  2811     0A6C  082C               	movf	sprintf@f,w
  2812     0A6D  0084               	movwf	4
  2813     0A6E  160A  118A  2000  120A  158A  	fcall	stringtab
  2814     0A73  160A  158A  2785  120A  158A  	fcall	_isdigit
  2815     0A78  1803               	btfsc	3,0
  2816     0A79  2A7B               	goto	u4881
  2817     0A7A  2A7C               	goto	u4880
  2818     0A7B                     u4881:
  2819     0A7B  2A3A               	goto	l3697
  2820     0A7C                     u4880:
  2821     0A7C  2A7F               	goto	l3707
  2822     0A7D                     l388:	
  2823                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 843:   case 'u':
  2824                           
  2825                           
  2826                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          x40;
  2827     0A7D  173E               	bsf	sprintf@flag,6
  2828                           
  2829                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 845:    break;
  2830     0A7E  2AA7               	goto	l386
  2831     0A7F                     l3707:
  2832     0A7F  1283               	bcf	3,5	;RP0=0, select bank0
  2833     0A80  1303               	bcf	3,6	;RP1=0, select bank0
  2834     0A81  082D               	movf	sprintf@f+1,w
  2835     0A82  00B7               	movwf	??_sprintf+1
  2836     0A83  082C               	movf	sprintf@f,w
  2837     0A84  00B6               	movwf	??_sprintf
  2838     0A85  0AAC               	incf	sprintf@f,f
  2839     0A86  1903               	skipnz
  2840     0A87  0AAD               	incf	sprintf@f+1,f
  2841     0A88  0837               	movf	??_sprintf+1,w
  2842     0A89  00FF               	movwf	btemp+1
  2843     0A8A  0836               	movf	??_sprintf,w
  2844     0A8B  0084               	movwf	4
  2845     0A8C  160A  118A  2000  120A  158A  	fcall	stringtab
  2846     0A91  00C1               	movwf	sprintf@c
  2847     0A92  00B8               	movwf	??_sprintf+2
  2848     0A93  01B9               	clrf	??_sprintf+3
  2849                           
  2850                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2851                           ; Switch size 1, requested type "simple"
  2852                           ; Number of cases is 1, Range of values is 0 to 0
  2853                           ; switch strategies available:
  2854                           ; Name         Instructions Cycles
  2855                           ; simple_byte            4     3 (average)
  2856                           ; direct_byte           11     8 (fixed)
  2857                           ; jumptable            260     6 (fixed)
  2858                           ;	Chosen strategy is simple_byte
  2859     0A94  0839               	movf	??_sprintf+3,w
  2860     0A95  3A00               	xorlw	0	; case 0
  2861     0A96  1903               	skipnz
  2862     0A97  2A99               	goto	l4305
  2863     0A98  2BCA               	goto	l3787
  2864     0A99                     l4305:
  2865                           
  2866                           ; Switch size 1, requested type "simple"
  2867                           ; Number of cases is 4, Range of values is 0 to 117
  2868                           ; switch strategies available:
  2869                           ; Name         Instructions Cycles
  2870                           ; simple_byte           13     7 (average)
  2871                           ; jumptable            260     6 (fixed)
  2872                           ;	Chosen strategy is simple_byte
  2873     0A99  0838               	movf	??_sprintf+2,w
  2874     0A9A  3A00               	xorlw	0	; case 0
  2875     0A9B  1903               	skipnz
  2876     0A9C  2BE0               	goto	l3789
  2877     0A9D  3A64               	xorlw	100	; case 100
  2878     0A9E  1903               	skipnz
  2879     0A9F  2AA7               	goto	l386
  2880     0AA0  3A0D               	xorlw	13	; case 105
  2881     0AA1  1903               	skipnz
  2882     0AA2  2AA7               	goto	l386
  2883     0AA3  3A1C               	xorlw	28	; case 117
  2884     0AA4  1903               	skipnz
  2885     0AA5  2A7D               	goto	l388
  2886     0AA6  2BCA               	goto	l3787
  2887     0AA7                     l386:
  2888                           
  2889                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1277:   if((flag 
      +                          & 0x40) == 0x00)
  2890     0AA7  1B3E               	btfsc	sprintf@flag,6
  2891     0AA8  2AAA               	goto	u4891
  2892     0AA9  2AAB               	goto	u4890
  2893     0AAA                     u4891:
  2894     0AAA  2AC5               	goto	l3719
  2895     0AAB                     u4890:
  2896     0AAB                     l3709:
  2897                           
  2898                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2899     0AAB  083B               	movf	sprintf@ap,w
  2900     0AAC  0084               	movwf	4
  2901     0AAD  1383               	bcf	3,7	;select IRP bank0
  2902     0AAE  0800               	movf	0,w
  2903     0AAF  00BC               	movwf	sprintf@val
  2904     0AB0  0A84               	incf	4,f
  2905     0AB1  0800               	movf	0,w
  2906     0AB2  00BD               	movwf	sprintf@val+1
  2907     0AB3                     l3711:
  2908     0AB3  3002               	movlw	2
  2909     0AB4  00FF               	movwf	btemp+1
  2910     0AB5  087F               	movf	btemp+1,w
  2911     0AB6  07BB               	addwf	sprintf@ap,f
  2912     0AB7                     l3713:
  2913                           
  2914                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2915     0AB7  1FBD               	btfss	sprintf@val+1,7
  2916     0AB8  2ABA               	goto	u4901
  2917     0AB9  2ABB               	goto	u4900
  2918     0ABA                     u4901:
  2919     0ABA  2AD1               	goto	l3723
  2920     0ABB                     u4900:
  2921     0ABB                     l3715:
  2922                           
  2923                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2924     0ABB  3003               	movlw	3
  2925     0ABC  00FF               	movwf	btemp+1
  2926     0ABD  087F               	movf	btemp+1,w
  2927     0ABE  04BE               	iorwf	sprintf@flag,f
  2928     0ABF                     l3717:
  2929                           
  2930                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2931     0ABF  09BC               	comf	sprintf@val,f
  2932     0AC0  09BD               	comf	sprintf@val+1,f
  2933     0AC1  0ABC               	incf	sprintf@val,f
  2934     0AC2  1903               	skipnz
  2935     0AC3  0ABD               	incf	sprintf@val+1,f
  2936     0AC4  2AD1               	goto	l3723
  2937     0AC5                     l3719:
  2938                           
  2939                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2940     0AC5  083B               	movf	sprintf@ap,w
  2941     0AC6  0084               	movwf	4
  2942     0AC7  1383               	bcf	3,7	;select IRP bank0
  2943     0AC8  0800               	movf	0,w
  2944     0AC9  00BC               	movwf	sprintf@val
  2945     0ACA  0A84               	incf	4,f
  2946     0ACB  0800               	movf	0,w
  2947     0ACC  00BD               	movwf	sprintf@val+1
  2948     0ACD                     l3721:
  2949     0ACD  3002               	movlw	2
  2950     0ACE  00FF               	movwf	btemp+1
  2951     0ACF  087F               	movf	btemp+1,w
  2952     0AD0  07BB               	addwf	sprintf@ap,f
  2953     0AD1                     l3723:
  2954                           
  2955                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2956     0AD1  01C1               	clrf	sprintf@c
  2957     0AD2  0AC1               	incf	sprintf@c,f
  2958     0AD3                     l3729:
  2959                           
  2960                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2961     0AD3  0841               	movf	sprintf@c,w
  2962     0AD4  00B6               	movwf	??_sprintf
  2963     0AD5  0736               	addwf	??_sprintf,w
  2964     0AD6  3E12               	addlw	low (_dpowers| (0+32768))
  2965     0AD7  0084               	movwf	4
  2966     0AD8  3090               	movlw	high (_dpowers| (0+32768))
  2967     0AD9  1803               	skipnc
  2968     0ADA  3E01               	addlw	1
  2969     0ADB  00FF               	movwf	btemp+1
  2970     0ADC  160A  118A  2000  120A  158A  	fcall	stringtab
  2971     0AE1  00B7               	movwf	??_sprintf+1
  2972     0AE2  160A  118A  2000  120A  158A  	fcall	stringtab
  2973     0AE7  00B8               	movwf	??_sprintf+2
  2974     0AE8  0838               	movf	??_sprintf+2,w
  2975     0AE9  023D               	subwf	sprintf@val+1,w
  2976     0AEA  1D03               	skipz
  2977     0AEB  2AEE               	goto	u4915
  2978     0AEC  0837               	movf	??_sprintf+1,w
  2979     0AED  023C               	subwf	sprintf@val,w
  2980     0AEE                     u4915:
  2981     0AEE  1803               	skipnc
  2982     0AEF  2AF1               	goto	u4911
  2983     0AF0  2AF2               	goto	u4910
  2984     0AF1                     u4911:
  2985     0AF1  2AF3               	goto	l3733
  2986     0AF2                     u4910:
  2987     0AF2  2AFD               	goto	l3737
  2988     0AF3                     l3733:
  2989     0AF3  3001               	movlw	1
  2990     0AF4  00FF               	movwf	btemp+1
  2991     0AF5  087F               	movf	btemp+1,w
  2992     0AF6  07C1               	addwf	sprintf@c,f
  2993     0AF7                     l3735:
  2994     0AF7  3005               	movlw	5
  2995     0AF8  0641               	xorwf	sprintf@c,w
  2996     0AF9  1D03               	btfss	3,2
  2997     0AFA  2AFC               	goto	u4921
  2998     0AFB  2AFD               	goto	u4920
  2999     0AFC                     u4921:
  3000     0AFC  2AD3               	goto	l3729
  3001     0AFD                     u4920:
  3002     0AFD                     l3737:
  3003                           
  3004                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  3005     0AFD  083F               	movf	sprintf@width,w
  3006     0AFE  0440               	iorwf	sprintf@width+1,w
  3007     0AFF  1903               	btfsc	3,2
  3008     0B00  2B02               	goto	u4931
  3009     0B01  2B03               	goto	u4930
  3010     0B02                     u4931:
  3011     0B02  2B0F               	goto	l395
  3012     0B03                     u4930:
  3013     0B03                     l3739:
  3014     0B03  083E               	movf	sprintf@flag,w
  3015     0B04  3903               	andlw	3
  3016     0B05  1903               	btfsc	3,2
  3017     0B06  2B08               	goto	u4941
  3018     0B07  2B09               	goto	u4940
  3019     0B08                     u4941:
  3020     0B08  2B0F               	goto	l395
  3021     0B09                     u4940:
  3022     0B09                     l3741:
  3023                           
  3024                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1372:    width--;
  3025     0B09  30FF               	movlw	255
  3026     0B0A  07BF               	addwf	sprintf@width,f
  3027     0B0B  1803               	skipnc
  3028     0B0C  0AC0               	incf	sprintf@width+1,f
  3029     0B0D  30FF               	movlw	255
  3030     0B0E  07C0               	addwf	sprintf@width+1,f
  3031     0B0F                     l395:
  3032                           
  3033                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  3034     0B0F  0840               	movf	sprintf@width+1,w
  3035     0B10  3A80               	xorlw	128
  3036     0B11  3C80               	sublw	128
  3037     0B12  1D03               	skipz
  3038     0B13  2B16               	goto	u4955
  3039     0B14  083F               	movf	sprintf@width,w
  3040     0B15  0241               	subwf	sprintf@c,w
  3041     0B16                     u4955:
  3042     0B16  1803               	skipnc
  3043     0B17  2B19               	goto	u4951
  3044     0B18  2B1A               	goto	u4950
  3045     0B19                     u4951:
  3046     0B19  2B26               	goto	l3745
  3047     0B1A                     u4950:
  3048     0B1A                     l3743:
  3049                           
  3050                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  3051     0B1A  1283               	bcf	3,5	;RP0=0, select bank0
  3052     0B1B  1303               	bcf	3,6	;RP1=0, select bank0
  3053     0B1C  0841               	movf	sprintf@c,w
  3054     0B1D  00B6               	movwf	??_sprintf
  3055     0B1E  01B7               	clrf	??_sprintf+1
  3056     0B1F  0836               	movf	??_sprintf,w
  3057     0B20  02BF               	subwf	sprintf@width,f
  3058     0B21  0837               	movf	??_sprintf+1,w
  3059     0B22  1C03               	skipc
  3060     0B23  03C0               	decf	sprintf@width+1,f
  3061     0B24  02C0               	subwf	sprintf@width+1,f
  3062     0B25  2B2A               	goto	l3747
  3063     0B26                     l3745:
  3064                           
  3065                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  3066     0B26  1283               	bcf	3,5	;RP0=0, select bank0
  3067     0B27  1303               	bcf	3,6	;RP1=0, select bank0
  3068     0B28  01BF               	clrf	sprintf@width
  3069     0B29  01C0               	clrf	sprintf@width+1
  3070     0B2A                     l3747:
  3071                           
  3072                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  3073     0B2A  1D3E               	btfss	sprintf@flag,2
  3074     0B2B  2B2D               	goto	u4961
  3075     0B2C  2B2E               	goto	u4960
  3076     0B2D                     u4961:
  3077     0B2D  2B59               	goto	l3763
  3078     0B2E                     u4960:
  3079     0B2E                     l3749:
  3080                           
  3081                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1418:    if(flag 
      +                          & 0x03)
  3082     0B2E  083E               	movf	sprintf@flag,w
  3083     0B2F  3903               	andlw	3
  3084     0B30  1903               	btfsc	3,2
  3085     0B31  2B33               	goto	u4971
  3086     0B32  2B34               	goto	u4970
  3087     0B33                     u4971:
  3088     0B33  2B3D               	goto	l3755
  3089     0B34                     u4970:
  3090     0B34                     l3751:
  3091                           
  3092                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1419:     ((*sp++
      +                           = ('-')));
  3093     0B34  0842               	movf	sprintf@sp,w
  3094     0B35  0084               	movwf	4
  3095     0B36  302D               	movlw	45
  3096     0B37  1383               	bcf	3,7	;select IRP bank0
  3097     0B38  0080               	movwf	0
  3098     0B39                     l3753:
  3099     0B39  3001               	movlw	1
  3100     0B3A  00FF               	movwf	btemp+1
  3101     0B3B  087F               	movf	btemp+1,w
  3102     0B3C  07C2               	addwf	sprintf@sp,f
  3103     0B3D                     l3755:
  3104                           
  3105                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  3106     0B3D  083F               	movf	sprintf@width,w
  3107     0B3E  0440               	iorwf	sprintf@width+1,w
  3108     0B3F  1903               	btfsc	3,2
  3109     0B40  2B42               	goto	u4981
  3110     0B41  2B43               	goto	u4980
  3111     0B42                     u4981:
  3112     0B42  2B83               	goto	l3777
  3113     0B43                     u4980:
  3114     0B43                     l3757:
  3115                           
  3116                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
  3117     0B43  0842               	movf	sprintf@sp,w
  3118     0B44  0084               	movwf	4
  3119     0B45  3030               	movlw	48
  3120     0B46  1383               	bcf	3,7	;select IRP bank0
  3121     0B47  0080               	movwf	0
  3122     0B48                     l3759:
  3123     0B48  3001               	movlw	1
  3124     0B49  00FF               	movwf	btemp+1
  3125     0B4A  087F               	movf	btemp+1,w
  3126     0B4B  07C2               	addwf	sprintf@sp,f
  3127     0B4C                     l3761:
  3128     0B4C  30FF               	movlw	255
  3129     0B4D  07BF               	addwf	sprintf@width,f
  3130     0B4E  1803               	skipnc
  3131     0B4F  0AC0               	incf	sprintf@width+1,f
  3132     0B50  30FF               	movlw	255
  3133     0B51  07C0               	addwf	sprintf@width+1,f
  3134     0B52  083F               	movf	sprintf@width,w
  3135     0B53  0440               	iorwf	sprintf@width+1,w
  3136     0B54  1D03               	btfss	3,2
  3137     0B55  2B57               	goto	u4991
  3138     0B56  2B58               	goto	u4990
  3139     0B57                     u4991:
  3140     0B57  2B43               	goto	l3757
  3141     0B58                     u4990:
  3142     0B58  2B83               	goto	l3777
  3143     0B59                     l3763:
  3144                           
  3145                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1450:    if(width
  3146     0B59  083F               	movf	sprintf@width,w
  3147     0B5A  0440               	iorwf	sprintf@width+1,w
  3148     0B5B  1903               	btfsc	3,2
  3149     0B5C  2B5E               	goto	u5001
  3150     0B5D  2B5F               	goto	u5000
  3151     0B5E                     u5001:
  3152     0B5E  2B74               	goto	l3771
  3153     0B5F                     u5000:
  3154     0B5F                     l3765:
  3155                           
  3156                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  3157     0B5F  0842               	movf	sprintf@sp,w
  3158     0B60  0084               	movwf	4
  3159     0B61  3020               	movlw	32
  3160     0B62  1383               	bcf	3,7	;select IRP bank0
  3161     0B63  0080               	movwf	0
  3162     0B64                     l3767:
  3163     0B64  3001               	movlw	1
  3164     0B65  00FF               	movwf	btemp+1
  3165     0B66  087F               	movf	btemp+1,w
  3166     0B67  07C2               	addwf	sprintf@sp,f
  3167     0B68                     l3769:
  3168     0B68  30FF               	movlw	255
  3169     0B69  07BF               	addwf	sprintf@width,f
  3170     0B6A  1803               	skipnc
  3171     0B6B  0AC0               	incf	sprintf@width+1,f
  3172     0B6C  30FF               	movlw	255
  3173     0B6D  07C0               	addwf	sprintf@width+1,f
  3174     0B6E  083F               	movf	sprintf@width,w
  3175     0B6F  0440               	iorwf	sprintf@width+1,w
  3176     0B70  1D03               	btfss	3,2
  3177     0B71  2B73               	goto	u5011
  3178     0B72  2B74               	goto	u5010
  3179     0B73                     u5011:
  3180     0B73  2B5F               	goto	l3765
  3181     0B74                     u5010:
  3182     0B74                     l3771:
  3183                           
  3184                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  3185     0B74  083E               	movf	sprintf@flag,w
  3186     0B75  3903               	andlw	3
  3187     0B76  1903               	btfsc	3,2
  3188     0B77  2B79               	goto	u5021
  3189     0B78  2B7A               	goto	u5020
  3190     0B79                     u5021:
  3191     0B79  2B83               	goto	l3777
  3192     0B7A                     u5020:
  3193     0B7A                     l3773:
  3194                           
  3195                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3196     0B7A  0842               	movf	sprintf@sp,w
  3197     0B7B  0084               	movwf	4
  3198     0B7C  302D               	movlw	45
  3199     0B7D  1383               	bcf	3,7	;select IRP bank0
  3200     0B7E  0080               	movwf	0
  3201     0B7F                     l3775:
  3202     0B7F  3001               	movlw	1
  3203     0B80  00FF               	movwf	btemp+1
  3204     0B81  087F               	movf	btemp+1,w
  3205     0B82  07C2               	addwf	sprintf@sp,f
  3206     0B83                     l3777:
  3207                           
  3208                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  3209     0B83  0841               	movf	sprintf@c,w
  3210     0B84  00BA               	movwf	sprintf@prec
  3211                           
  3212                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3213     0B85  2BC1               	goto	l3785
  3214     0B86                     l3779:
  3215                           
  3216                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  3217     0B86  300A               	movlw	10
  3218     0B87  00A7               	movwf	___lwmod@divisor
  3219     0B88  3000               	movlw	0
  3220     0B89  00A8               	movwf	___lwmod@divisor+1
  3221     0B8A  083A               	movf	sprintf@prec,w
  3222     0B8B  00B6               	movwf	??_sprintf
  3223     0B8C  0736               	addwf	??_sprintf,w
  3224     0B8D  3E12               	addlw	low (_dpowers| (0+32768))
  3225     0B8E  0084               	movwf	4
  3226     0B8F  3090               	movlw	high (_dpowers| (0+32768))
  3227     0B90  1803               	skipnc
  3228     0B91  3E01               	addlw	1
  3229     0B92  00FF               	movwf	btemp+1
  3230     0B93  160A  118A  2000  120A  158A  	fcall	stringtab
  3231     0B98  00A0               	movwf	___lwdiv@divisor
  3232     0B99  160A  118A  2000  120A  158A  	fcall	stringtab
  3233     0B9E  00A1               	movwf	___lwdiv@divisor+1
  3234     0B9F  083D               	movf	sprintf@val+1,w
  3235     0BA0  00A3               	movwf	___lwdiv@dividend+1
  3236     0BA1  083C               	movf	sprintf@val,w
  3237     0BA2  00A2               	movwf	___lwdiv@dividend
  3238     0BA3  160A  118A  2290  120A  158A  	fcall	___lwdiv
  3239     0BA8  1283               	bcf	3,5	;RP0=0, select bank0
  3240     0BA9  1303               	bcf	3,6	;RP1=0, select bank0
  3241     0BAA  0821               	movf	?___lwdiv+1,w
  3242     0BAB  00AA               	movwf	___lwmod@dividend+1
  3243     0BAC  0820               	movf	?___lwdiv,w
  3244     0BAD  00A9               	movwf	___lwmod@dividend
  3245     0BAE  160A  118A  220E  120A  158A  	fcall	___lwmod
  3246     0BB3  1283               	bcf	3,5	;RP0=0, select bank0
  3247     0BB4  1303               	bcf	3,6	;RP1=0, select bank0
  3248     0BB5  0827               	movf	?___lwmod,w
  3249     0BB6  3E30               	addlw	48
  3250     0BB7  00C1               	movwf	sprintf@c
  3251     0BB8                     l3781:
  3252                           
  3253                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  3254     0BB8  0842               	movf	sprintf@sp,w
  3255     0BB9  0084               	movwf	4
  3256     0BBA  0841               	movf	sprintf@c,w
  3257     0BBB  1383               	bcf	3,7	;select IRP bank0
  3258     0BBC  0080               	movwf	0
  3259     0BBD                     l3783:
  3260     0BBD  3001               	movlw	1
  3261     0BBE  00FF               	movwf	btemp+1
  3262     0BBF  087F               	movf	btemp+1,w
  3263     0BC0  07C2               	addwf	sprintf@sp,f
  3264     0BC1                     l3785:
  3265                           
  3266                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3267     0BC1  30FF               	movlw	255
  3268     0BC2  00FF               	movwf	btemp+1
  3269     0BC3  087F               	movf	btemp+1,w
  3270     0BC4  07BA               	addwf	sprintf@prec,f
  3271     0BC5  0A3A               	incf	sprintf@prec,w
  3272     0BC6  1D03               	btfss	3,2
  3273     0BC7  2BC9               	goto	u5031
  3274     0BC8  2BCA               	goto	u5030
  3275     0BC9                     u5031:
  3276     0BC9  2B86               	goto	l3779
  3277     0BCA                     u5030:
  3278     0BCA                     l3787:
  3279                           
  3280                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3281     0BCA  082D               	movf	sprintf@f+1,w
  3282     0BCB  00B7               	movwf	??_sprintf+1
  3283     0BCC  082C               	movf	sprintf@f,w
  3284     0BCD  00B6               	movwf	??_sprintf
  3285     0BCE  0AAC               	incf	sprintf@f,f
  3286     0BCF  1903               	skipnz
  3287     0BD0  0AAD               	incf	sprintf@f+1,f
  3288     0BD1  0837               	movf	??_sprintf+1,w
  3289     0BD2  00FF               	movwf	btemp+1
  3290     0BD3  0836               	movf	??_sprintf,w
  3291     0BD4  0084               	movwf	4
  3292     0BD5  160A  118A  2000  120A  158A  	fcall	stringtab
  3293     0BDA  00C1               	movwf	sprintf@c
  3294     0BDB  0841               	movf	sprintf@c,w
  3295     0BDC  1D03               	btfss	3,2
  3296     0BDD  2BDF               	goto	u5041
  3297     0BDE  2BE0               	goto	u5040
  3298     0BDF                     u5041:
  3299     0BDF  29F4               	goto	l3679
  3300     0BE0                     u5040:
  3301     0BE0                     l3789:
  3302                           
  3303                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3304     0BE0  0842               	movf	sprintf@sp,w
  3305     0BE1  0084               	movwf	4
  3306     0BE2  1383               	bcf	3,7	;select IRP bank0
  3307     0BE3  0180               	clrf	0
  3308     0BE4                     l412:
  3309     0BE4  0008               	return
  3310     0BE5                     __end_of_sprintf:
  3311                           
  3312                           	psect	text8
  3313     1F85                     __ptext8:	
  3314 ;; *************** function _isdigit *****************
  3315 ;; Defined at:
  3316 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\isdigit.c"
  3317 ;; Parameters:    Size  Location     Type
  3318 ;;  c               1    wreg     unsigned char 
  3319 ;; Auto vars:     Size  Location     Type
  3320 ;;  c               1    1[BANK0 ] unsigned char 
  3321 ;; Return value:  Size  Location     Type
  3322 ;;		None               void
  3323 ;; Registers used:
  3324 ;;		wreg, status,2, status,0
  3325 ;; Tracked objects:
  3326 ;;		On entry : 0/0
  3327 ;;		On exit  : 0/0
  3328 ;;		Unchanged: 0/0
  3329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3330 ;;      Params:         0       0       0       0       0
  3331 ;;      Locals:         0       2       0       0       0
  3332 ;;      Temps:          0       0       0       0       0
  3333 ;;      Totals:         0       2       0       0       0
  3334 ;;Total ram usage:        2 bytes
  3335 ;; Hardware stack levels used: 1
  3336 ;; Hardware stack levels required when called: 2
  3337 ;; This function calls:
  3338 ;;		Nothing
  3339 ;; This function is called by:
  3340 ;;		_sprintf
  3341 ;; This function uses a non-reentrant model
  3342 ;;
  3343                           
  3344     1F85                     _isdigit:	
  3345                           ;psect for function _isdigit
  3346                           
  3347                           
  3348                           ;incstack = 0
  3349                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3350                           ;isdigit@c stored from wreg
  3351     1F85  1283               	bcf	3,5	;RP0=0, select bank0
  3352     1F86  1303               	bcf	3,6	;RP1=0, select bank0
  3353     1F87  00A1               	movwf	isdigit@c
  3354     1F88                     l3545:
  3355     1F88  01A0               	clrf	_isdigit$839
  3356     1F89                     l3547:
  3357     1F89  303A               	movlw	58
  3358     1F8A  0221               	subwf	isdigit@c,w
  3359     1F8B  1803               	skipnc
  3360     1F8C  2F8E               	goto	u4621
  3361     1F8D  2F8F               	goto	u4620
  3362     1F8E                     u4621:
  3363     1F8E  2F97               	goto	l3553
  3364     1F8F                     u4620:
  3365     1F8F                     l3549:
  3366     1F8F  3030               	movlw	48
  3367     1F90  0221               	subwf	isdigit@c,w
  3368     1F91  1C03               	skipc
  3369     1F92  2F94               	goto	u4631
  3370     1F93  2F95               	goto	u4630
  3371     1F94                     u4631:
  3372     1F94  2F97               	goto	l3553
  3373     1F95                     u4630:
  3374     1F95                     l3551:
  3375     1F95  01A0               	clrf	_isdigit$839
  3376     1F96  0AA0               	incf	_isdigit$839,f
  3377     1F97                     l3553:
  3378     1F97  0C20               	rrf	_isdigit$839,w
  3379     1F98                     l869:
  3380     1F98  0008               	return
  3381     1F99                     __end_of_isdigit:
  3382                           
  3383                           	psect	text9
  3384     1185                     __ptext9:	
  3385 ;; *************** function ___wmul *****************
  3386 ;; Defined at:
  3387 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  3388 ;; Parameters:    Size  Location     Type
  3389 ;;  multiplier      2    4[BANK0 ] unsigned int 
  3390 ;;  multiplicand    2    6[BANK0 ] unsigned int 
  3391 ;; Auto vars:     Size  Location     Type
  3392 ;;  product         2    8[BANK0 ] unsigned int 
  3393 ;; Return value:  Size  Location     Type
  3394 ;;                  2    4[BANK0 ] unsigned int 
  3395 ;; Registers used:
  3396 ;;		wreg, status,2, status,0
  3397 ;; Tracked objects:
  3398 ;;		On entry : 0/0
  3399 ;;		On exit  : 0/0
  3400 ;;		Unchanged: 0/0
  3401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3402 ;;      Params:         0       4       0       0       0
  3403 ;;      Locals:         0       2       0       0       0
  3404 ;;      Temps:          0       0       0       0       0
  3405 ;;      Totals:         0       6       0       0       0
  3406 ;;Total ram usage:        6 bytes
  3407 ;; Hardware stack levels used: 1
  3408 ;; Hardware stack levels required when called: 2
  3409 ;; This function calls:
  3410 ;;		Nothing
  3411 ;; This function is called by:
  3412 ;;		_main
  3413 ;;		_sprintf
  3414 ;; This function uses a non-reentrant model
  3415 ;;
  3416                           
  3417     1185                     ___wmul:	
  3418                           ;psect for function ___wmul
  3419                           
  3420     1185                     l3557:	
  3421                           ;incstack = 0
  3422                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3423                           
  3424     1185  1283               	bcf	3,5	;RP0=0, select bank0
  3425     1186  1303               	bcf	3,6	;RP1=0, select bank0
  3426     1187  01A8               	clrf	___wmul@product
  3427     1188  01A9               	clrf	___wmul@product+1
  3428     1189                     l3559:
  3429     1189  1C24               	btfss	___wmul@multiplier,0
  3430     118A  298C               	goto	u4641
  3431     118B  298D               	goto	u4640
  3432     118C                     u4641:
  3433     118C  2993               	goto	l416
  3434     118D                     u4640:
  3435     118D                     l3561:
  3436     118D  0826               	movf	___wmul@multiplicand,w
  3437     118E  07A8               	addwf	___wmul@product,f
  3438     118F  1803               	skipnc
  3439     1190  0AA9               	incf	___wmul@product+1,f
  3440     1191  0827               	movf	___wmul@multiplicand+1,w
  3441     1192  07A9               	addwf	___wmul@product+1,f
  3442     1193                     l416:
  3443     1193  3001               	movlw	1
  3444     1194                     u4655:
  3445     1194  1003               	clrc
  3446     1195  0DA6               	rlf	___wmul@multiplicand,f
  3447     1196  0DA7               	rlf	___wmul@multiplicand+1,f
  3448     1197  3EFF               	addlw	-1
  3449     1198  1D03               	skipz
  3450     1199  2994               	goto	u4655
  3451     119A                     l3563:
  3452     119A  3001               	movlw	1
  3453     119B                     u4665:
  3454     119B  1003               	clrc
  3455     119C  0CA5               	rrf	___wmul@multiplier+1,f
  3456     119D  0CA4               	rrf	___wmul@multiplier,f
  3457     119E  3EFF               	addlw	-1
  3458     119F  1D03               	skipz
  3459     11A0  299B               	goto	u4665
  3460     11A1                     l3565:
  3461     11A1  0824               	movf	___wmul@multiplier,w
  3462     11A2  0425               	iorwf	___wmul@multiplier+1,w
  3463     11A3  1D03               	btfss	3,2
  3464     11A4  29A6               	goto	u4671
  3465     11A5  29A7               	goto	u4670
  3466     11A6                     u4671:
  3467     11A6  2989               	goto	l3559
  3468     11A7                     u4670:
  3469     11A7                     l3567:
  3470     11A7  0829               	movf	___wmul@product+1,w
  3471     11A8  00A5               	movwf	?___wmul+1
  3472     11A9  0828               	movf	___wmul@product,w
  3473     11AA  00A4               	movwf	?___wmul
  3474     11AB                     l418:
  3475     11AB  0008               	return
  3476     11AC                     __end_of___wmul:
  3477                           
  3478                           	psect	text10
  3479     120E                     __ptext10:	
  3480 ;; *************** function ___lwmod *****************
  3481 ;; Defined at:
  3482 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  3483 ;; Parameters:    Size  Location     Type
  3484 ;;  divisor         2    7[BANK0 ] unsigned int 
  3485 ;;  dividend        2    9[BANK0 ] unsigned int 
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;  counter         1   11[BANK0 ] unsigned char 
  3488 ;; Return value:  Size  Location     Type
  3489 ;;                  2    7[BANK0 ] unsigned int 
  3490 ;; Registers used:
  3491 ;;		wreg, status,2, status,0, btemp+1
  3492 ;; Tracked objects:
  3493 ;;		On entry : 0/0
  3494 ;;		On exit  : 0/0
  3495 ;;		Unchanged: 0/0
  3496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3497 ;;      Params:         0       4       0       0       0
  3498 ;;      Locals:         0       1       0       0       0
  3499 ;;      Temps:          0       0       0       0       0
  3500 ;;      Totals:         0       5       0       0       0
  3501 ;;Total ram usage:        5 bytes
  3502 ;; Hardware stack levels used: 1
  3503 ;; Hardware stack levels required when called: 2
  3504 ;; This function calls:
  3505 ;;		Nothing
  3506 ;; This function is called by:
  3507 ;;		_sprintf
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511     120E                     ___lwmod:	
  3512                           ;psect for function ___lwmod
  3513                           
  3514     120E                     l3597:	
  3515                           ;incstack = 0
  3516                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  3517                           
  3518     120E  1283               	bcf	3,5	;RP0=0, select bank0
  3519     120F  1303               	bcf	3,6	;RP1=0, select bank0
  3520     1210  0827               	movf	___lwmod@divisor,w
  3521     1211  0428               	iorwf	___lwmod@divisor+1,w
  3522     1212  1903               	btfsc	3,2
  3523     1213  2A15               	goto	u4751
  3524     1214  2A16               	goto	u4750
  3525     1215                     u4751:
  3526     1215  2A45               	goto	l3615
  3527     1216                     u4750:
  3528     1216                     l3599:
  3529     1216  01AB               	clrf	___lwmod@counter
  3530     1217  0AAB               	incf	___lwmod@counter,f
  3531     1218  2A24               	goto	l3605
  3532     1219                     l3601:
  3533     1219  3001               	movlw	1
  3534     121A                     u4765:
  3535     121A  1003               	clrc
  3536     121B  0DA7               	rlf	___lwmod@divisor,f
  3537     121C  0DA8               	rlf	___lwmod@divisor+1,f
  3538     121D  3EFF               	addlw	-1
  3539     121E  1D03               	skipz
  3540     121F  2A1A               	goto	u4765
  3541     1220                     l3603:
  3542     1220  3001               	movlw	1
  3543     1221  00FF               	movwf	btemp+1
  3544     1222  087F               	movf	btemp+1,w
  3545     1223  07AB               	addwf	___lwmod@counter,f
  3546     1224                     l3605:
  3547     1224  1FA8               	btfss	___lwmod@divisor+1,7
  3548     1225  2A27               	goto	u4771
  3549     1226  2A28               	goto	u4770
  3550     1227                     u4771:
  3551     1227  2A19               	goto	l3601
  3552     1228                     u4770:
  3553     1228                     l3607:
  3554     1228  0828               	movf	___lwmod@divisor+1,w
  3555     1229  022A               	subwf	___lwmod@dividend+1,w
  3556     122A  1D03               	skipz
  3557     122B  2A2E               	goto	u4785
  3558     122C  0827               	movf	___lwmod@divisor,w
  3559     122D  0229               	subwf	___lwmod@dividend,w
  3560     122E                     u4785:
  3561     122E  1C03               	skipc
  3562     122F  2A31               	goto	u4781
  3563     1230  2A32               	goto	u4780
  3564     1231                     u4781:
  3565     1231  2A38               	goto	l3611
  3566     1232                     u4780:
  3567     1232                     l3609:
  3568     1232  0827               	movf	___lwmod@divisor,w
  3569     1233  02A9               	subwf	___lwmod@dividend,f
  3570     1234  0828               	movf	___lwmod@divisor+1,w
  3571     1235  1C03               	skipc
  3572     1236  03AA               	decf	___lwmod@dividend+1,f
  3573     1237  02AA               	subwf	___lwmod@dividend+1,f
  3574     1238                     l3611:
  3575     1238  3001               	movlw	1
  3576     1239                     u4795:
  3577     1239  1003               	clrc
  3578     123A  0CA8               	rrf	___lwmod@divisor+1,f
  3579     123B  0CA7               	rrf	___lwmod@divisor,f
  3580     123C  3EFF               	addlw	-1
  3581     123D  1D03               	skipz
  3582     123E  2A39               	goto	u4795
  3583     123F                     l3613:
  3584     123F  3001               	movlw	1
  3585     1240  02AB               	subwf	___lwmod@counter,f
  3586     1241  1D03               	btfss	3,2
  3587     1242  2A44               	goto	u4801
  3588     1243  2A45               	goto	u4800
  3589     1244                     u4801:
  3590     1244  2A28               	goto	l3607
  3591     1245                     u4800:
  3592     1245                     l3615:
  3593     1245  082A               	movf	___lwmod@dividend+1,w
  3594     1246  00A8               	movwf	?___lwmod+1
  3595     1247  0829               	movf	___lwmod@dividend,w
  3596     1248  00A7               	movwf	?___lwmod
  3597     1249                     l698:
  3598     1249  0008               	return
  3599     124A                     __end_of___lwmod:
  3600                           
  3601                           	psect	text11
  3602     1290                     __ptext11:	
  3603 ;; *************** function ___lwdiv *****************
  3604 ;; Defined at:
  3605 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  3606 ;; Parameters:    Size  Location     Type
  3607 ;;  divisor         2    0[BANK0 ] unsigned int 
  3608 ;;  dividend        2    2[BANK0 ] unsigned int 
  3609 ;; Auto vars:     Size  Location     Type
  3610 ;;  quotient        2    5[BANK0 ] unsigned int 
  3611 ;;  counter         1    4[BANK0 ] unsigned char 
  3612 ;; Return value:  Size  Location     Type
  3613 ;;                  2    0[BANK0 ] unsigned int 
  3614 ;; Registers used:
  3615 ;;		wreg, status,2, status,0, btemp+1
  3616 ;; Tracked objects:
  3617 ;;		On entry : 0/0
  3618 ;;		On exit  : 0/0
  3619 ;;		Unchanged: 0/0
  3620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3621 ;;      Params:         0       4       0       0       0
  3622 ;;      Locals:         0       3       0       0       0
  3623 ;;      Temps:          0       0       0       0       0
  3624 ;;      Totals:         0       7       0       0       0
  3625 ;;Total ram usage:        7 bytes
  3626 ;; Hardware stack levels used: 1
  3627 ;; Hardware stack levels required when called: 2
  3628 ;; This function calls:
  3629 ;;		Nothing
  3630 ;; This function is called by:
  3631 ;;		_sprintf
  3632 ;; This function uses a non-reentrant model
  3633 ;;
  3634                           
  3635     1290                     ___lwdiv:	
  3636                           ;psect for function ___lwdiv
  3637                           
  3638     1290                     l3571:	
  3639                           ;incstack = 0
  3640                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  3641                           
  3642     1290  1283               	bcf	3,5	;RP0=0, select bank0
  3643     1291  1303               	bcf	3,6	;RP1=0, select bank0
  3644     1292  01A5               	clrf	___lwdiv@quotient
  3645     1293  01A6               	clrf	___lwdiv@quotient+1
  3646     1294                     l3573:
  3647     1294  0820               	movf	___lwdiv@divisor,w
  3648     1295  0421               	iorwf	___lwdiv@divisor+1,w
  3649     1296  1903               	btfsc	3,2
  3650     1297  2A99               	goto	u4681
  3651     1298  2A9A               	goto	u4680
  3652     1299                     u4681:
  3653     1299  2AD1               	goto	l3593
  3654     129A                     u4680:
  3655     129A                     l3575:
  3656     129A  01A4               	clrf	___lwdiv@counter
  3657     129B  0AA4               	incf	___lwdiv@counter,f
  3658     129C  2AA8               	goto	l3581
  3659     129D                     l3577:
  3660     129D  3001               	movlw	1
  3661     129E                     u4695:
  3662     129E  1003               	clrc
  3663     129F  0DA0               	rlf	___lwdiv@divisor,f
  3664     12A0  0DA1               	rlf	___lwdiv@divisor+1,f
  3665     12A1  3EFF               	addlw	-1
  3666     12A2  1D03               	skipz
  3667     12A3  2A9E               	goto	u4695
  3668     12A4                     l3579:
  3669     12A4  3001               	movlw	1
  3670     12A5  00FF               	movwf	btemp+1
  3671     12A6  087F               	movf	btemp+1,w
  3672     12A7  07A4               	addwf	___lwdiv@counter,f
  3673     12A8                     l3581:
  3674     12A8  1FA1               	btfss	___lwdiv@divisor+1,7
  3675     12A9  2AAB               	goto	u4701
  3676     12AA  2AAC               	goto	u4700
  3677     12AB                     u4701:
  3678     12AB  2A9D               	goto	l3577
  3679     12AC                     u4700:
  3680     12AC                     l3583:
  3681     12AC  3001               	movlw	1
  3682     12AD                     u4715:
  3683     12AD  1003               	clrc
  3684     12AE  0DA5               	rlf	___lwdiv@quotient,f
  3685     12AF  0DA6               	rlf	___lwdiv@quotient+1,f
  3686     12B0  3EFF               	addlw	-1
  3687     12B1  1D03               	skipz
  3688     12B2  2AAD               	goto	u4715
  3689     12B3  0821               	movf	___lwdiv@divisor+1,w
  3690     12B4  0223               	subwf	___lwdiv@dividend+1,w
  3691     12B5  1D03               	skipz
  3692     12B6  2AB9               	goto	u4725
  3693     12B7  0820               	movf	___lwdiv@divisor,w
  3694     12B8  0222               	subwf	___lwdiv@dividend,w
  3695     12B9                     u4725:
  3696     12B9  1C03               	skipc
  3697     12BA  2ABC               	goto	u4721
  3698     12BB  2ABD               	goto	u4720
  3699     12BC                     u4721:
  3700     12BC  2AC4               	goto	l3589
  3701     12BD                     u4720:
  3702     12BD                     l3585:
  3703     12BD  0820               	movf	___lwdiv@divisor,w
  3704     12BE  02A2               	subwf	___lwdiv@dividend,f
  3705     12BF  0821               	movf	___lwdiv@divisor+1,w
  3706     12C0  1C03               	skipc
  3707     12C1  03A3               	decf	___lwdiv@dividend+1,f
  3708     12C2  02A3               	subwf	___lwdiv@dividend+1,f
  3709     12C3                     l3587:
  3710     12C3  1425               	bsf	___lwdiv@quotient,0
  3711     12C4                     l3589:
  3712     12C4  3001               	movlw	1
  3713     12C5                     u4735:
  3714     12C5  1003               	clrc
  3715     12C6  0CA1               	rrf	___lwdiv@divisor+1,f
  3716     12C7  0CA0               	rrf	___lwdiv@divisor,f
  3717     12C8  3EFF               	addlw	-1
  3718     12C9  1D03               	skipz
  3719     12CA  2AC5               	goto	u4735
  3720     12CB                     l3591:
  3721     12CB  3001               	movlw	1
  3722     12CC  02A4               	subwf	___lwdiv@counter,f
  3723     12CD  1D03               	btfss	3,2
  3724     12CE  2AD0               	goto	u4741
  3725     12CF  2AD1               	goto	u4740
  3726     12D0                     u4741:
  3727     12D0  2AAC               	goto	l3583
  3728     12D1                     u4740:
  3729     12D1                     l3593:
  3730     12D1  0826               	movf	___lwdiv@quotient+1,w
  3731     12D2  00A1               	movwf	?___lwdiv+1
  3732     12D3  0825               	movf	___lwdiv@quotient,w
  3733     12D4  00A0               	movwf	?___lwdiv
  3734     12D5                     l688:
  3735     12D5  0008               	return
  3736     12D6                     __end_of___lwdiv:
  3737                           
  3738                           	psect	text12
  3739     1F99                     __ptext12:	
  3740 ;; *************** function _readEEPROM *****************
  3741 ;; Defined at:
  3742 ;;		line 65 in file "main1.c"
  3743 ;; Parameters:    Size  Location     Type
  3744 ;;  address         2    0[BANK0 ] unsigned int 
  3745 ;; Auto vars:     Size  Location     Type
  3746 ;;		None
  3747 ;; Return value:  Size  Location     Type
  3748 ;;                  2    0[BANK0 ] unsigned int 
  3749 ;; Registers used:
  3750 ;;		wreg
  3751 ;; Tracked objects:
  3752 ;;		On entry : 0/0
  3753 ;;		On exit  : 0/0
  3754 ;;		Unchanged: 0/0
  3755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3756 ;;      Params:         0       2       0       0       0
  3757 ;;      Locals:         0       0       0       0       0
  3758 ;;      Temps:          0       2       0       0       0
  3759 ;;      Totals:         0       4       0       0       0
  3760 ;;Total ram usage:        4 bytes
  3761 ;; Hardware stack levels used: 1
  3762 ;; Hardware stack levels required when called: 2
  3763 ;; This function calls:
  3764 ;;		Nothing
  3765 ;; This function is called by:
  3766 ;;		_main
  3767 ;; This function uses a non-reentrant model
  3768 ;;
  3769                           
  3770     1F99                     _readEEPROM:	
  3771                           ;psect for function _readEEPROM
  3772                           
  3773     1F99                     l2419:	
  3774                           ;incstack = 0
  3775                           ; Regs used in _readEEPROM: [wreg]
  3776                           
  3777                           
  3778                           ;main1.c: 67:     EEADR = address;
  3779     1F99  1283               	bcf	3,5	;RP0=0, select bank0
  3780     1F9A  1303               	bcf	3,6	;RP1=0, select bank0
  3781     1F9B  0820               	movf	readEEPROM@address,w
  3782     1F9C  1283               	bcf	3,5	;RP0=0, select bank2
  3783     1F9D  1703               	bsf	3,6	;RP1=1, select bank2
  3784     1F9E  008D               	movwf	13	;volatile
  3785     1F9F                     l2421:
  3786                           
  3787                           ;main1.c: 68:     RD = 1;
  3788     1F9F  1683               	bsf	3,5	;RP0=1, select bank3
  3789     1FA0  1703               	bsf	3,6	;RP1=1, select bank3
  3790     1FA1  140C               	bsf	12,0	;volsfr
  3791                           
  3792                           ;main1.c: 69:     return EEDATA;
  3793     1FA2  1283               	bcf	3,5	;RP0=0, select bank2
  3794     1FA3  1703               	bsf	3,6	;RP1=1, select bank2
  3795     1FA4  080C               	movf	12,w	;volatile
  3796     1FA5  1283               	bcf	3,5	;RP0=0, select bank0
  3797     1FA6  1303               	bcf	3,6	;RP1=0, select bank0
  3798     1FA7  00A2               	movwf	??_readEEPROM
  3799     1FA8  01A3               	clrf	??_readEEPROM+1
  3800     1FA9  0822               	movf	??_readEEPROM,w
  3801     1FAA  00A0               	movwf	?_readEEPROM
  3802     1FAB  0823               	movf	??_readEEPROM+1,w
  3803     1FAC  00A1               	movwf	?_readEEPROM+1
  3804     1FAD                     l190:
  3805     1FAD  0008               	return
  3806     1FAE                     __end_of_readEEPROM:
  3807                           
  3808                           	psect	text13
  3809     15E2                     __ptext13:	
  3810 ;; *************** function ___xxtofl *****************
  3811 ;; Defined at:
  3812 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\xxtofl.c"
  3813 ;; Parameters:    Size  Location     Type
  3814 ;;  sign            1    wreg     unsigned char 
  3815 ;;  val             4    0[BANK0 ] long 
  3816 ;; Auto vars:     Size  Location     Type
  3817 ;;  sign            1    8[BANK0 ] unsigned char 
  3818 ;;  arg             4   10[BANK0 ] unsigned long 
  3819 ;;  exp             1    9[BANK0 ] unsigned char 
  3820 ;; Return value:  Size  Location     Type
  3821 ;;                  4    0[BANK0 ] unsigned char 
  3822 ;; Registers used:
  3823 ;;		wreg, status,2, status,0, btemp+1
  3824 ;; Tracked objects:
  3825 ;;		On entry : 0/0
  3826 ;;		On exit  : 0/0
  3827 ;;		Unchanged: 0/0
  3828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3829 ;;      Params:         0       4       0       0       0
  3830 ;;      Locals:         0       6       0       0       0
  3831 ;;      Temps:          0       4       0       0       0
  3832 ;;      Totals:         0      14       0       0       0
  3833 ;;Total ram usage:       14 bytes
  3834 ;; Hardware stack levels used: 1
  3835 ;; Hardware stack levels required when called: 2
  3836 ;; This function calls:
  3837 ;;		Nothing
  3838 ;; This function is called by:
  3839 ;;		_main
  3840 ;; This function uses a non-reentrant model
  3841 ;;
  3842                           
  3843     15E2                     ___xxtofl:	
  3844                           ;psect for function ___xxtofl
  3845                           
  3846                           
  3847                           ;incstack = 0
  3848                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  3849                           ;___xxtofl@sign stored from wreg
  3850     15E2  1283               	bcf	3,5	;RP0=0, select bank0
  3851     15E3  1303               	bcf	3,6	;RP1=0, select bank0
  3852     15E4  00A8               	movwf	___xxtofl@sign
  3853     15E5                     l2965:
  3854     15E5  0828               	movf	___xxtofl@sign,w
  3855     15E6  1903               	btfsc	3,2
  3856     15E7  2DE9               	goto	u3821
  3857     15E8  2DEA               	goto	u3820
  3858     15E9                     u3821:
  3859     15E9  2DFE               	goto	l2971
  3860     15EA                     u3820:
  3861     15EA                     l2967:
  3862     15EA  1FA3               	btfss	___xxtofl@val+3,7
  3863     15EB  2DED               	goto	u3831
  3864     15EC  2DEE               	goto	u3830
  3865     15ED                     u3831:
  3866     15ED  2DFE               	goto	l2971
  3867     15EE                     u3830:
  3868     15EE                     l2969:
  3869     15EE  0920               	comf	___xxtofl@val,w
  3870     15EF  00AA               	movwf	___xxtofl@arg
  3871     15F0  0921               	comf	___xxtofl@val+1,w
  3872     15F1  00AB               	movwf	___xxtofl@arg+1
  3873     15F2  0922               	comf	___xxtofl@val+2,w
  3874     15F3  00AC               	movwf	___xxtofl@arg+2
  3875     15F4  0923               	comf	___xxtofl@val+3,w
  3876     15F5  00AD               	movwf	___xxtofl@arg+3
  3877     15F6  0AAA               	incf	___xxtofl@arg,f
  3878     15F7  1903               	skipnz
  3879     15F8  0AAB               	incf	___xxtofl@arg+1,f
  3880     15F9  1903               	skipnz
  3881     15FA  0AAC               	incf	___xxtofl@arg+2,f
  3882     15FB  1903               	skipnz
  3883     15FC  0AAD               	incf	___xxtofl@arg+3,f
  3884     15FD  2E06               	goto	l849
  3885     15FE                     l2971:
  3886     15FE  0823               	movf	___xxtofl@val+3,w
  3887     15FF  00AD               	movwf	___xxtofl@arg+3
  3888     1600  0822               	movf	___xxtofl@val+2,w
  3889     1601  00AC               	movwf	___xxtofl@arg+2
  3890     1602  0821               	movf	___xxtofl@val+1,w
  3891     1603  00AB               	movwf	___xxtofl@arg+1
  3892     1604  0820               	movf	___xxtofl@val,w
  3893     1605  00AA               	movwf	___xxtofl@arg
  3894     1606                     l849:
  3895     1606  0823               	movf	___xxtofl@val+3,w
  3896     1607  0422               	iorwf	___xxtofl@val+2,w
  3897     1608  0421               	iorwf	___xxtofl@val+1,w
  3898     1609  0420               	iorwf	___xxtofl@val,w
  3899     160A  1D03               	skipz
  3900     160B  2E0D               	goto	u3841
  3901     160C  2E0E               	goto	u3840
  3902     160D                     u3841:
  3903     160D  2E17               	goto	l2977
  3904     160E                     u3840:
  3905     160E                     l2973:
  3906     160E  3000               	movlw	0
  3907     160F  00A3               	movwf	?___xxtofl+3
  3908     1610  3000               	movlw	0
  3909     1611  00A2               	movwf	?___xxtofl+2
  3910     1612  3000               	movlw	0
  3911     1613  00A1               	movwf	?___xxtofl+1
  3912     1614  3000               	movlw	0
  3913     1615  00A0               	movwf	?___xxtofl
  3914     1616  2E9B               	goto	l851
  3915     1617                     l2977:
  3916     1617  3096               	movlw	150
  3917     1618  00A9               	movwf	___xxtofl@exp
  3918     1619  2E27               	goto	l2983
  3919     161A                     l2979:
  3920     161A  3001               	movlw	1
  3921     161B  00FF               	movwf	btemp+1
  3922     161C  087F               	movf	btemp+1,w
  3923     161D  07A9               	addwf	___xxtofl@exp,f
  3924     161E                     l2981:
  3925     161E  3001               	movlw	1
  3926     161F                     u3855:
  3927     161F  1003               	clrc
  3928     1620  0CAD               	rrf	___xxtofl@arg+3,f
  3929     1621  0CAC               	rrf	___xxtofl@arg+2,f
  3930     1622  0CAB               	rrf	___xxtofl@arg+1,f
  3931     1623  0CAA               	rrf	___xxtofl@arg,f
  3932     1624  3EFF               	addlw	-1
  3933     1625  1D03               	skipz
  3934     1626  2E1F               	goto	u3855
  3935     1627                     l2983:
  3936     1627  30FE               	movlw	254
  3937     1628  052D               	andwf	___xxtofl@arg+3,w
  3938     1629  1D03               	btfss	3,2
  3939     162A  2E2C               	goto	u3861
  3940     162B  2E2D               	goto	u3860
  3941     162C                     u3861:
  3942     162C  2E1A               	goto	l2979
  3943     162D                     u3860:
  3944     162D  2E49               	goto	l2991
  3945     162E                     l2985:
  3946     162E  3001               	movlw	1
  3947     162F  00FF               	movwf	btemp+1
  3948     1630  087F               	movf	btemp+1,w
  3949     1631  07A9               	addwf	___xxtofl@exp,f
  3950     1632                     l2987:
  3951     1632  3001               	movlw	1
  3952     1633  07AA               	addwf	___xxtofl@arg,f
  3953     1634  3000               	movlw	0
  3954     1635  1803               	skipnc
  3955     1636  3001               	movlw	1
  3956     1637  07AB               	addwf	___xxtofl@arg+1,f
  3957     1638  3000               	movlw	0
  3958     1639  1803               	skipnc
  3959     163A  3001               	movlw	1
  3960     163B  07AC               	addwf	___xxtofl@arg+2,f
  3961     163C  3000               	movlw	0
  3962     163D  1803               	skipnc
  3963     163E  3001               	movlw	1
  3964     163F  07AD               	addwf	___xxtofl@arg+3,f
  3965     1640                     l2989:
  3966     1640  3001               	movlw	1
  3967     1641                     u3875:
  3968     1641  1003               	clrc
  3969     1642  0CAD               	rrf	___xxtofl@arg+3,f
  3970     1643  0CAC               	rrf	___xxtofl@arg+2,f
  3971     1644  0CAB               	rrf	___xxtofl@arg+1,f
  3972     1645  0CAA               	rrf	___xxtofl@arg,f
  3973     1646  3EFF               	addlw	-1
  3974     1647  1D03               	skipz
  3975     1648  2E41               	goto	u3875
  3976     1649                     l2991:
  3977     1649  30FF               	movlw	255
  3978     164A  052D               	andwf	___xxtofl@arg+3,w
  3979     164B  1D03               	btfss	3,2
  3980     164C  2E4E               	goto	u3881
  3981     164D  2E4F               	goto	u3880
  3982     164E                     u3881:
  3983     164E  2E2E               	goto	l2985
  3984     164F                     u3880:
  3985     164F  2E5B               	goto	l2995
  3986     1650                     l2993:
  3987     1650  3001               	movlw	1
  3988     1651  02A9               	subwf	___xxtofl@exp,f
  3989     1652  3001               	movlw	1
  3990     1653  00A4               	movwf	??___xxtofl
  3991     1654                     u3895:
  3992     1654  1003               	clrc
  3993     1655  0DAA               	rlf	___xxtofl@arg,f
  3994     1656  0DAB               	rlf	___xxtofl@arg+1,f
  3995     1657  0DAC               	rlf	___xxtofl@arg+2,f
  3996     1658  0DAD               	rlf	___xxtofl@arg+3,f
  3997     1659  0BA4               	decfsz	??___xxtofl,f
  3998     165A  2E54               	goto	u3895
  3999     165B                     l2995:
  4000     165B  1BAC               	btfsc	___xxtofl@arg+2,7
  4001     165C  2E5E               	goto	u3901
  4002     165D  2E5F               	goto	u3900
  4003     165E                     u3901:
  4004     165E  2E65               	goto	l862
  4005     165F                     u3900:
  4006     165F                     l2997:
  4007     165F  3002               	movlw	2
  4008     1660  0229               	subwf	___xxtofl@exp,w
  4009     1661  1803               	skipnc
  4010     1662  2E64               	goto	u3911
  4011     1663  2E65               	goto	u3910
  4012     1664                     u3911:
  4013     1664  2E50               	goto	l2993
  4014     1665                     u3910:
  4015     1665                     l862:
  4016     1665  1829               	btfsc	___xxtofl@exp,0
  4017     1666  2E68               	goto	u3921
  4018     1667  2E69               	goto	u3920
  4019     1668                     u3921:
  4020     1668  2E71               	goto	l863
  4021     1669                     u3920:
  4022     1669                     l2999:
  4023     1669  30FF               	movlw	255
  4024     166A  05AA               	andwf	___xxtofl@arg,f
  4025     166B  30FF               	movlw	255
  4026     166C  05AB               	andwf	___xxtofl@arg+1,f
  4027     166D  307F               	movlw	127
  4028     166E  05AC               	andwf	___xxtofl@arg+2,f
  4029     166F  30FF               	movlw	255
  4030     1670  05AD               	andwf	___xxtofl@arg+3,f
  4031     1671                     l863:
  4032     1671  1003               	clrc
  4033     1672  0CA9               	rrf	___xxtofl@exp,f
  4034     1673                     l3001:
  4035     1673  0829               	movf	___xxtofl@exp,w
  4036     1674  00A4               	movwf	??___xxtofl
  4037     1675  01A5               	clrf	??___xxtofl+1
  4038     1676  01A6               	clrf	??___xxtofl+2
  4039     1677  01A7               	clrf	??___xxtofl+3
  4040     1678  3018               	movlw	24
  4041     1679                     u3935:
  4042     1679  1003               	clrc
  4043     167A  0DA4               	rlf	??___xxtofl,f
  4044     167B  0DA5               	rlf	??___xxtofl+1,f
  4045     167C  0DA6               	rlf	??___xxtofl+2,f
  4046     167D  0DA7               	rlf	??___xxtofl+3,f
  4047     167E                     u3930:
  4048     167E  3EFF               	addlw	-1
  4049     167F  1D03               	skipz
  4050     1680  2E79               	goto	u3935
  4051     1681  0824               	movf	??___xxtofl,w
  4052     1682  04AA               	iorwf	___xxtofl@arg,f
  4053     1683  0825               	movf	??___xxtofl+1,w
  4054     1684  04AB               	iorwf	___xxtofl@arg+1,f
  4055     1685  0826               	movf	??___xxtofl+2,w
  4056     1686  04AC               	iorwf	___xxtofl@arg+2,f
  4057     1687  0827               	movf	??___xxtofl+3,w
  4058     1688  04AD               	iorwf	___xxtofl@arg+3,f
  4059     1689                     l3003:
  4060     1689  0828               	movf	___xxtofl@sign,w
  4061     168A  1903               	btfsc	3,2
  4062     168B  2E8D               	goto	u3941
  4063     168C  2E8E               	goto	u3940
  4064     168D                     u3941:
  4065     168D  2E93               	goto	l3009
  4066     168E                     u3940:
  4067     168E                     l3005:
  4068     168E  1FA3               	btfss	___xxtofl@val+3,7
  4069     168F  2E91               	goto	u3951
  4070     1690  2E92               	goto	u3950
  4071     1691                     u3951:
  4072     1691  2E93               	goto	l3009
  4073     1692                     u3950:
  4074     1692                     l3007:
  4075     1692  17AD               	bsf	___xxtofl@arg+3,7
  4076     1693                     l3009:
  4077     1693  082D               	movf	___xxtofl@arg+3,w
  4078     1694  00A3               	movwf	?___xxtofl+3
  4079     1695  082C               	movf	___xxtofl@arg+2,w
  4080     1696  00A2               	movwf	?___xxtofl+2
  4081     1697  082B               	movf	___xxtofl@arg+1,w
  4082     1698  00A1               	movwf	?___xxtofl+1
  4083     1699  082A               	movf	___xxtofl@arg,w
  4084     169A  00A0               	movwf	?___xxtofl
  4085     169B                     l851:
  4086     169B  0008               	return
  4087     169C                     __end_of___xxtofl:
  4088                           
  4089                           	psect	text14
  4090     156A                     __ptext14:	
  4091 ;; *************** function ___fltol *****************
  4092 ;; Defined at:
  4093 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fltol.c"
  4094 ;; Parameters:    Size  Location     Type
  4095 ;;  f1              4    0[BANK0 ] unsigned char 
  4096 ;; Auto vars:     Size  Location     Type
  4097 ;;  exp1            1    9[BANK0 ] unsigned char 
  4098 ;;  sign1           1    8[BANK0 ] unsigned char 
  4099 ;; Return value:  Size  Location     Type
  4100 ;;                  4    0[BANK0 ] long 
  4101 ;; Registers used:
  4102 ;;		wreg, status,2, status,0, btemp+1
  4103 ;; Tracked objects:
  4104 ;;		On entry : 0/0
  4105 ;;		On exit  : 0/0
  4106 ;;		Unchanged: 0/0
  4107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4108 ;;      Params:         0       4       0       0       0
  4109 ;;      Locals:         0       2       0       0       0
  4110 ;;      Temps:          0       4       0       0       0
  4111 ;;      Totals:         0      10       0       0       0
  4112 ;;Total ram usage:       10 bytes
  4113 ;; Hardware stack levels used: 1
  4114 ;; Hardware stack levels required when called: 2
  4115 ;; This function calls:
  4116 ;;		Nothing
  4117 ;; This function is called by:
  4118 ;;		_main
  4119 ;; This function uses a non-reentrant model
  4120 ;;
  4121                           
  4122     156A                     ___fltol:	
  4123                           ;psect for function ___fltol
  4124                           
  4125     156A                     l2639:	
  4126                           ;incstack = 0
  4127                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  4128                           
  4129     156A  1003               	clrc
  4130     156B  1283               	bcf	3,5	;RP0=0, select bank0
  4131     156C  1303               	bcf	3,6	;RP1=0, select bank0
  4132     156D  0D22               	rlf	___fltol@f1+2,w
  4133     156E  0D23               	rlf	___fltol@f1+3,w
  4134     156F  00A9               	movwf	___fltol@exp1
  4135     1570  0829               	movf	___fltol@exp1,w
  4136     1571  1D03               	btfss	3,2
  4137     1572  2D74               	goto	u3061
  4138     1573  2D75               	goto	u3060
  4139     1574                     u3061:
  4140     1574  2D7E               	goto	l2645
  4141     1575                     u3060:
  4142     1575                     l2641:
  4143     1575  3000               	movlw	0
  4144     1576  00A3               	movwf	?___fltol+3
  4145     1577  3000               	movlw	0
  4146     1578  00A2               	movwf	?___fltol+2
  4147     1579  3000               	movlw	0
  4148     157A  00A1               	movwf	?___fltol+1
  4149     157B  3000               	movlw	0
  4150     157C  00A0               	movwf	?___fltol
  4151     157D  2DE1               	goto	l602
  4152     157E                     l2645:
  4153     157E  0820               	movf	___fltol@f1,w
  4154     157F  00A4               	movwf	??___fltol
  4155     1580  0821               	movf	___fltol@f1+1,w
  4156     1581  00A5               	movwf	??___fltol+1
  4157     1582  0822               	movf	___fltol@f1+2,w
  4158     1583  00A6               	movwf	??___fltol+2
  4159     1584  0823               	movf	___fltol@f1+3,w
  4160     1585  00A7               	movwf	??___fltol+3
  4161     1586  301F               	movlw	31
  4162     1587                     u3075:
  4163     1587  1003               	clrc
  4164     1588  0CA7               	rrf	??___fltol+3,f
  4165     1589  0CA6               	rrf	??___fltol+2,f
  4166     158A  0CA5               	rrf	??___fltol+1,f
  4167     158B  0CA4               	rrf	??___fltol,f
  4168     158C                     u3070:
  4169     158C  3EFF               	addlw	-1
  4170     158D  1D03               	skipz
  4171     158E  2D87               	goto	u3075
  4172     158F  0824               	movf	??___fltol,w
  4173     1590  00A8               	movwf	___fltol@sign1
  4174     1591                     l2647:
  4175     1591  17A2               	bsf	___fltol@f1+2,7
  4176     1592                     l2649:
  4177     1592  30FF               	movlw	255
  4178     1593  05A0               	andwf	___fltol@f1,f
  4179     1594  30FF               	movlw	255
  4180     1595  05A1               	andwf	___fltol@f1+1,f
  4181     1596  30FF               	movlw	255
  4182     1597  05A2               	andwf	___fltol@f1+2,f
  4183     1598  3000               	movlw	0
  4184     1599  05A3               	andwf	___fltol@f1+3,f
  4185     159A                     l2651:
  4186     159A  3096               	movlw	150
  4187     159B  02A9               	subwf	___fltol@exp1,f
  4188     159C                     l2653:
  4189     159C  1FA9               	btfss	___fltol@exp1,7
  4190     159D  2D9F               	goto	u3081
  4191     159E  2DA0               	goto	u3080
  4192     159F                     u3081:
  4193     159F  2DBA               	goto	l2665
  4194     15A0                     u3080:
  4195     15A0                     l2655:
  4196     15A0  0829               	movf	___fltol@exp1,w
  4197     15A1  3A80               	xorlw	128
  4198     15A2  3E97               	addlw	151
  4199     15A3  1803               	skipnc
  4200     15A4  2DA6               	goto	u3091
  4201     15A5  2DA7               	goto	u3090
  4202     15A6                     u3091:
  4203     15A6  2DA8               	goto	l2661
  4204     15A7                     u3090:
  4205     15A7  2D75               	goto	l2641
  4206     15A8                     l2661:
  4207     15A8  3001               	movlw	1
  4208     15A9                     u3105:
  4209     15A9  1003               	clrc
  4210     15AA  0CA3               	rrf	___fltol@f1+3,f
  4211     15AB  0CA2               	rrf	___fltol@f1+2,f
  4212     15AC  0CA1               	rrf	___fltol@f1+1,f
  4213     15AD  0CA0               	rrf	___fltol@f1,f
  4214     15AE  3EFF               	addlw	-1
  4215     15AF  1D03               	skipz
  4216     15B0  2DA9               	goto	u3105
  4217     15B1                     l2663:
  4218     15B1  3001               	movlw	1
  4219     15B2  00FF               	movwf	btemp+1
  4220     15B3  087F               	movf	btemp+1,w
  4221     15B4  07A9               	addwf	___fltol@exp1,f
  4222     15B5  1D03               	btfss	3,2
  4223     15B6  2DB8               	goto	u3111
  4224     15B7  2DB9               	goto	u3110
  4225     15B8                     u3111:
  4226     15B8  2DA8               	goto	l2661
  4227     15B9                     u3110:
  4228     15B9  2DD1               	goto	l2673
  4229     15BA                     l2665:
  4230     15BA  3020               	movlw	32
  4231     15BB  0229               	subwf	___fltol@exp1,w
  4232     15BC  1C03               	skipc
  4233     15BD  2DBF               	goto	u3121
  4234     15BE  2DC0               	goto	u3120
  4235     15BF                     u3121:
  4236     15BF  2DCC               	goto	l609
  4237     15C0                     u3120:
  4238     15C0  2D75               	goto	l2641
  4239     15C1                     l2671:
  4240     15C1  3001               	movlw	1
  4241     15C2  00A4               	movwf	??___fltol
  4242     15C3                     u3135:
  4243     15C3  1003               	clrc
  4244     15C4  0DA0               	rlf	___fltol@f1,f
  4245     15C5  0DA1               	rlf	___fltol@f1+1,f
  4246     15C6  0DA2               	rlf	___fltol@f1+2,f
  4247     15C7  0DA3               	rlf	___fltol@f1+3,f
  4248     15C8  0BA4               	decfsz	??___fltol,f
  4249     15C9  2DC3               	goto	u3135
  4250     15CA  3001               	movlw	1
  4251     15CB  02A9               	subwf	___fltol@exp1,f
  4252     15CC                     l609:
  4253     15CC  0829               	movf	___fltol@exp1,w
  4254     15CD  1D03               	btfss	3,2
  4255     15CE  2DD0               	goto	u3141
  4256     15CF  2DD1               	goto	u3140
  4257     15D0                     u3141:
  4258     15D0  2DC1               	goto	l2671
  4259     15D1                     u3140:
  4260     15D1                     l2673:
  4261     15D1  0828               	movf	___fltol@sign1,w
  4262     15D2  1903               	btfsc	3,2
  4263     15D3  2DD5               	goto	u3151
  4264     15D4  2DD6               	goto	u3150
  4265     15D5                     u3151:
  4266     15D5  2DE1               	goto	l612
  4267     15D6                     u3150:
  4268     15D6                     l2675:
  4269     15D6  09A0               	comf	___fltol@f1,f
  4270     15D7  09A1               	comf	___fltol@f1+1,f
  4271     15D8  09A2               	comf	___fltol@f1+2,f
  4272     15D9  09A3               	comf	___fltol@f1+3,f
  4273     15DA  0AA0               	incf	___fltol@f1,f
  4274     15DB  1903               	skipnz
  4275     15DC  0AA1               	incf	___fltol@f1+1,f
  4276     15DD  1903               	skipnz
  4277     15DE  0AA2               	incf	___fltol@f1+2,f
  4278     15DF  1903               	skipnz
  4279     15E0  0AA3               	incf	___fltol@f1+3,f
  4280     15E1                     l612:
  4281     15E1                     l602:
  4282     15E1  0008               	return
  4283     15E2                     __end_of___fltol:
  4284                           
  4285                           	psect	text15
  4286     0467                     __ptext15:	
  4287 ;; *************** function ___flmul *****************
  4288 ;; Defined at:
  4289 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcmul.c"
  4290 ;; Parameters:    Size  Location     Type
  4291 ;;  b               4   26[BANK0 ] long 
  4292 ;;  a               4   30[BANK0 ] long 
  4293 ;; Auto vars:     Size  Location     Type
  4294 ;;  prod            4   46[BANK0 ] struct .
  4295 ;;  grs             4   40[BANK0 ] unsigned long 
  4296 ;;  temp            2   50[BANK0 ] struct .
  4297 ;;  bexp            1   45[BANK0 ] unsigned char 
  4298 ;;  aexp            1   44[BANK0 ] unsigned char 
  4299 ;;  sign            1   39[BANK0 ] unsigned char 
  4300 ;; Return value:  Size  Location     Type
  4301 ;;                  4   26[BANK0 ] unsigned char 
  4302 ;; Registers used:
  4303 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4304 ;; Tracked objects:
  4305 ;;		On entry : 0/0
  4306 ;;		On exit  : 0/0
  4307 ;;		Unchanged: 0/0
  4308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4309 ;;      Params:         0       8       0       0       0
  4310 ;;      Locals:         0      13       0       0       0
  4311 ;;      Temps:          0       5       0       0       0
  4312 ;;      Totals:         0      26       0       0       0
  4313 ;;Total ram usage:       26 bytes
  4314 ;; Hardware stack levels used: 1
  4315 ;; Hardware stack levels required when called: 3
  4316 ;; This function calls:
  4317 ;;		__Umul8_16
  4318 ;; This function is called by:
  4319 ;;		_main
  4320 ;; This function uses a non-reentrant model
  4321 ;;
  4322                           
  4323     0467                     ___flmul:	
  4324                           ;psect for function ___flmul
  4325                           
  4326     0467                     l2823:	
  4327                           ;incstack = 0
  4328                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4329                           
  4330     0467  1283               	bcf	3,5	;RP0=0, select bank0
  4331     0468  1303               	bcf	3,6	;RP1=0, select bank0
  4332     0469  083D               	movf	___flmul@b+3,w
  4333     046A  3980               	andlw	128
  4334     046B  00C7               	movwf	___flmul@sign
  4335     046C                     l2825:
  4336     046C  083D               	movf	___flmul@b+3,w
  4337     046D  00C2               	movwf	??___flmul
  4338     046E  0742               	addwf	??___flmul,w
  4339     046F  00CD               	movwf	___flmul@bexp
  4340     0470                     l2827:
  4341     0470  1FBC               	btfss	___flmul@b+2,7
  4342     0471  2C73               	goto	u3451
  4343     0472  2C74               	goto	u3450
  4344     0473                     u3451:
  4345     0473  2C75               	goto	l2831
  4346     0474                     u3450:
  4347     0474                     l2829:
  4348     0474  144D               	bsf	___flmul@bexp,0
  4349     0475                     l2831:
  4350     0475  084D               	movf	___flmul@bexp,w
  4351     0476  1903               	btfsc	3,2
  4352     0477  2C79               	goto	u3461
  4353     0478  2C7A               	goto	u3460
  4354     0479                     u3461:
  4355     0479  2C89               	goto	l2839
  4356     047A                     u3460:
  4357     047A                     l2833:
  4358     047A  0A4D               	incf	___flmul@bexp,w
  4359     047B  1D03               	btfss	3,2
  4360     047C  2C7E               	goto	u3471
  4361     047D  2C7F               	goto	u3470
  4362     047E                     u3471:
  4363     047E  2C87               	goto	l2837
  4364     047F                     u3470:
  4365     047F                     l2835:
  4366     047F  3000               	movlw	0
  4367     0480  00BD               	movwf	___flmul@b+3
  4368     0481  3000               	movlw	0
  4369     0482  00BC               	movwf	___flmul@b+2
  4370     0483  3000               	movlw	0
  4371     0484  00BB               	movwf	___flmul@b+1
  4372     0485  3000               	movlw	0
  4373     0486  00BA               	movwf	___flmul@b
  4374     0487                     l2837:
  4375     0487  17BC               	bsf	___flmul@b+2,7
  4376     0488  2C91               	goto	l2841
  4377     0489                     l2839:
  4378     0489  3000               	movlw	0
  4379     048A  00BD               	movwf	___flmul@b+3
  4380     048B  3000               	movlw	0
  4381     048C  00BC               	movwf	___flmul@b+2
  4382     048D  3000               	movlw	0
  4383     048E  00BB               	movwf	___flmul@b+1
  4384     048F  3000               	movlw	0
  4385     0490  00BA               	movwf	___flmul@b
  4386     0491                     l2841:
  4387     0491  0841               	movf	___flmul@a+3,w
  4388     0492  3980               	andlw	128
  4389     0493  00FF               	movwf	btemp+1
  4390     0494  087F               	movf	btemp+1,w
  4391     0495  06C7               	xorwf	___flmul@sign,f
  4392     0496                     l2843:
  4393     0496  0841               	movf	___flmul@a+3,w
  4394     0497  00C2               	movwf	??___flmul
  4395     0498  0742               	addwf	??___flmul,w
  4396     0499  00CC               	movwf	___flmul@aexp
  4397     049A                     l2845:
  4398     049A  1FC0               	btfss	___flmul@a+2,7
  4399     049B  2C9D               	goto	u3481
  4400     049C  2C9E               	goto	u3480
  4401     049D                     u3481:
  4402     049D  2C9F               	goto	l2849
  4403     049E                     u3480:
  4404     049E                     l2847:
  4405     049E  144C               	bsf	___flmul@aexp,0
  4406     049F                     l2849:
  4407     049F  084C               	movf	___flmul@aexp,w
  4408     04A0  1903               	btfsc	3,2
  4409     04A1  2CA3               	goto	u3491
  4410     04A2  2CA4               	goto	u3490
  4411     04A3                     u3491:
  4412     04A3  2CB3               	goto	l2857
  4413     04A4                     u3490:
  4414     04A4                     l2851:
  4415     04A4  0A4C               	incf	___flmul@aexp,w
  4416     04A5  1D03               	btfss	3,2
  4417     04A6  2CA8               	goto	u3501
  4418     04A7  2CA9               	goto	u3500
  4419     04A8                     u3501:
  4420     04A8  2CB1               	goto	l2855
  4421     04A9                     u3500:
  4422     04A9                     l2853:
  4423     04A9  3000               	movlw	0
  4424     04AA  00C1               	movwf	___flmul@a+3
  4425     04AB  3000               	movlw	0
  4426     04AC  00C0               	movwf	___flmul@a+2
  4427     04AD  3000               	movlw	0
  4428     04AE  00BF               	movwf	___flmul@a+1
  4429     04AF  3000               	movlw	0
  4430     04B0  00BE               	movwf	___flmul@a
  4431     04B1                     l2855:
  4432     04B1  17C0               	bsf	___flmul@a+2,7
  4433     04B2  2CBB               	goto	l2859
  4434     04B3                     l2857:
  4435     04B3  3000               	movlw	0
  4436     04B4  00C1               	movwf	___flmul@a+3
  4437     04B5  3000               	movlw	0
  4438     04B6  00C0               	movwf	___flmul@a+2
  4439     04B7  3000               	movlw	0
  4440     04B8  00BF               	movwf	___flmul@a+1
  4441     04B9  3000               	movlw	0
  4442     04BA  00BE               	movwf	___flmul@a
  4443     04BB                     l2859:
  4444     04BB  084C               	movf	___flmul@aexp,w
  4445     04BC  1903               	btfsc	3,2
  4446     04BD  2CBF               	goto	u3511
  4447     04BE  2CC0               	goto	u3510
  4448     04BF                     u3511:
  4449     04BF  2CC5               	goto	l2863
  4450     04C0                     u3510:
  4451     04C0                     l2861:
  4452     04C0  084D               	movf	___flmul@bexp,w
  4453     04C1  1D03               	btfss	3,2
  4454     04C2  2CC4               	goto	u3521
  4455     04C3  2CC5               	goto	u3520
  4456     04C4                     u3521:
  4457     04C4  2CCE               	goto	l2867
  4458     04C5                     u3520:
  4459     04C5                     l2863:
  4460     04C5  3000               	movlw	0
  4461     04C6  00BD               	movwf	?___flmul+3
  4462     04C7  3000               	movlw	0
  4463     04C8  00BC               	movwf	?___flmul+2
  4464     04C9  3000               	movlw	0
  4465     04CA  00BB               	movwf	?___flmul+1
  4466     04CB  3000               	movlw	0
  4467     04CC  00BA               	movwf	?___flmul
  4468     04CD  2FAB               	goto	l805
  4469     04CE                     l2867:
  4470     04CE  083A               	movf	___flmul@b,w
  4471     04CF  00A0               	movwf	__Umul8_16@multiplicand
  4472     04D0  0840               	movf	___flmul@a+2,w
  4473     04D1  160A  118A  21AC  120A  118A  	fcall	__Umul8_16
  4474     04D6  1283               	bcf	3,5	;RP0=0, select bank0
  4475     04D7  1303               	bcf	3,6	;RP1=0, select bank0
  4476     04D8  0821               	movf	?__Umul8_16+1,w
  4477     04D9  00D3               	movwf	___flmul@temp+1
  4478     04DA  0820               	movf	?__Umul8_16,w
  4479     04DB  00D2               	movwf	___flmul@temp
  4480     04DC                     l2869:
  4481     04DC  0852               	movf	___flmul@temp,w
  4482     04DD  00C2               	movwf	??___flmul
  4483     04DE  01C3               	clrf	??___flmul+1
  4484     04DF  01C4               	clrf	??___flmul+2
  4485     04E0  01C5               	clrf	??___flmul+3
  4486     04E1  0845               	movf	??___flmul+3,w
  4487     04E2  00CB               	movwf	___flmul@grs+3
  4488     04E3  0844               	movf	??___flmul+2,w
  4489     04E4  00CA               	movwf	___flmul@grs+2
  4490     04E5  0843               	movf	??___flmul+1,w
  4491     04E6  00C9               	movwf	___flmul@grs+1
  4492     04E7  0842               	movf	??___flmul,w
  4493     04E8  00C8               	movwf	___flmul@grs
  4494     04E9                     l2871:
  4495     04E9  0853               	movf	___flmul@temp+1,w
  4496     04EA  00C2               	movwf	??___flmul
  4497     04EB  01C3               	clrf	??___flmul+1
  4498     04EC  01C4               	clrf	??___flmul+2
  4499     04ED  01C5               	clrf	??___flmul+3
  4500     04EE  0845               	movf	??___flmul+3,w
  4501     04EF  00D1               	movwf	___flmul@prod+3
  4502     04F0  0844               	movf	??___flmul+2,w
  4503     04F1  00D0               	movwf	___flmul@prod+2
  4504     04F2  0843               	movf	??___flmul+1,w
  4505     04F3  00CF               	movwf	___flmul@prod+1
  4506     04F4  0842               	movf	??___flmul,w
  4507     04F5  00CE               	movwf	___flmul@prod
  4508     04F6  083B               	movf	___flmul@b+1,w
  4509     04F7  00A0               	movwf	__Umul8_16@multiplicand
  4510     04F8  083F               	movf	___flmul@a+1,w
  4511     04F9  160A  118A  21AC  120A  118A  	fcall	__Umul8_16
  4512     04FE  1283               	bcf	3,5	;RP0=0, select bank0
  4513     04FF  1303               	bcf	3,6	;RP1=0, select bank0
  4514     0500  0821               	movf	?__Umul8_16+1,w
  4515     0501  00D3               	movwf	___flmul@temp+1
  4516     0502  0820               	movf	?__Umul8_16,w
  4517     0503  00D2               	movwf	___flmul@temp
  4518     0504                     l2873:
  4519     0504  0852               	movf	___flmul@temp,w
  4520     0505  00C2               	movwf	??___flmul
  4521     0506  01C3               	clrf	??___flmul+1
  4522     0507  01C4               	clrf	??___flmul+2
  4523     0508  01C5               	clrf	??___flmul+3
  4524     0509  0842               	movf	??___flmul,w
  4525     050A  07C8               	addwf	___flmul@grs,f
  4526     050B  0843               	movf	??___flmul+1,w
  4527     050C  1103               	clrz
  4528     050D  1803               	skipnc
  4529     050E  3E01               	addlw	1
  4530     050F  1903               	skipnz
  4531     0510  2D12               	goto	u3531
  4532     0511  07C9               	addwf	___flmul@grs+1,f
  4533     0512                     u3531:
  4534     0512  0844               	movf	??___flmul+2,w
  4535     0513  1103               	clrz
  4536     0514  1803               	skipnc
  4537     0515  3E01               	addlw	1
  4538     0516  1903               	skipnz
  4539     0517  2D19               	goto	u3532
  4540     0518  07CA               	addwf	___flmul@grs+2,f
  4541     0519                     u3532:
  4542     0519  0845               	movf	??___flmul+3,w
  4543     051A  1103               	clrz
  4544     051B  1803               	skipnc
  4545     051C  3E01               	addlw	1
  4546     051D  1903               	skipnz
  4547     051E  2D20               	goto	u3533
  4548     051F  07CB               	addwf	___flmul@grs+3,f
  4549     0520                     u3533:
  4550     0520                     l2875:
  4551     0520  0853               	movf	___flmul@temp+1,w
  4552     0521  00C2               	movwf	??___flmul
  4553     0522  01C3               	clrf	??___flmul+1
  4554     0523  01C4               	clrf	??___flmul+2
  4555     0524  01C5               	clrf	??___flmul+3
  4556     0525  0842               	movf	??___flmul,w
  4557     0526  07CE               	addwf	___flmul@prod,f
  4558     0527  0843               	movf	??___flmul+1,w
  4559     0528  1103               	clrz
  4560     0529  1803               	skipnc
  4561     052A  3E01               	addlw	1
  4562     052B  1903               	skipnz
  4563     052C  2D2E               	goto	u3541
  4564     052D  07CF               	addwf	___flmul@prod+1,f
  4565     052E                     u3541:
  4566     052E  0844               	movf	??___flmul+2,w
  4567     052F  1103               	clrz
  4568     0530  1803               	skipnc
  4569     0531  3E01               	addlw	1
  4570     0532  1903               	skipnz
  4571     0533  2D35               	goto	u3542
  4572     0534  07D0               	addwf	___flmul@prod+2,f
  4573     0535                     u3542:
  4574     0535  0845               	movf	??___flmul+3,w
  4575     0536  1103               	clrz
  4576     0537  1803               	skipnc
  4577     0538  3E01               	addlw	1
  4578     0539  1903               	skipnz
  4579     053A  2D3C               	goto	u3543
  4580     053B  07D1               	addwf	___flmul@prod+3,f
  4581     053C                     u3543:
  4582     053C  083C               	movf	___flmul@b+2,w
  4583     053D  00A0               	movwf	__Umul8_16@multiplicand
  4584     053E  083E               	movf	___flmul@a,w
  4585     053F  160A  118A  21AC  120A  118A  	fcall	__Umul8_16
  4586     0544  1283               	bcf	3,5	;RP0=0, select bank0
  4587     0545  1303               	bcf	3,6	;RP1=0, select bank0
  4588     0546  0821               	movf	?__Umul8_16+1,w
  4589     0547  00D3               	movwf	___flmul@temp+1
  4590     0548  0820               	movf	?__Umul8_16,w
  4591     0549  00D2               	movwf	___flmul@temp
  4592     054A                     l2877:
  4593     054A  0852               	movf	___flmul@temp,w
  4594     054B  00C2               	movwf	??___flmul
  4595     054C  01C3               	clrf	??___flmul+1
  4596     054D  01C4               	clrf	??___flmul+2
  4597     054E  01C5               	clrf	??___flmul+3
  4598     054F  0842               	movf	??___flmul,w
  4599     0550  07C8               	addwf	___flmul@grs,f
  4600     0551  0843               	movf	??___flmul+1,w
  4601     0552  1103               	clrz
  4602     0553  1803               	skipnc
  4603     0554  3E01               	addlw	1
  4604     0555  1903               	skipnz
  4605     0556  2D58               	goto	u3551
  4606     0557  07C9               	addwf	___flmul@grs+1,f
  4607     0558                     u3551:
  4608     0558  0844               	movf	??___flmul+2,w
  4609     0559  1103               	clrz
  4610     055A  1803               	skipnc
  4611     055B  3E01               	addlw	1
  4612     055C  1903               	skipnz
  4613     055D  2D5F               	goto	u3552
  4614     055E  07CA               	addwf	___flmul@grs+2,f
  4615     055F                     u3552:
  4616     055F  0845               	movf	??___flmul+3,w
  4617     0560  1103               	clrz
  4618     0561  1803               	skipnc
  4619     0562  3E01               	addlw	1
  4620     0563  1903               	skipnz
  4621     0564  2D66               	goto	u3553
  4622     0565  07CB               	addwf	___flmul@grs+3,f
  4623     0566                     u3553:
  4624     0566                     l2879:
  4625     0566  0853               	movf	___flmul@temp+1,w
  4626     0567  00C2               	movwf	??___flmul
  4627     0568  01C3               	clrf	??___flmul+1
  4628     0569  01C4               	clrf	??___flmul+2
  4629     056A  01C5               	clrf	??___flmul+3
  4630     056B  0842               	movf	??___flmul,w
  4631     056C  07CE               	addwf	___flmul@prod,f
  4632     056D  0843               	movf	??___flmul+1,w
  4633     056E  1103               	clrz
  4634     056F  1803               	skipnc
  4635     0570  3E01               	addlw	1
  4636     0571  1903               	skipnz
  4637     0572  2D74               	goto	u3561
  4638     0573  07CF               	addwf	___flmul@prod+1,f
  4639     0574                     u3561:
  4640     0574  0844               	movf	??___flmul+2,w
  4641     0575  1103               	clrz
  4642     0576  1803               	skipnc
  4643     0577  3E01               	addlw	1
  4644     0578  1903               	skipnz
  4645     0579  2D7B               	goto	u3562
  4646     057A  07D0               	addwf	___flmul@prod+2,f
  4647     057B                     u3562:
  4648     057B  0845               	movf	??___flmul+3,w
  4649     057C  1103               	clrz
  4650     057D  1803               	skipnc
  4651     057E  3E01               	addlw	1
  4652     057F  1903               	skipnz
  4653     0580  2D82               	goto	u3563
  4654     0581  07D1               	addwf	___flmul@prod+3,f
  4655     0582                     u3563:
  4656     0582                     l2881:
  4657     0582  3008               	movlw	8
  4658     0583  00C2               	movwf	??___flmul
  4659     0584                     u3575:
  4660     0584  1003               	clrc
  4661     0585  0DC8               	rlf	___flmul@grs,f
  4662     0586  0DC9               	rlf	___flmul@grs+1,f
  4663     0587  0DCA               	rlf	___flmul@grs+2,f
  4664     0588  0DCB               	rlf	___flmul@grs+3,f
  4665     0589  0BC2               	decfsz	??___flmul,f
  4666     058A  2D84               	goto	u3575
  4667     058B                     l2883:
  4668     058B  083B               	movf	___flmul@b+1,w
  4669     058C  00A0               	movwf	__Umul8_16@multiplicand
  4670     058D  083E               	movf	___flmul@a,w
  4671     058E  160A  118A  21AC  120A  118A  	fcall	__Umul8_16
  4672     0593  1283               	bcf	3,5	;RP0=0, select bank0
  4673     0594  1303               	bcf	3,6	;RP1=0, select bank0
  4674     0595  0821               	movf	?__Umul8_16+1,w
  4675     0596  00D3               	movwf	___flmul@temp+1
  4676     0597  0820               	movf	?__Umul8_16,w
  4677     0598  00D2               	movwf	___flmul@temp
  4678     0599                     l2885:
  4679     0599  0852               	movf	___flmul@temp,w
  4680     059A  00C2               	movwf	??___flmul
  4681     059B  0853               	movf	___flmul@temp+1,w
  4682     059C  00C3               	movwf	??___flmul+1
  4683     059D  01C4               	clrf	??___flmul+2
  4684     059E  01C5               	clrf	??___flmul+3
  4685     059F  0842               	movf	??___flmul,w
  4686     05A0  07C8               	addwf	___flmul@grs,f
  4687     05A1  0843               	movf	??___flmul+1,w
  4688     05A2  1103               	clrz
  4689     05A3  1803               	skipnc
  4690     05A4  3E01               	addlw	1
  4691     05A5  1903               	skipnz
  4692     05A6  2DA8               	goto	u3581
  4693     05A7  07C9               	addwf	___flmul@grs+1,f
  4694     05A8                     u3581:
  4695     05A8  0844               	movf	??___flmul+2,w
  4696     05A9  1103               	clrz
  4697     05AA  1803               	skipnc
  4698     05AB  3E01               	addlw	1
  4699     05AC  1903               	skipnz
  4700     05AD  2DAF               	goto	u3582
  4701     05AE  07CA               	addwf	___flmul@grs+2,f
  4702     05AF                     u3582:
  4703     05AF  0845               	movf	??___flmul+3,w
  4704     05B0  1103               	clrz
  4705     05B1  1803               	skipnc
  4706     05B2  3E01               	addlw	1
  4707     05B3  1903               	skipnz
  4708     05B4  2DB6               	goto	u3583
  4709     05B5  07CB               	addwf	___flmul@grs+3,f
  4710     05B6                     u3583:
  4711     05B6                     l2887:
  4712     05B6  083A               	movf	___flmul@b,w
  4713     05B7  00A0               	movwf	__Umul8_16@multiplicand
  4714     05B8  083F               	movf	___flmul@a+1,w
  4715     05B9  160A  118A  21AC  120A  118A  	fcall	__Umul8_16
  4716     05BE  1283               	bcf	3,5	;RP0=0, select bank0
  4717     05BF  1303               	bcf	3,6	;RP1=0, select bank0
  4718     05C0  0821               	movf	?__Umul8_16+1,w
  4719     05C1  00D3               	movwf	___flmul@temp+1
  4720     05C2  0820               	movf	?__Umul8_16,w
  4721     05C3  00D2               	movwf	___flmul@temp
  4722     05C4                     l2889:
  4723     05C4  0852               	movf	___flmul@temp,w
  4724     05C5  00C2               	movwf	??___flmul
  4725     05C6  0853               	movf	___flmul@temp+1,w
  4726     05C7  00C3               	movwf	??___flmul+1
  4727     05C8  01C4               	clrf	??___flmul+2
  4728     05C9  01C5               	clrf	??___flmul+3
  4729     05CA  0842               	movf	??___flmul,w
  4730     05CB  07C8               	addwf	___flmul@grs,f
  4731     05CC  0843               	movf	??___flmul+1,w
  4732     05CD  1103               	clrz
  4733     05CE  1803               	skipnc
  4734     05CF  3E01               	addlw	1
  4735     05D0  1903               	skipnz
  4736     05D1  2DD3               	goto	u3591
  4737     05D2  07C9               	addwf	___flmul@grs+1,f
  4738     05D3                     u3591:
  4739     05D3  0844               	movf	??___flmul+2,w
  4740     05D4  1103               	clrz
  4741     05D5  1803               	skipnc
  4742     05D6  3E01               	addlw	1
  4743     05D7  1903               	skipnz
  4744     05D8  2DDA               	goto	u3592
  4745     05D9  07CA               	addwf	___flmul@grs+2,f
  4746     05DA                     u3592:
  4747     05DA  0845               	movf	??___flmul+3,w
  4748     05DB  1103               	clrz
  4749     05DC  1803               	skipnc
  4750     05DD  3E01               	addlw	1
  4751     05DE  1903               	skipnz
  4752     05DF  2DE1               	goto	u3593
  4753     05E0  07CB               	addwf	___flmul@grs+3,f
  4754     05E1                     u3593:
  4755     05E1                     l2891:
  4756     05E1  3008               	movlw	8
  4757     05E2  00C2               	movwf	??___flmul
  4758     05E3                     u3605:
  4759     05E3  1003               	clrc
  4760     05E4  0DC8               	rlf	___flmul@grs,f
  4761     05E5  0DC9               	rlf	___flmul@grs+1,f
  4762     05E6  0DCA               	rlf	___flmul@grs+2,f
  4763     05E7  0DCB               	rlf	___flmul@grs+3,f
  4764     05E8  0BC2               	decfsz	??___flmul,f
  4765     05E9  2DE3               	goto	u3605
  4766     05EA  083A               	movf	___flmul@b,w
  4767     05EB  00A0               	movwf	__Umul8_16@multiplicand
  4768     05EC  083E               	movf	___flmul@a,w
  4769     05ED  160A  118A  21AC  120A  118A  	fcall	__Umul8_16
  4770     05F2  1283               	bcf	3,5	;RP0=0, select bank0
  4771     05F3  1303               	bcf	3,6	;RP1=0, select bank0
  4772     05F4  0821               	movf	?__Umul8_16+1,w
  4773     05F5  00D3               	movwf	___flmul@temp+1
  4774     05F6  0820               	movf	?__Umul8_16,w
  4775     05F7  00D2               	movwf	___flmul@temp
  4776     05F8                     l2893:
  4777     05F8  0852               	movf	___flmul@temp,w
  4778     05F9  00C2               	movwf	??___flmul
  4779     05FA  0853               	movf	___flmul@temp+1,w
  4780     05FB  00C3               	movwf	??___flmul+1
  4781     05FC  01C4               	clrf	??___flmul+2
  4782     05FD  01C5               	clrf	??___flmul+3
  4783     05FE  0842               	movf	??___flmul,w
  4784     05FF  07C8               	addwf	___flmul@grs,f
  4785     0600  0843               	movf	??___flmul+1,w
  4786     0601  1103               	clrz
  4787     0602  1803               	skipnc
  4788     0603  3E01               	addlw	1
  4789     0604  1903               	skipnz
  4790     0605  2E07               	goto	u3611
  4791     0606  07C9               	addwf	___flmul@grs+1,f
  4792     0607                     u3611:
  4793     0607  0844               	movf	??___flmul+2,w
  4794     0608  1103               	clrz
  4795     0609  1803               	skipnc
  4796     060A  3E01               	addlw	1
  4797     060B  1903               	skipnz
  4798     060C  2E0E               	goto	u3612
  4799     060D  07CA               	addwf	___flmul@grs+2,f
  4800     060E                     u3612:
  4801     060E  0845               	movf	??___flmul+3,w
  4802     060F  1103               	clrz
  4803     0610  1803               	skipnc
  4804     0611  3E01               	addlw	1
  4805     0612  1903               	skipnz
  4806     0613  2E15               	goto	u3613
  4807     0614  07CB               	addwf	___flmul@grs+3,f
  4808     0615                     u3613:
  4809     0615                     l2895:
  4810     0615  083B               	movf	___flmul@b+1,w
  4811     0616  00A0               	movwf	__Umul8_16@multiplicand
  4812     0617  0840               	movf	___flmul@a+2,w
  4813     0618  160A  118A  21AC  120A  118A  	fcall	__Umul8_16
  4814     061D  1283               	bcf	3,5	;RP0=0, select bank0
  4815     061E  1303               	bcf	3,6	;RP1=0, select bank0
  4816     061F  0821               	movf	?__Umul8_16+1,w
  4817     0620  00D3               	movwf	___flmul@temp+1
  4818     0621  0820               	movf	?__Umul8_16,w
  4819     0622  00D2               	movwf	___flmul@temp
  4820     0623  0852               	movf	___flmul@temp,w
  4821     0624  00C2               	movwf	??___flmul
  4822     0625  0853               	movf	___flmul@temp+1,w
  4823     0626  00C3               	movwf	??___flmul+1
  4824     0627  01C4               	clrf	??___flmul+2
  4825     0628  01C5               	clrf	??___flmul+3
  4826     0629  0842               	movf	??___flmul,w
  4827     062A  07CE               	addwf	___flmul@prod,f
  4828     062B  0843               	movf	??___flmul+1,w
  4829     062C  1103               	clrz
  4830     062D  1803               	skipnc
  4831     062E  3E01               	addlw	1
  4832     062F  1903               	skipnz
  4833     0630  2E32               	goto	u3621
  4834     0631  07CF               	addwf	___flmul@prod+1,f
  4835     0632                     u3621:
  4836     0632  0844               	movf	??___flmul+2,w
  4837     0633  1103               	clrz
  4838     0634  1803               	skipnc
  4839     0635  3E01               	addlw	1
  4840     0636  1903               	skipnz
  4841     0637  2E39               	goto	u3622
  4842     0638  07D0               	addwf	___flmul@prod+2,f
  4843     0639                     u3622:
  4844     0639  0845               	movf	??___flmul+3,w
  4845     063A  1103               	clrz
  4846     063B  1803               	skipnc
  4847     063C  3E01               	addlw	1
  4848     063D  1903               	skipnz
  4849     063E  2E40               	goto	u3623
  4850     063F  07D1               	addwf	___flmul@prod+3,f
  4851     0640                     u3623:
  4852     0640                     l2897:
  4853     0640  083C               	movf	___flmul@b+2,w
  4854     0641  00A0               	movwf	__Umul8_16@multiplicand
  4855     0642  083F               	movf	___flmul@a+1,w
  4856     0643  160A  118A  21AC  120A  118A  	fcall	__Umul8_16
  4857     0648  1283               	bcf	3,5	;RP0=0, select bank0
  4858     0649  1303               	bcf	3,6	;RP1=0, select bank0
  4859     064A  0821               	movf	?__Umul8_16+1,w
  4860     064B  00D3               	movwf	___flmul@temp+1
  4861     064C  0820               	movf	?__Umul8_16,w
  4862     064D  00D2               	movwf	___flmul@temp
  4863     064E                     l2899:
  4864     064E  0852               	movf	___flmul@temp,w
  4865     064F  00C2               	movwf	??___flmul
  4866     0650  0853               	movf	___flmul@temp+1,w
  4867     0651  00C3               	movwf	??___flmul+1
  4868     0652  01C4               	clrf	??___flmul+2
  4869     0653  01C5               	clrf	??___flmul+3
  4870     0654  0842               	movf	??___flmul,w
  4871     0655  07CE               	addwf	___flmul@prod,f
  4872     0656  0843               	movf	??___flmul+1,w
  4873     0657  1103               	clrz
  4874     0658  1803               	skipnc
  4875     0659  3E01               	addlw	1
  4876     065A  1903               	skipnz
  4877     065B  2E5D               	goto	u3631
  4878     065C  07CF               	addwf	___flmul@prod+1,f
  4879     065D                     u3631:
  4880     065D  0844               	movf	??___flmul+2,w
  4881     065E  1103               	clrz
  4882     065F  1803               	skipnc
  4883     0660  3E01               	addlw	1
  4884     0661  1903               	skipnz
  4885     0662  2E64               	goto	u3632
  4886     0663  07D0               	addwf	___flmul@prod+2,f
  4887     0664                     u3632:
  4888     0664  0845               	movf	??___flmul+3,w
  4889     0665  1103               	clrz
  4890     0666  1803               	skipnc
  4891     0667  3E01               	addlw	1
  4892     0668  1903               	skipnz
  4893     0669  2E6B               	goto	u3633
  4894     066A  07D1               	addwf	___flmul@prod+3,f
  4895     066B                     u3633:
  4896     066B  083C               	movf	___flmul@b+2,w
  4897     066C  00A0               	movwf	__Umul8_16@multiplicand
  4898     066D  0840               	movf	___flmul@a+2,w
  4899     066E  160A  118A  21AC  120A  118A  	fcall	__Umul8_16
  4900     0673  1283               	bcf	3,5	;RP0=0, select bank0
  4901     0674  1303               	bcf	3,6	;RP1=0, select bank0
  4902     0675  0821               	movf	?__Umul8_16+1,w
  4903     0676  00D3               	movwf	___flmul@temp+1
  4904     0677  0820               	movf	?__Umul8_16,w
  4905     0678  00D2               	movwf	___flmul@temp
  4906     0679                     l2901:
  4907     0679  0852               	movf	___flmul@temp,w
  4908     067A  00C2               	movwf	??___flmul
  4909     067B  0853               	movf	___flmul@temp+1,w
  4910     067C  00C3               	movwf	??___flmul+1
  4911     067D  01C4               	clrf	??___flmul+2
  4912     067E  01C5               	clrf	??___flmul+3
  4913     067F  3008               	movlw	8
  4914     0680                     u3645:
  4915     0680  1003               	clrc
  4916     0681  0DC2               	rlf	??___flmul,f
  4917     0682  0DC3               	rlf	??___flmul+1,f
  4918     0683  0DC4               	rlf	??___flmul+2,f
  4919     0684  0DC5               	rlf	??___flmul+3,f
  4920     0685                     u3640:
  4921     0685  3EFF               	addlw	-1
  4922     0686  1D03               	skipz
  4923     0687  2E80               	goto	u3645
  4924     0688  0842               	movf	??___flmul,w
  4925     0689  07CE               	addwf	___flmul@prod,f
  4926     068A  0843               	movf	??___flmul+1,w
  4927     068B  1103               	clrz
  4928     068C  1803               	skipnc
  4929     068D  3E01               	addlw	1
  4930     068E  1903               	skipnz
  4931     068F  2E91               	goto	u3651
  4932     0690  07CF               	addwf	___flmul@prod+1,f
  4933     0691                     u3651:
  4934     0691  0844               	movf	??___flmul+2,w
  4935     0692  1103               	clrz
  4936     0693  1803               	skipnc
  4937     0694  3E01               	addlw	1
  4938     0695  1903               	skipnz
  4939     0696  2E98               	goto	u3652
  4940     0697  07D0               	addwf	___flmul@prod+2,f
  4941     0698                     u3652:
  4942     0698  0845               	movf	??___flmul+3,w
  4943     0699  1103               	clrz
  4944     069A  1803               	skipnc
  4945     069B  3E01               	addlw	1
  4946     069C  1903               	skipnz
  4947     069D  2E9F               	goto	u3653
  4948     069E  07D1               	addwf	___flmul@prod+3,f
  4949     069F                     u3653:
  4950     069F                     l2903:
  4951     069F  0848               	movf	___flmul@grs,w
  4952     06A0  00C2               	movwf	??___flmul
  4953     06A1  0849               	movf	___flmul@grs+1,w
  4954     06A2  00C3               	movwf	??___flmul+1
  4955     06A3  084A               	movf	___flmul@grs+2,w
  4956     06A4  00C4               	movwf	??___flmul+2
  4957     06A5  084B               	movf	___flmul@grs+3,w
  4958     06A6  00C5               	movwf	??___flmul+3
  4959     06A7  3018               	movlw	24
  4960     06A8                     u3665:
  4961     06A8  1003               	clrc
  4962     06A9  0CC5               	rrf	??___flmul+3,f
  4963     06AA  0CC4               	rrf	??___flmul+2,f
  4964     06AB  0CC3               	rrf	??___flmul+1,f
  4965     06AC  0CC2               	rrf	??___flmul,f
  4966     06AD                     u3660:
  4967     06AD  3EFF               	addlw	-1
  4968     06AE  1D03               	skipz
  4969     06AF  2EA8               	goto	u3665
  4970     06B0  0842               	movf	??___flmul,w
  4971     06B1  07CE               	addwf	___flmul@prod,f
  4972     06B2  0843               	movf	??___flmul+1,w
  4973     06B3  1103               	clrz
  4974     06B4  1803               	skipnc
  4975     06B5  3E01               	addlw	1
  4976     06B6  1903               	skipnz
  4977     06B7  2EB9               	goto	u3671
  4978     06B8  07CF               	addwf	___flmul@prod+1,f
  4979     06B9                     u3671:
  4980     06B9  0844               	movf	??___flmul+2,w
  4981     06BA  1103               	clrz
  4982     06BB  1803               	skipnc
  4983     06BC  3E01               	addlw	1
  4984     06BD  1903               	skipnz
  4985     06BE  2EC0               	goto	u3672
  4986     06BF  07D0               	addwf	___flmul@prod+2,f
  4987     06C0                     u3672:
  4988     06C0  0845               	movf	??___flmul+3,w
  4989     06C1  1103               	clrz
  4990     06C2  1803               	skipnc
  4991     06C3  3E01               	addlw	1
  4992     06C4  1903               	skipnz
  4993     06C5  2EC7               	goto	u3673
  4994     06C6  07D1               	addwf	___flmul@prod+3,f
  4995     06C7                     u3673:
  4996     06C7                     l2905:
  4997     06C7  3008               	movlw	8
  4998     06C8  00C2               	movwf	??___flmul
  4999     06C9                     u3685:
  5000     06C9  1003               	clrc
  5001     06CA  0DC8               	rlf	___flmul@grs,f
  5002     06CB  0DC9               	rlf	___flmul@grs+1,f
  5003     06CC  0DCA               	rlf	___flmul@grs+2,f
  5004     06CD  0DCB               	rlf	___flmul@grs+3,f
  5005     06CE  0BC2               	decfsz	??___flmul,f
  5006     06CF  2EC9               	goto	u3685
  5007     06D0                     l2907:
  5008     06D0  084D               	movf	___flmul@bexp,w
  5009     06D1  074C               	addwf	___flmul@aexp,w
  5010     06D2  00C2               	movwf	??___flmul
  5011     06D3  01C3               	clrf	??___flmul+1
  5012     06D4  0DC3               	rlf	??___flmul+1,f
  5013     06D5  0842               	movf	??___flmul,w
  5014     06D6  3E82               	addlw	130
  5015     06D7  00D2               	movwf	___flmul@temp
  5016     06D8  0843               	movf	??___flmul+1,w
  5017     06D9  1803               	skipnc
  5018     06DA  3E01               	addlw	1
  5019     06DB  3EFF               	addlw	255
  5020     06DC  00D3               	movwf	___flmul@temp+1
  5021     06DD  2EFB               	goto	l2919
  5022     06DE                     l2909:
  5023     06DE  3001               	movlw	1
  5024     06DF  00C2               	movwf	??___flmul
  5025     06E0                     u3695:
  5026     06E0  1003               	clrc
  5027     06E1  0DCE               	rlf	___flmul@prod,f
  5028     06E2  0DCF               	rlf	___flmul@prod+1,f
  5029     06E3  0DD0               	rlf	___flmul@prod+2,f
  5030     06E4  0DD1               	rlf	___flmul@prod+3,f
  5031     06E5  0BC2               	decfsz	??___flmul,f
  5032     06E6  2EE0               	goto	u3695
  5033     06E7                     l2911:
  5034     06E7  1FCB               	btfss	___flmul@grs+3,7
  5035     06E8  2EEA               	goto	u3701
  5036     06E9  2EEB               	goto	u3700
  5037     06EA                     u3701:
  5038     06EA  2EEC               	goto	l2915
  5039     06EB                     u3700:
  5040     06EB                     l2913:
  5041     06EB  144E               	bsf	___flmul@prod,0
  5042     06EC                     l2915:
  5043     06EC  3001               	movlw	1
  5044     06ED  00C2               	movwf	??___flmul
  5045     06EE                     u3715:
  5046     06EE  1003               	clrc
  5047     06EF  0DC8               	rlf	___flmul@grs,f
  5048     06F0  0DC9               	rlf	___flmul@grs+1,f
  5049     06F1  0DCA               	rlf	___flmul@grs+2,f
  5050     06F2  0DCB               	rlf	___flmul@grs+3,f
  5051     06F3  0BC2               	decfsz	??___flmul,f
  5052     06F4  2EEE               	goto	u3715
  5053     06F5                     l2917:
  5054     06F5  30FF               	movlw	255
  5055     06F6  07D2               	addwf	___flmul@temp,f
  5056     06F7  1803               	skipnc
  5057     06F8  0AD3               	incf	___flmul@temp+1,f
  5058     06F9  30FF               	movlw	255
  5059     06FA  07D3               	addwf	___flmul@temp+1,f
  5060     06FB                     l2919:
  5061     06FB  1FD0               	btfss	___flmul@prod+2,7
  5062     06FC  2EFE               	goto	u3721
  5063     06FD  2EFF               	goto	u3720
  5064     06FE                     u3721:
  5065     06FE  2EDE               	goto	l2909
  5066     06FF                     u3720:
  5067     06FF                     l2921:
  5068     06FF  01CC               	clrf	___flmul@aexp
  5069     0700                     l2923:
  5070     0700  1FCB               	btfss	___flmul@grs+3,7
  5071     0701  2F03               	goto	u3731
  5072     0702  2F04               	goto	u3730
  5073     0703                     u3731:
  5074     0703  2F20               	goto	l2931
  5075     0704                     u3730:
  5076     0704                     l2925:
  5077     0704  30FF               	movlw	255
  5078     0705  0548               	andwf	___flmul@grs,w
  5079     0706  00C2               	movwf	??___flmul
  5080     0707  30FF               	movlw	255
  5081     0708  0549               	andwf	___flmul@grs+1,w
  5082     0709  00C3               	movwf	??___flmul+1
  5083     070A  30FF               	movlw	255
  5084     070B  054A               	andwf	___flmul@grs+2,w
  5085     070C  00C4               	movwf	??___flmul+2
  5086     070D  307F               	movlw	127
  5087     070E  054B               	andwf	___flmul@grs+3,w
  5088     070F  00C5               	movwf	??___flmul+3
  5089     0710  0845               	movf	??___flmul+3,w
  5090     0711  0444               	iorwf	??___flmul+2,w
  5091     0712  0443               	iorwf	??___flmul+1,w
  5092     0713  0442               	iorwf	??___flmul,w
  5093     0714  1903               	skipnz
  5094     0715  2F17               	goto	u3741
  5095     0716  2F18               	goto	u3740
  5096     0717                     u3741:
  5097     0717  2F1B               	goto	l811
  5098     0718                     u3740:
  5099     0718                     l2927:
  5100     0718  01CC               	clrf	___flmul@aexp
  5101     0719  0ACC               	incf	___flmul@aexp,f
  5102     071A  2F20               	goto	l2931
  5103     071B                     l811:
  5104     071B  1C4E               	btfss	___flmul@prod,0
  5105     071C  2F1E               	goto	u3751
  5106     071D  2F1F               	goto	u3750
  5107     071E                     u3751:
  5108     071E  2F20               	goto	l2931
  5109     071F                     u3750:
  5110     071F  2F18               	goto	l2927
  5111     0720                     l2931:
  5112     0720  084C               	movf	___flmul@aexp,w
  5113     0721  1903               	btfsc	3,2
  5114     0722  2F24               	goto	u3761
  5115     0723  2F25               	goto	u3760
  5116     0724                     u3761:
  5117     0724  2F56               	goto	l2941
  5118     0725                     u3760:
  5119     0725                     l2933:
  5120     0725  3001               	movlw	1
  5121     0726  07CE               	addwf	___flmul@prod,f
  5122     0727  3000               	movlw	0
  5123     0728  1803               	skipnc
  5124     0729  3001               	movlw	1
  5125     072A  07CF               	addwf	___flmul@prod+1,f
  5126     072B  3000               	movlw	0
  5127     072C  1803               	skipnc
  5128     072D  3001               	movlw	1
  5129     072E  07D0               	addwf	___flmul@prod+2,f
  5130     072F  3000               	movlw	0
  5131     0730  1803               	skipnc
  5132     0731  3001               	movlw	1
  5133     0732  07D1               	addwf	___flmul@prod+3,f
  5134     0733                     l2935:
  5135     0733  1C51               	btfss	___flmul@prod+3,0
  5136     0734  2F36               	goto	u3771
  5137     0735  2F37               	goto	u3770
  5138     0736                     u3771:
  5139     0736  2F56               	goto	l2941
  5140     0737                     u3770:
  5141     0737                     l2937:
  5142     0737  084E               	movf	___flmul@prod,w
  5143     0738  00C2               	movwf	??___flmul
  5144     0739  084F               	movf	___flmul@prod+1,w
  5145     073A  00C3               	movwf	??___flmul+1
  5146     073B  0850               	movf	___flmul@prod+2,w
  5147     073C  00C4               	movwf	??___flmul+2
  5148     073D  0851               	movf	___flmul@prod+3,w
  5149     073E  00C5               	movwf	??___flmul+3
  5150     073F  3001               	movlw	1
  5151     0740  00C6               	movwf	??___flmul+4
  5152     0741                     u3785:
  5153     0741  0D45               	rlf	??___flmul+3,w
  5154     0742  0CC5               	rrf	??___flmul+3,f
  5155     0743  0CC4               	rrf	??___flmul+2,f
  5156     0744  0CC3               	rrf	??___flmul+1,f
  5157     0745  0CC2               	rrf	??___flmul,f
  5158     0746                     u3780:
  5159     0746  0BC6               	decfsz	??___flmul+4,f
  5160     0747  2F41               	goto	u3785
  5161     0748  0845               	movf	??___flmul+3,w
  5162     0749  00D1               	movwf	___flmul@prod+3
  5163     074A  0844               	movf	??___flmul+2,w
  5164     074B  00D0               	movwf	___flmul@prod+2
  5165     074C  0843               	movf	??___flmul+1,w
  5166     074D  00CF               	movwf	___flmul@prod+1
  5167     074E  0842               	movf	??___flmul,w
  5168     074F  00CE               	movwf	___flmul@prod
  5169     0750                     l2939:
  5170     0750  3001               	movlw	1
  5171     0751  07D2               	addwf	___flmul@temp,f
  5172     0752  1803               	skipnc
  5173     0753  0AD3               	incf	___flmul@temp+1,f
  5174     0754  3000               	movlw	0
  5175     0755  07D3               	addwf	___flmul@temp+1,f
  5176     0756                     l2941:
  5177     0756  0853               	movf	___flmul@temp+1,w
  5178     0757  3A80               	xorlw	128
  5179     0758  00FF               	movwf	btemp+1
  5180     0759  3080               	movlw	128
  5181     075A  027F               	subwf	btemp+1,w
  5182     075B  1D03               	skipz
  5183     075C  2F5F               	goto	u3795
  5184     075D  30FF               	movlw	255
  5185     075E  0252               	subwf	___flmul@temp,w
  5186     075F                     u3795:
  5187     075F  1C03               	skipc
  5188     0760  2F62               	goto	u3791
  5189     0761  2F63               	goto	u3790
  5190     0762                     u3791:
  5191     0762  2F6E               	goto	l2945
  5192     0763                     u3790:
  5193     0763                     l2943:
  5194     0763  307F               	movlw	127
  5195     0764  1283               	bcf	3,5	;RP0=0, select bank0
  5196     0765  1303               	bcf	3,6	;RP1=0, select bank0
  5197     0766  00D1               	movwf	___flmul@prod+3
  5198     0767  3080               	movlw	128
  5199     0768  00D0               	movwf	___flmul@prod+2
  5200     0769  3000               	movlw	0
  5201     076A  00CF               	movwf	___flmul@prod+1
  5202     076B  3000               	movlw	0
  5203     076C  00CE               	movwf	___flmul@prod
  5204     076D  2F9F               	goto	l2959
  5205     076E                     l2945:
  5206     076E  1283               	bcf	3,5	;RP0=0, select bank0
  5207     076F  1303               	bcf	3,6	;RP1=0, select bank0
  5208     0770  0853               	movf	___flmul@temp+1,w
  5209     0771  3A80               	xorlw	128
  5210     0772  00FF               	movwf	btemp+1
  5211     0773  3080               	movlw	128
  5212     0774  027F               	subwf	btemp+1,w
  5213     0775  1D03               	skipz
  5214     0776  2F79               	goto	u3805
  5215     0777  3001               	movlw	1
  5216     0778  0252               	subwf	___flmul@temp,w
  5217     0779                     u3805:
  5218     0779  1803               	skipnc
  5219     077A  2F7C               	goto	u3801
  5220     077B  2F7D               	goto	u3800
  5221     077C                     u3801:
  5222     077C  2F89               	goto	l2951
  5223     077D                     u3800:
  5224     077D                     l2947:
  5225     077D  3000               	movlw	0
  5226     077E  1283               	bcf	3,5	;RP0=0, select bank0
  5227     077F  1303               	bcf	3,6	;RP1=0, select bank0
  5228     0780  00D1               	movwf	___flmul@prod+3
  5229     0781  3000               	movlw	0
  5230     0782  00D0               	movwf	___flmul@prod+2
  5231     0783  3000               	movlw	0
  5232     0784  00CF               	movwf	___flmul@prod+1
  5233     0785  3000               	movlw	0
  5234     0786  00CE               	movwf	___flmul@prod
  5235     0787                     l2949:
  5236     0787  01C7               	clrf	___flmul@sign
  5237     0788  2F9F               	goto	l2959
  5238     0789                     l2951:
  5239     0789  1283               	bcf	3,5	;RP0=0, select bank0
  5240     078A  1303               	bcf	3,6	;RP1=0, select bank0
  5241     078B  0852               	movf	___flmul@temp,w
  5242     078C  00CD               	movwf	___flmul@bexp
  5243     078D  30FF               	movlw	255
  5244     078E  05CE               	andwf	___flmul@prod,f
  5245     078F  30FF               	movlw	255
  5246     0790  05CF               	andwf	___flmul@prod+1,f
  5247     0791  307F               	movlw	127
  5248     0792  05D0               	andwf	___flmul@prod+2,f
  5249     0793  3000               	movlw	0
  5250     0794  05D1               	andwf	___flmul@prod+3,f
  5251     0795                     l2953:
  5252     0795  1C4D               	btfss	___flmul@bexp,0
  5253     0796  2F98               	goto	u3811
  5254     0797  2F99               	goto	u3810
  5255     0798                     u3811:
  5256     0798  2F9A               	goto	l2957
  5257     0799                     u3810:
  5258     0799                     l2955:
  5259     0799  17D0               	bsf	___flmul@prod+2,7
  5260     079A                     l2957:
  5261     079A  084D               	movf	___flmul@bexp,w
  5262     079B  00C2               	movwf	??___flmul
  5263     079C  1003               	clrc
  5264     079D  0C42               	rrf	??___flmul,w
  5265     079E  00D1               	movwf	___flmul@prod+3
  5266     079F                     l2959:
  5267     079F  0847               	movf	___flmul@sign,w
  5268     07A0  00FF               	movwf	btemp+1
  5269     07A1  087F               	movf	btemp+1,w
  5270     07A2  04D1               	iorwf	___flmul@prod+3,f
  5271     07A3                     l2961:
  5272     07A3  0851               	movf	___flmul@prod+3,w
  5273     07A4  00BD               	movwf	?___flmul+3
  5274     07A5  0850               	movf	___flmul@prod+2,w
  5275     07A6  00BC               	movwf	?___flmul+2
  5276     07A7  084F               	movf	___flmul@prod+1,w
  5277     07A8  00BB               	movwf	?___flmul+1
  5278     07A9  084E               	movf	___flmul@prod,w
  5279     07AA  00BA               	movwf	?___flmul
  5280     07AB                     l805:
  5281     07AB  0008               	return
  5282     07AC                     __end_of___flmul:
  5283                           
  5284                           	psect	text16
  5285     11AC                     __ptext16:	
  5286 ;; *************** function __Umul8_16 *****************
  5287 ;; Defined at:
  5288 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul8_16.c"
  5289 ;; Parameters:    Size  Location     Type
  5290 ;;  multiplier      1    wreg     unsigned char 
  5291 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  5292 ;; Auto vars:     Size  Location     Type
  5293 ;;  multiplier      1    8[BANK0 ] unsigned char 
  5294 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  5295 ;;  product         2    4[BANK0 ] unsigned int 
  5296 ;; Return value:  Size  Location     Type
  5297 ;;                  2    0[BANK0 ] unsigned int 
  5298 ;; Registers used:
  5299 ;;		wreg, status,2, status,0
  5300 ;; Tracked objects:
  5301 ;;		On entry : 0/0
  5302 ;;		On exit  : 0/0
  5303 ;;		Unchanged: 0/0
  5304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5305 ;;      Params:         0       2       0       0       0
  5306 ;;      Locals:         0       5       0       0       0
  5307 ;;      Temps:          0       2       0       0       0
  5308 ;;      Totals:         0       9       0       0       0
  5309 ;;Total ram usage:        9 bytes
  5310 ;; Hardware stack levels used: 1
  5311 ;; Hardware stack levels required when called: 2
  5312 ;; This function calls:
  5313 ;;		Nothing
  5314 ;; This function is called by:
  5315 ;;		___flmul
  5316 ;; This function uses a non-reentrant model
  5317 ;;
  5318                           
  5319     11AC                     __Umul8_16:	
  5320                           ;psect for function __Umul8_16
  5321                           
  5322                           
  5323                           ;incstack = 0
  5324                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5325                           ;__Umul8_16@multiplier stored from wreg
  5326     11AC  1283               	bcf	3,5	;RP0=0, select bank0
  5327     11AD  1303               	bcf	3,6	;RP1=0, select bank0
  5328     11AE  00A8               	movwf	__Umul8_16@multiplier
  5329     11AF                     l2347:
  5330     11AF  01A4               	clrf	__Umul8_16@product
  5331     11B0  01A5               	clrf	__Umul8_16@product+1
  5332     11B1                     l2349:
  5333     11B1  0820               	movf	__Umul8_16@multiplicand,w
  5334     11B2  00A2               	movwf	??__Umul8_16
  5335     11B3  01A3               	clrf	??__Umul8_16+1
  5336     11B4  0822               	movf	??__Umul8_16,w
  5337     11B5  00A6               	movwf	__Umul8_16@word_mpld
  5338     11B6  0823               	movf	??__Umul8_16+1,w
  5339     11B7  00A7               	movwf	__Umul8_16@word_mpld+1
  5340     11B8                     l2351:
  5341     11B8  1C28               	btfss	__Umul8_16@multiplier,0
  5342     11B9  29BB               	goto	u2571
  5343     11BA  29BC               	goto	u2570
  5344     11BB                     u2571:
  5345     11BB  29C2               	goto	l824
  5346     11BC                     u2570:
  5347     11BC                     l2353:
  5348     11BC  0826               	movf	__Umul8_16@word_mpld,w
  5349     11BD  07A4               	addwf	__Umul8_16@product,f
  5350     11BE  1803               	skipnc
  5351     11BF  0AA5               	incf	__Umul8_16@product+1,f
  5352     11C0  0827               	movf	__Umul8_16@word_mpld+1,w
  5353     11C1  07A5               	addwf	__Umul8_16@product+1,f
  5354     11C2                     l824:
  5355     11C2  3001               	movlw	1
  5356     11C3                     u2585:
  5357     11C3  1003               	clrc
  5358     11C4  0DA6               	rlf	__Umul8_16@word_mpld,f
  5359     11C5  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  5360     11C6  3EFF               	addlw	-1
  5361     11C7  1D03               	skipz
  5362     11C8  29C3               	goto	u2585
  5363     11C9  1003               	clrc
  5364     11CA  0CA8               	rrf	__Umul8_16@multiplier,f
  5365     11CB                     l2355:
  5366     11CB  0828               	movf	__Umul8_16@multiplier,w
  5367     11CC  1D03               	btfss	3,2
  5368     11CD  29CF               	goto	u2591
  5369     11CE  29D0               	goto	u2590
  5370     11CF                     u2591:
  5371     11CF  29B8               	goto	l2351
  5372     11D0                     u2590:
  5373     11D0                     l2357:
  5374     11D0  0825               	movf	__Umul8_16@product+1,w
  5375     11D1  00A1               	movwf	?__Umul8_16+1
  5376     11D2  0824               	movf	__Umul8_16@product,w
  5377     11D3  00A0               	movwf	?__Umul8_16
  5378     11D4                     l826:
  5379     11D4  0008               	return
  5380     11D5                     __end_of__Umul8_16:
  5381                           
  5382                           	psect	text17
  5383     081F                     __ptext17:	
  5384 ;; *************** function ___fldiv *****************
  5385 ;; Defined at:
  5386 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcdiv.c"
  5387 ;; Parameters:    Size  Location     Type
  5388 ;;  a               4    0[BANK0 ] unsigned int 
  5389 ;;  b               4    4[BANK0 ] unsigned int 
  5390 ;; Auto vars:     Size  Location     Type
  5391 ;;  grs             4   20[BANK0 ] unsigned long 
  5392 ;;  rem             4   13[BANK0 ] unsigned long 
  5393 ;;  new_exp         2   18[BANK0 ] int 
  5394 ;;  aexp            1   25[BANK0 ] unsigned char 
  5395 ;;  bexp            1   24[BANK0 ] unsigned char 
  5396 ;;  sign            1   17[BANK0 ] unsigned char 
  5397 ;; Return value:  Size  Location     Type
  5398 ;;                  4    0[BANK0 ] unsigned char 
  5399 ;; Registers used:
  5400 ;;		wreg, status,2, status,0, btemp+1
  5401 ;; Tracked objects:
  5402 ;;		On entry : 0/0
  5403 ;;		On exit  : 0/0
  5404 ;;		Unchanged: 0/0
  5405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5406 ;;      Params:         0       8       0       0       0
  5407 ;;      Locals:         0      13       0       0       0
  5408 ;;      Temps:          0       5       0       0       0
  5409 ;;      Totals:         0      26       0       0       0
  5410 ;;Total ram usage:       26 bytes
  5411 ;; Hardware stack levels used: 1
  5412 ;; Hardware stack levels required when called: 2
  5413 ;; This function calls:
  5414 ;;		Nothing
  5415 ;; This function is called by:
  5416 ;;		_main
  5417 ;; This function uses a non-reentrant model
  5418 ;;
  5419                           
  5420     081F                     ___fldiv:	
  5421                           ;psect for function ___fldiv
  5422                           
  5423     081F                     l2677:	
  5424                           ;incstack = 0
  5425                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  5426                           
  5427     081F  1283               	bcf	3,5	;RP0=0, select bank0
  5428     0820  1303               	bcf	3,6	;RP1=0, select bank0
  5429     0821  0827               	movf	___fldiv@b+3,w
  5430     0822  3980               	andlw	128
  5431     0823  00B1               	movwf	___fldiv@sign
  5432     0824                     l2679:
  5433     0824  0827               	movf	___fldiv@b+3,w
  5434     0825  00A8               	movwf	??___fldiv
  5435     0826  0728               	addwf	??___fldiv,w
  5436     0827  00B8               	movwf	___fldiv@bexp
  5437     0828                     l2681:
  5438     0828  1FA6               	btfss	___fldiv@b+2,7
  5439     0829  282B               	goto	u3161
  5440     082A  282C               	goto	u3160
  5441     082B                     u3161:
  5442     082B  282D               	goto	l2685
  5443     082C                     u3160:
  5444     082C                     l2683:
  5445     082C  1438               	bsf	___fldiv@bexp,0
  5446     082D                     l2685:
  5447     082D  0838               	movf	___fldiv@bexp,w
  5448     082E  1903               	btfsc	3,2
  5449     082F  2831               	goto	u3171
  5450     0830  2832               	goto	u3170
  5451     0831                     u3171:
  5452     0831  2842               	goto	l2695
  5453     0832                     u3170:
  5454     0832                     l2687:
  5455     0832  0A38               	incf	___fldiv@bexp,w
  5456     0833  1D03               	btfss	3,2
  5457     0834  2836               	goto	u3181
  5458     0835  2837               	goto	u3180
  5459     0836                     u3181:
  5460     0836  283F               	goto	l2691
  5461     0837                     u3180:
  5462     0837                     l2689:
  5463     0837  3000               	movlw	0
  5464     0838  00A7               	movwf	___fldiv@b+3
  5465     0839  3000               	movlw	0
  5466     083A  00A6               	movwf	___fldiv@b+2
  5467     083B  3000               	movlw	0
  5468     083C  00A5               	movwf	___fldiv@b+1
  5469     083D  3000               	movlw	0
  5470     083E  00A4               	movwf	___fldiv@b
  5471     083F                     l2691:
  5472     083F  17A6               	bsf	___fldiv@b+2,7
  5473     0840                     l2693:
  5474     0840  01A7               	clrf	___fldiv@b+3
  5475     0841  284A               	goto	l2697
  5476     0842                     l2695:
  5477     0842  3000               	movlw	0
  5478     0843  00A7               	movwf	___fldiv@b+3
  5479     0844  3000               	movlw	0
  5480     0845  00A6               	movwf	___fldiv@b+2
  5481     0846  3000               	movlw	0
  5482     0847  00A5               	movwf	___fldiv@b+1
  5483     0848  3000               	movlw	0
  5484     0849  00A4               	movwf	___fldiv@b
  5485     084A                     l2697:
  5486     084A  0823               	movf	___fldiv@a+3,w
  5487     084B  3980               	andlw	128
  5488     084C  00FF               	movwf	btemp+1
  5489     084D  087F               	movf	btemp+1,w
  5490     084E  06B1               	xorwf	___fldiv@sign,f
  5491     084F                     l2699:
  5492     084F  0823               	movf	___fldiv@a+3,w
  5493     0850  00A8               	movwf	??___fldiv
  5494     0851  0728               	addwf	??___fldiv,w
  5495     0852  00B9               	movwf	___fldiv@aexp
  5496     0853                     l2701:
  5497     0853  1FA2               	btfss	___fldiv@a+2,7
  5498     0854  2856               	goto	u3191
  5499     0855  2857               	goto	u3190
  5500     0856                     u3191:
  5501     0856  2858               	goto	l2705
  5502     0857                     u3190:
  5503     0857                     l2703:
  5504     0857  1439               	bsf	___fldiv@aexp,0
  5505     0858                     l2705:
  5506     0858  0839               	movf	___fldiv@aexp,w
  5507     0859  1903               	btfsc	3,2
  5508     085A  285C               	goto	u3201
  5509     085B  285D               	goto	u3200
  5510     085C                     u3201:
  5511     085C  286D               	goto	l2715
  5512     085D                     u3200:
  5513     085D                     l2707:
  5514     085D  0A39               	incf	___fldiv@aexp,w
  5515     085E  1D03               	btfss	3,2
  5516     085F  2861               	goto	u3211
  5517     0860  2862               	goto	u3210
  5518     0861                     u3211:
  5519     0861  286A               	goto	l2711
  5520     0862                     u3210:
  5521     0862                     l2709:
  5522     0862  3000               	movlw	0
  5523     0863  00A3               	movwf	___fldiv@a+3
  5524     0864  3000               	movlw	0
  5525     0865  00A2               	movwf	___fldiv@a+2
  5526     0866  3000               	movlw	0
  5527     0867  00A1               	movwf	___fldiv@a+1
  5528     0868  3000               	movlw	0
  5529     0869  00A0               	movwf	___fldiv@a
  5530     086A                     l2711:
  5531     086A  17A2               	bsf	___fldiv@a+2,7
  5532     086B                     l2713:
  5533     086B  01A3               	clrf	___fldiv@a+3
  5534     086C  2875               	goto	l765
  5535     086D                     l2715:
  5536     086D  3000               	movlw	0
  5537     086E  00A3               	movwf	___fldiv@a+3
  5538     086F  3000               	movlw	0
  5539     0870  00A2               	movwf	___fldiv@a+2
  5540     0871  3000               	movlw	0
  5541     0872  00A1               	movwf	___fldiv@a+1
  5542     0873  3000               	movlw	0
  5543     0874  00A0               	movwf	___fldiv@a
  5544     0875                     l765:
  5545     0875  0823               	movf	___fldiv@a+3,w
  5546     0876  0422               	iorwf	___fldiv@a+2,w
  5547     0877  0421               	iorwf	___fldiv@a+1,w
  5548     0878  0420               	iorwf	___fldiv@a,w
  5549     0879  1D03               	skipz
  5550     087A  287C               	goto	u3221
  5551     087B  287D               	goto	u3220
  5552     087C                     u3221:
  5553     087C  2896               	goto	l2725
  5554     087D                     u3220:
  5555     087D                     l2717:
  5556     087D  3000               	movlw	0
  5557     087E  00A7               	movwf	___fldiv@b+3
  5558     087F  3000               	movlw	0
  5559     0880  00A6               	movwf	___fldiv@b+2
  5560     0881  3000               	movlw	0
  5561     0882  00A5               	movwf	___fldiv@b+1
  5562     0883  3000               	movlw	0
  5563     0884  00A4               	movwf	___fldiv@b
  5564     0885  3080               	movlw	128
  5565     0886  04A6               	iorwf	___fldiv@b+2,f
  5566     0887  307F               	movlw	127
  5567     0888  04A7               	iorwf	___fldiv@b+3,f
  5568     0889                     l2719:
  5569     0889  0831               	movf	___fldiv@sign,w
  5570     088A  00FF               	movwf	btemp+1
  5571     088B  087F               	movf	btemp+1,w
  5572     088C  04A7               	iorwf	___fldiv@b+3,f
  5573     088D                     l2721:
  5574     088D  0827               	movf	___fldiv@b+3,w
  5575     088E  00A3               	movwf	?___fldiv+3
  5576     088F  0826               	movf	___fldiv@b+2,w
  5577     0890  00A2               	movwf	?___fldiv+2
  5578     0891  0825               	movf	___fldiv@b+1,w
  5579     0892  00A1               	movwf	?___fldiv+1
  5580     0893  0824               	movf	___fldiv@b,w
  5581     0894  00A0               	movwf	?___fldiv
  5582     0895  29ED               	goto	l767
  5583     0896                     l2725:
  5584     0896  0838               	movf	___fldiv@bexp,w
  5585     0897  1D03               	btfss	3,2
  5586     0898  289A               	goto	u3231
  5587     0899  289B               	goto	u3230
  5588     089A                     u3231:
  5589     089A  28A4               	goto	l2731
  5590     089B                     u3230:
  5591     089B                     l2727:
  5592     089B  3000               	movlw	0
  5593     089C  00A3               	movwf	?___fldiv+3
  5594     089D  3000               	movlw	0
  5595     089E  00A2               	movwf	?___fldiv+2
  5596     089F  3000               	movlw	0
  5597     08A0  00A1               	movwf	?___fldiv+1
  5598     08A1  3000               	movlw	0
  5599     08A2  00A0               	movwf	?___fldiv
  5600     08A3  29ED               	goto	l767
  5601     08A4                     l2731:
  5602     08A4  0838               	movf	___fldiv@bexp,w
  5603     08A5  00A8               	movwf	??___fldiv
  5604     08A6  01A9               	clrf	??___fldiv+1
  5605     08A7  0829               	movf	??___fldiv+1,w
  5606     08A8  00AB               	movwf	??___fldiv+3
  5607     08A9  0839               	movf	___fldiv@aexp,w
  5608     08AA  0228               	subwf	??___fldiv,w
  5609     08AB  00AA               	movwf	??___fldiv+2
  5610     08AC  1C03               	skipc
  5611     08AD  03AB               	decf	??___fldiv+3,f
  5612     08AE  082A               	movf	??___fldiv+2,w
  5613     08AF  3E7F               	addlw	127
  5614     08B0  00B2               	movwf	___fldiv@new_exp
  5615     08B1  082B               	movf	??___fldiv+3,w
  5616     08B2  1803               	skipnc
  5617     08B3  3E01               	addlw	1
  5618     08B4  3E00               	addlw	0
  5619     08B5  00B3               	movwf	___fldiv@new_exp+1
  5620     08B6                     l2733:
  5621     08B6  0827               	movf	___fldiv@b+3,w
  5622     08B7  00B0               	movwf	___fldiv@rem+3
  5623     08B8  0826               	movf	___fldiv@b+2,w
  5624     08B9  00AF               	movwf	___fldiv@rem+2
  5625     08BA  0825               	movf	___fldiv@b+1,w
  5626     08BB  00AE               	movwf	___fldiv@rem+1
  5627     08BC  0824               	movf	___fldiv@b,w
  5628     08BD  00AD               	movwf	___fldiv@rem
  5629     08BE                     l2735:
  5630     08BE  3000               	movlw	0
  5631     08BF  00A7               	movwf	___fldiv@b+3
  5632     08C0  3000               	movlw	0
  5633     08C1  00A6               	movwf	___fldiv@b+2
  5634     08C2  3000               	movlw	0
  5635     08C3  00A5               	movwf	___fldiv@b+1
  5636     08C4  3000               	movlw	0
  5637     08C5  00A4               	movwf	___fldiv@b
  5638     08C6                     l2737:
  5639     08C6  3000               	movlw	0
  5640     08C7  00B7               	movwf	___fldiv@grs+3
  5641     08C8  3000               	movlw	0
  5642     08C9  00B6               	movwf	___fldiv@grs+2
  5643     08CA  3000               	movlw	0
  5644     08CB  00B5               	movwf	___fldiv@grs+1
  5645     08CC  3000               	movlw	0
  5646     08CD  00B4               	movwf	___fldiv@grs
  5647     08CE                     l2739:
  5648     08CE  01B9               	clrf	___fldiv@aexp
  5649     08CF  291A               	goto	l2759
  5650     08D0                     l2741:
  5651     08D0  0839               	movf	___fldiv@aexp,w
  5652     08D1  1903               	btfsc	3,2
  5653     08D2  28D4               	goto	u3241
  5654     08D3  28D5               	goto	u3240
  5655     08D4                     u3241:
  5656     08D4  28F5               	goto	l2751
  5657     08D5                     u3240:
  5658     08D5                     l2743:
  5659     08D5  3001               	movlw	1
  5660     08D6  00A8               	movwf	??___fldiv
  5661     08D7                     u3255:
  5662     08D7  1003               	clrc
  5663     08D8  0DAD               	rlf	___fldiv@rem,f
  5664     08D9  0DAE               	rlf	___fldiv@rem+1,f
  5665     08DA  0DAF               	rlf	___fldiv@rem+2,f
  5666     08DB  0DB0               	rlf	___fldiv@rem+3,f
  5667     08DC  0BA8               	decfsz	??___fldiv,f
  5668     08DD  28D7               	goto	u3255
  5669     08DE  3001               	movlw	1
  5670     08DF  00A8               	movwf	??___fldiv
  5671     08E0                     u3265:
  5672     08E0  1003               	clrc
  5673     08E1  0DA4               	rlf	___fldiv@b,f
  5674     08E2  0DA5               	rlf	___fldiv@b+1,f
  5675     08E3  0DA6               	rlf	___fldiv@b+2,f
  5676     08E4  0DA7               	rlf	___fldiv@b+3,f
  5677     08E5  0BA8               	decfsz	??___fldiv,f
  5678     08E6  28E0               	goto	u3265
  5679     08E7                     l2745:
  5680     08E7  1FB7               	btfss	___fldiv@grs+3,7
  5681     08E8  28EA               	goto	u3271
  5682     08E9  28EB               	goto	u3270
  5683     08EA                     u3271:
  5684     08EA  28EC               	goto	l2749
  5685     08EB                     u3270:
  5686     08EB                     l2747:
  5687     08EB  1424               	bsf	___fldiv@b,0
  5688     08EC                     l2749:
  5689     08EC  3001               	movlw	1
  5690     08ED  00A8               	movwf	??___fldiv
  5691     08EE                     u3285:
  5692     08EE  1003               	clrc
  5693     08EF  0DB4               	rlf	___fldiv@grs,f
  5694     08F0  0DB5               	rlf	___fldiv@grs+1,f
  5695     08F1  0DB6               	rlf	___fldiv@grs+2,f
  5696     08F2  0DB7               	rlf	___fldiv@grs+3,f
  5697     08F3  0BA8               	decfsz	??___fldiv,f
  5698     08F4  28EE               	goto	u3285
  5699     08F5                     l2751:
  5700     08F5  0823               	movf	___fldiv@a+3,w
  5701     08F6  0230               	subwf	___fldiv@rem+3,w
  5702     08F7  1D03               	skipz
  5703     08F8  2903               	goto	u3295
  5704     08F9  0822               	movf	___fldiv@a+2,w
  5705     08FA  022F               	subwf	___fldiv@rem+2,w
  5706     08FB  1D03               	skipz
  5707     08FC  2903               	goto	u3295
  5708     08FD  0821               	movf	___fldiv@a+1,w
  5709     08FE  022E               	subwf	___fldiv@rem+1,w
  5710     08FF  1D03               	skipz
  5711     0900  2903               	goto	u3295
  5712     0901  0820               	movf	___fldiv@a,w
  5713     0902  022D               	subwf	___fldiv@rem,w
  5714     0903                     u3295:
  5715     0903  1C03               	skipc
  5716     0904  2906               	goto	u3291
  5717     0905  2907               	goto	u3290
  5718     0906                     u3291:
  5719     0906  2916               	goto	l2757
  5720     0907                     u3290:
  5721     0907                     l2753:
  5722     0907  1737               	bsf	___fldiv@grs+3,6
  5723     0908                     l2755:
  5724     0908  0820               	movf	___fldiv@a,w
  5725     0909  02AD               	subwf	___fldiv@rem,f
  5726     090A  0821               	movf	___fldiv@a+1,w
  5727     090B  1C03               	skipc
  5728     090C  0F21               	incfsz	___fldiv@a+1,w
  5729     090D  02AE               	subwf	___fldiv@rem+1,f
  5730     090E  0822               	movf	___fldiv@a+2,w
  5731     090F  1C03               	skipc
  5732     0910  0F22               	incfsz	___fldiv@a+2,w
  5733     0911  02AF               	subwf	___fldiv@rem+2,f
  5734     0912  0823               	movf	___fldiv@a+3,w
  5735     0913  1C03               	skipc
  5736     0914  0F23               	incfsz	___fldiv@a+3,w
  5737     0915  02B0               	subwf	___fldiv@rem+3,f
  5738     0916                     l2757:
  5739     0916  3001               	movlw	1
  5740     0917  00FF               	movwf	btemp+1
  5741     0918  087F               	movf	btemp+1,w
  5742     0919  07B9               	addwf	___fldiv@aexp,f
  5743     091A                     l2759:
  5744     091A  301A               	movlw	26
  5745     091B  0239               	subwf	___fldiv@aexp,w
  5746     091C  1C03               	skipc
  5747     091D  291F               	goto	u3301
  5748     091E  2920               	goto	u3300
  5749     091F                     u3301:
  5750     091F  28D0               	goto	l2741
  5751     0920                     u3300:
  5752     0920                     l2761:
  5753     0920  0830               	movf	___fldiv@rem+3,w
  5754     0921  042F               	iorwf	___fldiv@rem+2,w
  5755     0922  042E               	iorwf	___fldiv@rem+1,w
  5756     0923  042D               	iorwf	___fldiv@rem,w
  5757     0924  1903               	skipnz
  5758     0925  2927               	goto	u3311
  5759     0926  2928               	goto	u3310
  5760     0927                     u3311:
  5761     0927  2947               	goto	l2775
  5762     0928                     u3310:
  5763     0928                     l2763:
  5764     0928  1434               	bsf	___fldiv@grs,0
  5765     0929  2947               	goto	l2775
  5766     092A                     l2765:
  5767     092A  3001               	movlw	1
  5768     092B  00A8               	movwf	??___fldiv
  5769     092C                     u3325:
  5770     092C  1003               	clrc
  5771     092D  0DA4               	rlf	___fldiv@b,f
  5772     092E  0DA5               	rlf	___fldiv@b+1,f
  5773     092F  0DA6               	rlf	___fldiv@b+2,f
  5774     0930  0DA7               	rlf	___fldiv@b+3,f
  5775     0931  0BA8               	decfsz	??___fldiv,f
  5776     0932  292C               	goto	u3325
  5777     0933                     l2767:
  5778     0933  1FB7               	btfss	___fldiv@grs+3,7
  5779     0934  2936               	goto	u3331
  5780     0935  2937               	goto	u3330
  5781     0936                     u3331:
  5782     0936  2938               	goto	l2771
  5783     0937                     u3330:
  5784     0937                     l2769:
  5785     0937  1424               	bsf	___fldiv@b,0
  5786     0938                     l2771:
  5787     0938  3001               	movlw	1
  5788     0939  00A8               	movwf	??___fldiv
  5789     093A                     u3345:
  5790     093A  1003               	clrc
  5791     093B  0DB4               	rlf	___fldiv@grs,f
  5792     093C  0DB5               	rlf	___fldiv@grs+1,f
  5793     093D  0DB6               	rlf	___fldiv@grs+2,f
  5794     093E  0DB7               	rlf	___fldiv@grs+3,f
  5795     093F  0BA8               	decfsz	??___fldiv,f
  5796     0940  293A               	goto	u3345
  5797     0941                     l2773:
  5798     0941  30FF               	movlw	255
  5799     0942  07B2               	addwf	___fldiv@new_exp,f
  5800     0943  1803               	skipnc
  5801     0944  0AB3               	incf	___fldiv@new_exp+1,f
  5802     0945  30FF               	movlw	255
  5803     0946  07B3               	addwf	___fldiv@new_exp+1,f
  5804     0947                     l2775:
  5805     0947  1FA6               	btfss	___fldiv@b+2,7
  5806     0948  294A               	goto	u3351
  5807     0949  294B               	goto	u3350
  5808     094A                     u3351:
  5809     094A  292A               	goto	l2765
  5810     094B                     u3350:
  5811     094B                     l2777:
  5812     094B  01B9               	clrf	___fldiv@aexp
  5813     094C                     l2779:
  5814     094C  1FB7               	btfss	___fldiv@grs+3,7
  5815     094D  294F               	goto	u3361
  5816     094E  2950               	goto	u3360
  5817     094F                     u3361:
  5818     094F  296C               	goto	l2787
  5819     0950                     u3360:
  5820     0950                     l2781:
  5821     0950  30FF               	movlw	255
  5822     0951  0534               	andwf	___fldiv@grs,w
  5823     0952  00A8               	movwf	??___fldiv
  5824     0953  30FF               	movlw	255
  5825     0954  0535               	andwf	___fldiv@grs+1,w
  5826     0955  00A9               	movwf	??___fldiv+1
  5827     0956  30FF               	movlw	255
  5828     0957  0536               	andwf	___fldiv@grs+2,w
  5829     0958  00AA               	movwf	??___fldiv+2
  5830     0959  307F               	movlw	127
  5831     095A  0537               	andwf	___fldiv@grs+3,w
  5832     095B  00AB               	movwf	??___fldiv+3
  5833     095C  082B               	movf	??___fldiv+3,w
  5834     095D  042A               	iorwf	??___fldiv+2,w
  5835     095E  0429               	iorwf	??___fldiv+1,w
  5836     095F  0428               	iorwf	??___fldiv,w
  5837     0960  1903               	skipnz
  5838     0961  2963               	goto	u3371
  5839     0962  2964               	goto	u3370
  5840     0963                     u3371:
  5841     0963  2967               	goto	l781
  5842     0964                     u3370:
  5843     0964                     l2783:
  5844     0964  01B9               	clrf	___fldiv@aexp
  5845     0965  0AB9               	incf	___fldiv@aexp,f
  5846     0966  296C               	goto	l2787
  5847     0967                     l781:
  5848     0967  1C24               	btfss	___fldiv@b,0
  5849     0968  296A               	goto	u3381
  5850     0969  296B               	goto	u3380
  5851     096A                     u3381:
  5852     096A  296C               	goto	l2787
  5853     096B                     u3380:
  5854     096B  2964               	goto	l2783
  5855     096C                     l2787:
  5856     096C  0839               	movf	___fldiv@aexp,w
  5857     096D  1903               	btfsc	3,2
  5858     096E  2970               	goto	u3391
  5859     096F  2971               	goto	u3390
  5860     0970                     u3391:
  5861     0970  29A2               	goto	l2797
  5862     0971                     u3390:
  5863     0971                     l2789:
  5864     0971  3001               	movlw	1
  5865     0972  07A4               	addwf	___fldiv@b,f
  5866     0973  3000               	movlw	0
  5867     0974  1803               	skipnc
  5868     0975  3001               	movlw	1
  5869     0976  07A5               	addwf	___fldiv@b+1,f
  5870     0977  3000               	movlw	0
  5871     0978  1803               	skipnc
  5872     0979  3001               	movlw	1
  5873     097A  07A6               	addwf	___fldiv@b+2,f
  5874     097B  3000               	movlw	0
  5875     097C  1803               	skipnc
  5876     097D  3001               	movlw	1
  5877     097E  07A7               	addwf	___fldiv@b+3,f
  5878     097F                     l2791:
  5879     097F  1C27               	btfss	___fldiv@b+3,0
  5880     0980  2982               	goto	u3401
  5881     0981  2983               	goto	u3400
  5882     0982                     u3401:
  5883     0982  29A2               	goto	l2797
  5884     0983                     u3400:
  5885     0983                     l2793:
  5886     0983  0824               	movf	___fldiv@b,w
  5887     0984  00A8               	movwf	??___fldiv
  5888     0985  0825               	movf	___fldiv@b+1,w
  5889     0986  00A9               	movwf	??___fldiv+1
  5890     0987  0826               	movf	___fldiv@b+2,w
  5891     0988  00AA               	movwf	??___fldiv+2
  5892     0989  0827               	movf	___fldiv@b+3,w
  5893     098A  00AB               	movwf	??___fldiv+3
  5894     098B  3001               	movlw	1
  5895     098C  00AC               	movwf	??___fldiv+4
  5896     098D                     u3415:
  5897     098D  0D2B               	rlf	??___fldiv+3,w
  5898     098E  0CAB               	rrf	??___fldiv+3,f
  5899     098F  0CAA               	rrf	??___fldiv+2,f
  5900     0990  0CA9               	rrf	??___fldiv+1,f
  5901     0991  0CA8               	rrf	??___fldiv,f
  5902     0992                     u3410:
  5903     0992  0BAC               	decfsz	??___fldiv+4,f
  5904     0993  298D               	goto	u3415
  5905     0994  082B               	movf	??___fldiv+3,w
  5906     0995  00A7               	movwf	___fldiv@b+3
  5907     0996  082A               	movf	??___fldiv+2,w
  5908     0997  00A6               	movwf	___fldiv@b+2
  5909     0998  0829               	movf	??___fldiv+1,w
  5910     0999  00A5               	movwf	___fldiv@b+1
  5911     099A  0828               	movf	??___fldiv,w
  5912     099B  00A4               	movwf	___fldiv@b
  5913     099C                     l2795:
  5914     099C  3001               	movlw	1
  5915     099D  07B2               	addwf	___fldiv@new_exp,f
  5916     099E  1803               	skipnc
  5917     099F  0AB3               	incf	___fldiv@new_exp+1,f
  5918     09A0  3000               	movlw	0
  5919     09A1  07B3               	addwf	___fldiv@new_exp+1,f
  5920     09A2                     l2797:
  5921     09A2  0833               	movf	___fldiv@new_exp+1,w
  5922     09A3  3A80               	xorlw	128
  5923     09A4  00FF               	movwf	btemp+1
  5924     09A5  3080               	movlw	128
  5925     09A6  027F               	subwf	btemp+1,w
  5926     09A7  1D03               	skipz
  5927     09A8  29AB               	goto	u3425
  5928     09A9  30FF               	movlw	255
  5929     09AA  0232               	subwf	___fldiv@new_exp,w
  5930     09AB                     u3425:
  5931     09AB  1C03               	skipc
  5932     09AC  29AE               	goto	u3421
  5933     09AD  29AF               	goto	u3420
  5934     09AE                     u3421:
  5935     09AE  29BD               	goto	l2801
  5936     09AF                     u3420:
  5937     09AF                     l2799:
  5938     09AF  30FF               	movlw	255
  5939     09B0  1283               	bcf	3,5	;RP0=0, select bank0
  5940     09B1  1303               	bcf	3,6	;RP1=0, select bank0
  5941     09B2  00B2               	movwf	___fldiv@new_exp
  5942     09B3  3000               	movlw	0
  5943     09B4  00B3               	movwf	___fldiv@new_exp+1
  5944     09B5  3000               	movlw	0
  5945     09B6  00A7               	movwf	___fldiv@b+3
  5946     09B7  3000               	movlw	0
  5947     09B8  00A6               	movwf	___fldiv@b+2
  5948     09B9  3000               	movlw	0
  5949     09BA  00A5               	movwf	___fldiv@b+1
  5950     09BB  3000               	movlw	0
  5951     09BC  00A4               	movwf	___fldiv@b
  5952     09BD                     l2801:
  5953     09BD  1283               	bcf	3,5	;RP0=0, select bank0
  5954     09BE  1303               	bcf	3,6	;RP1=0, select bank0
  5955     09BF  0833               	movf	___fldiv@new_exp+1,w
  5956     09C0  3A80               	xorlw	128
  5957     09C1  00FF               	movwf	btemp+1
  5958     09C2  3080               	movlw	128
  5959     09C3  027F               	subwf	btemp+1,w
  5960     09C4  1D03               	skipz
  5961     09C5  29C8               	goto	u3435
  5962     09C6  3001               	movlw	1
  5963     09C7  0232               	subwf	___fldiv@new_exp,w
  5964     09C8                     u3435:
  5965     09C8  1803               	skipnc
  5966     09C9  29CB               	goto	u3431
  5967     09CA  29CC               	goto	u3430
  5968     09CB                     u3431:
  5969     09CB  29D9               	goto	l787
  5970     09CC                     u3430:
  5971     09CC                     l2803:
  5972     09CC  1283               	bcf	3,5	;RP0=0, select bank0
  5973     09CD  1303               	bcf	3,6	;RP1=0, select bank0
  5974     09CE  01B2               	clrf	___fldiv@new_exp
  5975     09CF  01B3               	clrf	___fldiv@new_exp+1
  5976     09D0                     l2805:
  5977     09D0  3000               	movlw	0
  5978     09D1  00A7               	movwf	___fldiv@b+3
  5979     09D2  3000               	movlw	0
  5980     09D3  00A6               	movwf	___fldiv@b+2
  5981     09D4  3000               	movlw	0
  5982     09D5  00A5               	movwf	___fldiv@b+1
  5983     09D6  3000               	movlw	0
  5984     09D7  00A4               	movwf	___fldiv@b
  5985     09D8                     l2807:
  5986     09D8  01B1               	clrf	___fldiv@sign
  5987     09D9                     l787:
  5988     09D9  1283               	bcf	3,5	;RP0=0, select bank0
  5989     09DA  1303               	bcf	3,6	;RP1=0, select bank0
  5990     09DB  0832               	movf	___fldiv@new_exp,w
  5991     09DC  00B8               	movwf	___fldiv@bexp
  5992     09DD                     l2809:
  5993     09DD  1C38               	btfss	___fldiv@bexp,0
  5994     09DE  29E0               	goto	u3441
  5995     09DF  29E1               	goto	u3440
  5996     09E0                     u3441:
  5997     09E0  29E3               	goto	l2813
  5998     09E1                     u3440:
  5999     09E1                     l2811:
  6000     09E1  17A6               	bsf	___fldiv@b+2,7
  6001     09E2  29E7               	goto	l2815
  6002     09E3                     l2813:
  6003     09E3  307F               	movlw	127
  6004     09E4  00FF               	movwf	btemp+1
  6005     09E5  087F               	movf	btemp+1,w
  6006     09E6  05A6               	andwf	___fldiv@b+2,f
  6007     09E7                     l2815:
  6008     09E7  0838               	movf	___fldiv@bexp,w
  6009     09E8  00A8               	movwf	??___fldiv
  6010     09E9  1003               	clrc
  6011     09EA  0C28               	rrf	??___fldiv,w
  6012     09EB  00A7               	movwf	___fldiv@b+3
  6013     09EC  2889               	goto	l2719
  6014     09ED                     l767:
  6015     09ED  0008               	return
  6016     09EE                     __end_of___fldiv:
  6017                           
  6018                           	psect	text18
  6019     1368                     __ptext18:	
  6020 ;; *************** function ___awmod *****************
  6021 ;; Defined at:
  6022 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
  6023 ;; Parameters:    Size  Location     Type
  6024 ;;  divisor         2   10[BANK0 ] int 
  6025 ;;  dividend        2   12[BANK0 ] int 
  6026 ;; Auto vars:     Size  Location     Type
  6027 ;;  sign            1   15[BANK0 ] unsigned char 
  6028 ;;  counter         1   14[BANK0 ] unsigned char 
  6029 ;; Return value:  Size  Location     Type
  6030 ;;                  2   10[BANK0 ] int 
  6031 ;; Registers used:
  6032 ;;		wreg, status,2, status,0, btemp+1
  6033 ;; Tracked objects:
  6034 ;;		On entry : 0/0
  6035 ;;		On exit  : 0/0
  6036 ;;		Unchanged: 0/0
  6037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6038 ;;      Params:         0       4       0       0       0
  6039 ;;      Locals:         0       2       0       0       0
  6040 ;;      Temps:          0       0       0       0       0
  6041 ;;      Totals:         0       6       0       0       0
  6042 ;;Total ram usage:        6 bytes
  6043 ;; Hardware stack levels used: 1
  6044 ;; Hardware stack levels required when called: 2
  6045 ;; This function calls:
  6046 ;;		Nothing
  6047 ;; This function is called by:
  6048 ;;		_main
  6049 ;; This function uses a non-reentrant model
  6050 ;;
  6051                           
  6052     1368                     ___awmod:	
  6053                           ;psect for function ___awmod
  6054                           
  6055     1368                     l3845:	
  6056                           ;incstack = 0
  6057                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  6058                           
  6059     1368  1283               	bcf	3,5	;RP0=0, select bank0
  6060     1369  1303               	bcf	3,6	;RP1=0, select bank0
  6061     136A  01AF               	clrf	___awmod@sign
  6062     136B                     l3847:
  6063     136B  1FAD               	btfss	___awmod@dividend+1,7
  6064     136C  2B6E               	goto	u5151
  6065     136D  2B6F               	goto	u5150
  6066     136E                     u5151:
  6067     136E  2B76               	goto	l3853
  6068     136F                     u5150:
  6069     136F                     l3849:
  6070     136F  09AC               	comf	___awmod@dividend,f
  6071     1370  09AD               	comf	___awmod@dividend+1,f
  6072     1371  0AAC               	incf	___awmod@dividend,f
  6073     1372  1903               	skipnz
  6074     1373  0AAD               	incf	___awmod@dividend+1,f
  6075     1374                     l3851:
  6076     1374  01AF               	clrf	___awmod@sign
  6077     1375  0AAF               	incf	___awmod@sign,f
  6078     1376                     l3853:
  6079     1376  1FAB               	btfss	___awmod@divisor+1,7
  6080     1377  2B79               	goto	u5161
  6081     1378  2B7A               	goto	u5160
  6082     1379                     u5161:
  6083     1379  2B7F               	goto	l3857
  6084     137A                     u5160:
  6085     137A                     l3855:
  6086     137A  09AA               	comf	___awmod@divisor,f
  6087     137B  09AB               	comf	___awmod@divisor+1,f
  6088     137C  0AAA               	incf	___awmod@divisor,f
  6089     137D  1903               	skipnz
  6090     137E  0AAB               	incf	___awmod@divisor+1,f
  6091     137F                     l3857:
  6092     137F  082A               	movf	___awmod@divisor,w
  6093     1380  042B               	iorwf	___awmod@divisor+1,w
  6094     1381  1903               	btfsc	3,2
  6095     1382  2B84               	goto	u5171
  6096     1383  2B85               	goto	u5170
  6097     1384                     u5171:
  6098     1384  2BB4               	goto	l3875
  6099     1385                     u5170:
  6100     1385                     l3859:
  6101     1385  01AE               	clrf	___awmod@counter
  6102     1386  0AAE               	incf	___awmod@counter,f
  6103     1387  2B93               	goto	l3865
  6104     1388                     l3861:
  6105     1388  3001               	movlw	1
  6106     1389                     u5185:
  6107     1389  1003               	clrc
  6108     138A  0DAA               	rlf	___awmod@divisor,f
  6109     138B  0DAB               	rlf	___awmod@divisor+1,f
  6110     138C  3EFF               	addlw	-1
  6111     138D  1D03               	skipz
  6112     138E  2B89               	goto	u5185
  6113     138F                     l3863:
  6114     138F  3001               	movlw	1
  6115     1390  00FF               	movwf	btemp+1
  6116     1391  087F               	movf	btemp+1,w
  6117     1392  07AE               	addwf	___awmod@counter,f
  6118     1393                     l3865:
  6119     1393  1FAB               	btfss	___awmod@divisor+1,7
  6120     1394  2B96               	goto	u5191
  6121     1395  2B97               	goto	u5190
  6122     1396                     u5191:
  6123     1396  2B88               	goto	l3861
  6124     1397                     u5190:
  6125     1397                     l3867:
  6126     1397  082B               	movf	___awmod@divisor+1,w
  6127     1398  022D               	subwf	___awmod@dividend+1,w
  6128     1399  1D03               	skipz
  6129     139A  2B9D               	goto	u5205
  6130     139B  082A               	movf	___awmod@divisor,w
  6131     139C  022C               	subwf	___awmod@dividend,w
  6132     139D                     u5205:
  6133     139D  1C03               	skipc
  6134     139E  2BA0               	goto	u5201
  6135     139F  2BA1               	goto	u5200
  6136     13A0                     u5201:
  6137     13A0  2BA7               	goto	l3871
  6138     13A1                     u5200:
  6139     13A1                     l3869:
  6140     13A1  082A               	movf	___awmod@divisor,w
  6141     13A2  02AC               	subwf	___awmod@dividend,f
  6142     13A3  082B               	movf	___awmod@divisor+1,w
  6143     13A4  1C03               	skipc
  6144     13A5  03AD               	decf	___awmod@dividend+1,f
  6145     13A6  02AD               	subwf	___awmod@dividend+1,f
  6146     13A7                     l3871:
  6147     13A7  3001               	movlw	1
  6148     13A8                     u5215:
  6149     13A8  1003               	clrc
  6150     13A9  0CAB               	rrf	___awmod@divisor+1,f
  6151     13AA  0CAA               	rrf	___awmod@divisor,f
  6152     13AB  3EFF               	addlw	-1
  6153     13AC  1D03               	skipz
  6154     13AD  2BA8               	goto	u5215
  6155     13AE                     l3873:
  6156     13AE  3001               	movlw	1
  6157     13AF  02AE               	subwf	___awmod@counter,f
  6158     13B0  1D03               	btfss	3,2
  6159     13B1  2BB3               	goto	u5221
  6160     13B2  2BB4               	goto	u5220
  6161     13B3                     u5221:
  6162     13B3  2B97               	goto	l3867
  6163     13B4                     u5220:
  6164     13B4                     l3875:
  6165     13B4  082F               	movf	___awmod@sign,w
  6166     13B5  1903               	btfsc	3,2
  6167     13B6  2BB8               	goto	u5231
  6168     13B7  2BB9               	goto	u5230
  6169     13B8                     u5231:
  6170     13B8  2BBE               	goto	l3879
  6171     13B9                     u5230:
  6172     13B9                     l3877:
  6173     13B9  09AC               	comf	___awmod@dividend,f
  6174     13BA  09AD               	comf	___awmod@dividend+1,f
  6175     13BB  0AAC               	incf	___awmod@dividend,f
  6176     13BC  1903               	skipnz
  6177     13BD  0AAD               	incf	___awmod@dividend+1,f
  6178     13BE                     l3879:
  6179     13BE  082D               	movf	___awmod@dividend+1,w
  6180     13BF  00AB               	movwf	?___awmod+1
  6181     13C0  082C               	movf	___awmod@dividend,w
  6182     13C1  00AA               	movwf	?___awmod
  6183     13C2                     l582:
  6184     13C2  0008               	return
  6185     13C3                     __end_of___awmod:
  6186                           
  6187                           	psect	text19
  6188     148D                     __ptext19:	
  6189 ;; *************** function ___awdiv *****************
  6190 ;; Defined at:
  6191 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  6192 ;; Parameters:    Size  Location     Type
  6193 ;;  divisor         2   10[BANK0 ] int 
  6194 ;;  dividend        2   12[BANK0 ] int 
  6195 ;; Auto vars:     Size  Location     Type
  6196 ;;  quotient        2   16[BANK0 ] int 
  6197 ;;  sign            1   15[BANK0 ] unsigned char 
  6198 ;;  counter         1   14[BANK0 ] unsigned char 
  6199 ;; Return value:  Size  Location     Type
  6200 ;;                  2   10[BANK0 ] int 
  6201 ;; Registers used:
  6202 ;;		wreg, status,2, status,0, btemp+1
  6203 ;; Tracked objects:
  6204 ;;		On entry : 0/0
  6205 ;;		On exit  : 0/0
  6206 ;;		Unchanged: 0/0
  6207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6208 ;;      Params:         0       4       0       0       0
  6209 ;;      Locals:         0       4       0       0       0
  6210 ;;      Temps:          0       0       0       0       0
  6211 ;;      Totals:         0       8       0       0       0
  6212 ;;Total ram usage:        8 bytes
  6213 ;; Hardware stack levels used: 1
  6214 ;; Hardware stack levels required when called: 2
  6215 ;; This function calls:
  6216 ;;		Nothing
  6217 ;; This function is called by:
  6218 ;;		_main
  6219 ;; This function uses a non-reentrant model
  6220 ;;
  6221                           
  6222     148D                     ___awdiv:	
  6223                           ;psect for function ___awdiv
  6224                           
  6225     148D                     l3801:	
  6226                           ;incstack = 0
  6227                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  6228                           
  6229     148D  1283               	bcf	3,5	;RP0=0, select bank0
  6230     148E  1303               	bcf	3,6	;RP1=0, select bank0
  6231     148F  01AF               	clrf	___awdiv@sign
  6232     1490                     l3803:
  6233     1490  1FAB               	btfss	___awdiv@divisor+1,7
  6234     1491  2C93               	goto	u5051
  6235     1492  2C94               	goto	u5050
  6236     1493                     u5051:
  6237     1493  2C9B               	goto	l3809
  6238     1494                     u5050:
  6239     1494                     l3805:
  6240     1494  09AA               	comf	___awdiv@divisor,f
  6241     1495  09AB               	comf	___awdiv@divisor+1,f
  6242     1496  0AAA               	incf	___awdiv@divisor,f
  6243     1497  1903               	skipnz
  6244     1498  0AAB               	incf	___awdiv@divisor+1,f
  6245     1499                     l3807:
  6246     1499  01AF               	clrf	___awdiv@sign
  6247     149A  0AAF               	incf	___awdiv@sign,f
  6248     149B                     l3809:
  6249     149B  1FAD               	btfss	___awdiv@dividend+1,7
  6250     149C  2C9E               	goto	u5061
  6251     149D  2C9F               	goto	u5060
  6252     149E                     u5061:
  6253     149E  2CA8               	goto	l3815
  6254     149F                     u5060:
  6255     149F                     l3811:
  6256     149F  09AC               	comf	___awdiv@dividend,f
  6257     14A0  09AD               	comf	___awdiv@dividend+1,f
  6258     14A1  0AAC               	incf	___awdiv@dividend,f
  6259     14A2  1903               	skipnz
  6260     14A3  0AAD               	incf	___awdiv@dividend+1,f
  6261     14A4                     l3813:
  6262     14A4  3001               	movlw	1
  6263     14A5  00FF               	movwf	btemp+1
  6264     14A6  087F               	movf	btemp+1,w
  6265     14A7  06AF               	xorwf	___awdiv@sign,f
  6266     14A8                     l3815:
  6267     14A8  01B0               	clrf	___awdiv@quotient
  6268     14A9  01B1               	clrf	___awdiv@quotient+1
  6269     14AA                     l3817:
  6270     14AA  082A               	movf	___awdiv@divisor,w
  6271     14AB  042B               	iorwf	___awdiv@divisor+1,w
  6272     14AC  1903               	btfsc	3,2
  6273     14AD  2CAF               	goto	u5071
  6274     14AE  2CB0               	goto	u5070
  6275     14AF                     u5071:
  6276     14AF  2CE7               	goto	l3837
  6277     14B0                     u5070:
  6278     14B0                     l3819:
  6279     14B0  01AE               	clrf	___awdiv@counter
  6280     14B1  0AAE               	incf	___awdiv@counter,f
  6281     14B2  2CBE               	goto	l3825
  6282     14B3                     l3821:
  6283     14B3  3001               	movlw	1
  6284     14B4                     u5085:
  6285     14B4  1003               	clrc
  6286     14B5  0DAA               	rlf	___awdiv@divisor,f
  6287     14B6  0DAB               	rlf	___awdiv@divisor+1,f
  6288     14B7  3EFF               	addlw	-1
  6289     14B8  1D03               	skipz
  6290     14B9  2CB4               	goto	u5085
  6291     14BA                     l3823:
  6292     14BA  3001               	movlw	1
  6293     14BB  00FF               	movwf	btemp+1
  6294     14BC  087F               	movf	btemp+1,w
  6295     14BD  07AE               	addwf	___awdiv@counter,f
  6296     14BE                     l3825:
  6297     14BE  1FAB               	btfss	___awdiv@divisor+1,7
  6298     14BF  2CC1               	goto	u5091
  6299     14C0  2CC2               	goto	u5090
  6300     14C1                     u5091:
  6301     14C1  2CB3               	goto	l3821
  6302     14C2                     u5090:
  6303     14C2                     l3827:
  6304     14C2  3001               	movlw	1
  6305     14C3                     u5105:
  6306     14C3  1003               	clrc
  6307     14C4  0DB0               	rlf	___awdiv@quotient,f
  6308     14C5  0DB1               	rlf	___awdiv@quotient+1,f
  6309     14C6  3EFF               	addlw	-1
  6310     14C7  1D03               	skipz
  6311     14C8  2CC3               	goto	u5105
  6312     14C9  082B               	movf	___awdiv@divisor+1,w
  6313     14CA  022D               	subwf	___awdiv@dividend+1,w
  6314     14CB  1D03               	skipz
  6315     14CC  2CCF               	goto	u5115
  6316     14CD  082A               	movf	___awdiv@divisor,w
  6317     14CE  022C               	subwf	___awdiv@dividend,w
  6318     14CF                     u5115:
  6319     14CF  1C03               	skipc
  6320     14D0  2CD2               	goto	u5111
  6321     14D1  2CD3               	goto	u5110
  6322     14D2                     u5111:
  6323     14D2  2CDA               	goto	l3833
  6324     14D3                     u5110:
  6325     14D3                     l3829:
  6326     14D3  082A               	movf	___awdiv@divisor,w
  6327     14D4  02AC               	subwf	___awdiv@dividend,f
  6328     14D5  082B               	movf	___awdiv@divisor+1,w
  6329     14D6  1C03               	skipc
  6330     14D7  03AD               	decf	___awdiv@dividend+1,f
  6331     14D8  02AD               	subwf	___awdiv@dividend+1,f
  6332     14D9                     l3831:
  6333     14D9  1430               	bsf	___awdiv@quotient,0
  6334     14DA                     l3833:
  6335     14DA  3001               	movlw	1
  6336     14DB                     u5125:
  6337     14DB  1003               	clrc
  6338     14DC  0CAB               	rrf	___awdiv@divisor+1,f
  6339     14DD  0CAA               	rrf	___awdiv@divisor,f
  6340     14DE  3EFF               	addlw	-1
  6341     14DF  1D03               	skipz
  6342     14E0  2CDB               	goto	u5125
  6343     14E1                     l3835:
  6344     14E1  3001               	movlw	1
  6345     14E2  02AE               	subwf	___awdiv@counter,f
  6346     14E3  1D03               	btfss	3,2
  6347     14E4  2CE6               	goto	u5131
  6348     14E5  2CE7               	goto	u5130
  6349     14E6                     u5131:
  6350     14E6  2CC2               	goto	l3827
  6351     14E7                     u5130:
  6352     14E7                     l3837:
  6353     14E7  082F               	movf	___awdiv@sign,w
  6354     14E8  1903               	btfsc	3,2
  6355     14E9  2CEB               	goto	u5141
  6356     14EA  2CEC               	goto	u5140
  6357     14EB                     u5141:
  6358     14EB  2CF1               	goto	l3841
  6359     14EC                     u5140:
  6360     14EC                     l3839:
  6361     14EC  09B0               	comf	___awdiv@quotient,f
  6362     14ED  09B1               	comf	___awdiv@quotient+1,f
  6363     14EE  0AB0               	incf	___awdiv@quotient,f
  6364     14EF  1903               	skipnz
  6365     14F0  0AB1               	incf	___awdiv@quotient+1,f
  6366     14F1                     l3841:
  6367     14F1  0831               	movf	___awdiv@quotient+1,w
  6368     14F2  00AB               	movwf	?___awdiv+1
  6369     14F3  0830               	movf	___awdiv@quotient,w
  6370     14F4  00AA               	movwf	?___awdiv
  6371     14F5                     l569:
  6372     14F5  0008               	return
  6373     14F6                     __end_of___awdiv:
  6374                           
  6375                           	psect	text20
  6376     124A                     __ptext20:	
  6377 ;; *************** function _UART_Write_Text *****************
  6378 ;; Defined at:
  6379 ;;		line 18 in file "uart_lib.c"
  6380 ;; Parameters:    Size  Location     Type
  6381 ;;  text            2    1[BANK0 ] PTR unsigned char 
  6382 ;;		 -> STR_31(5), STR_30(5), STR_27(5), main@combinedText_376(20), 
  6383 ;;		 -> main@uartMessage_372(8), STR_21(5), main@combinedText(20), main@uartMessage(8), 
  6384 ;;		 -> STR_15(5), 
  6385 ;; Auto vars:     Size  Location     Type
  6386 ;;  i               2    6[BANK0 ] int 
  6387 ;; Return value:  Size  Location     Type
  6388 ;;                  1    wreg      void 
  6389 ;; Registers used:
  6390 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6391 ;; Tracked objects:
  6392 ;;		On entry : 0/0
  6393 ;;		On exit  : 0/0
  6394 ;;		Unchanged: 0/0
  6395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6396 ;;      Params:         0       2       0       0       0
  6397 ;;      Locals:         0       2       0       0       0
  6398 ;;      Temps:          0       3       0       0       0
  6399 ;;      Totals:         0       7       0       0       0
  6400 ;;Total ram usage:        7 bytes
  6401 ;; Hardware stack levels used: 1
  6402 ;; Hardware stack levels required when called: 3
  6403 ;; This function calls:
  6404 ;;		_UART_Write
  6405 ;; This function is called by:
  6406 ;;		_main
  6407 ;; This function uses a non-reentrant model
  6408 ;;
  6409                           
  6410     124A                     _UART_Write_Text:	
  6411                           ;psect for function _UART_Write_Text
  6412                           
  6413     124A                     l3623:	
  6414                           ;incstack = 0
  6415                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6416                           
  6417                           
  6418                           ;uart_lib.c: 18: void UART_Write_Text(char *text);uart_lib.c: 19: {;uart_lib.c: 20:   in
      +                          t i;;uart_lib.c: 21:   for(i=0;text[i]!='\0';i++)
  6419     124A  1283               	bcf	3,5	;RP0=0, select bank0
  6420     124B  1303               	bcf	3,6	;RP1=0, select bank0
  6421     124C  01A6               	clrf	UART_Write_Text@i
  6422     124D  01A7               	clrf	UART_Write_Text@i+1
  6423     124E  2A73               	goto	l3629
  6424     124F                     l3625:
  6425                           
  6426                           ;uart_lib.c: 22:     UART_Write(text[i]);
  6427     124F  0826               	movf	UART_Write_Text@i,w
  6428     1250  0721               	addwf	UART_Write_Text@text,w
  6429     1251  00A4               	movwf	??_UART_Write_Text+1
  6430     1252  0822               	movf	UART_Write_Text@text+1,w
  6431     1253  00A3               	movwf	??_UART_Write_Text
  6432     1254  1803               	skipnc
  6433     1255  0AA3               	incf	??_UART_Write_Text,f
  6434     1256  1FA6               	btfss	UART_Write_Text@i,7
  6435     1257  2A59               	goto	u4810
  6436     1258  03A3               	decf	??_UART_Write_Text,f
  6437     1259                     u4810:
  6438     1259  1283               	bcf	3,5	;RP0=0, select bank0
  6439     125A  1303               	bcf	3,6	;RP1=0, select bank0
  6440     125B  0823               	movf	??_UART_Write_Text,w
  6441     125C  00A5               	movwf	??_UART_Write_Text+2
  6442     125D  0825               	movf	??_UART_Write_Text+2,w
  6443     125E  00FF               	movwf	btemp+1
  6444     125F  0824               	movf	??_UART_Write_Text+1,w
  6445     1260  0084               	movwf	4
  6446     1261  160A  118A  2000  160A  118A  	fcall	stringtab
  6447     1266  160A  158A  2777  160A  118A  	fcall	_UART_Write
  6448     126B                     l3627:
  6449     126B  3001               	movlw	1
  6450     126C  1283               	bcf	3,5	;RP0=0, select bank0
  6451     126D  1303               	bcf	3,6	;RP1=0, select bank0
  6452     126E  07A6               	addwf	UART_Write_Text@i,f
  6453     126F  1803               	skipnc
  6454     1270  0AA7               	incf	UART_Write_Text@i+1,f
  6455     1271  3000               	movlw	0
  6456     1272  07A7               	addwf	UART_Write_Text@i+1,f
  6457     1273                     l3629:
  6458     1273  0826               	movf	UART_Write_Text@i,w
  6459     1274  0721               	addwf	UART_Write_Text@text,w
  6460     1275  00A4               	movwf	??_UART_Write_Text+1
  6461     1276  0822               	movf	UART_Write_Text@text+1,w
  6462     1277  00A3               	movwf	??_UART_Write_Text
  6463     1278  1803               	skipnc
  6464     1279  0AA3               	incf	??_UART_Write_Text,f
  6465     127A  1FA6               	btfss	UART_Write_Text@i,7
  6466     127B  2A7D               	goto	u4820
  6467     127C  03A3               	decf	??_UART_Write_Text,f
  6468     127D                     u4820:
  6469     127D  1283               	bcf	3,5	;RP0=0, select bank0
  6470     127E  1303               	bcf	3,6	;RP1=0, select bank0
  6471     127F  0823               	movf	??_UART_Write_Text,w
  6472     1280  00A5               	movwf	??_UART_Write_Text+2
  6473     1281  0825               	movf	??_UART_Write_Text+2,w
  6474     1282  00FF               	movwf	btemp+1
  6475     1283  0824               	movf	??_UART_Write_Text+1,w
  6476     1284  0084               	movwf	4
  6477     1285  160A  118A  2000  160A  118A  	fcall	stringtab
  6478     128A  3A00               	xorlw	0
  6479     128B  1D03               	skipz
  6480     128C  2A8E               	goto	u4831
  6481     128D  2A8F               	goto	u4830
  6482     128E                     u4831:
  6483     128E  2A4F               	goto	l3625
  6484     128F                     u4830:
  6485     128F                     l25:
  6486     128F  0008               	return
  6487     1290                     __end_of_UART_Write_Text:
  6488                           
  6489                           	psect	text21
  6490     1F77                     __ptext21:	
  6491 ;; *************** function _UART_Write *****************
  6492 ;; Defined at:
  6493 ;;		line 12 in file "uart_lib.c"
  6494 ;; Parameters:    Size  Location     Type
  6495 ;;  data            1    wreg     unsigned char 
  6496 ;; Auto vars:     Size  Location     Type
  6497 ;;  data            1    0[BANK0 ] unsigned char 
  6498 ;; Return value:  Size  Location     Type
  6499 ;;                  1    wreg      void 
  6500 ;; Registers used:
  6501 ;;		wreg
  6502 ;; Tracked objects:
  6503 ;;		On entry : 0/0
  6504 ;;		On exit  : 0/0
  6505 ;;		Unchanged: 0/0
  6506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6507 ;;      Params:         0       0       0       0       0
  6508 ;;      Locals:         0       1       0       0       0
  6509 ;;      Temps:          0       0       0       0       0
  6510 ;;      Totals:         0       1       0       0       0
  6511 ;;Total ram usage:        1 bytes
  6512 ;; Hardware stack levels used: 1
  6513 ;; Hardware stack levels required when called: 2
  6514 ;; This function calls:
  6515 ;;		Nothing
  6516 ;; This function is called by:
  6517 ;;		_UART_Write_Text
  6518 ;; This function uses a non-reentrant model
  6519 ;;
  6520                           
  6521     1F77                     _UART_Write:	
  6522                           ;psect for function _UART_Write
  6523                           
  6524                           
  6525                           ;incstack = 0
  6526                           ; Regs used in _UART_Write: [wreg]
  6527                           ;UART_Write@data stored from wreg
  6528     1F77  1283               	bcf	3,5	;RP0=0, select bank0
  6529     1F78  1303               	bcf	3,6	;RP1=0, select bank0
  6530     1F79  00A0               	movwf	UART_Write@data
  6531     1F7A                     l3511:
  6532     1F7A                     l16:	
  6533                           ;uart_lib.c: 12: void UART_Write(char data);uart_lib.c: 13: {;uart_lib.c: 14:   while(!T
      +                          RMT);
  6534                           
  6535     1F7A  1683               	bsf	3,5	;RP0=1, select bank1
  6536     1F7B  1303               	bcf	3,6	;RP1=0, select bank1
  6537     1F7C  1C98               	btfss	24,1	;volatile
  6538     1F7D  2F7F               	goto	u4541
  6539     1F7E  2F80               	goto	u4540
  6540     1F7F                     u4541:
  6541     1F7F  2F7A               	goto	l16
  6542     1F80                     u4540:
  6543     1F80                     l3513:
  6544                           
  6545                           ;uart_lib.c: 15:   TXREG = data;
  6546     1F80  1283               	bcf	3,5	;RP0=0, select bank0
  6547     1F81  1303               	bcf	3,6	;RP1=0, select bank0
  6548     1F82  0820               	movf	UART_Write@data,w
  6549     1F83  0099               	movwf	25	;volatile
  6550     1F84                     l19:
  6551     1F84  0008               	return
  6552     1F85                     __end_of_UART_Write:
  6553                           
  6554                           	psect	text22
  6555     1175                     __ptext22:	
  6556 ;; *************** function _UART_Initialize *****************
  6557 ;; Defined at:
  6558 ;;		line 4 in file "uart_lib.c"
  6559 ;; Parameters:    Size  Location     Type
  6560 ;;		None
  6561 ;; Auto vars:     Size  Location     Type
  6562 ;;		None
  6563 ;; Return value:  Size  Location     Type
  6564 ;;                  1    wreg      void 
  6565 ;; Registers used:
  6566 ;;		wreg, status,2
  6567 ;; Tracked objects:
  6568 ;;		On entry : 0/0
  6569 ;;		On exit  : 0/0
  6570 ;;		Unchanged: 0/0
  6571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6572 ;;      Params:         0       0       0       0       0
  6573 ;;      Locals:         0       0       0       0       0
  6574 ;;      Temps:          0       0       0       0       0
  6575 ;;      Totals:         0       0       0       0       0
  6576 ;;Total ram usage:        0 bytes
  6577 ;; Hardware stack levels used: 1
  6578 ;; Hardware stack levels required when called: 2
  6579 ;; This function calls:
  6580 ;;		Nothing
  6581 ;; This function is called by:
  6582 ;;		_main
  6583 ;; This function uses a non-reentrant model
  6584 ;;
  6585                           
  6586     1175                     _UART_Initialize:	
  6587                           ;psect for function _UART_Initialize
  6588                           
  6589     1175                     l3619:	
  6590                           ;incstack = 0
  6591                           ; Regs used in _UART_Initialize: [wreg+status,2]
  6592                           
  6593                           
  6594                           ;uart_lib.c: 6:     TXSTA=0b00100100;
  6595     1175  3024               	movlw	36
  6596     1176  1683               	bsf	3,5	;RP0=1, select bank1
  6597     1177  1303               	bcf	3,6	;RP1=0, select bank1
  6598     1178  0098               	movwf	24	;volatile
  6599                           
  6600                           ;uart_lib.c: 7:     RCSTA=0b10010000;
  6601     1179  3090               	movlw	144
  6602     117A  1283               	bcf	3,5	;RP0=0, select bank0
  6603     117B  1303               	bcf	3,6	;RP1=0, select bank0
  6604     117C  0098               	movwf	24	;volatile
  6605                           
  6606                           ;uart_lib.c: 8:     SPBRG=12;
  6607     117D  300C               	movlw	12
  6608     117E  1683               	bsf	3,5	;RP0=1, select bank1
  6609     117F  1303               	bcf	3,6	;RP1=0, select bank1
  6610     1180  0099               	movwf	25	;volatile
  6611     1181                     l3621:
  6612                           
  6613                           ;uart_lib.c: 9:     TXREG=0x00;
  6614     1181  1283               	bcf	3,5	;RP0=0, select bank0
  6615     1182  1303               	bcf	3,6	;RP1=0, select bank0
  6616     1183  0199               	clrf	25	;volatile
  6617     1184                     l13:
  6618     1184  0008               	return
  6619     1185                     __end_of_UART_Initialize:
  6620                           
  6621                           	psect	text23
  6622     13C3                     __ptext23:	
  6623 ;; *************** function _Lcd_Init *****************
  6624 ;; Defined at:
  6625 ;;		line 61 in file "./lcd.h"
  6626 ;; Parameters:    Size  Location     Type
  6627 ;;		None
  6628 ;; Auto vars:     Size  Location     Type
  6629 ;;		None
  6630 ;; Return value:  Size  Location     Type
  6631 ;;                  1    wreg      void 
  6632 ;; Registers used:
  6633 ;;		wreg, status,2, status,0, pclath, cstack
  6634 ;; Tracked objects:
  6635 ;;		On entry : 0/0
  6636 ;;		On exit  : 0/0
  6637 ;;		Unchanged: 0/0
  6638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6639 ;;      Params:         0       0       0       0       0
  6640 ;;      Locals:         0       0       0       0       0
  6641 ;;      Temps:          0       2       0       0       0
  6642 ;;      Totals:         0       2       0       0       0
  6643 ;;Total ram usage:        2 bytes
  6644 ;; Hardware stack levels used: 1
  6645 ;; Hardware stack levels required when called: 4
  6646 ;; This function calls:
  6647 ;;		_Lcd_Cmd
  6648 ;;		_Lcd_Port
  6649 ;; This function is called by:
  6650 ;;		_main
  6651 ;; This function uses a non-reentrant model
  6652 ;;
  6653                           
  6654     13C3                     _Lcd_Init:	
  6655                           ;psect for function _Lcd_Init
  6656                           
  6657     13C3                     l3631:	
  6658                           ;incstack = 0
  6659                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  6660                           
  6661                           
  6662                           ;./lcd.h: 63:   Lcd_Port(0x00);
  6663     13C3  3000               	movlw	0
  6664     13C4  160A  158A  27E0  160A  118A  	fcall	_Lcd_Port
  6665     13C9                     l3633:
  6666                           
  6667                           ;./lcd.h: 64:    _delay((unsigned long)((20)*(4000000/4000.0)));
  6668     13C9  301A               	movlw	26
  6669     13CA  1283               	bcf	3,5	;RP0=0, select bank0
  6670     13CB  1303               	bcf	3,6	;RP1=0, select bank0
  6671     13CC  00A5               	movwf	??_Lcd_Init+1
  6672     13CD  30F7               	movlw	247
  6673     13CE  00A4               	movwf	??_Lcd_Init
  6674     13CF                     u5837:
  6675     13CF  0BA4               	decfsz	??_Lcd_Init,f
  6676     13D0  2BCF               	goto	u5837
  6677     13D1  0BA5               	decfsz	??_Lcd_Init+1,f
  6678     13D2  2BCF               	goto	u5837
  6679     13D3  2BD4               	nop2
  6680     13D4                     l3635:
  6681                           
  6682                           ;./lcd.h: 65:   Lcd_Cmd(0x03);
  6683     13D4  3003               	movlw	3
  6684     13D5  160A  158A  27C4  160A  118A  	fcall	_Lcd_Cmd
  6685                           
  6686                           ;./lcd.h: 66:  _delay((unsigned long)((5)*(4000000/4000.0)));
  6687     13DA  3007               	movlw	7
  6688     13DB  1283               	bcf	3,5	;RP0=0, select bank0
  6689     13DC  1303               	bcf	3,6	;RP1=0, select bank0
  6690     13DD  00A5               	movwf	??_Lcd_Init+1
  6691     13DE  307C               	movlw	124
  6692     13DF  00A4               	movwf	??_Lcd_Init
  6693     13E0                     u5847:
  6694     13E0  0BA4               	decfsz	??_Lcd_Init,f
  6695     13E1  2BE0               	goto	u5847
  6696     13E2  0BA5               	decfsz	??_Lcd_Init+1,f
  6697     13E3  2BE0               	goto	u5847
  6698     13E4  0000               	nop
  6699     13E5                     l3637:
  6700                           
  6701                           ;./lcd.h: 67:   Lcd_Cmd(0x03);
  6702     13E5  3003               	movlw	3
  6703     13E6  160A  158A  27C4  160A  118A  	fcall	_Lcd_Cmd
  6704     13EB                     l3639:
  6705                           
  6706                           ;./lcd.h: 68:  _delay((unsigned long)((11)*(4000000/4000.0)));
  6707     13EB  300F               	movlw	15
  6708     13EC  1283               	bcf	3,5	;RP0=0, select bank0
  6709     13ED  1303               	bcf	3,6	;RP1=0, select bank0
  6710     13EE  00A5               	movwf	??_Lcd_Init+1
  6711     13EF  3047               	movlw	71
  6712     13F0  00A4               	movwf	??_Lcd_Init
  6713     13F1                     u5857:
  6714     13F1  0BA4               	decfsz	??_Lcd_Init,f
  6715     13F2  2BF1               	goto	u5857
  6716     13F3  0BA5               	decfsz	??_Lcd_Init+1,f
  6717     13F4  2BF1               	goto	u5857
  6718                           
  6719                           ;./lcd.h: 69:   Lcd_Cmd(0x03);
  6720     13F5  3003               	movlw	3
  6721     13F6  160A  158A  27C4  160A  118A  	fcall	_Lcd_Cmd
  6722                           
  6723                           ;./lcd.h: 71:   Lcd_Cmd(0x02);
  6724     13FB  3002               	movlw	2
  6725     13FC  160A  158A  27C4  160A  118A  	fcall	_Lcd_Cmd
  6726                           
  6727                           ;./lcd.h: 72:   Lcd_Cmd(0x02);
  6728     1401  3002               	movlw	2
  6729     1402  160A  158A  27C4  160A  118A  	fcall	_Lcd_Cmd
  6730                           
  6731                           ;./lcd.h: 73:   Lcd_Cmd(0x08);
  6732     1407  3008               	movlw	8
  6733     1408  160A  158A  27C4  160A  118A  	fcall	_Lcd_Cmd
  6734                           
  6735                           ;./lcd.h: 74:   Lcd_Cmd(0x00);
  6736     140D  3000               	movlw	0
  6737     140E  160A  158A  27C4  160A  118A  	fcall	_Lcd_Cmd
  6738                           
  6739                           ;./lcd.h: 75:   Lcd_Cmd(0x0C);
  6740     1413  300C               	movlw	12
  6741     1414  160A  158A  27C4  160A  118A  	fcall	_Lcd_Cmd
  6742                           
  6743                           ;./lcd.h: 76:   Lcd_Cmd(0x00);
  6744     1419  3000               	movlw	0
  6745     141A  160A  158A  27C4  160A  118A  	fcall	_Lcd_Cmd
  6746                           
  6747                           ;./lcd.h: 77:   Lcd_Cmd(0x06);
  6748     141F  3006               	movlw	6
  6749     1420  160A  158A  27C4  160A  118A  	fcall	_Lcd_Cmd
  6750     1425                     l161:
  6751     1425  0008               	return
  6752     1426                     __end_of_Lcd_Init:
  6753                           
  6754                           	psect	text24
  6755     1FC4                     __ptext24:	
  6756 ;; *************** function _Lcd_Cmd *****************
  6757 ;; Defined at:
  6758 ;;		line 25 in file "./lcd.h"
  6759 ;; Parameters:    Size  Location     Type
  6760 ;;  a               1    wreg     unsigned char 
  6761 ;; Auto vars:     Size  Location     Type
  6762 ;;  a               1    3[BANK0 ] unsigned char 
  6763 ;; Return value:  Size  Location     Type
  6764 ;;                  1    wreg      void 
  6765 ;; Registers used:
  6766 ;;		wreg, status,2, status,0, pclath, cstack
  6767 ;; Tracked objects:
  6768 ;;		On entry : 0/0
  6769 ;;		On exit  : 0/0
  6770 ;;		Unchanged: 0/0
  6771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6772 ;;      Params:         0       0       0       0       0
  6773 ;;      Locals:         0       1       0       0       0
  6774 ;;      Temps:          0       2       0       0       0
  6775 ;;      Totals:         0       3       0       0       0
  6776 ;;Total ram usage:        3 bytes
  6777 ;; Hardware stack levels used: 1
  6778 ;; Hardware stack levels required when called: 3
  6779 ;; This function calls:
  6780 ;;		_Lcd_Port
  6781 ;; This function is called by:
  6782 ;;		_Lcd_Clear
  6783 ;;		_Lcd_Set_Cursor
  6784 ;;		_Lcd_Init
  6785 ;; This function uses a non-reentrant model
  6786 ;;
  6787                           
  6788     1FC4                     _Lcd_Cmd:	
  6789                           ;psect for function _Lcd_Cmd
  6790                           
  6791                           
  6792                           ;incstack = 0
  6793                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  6794                           ;Lcd_Cmd@a stored from wreg
  6795     1FC4  1283               	bcf	3,5	;RP0=0, select bank0
  6796     1FC5  1303               	bcf	3,6	;RP1=0, select bank0
  6797     1FC6  00A3               	movwf	Lcd_Cmd@a
  6798     1FC7                     l3481:
  6799                           
  6800                           ;./lcd.h: 25: void Lcd_Cmd(char a);./lcd.h: 26: {;./lcd.h: 27:  RB5 = 0;
  6801     1FC7  1286               	bcf	6,5	;volatile
  6802     1FC8                     l3483:
  6803                           
  6804                           ;./lcd.h: 28:  Lcd_Port(a);
  6805     1FC8  0823               	movf	Lcd_Cmd@a,w
  6806     1FC9  160A  158A  27E0  160A  158A  	fcall	_Lcd_Port
  6807     1FCE                     l3485:
  6808                           
  6809                           ;./lcd.h: 29:  RB4 = 1;
  6810     1FCE  1283               	bcf	3,5	;RP0=0, select bank0
  6811     1FCF  1303               	bcf	3,6	;RP1=0, select bank0
  6812     1FD0  1606               	bsf	6,4	;volatile
  6813     1FD1                     l3487:
  6814                           
  6815                           ;./lcd.h: 30:         _delay((unsigned long)((4)*(4000000/4000.0)));
  6816     1FD1  3006               	movlw	6
  6817     1FD2  1283               	bcf	3,5	;RP0=0, select bank0
  6818     1FD3  1303               	bcf	3,6	;RP1=0, select bank0
  6819     1FD4  00A2               	movwf	??_Lcd_Cmd+1
  6820     1FD5  302F               	movlw	47
  6821     1FD6  00A1               	movwf	??_Lcd_Cmd
  6822     1FD7                     u5867:
  6823     1FD7  0BA1               	decfsz	??_Lcd_Cmd,f
  6824     1FD8  2FD7               	goto	u5867
  6825     1FD9  0BA2               	decfsz	??_Lcd_Cmd+1,f
  6826     1FDA  2FD7               	goto	u5867
  6827     1FDB  2FDC               	nop2
  6828     1FDC                     l3489:
  6829                           
  6830                           ;./lcd.h: 31:         RB4 = 0;
  6831     1FDC  1283               	bcf	3,5	;RP0=0, select bank0
  6832     1FDD  1303               	bcf	3,6	;RP1=0, select bank0
  6833     1FDE  1206               	bcf	6,4	;volatile
  6834     1FDF                     l149:
  6835     1FDF  0008               	return
  6836     1FE0                     __end_of_Lcd_Cmd:
  6837                           
  6838                           	psect	text25
  6839     1FE0                     __ptext25:	
  6840 ;; *************** function _Lcd_Port *****************
  6841 ;; Defined at:
  6842 ;;		line 3 in file "./lcd.h"
  6843 ;; Parameters:    Size  Location     Type
  6844 ;;  a               1    wreg     unsigned char 
  6845 ;; Auto vars:     Size  Location     Type
  6846 ;;  a               1    0[BANK0 ] unsigned char 
  6847 ;; Return value:  Size  Location     Type
  6848 ;;                  1    wreg      void 
  6849 ;; Registers used:
  6850 ;;		wreg
  6851 ;; Tracked objects:
  6852 ;;		On entry : 0/0
  6853 ;;		On exit  : 0/0
  6854 ;;		Unchanged: 0/0
  6855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6856 ;;      Params:         0       0       0       0       0
  6857 ;;      Locals:         0       1       0       0       0
  6858 ;;      Temps:          0       0       0       0       0
  6859 ;;      Totals:         0       1       0       0       0
  6860 ;;Total ram usage:        1 bytes
  6861 ;; Hardware stack levels used: 1
  6862 ;; Hardware stack levels required when called: 2
  6863 ;; This function calls:
  6864 ;;		Nothing
  6865 ;; This function is called by:
  6866 ;;		_Lcd_Cmd
  6867 ;;		_Lcd_Init
  6868 ;;		_Lcd_Write_Char
  6869 ;; This function uses a non-reentrant model
  6870 ;;
  6871                           
  6872     1FE0                     _Lcd_Port:	
  6873                           ;psect for function _Lcd_Port
  6874                           
  6875                           
  6876                           ;incstack = 0
  6877                           ; Regs used in _Lcd_Port: [wreg]
  6878                           ;Lcd_Port@a stored from wreg
  6879     1FE0  1283               	bcf	3,5	;RP0=0, select bank0
  6880     1FE1  1303               	bcf	3,6	;RP1=0, select bank0
  6881     1FE2  00A0               	movwf	Lcd_Port@a
  6882     1FE3                     l3471:
  6883                           
  6884                           ;./lcd.h: 3: void Lcd_Port(char a);./lcd.h: 4: {;./lcd.h: 5:  if(a & 1)
  6885     1FE3  1C20               	btfss	Lcd_Port@a,0
  6886     1FE4  2FE6               	goto	u4491
  6887     1FE5  2FE7               	goto	u4490
  6888     1FE6                     u4491:
  6889     1FE6  2FE9               	goto	l138
  6890     1FE7                     u4490:
  6891     1FE7                     l3473:
  6892                           
  6893                           ;./lcd.h: 6:   RB3 = 1;
  6894     1FE7  1586               	bsf	6,3	;volatile
  6895     1FE8  2FEA               	goto	l139
  6896     1FE9                     l138:	
  6897                           ;./lcd.h: 7:  else
  6898                           
  6899                           
  6900                           ;./lcd.h: 8:   RB3 = 0;
  6901     1FE9  1186               	bcf	6,3	;volatile
  6902     1FEA                     l139:
  6903                           
  6904                           ;./lcd.h: 10:  if(a & 2)
  6905     1FEA  1CA0               	btfss	Lcd_Port@a,1
  6906     1FEB  2FED               	goto	u4501
  6907     1FEC  2FEE               	goto	u4500
  6908     1FED                     u4501:
  6909     1FED  2FF0               	goto	l140
  6910     1FEE                     u4500:
  6911     1FEE                     l3475:
  6912                           
  6913                           ;./lcd.h: 11:   RB2 = 1;
  6914     1FEE  1506               	bsf	6,2	;volatile
  6915     1FEF  2FF1               	goto	l141
  6916     1FF0                     l140:	
  6917                           ;./lcd.h: 12:  else
  6918                           
  6919                           
  6920                           ;./lcd.h: 13:   RB2 = 0;
  6921     1FF0  1106               	bcf	6,2	;volatile
  6922     1FF1                     l141:
  6923                           
  6924                           ;./lcd.h: 15:  if(a & 4)
  6925     1FF1  1D20               	btfss	Lcd_Port@a,2
  6926     1FF2  2FF4               	goto	u4511
  6927     1FF3  2FF5               	goto	u4510
  6928     1FF4                     u4511:
  6929     1FF4  2FF7               	goto	l142
  6930     1FF5                     u4510:
  6931     1FF5                     l3477:
  6932                           
  6933                           ;./lcd.h: 16:   RB1 = 1;
  6934     1FF5  1486               	bsf	6,1	;volatile
  6935     1FF6  2FF8               	goto	l143
  6936     1FF7                     l142:	
  6937                           ;./lcd.h: 17:  else
  6938                           
  6939                           
  6940                           ;./lcd.h: 18:   RB1 = 0;
  6941     1FF7  1086               	bcf	6,1	;volatile
  6942     1FF8                     l143:
  6943                           
  6944                           ;./lcd.h: 20:  if(a & 8)
  6945     1FF8  1DA0               	btfss	Lcd_Port@a,3
  6946     1FF9  2FFB               	goto	u4521
  6947     1FFA  2FFC               	goto	u4520
  6948     1FFB                     u4521:
  6949     1FFB  2FFE               	goto	l144
  6950     1FFC                     u4520:
  6951     1FFC                     l3479:
  6952                           
  6953                           ;./lcd.h: 21:   RB0 = 1;
  6954     1FFC  1406               	bsf	6,0	;volatile
  6955     1FFD  2FFF               	goto	l146
  6956     1FFE                     l144:	
  6957                           ;./lcd.h: 22:  else
  6958                           
  6959                           
  6960                           ;./lcd.h: 23:   RB0 = 0;
  6961     1FFE  1006               	bcf	6,0	;volatile
  6962     1FFF                     l146:
  6963     1FFF  0008               	return
  6964     2000                     __end_of_Lcd_Port:
  6965                           
  6966                           	psect	text26
  6967     14F6                     __ptext26:	
  6968 ;; *************** function _timer_isr *****************
  6969 ;; Defined at:
  6970 ;;		line 92 in file "main1.c"
  6971 ;; Parameters:    Size  Location     Type
  6972 ;;		None
  6973 ;; Auto vars:     Size  Location     Type
  6974 ;;		None
  6975 ;; Return value:  Size  Location     Type
  6976 ;;                  1    wreg      void 
  6977 ;; Registers used:
  6978 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6979 ;; Tracked objects:
  6980 ;;		On entry : 0/0
  6981 ;;		On exit  : 0/0
  6982 ;;		Unchanged: 0/0
  6983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6984 ;;      Params:         0       0       0       0       0
  6985 ;;      Locals:         0       0       0       0       0
  6986 ;;      Temps:          3       0       0       0       0
  6987 ;;      Totals:         3       0       0       0       0
  6988 ;;Total ram usage:        3 bytes
  6989 ;; Hardware stack levels used: 1
  6990 ;; Hardware stack levels required when called: 1
  6991 ;; This function calls:
  6992 ;;		_incrementTime
  6993 ;;		i1_writeEEPROM
  6994 ;; This function is called by:
  6995 ;;		Interrupt level 1
  6996 ;; This function uses a non-reentrant model
  6997 ;;
  6998                           
  6999     14F6                     _timer_isr:	
  7000                           ;psect for function _timer_isr
  7001                           
  7002     14F6                     i1l3025:
  7003                           
  7004                           ;main1.c: 93:     if (T0IF) {
  7005     14F6  1D0B               	btfss	11,2	;volatile
  7006     14F7  2CF9               	goto	u397_21
  7007     14F8  2CFA               	goto	u397_20
  7008     14F9                     u397_21:
  7009     14F9  2D61               	goto	i1l204
  7010     14FA                     u397_20:
  7011     14FA                     i1l3027:
  7012                           
  7013                           ;main1.c: 94:         T0IF = 0;
  7014     14FA  110B               	bcf	11,2	;volatile
  7015     14FB                     i1l3029:
  7016                           
  7017                           ;main1.c: 95:         TMR0 =61;
  7018     14FB  303D               	movlw	61
  7019     14FC  1283               	bcf	3,5	;RP0=0, select bank0
  7020     14FD  1303               	bcf	3,6	;RP1=0, select bank0
  7021     14FE  0081               	movwf	1	;volatile
  7022                           
  7023                           ;main1.c: 98:         kesmeSayaci++;
  7024     14FF  3001               	movlw	1
  7025     1500  07F7               	addwf	_kesmeSayaci,f
  7026     1501  1803               	skipnc
  7027     1502  0AF8               	incf	_kesmeSayaci+1,f
  7028     1503  3000               	movlw	0
  7029     1504  07F8               	addwf	_kesmeSayaci+1,f
  7030     1505                     i1l3031:
  7031                           
  7032                           ;main1.c: 99:         if (kesmeSayaci==20){
  7033     1505  3014               	movlw	20
  7034     1506  0677               	xorwf	_kesmeSayaci,w
  7035     1507  0478               	iorwf	_kesmeSayaci+1,w
  7036     1508  1D03               	btfss	3,2
  7037     1509  2D0B               	goto	u398_21
  7038     150A  2D0C               	goto	u398_20
  7039     150B                     u398_21:
  7040     150B  2D61               	goto	i1l204
  7041     150C                     u398_20:
  7042     150C                     i1l3033:
  7043                           
  7044                           ;main1.c: 100:             kesmeSayaci = 0 ;
  7045     150C  01F7               	clrf	_kesmeSayaci
  7046     150D  01F8               	clrf	_kesmeSayaci+1
  7047     150E                     i1l3035:
  7048                           
  7049                           ;main1.c: 101:             incrementTime(&currentTime);
  7050     150E  30A8               	movlw	(low (_currentTime| (0+256)))& (0+255)
  7051     150F  160A  118A  2426  160A  118A  	fcall	_incrementTime
  7052     1514                     i1l3037:
  7053                           
  7054                           ;main1.c: 102:  eepromWRclc++;
  7055     1514  3001               	movlw	1
  7056     1515  07F9               	addwf	_eepromWRclc,f
  7057     1516  1803               	skipnc
  7058     1517  0AFA               	incf	_eepromWRclc+1,f
  7059     1518  3000               	movlw	0
  7060     1519  07FA               	addwf	_eepromWRclc+1,f
  7061     151A                     i1l3039:
  7062                           
  7063                           ;main1.c: 103:             if (eepromWRclc==360){
  7064     151A  3068               	movlw	104
  7065     151B  0679               	xorwf	_eepromWRclc,w
  7066     151C  1D03               	skipz
  7067     151D  2D22               	goto	u399_21
  7068     151E  037A               	decf	_eepromWRclc+1,w
  7069     151F  1D03               	btfss	3,2
  7070     1520  2D22               	goto	u399_21
  7071     1521  2D23               	goto	u399_20
  7072     1522                     u399_21:
  7073     1522  2D25               	goto	i1l3043
  7074     1523                     u399_20:
  7075     1523                     i1l3041:
  7076                           
  7077                           ;main1.c: 104:                 eepromWRclc=0;
  7078     1523  01F9               	clrf	_eepromWRclc
  7079     1524  01FA               	clrf	_eepromWRclc+1
  7080     1525                     i1l3043:
  7081                           
  7082                           ;main1.c: 107:         writeEEPROM(0x01, currentTime.hours);
  7083     1525  3001               	movlw	1
  7084     1526  00F0               	movwf	i1writeEEPROM@address
  7085     1527  3000               	movlw	0
  7086     1528  00F1               	movwf	i1writeEEPROM@address+1
  7087     1529  1683               	bsf	3,5	;RP0=1, select bank3
  7088     152A  1703               	bsf	3,6	;RP1=1, select bank3
  7089     152B  082B               	movf	((_currentTime+1)^(0+384)+2),w
  7090     152C  00F3               	movwf	i1writeEEPROM@data+1
  7091     152D  082A               	movf	(_currentTime^(0+384)+2),w
  7092     152E  00F2               	movwf	i1writeEEPROM@data
  7093     152F  160A  158A  27AE  160A  118A  	fcall	i1_writeEEPROM
  7094     1534                     i1l3045:
  7095                           
  7096                           ;main1.c: 108:         writeEEPROM(0x02, currentTime.minutes);
  7097     1534  3002               	movlw	2
  7098     1535  00F0               	movwf	i1writeEEPROM@address
  7099     1536  3000               	movlw	0
  7100     1537  00F1               	movwf	i1writeEEPROM@address+1
  7101     1538  1683               	bsf	3,5	;RP0=1, select bank3
  7102     1539  1703               	bsf	3,6	;RP1=1, select bank3
  7103     153A  082D               	movf	((_currentTime+1)^(0+384)+4),w
  7104     153B  00F3               	movwf	i1writeEEPROM@data+1
  7105     153C  082C               	movf	(_currentTime^(0+384)+4),w
  7106     153D  00F2               	movwf	i1writeEEPROM@data
  7107     153E  160A  158A  27AE  160A  118A  	fcall	i1_writeEEPROM
  7108     1543                     i1l3047:
  7109                           
  7110                           ;main1.c: 109:         writeEEPROM(0x03, currentTime.seconds);
  7111     1543  3003               	movlw	3
  7112     1544  00F0               	movwf	i1writeEEPROM@address
  7113     1545  3000               	movlw	0
  7114     1546  00F1               	movwf	i1writeEEPROM@address+1
  7115     1547  1683               	bsf	3,5	;RP0=1, select bank3
  7116     1548  1703               	bsf	3,6	;RP1=1, select bank3
  7117     1549  082F               	movf	((_currentTime+1)^(0+384)+6),w
  7118     154A  00F3               	movwf	i1writeEEPROM@data+1
  7119     154B  082E               	movf	(_currentTime^(0+384)+6),w
  7120     154C  00F2               	movwf	i1writeEEPROM@data
  7121     154D  160A  158A  27AE  160A  118A  	fcall	i1_writeEEPROM
  7122     1552                     i1l3049:
  7123                           
  7124                           ;main1.c: 110:         writeEEPROM(0x04, currentTime.carpan);
  7125     1552  3004               	movlw	4
  7126     1553  00F0               	movwf	i1writeEEPROM@address
  7127     1554  3000               	movlw	0
  7128     1555  00F1               	movwf	i1writeEEPROM@address+1
  7129     1556  1683               	bsf	3,5	;RP0=1, select bank3
  7130     1557  1703               	bsf	3,6	;RP1=1, select bank3
  7131     1558  0829               	movf	(_currentTime+1)^(0+384),w
  7132     1559  00F3               	movwf	i1writeEEPROM@data+1
  7133     155A  0828               	movf	_currentTime^(0+384),w
  7134     155B  00F2               	movwf	i1writeEEPROM@data
  7135     155C  160A  158A  27AE  160A  118A  	fcall	i1_writeEEPROM
  7136     1561                     i1l204:
  7137     1561  0876               	movf	??_timer_isr+2,w
  7138     1562  008A               	movwf	10
  7139     1563  0875               	movf	??_timer_isr+1,w
  7140     1564  0084               	movwf	4
  7141     1565  0E74               	swapf	??_timer_isr,w
  7142     1566  0083               	movwf	3
  7143     1567  0EFE               	swapf	btemp,f
  7144     1568  0E7E               	swapf	btemp,w
  7145     1569  0009               	retfie
  7146     156A                     __end_of_timer_isr:
  7147                           
  7148                           	psect	intentry
  7149     0004                     __pintentry:	
  7150                           ;incstack = 0
  7151                           ; Regs used in _timer_isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7152                           
  7153     0004                     interrupt_function:
  7154     007E                     saved_w	set	btemp
  7155     0004  00FE               	movwf	btemp
  7156     0005  0E03               	swapf	3,w
  7157     0006  00F4               	movwf	??_timer_isr
  7158     0007  0804               	movf	4,w
  7159     0008  00F5               	movwf	??_timer_isr+1
  7160     0009  080A               	movf	10,w
  7161     000A  00F6               	movwf	??_timer_isr+2
  7162     000B  160A  118A  2CF6   	ljmp	_timer_isr
  7163                           
  7164                           	psect	text27
  7165     1FAE                     __ptext27:	
  7166 ;; *************** function i1_writeEEPROM *****************
  7167 ;; Defined at:
  7168 ;;		line 51 in file "main1.c"
  7169 ;; Parameters:    Size  Location     Type
  7170 ;;  address         2    0[COMMON] unsigned int 
  7171 ;;  data            2    2[COMMON] unsigned int 
  7172 ;; Auto vars:     Size  Location     Type
  7173 ;;		None
  7174 ;; Return value:  Size  Location     Type
  7175 ;;                  1    wreg      void 
  7176 ;; Registers used:
  7177 ;;		wreg
  7178 ;; Tracked objects:
  7179 ;;		On entry : 0/0
  7180 ;;		On exit  : 0/0
  7181 ;;		Unchanged: 0/0
  7182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7183 ;;      Params:         4       0       0       0       0
  7184 ;;      Locals:         0       0       0       0       0
  7185 ;;      Temps:          0       0       0       0       0
  7186 ;;      Totals:         4       0       0       0       0
  7187 ;;Total ram usage:        4 bytes
  7188 ;; Hardware stack levels used: 1
  7189 ;; This function calls:
  7190 ;;		Nothing
  7191 ;; This function is called by:
  7192 ;;		_timer_isr
  7193 ;; This function uses a non-reentrant model
  7194 ;;
  7195                           
  7196     1FAE                     i1_writeEEPROM:	
  7197                           ;psect for function i1_writeEEPROM
  7198                           
  7199     1FAE                     i1l3013:	
  7200                           ;incstack = 0
  7201                           ; Regs used in i1_writeEEPROM: [wreg]
  7202                           
  7203                           
  7204                           ;main1.c: 53:     EEADR = address;
  7205     1FAE  0870               	movf	i1writeEEPROM@address,w
  7206     1FAF  1283               	bcf	3,5	;RP0=0, select bank2
  7207     1FB0  1703               	bsf	3,6	;RP1=1, select bank2
  7208     1FB1  008D               	movwf	13	;volatile
  7209                           
  7210                           ;main1.c: 54:     EEDATA = data;
  7211     1FB2  0872               	movf	i1writeEEPROM@data,w
  7212     1FB3  008C               	movwf	12	;volatile
  7213     1FB4                     i1l3015:
  7214                           
  7215                           ;main1.c: 55:     WREN = 1;
  7216     1FB4  1683               	bsf	3,5	;RP0=1, select bank3
  7217     1FB5  1703               	bsf	3,6	;RP1=1, select bank3
  7218     1FB6  150C               	bsf	12,2	;volsfr
  7219     1FB7                     i1l3017:
  7220                           
  7221                           ;main1.c: 56:     GIE = 0;
  7222     1FB7  138B               	bcf	11,7	;volatile
  7223                           
  7224                           ;main1.c: 57:     EECON2 = 0x55;
  7225     1FB8  3055               	movlw	85
  7226     1FB9  008D               	movwf	13	;volsfr
  7227                           
  7228                           ;main1.c: 58:     EECON2 = 0xAA;
  7229     1FBA  30AA               	movlw	170
  7230     1FBB  008D               	movwf	13	;volsfr
  7231     1FBC                     i1l3019:
  7232                           
  7233                           ;main1.c: 59:     WR = 1;
  7234     1FBC  148C               	bsf	12,1	;volsfr
  7235     1FBD                     i1l3021:
  7236                           
  7237                           ;main1.c: 60:     GIE = 1;
  7238     1FBD  178B               	bsf	11,7	;volatile
  7239     1FBE                     i1l3023:
  7240                           
  7241                           ;main1.c: 61:     WREN = 0;
  7242     1FBE  110C               	bcf	12,2	;volsfr
  7243     1FBF                     i1l184:	
  7244                           ;main1.c: 62:     while (WR == 1);
  7245                           
  7246     1FBF  188C               	btfsc	12,1	;volsfr
  7247     1FC0  2FC2               	goto	u396_21
  7248     1FC1  2FC3               	goto	u396_20
  7249     1FC2                     u396_21:
  7250     1FC2  2FBF               	goto	i1l184
  7251     1FC3                     u396_20:
  7252     1FC3                     i1l187:
  7253     1FC3  0008               	return
  7254     1FC4                     __end_ofi1_writeEEPROM:
  7255                           
  7256                           	psect	text28
  7257     1426                     __ptext28:	
  7258 ;; *************** function _incrementTime *****************
  7259 ;; Defined at:
  7260 ;;		line 72 in file "main1.c"
  7261 ;; Parameters:    Size  Location     Type
  7262 ;;  time            1    wreg     PTR struct Time
  7263 ;;		 -> currentTime(8), 
  7264 ;; Auto vars:     Size  Location     Type
  7265 ;;  time            1    2[COMMON] PTR struct Time
  7266 ;;		 -> currentTime(8), 
  7267 ;; Return value:  Size  Location     Type
  7268 ;;                  1    wreg      void 
  7269 ;; Registers used:
  7270 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7271 ;; Tracked objects:
  7272 ;;		On entry : 0/0
  7273 ;;		On exit  : 0/0
  7274 ;;		Unchanged: 0/0
  7275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7276 ;;      Params:         0       0       0       0       0
  7277 ;;      Locals:         1       0       0       0       0
  7278 ;;      Temps:          2       0       0       0       0
  7279 ;;      Totals:         3       0       0       0       0
  7280 ;;Total ram usage:        3 bytes
  7281 ;; Hardware stack levels used: 1
  7282 ;; This function calls:
  7283 ;;		Nothing
  7284 ;; This function is called by:
  7285 ;;		_timer_isr
  7286 ;; This function uses a non-reentrant model
  7287 ;;
  7288                           
  7289     1426                     _incrementTime:	
  7290                           ;psect for function _incrementTime
  7291                           
  7292                           
  7293                           ;incstack = 0
  7294                           ; Regs used in _incrementTime: [wreg-fsr0h+status,2+status,0]
  7295                           ;incrementTime@time stored from wreg
  7296     1426  00F2               	movwf	incrementTime@time
  7297     1427                     i1l2425:
  7298                           
  7299                           ;main1.c: 73:     time->seconds++;
  7300     1427  0872               	movf	incrementTime@time,w
  7301     1428  3E06               	addlw	6
  7302     1429  0084               	movwf	4
  7303     142A  3001               	movlw	1
  7304     142B  1783               	bsf	3,7	;select IRP bank2
  7305     142C  0780               	addwf	0,f
  7306     142D  0A84               	incf	4,f
  7307     142E  1803               	skipnc
  7308     142F  0A80               	incf	0,f
  7309                           
  7310                           ;main1.c: 74:     if (time->seconds >= 60) {
  7311     1430  0872               	movf	incrementTime@time,w
  7312     1431  3E06               	addlw	6
  7313     1432  0084               	movwf	4
  7314     1433  0800               	movf	0,w
  7315     1434  00F0               	movwf	??_incrementTime
  7316     1435  0A84               	incf	4,f
  7317     1436  0800               	movf	0,w
  7318     1437  00F1               	movwf	??_incrementTime+1
  7319     1438  3000               	movlw	0
  7320     1439  0271               	subwf	??_incrementTime+1,w
  7321     143A  303C               	movlw	60
  7322     143B  1903               	skipnz
  7323     143C  0270               	subwf	??_incrementTime,w
  7324     143D  1C03               	skipc
  7325     143E  2C40               	goto	u265_21
  7326     143F  2C41               	goto	u265_20
  7327     1440                     u265_21:
  7328     1440  2C8C               	goto	i1l196
  7329     1441                     u265_20:
  7330     1441                     i1l2427:
  7331                           
  7332                           ;main1.c: 75:         time->seconds = 0;
  7333     1441  0872               	movf	incrementTime@time,w
  7334     1442  3E06               	addlw	6
  7335     1443  0084               	movwf	4
  7336     1444  0180               	clrf	0
  7337     1445  0A84               	incf	4,f
  7338     1446  0180               	clrf	0
  7339                           
  7340                           ;main1.c: 77:         time->minutes++;
  7341     1447  0872               	movf	incrementTime@time,w
  7342     1448  3E04               	addlw	4
  7343     1449  0084               	movwf	4
  7344     144A  3001               	movlw	1
  7345     144B  0780               	addwf	0,f
  7346     144C  0A84               	incf	4,f
  7347     144D  1803               	skipnc
  7348     144E  0A80               	incf	0,f
  7349                           
  7350                           ;main1.c: 78:         if (time->minutes >= 60) {
  7351     144F  0872               	movf	incrementTime@time,w
  7352     1450  3E04               	addlw	4
  7353     1451  0084               	movwf	4
  7354     1452  0800               	movf	0,w
  7355     1453  00F0               	movwf	??_incrementTime
  7356     1454  0A84               	incf	4,f
  7357     1455  0800               	movf	0,w
  7358     1456  00F1               	movwf	??_incrementTime+1
  7359     1457  3000               	movlw	0
  7360     1458  0271               	subwf	??_incrementTime+1,w
  7361     1459  303C               	movlw	60
  7362     145A  1903               	skipnz
  7363     145B  0270               	subwf	??_incrementTime,w
  7364     145C  1C03               	skipc
  7365     145D  2C5F               	goto	u266_21
  7366     145E  2C60               	goto	u266_20
  7367     145F                     u266_21:
  7368     145F  2C8C               	goto	i1l196
  7369     1460                     u266_20:
  7370     1460                     i1l2429:
  7371                           
  7372                           ;main1.c: 79:             time->minutes = 0;
  7373     1460  0872               	movf	incrementTime@time,w
  7374     1461  3E04               	addlw	4
  7375     1462  0084               	movwf	4
  7376     1463  0180               	clrf	0
  7377     1464  0A84               	incf	4,f
  7378     1465  0180               	clrf	0
  7379                           
  7380                           ;main1.c: 81:             time->hours++;
  7381     1466  0872               	movf	incrementTime@time,w
  7382     1467  3E02               	addlw	2
  7383     1468  0084               	movwf	4
  7384     1469  3001               	movlw	1
  7385     146A  0780               	addwf	0,f
  7386     146B  0A84               	incf	4,f
  7387     146C  1803               	skipnc
  7388     146D  0A80               	incf	0,f
  7389                           
  7390                           ;main1.c: 82:             if (time-> hours >= 250){
  7391     146E  0872               	movf	incrementTime@time,w
  7392     146F  3E02               	addlw	2
  7393     1470  0084               	movwf	4
  7394     1471  0800               	movf	0,w
  7395     1472  00F0               	movwf	??_incrementTime
  7396     1473  0A84               	incf	4,f
  7397     1474  0800               	movf	0,w
  7398     1475  00F1               	movwf	??_incrementTime+1
  7399     1476  3000               	movlw	0
  7400     1477  0271               	subwf	??_incrementTime+1,w
  7401     1478  30FA               	movlw	250
  7402     1479  1903               	skipnz
  7403     147A  0270               	subwf	??_incrementTime,w
  7404     147B  1C03               	skipc
  7405     147C  2C7E               	goto	u267_21
  7406     147D  2C7F               	goto	u267_20
  7407     147E                     u267_21:
  7408     147E  2C8C               	goto	i1l196
  7409     147F                     u267_20:
  7410     147F                     i1l2431:
  7411                           
  7412                           ;main1.c: 83:                 time-> hours = 0;
  7413     147F  0872               	movf	incrementTime@time,w
  7414     1480  3E02               	addlw	2
  7415     1481  0084               	movwf	4
  7416     1482  0180               	clrf	0
  7417     1483  0A84               	incf	4,f
  7418     1484  0180               	clrf	0
  7419                           
  7420                           ;main1.c: 84:                 time->carpan++;
  7421     1485  0872               	movf	incrementTime@time,w
  7422     1486  0084               	movwf	4
  7423     1487  3001               	movlw	1
  7424     1488  0780               	addwf	0,f
  7425     1489  0A84               	incf	4,f
  7426     148A  1803               	skipnc
  7427     148B  0A80               	incf	0,f
  7428     148C                     i1l196:
  7429     148C  0008               	return
  7430     148D                     __end_of_incrementTime:
  7431     007E                     btemp	set	126	;btemp
  7432     007E                     wtemp0	set	126
  7433                           
  7434                           	psect	config
  7435                           
  7436                           ;Config register CONFIG @ 0x2007
  7437                           ;	Oscillator Selection bits
  7438                           ;	FOSC = XT, XT oscillator
  7439                           ;	Watchdog Timer Enable bit
  7440                           ;	WDTE = OFF, WDT disabled
  7441                           ;	Power-up Timer Enable bit
  7442                           ;	PWRTE = OFF, PWRT disabled
  7443                           ;	Brown-out Reset Enable bit
  7444                           ;	BOREN = ON, BOR enabled
  7445                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  7446                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  7447                           ;	Data EEPROM Memory Code Protection bit
  7448                           ;	CPD = OFF, Data EEPROM code protection off
  7449                           ;	Flash Program Memory Write Enable bits
  7450                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  7451                           ;	In-Circuit Debugger Mode bit
  7452                           ;	DEBUG = 0x1, unprogrammed default
  7453                           ;	Flash Program Memory Code Protection bit
  7454                           ;	CP = OFF, Code protection off
  7455     2007                     	org	8199
  7456     2007  3F79               	dw	16249
  7457                           
  7458                           	psect	maintext_split_1
  7459     0BE5                     u5250:
  7460     0BE5                     l4015:
  7461                           
  7462                           ;main1.c: 231: if (ilkAcilis) {
  7463     0BE5  1683               	bsf	3,5	;RP0=1, select bank3
  7464     0BE6  1703               	bsf	3,6	;RP1=1, select bank3
  7465     0BE7  0812               	movf	main@ilkAcilis^(0+384),w
  7466     0BE8  0413               	iorwf	(main@ilkAcilis+1)^(0+384),w
  7467     0BE9  1903               	btfsc	3,2
  7468     0BEA  2BEC               	goto	u5261
  7469     0BEB  2BED               	goto	u5260
  7470     0BEC                     u5261:
  7471     0BEC  2C3D               	goto	l213
  7472     0BED                     u5260:
  7473     0BED                     l4017:
  7474                           
  7475                           ;main1.c: 234:         if ( RE2 == 0 && RE0 == 0 && RC0 == 0 && RE1 == 0) {
  7476     0BED  1283               	bcf	3,5	;RP0=0, select bank0
  7477     0BEE  1303               	bcf	3,6	;RP1=0, select bank0
  7478     0BEF  1909               	btfsc	9,2	;volatile
  7479     0BF0  2BF2               	goto	u5271
  7480     0BF1  2BF3               	goto	u5270
  7481     0BF2                     u5271:
  7482     0BF2  2C04               	goto	l4027
  7483     0BF3                     u5270:
  7484     0BF3                     l4019:
  7485     0BF3  1809               	btfsc	9,0	;volatile
  7486     0BF4  2BF6               	goto	u5281
  7487     0BF5  2BF7               	goto	u5280
  7488     0BF6                     u5281:
  7489     0BF6  2C04               	goto	l4027
  7490     0BF7                     u5280:
  7491     0BF7                     l4021:
  7492     0BF7  1807               	btfsc	7,0	;volatile
  7493     0BF8  2BFA               	goto	u5291
  7494     0BF9  2BFB               	goto	u5290
  7495     0BFA                     u5291:
  7496     0BFA  2C04               	goto	l4027
  7497     0BFB                     u5290:
  7498     0BFB                     l4023:
  7499     0BFB  1889               	btfsc	9,1	;volatile
  7500     0BFC  2BFE               	goto	u5301
  7501     0BFD  2BFF               	goto	u5300
  7502     0BFE                     u5301:
  7503     0BFE  2C04               	goto	l4027
  7504     0BFF                     u5300:
  7505     0BFF                     l4025:
  7506                           
  7507                           ;main1.c: 235:             ilkAcilis = 0;
  7508     0BFF  1683               	bsf	3,5	;RP0=1, select bank3
  7509     0C00  1703               	bsf	3,6	;RP1=1, select bank3
  7510     0C01  0192               	clrf	main@ilkAcilis^(0+384)
  7511     0C02  0193               	clrf	(main@ilkAcilis+1)^(0+384)
  7512                           
  7513                           ;main1.c: 236:         } else {
  7514     0C03  2C3D               	goto	l213
  7515     0C04                     l4027:
  7516                           
  7517                           ;main1.c: 238:              Lcd_Set_Cursor(1,1);
  7518     0C04  01A4               	clrf	Lcd_Set_Cursor@b
  7519     0C05  0AA4               	incf	Lcd_Set_Cursor@b,f
  7520     0C06  3001               	movlw	1
  7521     0C07  160A  118A  231C  120A  158A  	fcall	_Lcd_Set_Cursor
  7522     0C0C                     l4029:
  7523                           
  7524                           ;main1.c: 239:     Lcd_Write_String("STOP DURUMUNA GETIR");
  7525     0C0C  3096               	movlw	low (STR_6| (0+32768))
  7526     0C0D  1283               	bcf	3,5	;RP0=0, select bank0
  7527     0C0E  1303               	bcf	3,6	;RP1=0, select bank0
  7528     0C0F  00A5               	movwf	Lcd_Write_String@a
  7529     0C10  3090               	movlw	high (STR_6| (0+32768))
  7530     0C11  00A6               	movwf	Lcd_Write_String@a+1
  7531     0C12  160A  118A  22D6  120A  158A  	fcall	_Lcd_Write_String
  7532     0C17                     l4031:
  7533                           
  7534                           ;main1.c: 240:     Lcd_Set_Cursor(2,1);
  7535     0C17  1283               	bcf	3,5	;RP0=0, select bank0
  7536     0C18  1303               	bcf	3,6	;RP1=0, select bank0
  7537     0C19  01A4               	clrf	Lcd_Set_Cursor@b
  7538     0C1A  0AA4               	incf	Lcd_Set_Cursor@b,f
  7539     0C1B  3002               	movlw	2
  7540     0C1C  160A  118A  231C  120A  158A  	fcall	_Lcd_Set_Cursor
  7541                           
  7542                           ;main1.c: 241:     Lcd_Write_String("PUT IT IN STOP STATE");
  7543     0C21  3081               	movlw	low (STR_7| (0+32768))
  7544     0C22  1283               	bcf	3,5	;RP0=0, select bank0
  7545     0C23  1303               	bcf	3,6	;RP1=0, select bank0
  7546     0C24  00A5               	movwf	Lcd_Write_String@a
  7547     0C25  3090               	movlw	high (STR_7| (0+32768))
  7548     0C26  00A6               	movwf	Lcd_Write_String@a+1
  7549     0C27  160A  118A  22D6  120A  158A  	fcall	_Lcd_Write_String
  7550     0C2C                     l4033:
  7551                           
  7552                           ;main1.c: 242:     _delay((unsigned long)((500)*(4000000/4000.0)));
  7553     0C2C  3003               	movlw	3
  7554     0C2D  1283               	bcf	3,5	;RP0=0, select bank0
  7555     0C2E  1303               	bcf	3,6	;RP1=0, select bank0
  7556     0C2F  00D6               	movwf	??_main+2
  7557     0C30  308A               	movlw	138
  7558     0C31  00D5               	movwf	??_main+1
  7559     0C32  3055               	movlw	85
  7560     0C33  00D4               	movwf	??_main
  7561     0C34                     u5757:
  7562     0C34  0BD4               	decfsz	??_main,f
  7563     0C35  2C34               	goto	u5757
  7564     0C36  0BD5               	decfsz	??_main+1,f
  7565     0C37  2C34               	goto	u5757
  7566     0C38  0BD6               	decfsz	??_main+2,f
  7567     0C39  2C34               	goto	u5757
  7568     0C3A  120A  118A  2C64   	goto	l216
  7569     0C3D                     l213:	
  7570                           ;main1.c: 245:     }
  7571                           
  7572                           
  7573                           ;main1.c: 247: if( !RC3 && !RD0){
  7574     0C3D  1283               	bcf	3,5	;RP0=0, select bank0
  7575     0C3E  1303               	bcf	3,6	;RP1=0, select bank0
  7576     0C3F  1987               	btfsc	7,3	;volatile
  7577     0C40  2C42               	goto	u5311
  7578     0C41  2C45               	goto	u5310
  7579     0C42                     u5311:
  7580     0C42  120A  118A  2BCF   	goto	l217
  7581     0C45                     u5310:
  7582     0C45                     l4037:
  7583     0C45  1808               	btfsc	8,0	;volatile
  7584     0C46  2C48               	goto	u5321
  7585     0C47  2C49               	goto	u5320
  7586     0C48                     u5321:
  7587     0C48  2C42               	goto	u5311
  7588     0C49                     u5320:
  7589     0C49                     l4039:
  7590                           
  7591                           ;main1.c: 250:    int dakika = readEEPROM(0x02);
  7592     0C49  3002               	movlw	2
  7593     0C4A  00A0               	movwf	readEEPROM@address
  7594     0C4B  3000               	movlw	0
  7595     0C4C  00A1               	movwf	readEEPROM@address+1
  7596     0C4D  160A  158A  2799  120A  158A  	fcall	_readEEPROM
  7597     0C52  1283               	bcf	3,5	;RP0=0, select bank0
  7598     0C53  1303               	bcf	3,6	;RP1=0, select bank0
  7599     0C54  0821               	movf	?_readEEPROM+1,w
  7600     0C55  1683               	bsf	3,5	;RP0=1, select bank1
  7601     0C56  1303               	bcf	3,6	;RP1=0, select bank1
  7602     0C57  00E7               	movwf	(main@dakika+1)^(0+128)
  7603     0C58  1283               	bcf	3,5	;RP0=0, select bank0
  7604     0C59  1303               	bcf	3,6	;RP1=0, select bank0
  7605     0C5A  0820               	movf	?_readEEPROM,w
  7606     0C5B  1683               	bsf	3,5	;RP0=1, select bank1
  7607     0C5C  1303               	bcf	3,6	;RP1=0, select bank1
  7608     0C5D  00E6               	movwf	main@dakika^(0+128)
  7609     0C5E                     l4041:
  7610                           
  7611                           ;main1.c: 251:    int realSaat = readEEPROM(0x04)*250+readEEPROM(0x01);
  7612     0C5E  3004               	movlw	4
  7613     0C5F  1283               	bcf	3,5	;RP0=0, select bank0
  7614     0C60  1303               	bcf	3,6	;RP1=0, select bank0
  7615     0C61  00A0               	movwf	readEEPROM@address
  7616     0C62  3000               	movlw	0
  7617     0C63  00A1               	movwf	readEEPROM@address+1
  7618     0C64  160A  158A  2799  120A  158A  	fcall	_readEEPROM
  7619     0C69  1283               	bcf	3,5	;RP0=0, select bank0
  7620     0C6A  1303               	bcf	3,6	;RP1=0, select bank0
  7621     0C6B  0821               	movf	?_readEEPROM+1,w
  7622     0C6C  00A5               	movwf	___wmul@multiplier+1
  7623     0C6D  0820               	movf	?_readEEPROM,w
  7624     0C6E  00A4               	movwf	___wmul@multiplier
  7625     0C6F  30FA               	movlw	250
  7626     0C70  00A6               	movwf	___wmul@multiplicand
  7627     0C71  3000               	movlw	0
  7628     0C72  00A7               	movwf	___wmul@multiplicand+1
  7629     0C73  160A  118A  2185  120A  158A  	fcall	___wmul
  7630     0C78  1283               	bcf	3,5	;RP0=0, select bank0
  7631     0C79  1303               	bcf	3,6	;RP1=0, select bank0
  7632     0C7A  0824               	movf	?___wmul,w
  7633     0C7B  00D4               	movwf	??_main
  7634     0C7C  0825               	movf	?___wmul+1,w
  7635     0C7D  00D5               	movwf	??_main+1
  7636     0C7E  3001               	movlw	1
  7637     0C7F  00A0               	movwf	readEEPROM@address
  7638     0C80  3000               	movlw	0
  7639     0C81  00A1               	movwf	readEEPROM@address+1
  7640     0C82  160A  158A  2799  120A  158A  	fcall	_readEEPROM
  7641     0C87  1283               	bcf	3,5	;RP0=0, select bank0
  7642     0C88  1303               	bcf	3,6	;RP1=0, select bank0
  7643     0C89  0820               	movf	?_readEEPROM,w
  7644     0C8A  0754               	addwf	??_main,w
  7645     0C8B  1683               	bsf	3,5	;RP0=1, select bank3
  7646     0C8C  1703               	bsf	3,6	;RP1=1, select bank3
  7647     0C8D  00A4               	movwf	main@realSaat^(0+384)
  7648     0C8E  1283               	bcf	3,5	;RP0=0, select bank0
  7649     0C8F  1303               	bcf	3,6	;RP1=0, select bank0
  7650     0C90  0821               	movf	?_readEEPROM+1,w
  7651     0C91  1803               	skipnc
  7652     0C92  0A21               	incf	?_readEEPROM+1,w
  7653     0C93  0755               	addwf	??_main+1,w
  7654     0C94  1683               	bsf	3,5	;RP0=1, select bank3
  7655     0C95  1703               	bsf	3,6	;RP1=1, select bank3
  7656     0C96  00A5               	movwf	(main@realSaat+1)^(0+384)
  7657     0C97                     l4043:
  7658                           
  7659                           ;main1.c: 253:         sprintf(lcdText, "%5uh %02um", realSaat, dakika);
  7660     0C97  3014               	movlw	low (STR_8| (0+32768))
  7661     0C98  1283               	bcf	3,5	;RP0=0, select bank0
  7662     0C99  1303               	bcf	3,6	;RP1=0, select bank0
  7663     0C9A  00AC               	movwf	sprintf@f
  7664     0C9B  3091               	movlw	high (STR_8| (0+32768))
  7665     0C9C  00AD               	movwf	sprintf@f+1
  7666     0C9D  1683               	bsf	3,5	;RP0=1, select bank3
  7667     0C9E  1703               	bsf	3,6	;RP1=1, select bank3
  7668     0C9F  0825               	movf	(main@realSaat+1)^(0+384),w
  7669     0CA0  1283               	bcf	3,5	;RP0=0, select bank0
  7670     0CA1  1303               	bcf	3,6	;RP1=0, select bank0
  7671     0CA2  00AF               	movwf	?_sprintf+3
  7672     0CA3  1683               	bsf	3,5	;RP0=1, select bank3
  7673     0CA4  1703               	bsf	3,6	;RP1=1, select bank3
  7674     0CA5  0824               	movf	main@realSaat^(0+384),w
  7675     0CA6  1283               	bcf	3,5	;RP0=0, select bank0
  7676     0CA7  1303               	bcf	3,6	;RP1=0, select bank0
  7677     0CA8  00AE               	movwf	?_sprintf+2
  7678     0CA9  1683               	bsf	3,5	;RP0=1, select bank1
  7679     0CAA  1303               	bcf	3,6	;RP1=0, select bank1
  7680     0CAB  0867               	movf	(main@dakika+1)^(0+128),w
  7681     0CAC  1283               	bcf	3,5	;RP0=0, select bank0
  7682     0CAD  1303               	bcf	3,6	;RP1=0, select bank0
  7683     0CAE  00B1               	movwf	?_sprintf+5
  7684     0CAF  1683               	bsf	3,5	;RP0=1, select bank1
  7685     0CB0  1303               	bcf	3,6	;RP1=0, select bank1
  7686     0CB1  0866               	movf	main@dakika^(0+128),w
  7687     0CB2  1283               	bcf	3,5	;RP0=0, select bank0
  7688     0CB3  1303               	bcf	3,6	;RP1=0, select bank0
  7689     0CB4  00B0               	movwf	?_sprintf+4
  7690     0CB5  30B4               	movlw	(low (main@lcdText| 0))& (0+255)
  7691     0CB6  120A  158A  21EE  120A  158A  	fcall	_sprintf
  7692     0CBB                     l4045:
  7693                           
  7694                           ;main1.c: 256:      Lcd_Set_Cursor(1, 10);
  7695     0CBB  300A               	movlw	10
  7696     0CBC  1283               	bcf	3,5	;RP0=0, select bank0
  7697     0CBD  1303               	bcf	3,6	;RP1=0, select bank0
  7698     0CBE  00A4               	movwf	Lcd_Set_Cursor@b
  7699     0CBF  3001               	movlw	1
  7700     0CC0  160A  118A  231C  120A  158A  	fcall	_Lcd_Set_Cursor
  7701     0CC5                     l4047:
  7702                           
  7703                           ;main1.c: 257:      Lcd_Write_String("  ");
  7704     0CC5  30D9               	movlw	low ((STR_18+12)| (0+32768))
  7705     0CC6  1283               	bcf	3,5	;RP0=0, select bank0
  7706     0CC7  1303               	bcf	3,6	;RP1=0, select bank0
  7707     0CC8  00A5               	movwf	Lcd_Write_String@a
  7708     0CC9  3090               	movlw	high ((STR_18+12)| (0+32768))
  7709     0CCA  00A6               	movwf	Lcd_Write_String@a+1
  7710     0CCB  160A  118A  22D6  120A  158A  	fcall	_Lcd_Write_String
  7711     0CD0                     l4049:
  7712                           
  7713                           ;main1.c: 258:      Lcd_Set_Cursor(1, 11);
  7714     0CD0  300B               	movlw	11
  7715     0CD1  1283               	bcf	3,5	;RP0=0, select bank0
  7716     0CD2  1303               	bcf	3,6	;RP1=0, select bank0
  7717     0CD3  00A4               	movwf	Lcd_Set_Cursor@b
  7718     0CD4  3001               	movlw	1
  7719     0CD5  160A  118A  231C  120A  158A  	fcall	_Lcd_Set_Cursor
  7720     0CDA                     l4051:
  7721                           
  7722                           ;main1.c: 259:      Lcd_Write_String(lcdText);
  7723     0CDA  30B4               	movlw	(low (main@lcdText| 0))& (0+255)
  7724     0CDB  1283               	bcf	3,5	;RP0=0, select bank0
  7725     0CDC  1303               	bcf	3,6	;RP1=0, select bank0
  7726     0CDD  00A5               	movwf	Lcd_Write_String@a
  7727     0CDE  3000               	movlw	0
  7728     0CDF  00A6               	movwf	Lcd_Write_String@a+1
  7729     0CE0  160A  118A  22D6  120A  158A  	fcall	_Lcd_Write_String
  7730     0CE5                     l4053:
  7731                           
  7732                           ;main1.c: 263:     if ( ( realSaat % 500 == 0 && realSaat != 0
  7733     0CE5  30F4               	movlw	244
  7734     0CE6  1283               	bcf	3,5	;RP0=0, select bank0
  7735     0CE7  1303               	bcf	3,6	;RP1=0, select bank0
  7736     0CE8  00AA               	movwf	___awmod@divisor
  7737     0CE9  3001               	movlw	1
  7738     0CEA  00AB               	movwf	___awmod@divisor+1
  7739     0CEB  1683               	bsf	3,5	;RP0=1, select bank3
  7740     0CEC  1703               	bsf	3,6	;RP1=1, select bank3
  7741     0CED  0825               	movf	(main@realSaat+1)^(0+384),w
  7742     0CEE  1283               	bcf	3,5	;RP0=0, select bank0
  7743     0CEF  1303               	bcf	3,6	;RP1=0, select bank0
  7744     0CF0  00AD               	movwf	___awmod@dividend+1
  7745     0CF1  1683               	bsf	3,5	;RP0=1, select bank3
  7746     0CF2  1703               	bsf	3,6	;RP1=1, select bank3
  7747     0CF3  0824               	movf	main@realSaat^(0+384),w
  7748     0CF4  1283               	bcf	3,5	;RP0=0, select bank0
  7749     0CF5  1303               	bcf	3,6	;RP1=0, select bank0
  7750     0CF6  00AC               	movwf	___awmod@dividend
  7751     0CF7  160A  118A  2368  120A  158A  	fcall	___awmod
  7752     0CFC  1283               	bcf	3,5	;RP0=0, select bank0
  7753     0CFD  1303               	bcf	3,6	;RP1=0, select bank0
  7754     0CFE  082A               	movf	?___awmod,w
  7755     0CFF  042B               	iorwf	?___awmod+1,w
  7756     0D00  1D03               	btfss	3,2
  7757     0D01  2D03               	goto	u5331
  7758     0D02  2D04               	goto	u5330
  7759     0D03                     u5331:
  7760     0D03  2D0C               	goto	l4057
  7761     0D04                     u5330:
  7762     0D04                     l4055:
  7763     0D04  1683               	bsf	3,5	;RP0=1, select bank3
  7764     0D05  1703               	bsf	3,6	;RP1=1, select bank3
  7765     0D06  0824               	movf	main@realSaat^(0+384),w
  7766     0D07  0425               	iorwf	(main@realSaat+1)^(0+384),w
  7767     0D08  1D03               	btfss	3,2
  7768     0D09  2D0B               	goto	u5341
  7769     0D0A  2D0C               	goto	u5340
  7770     0D0B                     u5341:
  7771     0D0B  2D5C               	goto	l4065
  7772     0D0C                     u5340:
  7773     0D0C                     l4057:
  7774     0D0C  30F4               	movlw	244
  7775     0D0D  1283               	bcf	3,5	;RP0=0, select bank0
  7776     0D0E  1303               	bcf	3,6	;RP1=0, select bank0
  7777     0D0F  00AA               	movwf	___awmod@divisor
  7778     0D10  3001               	movlw	1
  7779     0D11  00AB               	movwf	___awmod@divisor+1
  7780     0D12  1683               	bsf	3,5	;RP0=1, select bank3
  7781     0D13  1703               	bsf	3,6	;RP1=1, select bank3
  7782     0D14  0825               	movf	(main@realSaat+1)^(0+384),w
  7783     0D15  1283               	bcf	3,5	;RP0=0, select bank0
  7784     0D16  1303               	bcf	3,6	;RP1=0, select bank0
  7785     0D17  00AD               	movwf	___awmod@dividend+1
  7786     0D18  1683               	bsf	3,5	;RP0=1, select bank3
  7787     0D19  1703               	bsf	3,6	;RP1=1, select bank3
  7788     0D1A  0824               	movf	main@realSaat^(0+384),w
  7789     0D1B  1283               	bcf	3,5	;RP0=0, select bank0
  7790     0D1C  1303               	bcf	3,6	;RP1=0, select bank0
  7791     0D1D  00AC               	movwf	___awmod@dividend
  7792     0D1E  160A  118A  2368  120A  158A  	fcall	___awmod
  7793     0D23  1283               	bcf	3,5	;RP0=0, select bank0
  7794     0D24  1303               	bcf	3,6	;RP1=0, select bank0
  7795     0D25  032A               	decf	?___awmod,w
  7796     0D26  042B               	iorwf	?___awmod+1,w
  7797     0D27  1D03               	btfss	3,2
  7798     0D28  2D2A               	goto	u5351
  7799     0D29  2D2B               	goto	u5350
  7800     0D2A                     u5351:
  7801     0D2A  2D33               	goto	l4061
  7802     0D2B                     u5350:
  7803     0D2B                     l4059:
  7804     0D2B  1683               	bsf	3,5	;RP0=1, select bank3
  7805     0D2C  1703               	bsf	3,6	;RP1=1, select bank3
  7806     0D2D  0324               	decf	main@realSaat^(0+384),w
  7807     0D2E  0425               	iorwf	(main@realSaat+1)^(0+384),w
  7808     0D2F  1D03               	btfss	3,2
  7809     0D30  2D32               	goto	u5361
  7810     0D31  2D33               	goto	u5360
  7811     0D32                     u5361:
  7812     0D32  2D5C               	goto	l4065
  7813     0D33                     u5360:
  7814     0D33                     l4061:
  7815     0D33  30F4               	movlw	244
  7816     0D34  1283               	bcf	3,5	;RP0=0, select bank0
  7817     0D35  1303               	bcf	3,6	;RP1=0, select bank0
  7818     0D36  00AA               	movwf	___awmod@divisor
  7819     0D37  3001               	movlw	1
  7820     0D38  00AB               	movwf	___awmod@divisor+1
  7821     0D39  1683               	bsf	3,5	;RP0=1, select bank3
  7822     0D3A  1703               	bsf	3,6	;RP1=1, select bank3
  7823     0D3B  0825               	movf	(main@realSaat+1)^(0+384),w
  7824     0D3C  1283               	bcf	3,5	;RP0=0, select bank0
  7825     0D3D  1303               	bcf	3,6	;RP1=0, select bank0
  7826     0D3E  00AD               	movwf	___awmod@dividend+1
  7827     0D3F  1683               	bsf	3,5	;RP0=1, select bank3
  7828     0D40  1703               	bsf	3,6	;RP1=1, select bank3
  7829     0D41  0824               	movf	main@realSaat^(0+384),w
  7830     0D42  1283               	bcf	3,5	;RP0=0, select bank0
  7831     0D43  1303               	bcf	3,6	;RP1=0, select bank0
  7832     0D44  00AC               	movwf	___awmod@dividend
  7833     0D45  160A  118A  2368  120A  158A  	fcall	___awmod
  7834     0D4A  3002               	movlw	2
  7835     0D4B  1283               	bcf	3,5	;RP0=0, select bank0
  7836     0D4C  1303               	bcf	3,6	;RP1=0, select bank0
  7837     0D4D  062A               	xorwf	?___awmod,w
  7838     0D4E  042B               	iorwf	?___awmod+1,w
  7839     0D4F  1D03               	btfss	3,2
  7840     0D50  2D52               	goto	u5371
  7841     0D51  2D53               	goto	u5370
  7842     0D52                     u5371:
  7843     0D52  2D67               	goto	l4069
  7844     0D53                     u5370:
  7845     0D53                     l4063:
  7846     0D53  3002               	movlw	2
  7847     0D54  1683               	bsf	3,5	;RP0=1, select bank3
  7848     0D55  1703               	bsf	3,6	;RP1=1, select bank3
  7849     0D56  0624               	xorwf	main@realSaat^(0+384),w
  7850     0D57  0425               	iorwf	(main@realSaat+1)^(0+384),w
  7851     0D58  1903               	btfsc	3,2
  7852     0D59  2D5B               	goto	u5381
  7853     0D5A  2D5C               	goto	u5380
  7854     0D5B                     u5381:
  7855     0D5B  2D67               	goto	l4069
  7856     0D5C                     u5380:
  7857     0D5C                     l4065:
  7858     0D5C  082C               	movf	(_currentTime^(0+384)+4),w
  7859     0D5D  042D               	iorwf	((_currentTime+1)^(0+384)+4),w
  7860     0D5E  1D03               	btfss	3,2
  7861     0D5F  2D61               	goto	u5391
  7862     0D60  2D62               	goto	u5390
  7863     0D61                     u5391:
  7864     0D61  2D67               	goto	l4069
  7865     0D62                     u5390:
  7866     0D62                     l4067:
  7867                           
  7868                           ;main1.c: 266:      ) && currentTime.minutes == 0 ) {;main1.c: 267:     yagBakim();
  7869     0D62  120A  118A  27AC  120A  158A  	fcall	_yagBakim
  7870     0D67                     l4069:
  7871                           
  7872                           ;main1.c: 274:     ADCON0bits.CHS = 0b0010;
  7873     0D67  1283               	bcf	3,5	;RP0=0, select bank0
  7874     0D68  1303               	bcf	3,6	;RP1=0, select bank0
  7875     0D69  081F               	movf	31,w	;volatile
  7876     0D6A  39C7               	andlw	-57
  7877     0D6B  3810               	iorlw	16
  7878     0D6C  009F               	movwf	31	;volatile
  7879     0D6D                     l4071:
  7880                           
  7881                           ;main1.c: 275:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  7882     0D6D  300F               	movlw	15
  7883     0D6E  1283               	bcf	3,5	;RP0=0, select bank0
  7884     0D6F  1303               	bcf	3,6	;RP1=0, select bank0
  7885     0D70  00D4               	movwf	??_main
  7886     0D71                     u5767:
  7887     0D71  0BD4               	decfsz	??_main,f
  7888     0D72  2D71               	goto	u5767
  7889     0D73  2D74               	nop2
  7890     0D74                     l4073:
  7891                           
  7892                           ;main1.c: 276:     ADCON0bits.GO = 1;
  7893     0D74  1283               	bcf	3,5	;RP0=0, select bank0
  7894     0D75  1303               	bcf	3,6	;RP1=0, select bank0
  7895     0D76  151F               	bsf	31,2	;volatile
  7896     0D77                     l225:	
  7897                           ;main1.c: 277:     while (ADCON0bits.GO);
  7898                           
  7899     0D77  191F               	btfsc	31,2	;volatile
  7900     0D78  2D7A               	goto	u5401
  7901     0D79  2D7B               	goto	u5400
  7902     0D7A                     u5401:
  7903     0D7A  2D77               	goto	l225
  7904     0D7B                     u5400:
  7905     0D7B                     l4075:
  7906                           
  7907                           ;main1.c: 278:     adcValue3 = (ADRESH << 8) | ADRESL;
  7908     0D7B  1683               	bsf	3,5	;RP0=1, select bank1
  7909     0D7C  1303               	bcf	3,6	;RP1=0, select bank1
  7910     0D7D  081E               	movf	30,w	;volatile
  7911     0D7E  1283               	bcf	3,5	;RP0=0, select bank0
  7912     0D7F  1303               	bcf	3,6	;RP1=0, select bank0
  7913     0D80  00D4               	movwf	??_main
  7914     0D81  01D5               	clrf	??_main+1
  7915     0D82  081E               	movf	30,w	;volatile
  7916     0D83  00D6               	movwf	??_main+2
  7917     0D84  01D7               	clrf	??_main+3
  7918     0D85  0856               	movf	??_main+2,w
  7919     0D86  00D7               	movwf	??_main+3
  7920     0D87  01D6               	clrf	??_main+2
  7921     0D88  0854               	movf	??_main,w
  7922     0D89  0456               	iorwf	??_main+2,w
  7923     0D8A  00A0               	movwf	___xxtofl@val
  7924     0D8B  0855               	movf	??_main+1,w
  7925     0D8C  0457               	iorwf	??_main+3,w
  7926     0D8D  00A1               	movwf	___xxtofl@val+1
  7927     0D8E  01A2               	clrf	___xxtofl@val+2
  7928     0D8F  1BA1               	btfsc	___xxtofl@val+1,7
  7929     0D90  03A2               	decf	___xxtofl@val+2,f
  7930     0D91  0822               	movf	___xxtofl@val+2,w
  7931     0D92  00A3               	movwf	___xxtofl@val+3
  7932     0D93  3001               	movlw	1
  7933     0D94  160A  118A  25E2  120A  158A  	fcall	___xxtofl
  7934     0D99  1283               	bcf	3,5	;RP0=0, select bank0
  7935     0D9A  1303               	bcf	3,6	;RP1=0, select bank0
  7936     0D9B  0823               	movf	?___xxtofl+3,w
  7937     0D9C  1683               	bsf	3,5	;RP0=1, select bank1
  7938     0D9D  1303               	bcf	3,6	;RP1=0, select bank1
  7939     0D9E  00D0               	movwf	(main@adcValue3+3)^(0+128)
  7940     0D9F  1283               	bcf	3,5	;RP0=0, select bank0
  7941     0DA0  1303               	bcf	3,6	;RP1=0, select bank0
  7942     0DA1  0822               	movf	?___xxtofl+2,w
  7943     0DA2  1683               	bsf	3,5	;RP0=1, select bank1
  7944     0DA3  1303               	bcf	3,6	;RP1=0, select bank1
  7945     0DA4  00CF               	movwf	(main@adcValue3+2)^(0+128)
  7946     0DA5  1283               	bcf	3,5	;RP0=0, select bank0
  7947     0DA6  1303               	bcf	3,6	;RP1=0, select bank0
  7948     0DA7  0821               	movf	?___xxtofl+1,w
  7949     0DA8  1683               	bsf	3,5	;RP0=1, select bank1
  7950     0DA9  1303               	bcf	3,6	;RP1=0, select bank1
  7951     0DAA  00CE               	movwf	(main@adcValue3+1)^(0+128)
  7952     0DAB  1283               	bcf	3,5	;RP0=0, select bank0
  7953     0DAC  1303               	bcf	3,6	;RP1=0, select bank0
  7954     0DAD  0820               	movf	?___xxtofl,w
  7955     0DAE  1683               	bsf	3,5	;RP0=1, select bank1
  7956     0DAF  1303               	bcf	3,6	;RP1=0, select bank1
  7957     0DB0  00CD               	movwf	main@adcValue3^(0+128)
  7958                           
  7959                           ;main1.c: 279:     float oranValue = adcValue3/1024.0;
  7960     0DB1  3044               	movlw	68
  7961     0DB2  1283               	bcf	3,5	;RP0=0, select bank0
  7962     0DB3  1303               	bcf	3,6	;RP1=0, select bank0
  7963     0DB4  00A3               	movwf	___fldiv@a+3
  7964     0DB5  3080               	movlw	128
  7965     0DB6  00A2               	movwf	___fldiv@a+2
  7966     0DB7  3000               	movlw	0
  7967     0DB8  00A1               	movwf	___fldiv@a+1
  7968     0DB9  3000               	movlw	0
  7969     0DBA  00A0               	movwf	___fldiv@a
  7970     0DBB  1683               	bsf	3,5	;RP0=1, select bank1
  7971     0DBC  1303               	bcf	3,6	;RP1=0, select bank1
  7972     0DBD  0850               	movf	(main@adcValue3+3)^(0+128),w
  7973     0DBE  1283               	bcf	3,5	;RP0=0, select bank0
  7974     0DBF  1303               	bcf	3,6	;RP1=0, select bank0
  7975     0DC0  00A7               	movwf	___fldiv@b+3
  7976     0DC1  1683               	bsf	3,5	;RP0=1, select bank1
  7977     0DC2  1303               	bcf	3,6	;RP1=0, select bank1
  7978     0DC3  084F               	movf	(main@adcValue3+2)^(0+128),w
  7979     0DC4  1283               	bcf	3,5	;RP0=0, select bank0
  7980     0DC5  1303               	bcf	3,6	;RP1=0, select bank0
  7981     0DC6  00A6               	movwf	___fldiv@b+2
  7982     0DC7  1683               	bsf	3,5	;RP0=1, select bank1
  7983     0DC8  1303               	bcf	3,6	;RP1=0, select bank1
  7984     0DC9  084E               	movf	(main@adcValue3+1)^(0+128),w
  7985     0DCA  1283               	bcf	3,5	;RP0=0, select bank0
  7986     0DCB  1303               	bcf	3,6	;RP1=0, select bank0
  7987     0DCC  00A5               	movwf	___fldiv@b+1
  7988     0DCD  1683               	bsf	3,5	;RP0=1, select bank1
  7989     0DCE  1303               	bcf	3,6	;RP1=0, select bank1
  7990     0DCF  084D               	movf	main@adcValue3^(0+128),w
  7991     0DD0  1283               	bcf	3,5	;RP0=0, select bank0
  7992     0DD1  1303               	bcf	3,6	;RP1=0, select bank0
  7993     0DD2  00A4               	movwf	___fldiv@b
  7994     0DD3  120A  158A  201F  120A  158A  	fcall	___fldiv
  7995     0DD8  1283               	bcf	3,5	;RP0=0, select bank0
  7996     0DD9  1303               	bcf	3,6	;RP1=0, select bank0
  7997     0DDA  0823               	movf	?___fldiv+3,w
  7998     0DDB  1683               	bsf	3,5	;RP0=1, select bank1
  7999     0DDC  1303               	bcf	3,6	;RP1=0, select bank1
  8000     0DDD  00D4               	movwf	(main@oranValue+3)^(0+128)
  8001     0DDE  1283               	bcf	3,5	;RP0=0, select bank0
  8002     0DDF  1303               	bcf	3,6	;RP1=0, select bank0
  8003     0DE0  0822               	movf	?___fldiv+2,w
  8004     0DE1  1683               	bsf	3,5	;RP0=1, select bank1
  8005     0DE2  1303               	bcf	3,6	;RP1=0, select bank1
  8006     0DE3  00D3               	movwf	(main@oranValue+2)^(0+128)
  8007     0DE4  1283               	bcf	3,5	;RP0=0, select bank0
  8008     0DE5  1303               	bcf	3,6	;RP1=0, select bank0
  8009     0DE6  0821               	movf	?___fldiv+1,w
  8010     0DE7  1683               	bsf	3,5	;RP0=1, select bank1
  8011     0DE8  1303               	bcf	3,6	;RP1=0, select bank1
  8012     0DE9  00D2               	movwf	(main@oranValue+1)^(0+128)
  8013     0DEA  1283               	bcf	3,5	;RP0=0, select bank0
  8014     0DEB  1303               	bcf	3,6	;RP1=0, select bank0
  8015     0DEC  0820               	movf	?___fldiv,w
  8016     0DED  1683               	bsf	3,5	;RP0=1, select bank1
  8017     0DEE  1303               	bcf	3,6	;RP1=0, select bank1
  8018     0DEF  00D1               	movwf	main@oranValue^(0+128)
  8019     0DF0                     l4077:
  8020                           
  8021                           ;main1.c: 282:     ADCON0bits.CHS = 0b0011;
  8022     0DF0  1283               	bcf	3,5	;RP0=0, select bank0
  8023     0DF1  1303               	bcf	3,6	;RP1=0, select bank0
  8024     0DF2  081F               	movf	31,w	;volatile
  8025     0DF3  39C7               	andlw	-57
  8026     0DF4  3818               	iorlw	24
  8027     0DF5  009F               	movwf	31	;volatile
  8028     0DF6                     l4079:
  8029                           
  8030                           ;main1.c: 283:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  8031     0DF6  300F               	movlw	15
  8032     0DF7  1283               	bcf	3,5	;RP0=0, select bank0
  8033     0DF8  1303               	bcf	3,6	;RP1=0, select bank0
  8034     0DF9  00D4               	movwf	??_main
  8035     0DFA                     u5777:
  8036     0DFA  0BD4               	decfsz	??_main,f
  8037     0DFB  2DFA               	goto	u5777
  8038     0DFC  2DFD               	nop2
  8039     0DFD                     l4081:
  8040                           
  8041                           ;main1.c: 284:     ADCON0bits.GO = 1;
  8042     0DFD  1283               	bcf	3,5	;RP0=0, select bank0
  8043     0DFE  1303               	bcf	3,6	;RP1=0, select bank0
  8044     0DFF  151F               	bsf	31,2	;volatile
  8045     0E00                     l228:	
  8046                           ;main1.c: 285:     while (ADCON0bits.GO);
  8047                           
  8048     0E00  191F               	btfsc	31,2	;volatile
  8049     0E01  2E03               	goto	u5411
  8050     0E02  2E04               	goto	u5410
  8051     0E03                     u5411:
  8052     0E03  2E00               	goto	l228
  8053     0E04                     u5410:
  8054     0E04                     l4083:
  8055                           
  8056                           ;main1.c: 286:     adcValue2 = (ADRESH << 8) | ADRESL;
  8057     0E04  081E               	movf	30,w	;volatile
  8058     0E05  1683               	bsf	3,5	;RP0=1, select bank1
  8059     0E06  1303               	bcf	3,6	;RP1=0, select bank1
  8060     0E07  00E3               	movwf	(main@adcValue2+1)^(0+128)
  8061     0E08  081E               	movf	30,w	;volatile
  8062     0E09  00E2               	movwf	main@adcValue2^(0+128)
  8063     0E0A                     l4085:
  8064                           
  8065                           ;main1.c: 288:     float integerPart = adcValue2*oranValue*3;
  8066     0E0A  0854               	movf	(main@oranValue+3)^(0+128),w
  8067     0E0B  1283               	bcf	3,5	;RP0=0, select bank0
  8068     0E0C  1303               	bcf	3,6	;RP1=0, select bank0
  8069     0E0D  00BD               	movwf	___flmul@b+3
  8070     0E0E  1683               	bsf	3,5	;RP0=1, select bank1
  8071     0E0F  1303               	bcf	3,6	;RP1=0, select bank1
  8072     0E10  0853               	movf	(main@oranValue+2)^(0+128),w
  8073     0E11  1283               	bcf	3,5	;RP0=0, select bank0
  8074     0E12  1303               	bcf	3,6	;RP1=0, select bank0
  8075     0E13  00BC               	movwf	___flmul@b+2
  8076     0E14  1683               	bsf	3,5	;RP0=1, select bank1
  8077     0E15  1303               	bcf	3,6	;RP1=0, select bank1
  8078     0E16  0852               	movf	(main@oranValue+1)^(0+128),w
  8079     0E17  1283               	bcf	3,5	;RP0=0, select bank0
  8080     0E18  1303               	bcf	3,6	;RP1=0, select bank0
  8081     0E19  00BB               	movwf	___flmul@b+1
  8082     0E1A  1683               	bsf	3,5	;RP0=1, select bank1
  8083     0E1B  1303               	bcf	3,6	;RP1=0, select bank1
  8084     0E1C  0851               	movf	main@oranValue^(0+128),w
  8085     0E1D  1283               	bcf	3,5	;RP0=0, select bank0
  8086     0E1E  1303               	bcf	3,6	;RP1=0, select bank0
  8087     0E1F  00BA               	movwf	___flmul@b
  8088     0E20  1683               	bsf	3,5	;RP0=1, select bank1
  8089     0E21  1303               	bcf	3,6	;RP1=0, select bank1
  8090     0E22  0862               	movf	main@adcValue2^(0+128),w
  8091     0E23  1283               	bcf	3,5	;RP0=0, select bank0
  8092     0E24  1303               	bcf	3,6	;RP1=0, select bank0
  8093     0E25  00A0               	movwf	___xxtofl@val
  8094     0E26  1683               	bsf	3,5	;RP0=1, select bank1
  8095     0E27  1303               	bcf	3,6	;RP1=0, select bank1
  8096     0E28  0863               	movf	(main@adcValue2+1)^(0+128),w
  8097     0E29  1283               	bcf	3,5	;RP0=0, select bank0
  8098     0E2A  1303               	bcf	3,6	;RP1=0, select bank0
  8099     0E2B  00A1               	movwf	___xxtofl@val+1
  8100     0E2C  3000               	movlw	0
  8101     0E2D  1BA1               	btfsc	___xxtofl@val+1,7
  8102     0E2E  30FF               	movlw	255
  8103     0E2F  00A2               	movwf	___xxtofl@val+2
  8104     0E30  00A3               	movwf	___xxtofl@val+3
  8105     0E31  3001               	movlw	1
  8106     0E32  160A  118A  25E2  120A  158A  	fcall	___xxtofl
  8107     0E37  1283               	bcf	3,5	;RP0=0, select bank0
  8108     0E38  1303               	bcf	3,6	;RP1=0, select bank0
  8109     0E39  0823               	movf	?___xxtofl+3,w
  8110     0E3A  00C1               	movwf	___flmul@a+3
  8111     0E3B  0822               	movf	?___xxtofl+2,w
  8112     0E3C  00C0               	movwf	___flmul@a+2
  8113     0E3D  0821               	movf	?___xxtofl+1,w
  8114     0E3E  00BF               	movwf	___flmul@a+1
  8115     0E3F  0820               	movf	?___xxtofl,w
  8116     0E40  00BE               	movwf	___flmul@a
  8117     0E41  120A  118A  2467  120A  158A  	fcall	___flmul
  8118     0E46  1283               	bcf	3,5	;RP0=0, select bank0
  8119     0E47  1303               	bcf	3,6	;RP1=0, select bank0
  8120     0E48  083D               	movf	?___flmul+3,w
  8121     0E49  1683               	bsf	3,5	;RP0=1, select bank1
  8122     0E4A  1303               	bcf	3,6	;RP1=0, select bank1
  8123     0E4B  00DC               	movwf	(_main$1030+3)^(0+128)
  8124     0E4C  1283               	bcf	3,5	;RP0=0, select bank0
  8125     0E4D  1303               	bcf	3,6	;RP1=0, select bank0
  8126     0E4E  083C               	movf	?___flmul+2,w
  8127     0E4F  1683               	bsf	3,5	;RP0=1, select bank1
  8128     0E50  1303               	bcf	3,6	;RP1=0, select bank1
  8129     0E51  00DB               	movwf	(_main$1030+2)^(0+128)
  8130     0E52  1283               	bcf	3,5	;RP0=0, select bank0
  8131     0E53  1303               	bcf	3,6	;RP1=0, select bank0
  8132     0E54  083B               	movf	?___flmul+1,w
  8133     0E55  1683               	bsf	3,5	;RP0=1, select bank1
  8134     0E56  1303               	bcf	3,6	;RP1=0, select bank1
  8135     0E57  00DA               	movwf	(_main$1030+1)^(0+128)
  8136     0E58  1283               	bcf	3,5	;RP0=0, select bank0
  8137     0E59  1303               	bcf	3,6	;RP1=0, select bank0
  8138     0E5A  083A               	movf	?___flmul,w
  8139     0E5B  1683               	bsf	3,5	;RP0=1, select bank1
  8140     0E5C  1303               	bcf	3,6	;RP1=0, select bank1
  8141     0E5D  00D9               	movwf	_main$1030^(0+128)
  8142     0E5E                     l4087:
  8143                           
  8144                           ;main1.c: 288:     float integerPart = adcValue2*oranValue*3;
  8145     0E5E  3040               	movlw	64
  8146     0E5F  1283               	bcf	3,5	;RP0=0, select bank0
  8147     0E60  1303               	bcf	3,6	;RP1=0, select bank0
  8148     0E61  00BD               	movwf	___flmul@b+3
  8149     0E62  3040               	movlw	64
  8150     0E63  00BC               	movwf	___flmul@b+2
  8151     0E64  3000               	movlw	0
  8152     0E65  00BB               	movwf	___flmul@b+1
  8153     0E66  3000               	movlw	0
  8154     0E67  00BA               	movwf	___flmul@b
  8155     0E68  1683               	bsf	3,5	;RP0=1, select bank1
  8156     0E69  1303               	bcf	3,6	;RP1=0, select bank1
  8157     0E6A  085C               	movf	(_main$1030+3)^(0+128),w
  8158     0E6B  1283               	bcf	3,5	;RP0=0, select bank0
  8159     0E6C  1303               	bcf	3,6	;RP1=0, select bank0
  8160     0E6D  00C1               	movwf	___flmul@a+3
  8161     0E6E  1683               	bsf	3,5	;RP0=1, select bank1
  8162     0E6F  1303               	bcf	3,6	;RP1=0, select bank1
  8163     0E70  085B               	movf	(_main$1030+2)^(0+128),w
  8164     0E71  1283               	bcf	3,5	;RP0=0, select bank0
  8165     0E72  1303               	bcf	3,6	;RP1=0, select bank0
  8166     0E73  00C0               	movwf	___flmul@a+2
  8167     0E74  1683               	bsf	3,5	;RP0=1, select bank1
  8168     0E75  1303               	bcf	3,6	;RP1=0, select bank1
  8169     0E76  085A               	movf	(_main$1030+1)^(0+128),w
  8170     0E77  1283               	bcf	3,5	;RP0=0, select bank0
  8171     0E78  1303               	bcf	3,6	;RP1=0, select bank0
  8172     0E79  00BF               	movwf	___flmul@a+1
  8173     0E7A  1683               	bsf	3,5	;RP0=1, select bank1
  8174     0E7B  1303               	bcf	3,6	;RP1=0, select bank1
  8175     0E7C  0859               	movf	_main$1030^(0+128),w
  8176     0E7D  1283               	bcf	3,5	;RP0=0, select bank0
  8177     0E7E  1303               	bcf	3,6	;RP1=0, select bank0
  8178     0E7F  00BE               	movwf	___flmul@a
  8179     0E80  120A  118A  2467  120A  158A  	fcall	___flmul
  8180     0E85  1283               	bcf	3,5	;RP0=0, select bank0
  8181     0E86  1303               	bcf	3,6	;RP1=0, select bank0
  8182     0E87  083D               	movf	?___flmul+3,w
  8183     0E88  1683               	bsf	3,5	;RP0=1, select bank3
  8184     0E89  1703               	bsf	3,6	;RP1=1, select bank3
  8185     0E8A  009F               	movwf	(main@integerPart+3)^(0+384)
  8186     0E8B  1283               	bcf	3,5	;RP0=0, select bank0
  8187     0E8C  1303               	bcf	3,6	;RP1=0, select bank0
  8188     0E8D  083C               	movf	?___flmul+2,w
  8189     0E8E  1683               	bsf	3,5	;RP0=1, select bank3
  8190     0E8F  1703               	bsf	3,6	;RP1=1, select bank3
  8191     0E90  009E               	movwf	(main@integerPart+2)^(0+384)
  8192     0E91  1283               	bcf	3,5	;RP0=0, select bank0
  8193     0E92  1303               	bcf	3,6	;RP1=0, select bank0
  8194     0E93  083B               	movf	?___flmul+1,w
  8195     0E94  1683               	bsf	3,5	;RP0=1, select bank3
  8196     0E95  1703               	bsf	3,6	;RP1=1, select bank3
  8197     0E96  009D               	movwf	(main@integerPart+1)^(0+384)
  8198     0E97  1283               	bcf	3,5	;RP0=0, select bank0
  8199     0E98  1303               	bcf	3,6	;RP1=0, select bank0
  8200     0E99  083A               	movf	?___flmul,w
  8201     0E9A  1683               	bsf	3,5	;RP0=1, select bank3
  8202     0E9B  1703               	bsf	3,6	;RP1=1, select bank3
  8203     0E9C  009C               	movwf	main@integerPart^(0+384)
  8204     0E9D                     l4089:
  8205                           
  8206                           ;main1.c: 290:     int binler = (int)integerPart/1000;
  8207     0E9D  30E8               	movlw	232
  8208     0E9E  1283               	bcf	3,5	;RP0=0, select bank0
  8209     0E9F  1303               	bcf	3,6	;RP1=0, select bank0
  8210     0EA0  00AA               	movwf	___awdiv@divisor
  8211     0EA1  3003               	movlw	3
  8212     0EA2  00AB               	movwf	___awdiv@divisor+1
  8213     0EA3  1683               	bsf	3,5	;RP0=1, select bank3
  8214     0EA4  1703               	bsf	3,6	;RP1=1, select bank3
  8215     0EA5  081F               	movf	(main@integerPart+3)^(0+384),w
  8216     0EA6  1283               	bcf	3,5	;RP0=0, select bank0
  8217     0EA7  1303               	bcf	3,6	;RP1=0, select bank0
  8218     0EA8  00A3               	movwf	___fltol@f1+3
  8219     0EA9  1683               	bsf	3,5	;RP0=1, select bank3
  8220     0EAA  1703               	bsf	3,6	;RP1=1, select bank3
  8221     0EAB  081E               	movf	(main@integerPart+2)^(0+384),w
  8222     0EAC  1283               	bcf	3,5	;RP0=0, select bank0
  8223     0EAD  1303               	bcf	3,6	;RP1=0, select bank0
  8224     0EAE  00A2               	movwf	___fltol@f1+2
  8225     0EAF  1683               	bsf	3,5	;RP0=1, select bank3
  8226     0EB0  1703               	bsf	3,6	;RP1=1, select bank3
  8227     0EB1  081D               	movf	(main@integerPart+1)^(0+384),w
  8228     0EB2  1283               	bcf	3,5	;RP0=0, select bank0
  8229     0EB3  1303               	bcf	3,6	;RP1=0, select bank0
  8230     0EB4  00A1               	movwf	___fltol@f1+1
  8231     0EB5  1683               	bsf	3,5	;RP0=1, select bank3
  8232     0EB6  1703               	bsf	3,6	;RP1=1, select bank3
  8233     0EB7  081C               	movf	main@integerPart^(0+384),w
  8234     0EB8  1283               	bcf	3,5	;RP0=0, select bank0
  8235     0EB9  1303               	bcf	3,6	;RP1=0, select bank0
  8236     0EBA  00A0               	movwf	___fltol@f1
  8237     0EBB  160A  118A  256A  120A  158A  	fcall	___fltol
  8238     0EC0  1283               	bcf	3,5	;RP0=0, select bank0
  8239     0EC1  1303               	bcf	3,6	;RP1=0, select bank0
  8240     0EC2  0821               	movf	?___fltol+1,w
  8241     0EC3  00AD               	movwf	___awdiv@dividend+1
  8242     0EC4  0820               	movf	?___fltol,w
  8243     0EC5  00AC               	movwf	___awdiv@dividend
  8244     0EC6  160A  118A  248D  120A  158A  	fcall	___awdiv
  8245     0ECB  1283               	bcf	3,5	;RP0=0, select bank0
  8246     0ECC  1303               	bcf	3,6	;RP1=0, select bank0
  8247     0ECD  082B               	movf	?___awdiv+1,w
  8248     0ECE  1683               	bsf	3,5	;RP0=1, select bank3
  8249     0ECF  1703               	bsf	3,6	;RP1=1, select bank3
  8250     0ED0  009B               	movwf	(main@binler+1)^(0+384)
  8251     0ED1  1283               	bcf	3,5	;RP0=0, select bank0
  8252     0ED2  1303               	bcf	3,6	;RP1=0, select bank0
  8253     0ED3  082A               	movf	?___awdiv,w
  8254     0ED4  1683               	bsf	3,5	;RP0=1, select bank3
  8255     0ED5  1703               	bsf	3,6	;RP1=1, select bank3
  8256     0ED6  009A               	movwf	main@binler^(0+384)
  8257     0ED7                     l4091:
  8258                           
  8259                           ;main1.c: 291:     int yuzler = ((int)integerPart-binler*1000)/100;
  8260     0ED7  3064               	movlw	100
  8261     0ED8  1283               	bcf	3,5	;RP0=0, select bank0
  8262     0ED9  1303               	bcf	3,6	;RP1=0, select bank0
  8263     0EDA  00AA               	movwf	___awdiv@divisor
  8264     0EDB  3000               	movlw	0
  8265     0EDC  00AB               	movwf	___awdiv@divisor+1
  8266     0EDD  1683               	bsf	3,5	;RP0=1, select bank3
  8267     0EDE  1703               	bsf	3,6	;RP1=1, select bank3
  8268     0EDF  081F               	movf	(main@integerPart+3)^(0+384),w
  8269     0EE0  1283               	bcf	3,5	;RP0=0, select bank0
  8270     0EE1  1303               	bcf	3,6	;RP1=0, select bank0
  8271     0EE2  00A3               	movwf	___fltol@f1+3
  8272     0EE3  1683               	bsf	3,5	;RP0=1, select bank3
  8273     0EE4  1703               	bsf	3,6	;RP1=1, select bank3
  8274     0EE5  081E               	movf	(main@integerPart+2)^(0+384),w
  8275     0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  8276     0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  8277     0EE8  00A2               	movwf	___fltol@f1+2
  8278     0EE9  1683               	bsf	3,5	;RP0=1, select bank3
  8279     0EEA  1703               	bsf	3,6	;RP1=1, select bank3
  8280     0EEB  081D               	movf	(main@integerPart+1)^(0+384),w
  8281     0EEC  1283               	bcf	3,5	;RP0=0, select bank0
  8282     0EED  1303               	bcf	3,6	;RP1=0, select bank0
  8283     0EEE  00A1               	movwf	___fltol@f1+1
  8284     0EEF  1683               	bsf	3,5	;RP0=1, select bank3
  8285     0EF0  1703               	bsf	3,6	;RP1=1, select bank3
  8286     0EF1  081C               	movf	main@integerPart^(0+384),w
  8287     0EF2  1283               	bcf	3,5	;RP0=0, select bank0
  8288     0EF3  1303               	bcf	3,6	;RP1=0, select bank0
  8289     0EF4  00A0               	movwf	___fltol@f1
  8290     0EF5  160A  118A  256A  120A  158A  	fcall	___fltol
  8291     0EFA  1283               	bcf	3,5	;RP0=0, select bank0
  8292     0EFB  1303               	bcf	3,6	;RP1=0, select bank0
  8293     0EFC  0820               	movf	?___fltol,w
  8294     0EFD  00D4               	movwf	??_main
  8295     0EFE  0821               	movf	?___fltol+1,w
  8296     0EFF  00D5               	movwf	??_main+1
  8297     0F00  0822               	movf	?___fltol+2,w
  8298     0F01  00D6               	movwf	??_main+2
  8299     0F02  0823               	movf	?___fltol+3,w
  8300     0F03  00D7               	movwf	??_main+3
  8301     0F04  1683               	bsf	3,5	;RP0=1, select bank3
  8302     0F05  1703               	bsf	3,6	;RP1=1, select bank3
  8303     0F06  081B               	movf	(main@binler+1)^(0+384),w
  8304     0F07  1283               	bcf	3,5	;RP0=0, select bank0
  8305     0F08  1303               	bcf	3,6	;RP1=0, select bank0
  8306     0F09  00A5               	movwf	___wmul@multiplier+1
  8307     0F0A  1683               	bsf	3,5	;RP0=1, select bank3
  8308     0F0B  1703               	bsf	3,6	;RP1=1, select bank3
  8309     0F0C  081A               	movf	main@binler^(0+384),w
  8310     0F0D  1283               	bcf	3,5	;RP0=0, select bank0
  8311     0F0E  1303               	bcf	3,6	;RP1=0, select bank0
  8312     0F0F  00A4               	movwf	___wmul@multiplier
  8313     0F10  3018               	movlw	24
  8314     0F11  00A6               	movwf	___wmul@multiplicand
  8315     0F12  30FC               	movlw	252
  8316     0F13  00A7               	movwf	___wmul@multiplicand+1
  8317     0F14  160A  118A  2185  120A  158A  	fcall	___wmul
  8318     0F19  1283               	bcf	3,5	;RP0=0, select bank0
  8319     0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  8320     0F1B  0824               	movf	?___wmul,w
  8321     0F1C  0754               	addwf	??_main,w
  8322     0F1D  00AC               	movwf	___awdiv@dividend
  8323     0F1E  0825               	movf	?___wmul+1,w
  8324     0F1F  1803               	skipnc
  8325     0F20  0A25               	incf	?___wmul+1,w
  8326     0F21  0755               	addwf	??_main+1,w
  8327     0F22  00AD               	movwf	___awdiv@dividend+1
  8328     0F23  160A  118A  248D  120A  158A  	fcall	___awdiv
  8329     0F28  1283               	bcf	3,5	;RP0=0, select bank0
  8330     0F29  1303               	bcf	3,6	;RP1=0, select bank0
  8331     0F2A  082B               	movf	?___awdiv+1,w
  8332     0F2B  1683               	bsf	3,5	;RP0=1, select bank3
  8333     0F2C  1703               	bsf	3,6	;RP1=1, select bank3
  8334     0F2D  0099               	movwf	(main@yuzler+1)^(0+384)
  8335     0F2E  1283               	bcf	3,5	;RP0=0, select bank0
  8336     0F2F  1303               	bcf	3,6	;RP1=0, select bank0
  8337     0F30  082A               	movf	?___awdiv,w
  8338     0F31  1683               	bsf	3,5	;RP0=1, select bank3
  8339     0F32  1703               	bsf	3,6	;RP1=1, select bank3
  8340     0F33  0098               	movwf	main@yuzler^(0+384)
  8341     0F34                     l4093:
  8342                           
  8343                           ;main1.c: 292:     int onlar = ((int)integerPart-binler*1000-yuzler*100)/10;
  8344     0F34  300A               	movlw	10
  8345     0F35  1283               	bcf	3,5	;RP0=0, select bank0
  8346     0F36  1303               	bcf	3,6	;RP1=0, select bank0
  8347     0F37  00AA               	movwf	___awdiv@divisor
  8348     0F38  3000               	movlw	0
  8349     0F39  00AB               	movwf	___awdiv@divisor+1
  8350     0F3A  1683               	bsf	3,5	;RP0=1, select bank3
  8351     0F3B  1703               	bsf	3,6	;RP1=1, select bank3
  8352     0F3C  081F               	movf	(main@integerPart+3)^(0+384),w
  8353     0F3D  1283               	bcf	3,5	;RP0=0, select bank0
  8354     0F3E  1303               	bcf	3,6	;RP1=0, select bank0
  8355     0F3F  00A3               	movwf	___fltol@f1+3
  8356     0F40  1683               	bsf	3,5	;RP0=1, select bank3
  8357     0F41  1703               	bsf	3,6	;RP1=1, select bank3
  8358     0F42  081E               	movf	(main@integerPart+2)^(0+384),w
  8359     0F43  1283               	bcf	3,5	;RP0=0, select bank0
  8360     0F44  1303               	bcf	3,6	;RP1=0, select bank0
  8361     0F45  00A2               	movwf	___fltol@f1+2
  8362     0F46  1683               	bsf	3,5	;RP0=1, select bank3
  8363     0F47  1703               	bsf	3,6	;RP1=1, select bank3
  8364     0F48  081D               	movf	(main@integerPart+1)^(0+384),w
  8365     0F49  1283               	bcf	3,5	;RP0=0, select bank0
  8366     0F4A  1303               	bcf	3,6	;RP1=0, select bank0
  8367     0F4B  00A1               	movwf	___fltol@f1+1
  8368     0F4C  1683               	bsf	3,5	;RP0=1, select bank3
  8369     0F4D  1703               	bsf	3,6	;RP1=1, select bank3
  8370     0F4E  081C               	movf	main@integerPart^(0+384),w
  8371     0F4F  1283               	bcf	3,5	;RP0=0, select bank0
  8372     0F50  1303               	bcf	3,6	;RP1=0, select bank0
  8373     0F51  00A0               	movwf	___fltol@f1
  8374     0F52  160A  118A  256A  120A  158A  	fcall	___fltol
  8375     0F57  1283               	bcf	3,5	;RP0=0, select bank0
  8376     0F58  1303               	bcf	3,6	;RP1=0, select bank0
  8377     0F59  0820               	movf	?___fltol,w
  8378     0F5A  00D4               	movwf	??_main
  8379     0F5B  0821               	movf	?___fltol+1,w
  8380     0F5C  00D5               	movwf	??_main+1
  8381     0F5D  0822               	movf	?___fltol+2,w
  8382     0F5E  00D6               	movwf	??_main+2
  8383     0F5F  0823               	movf	?___fltol+3,w
  8384     0F60  00D7               	movwf	??_main+3
  8385     0F61  1683               	bsf	3,5	;RP0=1, select bank3
  8386     0F62  1703               	bsf	3,6	;RP1=1, select bank3
  8387     0F63  081B               	movf	(main@binler+1)^(0+384),w
  8388     0F64  1283               	bcf	3,5	;RP0=0, select bank0
  8389     0F65  1303               	bcf	3,6	;RP1=0, select bank0
  8390     0F66  00A5               	movwf	___wmul@multiplier+1
  8391     0F67  1683               	bsf	3,5	;RP0=1, select bank3
  8392     0F68  1703               	bsf	3,6	;RP1=1, select bank3
  8393     0F69  081A               	movf	main@binler^(0+384),w
  8394     0F6A  1283               	bcf	3,5	;RP0=0, select bank0
  8395     0F6B  1303               	bcf	3,6	;RP1=0, select bank0
  8396     0F6C  00A4               	movwf	___wmul@multiplier
  8397     0F6D  3018               	movlw	24
  8398     0F6E  00A6               	movwf	___wmul@multiplicand
  8399     0F6F  30FC               	movlw	252
  8400     0F70  00A7               	movwf	___wmul@multiplicand+1
  8401     0F71  160A  118A  2185  120A  158A  	fcall	___wmul
  8402     0F76  1283               	bcf	3,5	;RP0=0, select bank0
  8403     0F77  1303               	bcf	3,6	;RP1=0, select bank0
  8404     0F78  0824               	movf	?___wmul,w
  8405     0F79  0754               	addwf	??_main,w
  8406     0F7A  00D8               	movwf	??_main+4
  8407     0F7B  0825               	movf	?___wmul+1,w
  8408     0F7C  1803               	skipnc
  8409     0F7D  0A25               	incf	?___wmul+1,w
  8410     0F7E  0755               	addwf	??_main+1,w
  8411     0F7F  00D9               	movwf	??_main+5
  8412     0F80  1683               	bsf	3,5	;RP0=1, select bank3
  8413     0F81  1703               	bsf	3,6	;RP1=1, select bank3
  8414     0F82  0819               	movf	(main@yuzler+1)^(0+384),w
  8415     0F83  1283               	bcf	3,5	;RP0=0, select bank0
  8416     0F84  1303               	bcf	3,6	;RP1=0, select bank0
  8417     0F85  00A5               	movwf	___wmul@multiplier+1
  8418     0F86  1683               	bsf	3,5	;RP0=1, select bank3
  8419     0F87  1703               	bsf	3,6	;RP1=1, select bank3
  8420     0F88  0818               	movf	main@yuzler^(0+384),w
  8421     0F89  1283               	bcf	3,5	;RP0=0, select bank0
  8422     0F8A  1303               	bcf	3,6	;RP1=0, select bank0
  8423     0F8B  00A4               	movwf	___wmul@multiplier
  8424     0F8C  309C               	movlw	156
  8425     0F8D  00A6               	movwf	___wmul@multiplicand
  8426     0F8E  30FF               	movlw	255
  8427     0F8F  00A7               	movwf	___wmul@multiplicand+1
  8428     0F90  160A  118A  2185  120A  158A  	fcall	___wmul
  8429     0F95  1283               	bcf	3,5	;RP0=0, select bank0
  8430     0F96  1303               	bcf	3,6	;RP1=0, select bank0
  8431     0F97  0824               	movf	?___wmul,w
  8432     0F98  0758               	addwf	??_main+4,w
  8433     0F99  00AC               	movwf	___awdiv@dividend
  8434     0F9A  0825               	movf	?___wmul+1,w
  8435     0F9B  1803               	skipnc
  8436     0F9C  0A25               	incf	?___wmul+1,w
  8437     0F9D  0759               	addwf	??_main+5,w
  8438     0F9E  00AD               	movwf	___awdiv@dividend+1
  8439     0F9F  160A  118A  248D  120A  158A  	fcall	___awdiv
  8440     0FA4  1283               	bcf	3,5	;RP0=0, select bank0
  8441     0FA5  1303               	bcf	3,6	;RP1=0, select bank0
  8442     0FA6  082B               	movf	?___awdiv+1,w
  8443     0FA7  1683               	bsf	3,5	;RP0=1, select bank1
  8444     0FA8  1303               	bcf	3,6	;RP1=0, select bank1
  8445     0FA9  00E9               	movwf	(main@onlar+1)^(0+128)
  8446     0FAA  1283               	bcf	3,5	;RP0=0, select bank0
  8447     0FAB  1303               	bcf	3,6	;RP1=0, select bank0
  8448     0FAC  082A               	movf	?___awdiv,w
  8449     0FAD  1683               	bsf	3,5	;RP0=1, select bank1
  8450     0FAE  1303               	bcf	3,6	;RP1=0, select bank1
  8451     0FAF  00E8               	movwf	main@onlar^(0+128)
  8452     0FB0                     l4095:
  8453                           
  8454                           ;main1.c: 293:     int birler = (int)integerPart%10;
  8455     0FB0  300A               	movlw	10
  8456     0FB1  1283               	bcf	3,5	;RP0=0, select bank0
  8457     0FB2  1303               	bcf	3,6	;RP1=0, select bank0
  8458     0FB3  00AA               	movwf	___awmod@divisor
  8459     0FB4  3000               	movlw	0
  8460     0FB5  00AB               	movwf	___awmod@divisor+1
  8461     0FB6  1683               	bsf	3,5	;RP0=1, select bank3
  8462     0FB7  1703               	bsf	3,6	;RP1=1, select bank3
  8463     0FB8  081F               	movf	(main@integerPart+3)^(0+384),w
  8464     0FB9  1283               	bcf	3,5	;RP0=0, select bank0
  8465     0FBA  1303               	bcf	3,6	;RP1=0, select bank0
  8466     0FBB  00A3               	movwf	___fltol@f1+3
  8467     0FBC  1683               	bsf	3,5	;RP0=1, select bank3
  8468     0FBD  1703               	bsf	3,6	;RP1=1, select bank3
  8469     0FBE  081E               	movf	(main@integerPart+2)^(0+384),w
  8470     0FBF  1283               	bcf	3,5	;RP0=0, select bank0
  8471     0FC0  1303               	bcf	3,6	;RP1=0, select bank0
  8472     0FC1  00A2               	movwf	___fltol@f1+2
  8473     0FC2  1683               	bsf	3,5	;RP0=1, select bank3
  8474     0FC3  1703               	bsf	3,6	;RP1=1, select bank3
  8475     0FC4  081D               	movf	(main@integerPart+1)^(0+384),w
  8476     0FC5  1283               	bcf	3,5	;RP0=0, select bank0
  8477     0FC6  1303               	bcf	3,6	;RP1=0, select bank0
  8478     0FC7  00A1               	movwf	___fltol@f1+1
  8479     0FC8  1683               	bsf	3,5	;RP0=1, select bank3
  8480     0FC9  1703               	bsf	3,6	;RP1=1, select bank3
  8481     0FCA  081C               	movf	main@integerPart^(0+384),w
  8482     0FCB  1283               	bcf	3,5	;RP0=0, select bank0
  8483     0FCC  1303               	bcf	3,6	;RP1=0, select bank0
  8484     0FCD  00A0               	movwf	___fltol@f1
  8485     0FCE  160A  118A  256A  120A  158A  	fcall	___fltol
  8486     0FD3  1283               	bcf	3,5	;RP0=0, select bank0
  8487     0FD4  1303               	bcf	3,6	;RP1=0, select bank0
  8488     0FD5  0821               	movf	?___fltol+1,w
  8489     0FD6  00AD               	movwf	___awmod@dividend+1
  8490     0FD7  0820               	movf	?___fltol,w
  8491     0FD8  00AC               	movwf	___awmod@dividend
  8492     0FD9  160A  118A  2368  120A  158A  	fcall	___awmod
  8493     0FDE  1283               	bcf	3,5	;RP0=0, select bank0
  8494     0FDF  1303               	bcf	3,6	;RP1=0, select bank0
  8495     0FE0  082B               	movf	?___awmod+1,w
  8496     0FE1  1683               	bsf	3,5	;RP0=1, select bank1
  8497     0FE2  1303               	bcf	3,6	;RP1=0, select bank1
  8498     0FE3  00EB               	movwf	(main@birler+1)^(0+128)
  8499     0FE4  1283               	bcf	3,5	;RP0=0, select bank0
  8500     0FE5  1303               	bcf	3,6	;RP1=0, select bank0
  8501     0FE6  082A               	movf	?___awmod,w
  8502     0FE7  1683               	bsf	3,5	;RP0=1, select bank1
  8503     0FE8  1303               	bcf	3,6	;RP1=0, select bank1
  8504     0FE9  00EA               	movwf	main@birler^(0+128)
  8505     0FEA                     l4097:
  8506                           
  8507                           ;main1.c: 299:         ADCON0bits.CHS = 0b0001;
  8508     0FEA  1283               	bcf	3,5	;RP0=0, select bank0
  8509     0FEB  1303               	bcf	3,6	;RP1=0, select bank0
  8510     0FEC  081F               	movf	31,w	;volatile
  8511     0FED  39C7               	andlw	-57
  8512     0FEE  3808               	iorlw	8
  8513     0FEF  009F               	movwf	31	;volatile
  8514     0FF0                     l4099:
  8515                           
  8516                           ;main1.c: 300:         _delay((unsigned long)((50)*(4000000/4000000.0)));
  8517     0FF0  300F               	movlw	15
  8518     0FF1  1283               	bcf	3,5	;RP0=0, select bank0
  8519     0FF2  1303               	bcf	3,6	;RP1=0, select bank0
  8520     0FF3  00D4               	movwf	??_main
  8521     0FF4                     u5787:
  8522     0FF4  0BD4               	decfsz	??_main,f
  8523     0FF5  2FF4               	goto	u5787
  8524     0FF6  2FF7               	nop2
  8525     0FF7                     l4101:
  8526                           
  8527                           ;main1.c: 301:         ADCON0bits.GO = 1;
  8528     0FF7  1283               	bcf	3,5	;RP0=0, select bank0
  8529     0FF8  1303               	bcf	3,6	;RP1=0, select bank0
  8530     0FF9  151F               	bsf	31,2	;volatile
  8531     0FFA                     l231:	
  8532                           ;main1.c: 302:         while (ADCON0bits.GO);
  8533                           
  8534     0FFA  191F               	btfsc	31,2	;volatile
  8535     0FFB  2FFF               	goto	u5421
  8536     0FFC  120A  118A  2823   	goto	u5420
  8537     0FFF                     u5421:
  8538     0FFF  2FFA               	goto	l231
  8539                           
  8540                           	psect	maintext_split_2
  8541     0023                     u5420:
  8542     0023                     l4103:
  8543                           
  8544                           ;main1.c: 303:         adcValue1 = (ADRESH << 8) | ADRESL;
  8545     0023  1683               	bsf	3,5	;RP0=1, select bank1
  8546     0024  1303               	bcf	3,6	;RP1=0, select bank1
  8547     0025  081E               	movf	30,w	;volatile
  8548     0026  1283               	bcf	3,5	;RP0=0, select bank0
  8549     0027  1303               	bcf	3,6	;RP1=0, select bank0
  8550     0028  00D4               	movwf	??_main
  8551     0029  01D5               	clrf	??_main+1
  8552     002A  081E               	movf	30,w	;volatile
  8553     002B  00D6               	movwf	??_main+2
  8554     002C  01D7               	clrf	??_main+3
  8555     002D  0856               	movf	??_main+2,w
  8556     002E  00D7               	movwf	??_main+3
  8557     002F  01D6               	clrf	??_main+2
  8558     0030  0854               	movf	??_main,w
  8559     0031  0456               	iorwf	??_main+2,w
  8560     0032  00A0               	movwf	___xxtofl@val
  8561     0033  0855               	movf	??_main+1,w
  8562     0034  0457               	iorwf	??_main+3,w
  8563     0035  00A1               	movwf	___xxtofl@val+1
  8564     0036  01A2               	clrf	___xxtofl@val+2
  8565     0037  1BA1               	btfsc	___xxtofl@val+1,7
  8566     0038  03A2               	decf	___xxtofl@val+2,f
  8567     0039  0822               	movf	___xxtofl@val+2,w
  8568     003A  00A3               	movwf	___xxtofl@val+3
  8569     003B  3001               	movlw	1
  8570     003C  160A  118A  25E2  120A  118A  	fcall	___xxtofl
  8571     0041  1283               	bcf	3,5	;RP0=0, select bank0
  8572     0042  1303               	bcf	3,6	;RP1=0, select bank0
  8573     0043  0823               	movf	?___xxtofl+3,w
  8574     0044  1683               	bsf	3,5	;RP0=1, select bank3
  8575     0045  1703               	bsf	3,6	;RP1=1, select bank3
  8576     0046  0097               	movwf	(main@adcValue1+3)^(0+384)
  8577     0047  1283               	bcf	3,5	;RP0=0, select bank0
  8578     0048  1303               	bcf	3,6	;RP1=0, select bank0
  8579     0049  0822               	movf	?___xxtofl+2,w
  8580     004A  1683               	bsf	3,5	;RP0=1, select bank3
  8581     004B  1703               	bsf	3,6	;RP1=1, select bank3
  8582     004C  0096               	movwf	(main@adcValue1+2)^(0+384)
  8583     004D  1283               	bcf	3,5	;RP0=0, select bank0
  8584     004E  1303               	bcf	3,6	;RP1=0, select bank0
  8585     004F  0821               	movf	?___xxtofl+1,w
  8586     0050  1683               	bsf	3,5	;RP0=1, select bank3
  8587     0051  1703               	bsf	3,6	;RP1=1, select bank3
  8588     0052  0095               	movwf	(main@adcValue1+1)^(0+384)
  8589     0053  1283               	bcf	3,5	;RP0=0, select bank0
  8590     0054  1303               	bcf	3,6	;RP1=0, select bank0
  8591     0055  0820               	movf	?___xxtofl,w
  8592     0056  1683               	bsf	3,5	;RP0=1, select bank3
  8593     0057  1703               	bsf	3,6	;RP1=1, select bank3
  8594     0058  0094               	movwf	main@adcValue1^(0+384)
  8595     0059                     l4105:
  8596                           
  8597                           ;main1.c: 304:         if (RE2==0 && RC0== 0 ){
  8598     0059  1283               	bcf	3,5	;RP0=0, select bank0
  8599     005A  1303               	bcf	3,6	;RP1=0, select bank0
  8600     005B  1909               	btfsc	9,2	;volatile
  8601     005C  285E               	goto	u5431
  8602     005D  285F               	goto	u5430
  8603     005E                     u5431:
  8604     005E  288D               	goto	l234
  8605     005F                     u5430:
  8606     005F                     l4107:
  8607     005F  1807               	btfsc	7,0	;volatile
  8608     0060  2862               	goto	u5441
  8609     0061  2863               	goto	u5440
  8610     0062                     u5441:
  8611     0062  288D               	goto	l234
  8612     0063                     u5440:
  8613     0063                     l4109:
  8614                           
  8615                           ;main1.c: 305:         displayValue = (int)adcValue1 >> 1;
  8616     0063  1683               	bsf	3,5	;RP0=1, select bank3
  8617     0064  1703               	bsf	3,6	;RP1=1, select bank3
  8618     0065  0817               	movf	(main@adcValue1+3)^(0+384),w
  8619     0066  1283               	bcf	3,5	;RP0=0, select bank0
  8620     0067  1303               	bcf	3,6	;RP1=0, select bank0
  8621     0068  00A3               	movwf	___fltol@f1+3
  8622     0069  1683               	bsf	3,5	;RP0=1, select bank3
  8623     006A  1703               	bsf	3,6	;RP1=1, select bank3
  8624     006B  0816               	movf	(main@adcValue1+2)^(0+384),w
  8625     006C  1283               	bcf	3,5	;RP0=0, select bank0
  8626     006D  1303               	bcf	3,6	;RP1=0, select bank0
  8627     006E  00A2               	movwf	___fltol@f1+2
  8628     006F  1683               	bsf	3,5	;RP0=1, select bank3
  8629     0070  1703               	bsf	3,6	;RP1=1, select bank3
  8630     0071  0815               	movf	(main@adcValue1+1)^(0+384),w
  8631     0072  1283               	bcf	3,5	;RP0=0, select bank0
  8632     0073  1303               	bcf	3,6	;RP1=0, select bank0
  8633     0074  00A1               	movwf	___fltol@f1+1
  8634     0075  1683               	bsf	3,5	;RP0=1, select bank3
  8635     0076  1703               	bsf	3,6	;RP1=1, select bank3
  8636     0077  0814               	movf	main@adcValue1^(0+384),w
  8637     0078  1283               	bcf	3,5	;RP0=0, select bank0
  8638     0079  1303               	bcf	3,6	;RP1=0, select bank0
  8639     007A  00A0               	movwf	___fltol@f1
  8640     007B  160A  118A  256A  120A  118A  	fcall	___fltol
  8641     0080  1283               	bcf	3,5	;RP0=0, select bank0
  8642     0081  1303               	bcf	3,6	;RP1=0, select bank0
  8643     0082  0D21               	rlf	?___fltol+1,w
  8644     0083  0C21               	rrf	?___fltol+1,w
  8645     0084  1683               	bsf	3,5	;RP0=1, select bank3
  8646     0085  1703               	bsf	3,6	;RP1=1, select bank3
  8647     0086  00A7               	movwf	(main@displayValue+1)^(0+384)
  8648     0087  1283               	bcf	3,5	;RP0=0, select bank0
  8649     0088  1303               	bcf	3,6	;RP1=0, select bank0
  8650     0089  0C20               	rrf	?___fltol,w
  8651     008A  1683               	bsf	3,5	;RP0=1, select bank3
  8652     008B  1703               	bsf	3,6	;RP1=1, select bank3
  8653     008C  00A6               	movwf	main@displayValue^(0+384)
  8654     008D                     l234:	
  8655                           ;main1.c: 306:         }
  8656                           
  8657                           
  8658                           ;main1.c: 307:         float gostermeliklcd = adcValue1 / 1024 * 1000;
  8659     008D  3044               	movlw	68
  8660     008E  1283               	bcf	3,5	;RP0=0, select bank0
  8661     008F  1303               	bcf	3,6	;RP1=0, select bank0
  8662     0090  00BD               	movwf	___flmul@b+3
  8663     0091  307A               	movlw	122
  8664     0092  00BC               	movwf	___flmul@b+2
  8665     0093  3000               	movlw	0
  8666     0094  00BB               	movwf	___flmul@b+1
  8667     0095  3000               	movlw	0
  8668     0096  00BA               	movwf	___flmul@b
  8669     0097  3044               	movlw	68
  8670     0098  00A3               	movwf	___fldiv@a+3
  8671     0099  3080               	movlw	128
  8672     009A  00A2               	movwf	___fldiv@a+2
  8673     009B  3000               	movlw	0
  8674     009C  00A1               	movwf	___fldiv@a+1
  8675     009D  3000               	movlw	0
  8676     009E  00A0               	movwf	___fldiv@a
  8677     009F  1683               	bsf	3,5	;RP0=1, select bank3
  8678     00A0  1703               	bsf	3,6	;RP1=1, select bank3
  8679     00A1  0817               	movf	(main@adcValue1+3)^(0+384),w
  8680     00A2  1283               	bcf	3,5	;RP0=0, select bank0
  8681     00A3  1303               	bcf	3,6	;RP1=0, select bank0
  8682     00A4  00A7               	movwf	___fldiv@b+3
  8683     00A5  1683               	bsf	3,5	;RP0=1, select bank3
  8684     00A6  1703               	bsf	3,6	;RP1=1, select bank3
  8685     00A7  0816               	movf	(main@adcValue1+2)^(0+384),w
  8686     00A8  1283               	bcf	3,5	;RP0=0, select bank0
  8687     00A9  1303               	bcf	3,6	;RP1=0, select bank0
  8688     00AA  00A6               	movwf	___fldiv@b+2
  8689     00AB  1683               	bsf	3,5	;RP0=1, select bank3
  8690     00AC  1703               	bsf	3,6	;RP1=1, select bank3
  8691     00AD  0815               	movf	(main@adcValue1+1)^(0+384),w
  8692     00AE  1283               	bcf	3,5	;RP0=0, select bank0
  8693     00AF  1303               	bcf	3,6	;RP1=0, select bank0
  8694     00B0  00A5               	movwf	___fldiv@b+1
  8695     00B1  1683               	bsf	3,5	;RP0=1, select bank3
  8696     00B2  1703               	bsf	3,6	;RP1=1, select bank3
  8697     00B3  0814               	movf	main@adcValue1^(0+384),w
  8698     00B4  1283               	bcf	3,5	;RP0=0, select bank0
  8699     00B5  1303               	bcf	3,6	;RP1=0, select bank0
  8700     00B6  00A4               	movwf	___fldiv@b
  8701     00B7  120A  158A  201F  120A  118A  	fcall	___fldiv
  8702     00BC  1283               	bcf	3,5	;RP0=0, select bank0
  8703     00BD  1303               	bcf	3,6	;RP1=0, select bank0
  8704     00BE  0823               	movf	?___fldiv+3,w
  8705     00BF  00C1               	movwf	___flmul@a+3
  8706     00C0  0822               	movf	?___fldiv+2,w
  8707     00C1  00C0               	movwf	___flmul@a+2
  8708     00C2  0821               	movf	?___fldiv+1,w
  8709     00C3  00BF               	movwf	___flmul@a+1
  8710     00C4  0820               	movf	?___fldiv,w
  8711     00C5  00BE               	movwf	___flmul@a
  8712     00C6  120A  118A  2467  120A  118A  	fcall	___flmul
  8713     00CB  1283               	bcf	3,5	;RP0=0, select bank0
  8714     00CC  1303               	bcf	3,6	;RP1=0, select bank0
  8715     00CD  083D               	movf	?___flmul+3,w
  8716     00CE  1683               	bsf	3,5	;RP0=1, select bank1
  8717     00CF  1303               	bcf	3,6	;RP1=0, select bank1
  8718     00D0  00D8               	movwf	(main@gostermeliklcd+3)^(0+128)
  8719     00D1  1283               	bcf	3,5	;RP0=0, select bank0
  8720     00D2  1303               	bcf	3,6	;RP1=0, select bank0
  8721     00D3  083C               	movf	?___flmul+2,w
  8722     00D4  1683               	bsf	3,5	;RP0=1, select bank1
  8723     00D5  1303               	bcf	3,6	;RP1=0, select bank1
  8724     00D6  00D7               	movwf	(main@gostermeliklcd+2)^(0+128)
  8725     00D7  1283               	bcf	3,5	;RP0=0, select bank0
  8726     00D8  1303               	bcf	3,6	;RP1=0, select bank0
  8727     00D9  083B               	movf	?___flmul+1,w
  8728     00DA  1683               	bsf	3,5	;RP0=1, select bank1
  8729     00DB  1303               	bcf	3,6	;RP1=0, select bank1
  8730     00DC  00D6               	movwf	(main@gostermeliklcd+1)^(0+128)
  8731     00DD  1283               	bcf	3,5	;RP0=0, select bank0
  8732     00DE  1303               	bcf	3,6	;RP1=0, select bank0
  8733     00DF  083A               	movf	?___flmul,w
  8734     00E0  1683               	bsf	3,5	;RP0=1, select bank1
  8735     00E1  1303               	bcf	3,6	;RP1=0, select bank1
  8736     00E2  00D5               	movwf	main@gostermeliklcd^(0+128)
  8737     00E3                     l4111:
  8738                           
  8739                           ;main1.c: 312:         Lcd_Set_Cursor(2, 1);
  8740     00E3  1283               	bcf	3,5	;RP0=0, select bank0
  8741     00E4  1303               	bcf	3,6	;RP1=0, select bank0
  8742     00E5  01A4               	clrf	Lcd_Set_Cursor@b
  8743     00E6  0AA4               	incf	Lcd_Set_Cursor@b,f
  8744     00E7  3002               	movlw	2
  8745     00E8  160A  118A  231C  120A  118A  	fcall	_Lcd_Set_Cursor
  8746     00ED                     l4113:
  8747                           
  8748                           ;main1.c: 313:         Lcd_Write_String("FeedRate:");
  8749     00ED  301F               	movlw	low (STR_10| (0+32768))
  8750     00EE  1283               	bcf	3,5	;RP0=0, select bank0
  8751     00EF  1303               	bcf	3,6	;RP1=0, select bank0
  8752     00F0  00A5               	movwf	Lcd_Write_String@a
  8753     00F1  3091               	movlw	high (STR_10| (0+32768))
  8754     00F2  00A6               	movwf	Lcd_Write_String@a+1
  8755     00F3  160A  118A  22D6  120A  118A  	fcall	_Lcd_Write_String
  8756     00F8                     l4115:
  8757                           
  8758                           ;main1.c: 314:         char adcString1[4];;main1.c: 315:         sprintf(adcString1, "%0
      +                          03u", (int)gostermeliklcd);
  8759     00F8  305F               	movlw	low (STR_11| (0+32768))
  8760     00F9  1283               	bcf	3,5	;RP0=0, select bank0
  8761     00FA  1303               	bcf	3,6	;RP1=0, select bank0
  8762     00FB  00AC               	movwf	sprintf@f
  8763     00FC  3091               	movlw	high (STR_11| (0+32768))
  8764     00FD  00AD               	movwf	sprintf@f+1
  8765     00FE  1683               	bsf	3,5	;RP0=1, select bank1
  8766     00FF  1303               	bcf	3,6	;RP1=0, select bank1
  8767     0100  0858               	movf	(main@gostermeliklcd+3)^(0+128),w
  8768     0101  1283               	bcf	3,5	;RP0=0, select bank0
  8769     0102  1303               	bcf	3,6	;RP1=0, select bank0
  8770     0103  00A3               	movwf	___fltol@f1+3
  8771     0104  1683               	bsf	3,5	;RP0=1, select bank1
  8772     0105  1303               	bcf	3,6	;RP1=0, select bank1
  8773     0106  0857               	movf	(main@gostermeliklcd+2)^(0+128),w
  8774     0107  1283               	bcf	3,5	;RP0=0, select bank0
  8775     0108  1303               	bcf	3,6	;RP1=0, select bank0
  8776     0109  00A2               	movwf	___fltol@f1+2
  8777     010A  1683               	bsf	3,5	;RP0=1, select bank1
  8778     010B  1303               	bcf	3,6	;RP1=0, select bank1
  8779     010C  0856               	movf	(main@gostermeliklcd+1)^(0+128),w
  8780     010D  1283               	bcf	3,5	;RP0=0, select bank0
  8781     010E  1303               	bcf	3,6	;RP1=0, select bank0
  8782     010F  00A1               	movwf	___fltol@f1+1
  8783     0110  1683               	bsf	3,5	;RP0=1, select bank1
  8784     0111  1303               	bcf	3,6	;RP1=0, select bank1
  8785     0112  0855               	movf	main@gostermeliklcd^(0+128),w
  8786     0113  1283               	bcf	3,5	;RP0=0, select bank0
  8787     0114  1303               	bcf	3,6	;RP1=0, select bank0
  8788     0115  00A0               	movwf	___fltol@f1
  8789     0116  160A  118A  256A  120A  118A  	fcall	___fltol
  8790     011B  1283               	bcf	3,5	;RP0=0, select bank0
  8791     011C  1303               	bcf	3,6	;RP1=0, select bank0
  8792     011D  0821               	movf	?___fltol+1,w
  8793     011E  00AF               	movwf	?_sprintf+3
  8794     011F  0820               	movf	?___fltol,w
  8795     0120  00AE               	movwf	?_sprintf+2
  8796     0121  30EC               	movlw	(low (main@adcString1| 0))& (0+255)
  8797     0122  120A  158A  21EE  120A  118A  	fcall	_sprintf
  8798     0127                     l4117:
  8799                           
  8800                           ;main1.c: 316:         Lcd_Set_Cursor(2, 10);
  8801     0127  300A               	movlw	10
  8802     0128  1283               	bcf	3,5	;RP0=0, select bank0
  8803     0129  1303               	bcf	3,6	;RP1=0, select bank0
  8804     012A  00A4               	movwf	Lcd_Set_Cursor@b
  8805     012B  3002               	movlw	2
  8806     012C  160A  118A  231C  120A  118A  	fcall	_Lcd_Set_Cursor
  8807     0131                     l4119:
  8808                           
  8809                           ;main1.c: 317:         Lcd_Write_String(adcString1);
  8810     0131  30EC               	movlw	(low (main@adcString1| 0))& (0+255)
  8811     0132  1283               	bcf	3,5	;RP0=0, select bank0
  8812     0133  1303               	bcf	3,6	;RP1=0, select bank0
  8813     0134  00A5               	movwf	Lcd_Write_String@a
  8814     0135  3000               	movlw	0
  8815     0136  00A6               	movwf	Lcd_Write_String@a+1
  8816     0137  160A  118A  22D6  120A  118A  	fcall	_Lcd_Write_String
  8817     013C                     l4121:
  8818                           
  8819                           ;main1.c: 320:         Lcd_Set_Cursor(1, 1);
  8820     013C  1283               	bcf	3,5	;RP0=0, select bank0
  8821     013D  1303               	bcf	3,6	;RP1=0, select bank0
  8822     013E  01A4               	clrf	Lcd_Set_Cursor@b
  8823     013F  0AA4               	incf	Lcd_Set_Cursor@b,f
  8824     0140  3001               	movlw	1
  8825     0141  160A  118A  231C  120A  118A  	fcall	_Lcd_Set_Cursor
  8826     0146                     l4123:
  8827                           
  8828                           ;main1.c: 321:         Lcd_Write_String("RPM:");
  8829     0146  306A               	movlw	low (STR_12| (0+32768))
  8830     0147  1283               	bcf	3,5	;RP0=0, select bank0
  8831     0148  1303               	bcf	3,6	;RP1=0, select bank0
  8832     0149  00A5               	movwf	Lcd_Write_String@a
  8833     014A  3091               	movlw	high (STR_12| (0+32768))
  8834     014B  00A6               	movwf	Lcd_Write_String@a+1
  8835     014C  160A  118A  22D6  120A  118A  	fcall	_Lcd_Write_String
  8836     0151                     l4125:
  8837                           
  8838                           ;main1.c: 322:         char rpmString[5];;main1.c: 323: sprintf(rpmString, "%u%u%u.%u", 
      +                          binler,yuzler,onlar,birler);
  8839     0151  303D               	movlw	low (STR_13| (0+32768))
  8840     0152  1283               	bcf	3,5	;RP0=0, select bank0
  8841     0153  1303               	bcf	3,6	;RP1=0, select bank0
  8842     0154  00AC               	movwf	sprintf@f
  8843     0155  3091               	movlw	high (STR_13| (0+32768))
  8844     0156  00AD               	movwf	sprintf@f+1
  8845     0157  1683               	bsf	3,5	;RP0=1, select bank3
  8846     0158  1703               	bsf	3,6	;RP1=1, select bank3
  8847     0159  081B               	movf	(main@binler+1)^(0+384),w
  8848     015A  1283               	bcf	3,5	;RP0=0, select bank0
  8849     015B  1303               	bcf	3,6	;RP1=0, select bank0
  8850     015C  00AF               	movwf	?_sprintf+3
  8851     015D  1683               	bsf	3,5	;RP0=1, select bank3
  8852     015E  1703               	bsf	3,6	;RP1=1, select bank3
  8853     015F  081A               	movf	main@binler^(0+384),w
  8854     0160  1283               	bcf	3,5	;RP0=0, select bank0
  8855     0161  1303               	bcf	3,6	;RP1=0, select bank0
  8856     0162  00AE               	movwf	?_sprintf+2
  8857     0163  1683               	bsf	3,5	;RP0=1, select bank3
  8858     0164  1703               	bsf	3,6	;RP1=1, select bank3
  8859     0165  0819               	movf	(main@yuzler+1)^(0+384),w
  8860     0166  1283               	bcf	3,5	;RP0=0, select bank0
  8861     0167  1303               	bcf	3,6	;RP1=0, select bank0
  8862     0168  00B1               	movwf	?_sprintf+5
  8863     0169  1683               	bsf	3,5	;RP0=1, select bank3
  8864     016A  1703               	bsf	3,6	;RP1=1, select bank3
  8865     016B  0818               	movf	main@yuzler^(0+384),w
  8866     016C  1283               	bcf	3,5	;RP0=0, select bank0
  8867     016D  1303               	bcf	3,6	;RP1=0, select bank0
  8868     016E  00B0               	movwf	?_sprintf+4
  8869     016F  1683               	bsf	3,5	;RP0=1, select bank1
  8870     0170  1303               	bcf	3,6	;RP1=0, select bank1
  8871     0171  0869               	movf	(main@onlar+1)^(0+128),w
  8872     0172  1283               	bcf	3,5	;RP0=0, select bank0
  8873     0173  1303               	bcf	3,6	;RP1=0, select bank0
  8874     0174  00B3               	movwf	?_sprintf+7
  8875     0175  1683               	bsf	3,5	;RP0=1, select bank1
  8876     0176  1303               	bcf	3,6	;RP1=0, select bank1
  8877     0177  0868               	movf	main@onlar^(0+128),w
  8878     0178  1283               	bcf	3,5	;RP0=0, select bank0
  8879     0179  1303               	bcf	3,6	;RP1=0, select bank0
  8880     017A  00B2               	movwf	?_sprintf+6
  8881     017B  1683               	bsf	3,5	;RP0=1, select bank1
  8882     017C  1303               	bcf	3,6	;RP1=0, select bank1
  8883     017D  086B               	movf	(main@birler+1)^(0+128),w
  8884     017E  1283               	bcf	3,5	;RP0=0, select bank0
  8885     017F  1303               	bcf	3,6	;RP1=0, select bank0
  8886     0180  00B5               	movwf	?_sprintf+9
  8887     0181  1683               	bsf	3,5	;RP0=1, select bank1
  8888     0182  1303               	bcf	3,6	;RP1=0, select bank1
  8889     0183  086A               	movf	main@birler^(0+128),w
  8890     0184  1283               	bcf	3,5	;RP0=0, select bank0
  8891     0185  1303               	bcf	3,6	;RP1=0, select bank0
  8892     0186  00B4               	movwf	?_sprintf+8
  8893     0187  30DD               	movlw	(low (main@rpmString| 0))& (0+255)
  8894     0188  120A  158A  21EE  120A  118A  	fcall	_sprintf
  8895     018D                     l4127:
  8896                           
  8897                           ;main1.c: 325: Lcd_Set_Cursor(1, 5);
  8898     018D  3005               	movlw	5
  8899     018E  1283               	bcf	3,5	;RP0=0, select bank0
  8900     018F  1303               	bcf	3,6	;RP1=0, select bank0
  8901     0190  00A4               	movwf	Lcd_Set_Cursor@b
  8902     0191  3001               	movlw	1
  8903     0192  160A  118A  231C  120A  118A  	fcall	_Lcd_Set_Cursor
  8904     0197                     l4129:
  8905                           
  8906                           ;main1.c: 326: Lcd_Write_String(rpmString);
  8907     0197  30DD               	movlw	(low (main@rpmString| 0))& (0+255)
  8908     0198  1283               	bcf	3,5	;RP0=0, select bank0
  8909     0199  1303               	bcf	3,6	;RP1=0, select bank0
  8910     019A  00A5               	movwf	Lcd_Write_String@a
  8911     019B  3000               	movlw	0
  8912     019C  00A6               	movwf	Lcd_Write_String@a+1
  8913     019D  160A  118A  22D6  120A  118A  	fcall	_Lcd_Write_String
  8914     01A2                     l4131:
  8915                           
  8916                           ;main1.c: 333:  if (RC1 == 1 && (RE0 == 1 || RE2 == 1)) {
  8917     01A2  1283               	bcf	3,5	;RP0=0, select bank0
  8918     01A3  1303               	bcf	3,6	;RP1=0, select bank0
  8919     01A4  1C87               	btfss	7,1	;volatile
  8920     01A5  29A7               	goto	u5451
  8921     01A6  29A8               	goto	u5450
  8922     01A7                     u5451:
  8923     01A7  29CF               	goto	l235
  8924     01A8                     u5450:
  8925     01A8                     l4133:
  8926     01A8  1809               	btfsc	9,0	;volatile
  8927     01A9  29AB               	goto	u5461
  8928     01AA  29AC               	goto	u5460
  8929     01AB                     u5461:
  8930     01AB  29B0               	goto	l4137
  8931     01AC                     u5460:
  8932     01AC                     l4135:
  8933     01AC  1D09               	btfss	9,2	;volatile
  8934     01AD  29AF               	goto	u5471
  8935     01AE  29B0               	goto	u5470
  8936     01AF                     u5471:
  8937     01AF  29CF               	goto	l235
  8938     01B0                     u5470:
  8939     01B0                     l4137:
  8940                           
  8941                           ;main1.c: 334:             Lcd_Set_Cursor(2, 13);
  8942     01B0  300D               	movlw	13
  8943     01B1  00A4               	movwf	Lcd_Set_Cursor@b
  8944     01B2  3002               	movlw	2
  8945     01B3  160A  118A  231C  120A  118A  	fcall	_Lcd_Set_Cursor
  8946     01B8                     l4139:
  8947                           
  8948                           ;main1.c: 335:             Lcd_Write_String(" FWD LMT");
  8949     01B8  3047               	movlw	low (STR_14| (0+32768))
  8950     01B9  1283               	bcf	3,5	;RP0=0, select bank0
  8951     01BA  1303               	bcf	3,6	;RP1=0, select bank0
  8952     01BB  00A5               	movwf	Lcd_Write_String@a
  8953     01BC  3091               	movlw	high (STR_14| (0+32768))
  8954     01BD  00A6               	movwf	Lcd_Write_String@a+1
  8955     01BE  160A  118A  22D6  120A  118A  	fcall	_Lcd_Write_String
  8956     01C3                     l4141:
  8957                           
  8958                           ;main1.c: 336:             UART_Write_Text("s0\r\n");
  8959     01C3  3065               	movlw	low (STR_15| (0+32768))
  8960     01C4  1283               	bcf	3,5	;RP0=0, select bank0
  8961     01C5  1303               	bcf	3,6	;RP1=0, select bank0
  8962     01C6  00A1               	movwf	UART_Write_Text@text
  8963     01C7  3091               	movlw	high (STR_15| (0+32768))
  8964     01C8  00A2               	movwf	UART_Write_Text@text+1
  8965     01C9  160A  118A  224A  120A  118A  	fcall	_UART_Write_Text
  8966                           
  8967                           ;main1.c: 338:         } else if ((RE2 == 1 && RE0 == 1) || (RE2 == 1 && RE1 == 0)) {
  8968     01CE  2BAE               	goto	l4219
  8969     01CF                     l235:
  8970     01CF  1D09               	btfss	9,2	;volatile
  8971     01D0  29D2               	goto	u5481
  8972     01D1  29D3               	goto	u5480
  8973     01D2                     u5481:
  8974     01D2  29D7               	goto	l243
  8975     01D3                     u5480:
  8976     01D3                     l4143:
  8977     01D3  1809               	btfsc	9,0	;volatile
  8978     01D4  29D6               	goto	u5491
  8979     01D5  29D7               	goto	u5490
  8980     01D6                     u5491:
  8981     01D6  29DF               	goto	l4147
  8982     01D7                     u5490:
  8983     01D7                     l243:
  8984     01D7  1D09               	btfss	9,2	;volatile
  8985     01D8  29DA               	goto	u5501
  8986     01D9  29DB               	goto	u5500
  8987     01DA                     u5501:
  8988     01DA  2A35               	goto	l239
  8989     01DB                     u5500:
  8990     01DB                     l4145:
  8991     01DB  1889               	btfsc	9,1	;volatile
  8992     01DC  29DE               	goto	u5511
  8993     01DD  29DF               	goto	u5510
  8994     01DE                     u5511:
  8995     01DE  2A35               	goto	l239
  8996     01DF                     u5510:
  8997     01DF                     l4147:
  8998                           
  8999                           ;main1.c: 339:             Lcd_Set_Cursor(2, 13);
  9000     01DF  300D               	movlw	13
  9001     01E0  00A4               	movwf	Lcd_Set_Cursor@b
  9002     01E1  3002               	movlw	2
  9003     01E2  160A  118A  231C  120A  118A  	fcall	_Lcd_Set_Cursor
  9004     01E7                     l4149:
  9005                           
  9006                           ;main1.c: 340:             Lcd_Write_String(" FWD 1.6K");
  9007     01E7  3029               	movlw	low (STR_16| (0+32768))
  9008     01E8  1283               	bcf	3,5	;RP0=0, select bank0
  9009     01E9  1303               	bcf	3,6	;RP1=0, select bank0
  9010     01EA  00A5               	movwf	Lcd_Write_String@a
  9011     01EB  3091               	movlw	high (STR_16| (0+32768))
  9012     01EC  00A6               	movwf	Lcd_Write_String@a+1
  9013     01ED  160A  118A  22D6  120A  118A  	fcall	_Lcd_Write_String
  9014     01F2                     l4151:
  9015                           
  9016                           ;main1.c: 341:             if (displayValue < 800) {
  9017     01F2  3003               	movlw	3
  9018     01F3  1683               	bsf	3,5	;RP0=1, select bank3
  9019     01F4  1703               	bsf	3,6	;RP1=1, select bank3
  9020     01F5  0227               	subwf	(main@displayValue+1)^(0+384),w
  9021     01F6  3020               	movlw	32
  9022     01F7  1903               	skipnz
  9023     01F8  0226               	subwf	main@displayValue^(0+384),w
  9024     01F9  1803               	skipnc
  9025     01FA  29FC               	goto	u5521
  9026     01FB  29FD               	goto	u5520
  9027     01FC                     u5521:
  9028     01FC  2BAE               	goto	l4219
  9029     01FD                     u5520:
  9030     01FD                     l4153:
  9031                           
  9032                           ;main1.c: 342:                 char uartMessage[8];;main1.c: 343:                 displa
      +                          yValue += 80;
  9033     01FD  3050               	movlw	80
  9034     01FE  07A6               	addwf	main@displayValue^(0+384),f
  9035     01FF  1803               	skipnc
  9036     0200  0AA7               	incf	(main@displayValue+1)^(0+384),f
  9037     0201  3000               	movlw	0
  9038     0202  07A7               	addwf	(main@displayValue+1)^(0+384),f
  9039                           
  9040                           ;main1.c: 345:                 if (displayValue > 800) {
  9041     0203  3003               	movlw	3
  9042     0204  0227               	subwf	(main@displayValue+1)^(0+384),w
  9043     0205  3021               	movlw	33
  9044     0206  1903               	skipnz
  9045     0207  0226               	subwf	main@displayValue^(0+384),w
  9046     0208  1C03               	skipc
  9047     0209  2A0B               	goto	u5531
  9048     020A  2A0C               	goto	u5530
  9049     020B                     u5531:
  9050     020B  2A10               	goto	l4157
  9051     020C                     u5530:
  9052     020C                     l4155:
  9053                           
  9054                           ;main1.c: 346:                     displayValue = 800;
  9055     020C  3020               	movlw	32
  9056     020D  00A6               	movwf	main@displayValue^(0+384)
  9057     020E  3003               	movlw	3
  9058     020F  00A7               	movwf	(main@displayValue^(0+384)+1)
  9059     0210                     l4157:
  9060                           
  9061                           ;main1.c: 348:                 sprintf(uartMessage, "s%d\r\n", displayValue);
  9062     0210  3059               	movlw	low (STR_17| (0+32768))
  9063     0211  1283               	bcf	3,5	;RP0=0, select bank0
  9064     0212  1303               	bcf	3,6	;RP1=0, select bank0
  9065     0213  00AC               	movwf	sprintf@f
  9066     0214  3091               	movlw	high (STR_17| (0+32768))
  9067     0215  00AD               	movwf	sprintf@f+1
  9068     0216  1683               	bsf	3,5	;RP0=1, select bank3
  9069     0217  1703               	bsf	3,6	;RP1=1, select bank3
  9070     0218  0827               	movf	(main@displayValue+1)^(0+384),w
  9071     0219  1283               	bcf	3,5	;RP0=0, select bank0
  9072     021A  1303               	bcf	3,6	;RP1=0, select bank0
  9073     021B  00AF               	movwf	?_sprintf+3
  9074     021C  1683               	bsf	3,5	;RP0=1, select bank3
  9075     021D  1703               	bsf	3,6	;RP1=1, select bank3
  9076     021E  0826               	movf	main@displayValue^(0+384),w
  9077     021F  1283               	bcf	3,5	;RP0=0, select bank0
  9078     0220  1303               	bcf	3,6	;RP1=0, select bank0
  9079     0221  00AE               	movwf	?_sprintf+2
  9080     0222  30BD               	movlw	(low (main@uartMessage| 0))& (0+255)
  9081     0223  120A  158A  21EE  120A  118A  	fcall	_sprintf
  9082     0228                     l4159:
  9083                           
  9084                           ;main1.c: 349:                 UART_Write_Text(uartMessage);
  9085     0228  30BD               	movlw	(low (main@uartMessage| 0))& (0+255)
  9086     0229  1283               	bcf	3,5	;RP0=0, select bank0
  9087     022A  1303               	bcf	3,6	;RP1=0, select bank0
  9088     022B  00A1               	movwf	UART_Write_Text@text
  9089     022C  3000               	movlw	0
  9090     022D  00A2               	movwf	UART_Write_Text@text+1
  9091     022E  160A  118A  224A  120A  118A  	fcall	_UART_Write_Text
  9092     0233  2BAE               	goto	l4219
  9093     0234                     l244:	
  9094                           ;main1.c: 350:             }
  9095                           
  9096                           
  9097                           ;main1.c: 352:         } else if (RE0 == 1) {
  9098     0234  2BAE               	goto	l4219
  9099     0235                     l239:
  9100     0235  1C09               	btfss	9,0	;volatile
  9101     0236  2A38               	goto	u5541
  9102     0237  2A39               	goto	u5540
  9103     0238                     u5541:
  9104     0238  2A70               	goto	l247
  9105     0239                     u5540:
  9106     0239                     l4161:
  9107                           
  9108                           ;main1.c: 353:             Lcd_Set_Cursor(2, 13);
  9109     0239  300D               	movlw	13
  9110     023A  00A4               	movwf	Lcd_Set_Cursor@b
  9111     023B  3002               	movlw	2
  9112     023C  160A  118A  231C  120A  118A  	fcall	_Lcd_Set_Cursor
  9113     0241                     l4163:
  9114                           
  9115                           ;main1.c: 354:             Lcd_Write_String(" FWD          ");
  9116     0241  30CD               	movlw	low (STR_18| (0+32768))
  9117     0242  1283               	bcf	3,5	;RP0=0, select bank0
  9118     0243  1303               	bcf	3,6	;RP1=0, select bank0
  9119     0244  00A5               	movwf	Lcd_Write_String@a
  9120     0245  3090               	movlw	high (STR_18| (0+32768))
  9121     0246  00A6               	movwf	Lcd_Write_String@a+1
  9122     0247  160A  118A  22D6  120A  118A  	fcall	_Lcd_Write_String
  9123     024C                     l4165:
  9124                           
  9125                           ;main1.c: 355:             char combinedText[20];;main1.c: 356:             sprintf(comb
      +                          inedText, "s%d\r\n", displayValue);
  9126     024C  3059               	movlw	low (STR_17| (0+32768))
  9127     024D  1283               	bcf	3,5	;RP0=0, select bank0
  9128     024E  1303               	bcf	3,6	;RP1=0, select bank0
  9129     024F  00AC               	movwf	sprintf@f
  9130     0250  3091               	movlw	high (STR_17| (0+32768))
  9131     0251  00AD               	movwf	sprintf@f+1
  9132     0252  1683               	bsf	3,5	;RP0=1, select bank3
  9133     0253  1703               	bsf	3,6	;RP1=1, select bank3
  9134     0254  0827               	movf	(main@displayValue+1)^(0+384),w
  9135     0255  1283               	bcf	3,5	;RP0=0, select bank0
  9136     0256  1303               	bcf	3,6	;RP1=0, select bank0
  9137     0257  00AF               	movwf	?_sprintf+3
  9138     0258  1683               	bsf	3,5	;RP0=1, select bank3
  9139     0259  1703               	bsf	3,6	;RP1=1, select bank3
  9140     025A  0826               	movf	main@displayValue^(0+384),w
  9141     025B  1283               	bcf	3,5	;RP0=0, select bank0
  9142     025C  1303               	bcf	3,6	;RP1=0, select bank0
  9143     025D  00AE               	movwf	?_sprintf+2
  9144     025E  305A               	movlw	(low (main@combinedText| 0))& (0+255)
  9145     025F  120A  158A  21EE  120A  118A  	fcall	_sprintf
  9146     0264                     l4167:
  9147                           
  9148                           ;main1.c: 357:             UART_Write_Text(combinedText);
  9149     0264  305A               	movlw	(low (main@combinedText| 0))& (0+255)
  9150     0265  1283               	bcf	3,5	;RP0=0, select bank0
  9151     0266  1303               	bcf	3,6	;RP1=0, select bank0
  9152     0267  00A1               	movwf	UART_Write_Text@text
  9153     0268  3000               	movlw	0
  9154     0269  00A2               	movwf	UART_Write_Text@text+1
  9155     026A  160A  118A  224A  120A  118A  	fcall	_UART_Write_Text
  9156                           
  9157                           ;main1.c: 360:         } else if (RC2 == 1 && (RE1 == 1 || RC0 == 1)) {
  9158     026F  2BAE               	goto	l4219
  9159     0270                     l247:
  9160     0270  1D07               	btfss	7,2	;volatile
  9161     0271  2A73               	goto	u5551
  9162     0272  2A74               	goto	u5550
  9163     0273                     u5551:
  9164     0273  2A9B               	goto	l249
  9165     0274                     u5550:
  9166     0274                     l4169:
  9167     0274  1889               	btfsc	9,1	;volatile
  9168     0275  2A77               	goto	u5561
  9169     0276  2A78               	goto	u5560
  9170     0277                     u5561:
  9171     0277  2A7C               	goto	l4173
  9172     0278                     u5560:
  9173     0278                     l4171:
  9174     0278  1C07               	btfss	7,0	;volatile
  9175     0279  2A7B               	goto	u5571
  9176     027A  2A7C               	goto	u5570
  9177     027B                     u5571:
  9178     027B  2A9B               	goto	l249
  9179     027C                     u5570:
  9180     027C                     l4173:
  9181                           
  9182                           ;main1.c: 361:             Lcd_Set_Cursor(2, 13);
  9183     027C  300D               	movlw	13
  9184     027D  00A4               	movwf	Lcd_Set_Cursor@b
  9185     027E  3002               	movlw	2
  9186     027F  160A  118A  231C  120A  118A  	fcall	_Lcd_Set_Cursor
  9187     0284                     l4175:
  9188                           
  9189                           ;main1.c: 362:             Lcd_Write_String(" REW LMT");
  9190     0284  3050               	movlw	low (STR_20| (0+32768))
  9191     0285  1283               	bcf	3,5	;RP0=0, select bank0
  9192     0286  1303               	bcf	3,6	;RP1=0, select bank0
  9193     0287  00A5               	movwf	Lcd_Write_String@a
  9194     0288  3091               	movlw	high (STR_20| (0+32768))
  9195     0289  00A6               	movwf	Lcd_Write_String@a+1
  9196     028A  160A  118A  22D6  120A  118A  	fcall	_Lcd_Write_String
  9197     028F                     l4177:
  9198                           
  9199                           ;main1.c: 363:             UART_Write_Text("s0\r\n");
  9200     028F  3065               	movlw	low (STR_15| (0+32768))
  9201     0290  1283               	bcf	3,5	;RP0=0, select bank0
  9202     0291  1303               	bcf	3,6	;RP1=0, select bank0
  9203     0292  00A1               	movwf	UART_Write_Text@text
  9204     0293  3091               	movlw	high (STR_15| (0+32768))
  9205     0294  00A2               	movwf	UART_Write_Text@text+1
  9206     0295  160A  118A  224A  120A  118A  	fcall	_UART_Write_Text
  9207                           
  9208                           ;main1.c: 365:         } else if ((RC0 == 1 && RE1 == 1) || (RC0 == 1 && RE0 == 0)) {
  9209     029A  2BAE               	goto	l4219
  9210     029B                     l249:
  9211     029B  1C07               	btfss	7,0	;volatile
  9212     029C  2A9E               	goto	u5581
  9213     029D  2A9F               	goto	u5580
  9214     029E                     u5581:
  9215     029E  2AA3               	goto	l257
  9216     029F                     u5580:
  9217     029F                     l4179:
  9218     029F  1889               	btfsc	9,1	;volatile
  9219     02A0  2AA2               	goto	u5591
  9220     02A1  2AA3               	goto	u5590
  9221     02A2                     u5591:
  9222     02A2  2AAB               	goto	l4183
  9223     02A3                     u5590:
  9224     02A3                     l257:
  9225     02A3  1C07               	btfss	7,0	;volatile
  9226     02A4  2AA6               	goto	u5601
  9227     02A5  2AA7               	goto	u5600
  9228     02A6                     u5601:
  9229     02A6  2B3C               	goto	l253
  9230     02A7                     u5600:
  9231     02A7                     l4181:
  9232     02A7  1809               	btfsc	9,0	;volatile
  9233     02A8  2AAA               	goto	u5611
  9234     02A9  2AAB               	goto	u5610
  9235     02AA                     u5611:
  9236     02AA  2B3C               	goto	l253
  9237     02AB                     u5610:
  9238     02AB                     l4183:
  9239                           
  9240                           ;main1.c: 366:             Lcd_Set_Cursor(2, 13);
  9241     02AB  300D               	movlw	13
  9242     02AC  00A4               	movwf	Lcd_Set_Cursor@b
  9243     02AD  3002               	movlw	2
  9244     02AE  160A  118A  231C  120A  118A  	fcall	_Lcd_Set_Cursor
  9245     02B3                     l4185:
  9246                           
  9247                           ;main1.c: 367:             Lcd_Write_String(" REW 1.6K");
  9248     02B3  3033               	movlw	low (STR_22| (0+32768))
  9249     02B4  1283               	bcf	3,5	;RP0=0, select bank0
  9250     02B5  1303               	bcf	3,6	;RP1=0, select bank0
  9251     02B6  00A5               	movwf	Lcd_Write_String@a
  9252     02B7  3091               	movlw	high (STR_22| (0+32768))
  9253     02B8  00A6               	movwf	Lcd_Write_String@a+1
  9254     02B9  160A  118A  22D6  120A  118A  	fcall	_Lcd_Write_String
  9255     02BE                     l4187:
  9256                           
  9257                           ;main1.c: 368:             int negativeFeedValue = -displayValue;
  9258     02BE  1683               	bsf	3,5	;RP0=1, select bank3
  9259     02BF  1703               	bsf	3,6	;RP1=1, select bank3
  9260     02C0  0926               	comf	main@displayValue^(0+384),w
  9261     02C1  1283               	bcf	3,5	;RP0=0, select bank0
  9262     02C2  1303               	bcf	3,6	;RP1=0, select bank0
  9263     02C3  00D4               	movwf	??_main
  9264     02C4  1683               	bsf	3,5	;RP0=1, select bank3
  9265     02C5  1703               	bsf	3,6	;RP1=1, select bank3
  9266     02C6  0927               	comf	(main@displayValue+1)^(0+384),w
  9267     02C7  1283               	bcf	3,5	;RP0=0, select bank0
  9268     02C8  1303               	bcf	3,6	;RP1=0, select bank0
  9269     02C9  00D5               	movwf	??_main+1
  9270     02CA  0AD4               	incf	??_main,f
  9271     02CB  1903               	skipnz
  9272     02CC  0AD5               	incf	??_main+1,f
  9273     02CD  0854               	movf	??_main,w
  9274     02CE  1683               	bsf	3,5	;RP0=1, select bank3
  9275     02CF  1703               	bsf	3,6	;RP1=1, select bank3
  9276     02D0  00A2               	movwf	main@negativeFeedValue^(0+384)
  9277     02D1  1283               	bcf	3,5	;RP0=0, select bank0
  9278     02D2  1303               	bcf	3,6	;RP1=0, select bank0
  9279     02D3  0855               	movf	??_main+1,w
  9280     02D4  1683               	bsf	3,5	;RP0=1, select bank3
  9281     02D5  1703               	bsf	3,6	;RP1=1, select bank3
  9282     02D6  00A3               	movwf	(main@negativeFeedValue+1)^(0+384)
  9283     02D7                     l4189:
  9284                           
  9285                           ;main1.c: 369:             if (negativeFeedValue > -800) {
  9286     02D7  0823               	movf	(main@negativeFeedValue+1)^(0+384),w
  9287     02D8  3A80               	xorlw	128
  9288     02D9  00FF               	movwf	btemp+1
  9289     02DA  307C               	movlw	124
  9290     02DB  027F               	subwf	btemp+1,w
  9291     02DC  1D03               	skipz
  9292     02DD  2AE0               	goto	u5625
  9293     02DE  30E1               	movlw	225
  9294     02DF  0222               	subwf	main@negativeFeedValue^(0+384),w
  9295     02E0                     u5625:
  9296     02E0  1C03               	skipc
  9297     02E1  2AE3               	goto	u5621
  9298     02E2  2AE4               	goto	u5620
  9299     02E3                     u5621:
  9300     02E3  2A34               	goto	l244
  9301     02E4                     u5620:
  9302     02E4                     l4191:
  9303                           
  9304                           ;main1.c: 370:                 char uartMessage[8];;main1.c: 371:                 negati
      +                          veFeedValue -= 80;
  9305     02E4  30B0               	movlw	176
  9306     02E5  1683               	bsf	3,5	;RP0=1, select bank3
  9307     02E6  1703               	bsf	3,6	;RP1=1, select bank3
  9308     02E7  07A2               	addwf	main@negativeFeedValue^(0+384),f
  9309     02E8  1803               	skipnc
  9310     02E9  0AA3               	incf	(main@negativeFeedValue+1)^(0+384),f
  9311     02EA  30FF               	movlw	255
  9312     02EB  07A3               	addwf	(main@negativeFeedValue+1)^(0+384),f
  9313     02EC                     l4193:
  9314                           
  9315                           ;main1.c: 372:                 if (negativeFeedValue < -800) {
  9316     02EC  0823               	movf	(main@negativeFeedValue+1)^(0+384),w
  9317     02ED  3A80               	xorlw	128
  9318     02EE  00FF               	movwf	btemp+1
  9319     02EF  307C               	movlw	124
  9320     02F0  027F               	subwf	btemp+1,w
  9321     02F1  1D03               	skipz
  9322     02F2  2AF5               	goto	u5635
  9323     02F3  30E0               	movlw	224
  9324     02F4  0222               	subwf	main@negativeFeedValue^(0+384),w
  9325     02F5                     u5635:
  9326     02F5  1803               	skipnc
  9327     02F6  2AF8               	goto	u5631
  9328     02F7  2AF9               	goto	u5630
  9329     02F8                     u5631:
  9330     02F8  2AFF               	goto	l4197
  9331     02F9                     u5630:
  9332     02F9                     l4195:
  9333                           
  9334                           ;main1.c: 373:                     negativeFeedValue = -800;
  9335     02F9  30E0               	movlw	224
  9336     02FA  1683               	bsf	3,5	;RP0=1, select bank3
  9337     02FB  1703               	bsf	3,6	;RP1=1, select bank3
  9338     02FC  00A2               	movwf	main@negativeFeedValue^(0+384)
  9339     02FD  30FC               	movlw	252
  9340     02FE  00A3               	movwf	(main@negativeFeedValue^(0+384)+1)
  9341     02FF                     l4197:
  9342                           
  9343                           ;main1.c: 375:                 displayValue=-negativeFeedValue;
  9344     02FF  1683               	bsf	3,5	;RP0=1, select bank3
  9345     0300  1703               	bsf	3,6	;RP1=1, select bank3
  9346     0301  0922               	comf	main@negativeFeedValue^(0+384),w
  9347     0302  1283               	bcf	3,5	;RP0=0, select bank0
  9348     0303  1303               	bcf	3,6	;RP1=0, select bank0
  9349     0304  00D4               	movwf	??_main
  9350     0305  1683               	bsf	3,5	;RP0=1, select bank3
  9351     0306  1703               	bsf	3,6	;RP1=1, select bank3
  9352     0307  0923               	comf	(main@negativeFeedValue+1)^(0+384),w
  9353     0308  1283               	bcf	3,5	;RP0=0, select bank0
  9354     0309  1303               	bcf	3,6	;RP1=0, select bank0
  9355     030A  00D5               	movwf	??_main+1
  9356     030B  0AD4               	incf	??_main,f
  9357     030C  1903               	skipnz
  9358     030D  0AD5               	incf	??_main+1,f
  9359     030E  0854               	movf	??_main,w
  9360     030F  1683               	bsf	3,5	;RP0=1, select bank3
  9361     0310  1703               	bsf	3,6	;RP1=1, select bank3
  9362     0311  00A6               	movwf	main@displayValue^(0+384)
  9363     0312  1283               	bcf	3,5	;RP0=0, select bank0
  9364     0313  1303               	bcf	3,6	;RP1=0, select bank0
  9365     0314  0855               	movf	??_main+1,w
  9366     0315  1683               	bsf	3,5	;RP0=1, select bank3
  9367     0316  1703               	bsf	3,6	;RP1=1, select bank3
  9368     0317  00A7               	movwf	(main@displayValue+1)^(0+384)
  9369     0318                     l4199:
  9370                           
  9371                           ;main1.c: 376:                 sprintf(uartMessage, "s%d\r\n", negativeFeedValue);
  9372     0318  3059               	movlw	low (STR_17| (0+32768))
  9373     0319  1283               	bcf	3,5	;RP0=0, select bank0
  9374     031A  1303               	bcf	3,6	;RP1=0, select bank0
  9375     031B  00AC               	movwf	sprintf@f
  9376     031C  3091               	movlw	high (STR_17| (0+32768))
  9377     031D  00AD               	movwf	sprintf@f+1
  9378     031E  1683               	bsf	3,5	;RP0=1, select bank3
  9379     031F  1703               	bsf	3,6	;RP1=1, select bank3
  9380     0320  0823               	movf	(main@negativeFeedValue+1)^(0+384),w
  9381     0321  1283               	bcf	3,5	;RP0=0, select bank0
  9382     0322  1303               	bcf	3,6	;RP1=0, select bank0
  9383     0323  00AF               	movwf	?_sprintf+3
  9384     0324  1683               	bsf	3,5	;RP0=1, select bank3
  9385     0325  1703               	bsf	3,6	;RP1=1, select bank3
  9386     0326  0822               	movf	main@negativeFeedValue^(0+384),w
  9387     0327  1283               	bcf	3,5	;RP0=0, select bank0
  9388     0328  1303               	bcf	3,6	;RP1=0, select bank0
  9389     0329  00AE               	movwf	?_sprintf+2
  9390     032A  30C5               	movlw	(low (main@uartMessage_372| 0))& (0+255)
  9391     032B  120A  158A  21EE  120A  118A  	fcall	_sprintf
  9392     0330                     l4201:
  9393                           
  9394                           ;main1.c: 377:                 UART_Write_Text(uartMessage);
  9395     0330  30C5               	movlw	(low (main@uartMessage_372| 0))& (0+255)
  9396     0331  1283               	bcf	3,5	;RP0=0, select bank0
  9397     0332  1303               	bcf	3,6	;RP1=0, select bank0
  9398     0333  00A1               	movwf	UART_Write_Text@text
  9399     0334  3000               	movlw	0
  9400     0335  00A2               	movwf	UART_Write_Text@text+1
  9401     0336  160A  118A  224A  120A  118A  	fcall	_UART_Write_Text
  9402     033B  2BAE               	goto	l4219
  9403     033C                     l253:
  9404     033C  1C89               	btfss	9,1	;volatile
  9405     033D  2B3F               	goto	u5641
  9406     033E  2B40               	goto	u5640
  9407     033F                     u5641:
  9408     033F  2B90               	goto	l4213
  9409     0340                     u5640:
  9410     0340                     l4203:
  9411                           
  9412                           ;main1.c: 381:             Lcd_Set_Cursor(2, 13);
  9413     0340  300D               	movlw	13
  9414     0341  00A4               	movwf	Lcd_Set_Cursor@b
  9415     0342  3002               	movlw	2
  9416     0343  160A  118A  231C  120A  118A  	fcall	_Lcd_Set_Cursor
  9417     0348                     l4205:
  9418                           
  9419                           ;main1.c: 382:             Lcd_Write_String(" REW         ");
  9420     0348  30EB               	movlw	low (STR_24| (0+32768))
  9421     0349  1283               	bcf	3,5	;RP0=0, select bank0
  9422     034A  1303               	bcf	3,6	;RP1=0, select bank0
  9423     034B  00A5               	movwf	Lcd_Write_String@a
  9424     034C  3090               	movlw	high (STR_24| (0+32768))
  9425     034D  00A6               	movwf	Lcd_Write_String@a+1
  9426     034E  160A  118A  22D6  120A  118A  	fcall	_Lcd_Write_String
  9427     0353                     l4207:
  9428                           
  9429                           ;main1.c: 383:             int negativeDisplayValue = -displayValue;
  9430     0353  1683               	bsf	3,5	;RP0=1, select bank3
  9431     0354  1703               	bsf	3,6	;RP1=1, select bank3
  9432     0355  0926               	comf	main@displayValue^(0+384),w
  9433     0356  1283               	bcf	3,5	;RP0=0, select bank0
  9434     0357  1303               	bcf	3,6	;RP1=0, select bank0
  9435     0358  00D4               	movwf	??_main
  9436     0359  1683               	bsf	3,5	;RP0=1, select bank3
  9437     035A  1703               	bsf	3,6	;RP1=1, select bank3
  9438     035B  0927               	comf	(main@displayValue+1)^(0+384),w
  9439     035C  1283               	bcf	3,5	;RP0=0, select bank0
  9440     035D  1303               	bcf	3,6	;RP1=0, select bank0
  9441     035E  00D5               	movwf	??_main+1
  9442     035F  0AD4               	incf	??_main,f
  9443     0360  1903               	skipnz
  9444     0361  0AD5               	incf	??_main+1,f
  9445     0362  0854               	movf	??_main,w
  9446     0363  1683               	bsf	3,5	;RP0=1, select bank3
  9447     0364  1703               	bsf	3,6	;RP1=1, select bank3
  9448     0365  0090               	movwf	main@negativeDisplayValue^(0+384)
  9449     0366  1283               	bcf	3,5	;RP0=0, select bank0
  9450     0367  1303               	bcf	3,6	;RP1=0, select bank0
  9451     0368  0855               	movf	??_main+1,w
  9452     0369  1683               	bsf	3,5	;RP0=1, select bank3
  9453     036A  1703               	bsf	3,6	;RP1=1, select bank3
  9454     036B  0091               	movwf	(main@negativeDisplayValue+1)^(0+384)
  9455     036C                     l4209:
  9456                           
  9457                           ;main1.c: 384:             char combinedText[20];;main1.c: 385:             sprintf(comb
      +                          inedText, "s%d\r\n", negativeDisplayValue);
  9458     036C  3059               	movlw	low (STR_17| (0+32768))
  9459     036D  1283               	bcf	3,5	;RP0=0, select bank0
  9460     036E  1303               	bcf	3,6	;RP1=0, select bank0
  9461     036F  00AC               	movwf	sprintf@f
  9462     0370  3091               	movlw	high (STR_17| (0+32768))
  9463     0371  00AD               	movwf	sprintf@f+1
  9464     0372  1683               	bsf	3,5	;RP0=1, select bank3
  9465     0373  1703               	bsf	3,6	;RP1=1, select bank3
  9466     0374  0811               	movf	(main@negativeDisplayValue+1)^(0+384),w
  9467     0375  1283               	bcf	3,5	;RP0=0, select bank0
  9468     0376  1303               	bcf	3,6	;RP1=0, select bank0
  9469     0377  00AF               	movwf	?_sprintf+3
  9470     0378  1683               	bsf	3,5	;RP0=1, select bank3
  9471     0379  1703               	bsf	3,6	;RP1=1, select bank3
  9472     037A  0810               	movf	main@negativeDisplayValue^(0+384),w
  9473     037B  1283               	bcf	3,5	;RP0=0, select bank0
  9474     037C  1303               	bcf	3,6	;RP1=0, select bank0
  9475     037D  00AE               	movwf	?_sprintf+2
  9476     037E  30A0               	movlw	(low (main@combinedText_376| 0))& (0+255)
  9477     037F  120A  158A  21EE  120A  118A  	fcall	_sprintf
  9478     0384                     l4211:
  9479                           
  9480                           ;main1.c: 386:             UART_Write_Text(combinedText);
  9481     0384  30A0               	movlw	(low (main@combinedText_376| 0))& (0+255)
  9482     0385  1283               	bcf	3,5	;RP0=0, select bank0
  9483     0386  1303               	bcf	3,6	;RP1=0, select bank0
  9484     0387  00A1               	movwf	UART_Write_Text@text
  9485     0388  3000               	movlw	0
  9486     0389  00A2               	movwf	UART_Write_Text@text+1
  9487     038A  160A  118A  224A  120A  118A  	fcall	_UART_Write_Text
  9488                           
  9489                           ;main1.c: 387:         } else {
  9490     038F  2BAE               	goto	l4219
  9491     0390                     l4213:
  9492                           
  9493                           ;main1.c: 389:             Lcd_Set_Cursor(2, 13);
  9494     0390  300D               	movlw	13
  9495     0391  00A4               	movwf	Lcd_Set_Cursor@b
  9496     0392  3002               	movlw	2
  9497     0393  160A  118A  231C  120A  118A  	fcall	_Lcd_Set_Cursor
  9498     0398                     l4215:
  9499                           
  9500                           ;main1.c: 390:             Lcd_Write_String(" STOP       ");
  9501     0398  3007               	movlw	low (STR_26| (0+32768))
  9502     0399  1283               	bcf	3,5	;RP0=0, select bank0
  9503     039A  1303               	bcf	3,6	;RP1=0, select bank0
  9504     039B  00A5               	movwf	Lcd_Write_String@a
  9505     039C  3091               	movlw	high (STR_26| (0+32768))
  9506     039D  00A6               	movwf	Lcd_Write_String@a+1
  9507     039E  160A  118A  22D6  120A  118A  	fcall	_Lcd_Write_String
  9508     03A3                     l4217:
  9509                           
  9510                           ;main1.c: 391:             UART_Write_Text("s0\r\n");
  9511     03A3  3065               	movlw	low (STR_15| (0+32768))
  9512     03A4  1283               	bcf	3,5	;RP0=0, select bank0
  9513     03A5  1303               	bcf	3,6	;RP1=0, select bank0
  9514     03A6  00A1               	movwf	UART_Write_Text@text
  9515     03A7  3091               	movlw	high (STR_15| (0+32768))
  9516     03A8  00A2               	movwf	UART_Write_Text@text+1
  9517     03A9  160A  118A  224A  120A  118A  	fcall	_UART_Write_Text
  9518     03AE                     l4219:
  9519                           
  9520                           ;main1.c: 398:         if((RC1==1) &&( RE0==1 || RE2 )){
  9521     03AE  1283               	bcf	3,5	;RP0=0, select bank0
  9522     03AF  1303               	bcf	3,6	;RP1=0, select bank0
  9523     03B0  1C87               	btfss	7,1	;volatile
  9524     03B1  2BB3               	goto	u5651
  9525     03B2  2BB4               	goto	u5650
  9526     03B3                     u5651:
  9527     03B3  2BC0               	goto	l263
  9528     03B4                     u5650:
  9529     03B4                     l4221:
  9530     03B4  1809               	btfsc	9,0	;volatile
  9531     03B5  2BB7               	goto	u5661
  9532     03B6  2BB8               	goto	u5660
  9533     03B7                     u5661:
  9534     03B7  2BBC               	goto	l265
  9535     03B8                     u5660:
  9536     03B8                     l4223:
  9537     03B8  1D09               	btfss	9,2	;volatile
  9538     03B9  2BBB               	goto	u5671
  9539     03BA  2BBC               	goto	u5670
  9540     03BB                     u5671:
  9541     03BB  2BC0               	goto	l263
  9542     03BC                     u5670:
  9543     03BC                     l265:
  9544                           
  9545                           ;main1.c: 400:             RA4=1;
  9546     03BC  1283               	bcf	3,5	;RP0=0, select bank0
  9547     03BD  1303               	bcf	3,6	;RP1=0, select bank0
  9548     03BE  1605               	bsf	5,4	;volatile
  9549                           
  9550                           ;main1.c: 401:         }
  9551     03BF  2C61               	goto	l271
  9552     03C0                     l263:	
  9553                           ;main1.c: 402:         else if(( RC2==1) && (RE1==1 || RC0)){
  9554                           
  9555     03C0  1D07               	btfss	7,2	;volatile
  9556     03C1  2BC3               	goto	u5681
  9557     03C2  2BC4               	goto	u5680
  9558     03C3                     u5681:
  9559     03C3  2BCD               	goto	l267
  9560     03C4                     u5680:
  9561     03C4                     l4225:
  9562     03C4  1889               	btfsc	9,1	;volatile
  9563     03C5  2BC7               	goto	u5691
  9564     03C6  2BC8               	goto	u5690
  9565     03C7                     u5691:
  9566     03C7  2BBC               	goto	l265
  9567     03C8                     u5690:
  9568     03C8                     l4227:
  9569     03C8  1C07               	btfss	7,0	;volatile
  9570     03C9  2BCB               	goto	u5701
  9571     03CA  2BCC               	goto	u5700
  9572     03CB                     u5701:
  9573     03CB  2BCD               	goto	l267
  9574     03CC                     u5700:
  9575     03CC  2BBC               	goto	l265
  9576     03CD                     l267:	
  9577                           ;main1.c: 406:         else {
  9578                           
  9579                           
  9580                           ;main1.c: 407:             RA4=0;
  9581     03CD  1205               	bcf	5,4	;volatile
  9582     03CE  2C61               	goto	l271
  9583     03CF                     l217:	
  9584                           ;main1.c: 412: else if( RC3==1) {
  9585                           
  9586     03CF  1D87               	btfss	7,3	;volatile
  9587     03D0  2BD2               	goto	u5711
  9588     03D1  2BD3               	goto	u5710
  9589     03D2                     u5711:
  9590     03D2  2C29               	goto	l272
  9591     03D3                     u5710:
  9592     03D3                     l4229:
  9593                           
  9594                           ;main1.c: 417:     Lcd_Set_Cursor(1,1);
  9595     03D3  01A4               	clrf	Lcd_Set_Cursor@b
  9596     03D4  0AA4               	incf	Lcd_Set_Cursor@b,f
  9597     03D5  3001               	movlw	1
  9598     03D6  160A  118A  231C  120A  118A  	fcall	_Lcd_Set_Cursor
  9599     03DB                     l4231:
  9600                           
  9601                           ;main1.c: 418:             Lcd_Write_String("   FEED RATE ERROR       ");
  9602     03DB  3037               	movlw	low (STR_28| (0+32768))
  9603     03DC  1283               	bcf	3,5	;RP0=0, select bank0
  9604     03DD  1303               	bcf	3,6	;RP1=0, select bank0
  9605     03DE  00A5               	movwf	Lcd_Write_String@a
  9606     03DF  3090               	movlw	high (STR_28| (0+32768))
  9607     03E0  00A6               	movwf	Lcd_Write_String@a+1
  9608     03E1  160A  118A  22D6  120A  118A  	fcall	_Lcd_Write_String
  9609     03E6                     l4233:
  9610                           
  9611                           ;main1.c: 419:     Lcd_Set_Cursor(2,1);
  9612     03E6  1283               	bcf	3,5	;RP0=0, select bank0
  9613     03E7  1303               	bcf	3,6	;RP1=0, select bank0
  9614     03E8  01A4               	clrf	Lcd_Set_Cursor@b
  9615     03E9  0AA4               	incf	Lcd_Set_Cursor@b,f
  9616     03EA  3002               	movlw	2
  9617     03EB  160A  118A  231C  120A  118A  	fcall	_Lcd_Set_Cursor
  9618                           
  9619                           ;main1.c: 420:             Lcd_Write_String("   ILERLEME HATASI        ");
  9620     03F0  301C               	movlw	low (STR_29| (0+32768))
  9621     03F1  1283               	bcf	3,5	;RP0=0, select bank0
  9622     03F2  1303               	bcf	3,6	;RP1=0, select bank0
  9623     03F3  00A5               	movwf	Lcd_Write_String@a
  9624     03F4  3090               	movlw	high (STR_29| (0+32768))
  9625     03F5  00A6               	movwf	Lcd_Write_String@a+1
  9626     03F6  160A  118A  22D6  120A  118A  	fcall	_Lcd_Write_String
  9627                           
  9628                           ;main1.c: 421:      UART_Write_Text("s0\r\n");
  9629     03FB  3065               	movlw	low (STR_15| (0+32768))
  9630     03FC  1283               	bcf	3,5	;RP0=0, select bank0
  9631     03FD  1303               	bcf	3,6	;RP1=0, select bank0
  9632     03FE  00A1               	movwf	UART_Write_Text@text
  9633     03FF  3091               	movlw	high (STR_15| (0+32768))
  9634     0400  00A2               	movwf	UART_Write_Text@text+1
  9635     0401  160A  118A  224A  120A  118A  	fcall	_UART_Write_Text
  9636     0406                     l4235:
  9637                           
  9638                           ;main1.c: 422:       RA4=1;
  9639     0406  1283               	bcf	3,5	;RP0=0, select bank0
  9640     0407  1303               	bcf	3,6	;RP1=0, select bank0
  9641     0408  1605               	bsf	5,4	;volatile
  9642     0409                     l4237:
  9643                           
  9644                           ;main1.c: 423:       _delay((unsigned long)((1000)*(4000000/4000.0)));
  9645     0409  3006               	movlw	6
  9646     040A  1283               	bcf	3,5	;RP0=0, select bank0
  9647     040B  1303               	bcf	3,6	;RP1=0, select bank0
  9648     040C  00D6               	movwf	??_main+2
  9649     040D  3013               	movlw	19
  9650     040E  00D5               	movwf	??_main+1
  9651     040F  30AD               	movlw	173
  9652     0410  00D4               	movwf	??_main
  9653     0411                     u5797:
  9654     0411  0BD4               	decfsz	??_main,f
  9655     0412  2C11               	goto	u5797
  9656     0413  0BD5               	decfsz	??_main+1,f
  9657     0414  2C11               	goto	u5797
  9658     0415  0BD6               	decfsz	??_main+2,f
  9659     0416  2C11               	goto	u5797
  9660     0417                     l4239:
  9661                           
  9662                           ;main1.c: 424:       RA4=0;
  9663     0417  1283               	bcf	3,5	;RP0=0, select bank0
  9664     0418  1303               	bcf	3,6	;RP1=0, select bank0
  9665     0419  1205               	bcf	5,4	;volatile
  9666     041A                     l4241:
  9667                           
  9668                           ;main1.c: 425:       _delay((unsigned long)((3000)*(4000000/4000.0)));
  9669     041A  3010               	movlw	16
  9670     041B  1283               	bcf	3,5	;RP0=0, select bank0
  9671     041C  1303               	bcf	3,6	;RP1=0, select bank0
  9672     041D  00D6               	movwf	??_main+2
  9673     041E  3039               	movlw	57
  9674     041F  00D5               	movwf	??_main+1
  9675     0420  300D               	movlw	13
  9676     0421  00D4               	movwf	??_main
  9677     0422                     u5807:
  9678     0422  0BD4               	decfsz	??_main,f
  9679     0423  2C22               	goto	u5807
  9680     0424  0BD5               	decfsz	??_main+1,f
  9681     0425  2C22               	goto	u5807
  9682     0426  0BD6               	decfsz	??_main+2,f
  9683     0427  2C22               	goto	u5807
  9684     0428  2BBC               	goto	l265
  9685     0429                     l272:	
  9686                           ;main1.c: 431:      else if (RD0 == 1 ){
  9687                           
  9688     0429  1C08               	btfss	8,0	;volatile
  9689     042A  2C2C               	goto	u5721
  9690     042B  2C2D               	goto	u5720
  9691     042C                     u5721:
  9692     042C  2C61               	goto	l271
  9693     042D                     u5720:
  9694     042D                     l4245:
  9695                           
  9696                           ;main1.c: 432:     UART_Write_Text("s0\r\n");
  9697     042D  3065               	movlw	low (STR_15| (0+32768))
  9698     042E  00A1               	movwf	UART_Write_Text@text
  9699     042F  3091               	movlw	high (STR_15| (0+32768))
  9700     0430  00A2               	movwf	UART_Write_Text@text+1
  9701     0431  160A  118A  224A  120A  118A  	fcall	_UART_Write_Text
  9702     0436                     l4247:
  9703                           
  9704                           ;main1.c: 433:     Lcd_Set_Cursor(1,1);
  9705     0436  1283               	bcf	3,5	;RP0=0, select bank0
  9706     0437  1303               	bcf	3,6	;RP1=0, select bank0
  9707     0438  01A4               	clrf	Lcd_Set_Cursor@b
  9708     0439  0AA4               	incf	Lcd_Set_Cursor@b,f
  9709     043A  3001               	movlw	1
  9710     043B  160A  118A  231C  120A  118A  	fcall	_Lcd_Set_Cursor
  9711     0440                     l4249:
  9712                           
  9713                           ;main1.c: 434:             Lcd_Write_String("   ROTATION ERROR      ");
  9714     0440  3069               	movlw	low (STR_32| (0+32768))
  9715     0441  1283               	bcf	3,5	;RP0=0, select bank0
  9716     0442  1303               	bcf	3,6	;RP1=0, select bank0
  9717     0443  00A5               	movwf	Lcd_Write_String@a
  9718     0444  3090               	movlw	high (STR_32| (0+32768))
  9719     0445  00A6               	movwf	Lcd_Write_String@a+1
  9720     0446  160A  118A  22D6  120A  118A  	fcall	_Lcd_Write_String
  9721                           
  9722                           ;main1.c: 435:     Lcd_Set_Cursor(2,1);
  9723     044B  1283               	bcf	3,5	;RP0=0, select bank0
  9724     044C  1303               	bcf	3,6	;RP1=0, select bank0
  9725     044D  01A4               	clrf	Lcd_Set_Cursor@b
  9726     044E  0AA4               	incf	Lcd_Set_Cursor@b,f
  9727     044F  3002               	movlw	2
  9728     0450  160A  118A  231C  120A  118A  	fcall	_Lcd_Set_Cursor
  9729     0455                     l4251:
  9730                           
  9731                           ;main1.c: 436:             Lcd_Write_String("   DONME HATASI        ");
  9732     0455  3051               	movlw	low (STR_33| (0+32768))
  9733     0456  1283               	bcf	3,5	;RP0=0, select bank0
  9734     0457  1303               	bcf	3,6	;RP1=0, select bank0
  9735     0458  00A5               	movwf	Lcd_Write_String@a
  9736     0459  3090               	movlw	high (STR_33| (0+32768))
  9737     045A  00A6               	movwf	Lcd_Write_String@a+1
  9738     045B  160A  118A  22D6  120A  118A  	fcall	_Lcd_Write_String
  9739     0460  2C06               	goto	l4235
  9740     0461                     l271:
  9741     0461  160A  118A  2FAE   	goto	l3999
  9742     0464                     l216:
  9743     0464  120A  118A  280E   	ljmp	start
  9744     0467                     __end_of_main:

Data Sizes:
    Strings     342
    Constant    10
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      11
    BANK0            80     78      78
    BANK1            80     80      80
    BANK3            96     24      32
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_25(CODE[6]), STR_23(CODE[6]), STR_19(CODE[6]), STR_17(CODE[6]), 
		 -> STR_13(CODE[10]), STR_11(CODE[6]), STR_8(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> main@combinedText_376(BANK1[20]), main@uartMessage_372(BANK1[8]), main@combinedText(BANK0[20]), main@uartMessage(BANK1[8]), 
		 -> main@rpmString(BANK1[5]), main@adcString1(BANK1[4]), main@lcdText(BANK1[9]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    incrementTime@time	PTR struct Time size(1) Largest target is 8
		 -> currentTime(BANK3[8]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 27
		 -> STR_33(CODE[24]), STR_32(CODE[24]), STR_29(CODE[27]), STR_28(CODE[26]), 
		 -> STR_26(CODE[13]), STR_24(CODE[14]), STR_22(CODE[10]), STR_20(CODE[9]), 
		 -> STR_18(CODE[15]), STR_16(CODE[10]), STR_14(CODE[9]), main@rpmString(BANK1[5]), 
		 -> STR_12(CODE[5]), main@adcString1(BANK1[4]), STR_10(CODE[10]), STR_9(CODE[3]), 
		 -> main@lcdText(BANK1[9]), STR_7(CODE[21]), STR_6(CODE[20]), STR_5(CODE[3]), 
		 -> STR_4(CODE[15]), STR_3(CODE[16]), STR_2(CODE[14]), STR_1(CODE[19]), 

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 20
		 -> STR_31(CODE[5]), STR_30(CODE[5]), STR_27(CODE[5]), main@combinedText_376(BANK1[20]), 
		 -> main@uartMessage_372(BANK1[8]), STR_21(CODE[5]), main@combinedText(BANK0[20]), main@uartMessage(BANK1[8]), 
		 -> STR_15(CODE[5]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _timer_isr in COMMON

    _timer_isr->i1_writeEEPROM

Critical Paths under _main in BANK0

    _main->___flmul
    _yagBakim->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _sprintf->___lwmod
    ___wmul->_readEEPROM
    ___lwmod->___lwdiv
    ___flmul->___fldiv
    ___awmod->___fltol
    ___awdiv->___fltol
    ___awdiv->___wmul
    _UART_Write_Text->_UART_Write
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _timer_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer_isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer_isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               132   132      0   28422
                                             52 BANK0     26    26      0
                                              0 BANK1     80    80      0
                                              0 BANK3     24    24      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                    _UART_Initialize
                    _UART_Write_Text
                            ___awdiv
                            ___awmod
                            ___fldiv
                            ___flmul
                            ___fltol
                             ___wmul
                           ___xxtofl
                         _readEEPROM
                            _sprintf
                        _writeEEPROM
                           _yagBakim
 ---------------------------------------------------------------------------------
 (1) _yagBakim                                             2     2      0    5472
                                             12 BANK0      2     2      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2    2544
                                              5 BANK0      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     254
                                              1 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1    2705
                                              4 BANK0      6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _writeEEPROM                                          4     0      4     682
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             31    21     10    4245
                                             12 BANK0     23    13     10
                            ___fltol (ARG)
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1036
                                              4 BANK0      6     2      4
                         _readEEPROM (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     412
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     421
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _readEEPROM                                           4     2      2     630
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     550
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     685
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2721
                                             26 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1425
                                              0 BANK0     26    18      8
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4    1153
                                             10 BANK0      6     2      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     985
                                             10 BANK0      8     4      4
                            ___fltol (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      7     5      2     971
                                              1 BANK0      7     5      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                              4 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     155
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0     124
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _timer_isr                                            3     3      0     505
                                              4 COMMON     3     3      0
                      _incrementTime
                      i1_writeEEPROM
 ---------------------------------------------------------------------------------
 (6) i1_writeEEPROM                                        4     0      4     252
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (6) _incrementTime                                        3     3      0     253
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _UART_Initialize
   _UART_Write_Text
     _UART_Write
   ___awdiv
     ___fltol (ARG)
     ___wmul (ARG)
       _readEEPROM (ARG)
   ___awmod
     ___fltol (ARG)
   ___fldiv
   ___flmul
     __Umul8_16
     ___fldiv (ARG)
     ___xxtofl (ARG)
   ___fltol
   ___wmul
   ___xxtofl
   _readEEPROM
   _sprintf
     ___fltol (ARG)
     ___lwdiv (ARG)
     ___lwmod (ARG)
       ___lwdiv (ARG)
     ___wmul (ARG)
     _isdigit (ARG)
   _writeEEPROM
   _yagBakim
     _Lcd_Clear
     _Lcd_Set_Cursor
     _Lcd_Write_String

 _timer_isr (ROOT)
   _incrementTime
   i1_writeEEPROM

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      C9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60     18      20       9       33.3%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      C9      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Oct 11 12:16:10 2023

            ___fldiv@aexp 0039              ___fldiv@bexp 0038                         pc 0002  
            ___fldiv@sign 0031                        l13 1184                        l16 1F7A  
                      l25 128F                        l19 1F84                        _RD 0C60  
                      _WR 0C61              ___awdiv@sign 002F                        fsr 0004  
     ___wmul@multiplicand 0026       __Umul8_16@word_mpld 0026                       l140 1FF0  
                     l141 1FF1                       l213 0C3D                       l142 1FF7  
                     l143 1FF8                       l231 0FFA                       l144 1FFE  
                     l152 1F76                       l216 0464                       l161 1425  
                     l225 0D77                       l217 03CF                       l146 1FFF  
                     l138 1FE9                       l170 131B                       l234 008D  
                     l139 1FEA                       l243 01D7                       l235 01CF  
                     l412 0BE4                       l164 120D                       l244 0234  
                     l228 0E00                       l149 1FDF                       l253 033C  
                     l190 1FAD                       l158 1367                       l175 07FD  
                     l271 0461                       l263 03C0                       l247 0270  
                     l239 0235                       l416 1193                       l184 081A  
                     l272 0429                       l265 03BC                       l257 02A3  
                     l249 029B                       l602 15E1                       l418 11AB  
                     l187 081E                       l267 03CD                       l612 15E1  
                     l374 0A08                       l609 15CC                       l386 0AA7  
                     l811 071B                       l395 0B0F                       l388 0A7D  
                     l805 07AB                       l582 13C2                       l824 11C2  
                     l569 14F5                       l826 11D4                       l851 169B  
                     l781 0967                       l765 0875                       l862 1665  
                     l767 09ED                       l863 1671                       l688 12D5  
                     l849 1606                       l698 1249                       l787 09D9  
                     l869 1F98                       _GIE 005F                       _RB0 0030  
                     _RB1 0031                       _RB2 0032                       _RA4 002C  
                     _RC0 0038                       _RB3 0033                       _RC1 0039  
                     _RB4 0034                       _RC2 003A                       _RD0 0040  
                     _RB5 0035                       _RC3 003B                       _RE0 0048  
                     _RE1 0049                       _RE2 004A                       fsr0 0004  
                     indf 0000              ___awmod@sign 002F              ___flmul@aexp 004C  
            ___flmul@bexp 004D              ___flmul@sign 0047              ___flmul@temp 0052  
            ___flmul@prod 004E               main@lcdText 00B4              ___fltol@exp1 0029  
                    l3001 1673                      l3003 1689                      l3005 168E  
                    l3007 1692                      l3009 1693                      l4011 17E9  
                    l2421 1F9F                      l4101 0FF7                      l4021 0BF7  
                    l4013 17F1                      l4005 17B2                      l2351 11B8  
                    l4111 00E3                      l4103 0023                      l4031 0C17  
                    l4023 0BFB                      l4015 0BE5                      l4007 17CF  
                    l2353 11BC                      l4201 0330                      l4121 013C  
                    l4113 00ED                      l4105 0059                      l4041 0C5E  
                    l4033 0C2C                      l4025 0BFF                      l4017 0BED  
                    l4009 17D5                      l2355 11CB                      l2347 11AF  
                    l2419 1F99                      l4211 0384                      l4203 0340  
                    l4131 01A2                      l4123 0146                      l4115 00F8  
                    l4107 005F                      l4051 0CDA                      l4043 0C97  
                    l4019 0BF3                      l4027 0C04                      l2701 0853  
                    l2357 11D0                      l2349 11B1                      l3501 11F7  
                    l4221 03B4                      l4205 0348                      l4213 0390  
                    l4141 01C3                      l4133 01A8                      l4125 0151  
                    l4117 0127                      l4109 0063                      l4061 0D33  
                    l4053 0CE5                      l4045 0CBB                      l4037 0C45  
                    l4029 0C0C                      l3511 1F7A                      l2711 086A  
                    l2703 0857                      l4303 0A1F                      l3503 11FA  
                    l4231 03DB                      l4223 03B8                      l4215 0398  
                    l4207 0353                      l4151 01F2                      l4143 01D3  
                    l4135 01AC                      l4127 018D                      l4119 0131  
                    l4071 0D6D                      l4063 0D53                      l4055 0D04  
                    l4047 0CC5                      l4039 0C49                      l3513 1F80  
                    l2801 09BD                      l2721 088D                      l2713 086B  
                    l2705 0858                      l2641 1575                      l3601 1219  
                    l4305 0A99                      l3521 1331                      l3505 1200  
                    l4241 041A                      l4233 03E6                      l4225 03C4  
                    l4217 03A3                      l4209 036C                      l4161 0239  
                    l4153 01FD                      l4145 01DB                      l4137 01B0  
                    l4129 0197                      l4081 0DFD                      l4073 0D74  
                    l4065 0D5C                      l4057 0D0C                      l4049 0CD0  
                    l2811 09E1                      l2803 09CC                      l2731 08A4  
                    l2707 085D                      l2715 086D                      l2651 159A  
                    l3611 1238                      l3603 1220                      l3515 1F6A  
                    l3531 1356                      l3523 1334                      l3507 1203  
                    l4251 0455                      l4235 0406                      l4227 03C8  
                    l4171 0278                      l4163 0241                      l4155 020C  
                    l4147 01DF                      l4219 03AE                      l4139 01B8  
                    l4091 0ED7                      l4083 0E04                      l4075 0D7B  
                    l4067 0D62                      l4059 0D2B                      l3621 1181  
                    l2813 09E3                      l2805 09D0                      l2741 08D0  
                    l2733 08B6                      l2717 087D                      l2725 0896  
                    l2709 0862                      l2901 0679                      l2661 15A8  
                    l2653 159C                      l2645 157E                      l3613 123F  
                    l3605 1224                      l3701 0A64                      l3533 1359  
                    l3525 133A                      l3517 131F                      l3509 120A  
                    l3541 12F7                      l4245 042D                      l4237 0409  
                    l4229 03D3                      l4181 02A7                      l4173 027C  
                    l4165 024C                      l4157 0210                      l4149 01E7  
                    l4093 0F34                      l4085 0E0A                      l4077 0DF0  
                    l4069 0D67                      l3471 1FE3                      l3631 13C3  
                    l3623 124A                      l2815 09E7                      l2807 09D8  
                    l2743 08D5                      l2751 08F5                      l2735 08BE  
                    l2727 089B                      l2719 0889                      l2911 06E7  
                    l2903 069F                      l2831 0475                      l2823 0467  
                    l2671 15C1                      l2663 15B1                      l2655 15A0  
                    l2647 1591                      l2639 156A                      l3607 1228  
                    l3615 1245                      l3551 1F95                      l3711 0AB3  
                    l3703 0A6A                      l3535 135F                      l3519 1324  
                    l3527 1343                      l3543 12FF                      l4247 0436  
                    l4239 0417                      l4191 02E4                      l4183 02AB  
                    l4175 0284                      l4167 0264                      l4159 0228  
                    l4095 0FB0                      l4087 0E5E                      l4079 0DF6  
                    l3473 1FE7                      l3481 1FC7                      l3633 13C9  
                    l3625 124F                      l3801 148D                      l2809 09DD  
                    l2761 0920                      l2753 0907                      l2745 08E7  
                    l2737 08C6                      l2681 0828                      l2921 06FF  
                    l2913 06EB                      l2905 06C7                      l2841 0491  
                    l2833 047A                      l2825 046C                      l2673 15D1  
                    l2665 15BA                      l2649 1592                      l3609 1232  
                    l3561 118D                      l3553 1F97                      l3545 1F88  
                    l3721 0ACD                      l3713 0AB7                      l3529 1349  
                    l3537 12D6                      l3641 07AC                      l4249 0440  
                    l4193 02EC                      l4185 02B3                      l4177 028F  
                    l4169 0274                      l4097 0FEA                      l4089 0E9D  
                    l3475 1FEE                      l3483 1FC8                      l3635 13D4  
                    l3619 1175                      l3627 126B                      l3811 149F  
                    l3803 1490                      l2771 0938                      l2763 0928  
                    l2755 0908                      l2747 08EB                      l2739 08CE  
                    l2691 083F                      l2683 082C                      l2931 0720  
                    l2923 0700                      l2915 06EC                      l2907 06D0  
                    l2851 04A4                      l2843 0496                      l2835 047F  
                    l2827 0470                      l2675 15D6                      l3571 1290  
                    l3563 119A                      l3547 1F89                      l3715 0ABB  
                    l3723 0AD1                      l3707 0A7F                      l3491 11D8  
                    l3539 12DB                      l3651 07BF                      l3643 07B1  
                    l4195 02F9                      l4187 02BE                      l4179 029F  
                    l4099 0FF0                      l3477 1FF5                      l3485 1FCE  
                    l3637 13E5                      l3629 1273                      l3821 14B3  
                    l3813 14A4                      l3805 1494                      l2781 0950  
                    l2773 0941                      l2765 092A                      l2757 0916  
                    l2749 08EC                      l2693 0840                      l2685 082D  
                    l2677 081F                      l2933 0725                      l2941 0756  
                    l2925 0704                      l2917 06F5                      l2909 06DE  
                    l2861 04C0                      l2853 04A9                      l2845 049A  
                    l2837 0487                      l2829 0474                      l3581 12A8  
                    l3573 1294                      l3565 11A1                      l3557 1185  
                    l3549 1F8F                      l3741 0B09                      l3733 0AF3  
                    l3717 0ABF                      l3709 0AAB                      l3493 11DE  
                    l3661 07F5                      l3653 07CA                      l4197 02FF  
                    l4189 02D7                      l3901 16A7                      l3479 1FFC  
                    l3487 1FD1                      l3639 13EB                      l3831 14D9  
                    l3823 14BA                      l3815 14A8                      l3807 1499  
                    l2791 097F                      l2783 0964                      l2767 0933  
                    l2775 0947                      l2759 091A                      l2687 0832  
                    l2695 0842                      l2679 0824                      l2951 0789  
                    l2943 0763                      l2935 0733                      l2927 0718  
                    l2919 06FB                      l2871 04E9                      l2863 04C5  
                    l2855 04B1                      l2847 049E                      l2839 0489  
                    l3591 12CB                      l3583 12AC                      l3575 129A  
                    l3567 11A7                      l3559 1189                      l3751 0B34  
                    l3743 0B1A                      l3735 0AF7                      l3719 0AC5  
                    l3671 0817                      l3495 11DF                      l3663 07FA  
                    l3655 07DF                      l4199 0318                      l3911 16B0  
                    l3903 16A8                      l3489 1FDC                      l3841 14F1  
                    l3833 14DA                      l3825 14BE                      l3817 14AA  
                    l3809 149B                      l2793 0983                      l2777 094B  
                    l2769 0937                      l2697 084A                      l2689 0837  
                    l2961 07A3                      l2953 0795                      l2945 076E  
                    l2937 0737                      l2881 0582                      l2873 0504  
                    l2857 04B3                      l2849 049F                      l3585 12BD  
                    l3577 129D                      l3593 12D1                      l3761 0B4C  
                    l3753 0B39                      l3745 0B26                      l3737 0AFD  
                    l3729 0AD3                      l3681 09FA                      l3673 0818  
                    l3665 0803                      l3497 11ED                      l3657 07E2  
                    l3649 07B5                      l3921 16B7                      l3913 16B3  
                    l3905 16A9                      l3835 14E1                      l3827 14C2  
                    l3819 14B0                      l3851 1374                      l2795 099C  
                    l2787 096C                      l2779 094C                      l2699 084F  
                    l2955 0799                      l2947 077D                      l2939 0750  
                    l2891 05E1                      l2883 058B                      l2875 0520  
                    l2867 04CE                      l2859 04BB                      l2971 15FE  
                    l3587 12C3                      l3579 12A4                      l3771 0B74  
                    l3755 0B3D                      l3763 0B59                      l3747 0B2A  
                    l3739 0B03                      l3691 0A0F                      l3683 09FF  
                    l3675 0819                      l3667 080F                      l3499 11F0  
                    l3659 07E8                      l3931 16E1                      l3923 16B8  
                    l3915 16B4                      l3907 16AA                      l3829 14D3  
                    l3837 14E7                      l3861 1388                      l3853 1376  
                    l3845 1368                      l2789 0971                      l2797 09A2  
                    l2957 079A                      l2949 0787                      l2893 05F8  
                    l2885 0599                      l2877 054A                      l2869 04DC  
                    l2981 161E                      l2973 160E                      l2965 15E5  
                    l3589 12C4                      l3597 120E                      l3781 0BB8  
                    l3773 0B7A                      l3765 0B5F                      l3757 0B43  
                    l3749 0B2E                      l3693 0A24                      l3685 0A04  
                    l3677 09F1                      l3669 0812                      l3941 172A  
                    l3933 16F8                      l3925 16BA                      l3917 16B5  
                    l3909 16AB                      l3839 14EC                      l3871 13A7  
                    l3863 138F                      l3855 137A                      l3847 136B  
                    l2799 09AF                      l2959 079F                      l2895 0615  
                    l2887 05B6                      l2879 0566                      l2991 1649  
                    l2983 1627                      l2967 15EA                      l3599 1216  
                    l3783 0BBD                      l3775 0B7F                      l3767 0B64  
                    l3759 0B48                      l3695 0A36                      l3687 0A09  
                    l3679 09F4                      l3951 172F                      l3943 172B  
                    l3935 170F                      l3927 16C9                      l3919 16B6  
                    l3873 13AE                      l3865 1393                      l3857 137F  
                    l3849 136F                      l2897 0640                      l2889 05C4  
                    l2993 1650                      l2985 162E                      l2977 1617  
                    l2969 15EE                      l3785 0BC1                      l3769 0B68  
                    l3777 0B83                      l3697 0A3A                      l3961 1754  
                    l3953 1730                      l3945 172C                      l3937 1726  
                    l3929 16CC                      l3867 1397                      l3859 1385  
                    l3875 13B4                      l2899 064E                      l2995 165B  
                    l2987 1632                      l2979 161A                      l3779 0B86  
                    l3699 0A4F                      l3787 0BCA                      l3971 1787  
                    l3963 175F                      l3955 1735                      l3947 172D  
                    l3939 1729                      l3891 16A2                      l3883 169C  
                    l3877 13B9                      l3869 13A1                      l2997 165F  
                    l2989 1640                      l3789 0BE0                      l3981 179B  
                    l3973 178B                      l3965 1769                      l3957 173F  
                    l3949 172E                      l3893 16A3                      l3885 169F  
                    l3879 13BE                      l2999 1669                      l3991 17A5  
                    l3983 17A1                      l3975 1790                      l3967 1774  
                    l3959 174A                      l3895 16A4                      l3887 16A0  
                    l3993 17A6                      l3985 17A2                      l3977 1794  
                    l3969 1782                      l3897 16A5                      l3889 16A1  
                    l3995 17A7                      l3987 17A3                      l3979 1797  
                    l3899 16A6                      l3997 17A8                      l3989 17A4  
                    l3999 17AE                      STR_1 10AA                      STR_2 10F9  
                    STR_3 10BD                      STR_4 10DC                      STR_5 116F  
                    STR_6 1096                      STR_7 1081                      STR_8 1114  
                    STR_9 10D9                      _T0IF 005A                      u3110 15B9  
                    u3111 15B8                      u3200 085D                      u3120 15C0  
                    u3201 085C                      u3121 15BF                      u3105 15A9  
                    u3210 0862                      u3211 0861                      u3300 0920  
                    u3220 087D                      u3140 15D1                      u3060 1575  
                    u3301 091F                      u3221 087C                      u3141 15D0  
                    u3061 1574                      u3310 0928                      u3230 089B  
                    u3150 15D6                      u3070 158C                      u3311 0927  
                    u3231 089A                      u3151 15D5                      u3135 15C3  
                    u3400 0983                      u3240 08D5                      u3160 082C  
                    u3080 15A0                      u5000 0B5F                      u3401 0982  
                    u3241 08D4                      u3161 082B                      u3081 159F  
                    u5001 0B5E                      u3410 0992                      u3330 0937  
                    u3170 0832                      u3090 15A7                      u5010 0B74  
                    u3331 0936                      u3171 0831                      u3091 15A6  
                    u3075 1587                      u5011 0B73                      u3420 09AF  
                    u3180 0837                      u3500 04A9                      u5020 0B7A  
                    u3421 09AE                      u3325 092C                      u3181 0836  
                    u3501 04A8                      u5021 0B79                      u5110 14D3  
                    u3430 09CC                      u3350 094B                      u3270 08EB  
                    u3190 0857                      u3510 04C0                      u5030 0BCA  
                    u5111 14D2                      u3431 09CB                      u3415 098D  
                    u3351 094A                      u3271 08EA                      u3255 08D7  
                    u3191 0856                      u3511 04BF                      u5031 0BC9  
                    u5200 13A1                      u3440 09E1                      u3360 0950  
                    u3520 04C5                      u5040 0BE0                      u5105 14C3  
                    u5201 13A0                      u3441 09E0                      u3425 09AB  
                    u3361 094F                      u3345 093A                      u3265 08E0  
                    u3521 04C4                      u5041 0BDF                      u5130 14E7  
                    u5050 1494                      u3370 0964                      u3290 0907  
                    u2570 11BC                      u3450 0474                      u5131 14E6  
                    u5115 14CF                      u5051 1493                      u3435 09C8  
                    u3371 0963                      u3291 0906                      u2571 11BB  
                    u3611 0607                      u3531 0512                      u3451 0473  
                    u4500 1FEE                      u5140 14EC                      u5060 149F  
                    u5220 13B4                      u3380 096B                      u3700 06EB  
                    u3612 060E                      u3532 0519                      u3460 047A  
                    u5300 0BFF                      u4501 1FED                      u5141 14EB  
                    u5125 14DB                      u5061 149E                      u5221 13B3  
                    u5205 139D                      u3381 096A                      u3285 08EE  
                    u3701 06EA                      u3621 0632                      u3613 0615  
                    u3605 05E3                      u3541 052E                      u3533 0520  
                    u3461 0479                      u5301 0BFE                      u4510 1FF5  
                    u5070 14B0                      u5230 13B9                      u5150 136F  
                    u3390 0971                      u2590 11D0                      u3622 0639  
                    u3542 0535                      u3470 047F                      u5310 0C45  
                    u4511 1FF4                      u5071 14AF                      u5231 13B8  
                    u5215 13A8                      u5151 136E                      u3391 0970  
                    u3295 0903                      u2591 11CF                      u3631 065D  
                    u3623 0640                      u3551 0558                      u3543 053C  
                    u3471 047E                      u5311 0C42                      u4520 1FFC  
                    u5160 137A                      u3800 077D                      u3720 06FF  
                    u3640 0685                      u3632 0664                      u3552 055F  
                    u3480 049E                      u4600 1309                      u5400 0D7B  
                    u5320 0C49                      u5240 17D5                      u4521 1FFB  
                    u5161 1379                      u2585 11C3                      u3801 077C  
                    u3721 06FE                      u3633 066B                      u3561 0574  
                    u3553 0566                      u3481 049D                      u5401 0D7A  
                    u5321 0C48                      u5241 17D4                      u5090 14C2  
                    u5170 1385                      u3810 0799                      u3730 0704  
                    u3562 057B                      u3490 04A4                      u4610 131B  
                    u5410 0E04                      u5330 0D04                      u5250 0BE5  
                    u5091 14C1                      u5171 1384                      u3811 0798  
                    u3731 0703                      u3715 06EE                      u3651 0691  
                    u3563 0582                      u3491 04A3                      u4611 131A  
                    u5411 0E03                      u5331 0D03                      u5251 17FF  
                    u4540 1F80                      u3740 0718                      u3660 06AD  
                    u3652 0698                      u3900 165F                      u3820 15EA  
                    u4700 12AC                      u4620 1F8F                      u5500 01DB  
                    u5420 0023                      u5340 0D0C                      u5260 0BED  
                    u4541 1F7F                      u5085 14B4                      u3805 0779  
                    u3741 0717                      u3653 069F                      u3645 0680  
                    u3581 05A8                      u3901 165E                      u3821 15E9  
                    u4701 12AB                      u4621 1F8E                      u5501 01DA  
                    u5421 0FFF                      u5341 0D0B                      u5261 0BEC  
                    u5190 1397                      u3750 071F                      u3582 05AF  
                    u3910 1665                      u3830 15EE                      u4630 1F95  
                    u4550 1324                      u5510 01DF                      u5430 005F  
                    u5350 0D2B                      u5270 0BF3                      u5191 1396  
                    u3751 071E                      u3671 06B9                      u3591 05D3  
                    u3583 05B6                      u3575 0584                      u3911 1664  
                    u3831 15ED                      u4631 1F94                      u4551 1323  
                    u4535 11E2                      u5511 01DE                      u5431 005E  
                    u5351 0D2A                      u5271 0BF2                      u5255 17FA  
                    u3760 0725                      u3672 06C0                      u3592 05DA  
                    u3920 1669                      u3840 160E                      u4720 12BD  
                    u4800 1245                      u4640 118D                      u5600 02A7  
                    u5520 01FD                      u5440 0063                      u5360 0D33  
                    u5280 0BF7                      u5185 1389                      u3761 0724  
                    u3673 06C7                      u3665 06A8                      u3593 05E1  
                    u3921 1668                      u3841 160D                      u4721 12BC  
                    u4801 1244                      u4641 118C                      u5601 02A6  
                    u5521 01FC                      u5441 0062                      u5361 0D32  
                    u5281 0BF6                      u4490 1FE7                      u4810 1259  
                    u3770 0737                      u3930 167E                      u4570 1349  
                    u5610 02AB                      u5530 020C                      u5450 01A8  
                    u5370 0D53                      u5290 0BFB                      u4491 1FE6  
                    u3771 0736                      u4715 12AD                      u4571 1348  
                    u5611 02AA                      u5531 020B                      u5451 01A7  
                    u5371 0D52                      u5291 0BFA                      u4820 127D  
                    u3780 0746                      u3940 168E                      u3860 162D  
                    u4740 12D1                      u4900 0ABB                      u5700 03CC  
                    u5620 02E4                      u5540 0239                      u5460 01AC  
                    u5380 0D5C                      u3685 06C9                      u3941 168D  
                    u3861 162C                      u4741 12D0                      u4725 12B9  
                    u4901 0ABA                      u4565 132A                      u5701 03CB  
                    u5621 02E3                      u5541 0238                      u5461 01AB  
                    u5381 0D5B                      u4830 128F                      u3790 0763  
                    u3950 1692                      u4750 1216                      u4670 11A7  
                    u4910 0AF2                      u4590 12E5                      u5710 03D3  
                    u5630 02F9                      u5550 0274                      u5470 01B0  
                    u5390 0D62                      u4831 128E                      u3791 0762  
                    u3695 06E0                      u3951 1691                      u3935 1679  
                    u3855 161F                      u4735 12C5                      u4751 1215  
                    u4671 11A6                      u4655 1194                      u4911 0AF1  
                    u5711 03D2                      u5631 02F8                      u5551 0273  
                    u5471 01AF                      u5391 0D61                      u3880 164F  
                    u4680 129A                      u4920 0AFD                      u4840 07F5  
                    u5720 042D                      u5640 0340                      u5560 0278  
                    u5480 01D3                      u3785 0741                      u3881 164E  
                    u4681 1299                      u4665 119B                      u4921 0AFC  
                    u4585 134F                      u4841 07F4                      u5721 042C  
                    u5641 033F                      u5625 02E0                      u5561 0277  
                    u5481 01D2                      u4770 1228                      u4930 0B03  
                    u4850 081E                      u5650 03B4                      u5570 027C  
                    u5490 01D7                      u3795 075F                      u3875 1641  
                    u4771 1227                      u4931 0B02                      u4915 0AEE  
                    u4851 081D                      u5651 03B3                      u5635 02F5  
                    u5571 027B                      u5491 01D6                      u4780 1232  
                    u4940 0B09                      u4860 09FA                      u5660 03B8  
                    u5580 029F                      u4781 1231                      u4765 121A  
                    u4941 0B08                      u4861 09F9                      u4845 07F1  
                    u5661 03B7                      u5581 029E                      u4950 0B1A  
                    u4870 0A36                      u5670 03BC                      u5590 02A3  
                    u3895 1654                      u4695 129E                      u4951 0B19  
                    u4871 0A35                      u5807 0422                      u5671 03BB  
                    u5591 02A2                      u4960 0B2E                      u4880 0A7C  
                    u5680 03C4                      u4785 122E                      u4961 0B2D  
                    u4881 0A7B                      u5817 11F4                      u5681 03C3  
                    u5737 16C2                      u4970 0B34                      u4890 0AAB  
                    u5690 03C8                      u4795 1239                      u4971 0B33  
                    u4955 0B16                      u4891 0AAA                      u5827 1207  
                    u5691 03C7                      u5747 177C                      u4980 0B43  
                    u5837 13CF                      u4981 0B42                      u5757 0C34  
                    u4990 0B58                      u5847 13E0                      u4991 0B57  
                    u5767 0D71                      u5857 13F1                      u5777 0DFA  
                    u5867 1FD7                      u5787 0FF4                      u5797 0411  
                    _TMR0 0001                      _TRMT 04C1                      _WREN 0C62  
       ?_Lcd_Write_String 0025                      _main 169C                      btemp 007E  
                    start 000E        ??_Lcd_Write_String 0027           ___fldiv@new_exp 0032  
         __end_of_Lcd_Cmd 1FE0               _writeEEPROM 0803   __end_of_UART_Write_Text 1290  
        ?_UART_Initialize 0070             ___fltol@sign1 0028        writeEEPROM@address 0020  
                   ?_main 0070           __end_of___fldiv 09EE           __end_of___awdiv 14F6  
                   _EEADR 010D                     STR_10 111F                     STR_11 115F  
                   STR_12 116A                     STR_20 1150                     STR_21 1165  
                   STR_13 113D                     STR_30 1165                     STR_14 1147  
                   STR_22 1133                     STR_31 1165                     STR_23 1159  
                   STR_15 1165                     STR_16 1129                     STR_24 10EB  
                   STR_32 1069                     STR_25 1159                     STR_17 1159  
                   STR_33 1051                     STR_26 1107                     STR_18 10CD  
                   STR_27 1165                     STR_19 1159                     STR_28 1037  
         __end_of___awmod 13C3                     STR_29 101C           __end_of___flmul 07AC  
         __end_of___fltol 15E2           ___awdiv@divisor 002A           __end_of___lwdiv 12D6  
                   i1l204 1561                     i1l184 1FBF           __end_of___lwmod 124A  
                   i1l187 1FC3                     i1l196 148C           ___awdiv@counter 002E  
                   _RCSTA 0018                     _SPBRG 0099                     _TRISB 0086  
                   _TRISD 0088                     _TXREG 0019                     _TXSTA 0098  
            main@realSaat 01A4               ?_UART_Write 0070           __end_of_dpowers 101C  
            main@olmazlar 00E4           __end_of_isdigit 1F99             main@adcValue1 0194  
           main@adcValue2 00E2             main@adcValue3 00CD                     pclath 000A  
                   status 0003                     wtemp0 007E           __end_of_sprintf 0BE5  
        __end_of_Lcd_Init 1426          __end_of_Lcd_Port 2000           __initialization 0011  
   __end_ofi1_writeEEPROM 1FC4              __end_of_main 0467                    ??_main 0054  
           main@ilkAcilis 0192                    _ADRESH 001E                    _ADRESL 009E  
                  _EEDATA 010C                    _EECON2 018D          ___awdiv@dividend 002C  
                  i1l3021 1FBD                    i1l3013 1FAE                    i1l3023 1FBE  
                  i1l3015 1FB4                    i1l3031 1505                    i1l3017 1FB7  
                  i1l3041 1523                    i1l3033 150C                    i1l3025 14F6  
                  i1l3019 1FBC                    i1l3043 1525                    i1l3035 150E  
                  i1l3027 14FA                    i1l3045 1534                    i1l3037 1514  
                  i1l3029 14FB                    i1l2431 147F                    i1l3047 1543  
                  i1l3039 151A                    i1l2425 1427                    i1l3049 1552  
                  i1l2427 1441                    i1l2429 1460                    u265_20 1441  
                  u265_21 1440                    u266_20 1460                    u266_21 145F  
                  u267_20 147F                    u267_21 147E                    u396_20 1FC3  
                  u396_21 1FC2                    u397_20 14FA                    u397_21 14F9  
                  u398_20 150C                    u398_21 150B                    u399_20 1523  
                  u399_21 1522                 ??_Lcd_Cmd 0021                    _TRISA0 0428  
                  _TRISA1 0429                    _TRISA2 042A                    _TRISA3 042B  
                  _TRISA4 042C                    _TRISC0 0438                    _TRISC1 0439  
                  _TRISA5 042D                    _TRISC2 043A                    _TRISD0 0440  
                  _TRISC3 043B                    _TRISE0 0448                    _TRISC4 043C  
                  _TRISE1 0449                    _TRISC5 043D                    _TRISE2 044A  
                  _TRISC6 043E                    _TRISC7 043F          __end_of___xxtofl 169C  
                  ___wmul 1185                 ??___fldiv 0028                 ??___awdiv 002E  
               ??___awmod 002E                 ??___flmul 0042          ?_UART_Write_Text 0021  
               ??___fltol 0024             main@oranValue 00D1                 ??___lwdiv 0024  
               ??___lwmod 002B          ___awdiv@quotient 0030           ___awmod@divisor 002A  
         ___awmod@counter 002E             _incrementTime 1426          __end_of_yagBakim 07FE  
           main@rpmString 00DD                 ??_isdigit 0020                    saved_w 007E  
          main@adcString1 00EC                 ??_sprintf 0036           Lcd_Set_Cursor@a 0026  
         Lcd_Set_Cursor@b 0024           Lcd_Set_Cursor@y 0028           Lcd_Set_Cursor@z 0027  
            ___xxtofl@arg 002A              ___xxtofl@exp 0029              ___xxtofl@val 0020  
 __end_of__initialization 001F         __end_of_Lcd_Clear 1F77                ___fltol@f1 0020  
         writeEEPROM@data 0022            __pcstackCOMMON 0070            ?_incrementTime 0070  
          _Lcd_Set_Cursor 131C         incrementTime@time 0072            _OPTION_REGbits 0081  
      main@gostermeliklcd 00D5                 ?_Lcd_Init 0070                 ?_Lcd_Port 0070  
            sprintf@width 003F          main@combinedText 005A                __pbssBANK3 01A8  
       __end_of__Umul8_16 11D5                __pmaintext 169C              ?_writeEEPROM 0020  
                 ?___wmul 0024                __pintentry 0004    __end_of_Lcd_Set_Cursor 1368  
        main@displayValue 01A6                 ?___xxtofl 0020              ??_UART_Write 0020  
              ??_Lcd_Init 0024                ??_Lcd_Port 0020                __stringtab 1000  
          _Lcd_Write_Char 11D5                   _Lcd_Cmd 1FC4                _readEEPROM 1F99  
               ?_yagBakim 0070                   ___fldiv 081F                   ___awdiv 148D  
         ??_incrementTime 0070                   ___awmod 1368                   ___flmul 0467  
                 ___fltol 156A        __end_of_UART_Write 1F85                   ___lwdiv 1290  
                 ___lwmod 120E           ?_Lcd_Set_Cursor 0024                   __ptext1 07AC  
                 __ptext2 12D6                   __ptext3 11D5                   __ptext4 131C  
                 __ptext5 1F6A                   __ptext6 0803                   __ptext7 09EE  
                 __ptext8 1F85                   __ptext9 1185                   _dpowers 1012  
                 _isdigit 1F85                ??___xxtofl 0024          ___awmod@dividend 002C  
   main@negativeFeedValue 01A2                   _sprintf 09EE    __end_of_Lcd_Write_Char 120E  
    end_of_initialization 001F                ??_yagBakim 002C         __end_of_timer_isr 156A  
                 psplit$0 A0029                   psplit$1 29002A                 Lcd_Port@a 0020  
            __pstringtext 1000            UART_Write@data 0020             ___xxtofl@sign 0028  
             ___fldiv@grs 0034               ___fldiv@rem 002D      pnum$maintext_split_1 0029  
    pnum$maintext_split_2 002A         readEEPROM@address 0020           ?_Lcd_Write_Char 0070  
       Lcd_Write_String@a 0025         Lcd_Write_String@i 002A               ___flmul@grs 0048  
              main@dakika 00E6                main@binler 019A                main@birler 00EA  
             ?_readEEPROM 0020                main@yuzler 0198                 _Lcd_Clear 1F6A  
          __end_of___wmul 11AC          _Lcd_Write_String 12D6       start_initialization 0011  
       ??_UART_Initialize 0020                ?_Lcd_Clear 0070             i1_writeEEPROM 1FAE  
                ??___wmul 0028                 __Umul8_16 11AC           Lcd_Write_Char@a 0024  
         Lcd_Write_Char@y 0023                 ___fldiv@a 0020                 ___fldiv@b 0024  
               ___flmul@a 003E                 ___flmul@b 003A               __pbssCOMMON 0077  
               ___latbits 0002             __pcstackBANK0 0020             __pcstackBANK1 00A0  
           __pcstackBANK3 0190                  ?_Lcd_Cmd 0070               sprintf@flag 003E  
             sprintf@prec 003A                 _main$1030 00D9          ___lwdiv@dividend 0022  
main@negativeDisplayValue 0190            ?i1_writeEEPROM 0070          ??_Lcd_Set_Cursor 0025  
                ?___fldiv 0020                  ?___awdiv 002A                  ?___awmod 002A  
                ?___flmul 003A                  ?___fltol 0020                ?__Umul8_16 0020  
                ?___lwdiv 0020                  ?___lwmod 0027                  ?_isdigit 0070  
        ___lwdiv@quotient 0025                  ?_sprintf 002C         ??_UART_Write_Text 0023  
       interrupt_function 0004               _eepromWRclc 0079            ___wmul@product 0028  
         main@epromAdresi 01A0                  Lcd_Cmd@a 0023               ??_Lcd_Clear 0024  
               _timer_isr 14F6     __end_of_incrementTime 148D                _ADCON0bits 001F  
             __stringbase 1012                _ADCON1bits 009F         ___wmul@multiplier 0024  
        ??_Lcd_Write_Char 0021                 main@onlar 00E8                  _Lcd_Init 13C3  
                _Lcd_Port 1FE0           main@integerPart 019C  __end_of_Lcd_Write_String 131C  
            ??_readEEPROM 0022           ??i1_writeEEPROM 0074               _kesmeSayaci 0077  
             ??__Umul8_16 0022                ?_timer_isr 0070              pnum$maintext 000A  
    i1writeEEPROM@address 0070        __end_of__stringtab 1012               _isdigit$839 0020  
         _UART_Initialize 1175               _currentTime 01A8                sprintf@val 003C  
                ___xxtofl 15E2                 yagBakim@i 002C        __end_of_readEEPROM 1FAE  
         ___lwdiv@divisor 0020           ___lwdiv@counter 0024                  __ptext10 120E  
                __ptext11 1290                  __ptext20 124A                  __ptext12 1F99  
                __ptext21 1F77                  __ptext13 15E2                  __ptext22 1175  
                __ptext14 156A                  __ptext23 13C3                  __ptext15 0467  
                __ptext24 1FC4                  __ptext16 11AC                  __ptext25 1FE0  
                __ptext17 081F                  __ptext26 14F6                  __ptext18 1368  
                __ptext27 1FAE                  __ptext19 148D                  __ptext28 1426  
       i1writeEEPROM@data 0072       UART_Write_Text@text 0021                  _yagBakim 07AC  
           ??_writeEEPROM 0024           main@uartMessage 00BD                _INTCONbits 000B  
                isdigit@c 0021        Lcd_Write_Char@temp 0022                  intlevel1 0000  
               sprintf@ap 003B                 sprintf@sp 0042          ___lwmod@dividend 0029  
               stringcode 100A               ??_timer_isr 0074   __end_of_UART_Initialize 1185  
     main@uartMessage_372 00C5        Lcd_Set_Cursor@temp 0029      main@combinedText_376 00A0  
     __end_of_writeEEPROM 081F    __Umul8_16@multiplicand 0020           _UART_Write_Text 124A  
                sprintf@c 0041                  sprintf@f 002C           ___lwmod@divisor 0027  
         ___lwmod@counter 002B                  stringtab 1000                _UART_Write 1F77  
        UART_Write_Text@i 0026      __Umul8_16@multiplier 0028         __Umul8_16@product 0024  
