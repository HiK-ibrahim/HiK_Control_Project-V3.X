

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Sep 22 11:46:37 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     9                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    43                           	psect	maintext_split_1,global,class=CODE,split=1,delta=2
    44                           	dabs	1,0x7E,2
    45     0000                     
    46                           ; Generated 22/03/2023 GMT
    47                           ; 
    48                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution. Publication is not required when
    62                           ;        this file is used in an embedded application.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F877A Definitions
    78                           ; 
    79                           ; SFR Addresses
    80     0000                     	;# 
    81     0001                     	;# 
    82     0002                     	;# 
    83     0003                     	;# 
    84     0004                     	;# 
    85     0005                     	;# 
    86     0006                     	;# 
    87     0007                     	;# 
    88     0008                     	;# 
    89     0009                     	;# 
    90     000A                     	;# 
    91     000B                     	;# 
    92     000C                     	;# 
    93     000D                     	;# 
    94     000E                     	;# 
    95     000E                     	;# 
    96     000F                     	;# 
    97     0010                     	;# 
    98     0011                     	;# 
    99     0012                     	;# 
   100     0013                     	;# 
   101     0014                     	;# 
   102     0015                     	;# 
   103     0015                     	;# 
   104     0016                     	;# 
   105     0017                     	;# 
   106     0018                     	;# 
   107     0019                     	;# 
   108     001A                     	;# 
   109     001B                     	;# 
   110     001B                     	;# 
   111     001C                     	;# 
   112     001D                     	;# 
   113     001E                     	;# 
   114     001F                     	;# 
   115     0081                     	;# 
   116     0085                     	;# 
   117     0086                     	;# 
   118     0087                     	;# 
   119     0088                     	;# 
   120     0089                     	;# 
   121     008C                     	;# 
   122     008D                     	;# 
   123     008E                     	;# 
   124     0091                     	;# 
   125     0092                     	;# 
   126     0093                     	;# 
   127     0094                     	;# 
   128     0098                     	;# 
   129     0099                     	;# 
   130     009C                     	;# 
   131     009D                     	;# 
   132     009E                     	;# 
   133     009F                     	;# 
   134     010C                     	;# 
   135     010D                     	;# 
   136     010E                     	;# 
   137     010F                     	;# 
   138     018C                     	;# 
   139     018D                     	;# 
   140     0000                     	;# 
   141     0001                     	;# 
   142     0002                     	;# 
   143     0003                     	;# 
   144     0004                     	;# 
   145     0005                     	;# 
   146     0006                     	;# 
   147     0007                     	;# 
   148     0008                     	;# 
   149     0009                     	;# 
   150     000A                     	;# 
   151     000B                     	;# 
   152     000C                     	;# 
   153     000D                     	;# 
   154     000E                     	;# 
   155     000E                     	;# 
   156     000F                     	;# 
   157     0010                     	;# 
   158     0011                     	;# 
   159     0012                     	;# 
   160     0013                     	;# 
   161     0014                     	;# 
   162     0015                     	;# 
   163     0015                     	;# 
   164     0016                     	;# 
   165     0017                     	;# 
   166     0018                     	;# 
   167     0019                     	;# 
   168     001A                     	;# 
   169     001B                     	;# 
   170     001B                     	;# 
   171     001C                     	;# 
   172     001D                     	;# 
   173     001E                     	;# 
   174     001F                     	;# 
   175     0081                     	;# 
   176     0085                     	;# 
   177     0086                     	;# 
   178     0087                     	;# 
   179     0088                     	;# 
   180     0089                     	;# 
   181     008C                     	;# 
   182     008D                     	;# 
   183     008E                     	;# 
   184     0091                     	;# 
   185     0092                     	;# 
   186     0093                     	;# 
   187     0094                     	;# 
   188     0098                     	;# 
   189     0099                     	;# 
   190     009C                     	;# 
   191     009D                     	;# 
   192     009E                     	;# 
   193     009F                     	;# 
   194     010C                     	;# 
   195     010D                     	;# 
   196     010E                     	;# 
   197     010F                     	;# 
   198     018C                     	;# 
   199     018D                     	;# 
   200     0000                     	;# 
   201     0001                     	;# 
   202     0002                     	;# 
   203     0003                     	;# 
   204     0004                     	;# 
   205     0005                     	;# 
   206     0006                     	;# 
   207     0007                     	;# 
   208     0008                     	;# 
   209     0009                     	;# 
   210     000A                     	;# 
   211     000B                     	;# 
   212     000C                     	;# 
   213     000D                     	;# 
   214     000E                     	;# 
   215     000E                     	;# 
   216     000F                     	;# 
   217     0010                     	;# 
   218     0011                     	;# 
   219     0012                     	;# 
   220     0013                     	;# 
   221     0014                     	;# 
   222     0015                     	;# 
   223     0015                     	;# 
   224     0016                     	;# 
   225     0017                     	;# 
   226     0018                     	;# 
   227     0019                     	;# 
   228     001A                     	;# 
   229     001B                     	;# 
   230     001B                     	;# 
   231     001C                     	;# 
   232     001D                     	;# 
   233     001E                     	;# 
   234     001F                     	;# 
   235     0081                     	;# 
   236     0085                     	;# 
   237     0086                     	;# 
   238     0087                     	;# 
   239     0088                     	;# 
   240     0089                     	;# 
   241     008C                     	;# 
   242     008D                     	;# 
   243     008E                     	;# 
   244     0091                     	;# 
   245     0092                     	;# 
   246     0093                     	;# 
   247     0094                     	;# 
   248     0098                     	;# 
   249     0099                     	;# 
   250     009C                     	;# 
   251     009D                     	;# 
   252     009E                     	;# 
   253     009F                     	;# 
   254     010C                     	;# 
   255     010D                     	;# 
   256     010E                     	;# 
   257     010F                     	;# 
   258     018C                     	;# 
   259     018D                     	;# 
   260                           
   261                           	psect	stringtext
   262     1000                     __pstringtext:
   263     1000                     stringtab:
   264     1000                     __stringtab:
   265                           
   266                           ;	String table - string pointers are 2 bytes each
   267     1000  1BFF               	btfsc	btemp+1,7
   268     1001  280A               	ljmp	stringcode
   269     1002  1383               	bcf	3,7
   270     1003  187F               	btfsc	btemp+1,0
   271     1004  1783               	bsf	3,7
   272     1005  0800               	movf	0,w
   273     1006  0A84               	incf	4,f
   274     1007  1903               	skipnz
   275     1008  0AFF               	incf	btemp+1,f
   276     1009  0008               	return
   277     100A                     stringcode:
   278     100A  087F               	movf	btemp+1,w
   279     100B  397F               	andlw	127
   280     100C  008A               	movwf	10
   281     100D  0804               	movf	4,w
   282     100E  0A84               	incf	4,f
   283     100F  1903               	skipnz
   284     1010  0AFF               	incf	btemp+1,f
   285     1011  0082               	movwf	2
   286     1012                     __stringbase:
   287     1012                     __end_of__stringtab:
   288     1012                     _dpowers:
   289     1012  3401               	retlw	1
   290     1013  3400               	retlw	0
   291     1014  340A               	retlw	10
   292     1015  3400               	retlw	0
   293     1016  3464               	retlw	100
   294     1017  3400               	retlw	0
   295     1018  34E8               	retlw	232
   296     1019  3403               	retlw	3
   297     101A  3410               	retlw	16
   298     101B  3427               	retlw	39
   299     101C                     __end_of_dpowers:
   300     001E                     _ADRESH	set	30
   301     001F                     _ADCON0bits	set	31
   302     000B                     _INTCONbits	set	11
   303     0001                     _TMR0	set	1
   304     0019                     _TXREG	set	25
   305     0018                     _RCSTA	set	24
   306     0040                     _RD0	set	64
   307     003B                     _RC3	set	59
   308     0049                     _RE1	set	73
   309     0038                     _RC0	set	56
   310     003A                     _RC2	set	58
   311     0048                     _RE0	set	72
   312     004A                     _RE2	set	74
   313     0039                     _RC1	set	57
   314     005A                     _T0IF	set	90
   315     005F                     _GIE	set	95
   316     002C                     _RA4	set	44
   317     0034                     _RB4	set	52
   318     0035                     _RB5	set	53
   319     0030                     _RB0	set	48
   320     0031                     _RB1	set	49
   321     0032                     _RB2	set	50
   322     0033                     _RB3	set	51
   323     009E                     _ADRESL	set	158
   324     009F                     _ADCON1bits	set	159
   325     0081                     _OPTION_REGbits	set	129
   326     0088                     _TRISD	set	136
   327     0086                     _TRISB	set	134
   328     0099                     _SPBRG	set	153
   329     0098                     _TXSTA	set	152
   330     043D                     _TRISC5	set	1085
   331     043C                     _TRISC4	set	1084
   332     042D                     _TRISA5	set	1069
   333     0428                     _TRISA0	set	1064
   334     043F                     _TRISC7	set	1087
   335     043E                     _TRISC6	set	1086
   336     042B                     _TRISA3	set	1067
   337     042A                     _TRISA2	set	1066
   338     0429                     _TRISA1	set	1065
   339     0440                     _TRISD0	set	1088
   340     043B                     _TRISC3	set	1083
   341     0438                     _TRISC0	set	1080
   342     044A                     _TRISE2	set	1098
   343     043A                     _TRISC2	set	1082
   344     0439                     _TRISC1	set	1081
   345     0449                     _TRISE1	set	1097
   346     0448                     _TRISE0	set	1096
   347     042C                     _TRISA4	set	1068
   348     04C1                     _TRMT	set	1217
   349     010C                     _EEDATA	set	268
   350     010D                     _EEADR	set	269
   351     018D                     _EECON2	set	397
   352     0C60                     _RD	set	3168
   353     0C61                     _WR	set	3169
   354     0C62                     _WREN	set	3170
   355     101C                     STR_29:
   356     101C  3420               	retlw	32	;' '
   357     101D  3420               	retlw	32	;' '
   358     101E  3420               	retlw	32	;' '
   359     101F  3449               	retlw	73	;'I'
   360     1020  344C               	retlw	76	;'L'
   361     1021  3445               	retlw	69	;'E'
   362     1022  3452               	retlw	82	;'R'
   363     1023  344C               	retlw	76	;'L'
   364     1024  3445               	retlw	69	;'E'
   365     1025  344D               	retlw	77	;'M'
   366     1026  3445               	retlw	69	;'E'
   367     1027  3420               	retlw	32	;' '
   368     1028  3448               	retlw	72	;'H'
   369     1029  3441               	retlw	65	;'A'
   370     102A  3454               	retlw	84	;'T'
   371     102B  3441               	retlw	65	;'A'
   372     102C  3453               	retlw	83	;'S'
   373     102D  3449               	retlw	73	;'I'
   374     102E  3420               	retlw	32	;' '
   375     102F  3420               	retlw	32	;' '
   376     1030  3420               	retlw	32	;' '
   377     1031  3420               	retlw	32	;' '
   378     1032  3420               	retlw	32	;' '
   379     1033  3420               	retlw	32	;' '
   380     1034  3420               	retlw	32	;' '
   381     1035  3420               	retlw	32	;' '
   382     1036  3400               	retlw	0
   383     1037                     STR_28:
   384     1037  3420               	retlw	32	;' '
   385     1038  3420               	retlw	32	;' '
   386     1039  3420               	retlw	32	;' '
   387     103A  3446               	retlw	70	;'F'
   388     103B  3445               	retlw	69	;'E'
   389     103C  3445               	retlw	69	;'E'
   390     103D  3444               	retlw	68	;'D'
   391     103E  3420               	retlw	32	;' '
   392     103F  3452               	retlw	82	;'R'
   393     1040  3441               	retlw	65	;'A'
   394     1041  3454               	retlw	84	;'T'
   395     1042  3445               	retlw	69	;'E'
   396     1043  3420               	retlw	32	;' '
   397     1044  3445               	retlw	69	;'E'
   398     1045  3452               	retlw	82	;'R'
   399     1046  3452               	retlw	82	;'R'
   400     1047  344F               	retlw	79	;'O'
   401     1048  3452               	retlw	82	;'R'
   402     1049  3420               	retlw	32	;' '
   403     104A  3420               	retlw	32	;' '
   404     104B  3420               	retlw	32	;' '
   405     104C  3420               	retlw	32	;' '
   406     104D  3420               	retlw	32	;' '
   407     104E  3420               	retlw	32	;' '
   408     104F  3420               	retlw	32	;' '
   409     1050  3400               	retlw	0
   410     1051                     STR_33:
   411     1051  3420               	retlw	32	;' '
   412     1052  3420               	retlw	32	;' '
   413     1053  3420               	retlw	32	;' '
   414     1054  3444               	retlw	68	;'D'
   415     1055  344F               	retlw	79	;'O'
   416     1056  344E               	retlw	78	;'N'
   417     1057  344D               	retlw	77	;'M'
   418     1058  3445               	retlw	69	;'E'
   419     1059  3420               	retlw	32	;' '
   420     105A  3448               	retlw	72	;'H'
   421     105B  3441               	retlw	65	;'A'
   422     105C  3454               	retlw	84	;'T'
   423     105D  3441               	retlw	65	;'A'
   424     105E  3453               	retlw	83	;'S'
   425     105F  3449               	retlw	73	;'I'
   426     1060  3420               	retlw	32	;' '
   427     1061  3420               	retlw	32	;' '
   428     1062  3420               	retlw	32	;' '
   429     1063  3420               	retlw	32	;' '
   430     1064  3420               	retlw	32	;' '
   431     1065  3420               	retlw	32	;' '
   432     1066  3420               	retlw	32	;' '
   433     1067  3420               	retlw	32	;' '
   434     1068  3400               	retlw	0
   435     1069                     STR_32:
   436     1069  3420               	retlw	32	;' '
   437     106A  3420               	retlw	32	;' '
   438     106B  3420               	retlw	32	;' '
   439     106C  3452               	retlw	82	;'R'
   440     106D  344F               	retlw	79	;'O'
   441     106E  3454               	retlw	84	;'T'
   442     106F  3441               	retlw	65	;'A'
   443     1070  3454               	retlw	84	;'T'
   444     1071  3449               	retlw	73	;'I'
   445     1072  344F               	retlw	79	;'O'
   446     1073  344E               	retlw	78	;'N'
   447     1074  3420               	retlw	32	;' '
   448     1075  3445               	retlw	69	;'E'
   449     1076  3452               	retlw	82	;'R'
   450     1077  3452               	retlw	82	;'R'
   451     1078  344F               	retlw	79	;'O'
   452     1079  3452               	retlw	82	;'R'
   453     107A  3420               	retlw	32	;' '
   454     107B  3420               	retlw	32	;' '
   455     107C  3420               	retlw	32	;' '
   456     107D  3420               	retlw	32	;' '
   457     107E  3420               	retlw	32	;' '
   458     107F  3420               	retlw	32	;' '
   459     1080  3400               	retlw	0
   460     1081                     STR_7:
   461     1081  3450               	retlw	80	;'P'
   462     1082  3455               	retlw	85	;'U'
   463     1083  3454               	retlw	84	;'T'
   464     1084  3420               	retlw	32	;' '
   465     1085  3449               	retlw	73	;'I'
   466     1086  3454               	retlw	84	;'T'
   467     1087  3420               	retlw	32	;' '
   468     1088  3449               	retlw	73	;'I'
   469     1089  344E               	retlw	78	;'N'
   470     108A  3420               	retlw	32	;' '
   471     108B  3453               	retlw	83	;'S'
   472     108C  3454               	retlw	84	;'T'
   473     108D  344F               	retlw	79	;'O'
   474     108E  3450               	retlw	80	;'P'
   475     108F  3420               	retlw	32	;' '
   476     1090  3453               	retlw	83	;'S'
   477     1091  3454               	retlw	84	;'T'
   478     1092  3441               	retlw	65	;'A'
   479     1093  3454               	retlw	84	;'T'
   480     1094  3445               	retlw	69	;'E'
   481     1095  3400               	retlw	0
   482     1096                     STR_6:
   483     1096  3453               	retlw	83	;'S'
   484     1097  3454               	retlw	84	;'T'
   485     1098  344F               	retlw	79	;'O'
   486     1099  3450               	retlw	80	;'P'
   487     109A  3420               	retlw	32	;' '
   488     109B  3444               	retlw	68	;'D'
   489     109C  3455               	retlw	85	;'U'
   490     109D  3452               	retlw	82	;'R'
   491     109E  3455               	retlw	85	;'U'
   492     109F  344D               	retlw	77	;'M'
   493     10A0  3455               	retlw	85	;'U'
   494     10A1  344E               	retlw	78	;'N'
   495     10A2  3441               	retlw	65	;'A'
   496     10A3  3420               	retlw	32	;' '
   497     10A4  3447               	retlw	71	;'G'
   498     10A5  3445               	retlw	69	;'E'
   499     10A6  3454               	retlw	84	;'T'
   500     10A7  3449               	retlw	73	;'I'
   501     10A8  3452               	retlw	82	;'R'
   502     10A9  3400               	retlw	0
   503     10AA                     STR_1:
   504     10AA  3459               	retlw	89	;'Y'
   505     10AB  3441               	retlw	65	;'A'
   506     10AC  3447               	retlw	71	;'G'
   507     10AD  3420               	retlw	32	;' '
   508     10AE  3442               	retlw	66	;'B'
   509     10AF  3441               	retlw	65	;'A'
   510     10B0  344B               	retlw	75	;'K'
   511     10B1  3449               	retlw	73	;'I'
   512     10B2  344D               	retlw	77	;'M'
   513     10B3  3449               	retlw	73	;'I'
   514     10B4  3420               	retlw	32	;' '
   515     10B5  3459               	retlw	89	;'Y'
   516     10B6  3441               	retlw	65	;'A'
   517     10B7  3450               	retlw	80	;'P'
   518     10B8  3449               	retlw	73	;'I'
   519     10B9  344E               	retlw	78	;'N'
   520     10BA  3449               	retlw	73	;'I'
   521     10BB  345A               	retlw	90	;'Z'
   522     10BC  3400               	retlw	0
   523     10BD                     STR_3:
   524     10BD  3455               	retlw	85	;'U'
   525     10BE  345A               	retlw	90	;'Z'
   526     10BF  344D               	retlw	77	;'M'
   527     10C0  3441               	retlw	65	;'A'
   528     10C1  344E               	retlw	78	;'N'
   529     10C2  344C               	retlw	76	;'L'
   530     10C3  3441               	retlw	65	;'A'
   531     10C4  3452               	retlw	82	;'R'
   532     10C5  3420               	retlw	32	;' '
   533     10C6  344D               	retlw	77	;'M'
   534     10C7  3441               	retlw	65	;'A'
   535     10C8  344B               	retlw	75	;'K'
   536     10C9  3449               	retlw	73	;'I'
   537     10CA  344E               	retlw	78	;'N'
   538     10CB  3441               	retlw	65	;'A'
   539     10CC  3400               	retlw	0
   540     10CD                     STR_18:
   541     10CD  3420               	retlw	32	;' '
   542     10CE  3446               	retlw	70	;'F'
   543     10CF  3457               	retlw	87	;'W'
   544     10D0  3444               	retlw	68	;'D'
   545     10D1  3420               	retlw	32	;' '
   546     10D2  3420               	retlw	32	;' '
   547     10D3  3420               	retlw	32	;' '
   548     10D4  3420               	retlw	32	;' '
   549     10D5  3420               	retlw	32	;' '
   550     10D6  3420               	retlw	32	;' '
   551     10D7  3420               	retlw	32	;' '
   552     10D8  3420               	retlw	32	;' '
   553     10D9  3420               	retlw	32	;' '
   554     10DA  3420               	retlw	32	;' '
   555     10DB  3400               	retlw	0
   556     10DC                     STR_4:
   557     10DC  3477               	retlw	119	;'w'
   558     10DD  3477               	retlw	119	;'w'
   559     10DE  3477               	retlw	119	;'w'
   560     10DF  342E               	retlw	46	;'.'
   561     10E0  3462               	retlw	98	;'b'
   562     10E1  346F               	retlw	111	;'o'
   563     10E2  3472               	retlw	114	;'r'
   564     10E3  3476               	retlw	118	;'v'
   565     10E4  3465               	retlw	101	;'e'
   566     10E5  346B               	retlw	107	;'k'
   567     10E6  342E               	retlw	46	;'.'
   568     10E7  3463               	retlw	99	;'c'
   569     10E8  346F               	retlw	111	;'o'
   570     10E9  346D               	retlw	109	;'m'
   571     10EA  3400               	retlw	0
   572     10EB                     STR_24:
   573     10EB  3420               	retlw	32	;' '
   574     10EC  3452               	retlw	82	;'R'
   575     10ED  3445               	retlw	69	;'E'
   576     10EE  3457               	retlw	87	;'W'
   577     10EF  3420               	retlw	32	;' '
   578     10F0  3420               	retlw	32	;' '
   579     10F1  3420               	retlw	32	;' '
   580     10F2  3420               	retlw	32	;' '
   581     10F3  3420               	retlw	32	;' '
   582     10F4  3420               	retlw	32	;' '
   583     10F5  3420               	retlw	32	;' '
   584     10F6  3420               	retlw	32	;' '
   585     10F7  3420               	retlw	32	;' '
   586     10F8  3400               	retlw	0
   587     10F9                     STR_2:
   588     10F9  344F               	retlw	79	;'O'
   589     10FA  3449               	retlw	73	;'I'
   590     10FB  344C               	retlw	76	;'L'
   591     10FC  3420               	retlw	32	;' '
   592     10FD  3454               	retlw	84	;'T'
   593     10FE  3448               	retlw	72	;'H'
   594     10FF  3445               	retlw	69	;'E'
   595     1100  3420               	retlw	32	;' '
   596     1101  3447               	retlw	71	;'G'
   597     1102  3445               	retlw	69	;'E'
   598     1103  3441               	retlw	65	;'A'
   599     1104  3452               	retlw	82	;'R'
   600     1105  3453               	retlw	83	;'S'
   601     1106  3400               	retlw	0
   602     1107                     STR_26:
   603     1107  3420               	retlw	32	;' '
   604     1108  3453               	retlw	83	;'S'
   605     1109  3454               	retlw	84	;'T'
   606     110A  344F               	retlw	79	;'O'
   607     110B  3450               	retlw	80	;'P'
   608     110C  3420               	retlw	32	;' '
   609     110D  3420               	retlw	32	;' '
   610     110E  3420               	retlw	32	;' '
   611     110F  3420               	retlw	32	;' '
   612     1110  3420               	retlw	32	;' '
   613     1111  3420               	retlw	32	;' '
   614     1112  3420               	retlw	32	;' '
   615     1113  3400               	retlw	0
   616     1114                     STR_8:
   617     1114  3425               	retlw	37	;'%'
   618     1115  3435               	retlw	53	;'5'
   619     1116  3475               	retlw	117	;'u'
   620     1117  3468               	retlw	104	;'h'
   621     1118  3420               	retlw	32	;' '
   622     1119  3425               	retlw	37	;'%'
   623     111A  3430               	retlw	48	;'0'
   624     111B  3432               	retlw	50	;'2'
   625     111C  3475               	retlw	117	;'u'
   626     111D  346D               	retlw	109	;'m'
   627     111E  3400               	retlw	0
   628     111F                     STR_10:
   629     111F  3446               	retlw	70	;'F'
   630     1120  3465               	retlw	101	;'e'
   631     1121  3465               	retlw	101	;'e'
   632     1122  3464               	retlw	100	;'d'
   633     1123  3452               	retlw	82	;'R'
   634     1124  3461               	retlw	97	;'a'
   635     1125  3474               	retlw	116	;'t'
   636     1126  3465               	retlw	101	;'e'
   637     1127  343A               	retlw	58	;':'
   638     1128  3400               	retlw	0
   639     1129                     STR_16:
   640     1129  3420               	retlw	32	;' '
   641     112A  3446               	retlw	70	;'F'
   642     112B  3457               	retlw	87	;'W'
   643     112C  3444               	retlw	68	;'D'
   644     112D  3420               	retlw	32	;' '
   645     112E  3431               	retlw	49	;'1'
   646     112F  342E               	retlw	46	;'.'
   647     1130  3436               	retlw	54	;'6'
   648     1131  344B               	retlw	75	;'K'
   649     1132  3400               	retlw	0
   650     1133                     STR_22:
   651     1133  3420               	retlw	32	;' '
   652     1134  3452               	retlw	82	;'R'
   653     1135  3445               	retlw	69	;'E'
   654     1136  3457               	retlw	87	;'W'
   655     1137  3420               	retlw	32	;' '
   656     1138  3431               	retlw	49	;'1'
   657     1139  342E               	retlw	46	;'.'
   658     113A  3436               	retlw	54	;'6'
   659     113B  344B               	retlw	75	;'K'
   660     113C  3400               	retlw	0
   661     113D                     STR_13:
   662     113D  3425               	retlw	37	;'%'
   663     113E  3475               	retlw	117	;'u'
   664     113F  3425               	retlw	37	;'%'
   665     1140  3475               	retlw	117	;'u'
   666     1141  3425               	retlw	37	;'%'
   667     1142  3475               	retlw	117	;'u'
   668     1143  342E               	retlw	46	;'.'
   669     1144  3425               	retlw	37	;'%'
   670     1145  3475               	retlw	117	;'u'
   671     1146  3400               	retlw	0
   672     1147                     STR_14:
   673     1147  3420               	retlw	32	;' '
   674     1148  3446               	retlw	70	;'F'
   675     1149  3457               	retlw	87	;'W'
   676     114A  3444               	retlw	68	;'D'
   677     114B  3420               	retlw	32	;' '
   678     114C  344C               	retlw	76	;'L'
   679     114D  344D               	retlw	77	;'M'
   680     114E  3454               	retlw	84	;'T'
   681     114F  3400               	retlw	0
   682     1150                     STR_20:
   683     1150  3420               	retlw	32	;' '
   684     1151  3452               	retlw	82	;'R'
   685     1152  3445               	retlw	69	;'E'
   686     1153  3457               	retlw	87	;'W'
   687     1154  3420               	retlw	32	;' '
   688     1155  344C               	retlw	76	;'L'
   689     1156  344D               	retlw	77	;'M'
   690     1157  3454               	retlw	84	;'T'
   691     1158  3400               	retlw	0
   692     1159                     STR_17:
   693     1159  3473               	retlw	115	;'s'
   694     115A  3425               	retlw	37	;'%'
   695     115B  3464               	retlw	100	;'d'
   696     115C  340D               	retlw	13
   697     115D  340A               	retlw	10
   698     115E  3400               	retlw	0
   699     115F                     STR_11:
   700     115F  3425               	retlw	37	;'%'
   701     1160  3430               	retlw	48	;'0'
   702     1161  3430               	retlw	48	;'0'
   703     1162  3433               	retlw	51	;'3'
   704     1163  3475               	retlw	117	;'u'
   705     1164  3400               	retlw	0
   706     1165                     STR_15:
   707     1165  3473               	retlw	115	;'s'
   708     1166  3430               	retlw	48	;'0'
   709     1167  340D               	retlw	13
   710     1168  340A               	retlw	10
   711     1169  3400               	retlw	0
   712     116A                     STR_12:
   713     116A  3452               	retlw	82	;'R'
   714     116B  3450               	retlw	80	;'P'
   715     116C  344D               	retlw	77	;'M'
   716     116D  343A               	retlw	58	;':'
   717     116E  3400               	retlw	0
   718     116F                     STR_5:
   719     116F  3456               	retlw	86	;'V'
   720     1170  3433               	retlw	51	;'3'
   721     1171  3400               	retlw	0
   722     1165                     
   723                           	psect	cinit
   724     0011                     start_initialization:	
   725                           ; #config settings
   726                           
   727     0011                     __initialization:
   728                           
   729                           ; Clear objects allocated to COMMON
   730     0011  01F8               	clrf	__pbssCOMMON& (0+127)
   731     0012  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   732     0013  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   733     0014  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   734     0015  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
   735     0016  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
   736                           
   737                           ; Clear objects allocated to BANK0
   738     0017  1283               	bcf	3,5	;RP0=0, select bank0
   739     0018  1303               	bcf	3,6	;RP1=0, select bank0
   740     0019  01EE               	clrf	__pbssBANK0& (0+127)
   741     001A  01EF               	clrf	(__pbssBANK0+1)& (0+127)
   742                           
   743                           ; Clear objects allocated to BANK3
   744     001B  1683               	bsf	3,5	;RP0=1, select bank3
   745     001C  1703               	bsf	3,6	;RP1=1, select bank3
   746     001D  01A4               	clrf	__pbssBANK3& (0+127)
   747     001E  01A5               	clrf	(__pbssBANK3+1)& (0+127)
   748     001F                     end_of_initialization:	
   749                           ;End of C runtime variable initialization code
   750                           
   751     001F                     __end_of__initialization:
   752     001F  0183               	clrf	3
   753     0020  160A  118A  2EDE   	ljmp	_main	;jump to C main() function
   754                           
   755                           	psect	bssCOMMON
   756     0078                     __pbssCOMMON:
   757     0078                     _currentTime:
   758     0078                     	ds	6
   759                           
   760                           	psect	bssBANK0
   761     006E                     __pbssBANK0:
   762     006E                     _epromayaz:
   763     006E                     	ds	2
   764                           
   765                           	psect	bssBANK3
   766     01A4                     __pbssBANK3:
   767     01A4                     _kesmeSayaci:
   768     01A4                     	ds	2
   769                           
   770                           	psect	cstackBANK3
   771     0190                     __pcstackBANK3:
   772     0190                     main@negativeDisplayValue:
   773                           
   774                           ; 2 bytes @ 0x0
   775     0190                     	ds	2
   776     0192                     main@ilkAcilis:
   777                           
   778                           ; 2 bytes @ 0x2
   779     0192                     	ds	2
   780     0194                     main@adcValue1:
   781                           
   782                           ; 4 bytes @ 0x4
   783     0194                     	ds	4
   784     0198                     main@yuzler:
   785                           
   786                           ; 2 bytes @ 0x8
   787     0198                     	ds	2
   788     019A                     main@binler:
   789                           
   790                           ; 2 bytes @ 0xA
   791     019A                     	ds	2
   792     019C                     main@integerPart:
   793                           
   794                           ; 4 bytes @ 0xC
   795     019C                     	ds	4
   796     01A0                     main@negativeFeedValue:
   797                           
   798                           ; 2 bytes @ 0x10
   799     01A0                     	ds	2
   800     01A2                     main@displayValue:
   801                           
   802                           ; 2 bytes @ 0x12
   803     01A2                     	ds	2
   804                           
   805                           	psect	cstackBANK1
   806     00A0                     __pcstackBANK1:
   807     00A0                     main@combinedText_374:
   808                           
   809                           ; 20 bytes @ 0x0
   810     00A0                     	ds	20
   811     00B4                     main@lcdText:
   812                           
   813                           ; 9 bytes @ 0x14
   814     00B4                     	ds	9
   815     00BD                     main@uartMessage:
   816                           
   817                           ; 8 bytes @ 0x1D
   818     00BD                     	ds	8
   819     00C5                     main@uartMessage_370:
   820                           
   821                           ; 8 bytes @ 0x25
   822     00C5                     	ds	8
   823     00CD                     main@rpmString:
   824                           
   825                           ; 5 bytes @ 0x2D
   826     00CD                     	ds	5
   827     00D2                     main@adcValue3:
   828                           
   829                           ; 4 bytes @ 0x32
   830     00D2                     	ds	4
   831     00D6                     main@oranValue:
   832                           
   833                           ; 4 bytes @ 0x36
   834     00D6                     	ds	4
   835     00DA                     main@gostermeliklcd:
   836                           
   837                           ; 4 bytes @ 0x3A
   838     00DA                     	ds	4
   839     00DE                     _main$1028:
   840                           
   841                           ; 4 bytes @ 0x3E
   842     00DE                     	ds	4
   843     00E2                     main@adcValue2:
   844                           
   845                           ; 2 bytes @ 0x42
   846     00E2                     	ds	2
   847     00E4                     main@saat:
   848                           
   849                           ; 2 bytes @ 0x44
   850     00E4                     	ds	2
   851     00E6                     main@dakika:
   852                           
   853                           ; 2 bytes @ 0x46
   854     00E6                     	ds	2
   855     00E8                     main@onlar:
   856                           
   857                           ; 2 bytes @ 0x48
   858     00E8                     	ds	2
   859     00EA                     main@birler:
   860                           
   861                           ; 2 bytes @ 0x4A
   862     00EA                     	ds	2
   863     00EC                     main@adcString1:
   864                           
   865                           ; 4 bytes @ 0x4C
   866     00EC                     	ds	4
   867                           
   868                           	psect	cstackCOMMON
   869     0070                     __pcstackCOMMON:
   870     0070                     ?_isdigit:
   871     0070                     ?_UART_Initialize:	
   872                           ; 1 bit 
   873                           
   874     0070                     ?_UART_Write:	
   875                           ; 1 bytes @ 0x0
   876                           
   877     0070                     ?_Lcd_Port:	
   878                           ; 1 bytes @ 0x0
   879                           
   880     0070                     ?_Lcd_Cmd:	
   881                           ; 1 bytes @ 0x0
   882                           
   883     0070                     ?_Lcd_Clear:	
   884                           ; 1 bytes @ 0x0
   885                           
   886     0070                     ?_Lcd_Init:	
   887                           ; 1 bytes @ 0x0
   888                           
   889     0070                     ?_Lcd_Write_Char:	
   890                           ; 1 bytes @ 0x0
   891                           
   892     0070                     ?_yagBakim:	
   893                           ; 1 bytes @ 0x0
   894                           
   895     0070                     ?_writeEEPROM:	
   896                           ; 1 bytes @ 0x0
   897                           
   898     0070                     ?_incrementTime:	
   899                           ; 1 bytes @ 0x0
   900                           
   901     0070                     ??_incrementTime:	
   902                           ; 1 bytes @ 0x0
   903                           
   904     0070                     ?_timer_isr:	
   905                           ; 1 bytes @ 0x0
   906                           
   907     0070                     ?_main:	
   908                           ; 1 bytes @ 0x0
   909                           
   910     0070                     writeEEPROM@address:	
   911                           ; 2 bytes @ 0x0
   912                           
   913                           
   914                           ; 2 bytes @ 0x0
   915     0070                     	ds	2
   916     0072                     incrementTime@time:
   917     0072                     writeEEPROM@data:	
   918                           ; 1 bytes @ 0x2
   919                           
   920                           
   921                           ; 2 bytes @ 0x2
   922     0072                     	ds	2
   923     0074                     ??_writeEEPROM:
   924     0074                     ??_timer_isr:	
   925                           ; 1 bytes @ 0x4
   926                           
   927                           
   928                           ; 1 bytes @ 0x4
   929     0074                     	ds	3
   930     0077                     timer_isr@lowByte:
   931                           
   932                           ; 1 bytes @ 0x7
   933     0077                     	ds	1
   934                           
   935                           	psect	cstackBANK0
   936     0020                     __pcstackBANK0:
   937     0020                     ??_isdigit:
   938     0020                     ??_UART_Initialize:	
   939                           ; 1 bytes @ 0x0
   940                           
   941     0020                     ??_UART_Write:	
   942                           ; 1 bytes @ 0x0
   943                           
   944     0020                     ??_Lcd_Port:	
   945                           ; 1 bytes @ 0x0
   946                           
   947     0020                     ?__Umul8_16:	
   948                           ; 1 bytes @ 0x0
   949                           
   950     0020                     ?_readEEPROM:	
   951                           ; 2 bytes @ 0x0
   952                           
   953     0020                     ?___wmul:	
   954                           ; 2 bytes @ 0x0
   955                           
   956     0020                     ?___lwdiv:	
   957                           ; 2 bytes @ 0x0
   958                           
   959     0020                     ?___fltol:	
   960                           ; 2 bytes @ 0x0
   961                           
   962     0020                     ?___fldiv:	
   963                           ; 4 bytes @ 0x0
   964                           
   965     0020                     ?___xxtofl:	
   966                           ; 4 bytes @ 0x0
   967                           
   968     0020                     UART_Write@data:	
   969                           ; 4 bytes @ 0x0
   970                           
   971     0020                     Lcd_Port@a:	
   972                           ; 1 bytes @ 0x0
   973                           
   974     0020                     __Umul8_16@multiplicand:	
   975                           ; 1 bytes @ 0x0
   976                           
   977     0020                     _isdigit$837:	
   978                           ; 1 bytes @ 0x0
   979                           
   980     0020                     readEEPROM@address:	
   981                           ; 1 bytes @ 0x0
   982                           
   983     0020                     ___wmul@multiplier:	
   984                           ; 2 bytes @ 0x0
   985                           
   986     0020                     ___lwdiv@divisor:	
   987                           ; 2 bytes @ 0x0
   988                           
   989     0020                     ___fltol@f1:	
   990                           ; 2 bytes @ 0x0
   991                           
   992     0020                     ___fldiv@a:	
   993                           ; 4 bytes @ 0x0
   994                           
   995     0020                     ___xxtofl@val:	
   996                           ; 4 bytes @ 0x0
   997                           
   998                           
   999                           ; 4 bytes @ 0x0
  1000     0020                     	ds	1
  1001     0021                     ?_UART_Write_Text:
  1002     0021                     ??_Lcd_Cmd:	
  1003                           ; 1 bytes @ 0x1
  1004                           
  1005     0021                     ??_Lcd_Write_Char:	
  1006                           ; 1 bytes @ 0x1
  1007                           
  1008     0021                     isdigit@c:	
  1009                           ; 1 bytes @ 0x1
  1010                           
  1011     0021                     UART_Write_Text@text:	
  1012                           ; 1 bytes @ 0x1
  1013                           
  1014                           
  1015                           ; 2 bytes @ 0x1
  1016     0021                     	ds	1
  1017     0022                     ??__Umul8_16:
  1018     0022                     ??_readEEPROM:	
  1019                           ; 1 bytes @ 0x2
  1020                           
  1021     0022                     Lcd_Write_Char@temp:	
  1022                           ; 1 bytes @ 0x2
  1023                           
  1024     0022                     ___wmul@multiplicand:	
  1025                           ; 1 bytes @ 0x2
  1026                           
  1027     0022                     ___lwdiv@dividend:	
  1028                           ; 2 bytes @ 0x2
  1029                           
  1030                           
  1031                           ; 2 bytes @ 0x2
  1032     0022                     	ds	1
  1033     0023                     ??_UART_Write_Text:
  1034     0023                     Lcd_Cmd@a:	
  1035                           ; 1 bytes @ 0x3
  1036                           
  1037     0023                     Lcd_Write_Char@y:	
  1038                           ; 1 bytes @ 0x3
  1039                           
  1040                           
  1041                           ; 1 bytes @ 0x3
  1042     0023                     	ds	1
  1043     0024                     ??_Lcd_Clear:
  1044     0024                     ?_Lcd_Set_Cursor:	
  1045                           ; 1 bytes @ 0x4
  1046                           
  1047     0024                     ??_Lcd_Init:	
  1048                           ; 1 bytes @ 0x4
  1049                           
  1050     0024                     ??___wmul:	
  1051                           ; 1 bytes @ 0x4
  1052                           
  1053     0024                     ??___fltol:	
  1054                           ; 1 bytes @ 0x4
  1055                           
  1056     0024                     ??___lwdiv:	
  1057                           ; 1 bytes @ 0x4
  1058                           
  1059     0024                     ??___xxtofl:	
  1060                           ; 1 bytes @ 0x4
  1061                           
  1062     0024                     Lcd_Set_Cursor@b:	
  1063                           ; 1 bytes @ 0x4
  1064                           
  1065     0024                     Lcd_Write_Char@a:	
  1066                           ; 1 bytes @ 0x4
  1067                           
  1068     0024                     ___wmul@product:	
  1069                           ; 1 bytes @ 0x4
  1070                           
  1071     0024                     ___lwdiv@quotient:	
  1072                           ; 2 bytes @ 0x4
  1073                           
  1074     0024                     __Umul8_16@product:	
  1075                           ; 2 bytes @ 0x4
  1076                           
  1077     0024                     ___fldiv@b:	
  1078                           ; 2 bytes @ 0x4
  1079                           
  1080                           
  1081                           ; 4 bytes @ 0x4
  1082     0024                     	ds	1
  1083     0025                     ??_Lcd_Set_Cursor:
  1084     0025                     ?_Lcd_Write_String:	
  1085                           ; 1 bytes @ 0x5
  1086                           
  1087     0025                     Lcd_Write_String@a:	
  1088                           ; 1 bytes @ 0x5
  1089                           
  1090                           
  1091                           ; 2 bytes @ 0x5
  1092     0025                     	ds	1
  1093     0026                     Lcd_Set_Cursor@a:
  1094     0026                     ___lwdiv@counter:	
  1095                           ; 1 bytes @ 0x6
  1096                           
  1097     0026                     UART_Write_Text@i:	
  1098                           ; 1 bytes @ 0x6
  1099                           
  1100     0026                     __Umul8_16@word_mpld:	
  1101                           ; 2 bytes @ 0x6
  1102                           
  1103                           
  1104                           ; 2 bytes @ 0x6
  1105     0026                     	ds	1
  1106     0027                     ??_Lcd_Write_String:
  1107     0027                     ?___lwmod:	
  1108                           ; 1 bytes @ 0x7
  1109                           
  1110     0027                     Lcd_Set_Cursor@z:	
  1111                           ; 2 bytes @ 0x7
  1112                           
  1113     0027                     ___lwmod@divisor:	
  1114                           ; 1 bytes @ 0x7
  1115                           
  1116                           
  1117                           ; 2 bytes @ 0x7
  1118     0027                     	ds	1
  1119     0028                     ??___fldiv:
  1120     0028                     Lcd_Set_Cursor@y:	
  1121                           ; 1 bytes @ 0x8
  1122                           
  1123     0028                     ___fltol@sign1:	
  1124                           ; 1 bytes @ 0x8
  1125                           
  1126     0028                     __Umul8_16@multiplier:	
  1127                           ; 1 bytes @ 0x8
  1128                           
  1129     0028                     ___xxtofl@sign:	
  1130                           ; 1 bytes @ 0x8
  1131                           
  1132                           
  1133                           ; 1 bytes @ 0x8
  1134     0028                     	ds	1
  1135     0029                     Lcd_Set_Cursor@temp:
  1136     0029                     ___fltol@exp1:	
  1137                           ; 1 bytes @ 0x9
  1138                           
  1139     0029                     ___xxtofl@exp:	
  1140                           ; 1 bytes @ 0x9
  1141                           
  1142     0029                     ___lwmod@dividend:	
  1143                           ; 1 bytes @ 0x9
  1144                           
  1145                           
  1146                           ; 2 bytes @ 0x9
  1147     0029                     	ds	1
  1148     002A                     ?___awdiv:
  1149     002A                     ?___awmod:	
  1150                           ; 2 bytes @ 0xA
  1151                           
  1152     002A                     Lcd_Write_String@i:	
  1153                           ; 2 bytes @ 0xA
  1154                           
  1155     002A                     ___awdiv@divisor:	
  1156                           ; 2 bytes @ 0xA
  1157                           
  1158     002A                     ___awmod@divisor:	
  1159                           ; 2 bytes @ 0xA
  1160                           
  1161     002A                     ___xxtofl@arg:	
  1162                           ; 2 bytes @ 0xA
  1163                           
  1164                           
  1165                           ; 4 bytes @ 0xA
  1166     002A                     	ds	1
  1167     002B                     ??___lwmod:
  1168     002B                     ___lwmod@counter:	
  1169                           ; 1 bytes @ 0xB
  1170                           
  1171                           
  1172                           ; 1 bytes @ 0xB
  1173     002B                     	ds	1
  1174     002C                     ??_yagBakim:
  1175     002C                     ?_sprintf:	
  1176                           ; 1 bytes @ 0xC
  1177                           
  1178     002C                     yagBakim@i:	
  1179                           ; 2 bytes @ 0xC
  1180                           
  1181     002C                     sprintf@f:	
  1182                           ; 2 bytes @ 0xC
  1183                           
  1184     002C                     ___awdiv@dividend:	
  1185                           ; 2 bytes @ 0xC
  1186                           
  1187     002C                     ___awmod@dividend:	
  1188                           ; 2 bytes @ 0xC
  1189                           
  1190                           
  1191                           ; 2 bytes @ 0xC
  1192     002C                     	ds	1
  1193     002D                     ___fldiv@rem:
  1194                           
  1195                           ; 4 bytes @ 0xD
  1196     002D                     	ds	1
  1197     002E                     ??___awdiv:
  1198     002E                     ??___awmod:	
  1199                           ; 1 bytes @ 0xE
  1200                           
  1201     002E                     ___awdiv@counter:	
  1202                           ; 1 bytes @ 0xE
  1203                           
  1204     002E                     ___awmod@counter:	
  1205                           ; 1 bytes @ 0xE
  1206                           
  1207                           
  1208                           ; 1 bytes @ 0xE
  1209     002E                     	ds	1
  1210     002F                     ___awdiv@sign:
  1211     002F                     ___awmod@sign:	
  1212                           ; 1 bytes @ 0xF
  1213                           
  1214                           
  1215                           ; 1 bytes @ 0xF
  1216     002F                     	ds	1
  1217     0030                     ___awdiv@quotient:
  1218                           
  1219                           ; 2 bytes @ 0x10
  1220     0030                     	ds	1
  1221     0031                     ___fldiv@sign:
  1222                           
  1223                           ; 1 bytes @ 0x11
  1224     0031                     	ds	1
  1225     0032                     ___fldiv@new_exp:
  1226                           
  1227                           ; 2 bytes @ 0x12
  1228     0032                     	ds	2
  1229     0034                     ___fldiv@grs:
  1230                           
  1231                           ; 4 bytes @ 0x14
  1232     0034                     	ds	2
  1233     0036                     ??_sprintf:
  1234                           
  1235                           ; 1 bytes @ 0x16
  1236     0036                     	ds	2
  1237     0038                     ___fldiv@bexp:
  1238                           
  1239                           ; 1 bytes @ 0x18
  1240     0038                     	ds	1
  1241     0039                     ___fldiv@aexp:
  1242                           
  1243                           ; 1 bytes @ 0x19
  1244     0039                     	ds	1
  1245     003A                     ?___flmul:
  1246     003A                     sprintf@prec:	
  1247                           ; 4 bytes @ 0x1A
  1248                           
  1249     003A                     ___flmul@b:	
  1250                           ; 1 bytes @ 0x1A
  1251                           
  1252                           
  1253                           ; 4 bytes @ 0x1A
  1254     003A                     	ds	1
  1255     003B                     sprintf@ap:
  1256                           
  1257                           ; 1 bytes @ 0x1B
  1258     003B                     	ds	1
  1259     003C                     sprintf@val:
  1260                           
  1261                           ; 2 bytes @ 0x1C
  1262     003C                     	ds	2
  1263     003E                     sprintf@flag:
  1264     003E                     ___flmul@a:	
  1265                           ; 1 bytes @ 0x1E
  1266                           
  1267                           
  1268                           ; 4 bytes @ 0x1E
  1269     003E                     	ds	1
  1270     003F                     sprintf@width:
  1271                           
  1272                           ; 2 bytes @ 0x1F
  1273     003F                     	ds	2
  1274     0041                     sprintf@c:
  1275                           
  1276                           ; 1 bytes @ 0x21
  1277     0041                     	ds	1
  1278     0042                     ??___flmul:
  1279     0042                     sprintf@sp:	
  1280                           ; 1 bytes @ 0x22
  1281                           
  1282                           
  1283                           ; 1 bytes @ 0x22
  1284     0042                     	ds	5
  1285     0047                     ___flmul@sign:
  1286                           
  1287                           ; 1 bytes @ 0x27
  1288     0047                     	ds	1
  1289     0048                     ___flmul@grs:
  1290                           
  1291                           ; 4 bytes @ 0x28
  1292     0048                     	ds	4
  1293     004C                     ___flmul@aexp:
  1294                           
  1295                           ; 1 bytes @ 0x2C
  1296     004C                     	ds	1
  1297     004D                     ___flmul@bexp:
  1298                           
  1299                           ; 1 bytes @ 0x2D
  1300     004D                     	ds	1
  1301     004E                     ___flmul@prod:
  1302                           
  1303                           ; 4 bytes @ 0x2E
  1304     004E                     	ds	4
  1305     0052                     ___flmul@temp:
  1306                           
  1307                           ; 2 bytes @ 0x32
  1308     0052                     	ds	2
  1309     0054                     ??_main:
  1310                           
  1311                           ; 1 bytes @ 0x34
  1312     0054                     	ds	6
  1313     005A                     main@combinedText:
  1314                           
  1315                           ; 20 bytes @ 0x3A
  1316     005A                     	ds	20
  1317                           
  1318                           	psect	maintext
  1319     16DE                     __pmaintext:	
  1320 ;;
  1321 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
  1322 ;;
  1323 ;; *************** function _main *****************
  1324 ;; Defined at:
  1325 ;;		line 115 in file "main1.c"
  1326 ;; Parameters:    Size  Location     Type
  1327 ;;		None
  1328 ;; Auto vars:     Size  Location     Type
  1329 ;;  uartMessage     8   37[BANK1 ] unsigned char [8]
  1330 ;;  uartMessage     8   29[BANK1 ] unsigned char [8]
  1331 ;;  combinedText   20    0[BANK1 ] unsigned char [20]
  1332 ;;  negativeDisp    2    0[BANK3 ] int 
  1333 ;;  negativeFeed    2   16[BANK3 ] int 
  1334 ;;  combinedText   20   58[BANK0 ] unsigned char [20]
  1335 ;;  rpmString       5   45[BANK1 ] unsigned char [5]
  1336 ;;  adcString1      4   76[BANK1 ] unsigned char [4]
  1337 ;;  integerPart     4   12[BANK3 ] float 
  1338 ;;  gostermelikl    4   58[BANK1 ] float 
  1339 ;;  oranValue       4   54[BANK1 ] float 
  1340 ;;  binler          2   10[BANK3 ] int 
  1341 ;;  yuzler          2    8[BANK3 ] int 
  1342 ;;  birler          2   74[BANK1 ] int 
  1343 ;;  onlar           2   72[BANK1 ] int 
  1344 ;;  dakika          2   70[BANK1 ] int 
  1345 ;;  saat            2   68[BANK1 ] int 
  1346 ;;  lcdText         9   20[BANK1 ] unsigned char [9]
  1347 ;;  adcValue1       4    4[BANK3 ] float 
  1348 ;;  adcValue3       4   50[BANK1 ] float 
  1349 ;;  rpmtofloat      4    0        float 
  1350 ;;  displayValue    2   18[BANK3 ] unsigned int 
  1351 ;;  ilkAcilis       2    2[BANK3 ] int 
  1352 ;;  adcValue2       2   66[BANK1 ] int 
  1353 ;;  a               2    0        unsigned int 
  1354 ;; Return value:  Size  Location     Type
  1355 ;;                  2  207[None  ] int 
  1356 ;; Registers used:
  1357 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1358 ;; Tracked objects:
  1359 ;;		On entry : B00/0
  1360 ;;		On exit  : 0/0
  1361 ;;		Unchanged: 0/0
  1362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1363 ;;      Params:         0       0       0       0       0
  1364 ;;      Locals:         0      20      80      20       0
  1365 ;;      Temps:          0       6       0       0       0
  1366 ;;      Totals:         0      26      80      20       0
  1367 ;;Total ram usage:      126 bytes
  1368 ;; Hardware stack levels required when called: 6
  1369 ;; This function calls:
  1370 ;;		_Lcd_Clear
  1371 ;;		_Lcd_Init
  1372 ;;		_Lcd_Set_Cursor
  1373 ;;		_Lcd_Write_String
  1374 ;;		_UART_Initialize
  1375 ;;		_UART_Write_Text
  1376 ;;		___awdiv
  1377 ;;		___awmod
  1378 ;;		___fldiv
  1379 ;;		___flmul
  1380 ;;		___fltol
  1381 ;;		___lwmod
  1382 ;;		___wmul
  1383 ;;		___xxtofl
  1384 ;;		_readEEPROM
  1385 ;;		_sprintf
  1386 ;;		_yagBakim
  1387 ;; This function is called by:
  1388 ;;		Startup code after reset
  1389 ;; This function uses a non-reentrant model
  1390 ;;
  1391                           
  1392     16DE                     _main:	
  1393                           ;psect for function _main
  1394                           
  1395     16DE                     l2989:	
  1396                           ;incstack = 0
  1397                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1398                           
  1399                           
  1400                           ;main1.c: 117:   unsigned int a;;main1.c: 120: TRISB = 0b00000000;
  1401     16DE  1683               	bsf	3,5	;RP0=1, select bank1
  1402     16DF  1303               	bcf	3,6	;RP1=0, select bank1
  1403     16E0  0186               	clrf	6	;volatile
  1404     16E1                     l2991:
  1405                           
  1406                           ;main1.c: 121: TRISA4 = 0;
  1407     16E1  1205               	bcf	5,4	;volatile
  1408     16E2                     l2993:
  1409                           
  1410                           ;main1.c: 122: TRISE0 = 1;
  1411     16E2  1409               	bsf	9,0	;volatile
  1412     16E3                     l2995:
  1413                           
  1414                           ;main1.c: 123: TRISE1 = 1;
  1415     16E3  1489               	bsf	9,1	;volatile
  1416     16E4                     l2997:
  1417                           
  1418                           ;main1.c: 124: TRISC1 = 1;
  1419     16E4  1487               	bsf	7,1	;volatile
  1420     16E5                     l2999:
  1421                           
  1422                           ;main1.c: 125: TRISC2 = 1;
  1423     16E5  1507               	bsf	7,2	;volatile
  1424     16E6                     l3001:
  1425                           
  1426                           ;main1.c: 126: TRISE2 = 1;
  1427     16E6  1509               	bsf	9,2	;volatile
  1428     16E7                     l3003:
  1429                           
  1430                           ;main1.c: 127: TRISC0 = 1;
  1431     16E7  1407               	bsf	7,0	;volatile
  1432     16E8                     l3005:
  1433                           
  1434                           ;main1.c: 128: TRISC3 = 1;
  1435     16E8  1587               	bsf	7,3	;volatile
  1436     16E9                     l3007:
  1437                           
  1438                           ;main1.c: 129: TRISD0 = 1;
  1439     16E9  1408               	bsf	8,0	;volatile
  1440     16EA                     l3009:
  1441                           
  1442                           ;main1.c: 131: TRISA1 = 1;
  1443     16EA  1485               	bsf	5,1	;volatile
  1444     16EB                     l3011:
  1445                           
  1446                           ;main1.c: 132: TRISA2 = 1;
  1447     16EB  1505               	bsf	5,2	;volatile
  1448     16EC                     l3013:
  1449                           
  1450                           ;main1.c: 133: TRISA3 = 1;
  1451     16EC  1585               	bsf	5,3	;volatile
  1452     16ED                     l3015:
  1453                           
  1454                           ;main1.c: 134: Lcd_Init();
  1455     16ED  160A  118A  259A  160A  118A  	fcall	_Lcd_Init
  1456     16F2                     l3017:
  1457                           
  1458                           ;main1.c: 136: TRISC6 = 0;
  1459     16F2  1683               	bsf	3,5	;RP0=1, select bank1
  1460     16F3  1303               	bcf	3,6	;RP1=0, select bank1
  1461     16F4  1307               	bcf	7,6	;volatile
  1462     16F5                     l3019:
  1463                           
  1464                           ;main1.c: 137: TRISC7 = 1;
  1465     16F5  1787               	bsf	7,7	;volatile
  1466     16F6                     l3021:
  1467                           
  1468                           ;main1.c: 140: TRISA0 = 0;
  1469     16F6  1005               	bcf	5,0	;volatile
  1470     16F7                     l3023:
  1471                           
  1472                           ;main1.c: 141: TRISA5 = 0;
  1473     16F7  1285               	bcf	5,5	;volatile
  1474     16F8                     l3025:
  1475                           
  1476                           ;main1.c: 142: TRISC4 = 0;
  1477     16F8  1207               	bcf	7,4	;volatile
  1478     16F9                     l3027:
  1479                           
  1480                           ;main1.c: 143: TRISC5 = 0;
  1481     16F9  1287               	bcf	7,5	;volatile
  1482     16FA                     l3029:
  1483                           
  1484                           ;main1.c: 144: TRISD = 0b00000001;
  1485     16FA  3001               	movlw	1
  1486     16FB  0088               	movwf	8	;volatile
  1487     16FC                     l3031:
  1488                           
  1489                           ;main1.c: 147:   _delay((unsigned long)((200)*(4000000/4000.0)));
  1490     16FC  3002               	movlw	2
  1491     16FD  1283               	bcf	3,5	;RP0=0, select bank0
  1492     16FE  1303               	bcf	3,6	;RP1=0, select bank0
  1493     16FF  00D6               	movwf	??_main+2
  1494     1700  3004               	movlw	4
  1495     1701  00D5               	movwf	??_main+1
  1496     1702  30B9               	movlw	185
  1497     1703  00D4               	movwf	??_main
  1498     1704                     u4417:
  1499     1704  0BD4               	decfsz	??_main,f
  1500     1705  2F04               	goto	u4417
  1501     1706  0BD5               	decfsz	??_main+1,f
  1502     1707  2F04               	goto	u4417
  1503     1708  0BD6               	decfsz	??_main+2,f
  1504     1709  2F04               	goto	u4417
  1505     170A  2F0B               	nop2
  1506     170B                     l3033:
  1507                           
  1508                           ;main1.c: 148:   RA4 = 0;
  1509     170B  1283               	bcf	3,5	;RP0=0, select bank0
  1510     170C  1303               	bcf	3,6	;RP1=0, select bank0
  1511     170D  1205               	bcf	5,4	;volatile
  1512     170E                     l3035:
  1513                           
  1514                           ;main1.c: 154:     currentTime.hours = readEEPROM(0x01);
  1515     170E  3001               	movlw	1
  1516     170F  00A0               	movwf	readEEPROM@address
  1517     1710  3000               	movlw	0
  1518     1711  00A1               	movwf	readEEPROM@address+1
  1519     1712  160A  118A  2234  160A  118A  	fcall	_readEEPROM
  1520     1717  1283               	bcf	3,5	;RP0=0, select bank0
  1521     1718  1303               	bcf	3,6	;RP1=0, select bank0
  1522     1719  0821               	movf	?_readEEPROM+1,w
  1523     171A  00F9               	movwf	_currentTime+1
  1524     171B  0820               	movf	?_readEEPROM,w
  1525     171C  00F8               	movwf	_currentTime
  1526     171D                     l3037:
  1527                           
  1528                           ;main1.c: 155:     currentTime.minutes = readEEPROM(0x02);
  1529     171D  3002               	movlw	2
  1530     171E  00A0               	movwf	readEEPROM@address
  1531     171F  3000               	movlw	0
  1532     1720  00A1               	movwf	readEEPROM@address+1
  1533     1721  160A  118A  2234  160A  118A  	fcall	_readEEPROM
  1534     1726  1283               	bcf	3,5	;RP0=0, select bank0
  1535     1727  1303               	bcf	3,6	;RP1=0, select bank0
  1536     1728  0821               	movf	?_readEEPROM+1,w
  1537     1729  00FB               	movwf	_currentTime+3
  1538     172A  0820               	movf	?_readEEPROM,w
  1539     172B  00FA               	movwf	_currentTime+2
  1540     172C                     l3039:
  1541                           
  1542                           ;main1.c: 160:     char lcdText[9];;main1.c: 162:     OPTION_REGbits.T0CS = 0;
  1543     172C  1683               	bsf	3,5	;RP0=1, select bank1
  1544     172D  1303               	bcf	3,6	;RP1=0, select bank1
  1545     172E  1281               	bcf	1,5	;volatile
  1546     172F                     l3041:
  1547                           
  1548                           ;main1.c: 163:     OPTION_REGbits.PSA = 0;
  1549     172F  1181               	bcf	1,3	;volatile
  1550     1730                     l3043:
  1551                           
  1552                           ;main1.c: 164:     OPTION_REGbits.PS2 = 1;
  1553     1730  1501               	bsf	1,2	;volatile
  1554     1731                     l3045:
  1555                           
  1556                           ;main1.c: 165:     OPTION_REGbits.PS1 = 1;
  1557     1731  1481               	bsf	1,1	;volatile
  1558     1732                     l3047:
  1559                           
  1560                           ;main1.c: 166:     OPTION_REGbits.PS0 = 1;
  1561     1732  1401               	bsf	1,0	;volatile
  1562     1733                     l3049:
  1563                           
  1564                           ;main1.c: 169:     INTCONbits.GIE = 1;
  1565     1733  178B               	bsf	11,7	;volatile
  1566     1734                     l3051:
  1567                           
  1568                           ;main1.c: 170:     INTCONbits.PEIE = 1;
  1569     1734  170B               	bsf	11,6	;volatile
  1570     1735                     l3053:
  1571                           
  1572                           ;main1.c: 171:     INTCONbits.T0IE = 1;
  1573     1735  168B               	bsf	11,5	;volatile
  1574     1736                     l3055:
  1575                           
  1576                           ;main1.c: 174:     Lcd_Clear();
  1577     1736  160A  118A  2203  160A  118A  	fcall	_Lcd_Clear
  1578     173B                     l3057:
  1579                           
  1580                           ;main1.c: 175:     Lcd_Set_Cursor(1,1);
  1581     173B  1283               	bcf	3,5	;RP0=0, select bank0
  1582     173C  1303               	bcf	3,6	;RP1=0, select bank0
  1583     173D  01A4               	clrf	Lcd_Set_Cursor@b
  1584     173E  0AA4               	incf	Lcd_Set_Cursor@b,f
  1585     173F  3001               	movlw	1
  1586     1740  160A  118A  2440  160A  118A  	fcall	_Lcd_Set_Cursor
  1587     1745                     l3059:
  1588                           
  1589                           ;main1.c: 176:     Lcd_Write_String("UZMANLAR MAKINA");
  1590     1745  30BD               	movlw	low (STR_3| (0+32768))
  1591     1746  1283               	bcf	3,5	;RP0=0, select bank0
  1592     1747  1303               	bcf	3,6	;RP1=0, select bank0
  1593     1748  00A5               	movwf	Lcd_Write_String@a
  1594     1749  3090               	movlw	high (STR_3| (0+32768))
  1595     174A  00A6               	movwf	Lcd_Write_String@a+1
  1596     174B  160A  118A  23B3  160A  118A  	fcall	_Lcd_Write_String
  1597     1750                     l3061:
  1598                           
  1599                           ;main1.c: 177:     Lcd_Set_Cursor(2,1);
  1600     1750  1283               	bcf	3,5	;RP0=0, select bank0
  1601     1751  1303               	bcf	3,6	;RP1=0, select bank0
  1602     1752  01A4               	clrf	Lcd_Set_Cursor@b
  1603     1753  0AA4               	incf	Lcd_Set_Cursor@b,f
  1604     1754  3002               	movlw	2
  1605     1755  160A  118A  2440  160A  118A  	fcall	_Lcd_Set_Cursor
  1606     175A                     l3063:
  1607                           
  1608                           ;main1.c: 178:     Lcd_Write_String("www.borvek.com");
  1609     175A  30DC               	movlw	low (STR_4| (0+32768))
  1610     175B  1283               	bcf	3,5	;RP0=0, select bank0
  1611     175C  1303               	bcf	3,6	;RP1=0, select bank0
  1612     175D  00A5               	movwf	Lcd_Write_String@a
  1613     175E  3090               	movlw	high (STR_4| (0+32768))
  1614     175F  00A6               	movwf	Lcd_Write_String@a+1
  1615     1760  160A  118A  23B3  160A  118A  	fcall	_Lcd_Write_String
  1616     1765                     l3065:
  1617                           
  1618                           ;main1.c: 179:     Lcd_Set_Cursor(2,17);
  1619     1765  3011               	movlw	17
  1620     1766  1283               	bcf	3,5	;RP0=0, select bank0
  1621     1767  1303               	bcf	3,6	;RP1=0, select bank0
  1622     1768  00A4               	movwf	Lcd_Set_Cursor@b
  1623     1769  3002               	movlw	2
  1624     176A  160A  118A  2440  160A  118A  	fcall	_Lcd_Set_Cursor
  1625     176F                     l3067:
  1626                           
  1627                           ;main1.c: 180:     Lcd_Write_String("V3");
  1628     176F  306F               	movlw	low (STR_5| (0+32768))
  1629     1770  1283               	bcf	3,5	;RP0=0, select bank0
  1630     1771  1303               	bcf	3,6	;RP1=0, select bank0
  1631     1772  00A5               	movwf	Lcd_Write_String@a
  1632     1773  3091               	movlw	high (STR_5| (0+32768))
  1633     1774  00A6               	movwf	Lcd_Write_String@a+1
  1634     1775  160A  118A  23B3  160A  118A  	fcall	_Lcd_Write_String
  1635     177A                     l3069:
  1636                           
  1637                           ;main1.c: 182:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1638     177A  3006               	movlw	6
  1639     177B  1283               	bcf	3,5	;RP0=0, select bank0
  1640     177C  1303               	bcf	3,6	;RP1=0, select bank0
  1641     177D  00D6               	movwf	??_main+2
  1642     177E  3013               	movlw	19
  1643     177F  00D5               	movwf	??_main+1
  1644     1780  30AD               	movlw	173
  1645     1781  00D4               	movwf	??_main
  1646     1782                     u4427:
  1647     1782  0BD4               	decfsz	??_main,f
  1648     1783  2F82               	goto	u4427
  1649     1784  0BD5               	decfsz	??_main+1,f
  1650     1785  2F82               	goto	u4427
  1651     1786  0BD6               	decfsz	??_main+2,f
  1652     1787  2F82               	goto	u4427
  1653     1788                     l3071:
  1654                           
  1655                           ;main1.c: 183:     Lcd_Clear();
  1656     1788  160A  118A  2203  160A  118A  	fcall	_Lcd_Clear
  1657     178D                     l3073:
  1658                           
  1659                           ;main1.c: 188:     SPBRG = ((4000000/16)/19200) - 1;
  1660     178D  300C               	movlw	12
  1661     178E  1683               	bsf	3,5	;RP0=1, select bank1
  1662     178F  1303               	bcf	3,6	;RP1=0, select bank1
  1663     1790  0099               	movwf	25	;volatile
  1664     1791                     l3075:
  1665                           
  1666                           ;main1.c: 189:     UART_Initialize();
  1667     1791  160A  118A  2210  160A  118A  	fcall	_UART_Initialize
  1668     1796                     l3077:
  1669                           
  1670                           ;main1.c: 190: unsigned int displayValue = 0;
  1671     1796  1683               	bsf	3,5	;RP0=1, select bank3
  1672     1797  1703               	bsf	3,6	;RP1=1, select bank3
  1673     1798  01A2               	clrf	main@displayValue^(0+384)
  1674     1799  01A3               	clrf	(main@displayValue+1)^(0+384)
  1675     179A                     l3079:
  1676                           
  1677                           ;main1.c: 195:     ADCON1bits.ADFM = 1;
  1678     179A  1683               	bsf	3,5	;RP0=1, select bank1
  1679     179B  1303               	bcf	3,6	;RP1=0, select bank1
  1680     179C  179F               	bsf	31,7	;volatile
  1681     179D                     l3081:
  1682                           
  1683                           ;main1.c: 196:     ADCON1bits.PCFG = 0b100;
  1684     179D  081F               	movf	31,w	;volatile
  1685     179E  39F0               	andlw	-16
  1686     179F  3804               	iorlw	4
  1687     17A0  009F               	movwf	31	;volatile
  1688     17A1                     l3083:
  1689                           
  1690                           ;main1.c: 197:     ADCON0bits.ADCS = 0b10;
  1691     17A1  1283               	bcf	3,5	;RP0=0, select bank0
  1692     17A2  1303               	bcf	3,6	;RP1=0, select bank0
  1693     17A3  081F               	movf	31,w	;volatile
  1694     17A4  393F               	andlw	-193
  1695     17A5  3880               	iorlw	128
  1696     17A6  009F               	movwf	31	;volatile
  1697     17A7                     l3085:
  1698                           
  1699                           ;main1.c: 198:     ADCON0bits.ADON = 1;
  1700     17A7  141F               	bsf	31,0	;volatile
  1701     17A8                     l3087:
  1702                           
  1703                           ;main1.c: 200:     float adcValue1;;main1.c: 201:     int adcValue2;;main1.c: 202:     f
      +                          loat adcValue3;;main1.c: 203:     float rpmtofloat;;main1.c: 208:     RC1 = 0;
  1704     17A8  1087               	bcf	7,1	;volatile
  1705     17A9                     l3089:
  1706                           
  1707                           ;main1.c: 209:     RE2 = 0;
  1708     17A9  1109               	bcf	9,2	;volatile
  1709     17AA                     l3091:
  1710                           
  1711                           ;main1.c: 210:     RE0 = 0;
  1712     17AA  1009               	bcf	9,0	;volatile
  1713     17AB                     l3093:
  1714                           
  1715                           ;main1.c: 211:     RC2 = 0;
  1716     17AB  1107               	bcf	7,2	;volatile
  1717     17AC                     l3095:
  1718                           
  1719                           ;main1.c: 212:     RC0 = 0;
  1720     17AC  1007               	bcf	7,0	;volatile
  1721     17AD                     l3097:
  1722                           
  1723                           ;main1.c: 213:     RE1 = 0;
  1724     17AD  1089               	bcf	9,1	;volatile
  1725     17AE                     l3099:
  1726                           
  1727                           ;main1.c: 215: int ilkAcilis = 1;
  1728     17AE  3001               	movlw	1
  1729     17AF  1683               	bsf	3,5	;RP0=1, select bank3
  1730     17B0  1703               	bsf	3,6	;RP1=1, select bank3
  1731     17B1  0092               	movwf	main@ilkAcilis^(0+384)
  1732     17B2  3000               	movlw	0
  1733     17B3  0093               	movwf	(main@ilkAcilis^(0+384)+1)
  1734     17B4                     l3101:
  1735                           
  1736                           ;main1.c: 219: if (ilkAcilis) {
  1737     17B4  1683               	bsf	3,5	;RP0=1, select bank3
  1738     17B5  1703               	bsf	3,6	;RP1=1, select bank3
  1739     17B6  0812               	movf	main@ilkAcilis^(0+384),w
  1740     17B7  0413               	iorwf	(main@ilkAcilis+1)^(0+384),w
  1741     17B8  1903               	btfsc	3,2
  1742     17B9  2FBB               	goto	u3941
  1743     17BA  2FBE               	goto	u3940
  1744     17BB                     u3941:
  1745     17BB  120A  118A  2833   	goto	l209
  1746     17BE                     u3940:
  1747     17BE                     l3103:
  1748                           
  1749                           ;main1.c: 221:     Lcd_Set_Cursor(1,1);
  1750     17BE  1283               	bcf	3,5	;RP0=0, select bank0
  1751     17BF  1303               	bcf	3,6	;RP1=0, select bank0
  1752     17C0  01A4               	clrf	Lcd_Set_Cursor@b
  1753     17C1  0AA4               	incf	Lcd_Set_Cursor@b,f
  1754     17C2  3001               	movlw	1
  1755     17C3  160A  118A  2440  160A  118A  	fcall	_Lcd_Set_Cursor
  1756     17C8                     l3105:
  1757                           
  1758                           ;main1.c: 222:     Lcd_Write_String("STOP DURUMUNA GETIR");
  1759     17C8  3096               	movlw	low (STR_6| (0+32768))
  1760     17C9  1283               	bcf	3,5	;RP0=0, select bank0
  1761     17CA  1303               	bcf	3,6	;RP1=0, select bank0
  1762     17CB  00A5               	movwf	Lcd_Write_String@a
  1763     17CC  3090               	movlw	high (STR_6| (0+32768))
  1764     17CD  00A6               	movwf	Lcd_Write_String@a+1
  1765     17CE  160A  118A  23B3  160A  118A  	fcall	_Lcd_Write_String
  1766     17D3                     l3107:
  1767                           
  1768                           ;main1.c: 223:     Lcd_Set_Cursor(2,1);
  1769     17D3  1283               	bcf	3,5	;RP0=0, select bank0
  1770     17D4  1303               	bcf	3,6	;RP1=0, select bank0
  1771     17D5  01A4               	clrf	Lcd_Set_Cursor@b
  1772     17D6  0AA4               	incf	Lcd_Set_Cursor@b,f
  1773     17D7  3002               	movlw	2
  1774     17D8  160A  118A  2440  160A  118A  	fcall	_Lcd_Set_Cursor
  1775                           
  1776                           ;main1.c: 224:     Lcd_Write_String("PUT IT IN STOP STATE");
  1777     17DD  3081               	movlw	low (STR_7| (0+32768))
  1778     17DE  1283               	bcf	3,5	;RP0=0, select bank0
  1779     17DF  1303               	bcf	3,6	;RP1=0, select bank0
  1780     17E0  00A5               	movwf	Lcd_Write_String@a
  1781     17E1  3090               	movlw	high (STR_7| (0+32768))
  1782     17E2  00A6               	movwf	Lcd_Write_String@a+1
  1783     17E3  160A  118A  23B3  160A  118A  	fcall	_Lcd_Write_String
  1784     17E8                     l3109:
  1785                           
  1786                           ;main1.c: 225:     _delay((unsigned long)((500)*(4000000/4000.0)));
  1787     17E8  3003               	movlw	3
  1788     17E9  1283               	bcf	3,5	;RP0=0, select bank0
  1789     17EA  1303               	bcf	3,6	;RP1=0, select bank0
  1790     17EB  00D6               	movwf	??_main+2
  1791     17EC  308A               	movlw	138
  1792     17ED  00D5               	movwf	??_main+1
  1793     17EE  3055               	movlw	85
  1794     17EF  00D4               	movwf	??_main
  1795     17F0                     u4437:
  1796     17F0  0BD4               	decfsz	??_main,f
  1797     17F1  2FF0               	goto	u4437
  1798     17F2  0BD5               	decfsz	??_main+1,f
  1799     17F3  2FF0               	goto	u4437
  1800     17F4  0BD6               	decfsz	??_main+2,f
  1801     17F5  2FF0               	goto	u4437
  1802     17F6                     l3111:
  1803                           
  1804                           ;main1.c: 226:         if ( RE2 == 0 && RE0 == 0 && RC0 == 0 && RE1 == 0) {
  1805     17F6  1283               	bcf	3,5	;RP0=0, select bank0
  1806     17F7  1303               	bcf	3,6	;RP1=0, select bank0
  1807     17F8  1909               	btfsc	9,2	;volatile
  1808     17F9  2FFD               	goto	u3951
  1809     17FA  120A  118A  2823   	goto	u3950
  1810     17FD                     u3951:
  1811     17FD  120A  118A  2FEF   	goto	l212
  1812                           
  1813                           	psect	text1
  1814     148C                     __ptext1:	
  1815 ;; *************** function _yagBakim *****************
  1816 ;; Defined at:
  1817 ;;		line 27 in file "main1.c"
  1818 ;; Parameters:    Size  Location     Type
  1819 ;;		None
  1820 ;; Auto vars:     Size  Location     Type
  1821 ;;  i               2   12[BANK0 ] int 
  1822 ;; Return value:  Size  Location     Type
  1823 ;;                  1    wreg      void 
  1824 ;; Registers used:
  1825 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1826 ;; Tracked objects:
  1827 ;;		On entry : 0/0
  1828 ;;		On exit  : 0/0
  1829 ;;		Unchanged: 0/0
  1830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1831 ;;      Params:         0       0       0       0       0
  1832 ;;      Locals:         0       2       0       0       0
  1833 ;;      Temps:          0       0       0       0       0
  1834 ;;      Totals:         0       2       0       0       0
  1835 ;;Total ram usage:        2 bytes
  1836 ;; Hardware stack levels used: 1
  1837 ;; Hardware stack levels required when called: 5
  1838 ;; This function calls:
  1839 ;;		_Lcd_Clear
  1840 ;;		_Lcd_Set_Cursor
  1841 ;;		_Lcd_Write_String
  1842 ;; This function is called by:
  1843 ;;		_main
  1844 ;; This function uses a non-reentrant model
  1845 ;;
  1846                           
  1847     148C                     _yagBakim:	
  1848                           ;psect for function _yagBakim
  1849                           
  1850     148C                     l2337:	
  1851                           ;incstack = 0
  1852                           ; Regs used in _yagBakim: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1853                           
  1854                           
  1855                           ;main1.c: 28:     Lcd_Clear();
  1856     148C  160A  118A  2203  160A  118A  	fcall	_Lcd_Clear
  1857     1491                     l2339:
  1858                           
  1859                           ;main1.c: 29:     for (int i = 0; i < 10; i++) {
  1860     1491  1283               	bcf	3,5	;RP0=0, select bank0
  1861     1492  1303               	bcf	3,6	;RP1=0, select bank0
  1862     1493  01AC               	clrf	yagBakim@i
  1863     1494  01AD               	clrf	yagBakim@i+1
  1864     1495                     l2345:
  1865                           
  1866                           ;main1.c: 30:         Lcd_Set_Cursor(1, 1);
  1867     1495  1283               	bcf	3,5	;RP0=0, select bank0
  1868     1496  1303               	bcf	3,6	;RP1=0, select bank0
  1869     1497  01A4               	clrf	Lcd_Set_Cursor@b
  1870     1498  0AA4               	incf	Lcd_Set_Cursor@b,f
  1871     1499  3001               	movlw	1
  1872     149A  160A  118A  2440  160A  118A  	fcall	_Lcd_Set_Cursor
  1873     149F                     l2347:
  1874                           
  1875                           ;main1.c: 31:         Lcd_Write_String("YAG BAKIMI YAPINIZ");
  1876     149F  30AA               	movlw	low (STR_1| (0+32768))
  1877     14A0  1283               	bcf	3,5	;RP0=0, select bank0
  1878     14A1  1303               	bcf	3,6	;RP1=0, select bank0
  1879     14A2  00A5               	movwf	Lcd_Write_String@a
  1880     14A3  3090               	movlw	high (STR_1| (0+32768))
  1881     14A4  00A6               	movwf	Lcd_Write_String@a+1
  1882     14A5  160A  118A  23B3  160A  118A  	fcall	_Lcd_Write_String
  1883     14AA                     l2349:
  1884                           
  1885                           ;main1.c: 32:         Lcd_Set_Cursor(2, 1);
  1886     14AA  1283               	bcf	3,5	;RP0=0, select bank0
  1887     14AB  1303               	bcf	3,6	;RP1=0, select bank0
  1888     14AC  01A4               	clrf	Lcd_Set_Cursor@b
  1889     14AD  0AA4               	incf	Lcd_Set_Cursor@b,f
  1890     14AE  3002               	movlw	2
  1891     14AF  160A  118A  2440  160A  118A  	fcall	_Lcd_Set_Cursor
  1892                           
  1893                           ;main1.c: 33:         Lcd_Write_String("OIL THE GEARS");
  1894     14B4  30F9               	movlw	low (STR_2| (0+32768))
  1895     14B5  1283               	bcf	3,5	;RP0=0, select bank0
  1896     14B6  1303               	bcf	3,6	;RP1=0, select bank0
  1897     14B7  00A5               	movwf	Lcd_Write_String@a
  1898     14B8  3090               	movlw	high (STR_2| (0+32768))
  1899     14B9  00A6               	movwf	Lcd_Write_String@a+1
  1900     14BA  160A  118A  23B3  160A  118A  	fcall	_Lcd_Write_String
  1901     14BF                     l2351:
  1902                           
  1903                           ;main1.c: 34:         RA4 = 1;
  1904     14BF  1283               	bcf	3,5	;RP0=0, select bank0
  1905     14C0  1303               	bcf	3,6	;RP1=0, select bank0
  1906     14C1  1605               	bsf	5,4	;volatile
  1907     14C2                     l2353:
  1908                           
  1909                           ;main1.c: 35:     }
  1910     14C2  3001               	movlw	1
  1911     14C3  07AC               	addwf	yagBakim@i,f
  1912     14C4  1803               	skipnc
  1913     14C5  0AAD               	incf	yagBakim@i+1,f
  1914     14C6  3000               	movlw	0
  1915     14C7  07AD               	addwf	yagBakim@i+1,f
  1916     14C8                     l2355:
  1917     14C8  082D               	movf	yagBakim@i+1,w
  1918     14C9  3A80               	xorlw	128
  1919     14CA  00FF               	movwf	btemp+1
  1920     14CB  3080               	movlw	128
  1921     14CC  027F               	subwf	btemp+1,w
  1922     14CD  1D03               	skipz
  1923     14CE  2CD1               	goto	u2595
  1924     14CF  300A               	movlw	10
  1925     14D0  022C               	subwf	yagBakim@i,w
  1926     14D1                     u2595:
  1927     14D1  1C03               	skipc
  1928     14D2  2CD4               	goto	u2591
  1929     14D3  2CD5               	goto	u2590
  1930     14D4                     u2591:
  1931     14D4  2C95               	goto	l2345
  1932     14D5                     u2590:
  1933     14D5                     l2357:
  1934                           
  1935                           ;main1.c: 36:     Lcd_Clear();
  1936     14D5  160A  118A  2203  160A  118A  	fcall	_Lcd_Clear
  1937     14DA                     l2359:
  1938                           
  1939                           ;main1.c: 37:     RA4 = 0;
  1940     14DA  1283               	bcf	3,5	;RP0=0, select bank0
  1941     14DB  1303               	bcf	3,6	;RP1=0, select bank0
  1942     14DC  1205               	bcf	5,4	;volatile
  1943     14DD                     l175:
  1944     14DD  0008               	return
  1945     14DE                     __end_of_yagBakim:
  1946                           
  1947                           	psect	text2
  1948     13B3                     __ptext2:	
  1949 ;; *************** function _Lcd_Write_String *****************
  1950 ;; Defined at:
  1951 ;;		line 96 in file "./lcd.h"
  1952 ;; Parameters:    Size  Location     Type
  1953 ;;  a               2    5[BANK0 ] PTR unsigned char 
  1954 ;;		 -> STR_33(24), STR_32(24), STR_29(27), STR_28(26), 
  1955 ;;		 -> STR_26(13), STR_24(14), STR_22(10), STR_20(9), 
  1956 ;;		 -> STR_18(15), STR_16(10), STR_14(9), main@rpmString(5), 
  1957 ;;		 -> STR_12(5), main@adcString1(4), STR_10(10), STR_9(3), 
  1958 ;;		 -> main@lcdText(9), STR_7(21), STR_6(20), STR_5(3), 
  1959 ;;		 -> STR_4(15), STR_3(16), STR_2(14), STR_1(19), 
  1960 ;; Auto vars:     Size  Location     Type
  1961 ;;  i               2   10[BANK0 ] int 
  1962 ;; Return value:  Size  Location     Type
  1963 ;;                  1    wreg      void 
  1964 ;; Registers used:
  1965 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1966 ;; Tracked objects:
  1967 ;;		On entry : 0/0
  1968 ;;		On exit  : 0/0
  1969 ;;		Unchanged: 0/0
  1970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1971 ;;      Params:         0       2       0       0       0
  1972 ;;      Locals:         0       2       0       0       0
  1973 ;;      Temps:          0       3       0       0       0
  1974 ;;      Totals:         0       7       0       0       0
  1975 ;;Total ram usage:        7 bytes
  1976 ;; Hardware stack levels used: 1
  1977 ;; Hardware stack levels required when called: 4
  1978 ;; This function calls:
  1979 ;;		_Lcd_Write_Char
  1980 ;; This function is called by:
  1981 ;;		_yagBakim
  1982 ;;		_main
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           
  1986     13B3                     _Lcd_Write_String:	
  1987                           ;psect for function _Lcd_Write_String
  1988                           
  1989     13B3                     l2219:	
  1990                           ;incstack = 0
  1991                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1992                           
  1993                           
  1994                           ;./lcd.h: 96: void Lcd_Write_String(char *a);./lcd.h: 97: {;./lcd.h: 98:  int i;;./lcd.h
      +                          : 99:  for(i=0;a[i]!='\0';i++)
  1995     13B3  1283               	bcf	3,5	;RP0=0, select bank0
  1996     13B4  1303               	bcf	3,6	;RP1=0, select bank0
  1997     13B5  01AA               	clrf	Lcd_Write_String@i
  1998     13B6  01AB               	clrf	Lcd_Write_String@i+1
  1999     13B7  2BDC               	goto	l2225
  2000     13B8                     l2221:
  2001                           
  2002                           ;./lcd.h: 100:     Lcd_Write_Char(a[i]);
  2003     13B8  082A               	movf	Lcd_Write_String@i,w
  2004     13B9  0725               	addwf	Lcd_Write_String@a,w
  2005     13BA  00A8               	movwf	??_Lcd_Write_String+1
  2006     13BB  0826               	movf	Lcd_Write_String@a+1,w
  2007     13BC  00A7               	movwf	??_Lcd_Write_String
  2008     13BD  1803               	skipnc
  2009     13BE  0AA7               	incf	??_Lcd_Write_String,f
  2010     13BF  1FAA               	btfss	Lcd_Write_String@i,7
  2011     13C0  2BC2               	goto	u2310
  2012     13C1  03A7               	decf	??_Lcd_Write_String,f
  2013     13C2                     u2310:
  2014     13C2  1283               	bcf	3,5	;RP0=0, select bank0
  2015     13C3  1303               	bcf	3,6	;RP1=0, select bank0
  2016     13C4  0827               	movf	??_Lcd_Write_String,w
  2017     13C5  00A9               	movwf	??_Lcd_Write_String+2
  2018     13C6  0829               	movf	??_Lcd_Write_String+2,w
  2019     13C7  00FF               	movwf	btemp+1
  2020     13C8  0828               	movf	??_Lcd_Write_String+1,w
  2021     13C9  0084               	movwf	4
  2022     13CA  160A  118A  2000  160A  118A  	fcall	stringtab
  2023     13CF  120A  158A  2002  160A  118A  	fcall	_Lcd_Write_Char
  2024     13D4                     l2223:
  2025     13D4  3001               	movlw	1
  2026     13D5  1283               	bcf	3,5	;RP0=0, select bank0
  2027     13D6  1303               	bcf	3,6	;RP1=0, select bank0
  2028     13D7  07AA               	addwf	Lcd_Write_String@i,f
  2029     13D8  1803               	skipnc
  2030     13D9  0AAB               	incf	Lcd_Write_String@i+1,f
  2031     13DA  3000               	movlw	0
  2032     13DB  07AB               	addwf	Lcd_Write_String@i+1,f
  2033     13DC                     l2225:
  2034     13DC  082A               	movf	Lcd_Write_String@i,w
  2035     13DD  0725               	addwf	Lcd_Write_String@a,w
  2036     13DE  00A8               	movwf	??_Lcd_Write_String+1
  2037     13DF  0826               	movf	Lcd_Write_String@a+1,w
  2038     13E0  00A7               	movwf	??_Lcd_Write_String
  2039     13E1  1803               	skipnc
  2040     13E2  0AA7               	incf	??_Lcd_Write_String,f
  2041     13E3  1FAA               	btfss	Lcd_Write_String@i,7
  2042     13E4  2BE6               	goto	u2320
  2043     13E5  03A7               	decf	??_Lcd_Write_String,f
  2044     13E6                     u2320:
  2045     13E6  1283               	bcf	3,5	;RP0=0, select bank0
  2046     13E7  1303               	bcf	3,6	;RP1=0, select bank0
  2047     13E8  0827               	movf	??_Lcd_Write_String,w
  2048     13E9  00A9               	movwf	??_Lcd_Write_String+2
  2049     13EA  0829               	movf	??_Lcd_Write_String+2,w
  2050     13EB  00FF               	movwf	btemp+1
  2051     13EC  0828               	movf	??_Lcd_Write_String+1,w
  2052     13ED  0084               	movwf	4
  2053     13EE  160A  118A  2000  160A  118A  	fcall	stringtab
  2054     13F3  3A00               	xorlw	0
  2055     13F4  1D03               	skipz
  2056     13F5  2BF7               	goto	u2331
  2057     13F6  2BF8               	goto	u2330
  2058     13F7                     u2331:
  2059     13F7  2BB8               	goto	l2221
  2060     13F8                     u2330:
  2061     13F8                     l170:
  2062     13F8  0008               	return
  2063     13F9                     __end_of_Lcd_Write_String:
  2064                           
  2065                           	psect	text3
  2066     0802                     __ptext3:	
  2067 ;; *************** function _Lcd_Write_Char *****************
  2068 ;; Defined at:
  2069 ;;		line 80 in file "./lcd.h"
  2070 ;; Parameters:    Size  Location     Type
  2071 ;;  a               1    wreg     unsigned char 
  2072 ;; Auto vars:     Size  Location     Type
  2073 ;;  a               1    4[BANK0 ] unsigned char 
  2074 ;;  y               1    3[BANK0 ] unsigned char 
  2075 ;;  temp            1    2[BANK0 ] unsigned char 
  2076 ;; Return value:  Size  Location     Type
  2077 ;;                  1    wreg      void 
  2078 ;; Registers used:
  2079 ;;		wreg, status,2, status,0, pclath, cstack
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2085 ;;      Params:         0       0       0       0       0
  2086 ;;      Locals:         0       3       0       0       0
  2087 ;;      Temps:          0       1       0       0       0
  2088 ;;      Totals:         0       4       0       0       0
  2089 ;;Total ram usage:        4 bytes
  2090 ;; Hardware stack levels used: 1
  2091 ;; Hardware stack levels required when called: 3
  2092 ;; This function calls:
  2093 ;;		_Lcd_Port
  2094 ;; This function is called by:
  2095 ;;		_Lcd_Write_String
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099     0802                     _Lcd_Write_Char:	
  2100                           ;psect for function _Lcd_Write_Char
  2101                           
  2102                           
  2103                           ;incstack = 0
  2104                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2105                           ;Lcd_Write_Char@a stored from wreg
  2106     0802  1283               	bcf	3,5	;RP0=0, select bank0
  2107     0803  1303               	bcf	3,6	;RP1=0, select bank0
  2108     0804  00A4               	movwf	Lcd_Write_Char@a
  2109     0805                     l2173:
  2110                           
  2111                           ;./lcd.h: 80: void Lcd_Write_Char(char a);./lcd.h: 81: {;./lcd.h: 82:    char temp,y;;./
      +                          lcd.h: 83:    temp = a&0x0F;
  2112     0805  0824               	movf	Lcd_Write_Char@a,w
  2113     0806  390F               	andlw	15
  2114     0807  00A2               	movwf	Lcd_Write_Char@temp
  2115                           
  2116                           ;./lcd.h: 84:    y = a&0xF0;
  2117     0808  0824               	movf	Lcd_Write_Char@a,w
  2118     0809  39F0               	andlw	240
  2119     080A  00A3               	movwf	Lcd_Write_Char@y
  2120     080B                     l2175:
  2121                           
  2122                           ;./lcd.h: 85:    RB5 = 1;
  2123     080B  1686               	bsf	6,5	;volatile
  2124     080C                     l2177:
  2125                           
  2126                           ;./lcd.h: 86:    Lcd_Port(y>>4);
  2127     080C  0823               	movf	Lcd_Write_Char@y,w
  2128     080D  00A1               	movwf	??_Lcd_Write_Char
  2129     080E  3004               	movlw	4
  2130     080F                     u2255:
  2131     080F  1003               	clrc
  2132     0810  0CA1               	rrf	??_Lcd_Write_Char,f
  2133     0811  3EFF               	addlw	-1
  2134     0812  1D03               	skipz
  2135     0813  280F               	goto	u2255
  2136     0814  0821               	movf	??_Lcd_Write_Char,w
  2137     0815  160A  118A  227B  120A  158A  	fcall	_Lcd_Port
  2138     081A                     l2179:
  2139                           
  2140                           ;./lcd.h: 87:    RB4 = 1;
  2141     081A  1283               	bcf	3,5	;RP0=0, select bank0
  2142     081B  1303               	bcf	3,6	;RP1=0, select bank0
  2143     081C  1606               	bsf	6,4	;volatile
  2144     081D                     l2181:
  2145                           
  2146                           ;./lcd.h: 88:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  2147     081D  300C               	movlw	12
  2148     081E  1283               	bcf	3,5	;RP0=0, select bank0
  2149     081F  1303               	bcf	3,6	;RP1=0, select bank0
  2150     0820  00A1               	movwf	??_Lcd_Write_Char
  2151     0821                     u4497:
  2152     0821  0BA1               	decfsz	??_Lcd_Write_Char,f
  2153     0822  2821               	goto	u4497
  2154     0823  0000               	nop
  2155     0824                     l2183:
  2156                           
  2157                           ;./lcd.h: 89:    RB4 = 0;
  2158     0824  1283               	bcf	3,5	;RP0=0, select bank0
  2159     0825  1303               	bcf	3,6	;RP1=0, select bank0
  2160     0826  1206               	bcf	6,4	;volatile
  2161     0827                     l2185:
  2162                           
  2163                           ;./lcd.h: 90:    Lcd_Port(temp);
  2164     0827  0822               	movf	Lcd_Write_Char@temp,w
  2165     0828  160A  118A  227B  120A  158A  	fcall	_Lcd_Port
  2166     082D                     l2187:
  2167                           
  2168                           ;./lcd.h: 91:    RB4 = 1;
  2169     082D  1283               	bcf	3,5	;RP0=0, select bank0
  2170     082E  1303               	bcf	3,6	;RP1=0, select bank0
  2171     082F  1606               	bsf	6,4	;volatile
  2172     0830                     l2189:
  2173                           
  2174                           ;./lcd.h: 92:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  2175     0830  300C               	movlw	12
  2176     0831  1283               	bcf	3,5	;RP0=0, select bank0
  2177     0832  1303               	bcf	3,6	;RP1=0, select bank0
  2178     0833  00A1               	movwf	??_Lcd_Write_Char
  2179     0834                     u4507:
  2180     0834  0BA1               	decfsz	??_Lcd_Write_Char,f
  2181     0835  2834               	goto	u4507
  2182     0836  0000               	nop
  2183     0837                     l2191:
  2184                           
  2185                           ;./lcd.h: 93:    RB4 = 0;
  2186     0837  1283               	bcf	3,5	;RP0=0, select bank0
  2187     0838  1303               	bcf	3,6	;RP1=0, select bank0
  2188     0839  1206               	bcf	6,4	;volatile
  2189     083A                     l164:
  2190     083A  0008               	return
  2191     083B                     __end_of_Lcd_Write_Char:
  2192                           
  2193                           	psect	text4
  2194     1440                     __ptext4:	
  2195 ;; *************** function _Lcd_Set_Cursor *****************
  2196 ;; Defined at:
  2197 ;;		line 40 in file "./lcd.h"
  2198 ;; Parameters:    Size  Location     Type
  2199 ;;  a               1    wreg     unsigned char 
  2200 ;;  b               1    4[BANK0 ] unsigned char 
  2201 ;; Auto vars:     Size  Location     Type
  2202 ;;  a               1    6[BANK0 ] unsigned char 
  2203 ;;  temp            1    9[BANK0 ] unsigned char 
  2204 ;;  y               1    8[BANK0 ] unsigned char 
  2205 ;;  z               1    7[BANK0 ] unsigned char 
  2206 ;; Return value:  Size  Location     Type
  2207 ;;                  1    wreg      void 
  2208 ;; Registers used:
  2209 ;;		wreg, status,2, status,0, pclath, cstack
  2210 ;; Tracked objects:
  2211 ;;		On entry : 0/0
  2212 ;;		On exit  : 0/0
  2213 ;;		Unchanged: 0/0
  2214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2215 ;;      Params:         0       1       0       0       0
  2216 ;;      Locals:         0       4       0       0       0
  2217 ;;      Temps:          0       1       0       0       0
  2218 ;;      Totals:         0       6       0       0       0
  2219 ;;Total ram usage:        6 bytes
  2220 ;; Hardware stack levels used: 1
  2221 ;; Hardware stack levels required when called: 4
  2222 ;; This function calls:
  2223 ;;		_Lcd_Cmd
  2224 ;; This function is called by:
  2225 ;;		_yagBakim
  2226 ;;		_main
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230     1440                     _Lcd_Set_Cursor:	
  2231                           ;psect for function _Lcd_Set_Cursor
  2232                           
  2233                           
  2234                           ;incstack = 0
  2235                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2236                           ;Lcd_Set_Cursor@a stored from wreg
  2237     1440  1283               	bcf	3,5	;RP0=0, select bank0
  2238     1441  1303               	bcf	3,6	;RP1=0, select bank0
  2239     1442  00A6               	movwf	Lcd_Set_Cursor@a
  2240     1443                     l2199:
  2241                           
  2242                           ;./lcd.h: 40: void Lcd_Set_Cursor(char a, char b);./lcd.h: 41: {;./lcd.h: 42:  char temp
      +                          ,z,y;;./lcd.h: 43:  if(a == 1)
  2243     1443  0326               	decf	Lcd_Set_Cursor@a,w
  2244     1444  1D03               	btfss	3,2
  2245     1445  2C47               	goto	u2271
  2246     1446  2C48               	goto	u2270
  2247     1447                     u2271:
  2248     1447  2C67               	goto	l2209
  2249     1448                     u2270:
  2250     1448                     l2201:
  2251                           
  2252                           ;./lcd.h: 44:  {;./lcd.h: 45:    temp = 0x80 + b - 1;
  2253     1448  0824               	movf	Lcd_Set_Cursor@b,w
  2254     1449  3E7F               	addlw	127
  2255     144A  00A9               	movwf	Lcd_Set_Cursor@temp
  2256                           
  2257                           ;./lcd.h: 46:   z = temp>>4;
  2258     144B  0829               	movf	Lcd_Set_Cursor@temp,w
  2259     144C  00A5               	movwf	??_Lcd_Set_Cursor
  2260     144D  3004               	movlw	4
  2261     144E                     u2285:
  2262     144E  1003               	clrc
  2263     144F  0CA5               	rrf	??_Lcd_Set_Cursor,f
  2264     1450  3EFF               	addlw	-1
  2265     1451  1D03               	skipz
  2266     1452  2C4E               	goto	u2285
  2267     1453  0825               	movf	??_Lcd_Set_Cursor,w
  2268     1454  00A7               	movwf	Lcd_Set_Cursor@z
  2269     1455                     l2203:
  2270                           
  2271                           ;./lcd.h: 47:   y = temp & 0x0F;
  2272     1455  0829               	movf	Lcd_Set_Cursor@temp,w
  2273     1456  390F               	andlw	15
  2274     1457  00A8               	movwf	Lcd_Set_Cursor@y
  2275     1458                     l2205:
  2276                           
  2277                           ;./lcd.h: 48:   Lcd_Cmd(z);
  2278     1458  0827               	movf	Lcd_Set_Cursor@z,w
  2279     1459  160A  118A  225F  160A  118A  	fcall	_Lcd_Cmd
  2280     145E                     l2207:
  2281                           
  2282                           ;./lcd.h: 49:   Lcd_Cmd(y);
  2283     145E  1283               	bcf	3,5	;RP0=0, select bank0
  2284     145F  1303               	bcf	3,6	;RP1=0, select bank0
  2285     1460  0828               	movf	Lcd_Set_Cursor@y,w
  2286     1461  160A  118A  225F  160A  118A  	fcall	_Lcd_Cmd
  2287                           
  2288                           ;./lcd.h: 50:  }
  2289     1466  2C8B               	goto	l158
  2290     1467                     l2209:
  2291     1467  3002               	movlw	2
  2292     1468  0626               	xorwf	Lcd_Set_Cursor@a,w
  2293     1469  1D03               	btfss	3,2
  2294     146A  2C6C               	goto	u2291
  2295     146B  2C6D               	goto	u2290
  2296     146C                     u2291:
  2297     146C  2C8B               	goto	l158
  2298     146D                     u2290:
  2299     146D                     l2211:
  2300                           
  2301                           ;./lcd.h: 52:  {;./lcd.h: 53:   temp = 0xC0 + b - 1;
  2302     146D  0824               	movf	Lcd_Set_Cursor@b,w
  2303     146E  3EBF               	addlw	191
  2304     146F  00A9               	movwf	Lcd_Set_Cursor@temp
  2305                           
  2306                           ;./lcd.h: 54:   z = temp>>4;
  2307     1470  0829               	movf	Lcd_Set_Cursor@temp,w
  2308     1471  00A5               	movwf	??_Lcd_Set_Cursor
  2309     1472  3004               	movlw	4
  2310     1473                     u2305:
  2311     1473  1003               	clrc
  2312     1474  0CA5               	rrf	??_Lcd_Set_Cursor,f
  2313     1475  3EFF               	addlw	-1
  2314     1476  1D03               	skipz
  2315     1477  2C73               	goto	u2305
  2316     1478  0825               	movf	??_Lcd_Set_Cursor,w
  2317     1479  00A7               	movwf	Lcd_Set_Cursor@z
  2318     147A                     l2213:
  2319                           
  2320                           ;./lcd.h: 55:   y = temp & 0x0F;
  2321     147A  0829               	movf	Lcd_Set_Cursor@temp,w
  2322     147B  390F               	andlw	15
  2323     147C  00A8               	movwf	Lcd_Set_Cursor@y
  2324     147D                     l2215:
  2325                           
  2326                           ;./lcd.h: 56:   Lcd_Cmd(z);
  2327     147D  0827               	movf	Lcd_Set_Cursor@z,w
  2328     147E  160A  118A  225F  160A  118A  	fcall	_Lcd_Cmd
  2329     1483                     l2217:
  2330                           
  2331                           ;./lcd.h: 57:   Lcd_Cmd(y);
  2332     1483  1283               	bcf	3,5	;RP0=0, select bank0
  2333     1484  1303               	bcf	3,6	;RP1=0, select bank0
  2334     1485  0828               	movf	Lcd_Set_Cursor@y,w
  2335     1486  160A  118A  225F  160A  118A  	fcall	_Lcd_Cmd
  2336     148B                     l158:
  2337     148B  0008               	return
  2338     148C                     __end_of_Lcd_Set_Cursor:
  2339                           
  2340                           	psect	text5
  2341     1203                     __ptext5:	
  2342 ;; *************** function _Lcd_Clear *****************
  2343 ;; Defined at:
  2344 ;;		line 34 in file "./lcd.h"
  2345 ;; Parameters:    Size  Location     Type
  2346 ;;		None
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;		None
  2349 ;; Return value:  Size  Location     Type
  2350 ;;                  1    wreg      void 
  2351 ;; Registers used:
  2352 ;;		wreg, status,2, status,0, pclath, cstack
  2353 ;; Tracked objects:
  2354 ;;		On entry : 0/0
  2355 ;;		On exit  : 0/0
  2356 ;;		Unchanged: 0/0
  2357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2358 ;;      Params:         0       0       0       0       0
  2359 ;;      Locals:         0       0       0       0       0
  2360 ;;      Temps:          0       0       0       0       0
  2361 ;;      Totals:         0       0       0       0       0
  2362 ;;Total ram usage:        0 bytes
  2363 ;; Hardware stack levels used: 1
  2364 ;; Hardware stack levels required when called: 4
  2365 ;; This function calls:
  2366 ;;		_Lcd_Cmd
  2367 ;; This function is called by:
  2368 ;;		_yagBakim
  2369 ;;		_main
  2370 ;; This function uses a non-reentrant model
  2371 ;;
  2372                           
  2373     1203                     _Lcd_Clear:	
  2374                           ;psect for function _Lcd_Clear
  2375                           
  2376     1203                     l2197:	
  2377                           ;incstack = 0
  2378                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2379                           
  2380                           
  2381                           ;./lcd.h: 36:  Lcd_Cmd(0);
  2382     1203  3000               	movlw	0
  2383     1204  160A  118A  225F  160A  118A  	fcall	_Lcd_Cmd
  2384                           
  2385                           ;./lcd.h: 37:  Lcd_Cmd(1);
  2386     1209  3001               	movlw	1
  2387     120A  160A  118A  225F  160A  118A  	fcall	_Lcd_Cmd
  2388     120F                     l152:
  2389     120F  0008               	return
  2390     1210                     __end_of_Lcd_Clear:
  2391                           
  2392                           	psect	text6
  2393     0AC4                     __ptext6:	
  2394 ;; *************** function _sprintf *****************
  2395 ;; Defined at:
  2396 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  2397 ;; Parameters:    Size  Location     Type
  2398 ;;  sp              1    wreg     PTR unsigned char 
  2399 ;;		 -> main@combinedText_374(20), main@uartMessage_370(8), main@combinedText(20), main@uartMessage(8), 
  2400 ;;		 -> main@rpmString(5), main@adcString1(4), main@lcdText(9), 
  2401 ;;  f               2   12[BANK0 ] PTR const unsigned char 
  2402 ;;		 -> STR_25(6), STR_23(6), STR_19(6), STR_17(6), 
  2403 ;;		 -> STR_13(10), STR_11(6), STR_8(11), 
  2404 ;; Auto vars:     Size  Location     Type
  2405 ;;  sp              1   34[BANK0 ] PTR unsigned char 
  2406 ;;		 -> main@combinedText_374(20), main@uartMessage_370(8), main@combinedText(20), main@uartMessage(8), 
  2407 ;;		 -> main@rpmString(5), main@adcString1(4), main@lcdText(9), 
  2408 ;;  tmpval          4    0        struct .
  2409 ;;  width           2   31[BANK0 ] int 
  2410 ;;  val             2   28[BANK0 ] unsigned int 
  2411 ;;  cp              2    0        PTR const unsigned char 
  2412 ;;  len             2    0        unsigned int 
  2413 ;;  c               1   33[BANK0 ] unsigned char 
  2414 ;;  flag            1   30[BANK0 ] unsigned char 
  2415 ;;  ap              1   27[BANK0 ] PTR void [1]
  2416 ;;		 -> ?_sprintf(2), 
  2417 ;;  prec            1   26[BANK0 ] char 
  2418 ;; Return value:  Size  Location     Type
  2419 ;;                  2   12[BANK0 ] int 
  2420 ;; Registers used:
  2421 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2422 ;; Tracked objects:
  2423 ;;		On entry : 0/0
  2424 ;;		On exit  : 0/0
  2425 ;;		Unchanged: 0/0
  2426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2427 ;;      Params:         0      10       0       0       0
  2428 ;;      Locals:         0       9       0       0       0
  2429 ;;      Temps:          0       4       0       0       0
  2430 ;;      Totals:         0      23       0       0       0
  2431 ;;Total ram usage:       23 bytes
  2432 ;; Hardware stack levels used: 1
  2433 ;; Hardware stack levels required when called: 3
  2434 ;; This function calls:
  2435 ;;		___lwdiv
  2436 ;;		___lwmod
  2437 ;;		___wmul
  2438 ;;		_isdigit
  2439 ;; This function is called by:
  2440 ;;		_main
  2441 ;; This function uses a non-reentrant model
  2442 ;;
  2443                           
  2444     0AC4                     _sprintf:	
  2445                           ;psect for function _sprintf
  2446                           
  2447                           
  2448                           ;incstack = 0
  2449                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2450                           ;sprintf@sp stored from wreg
  2451     0AC4  1283               	bcf	3,5	;RP0=0, select bank0
  2452     0AC5  1303               	bcf	3,6	;RP1=0, select bank0
  2453     0AC6  00C2               	movwf	sprintf@sp
  2454     0AC7                     l2385:
  2455                           
  2456                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  2457     0AC7  302E               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  2458     0AC8  00BB               	movwf	sprintf@ap
  2459                           
  2460                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2461     0AC9  2CA0               	goto	l2495
  2462     0ACA                     l2387:
  2463                           
  2464                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2465     0ACA  3025               	movlw	37
  2466     0ACB  0641               	xorwf	sprintf@c,w
  2467     0ACC  1903               	btfsc	3,2
  2468     0ACD  2ACF               	goto	u2631
  2469     0ACE  2AD0               	goto	u2630
  2470     0ACF                     u2631:
  2471     0ACF  2ADA               	goto	l2393
  2472     0AD0                     u2630:
  2473     0AD0                     l2389:
  2474                           
  2475                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2476     0AD0  0842               	movf	sprintf@sp,w
  2477     0AD1  0084               	movwf	4
  2478     0AD2  0841               	movf	sprintf@c,w
  2479     0AD3  1383               	bcf	3,7	;select IRP bank0
  2480     0AD4  0080               	movwf	0
  2481     0AD5                     l2391:
  2482     0AD5  3001               	movlw	1
  2483     0AD6  00FF               	movwf	btemp+1
  2484     0AD7  087F               	movf	btemp+1,w
  2485     0AD8  07C2               	addwf	sprintf@sp,f
  2486                           
  2487                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 559:    continue;
  2488     0AD9  2CA0               	goto	l2495
  2489     0ADA                     l2393:
  2490                           
  2491                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2492     0ADA  01BF               	clrf	sprintf@width
  2493     0ADB  01C0               	clrf	sprintf@width+1
  2494                           
  2495                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2496     0ADC  01BE               	clrf	sprintf@flag
  2497     0ADD  2AE5               	goto	l2399
  2498     0ADE                     l370:	
  2499                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 596:    case '0':
  2500                           
  2501                           
  2502                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  2503     0ADE  153E               	bsf	sprintf@flag,2
  2504     0ADF                     l2395:
  2505                           
  2506                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 598:     f++;
  2507     0ADF  3001               	movlw	1
  2508     0AE0  07AC               	addwf	sprintf@f,f
  2509     0AE1  1803               	skipnc
  2510     0AE2  0AAD               	incf	sprintf@f+1,f
  2511     0AE3  3000               	movlw	0
  2512     0AE4  07AD               	addwf	sprintf@f+1,f
  2513     0AE5                     l2399:	
  2514                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  2515                           
  2516     0AE5  082D               	movf	sprintf@f+1,w
  2517     0AE6  00FF               	movwf	btemp+1
  2518     0AE7  082C               	movf	sprintf@f,w
  2519     0AE8  0084               	movwf	4
  2520     0AE9  160A  118A  2000  120A  158A  	fcall	stringtab
  2521     0AEE  00B6               	movwf	??_sprintf
  2522     0AEF  01B7               	clrf	??_sprintf+1
  2523                           
  2524                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2525                           ; Switch size 1, requested type "simple"
  2526                           ; Number of cases is 1, Range of values is 0 to 0
  2527                           ; switch strategies available:
  2528                           ; Name         Instructions Cycles
  2529                           ; simple_byte            4     3 (average)
  2530                           ; direct_byte           11     8 (fixed)
  2531                           ; jumptable            260     6 (fixed)
  2532                           ;	Chosen strategy is simple_byte
  2533     0AF0  0837               	movf	??_sprintf+1,w
  2534     0AF1  3A00               	xorlw	0	; case 0
  2535     0AF2  1903               	skipnz
  2536     0AF3  2AF5               	goto	l3383
  2537     0AF4  2AFA               	goto	l2401
  2538     0AF5                     l3383:
  2539                           
  2540                           ; Switch size 1, requested type "simple"
  2541                           ; Number of cases is 1, Range of values is 48 to 48
  2542                           ; switch strategies available:
  2543                           ; Name         Instructions Cycles
  2544                           ; simple_byte            4     3 (average)
  2545                           ; direct_byte           14    11 (fixed)
  2546                           ; jumptable            263     9 (fixed)
  2547                           ;	Chosen strategy is simple_byte
  2548     0AF5  0836               	movf	??_sprintf,w
  2549     0AF6  3A30               	xorlw	48	; case 48
  2550     0AF7  1903               	skipnz
  2551     0AF8  2ADE               	goto	l370
  2552     0AF9  2AFA               	goto	l2401
  2553     0AFA                     l2401:
  2554                           
  2555                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  2556     0AFA  082D               	movf	sprintf@f+1,w
  2557     0AFB  00FF               	movwf	btemp+1
  2558     0AFC  082C               	movf	sprintf@f,w
  2559     0AFD  0084               	movwf	4
  2560     0AFE  160A  118A  2000  120A  158A  	fcall	stringtab
  2561     0B03  160A  118A  2220  120A  158A  	fcall	_isdigit
  2562     0B08  1C03               	btfss	3,0
  2563     0B09  2B0B               	goto	u2641
  2564     0B0A  2B0C               	goto	u2640
  2565     0B0B                     u2641:
  2566     0B0B  2B55               	goto	l2415
  2567     0B0C                     u2640:
  2568     0B0C                     l2403:
  2569                           
  2570                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2571     0B0C  1283               	bcf	3,5	;RP0=0, select bank0
  2572     0B0D  1303               	bcf	3,6	;RP1=0, select bank0
  2573     0B0E  01BF               	clrf	sprintf@width
  2574     0B0F  01C0               	clrf	sprintf@width+1
  2575     0B10                     l2405:
  2576                           
  2577                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2578     0B10  300A               	movlw	10
  2579     0B11  1283               	bcf	3,5	;RP0=0, select bank0
  2580     0B12  1303               	bcf	3,6	;RP1=0, select bank0
  2581     0B13  00A0               	movwf	___wmul@multiplier
  2582     0B14  3000               	movlw	0
  2583     0B15  00A1               	movwf	___wmul@multiplier+1
  2584     0B16  0840               	movf	sprintf@width+1,w
  2585     0B17  00A3               	movwf	___wmul@multiplicand+1
  2586     0B18  083F               	movf	sprintf@width,w
  2587     0B19  00A2               	movwf	___wmul@multiplicand
  2588     0B1A  160A  118A  229B  120A  158A  	fcall	___wmul
  2589     0B1F  1283               	bcf	3,5	;RP0=0, select bank0
  2590     0B20  1303               	bcf	3,6	;RP1=0, select bank0
  2591     0B21  0821               	movf	?___wmul+1,w
  2592     0B22  00C0               	movwf	sprintf@width+1
  2593     0B23  0820               	movf	?___wmul,w
  2594     0B24  00BF               	movwf	sprintf@width
  2595     0B25                     l2407:
  2596                           
  2597                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2598     0B25  082D               	movf	sprintf@f+1,w
  2599     0B26  00FF               	movwf	btemp+1
  2600     0B27  082C               	movf	sprintf@f,w
  2601     0B28  0084               	movwf	4
  2602     0B29  160A  118A  2000  120A  158A  	fcall	stringtab
  2603     0B2E  3ED0               	addlw	208
  2604     0B2F  00B6               	movwf	??_sprintf
  2605     0B30  30FF               	movlw	255
  2606     0B31  1803               	skipnc
  2607     0B32  3000               	movlw	0
  2608     0B33  00B7               	movwf	??_sprintf+1
  2609     0B34  0836               	movf	??_sprintf,w
  2610     0B35  07BF               	addwf	sprintf@width,f
  2611     0B36  1803               	skipnc
  2612     0B37  0AC0               	incf	sprintf@width+1,f
  2613     0B38  0837               	movf	??_sprintf+1,w
  2614     0B39  07C0               	addwf	sprintf@width+1,f
  2615     0B3A                     l2409:
  2616     0B3A  3001               	movlw	1
  2617     0B3B  07AC               	addwf	sprintf@f,f
  2618     0B3C  1803               	skipnc
  2619     0B3D  0AAD               	incf	sprintf@f+1,f
  2620     0B3E  3000               	movlw	0
  2621     0B3F  07AD               	addwf	sprintf@f+1,f
  2622     0B40                     l2411:
  2623                           
  2624                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2625     0B40  082D               	movf	sprintf@f+1,w
  2626     0B41  00FF               	movwf	btemp+1
  2627     0B42  082C               	movf	sprintf@f,w
  2628     0B43  0084               	movwf	4
  2629     0B44  160A  118A  2000  120A  158A  	fcall	stringtab
  2630     0B49  160A  118A  2220  120A  158A  	fcall	_isdigit
  2631     0B4E  1803               	btfsc	3,0
  2632     0B4F  2B51               	goto	u2651
  2633     0B50  2B52               	goto	u2650
  2634     0B51                     u2651:
  2635     0B51  2B10               	goto	l2405
  2636     0B52                     u2650:
  2637     0B52  2B55               	goto	l2415
  2638     0B53                     l384:	
  2639                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 843:   case 'u':
  2640                           
  2641                           
  2642                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          x40;
  2643     0B53  173E               	bsf	sprintf@flag,6
  2644                           
  2645                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 845:    break;
  2646     0B54  2B7D               	goto	l382
  2647     0B55                     l2415:
  2648     0B55  1283               	bcf	3,5	;RP0=0, select bank0
  2649     0B56  1303               	bcf	3,6	;RP1=0, select bank0
  2650     0B57  082D               	movf	sprintf@f+1,w
  2651     0B58  00B7               	movwf	??_sprintf+1
  2652     0B59  082C               	movf	sprintf@f,w
  2653     0B5A  00B6               	movwf	??_sprintf
  2654     0B5B  0AAC               	incf	sprintf@f,f
  2655     0B5C  1903               	skipnz
  2656     0B5D  0AAD               	incf	sprintf@f+1,f
  2657     0B5E  0837               	movf	??_sprintf+1,w
  2658     0B5F  00FF               	movwf	btemp+1
  2659     0B60  0836               	movf	??_sprintf,w
  2660     0B61  0084               	movwf	4
  2661     0B62  160A  118A  2000  120A  158A  	fcall	stringtab
  2662     0B67  00C1               	movwf	sprintf@c
  2663     0B68  00B8               	movwf	??_sprintf+2
  2664     0B69  01B9               	clrf	??_sprintf+3
  2665                           
  2666                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2667                           ; Switch size 1, requested type "simple"
  2668                           ; Number of cases is 1, Range of values is 0 to 0
  2669                           ; switch strategies available:
  2670                           ; Name         Instructions Cycles
  2671                           ; simple_byte            4     3 (average)
  2672                           ; direct_byte           11     8 (fixed)
  2673                           ; jumptable            260     6 (fixed)
  2674                           ;	Chosen strategy is simple_byte
  2675     0B6A  0839               	movf	??_sprintf+3,w
  2676     0B6B  3A00               	xorlw	0	; case 0
  2677     0B6C  1903               	skipnz
  2678     0B6D  2B6F               	goto	l3385
  2679     0B6E  2CA0               	goto	l2495
  2680     0B6F                     l3385:
  2681                           
  2682                           ; Switch size 1, requested type "simple"
  2683                           ; Number of cases is 4, Range of values is 0 to 117
  2684                           ; switch strategies available:
  2685                           ; Name         Instructions Cycles
  2686                           ; simple_byte           13     7 (average)
  2687                           ; jumptable            260     6 (fixed)
  2688                           ;	Chosen strategy is simple_byte
  2689     0B6F  0838               	movf	??_sprintf+2,w
  2690     0B70  3A00               	xorlw	0	; case 0
  2691     0B71  1903               	skipnz
  2692     0B72  2CB6               	goto	l2497
  2693     0B73  3A64               	xorlw	100	; case 100
  2694     0B74  1903               	skipnz
  2695     0B75  2B7D               	goto	l382
  2696     0B76  3A0D               	xorlw	13	; case 105
  2697     0B77  1903               	skipnz
  2698     0B78  2B7D               	goto	l382
  2699     0B79  3A1C               	xorlw	28	; case 117
  2700     0B7A  1903               	skipnz
  2701     0B7B  2B53               	goto	l384
  2702     0B7C  2CA0               	goto	l2495
  2703     0B7D                     l382:
  2704                           
  2705                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1277:   if((flag 
      +                          & 0x40) == 0x00)
  2706     0B7D  1B3E               	btfsc	sprintf@flag,6
  2707     0B7E  2B80               	goto	u2661
  2708     0B7F  2B81               	goto	u2660
  2709     0B80                     u2661:
  2710     0B80  2B9B               	goto	l2427
  2711     0B81                     u2660:
  2712     0B81                     l2417:
  2713                           
  2714                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2715     0B81  083B               	movf	sprintf@ap,w
  2716     0B82  0084               	movwf	4
  2717     0B83  1383               	bcf	3,7	;select IRP bank0
  2718     0B84  0800               	movf	0,w
  2719     0B85  00BC               	movwf	sprintf@val
  2720     0B86  0A84               	incf	4,f
  2721     0B87  0800               	movf	0,w
  2722     0B88  00BD               	movwf	sprintf@val+1
  2723     0B89                     l2419:
  2724     0B89  3002               	movlw	2
  2725     0B8A  00FF               	movwf	btemp+1
  2726     0B8B  087F               	movf	btemp+1,w
  2727     0B8C  07BB               	addwf	sprintf@ap,f
  2728     0B8D                     l2421:
  2729                           
  2730                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2731     0B8D  1FBD               	btfss	sprintf@val+1,7
  2732     0B8E  2B90               	goto	u2671
  2733     0B8F  2B91               	goto	u2670
  2734     0B90                     u2671:
  2735     0B90  2BA7               	goto	l2431
  2736     0B91                     u2670:
  2737     0B91                     l2423:
  2738                           
  2739                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2740     0B91  3003               	movlw	3
  2741     0B92  00FF               	movwf	btemp+1
  2742     0B93  087F               	movf	btemp+1,w
  2743     0B94  04BE               	iorwf	sprintf@flag,f
  2744     0B95                     l2425:
  2745                           
  2746                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2747     0B95  09BC               	comf	sprintf@val,f
  2748     0B96  09BD               	comf	sprintf@val+1,f
  2749     0B97  0ABC               	incf	sprintf@val,f
  2750     0B98  1903               	skipnz
  2751     0B99  0ABD               	incf	sprintf@val+1,f
  2752     0B9A  2BA7               	goto	l2431
  2753     0B9B                     l2427:
  2754                           
  2755                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2756     0B9B  083B               	movf	sprintf@ap,w
  2757     0B9C  0084               	movwf	4
  2758     0B9D  1383               	bcf	3,7	;select IRP bank0
  2759     0B9E  0800               	movf	0,w
  2760     0B9F  00BC               	movwf	sprintf@val
  2761     0BA0  0A84               	incf	4,f
  2762     0BA1  0800               	movf	0,w
  2763     0BA2  00BD               	movwf	sprintf@val+1
  2764     0BA3                     l2429:
  2765     0BA3  3002               	movlw	2
  2766     0BA4  00FF               	movwf	btemp+1
  2767     0BA5  087F               	movf	btemp+1,w
  2768     0BA6  07BB               	addwf	sprintf@ap,f
  2769     0BA7                     l2431:
  2770                           
  2771                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2772     0BA7  01C1               	clrf	sprintf@c
  2773     0BA8  0AC1               	incf	sprintf@c,f
  2774     0BA9                     l2437:
  2775                           
  2776                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2777     0BA9  0841               	movf	sprintf@c,w
  2778     0BAA  00B6               	movwf	??_sprintf
  2779     0BAB  0736               	addwf	??_sprintf,w
  2780     0BAC  3E12               	addlw	low (_dpowers| (0+32768))
  2781     0BAD  0084               	movwf	4
  2782     0BAE  3090               	movlw	high (_dpowers| (0+32768))
  2783     0BAF  1803               	skipnc
  2784     0BB0  3E01               	addlw	1
  2785     0BB1  00FF               	movwf	btemp+1
  2786     0BB2  160A  118A  2000  120A  158A  	fcall	stringtab
  2787     0BB7  00B7               	movwf	??_sprintf+1
  2788     0BB8  160A  118A  2000  120A  158A  	fcall	stringtab
  2789     0BBD  00B8               	movwf	??_sprintf+2
  2790     0BBE  0838               	movf	??_sprintf+2,w
  2791     0BBF  023D               	subwf	sprintf@val+1,w
  2792     0BC0  1D03               	skipz
  2793     0BC1  2BC4               	goto	u2685
  2794     0BC2  0837               	movf	??_sprintf+1,w
  2795     0BC3  023C               	subwf	sprintf@val,w
  2796     0BC4                     u2685:
  2797     0BC4  1803               	skipnc
  2798     0BC5  2BC7               	goto	u2681
  2799     0BC6  2BC8               	goto	u2680
  2800     0BC7                     u2681:
  2801     0BC7  2BC9               	goto	l2441
  2802     0BC8                     u2680:
  2803     0BC8  2BD3               	goto	l2445
  2804     0BC9                     l2441:
  2805     0BC9  3001               	movlw	1
  2806     0BCA  00FF               	movwf	btemp+1
  2807     0BCB  087F               	movf	btemp+1,w
  2808     0BCC  07C1               	addwf	sprintf@c,f
  2809     0BCD                     l2443:
  2810     0BCD  3005               	movlw	5
  2811     0BCE  0641               	xorwf	sprintf@c,w
  2812     0BCF  1D03               	btfss	3,2
  2813     0BD0  2BD2               	goto	u2691
  2814     0BD1  2BD3               	goto	u2690
  2815     0BD2                     u2691:
  2816     0BD2  2BA9               	goto	l2437
  2817     0BD3                     u2690:
  2818     0BD3                     l2445:
  2819                           
  2820                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  2821     0BD3  083F               	movf	sprintf@width,w
  2822     0BD4  0440               	iorwf	sprintf@width+1,w
  2823     0BD5  1903               	btfsc	3,2
  2824     0BD6  2BD8               	goto	u2701
  2825     0BD7  2BD9               	goto	u2700
  2826     0BD8                     u2701:
  2827     0BD8  2BE5               	goto	l391
  2828     0BD9                     u2700:
  2829     0BD9                     l2447:
  2830     0BD9  083E               	movf	sprintf@flag,w
  2831     0BDA  3903               	andlw	3
  2832     0BDB  1903               	btfsc	3,2
  2833     0BDC  2BDE               	goto	u2711
  2834     0BDD  2BDF               	goto	u2710
  2835     0BDE                     u2711:
  2836     0BDE  2BE5               	goto	l391
  2837     0BDF                     u2710:
  2838     0BDF                     l2449:
  2839                           
  2840                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1372:    width--;
  2841     0BDF  30FF               	movlw	255
  2842     0BE0  07BF               	addwf	sprintf@width,f
  2843     0BE1  1803               	skipnc
  2844     0BE2  0AC0               	incf	sprintf@width+1,f
  2845     0BE3  30FF               	movlw	255
  2846     0BE4  07C0               	addwf	sprintf@width+1,f
  2847     0BE5                     l391:
  2848                           
  2849                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  2850     0BE5  0840               	movf	sprintf@width+1,w
  2851     0BE6  3A80               	xorlw	128
  2852     0BE7  3C80               	sublw	128
  2853     0BE8  1D03               	skipz
  2854     0BE9  2BEC               	goto	u2725
  2855     0BEA  083F               	movf	sprintf@width,w
  2856     0BEB  0241               	subwf	sprintf@c,w
  2857     0BEC                     u2725:
  2858     0BEC  1803               	skipnc
  2859     0BED  2BEF               	goto	u2721
  2860     0BEE  2BF0               	goto	u2720
  2861     0BEF                     u2721:
  2862     0BEF  2BFC               	goto	l2453
  2863     0BF0                     u2720:
  2864     0BF0                     l2451:
  2865                           
  2866                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  2867     0BF0  1283               	bcf	3,5	;RP0=0, select bank0
  2868     0BF1  1303               	bcf	3,6	;RP1=0, select bank0
  2869     0BF2  0841               	movf	sprintf@c,w
  2870     0BF3  00B6               	movwf	??_sprintf
  2871     0BF4  01B7               	clrf	??_sprintf+1
  2872     0BF5  0836               	movf	??_sprintf,w
  2873     0BF6  02BF               	subwf	sprintf@width,f
  2874     0BF7  0837               	movf	??_sprintf+1,w
  2875     0BF8  1C03               	skipc
  2876     0BF9  03C0               	decf	sprintf@width+1,f
  2877     0BFA  02C0               	subwf	sprintf@width+1,f
  2878     0BFB  2C00               	goto	l2455
  2879     0BFC                     l2453:
  2880                           
  2881                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  2882     0BFC  1283               	bcf	3,5	;RP0=0, select bank0
  2883     0BFD  1303               	bcf	3,6	;RP1=0, select bank0
  2884     0BFE  01BF               	clrf	sprintf@width
  2885     0BFF  01C0               	clrf	sprintf@width+1
  2886     0C00                     l2455:
  2887                           
  2888                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  2889     0C00  1D3E               	btfss	sprintf@flag,2
  2890     0C01  2C03               	goto	u2731
  2891     0C02  2C04               	goto	u2730
  2892     0C03                     u2731:
  2893     0C03  2C2F               	goto	l2471
  2894     0C04                     u2730:
  2895     0C04                     l2457:
  2896                           
  2897                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1418:    if(flag 
      +                          & 0x03)
  2898     0C04  083E               	movf	sprintf@flag,w
  2899     0C05  3903               	andlw	3
  2900     0C06  1903               	btfsc	3,2
  2901     0C07  2C09               	goto	u2741
  2902     0C08  2C0A               	goto	u2740
  2903     0C09                     u2741:
  2904     0C09  2C13               	goto	l2463
  2905     0C0A                     u2740:
  2906     0C0A                     l2459:
  2907                           
  2908                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1419:     ((*sp++
      +                           = ('-')));
  2909     0C0A  0842               	movf	sprintf@sp,w
  2910     0C0B  0084               	movwf	4
  2911     0C0C  302D               	movlw	45
  2912     0C0D  1383               	bcf	3,7	;select IRP bank0
  2913     0C0E  0080               	movwf	0
  2914     0C0F                     l2461:
  2915     0C0F  3001               	movlw	1
  2916     0C10  00FF               	movwf	btemp+1
  2917     0C11  087F               	movf	btemp+1,w
  2918     0C12  07C2               	addwf	sprintf@sp,f
  2919     0C13                     l2463:
  2920                           
  2921                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  2922     0C13  083F               	movf	sprintf@width,w
  2923     0C14  0440               	iorwf	sprintf@width+1,w
  2924     0C15  1903               	btfsc	3,2
  2925     0C16  2C18               	goto	u2751
  2926     0C17  2C19               	goto	u2750
  2927     0C18                     u2751:
  2928     0C18  2C59               	goto	l2485
  2929     0C19                     u2750:
  2930     0C19                     l2465:
  2931                           
  2932                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
  2933     0C19  0842               	movf	sprintf@sp,w
  2934     0C1A  0084               	movwf	4
  2935     0C1B  3030               	movlw	48
  2936     0C1C  1383               	bcf	3,7	;select IRP bank0
  2937     0C1D  0080               	movwf	0
  2938     0C1E                     l2467:
  2939     0C1E  3001               	movlw	1
  2940     0C1F  00FF               	movwf	btemp+1
  2941     0C20  087F               	movf	btemp+1,w
  2942     0C21  07C2               	addwf	sprintf@sp,f
  2943     0C22                     l2469:
  2944     0C22  30FF               	movlw	255
  2945     0C23  07BF               	addwf	sprintf@width,f
  2946     0C24  1803               	skipnc
  2947     0C25  0AC0               	incf	sprintf@width+1,f
  2948     0C26  30FF               	movlw	255
  2949     0C27  07C0               	addwf	sprintf@width+1,f
  2950     0C28  083F               	movf	sprintf@width,w
  2951     0C29  0440               	iorwf	sprintf@width+1,w
  2952     0C2A  1D03               	btfss	3,2
  2953     0C2B  2C2D               	goto	u2761
  2954     0C2C  2C2E               	goto	u2760
  2955     0C2D                     u2761:
  2956     0C2D  2C19               	goto	l2465
  2957     0C2E                     u2760:
  2958     0C2E  2C59               	goto	l2485
  2959     0C2F                     l2471:
  2960                           
  2961                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1450:    if(width
  2962     0C2F  083F               	movf	sprintf@width,w
  2963     0C30  0440               	iorwf	sprintf@width+1,w
  2964     0C31  1903               	btfsc	3,2
  2965     0C32  2C34               	goto	u2771
  2966     0C33  2C35               	goto	u2770
  2967     0C34                     u2771:
  2968     0C34  2C4A               	goto	l2479
  2969     0C35                     u2770:
  2970     0C35                     l2473:
  2971                           
  2972                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  2973     0C35  0842               	movf	sprintf@sp,w
  2974     0C36  0084               	movwf	4
  2975     0C37  3020               	movlw	32
  2976     0C38  1383               	bcf	3,7	;select IRP bank0
  2977     0C39  0080               	movwf	0
  2978     0C3A                     l2475:
  2979     0C3A  3001               	movlw	1
  2980     0C3B  00FF               	movwf	btemp+1
  2981     0C3C  087F               	movf	btemp+1,w
  2982     0C3D  07C2               	addwf	sprintf@sp,f
  2983     0C3E                     l2477:
  2984     0C3E  30FF               	movlw	255
  2985     0C3F  07BF               	addwf	sprintf@width,f
  2986     0C40  1803               	skipnc
  2987     0C41  0AC0               	incf	sprintf@width+1,f
  2988     0C42  30FF               	movlw	255
  2989     0C43  07C0               	addwf	sprintf@width+1,f
  2990     0C44  083F               	movf	sprintf@width,w
  2991     0C45  0440               	iorwf	sprintf@width+1,w
  2992     0C46  1D03               	btfss	3,2
  2993     0C47  2C49               	goto	u2781
  2994     0C48  2C4A               	goto	u2780
  2995     0C49                     u2781:
  2996     0C49  2C35               	goto	l2473
  2997     0C4A                     u2780:
  2998     0C4A                     l2479:
  2999                           
  3000                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  3001     0C4A  083E               	movf	sprintf@flag,w
  3002     0C4B  3903               	andlw	3
  3003     0C4C  1903               	btfsc	3,2
  3004     0C4D  2C4F               	goto	u2791
  3005     0C4E  2C50               	goto	u2790
  3006     0C4F                     u2791:
  3007     0C4F  2C59               	goto	l2485
  3008     0C50                     u2790:
  3009     0C50                     l2481:
  3010                           
  3011                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3012     0C50  0842               	movf	sprintf@sp,w
  3013     0C51  0084               	movwf	4
  3014     0C52  302D               	movlw	45
  3015     0C53  1383               	bcf	3,7	;select IRP bank0
  3016     0C54  0080               	movwf	0
  3017     0C55                     l2483:
  3018     0C55  3001               	movlw	1
  3019     0C56  00FF               	movwf	btemp+1
  3020     0C57  087F               	movf	btemp+1,w
  3021     0C58  07C2               	addwf	sprintf@sp,f
  3022     0C59                     l2485:
  3023                           
  3024                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  3025     0C59  0841               	movf	sprintf@c,w
  3026     0C5A  00BA               	movwf	sprintf@prec
  3027                           
  3028                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3029     0C5B  2C97               	goto	l2493
  3030     0C5C                     l2487:
  3031                           
  3032                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  3033     0C5C  300A               	movlw	10
  3034     0C5D  00A7               	movwf	___lwmod@divisor
  3035     0C5E  3000               	movlw	0
  3036     0C5F  00A8               	movwf	___lwmod@divisor+1
  3037     0C60  083A               	movf	sprintf@prec,w
  3038     0C61  00B6               	movwf	??_sprintf
  3039     0C62  0736               	addwf	??_sprintf,w
  3040     0C63  3E12               	addlw	low (_dpowers| (0+32768))
  3041     0C64  0084               	movwf	4
  3042     0C65  3090               	movlw	high (_dpowers| (0+32768))
  3043     0C66  1803               	skipnc
  3044     0C67  3E01               	addlw	1
  3045     0C68  00FF               	movwf	btemp+1
  3046     0C69  160A  118A  2000  120A  158A  	fcall	stringtab
  3047     0C6E  00A0               	movwf	___lwdiv@divisor
  3048     0C6F  160A  118A  2000  120A  158A  	fcall	stringtab
  3049     0C74  00A1               	movwf	___lwdiv@divisor+1
  3050     0C75  083D               	movf	sprintf@val+1,w
  3051     0C76  00A3               	movwf	___lwdiv@dividend+1
  3052     0C77  083C               	movf	sprintf@val,w
  3053     0C78  00A2               	movwf	___lwdiv@dividend
  3054     0C79  160A  118A  236D  120A  158A  	fcall	___lwdiv
  3055     0C7E  1283               	bcf	3,5	;RP0=0, select bank0
  3056     0C7F  1303               	bcf	3,6	;RP1=0, select bank0
  3057     0C80  0821               	movf	?___lwdiv+1,w
  3058     0C81  00AA               	movwf	___lwmod@dividend+1
  3059     0C82  0820               	movf	?___lwdiv,w
  3060     0C83  00A9               	movwf	___lwmod@dividend
  3061     0C84  160A  118A  22EB  120A  158A  	fcall	___lwmod
  3062     0C89  1283               	bcf	3,5	;RP0=0, select bank0
  3063     0C8A  1303               	bcf	3,6	;RP1=0, select bank0
  3064     0C8B  0827               	movf	?___lwmod,w
  3065     0C8C  3E30               	addlw	48
  3066     0C8D  00C1               	movwf	sprintf@c
  3067     0C8E                     l2489:
  3068                           
  3069                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  3070     0C8E  0842               	movf	sprintf@sp,w
  3071     0C8F  0084               	movwf	4
  3072     0C90  0841               	movf	sprintf@c,w
  3073     0C91  1383               	bcf	3,7	;select IRP bank0
  3074     0C92  0080               	movwf	0
  3075     0C93                     l2491:
  3076     0C93  3001               	movlw	1
  3077     0C94  00FF               	movwf	btemp+1
  3078     0C95  087F               	movf	btemp+1,w
  3079     0C96  07C2               	addwf	sprintf@sp,f
  3080     0C97                     l2493:
  3081                           
  3082                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3083     0C97  30FF               	movlw	255
  3084     0C98  00FF               	movwf	btemp+1
  3085     0C99  087F               	movf	btemp+1,w
  3086     0C9A  07BA               	addwf	sprintf@prec,f
  3087     0C9B  0A3A               	incf	sprintf@prec,w
  3088     0C9C  1D03               	btfss	3,2
  3089     0C9D  2C9F               	goto	u2801
  3090     0C9E  2CA0               	goto	u2800
  3091     0C9F                     u2801:
  3092     0C9F  2C5C               	goto	l2487
  3093     0CA0                     u2800:
  3094     0CA0                     l2495:
  3095                           
  3096                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3097     0CA0  082D               	movf	sprintf@f+1,w
  3098     0CA1  00B7               	movwf	??_sprintf+1
  3099     0CA2  082C               	movf	sprintf@f,w
  3100     0CA3  00B6               	movwf	??_sprintf
  3101     0CA4  0AAC               	incf	sprintf@f,f
  3102     0CA5  1903               	skipnz
  3103     0CA6  0AAD               	incf	sprintf@f+1,f
  3104     0CA7  0837               	movf	??_sprintf+1,w
  3105     0CA8  00FF               	movwf	btemp+1
  3106     0CA9  0836               	movf	??_sprintf,w
  3107     0CAA  0084               	movwf	4
  3108     0CAB  160A  118A  2000  120A  158A  	fcall	stringtab
  3109     0CB0  00C1               	movwf	sprintf@c
  3110     0CB1  0841               	movf	sprintf@c,w
  3111     0CB2  1D03               	btfss	3,2
  3112     0CB3  2CB5               	goto	u2811
  3113     0CB4  2CB6               	goto	u2810
  3114     0CB5                     u2811:
  3115     0CB5  2ACA               	goto	l2387
  3116     0CB6                     u2810:
  3117     0CB6                     l2497:
  3118                           
  3119                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3120     0CB6  0842               	movf	sprintf@sp,w
  3121     0CB7  0084               	movwf	4
  3122     0CB8  1383               	bcf	3,7	;select IRP bank0
  3123     0CB9  0180               	clrf	0
  3124     0CBA                     l408:
  3125     0CBA  0008               	return
  3126     0CBB                     __end_of_sprintf:
  3127                           
  3128                           	psect	text7
  3129     1220                     __ptext7:	
  3130 ;; *************** function _isdigit *****************
  3131 ;; Defined at:
  3132 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\isdigit.c"
  3133 ;; Parameters:    Size  Location     Type
  3134 ;;  c               1    wreg     unsigned char 
  3135 ;; Auto vars:     Size  Location     Type
  3136 ;;  c               1    1[BANK0 ] unsigned char 
  3137 ;; Return value:  Size  Location     Type
  3138 ;;		None               void
  3139 ;; Registers used:
  3140 ;;		wreg, status,2, status,0
  3141 ;; Tracked objects:
  3142 ;;		On entry : 0/0
  3143 ;;		On exit  : 0/0
  3144 ;;		Unchanged: 0/0
  3145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3146 ;;      Params:         0       0       0       0       0
  3147 ;;      Locals:         0       2       0       0       0
  3148 ;;      Temps:          0       0       0       0       0
  3149 ;;      Totals:         0       2       0       0       0
  3150 ;;Total ram usage:        2 bytes
  3151 ;; Hardware stack levels used: 1
  3152 ;; Hardware stack levels required when called: 2
  3153 ;; This function calls:
  3154 ;;		Nothing
  3155 ;; This function is called by:
  3156 ;;		_sprintf
  3157 ;; This function uses a non-reentrant model
  3158 ;;
  3159                           
  3160     1220                     _isdigit:	
  3161                           ;psect for function _isdigit
  3162                           
  3163                           
  3164                           ;incstack = 0
  3165                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3166                           ;isdigit@c stored from wreg
  3167     1220  1283               	bcf	3,5	;RP0=0, select bank0
  3168     1221  1303               	bcf	3,6	;RP1=0, select bank0
  3169     1222  00A1               	movwf	isdigit@c
  3170     1223                     l2227:
  3171     1223  01A0               	clrf	_isdigit$837
  3172     1224                     l2229:
  3173     1224  303A               	movlw	58
  3174     1225  0221               	subwf	isdigit@c,w
  3175     1226  1803               	skipnc
  3176     1227  2A29               	goto	u2341
  3177     1228  2A2A               	goto	u2340
  3178     1229                     u2341:
  3179     1229  2A32               	goto	l2235
  3180     122A                     u2340:
  3181     122A                     l2231:
  3182     122A  3030               	movlw	48
  3183     122B  0221               	subwf	isdigit@c,w
  3184     122C  1C03               	skipc
  3185     122D  2A2F               	goto	u2351
  3186     122E  2A30               	goto	u2350
  3187     122F                     u2351:
  3188     122F  2A32               	goto	l2235
  3189     1230                     u2350:
  3190     1230                     l2233:
  3191     1230  01A0               	clrf	_isdigit$837
  3192     1231  0AA0               	incf	_isdigit$837,f
  3193     1232                     l2235:
  3194     1232  0C20               	rrf	_isdigit$837,w
  3195     1233                     l865:
  3196     1233  0008               	return
  3197     1234                     __end_of_isdigit:
  3198                           
  3199                           	psect	text8
  3200     129B                     __ptext8:	
  3201 ;; *************** function ___wmul *****************
  3202 ;; Defined at:
  3203 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  3204 ;; Parameters:    Size  Location     Type
  3205 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3206 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3207 ;; Auto vars:     Size  Location     Type
  3208 ;;  product         2    4[BANK0 ] unsigned int 
  3209 ;; Return value:  Size  Location     Type
  3210 ;;                  2    0[BANK0 ] unsigned int 
  3211 ;; Registers used:
  3212 ;;		wreg, status,2, status,0
  3213 ;; Tracked objects:
  3214 ;;		On entry : 0/0
  3215 ;;		On exit  : 0/0
  3216 ;;		Unchanged: 0/0
  3217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3218 ;;      Params:         0       4       0       0       0
  3219 ;;      Locals:         0       2       0       0       0
  3220 ;;      Temps:          0       0       0       0       0
  3221 ;;      Totals:         0       6       0       0       0
  3222 ;;Total ram usage:        6 bytes
  3223 ;; Hardware stack levels used: 1
  3224 ;; Hardware stack levels required when called: 2
  3225 ;; This function calls:
  3226 ;;		Nothing
  3227 ;; This function is called by:
  3228 ;;		_main
  3229 ;;		_sprintf
  3230 ;; This function uses a non-reentrant model
  3231 ;;
  3232                           
  3233     129B                     ___wmul:	
  3234                           ;psect for function ___wmul
  3235                           
  3236     129B                     l2239:	
  3237                           ;incstack = 0
  3238                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3239                           
  3240     129B  1283               	bcf	3,5	;RP0=0, select bank0
  3241     129C  1303               	bcf	3,6	;RP1=0, select bank0
  3242     129D  01A4               	clrf	___wmul@product
  3243     129E  01A5               	clrf	___wmul@product+1
  3244     129F                     l2241:
  3245     129F  1C20               	btfss	___wmul@multiplier,0
  3246     12A0  2AA2               	goto	u2361
  3247     12A1  2AA3               	goto	u2360
  3248     12A2                     u2361:
  3249     12A2  2AA9               	goto	l412
  3250     12A3                     u2360:
  3251     12A3                     l2243:
  3252     12A3  0822               	movf	___wmul@multiplicand,w
  3253     12A4  07A4               	addwf	___wmul@product,f
  3254     12A5  1803               	skipnc
  3255     12A6  0AA5               	incf	___wmul@product+1,f
  3256     12A7  0823               	movf	___wmul@multiplicand+1,w
  3257     12A8  07A5               	addwf	___wmul@product+1,f
  3258     12A9                     l412:
  3259     12A9  3001               	movlw	1
  3260     12AA                     u2375:
  3261     12AA  1003               	clrc
  3262     12AB  0DA2               	rlf	___wmul@multiplicand,f
  3263     12AC  0DA3               	rlf	___wmul@multiplicand+1,f
  3264     12AD  3EFF               	addlw	-1
  3265     12AE  1D03               	skipz
  3266     12AF  2AAA               	goto	u2375
  3267     12B0                     l2245:
  3268     12B0  3001               	movlw	1
  3269     12B1                     u2385:
  3270     12B1  1003               	clrc
  3271     12B2  0CA1               	rrf	___wmul@multiplier+1,f
  3272     12B3  0CA0               	rrf	___wmul@multiplier,f
  3273     12B4  3EFF               	addlw	-1
  3274     12B5  1D03               	skipz
  3275     12B6  2AB1               	goto	u2385
  3276     12B7                     l2247:
  3277     12B7  0820               	movf	___wmul@multiplier,w
  3278     12B8  0421               	iorwf	___wmul@multiplier+1,w
  3279     12B9  1D03               	btfss	3,2
  3280     12BA  2ABC               	goto	u2391
  3281     12BB  2ABD               	goto	u2390
  3282     12BC                     u2391:
  3283     12BC  2A9F               	goto	l2241
  3284     12BD                     u2390:
  3285     12BD                     l2249:
  3286     12BD  0825               	movf	___wmul@product+1,w
  3287     12BE  00A1               	movwf	?___wmul+1
  3288     12BF  0824               	movf	___wmul@product,w
  3289     12C0  00A0               	movwf	?___wmul
  3290     12C1                     l414:
  3291     12C1  0008               	return
  3292     12C2                     __end_of___wmul:
  3293                           
  3294                           	psect	text9
  3295     12EB                     __ptext9:	
  3296 ;; *************** function ___lwmod *****************
  3297 ;; Defined at:
  3298 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  3299 ;; Parameters:    Size  Location     Type
  3300 ;;  divisor         2    7[BANK0 ] unsigned int 
  3301 ;;  dividend        2    9[BANK0 ] unsigned int 
  3302 ;; Auto vars:     Size  Location     Type
  3303 ;;  counter         1   11[BANK0 ] unsigned char 
  3304 ;; Return value:  Size  Location     Type
  3305 ;;                  2    7[BANK0 ] unsigned int 
  3306 ;; Registers used:
  3307 ;;		wreg, status,2, status,0, btemp+1
  3308 ;; Tracked objects:
  3309 ;;		On entry : 0/0
  3310 ;;		On exit  : 0/0
  3311 ;;		Unchanged: 0/0
  3312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3313 ;;      Params:         0       4       0       0       0
  3314 ;;      Locals:         0       1       0       0       0
  3315 ;;      Temps:          0       0       0       0       0
  3316 ;;      Totals:         0       5       0       0       0
  3317 ;;Total ram usage:        5 bytes
  3318 ;; Hardware stack levels used: 1
  3319 ;; Hardware stack levels required when called: 2
  3320 ;; This function calls:
  3321 ;;		Nothing
  3322 ;; This function is called by:
  3323 ;;		_main
  3324 ;;		_sprintf
  3325 ;; This function uses a non-reentrant model
  3326 ;;
  3327                           
  3328     12EB                     ___lwmod:	
  3329                           ;psect for function ___lwmod
  3330                           
  3331     12EB                     l2279:	
  3332                           ;incstack = 0
  3333                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  3334                           
  3335     12EB  1283               	bcf	3,5	;RP0=0, select bank0
  3336     12EC  1303               	bcf	3,6	;RP1=0, select bank0
  3337     12ED  0827               	movf	___lwmod@divisor,w
  3338     12EE  0428               	iorwf	___lwmod@divisor+1,w
  3339     12EF  1903               	btfsc	3,2
  3340     12F0  2AF2               	goto	u2471
  3341     12F1  2AF3               	goto	u2470
  3342     12F2                     u2471:
  3343     12F2  2B22               	goto	l2297
  3344     12F3                     u2470:
  3345     12F3                     l2281:
  3346     12F3  01AB               	clrf	___lwmod@counter
  3347     12F4  0AAB               	incf	___lwmod@counter,f
  3348     12F5  2B01               	goto	l2287
  3349     12F6                     l2283:
  3350     12F6  3001               	movlw	1
  3351     12F7                     u2485:
  3352     12F7  1003               	clrc
  3353     12F8  0DA7               	rlf	___lwmod@divisor,f
  3354     12F9  0DA8               	rlf	___lwmod@divisor+1,f
  3355     12FA  3EFF               	addlw	-1
  3356     12FB  1D03               	skipz
  3357     12FC  2AF7               	goto	u2485
  3358     12FD                     l2285:
  3359     12FD  3001               	movlw	1
  3360     12FE  00FF               	movwf	btemp+1
  3361     12FF  087F               	movf	btemp+1,w
  3362     1300  07AB               	addwf	___lwmod@counter,f
  3363     1301                     l2287:
  3364     1301  1FA8               	btfss	___lwmod@divisor+1,7
  3365     1302  2B04               	goto	u2491
  3366     1303  2B05               	goto	u2490
  3367     1304                     u2491:
  3368     1304  2AF6               	goto	l2283
  3369     1305                     u2490:
  3370     1305                     l2289:
  3371     1305  0828               	movf	___lwmod@divisor+1,w
  3372     1306  022A               	subwf	___lwmod@dividend+1,w
  3373     1307  1D03               	skipz
  3374     1308  2B0B               	goto	u2505
  3375     1309  0827               	movf	___lwmod@divisor,w
  3376     130A  0229               	subwf	___lwmod@dividend,w
  3377     130B                     u2505:
  3378     130B  1C03               	skipc
  3379     130C  2B0E               	goto	u2501
  3380     130D  2B0F               	goto	u2500
  3381     130E                     u2501:
  3382     130E  2B15               	goto	l2293
  3383     130F                     u2500:
  3384     130F                     l2291:
  3385     130F  0827               	movf	___lwmod@divisor,w
  3386     1310  02A9               	subwf	___lwmod@dividend,f
  3387     1311  0828               	movf	___lwmod@divisor+1,w
  3388     1312  1C03               	skipc
  3389     1313  03AA               	decf	___lwmod@dividend+1,f
  3390     1314  02AA               	subwf	___lwmod@dividend+1,f
  3391     1315                     l2293:
  3392     1315  3001               	movlw	1
  3393     1316                     u2515:
  3394     1316  1003               	clrc
  3395     1317  0CA8               	rrf	___lwmod@divisor+1,f
  3396     1318  0CA7               	rrf	___lwmod@divisor,f
  3397     1319  3EFF               	addlw	-1
  3398     131A  1D03               	skipz
  3399     131B  2B16               	goto	u2515
  3400     131C                     l2295:
  3401     131C  3001               	movlw	1
  3402     131D  02AB               	subwf	___lwmod@counter,f
  3403     131E  1D03               	btfss	3,2
  3404     131F  2B21               	goto	u2521
  3405     1320  2B22               	goto	u2520
  3406     1321                     u2521:
  3407     1321  2B05               	goto	l2289
  3408     1322                     u2520:
  3409     1322                     l2297:
  3410     1322  082A               	movf	___lwmod@dividend+1,w
  3411     1323  00A8               	movwf	?___lwmod+1
  3412     1324  0829               	movf	___lwmod@dividend,w
  3413     1325  00A7               	movwf	?___lwmod
  3414     1326                     l694:
  3415     1326  0008               	return
  3416     1327                     __end_of___lwmod:
  3417                           
  3418                           	psect	text10
  3419     136D                     __ptext10:	
  3420 ;; *************** function ___lwdiv *****************
  3421 ;; Defined at:
  3422 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  3423 ;; Parameters:    Size  Location     Type
  3424 ;;  divisor         2    0[BANK0 ] unsigned int 
  3425 ;;  dividend        2    2[BANK0 ] unsigned int 
  3426 ;; Auto vars:     Size  Location     Type
  3427 ;;  quotient        2    4[BANK0 ] unsigned int 
  3428 ;;  counter         1    6[BANK0 ] unsigned char 
  3429 ;; Return value:  Size  Location     Type
  3430 ;;                  2    0[BANK0 ] unsigned int 
  3431 ;; Registers used:
  3432 ;;		wreg, status,2, status,0, btemp+1
  3433 ;; Tracked objects:
  3434 ;;		On entry : 0/0
  3435 ;;		On exit  : 0/0
  3436 ;;		Unchanged: 0/0
  3437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3438 ;;      Params:         0       4       0       0       0
  3439 ;;      Locals:         0       3       0       0       0
  3440 ;;      Temps:          0       0       0       0       0
  3441 ;;      Totals:         0       7       0       0       0
  3442 ;;Total ram usage:        7 bytes
  3443 ;; Hardware stack levels used: 1
  3444 ;; Hardware stack levels required when called: 2
  3445 ;; This function calls:
  3446 ;;		Nothing
  3447 ;; This function is called by:
  3448 ;;		_sprintf
  3449 ;; This function uses a non-reentrant model
  3450 ;;
  3451                           
  3452     136D                     ___lwdiv:	
  3453                           ;psect for function ___lwdiv
  3454                           
  3455     136D                     l2253:	
  3456                           ;incstack = 0
  3457                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  3458                           
  3459     136D  1283               	bcf	3,5	;RP0=0, select bank0
  3460     136E  1303               	bcf	3,6	;RP1=0, select bank0
  3461     136F  01A4               	clrf	___lwdiv@quotient
  3462     1370  01A5               	clrf	___lwdiv@quotient+1
  3463     1371                     l2255:
  3464     1371  0820               	movf	___lwdiv@divisor,w
  3465     1372  0421               	iorwf	___lwdiv@divisor+1,w
  3466     1373  1903               	btfsc	3,2
  3467     1374  2B76               	goto	u2401
  3468     1375  2B77               	goto	u2400
  3469     1376                     u2401:
  3470     1376  2BAE               	goto	l2275
  3471     1377                     u2400:
  3472     1377                     l2257:
  3473     1377  01A6               	clrf	___lwdiv@counter
  3474     1378  0AA6               	incf	___lwdiv@counter,f
  3475     1379  2B85               	goto	l2263
  3476     137A                     l2259:
  3477     137A  3001               	movlw	1
  3478     137B                     u2415:
  3479     137B  1003               	clrc
  3480     137C  0DA0               	rlf	___lwdiv@divisor,f
  3481     137D  0DA1               	rlf	___lwdiv@divisor+1,f
  3482     137E  3EFF               	addlw	-1
  3483     137F  1D03               	skipz
  3484     1380  2B7B               	goto	u2415
  3485     1381                     l2261:
  3486     1381  3001               	movlw	1
  3487     1382  00FF               	movwf	btemp+1
  3488     1383  087F               	movf	btemp+1,w
  3489     1384  07A6               	addwf	___lwdiv@counter,f
  3490     1385                     l2263:
  3491     1385  1FA1               	btfss	___lwdiv@divisor+1,7
  3492     1386  2B88               	goto	u2421
  3493     1387  2B89               	goto	u2420
  3494     1388                     u2421:
  3495     1388  2B7A               	goto	l2259
  3496     1389                     u2420:
  3497     1389                     l2265:
  3498     1389  3001               	movlw	1
  3499     138A                     u2435:
  3500     138A  1003               	clrc
  3501     138B  0DA4               	rlf	___lwdiv@quotient,f
  3502     138C  0DA5               	rlf	___lwdiv@quotient+1,f
  3503     138D  3EFF               	addlw	-1
  3504     138E  1D03               	skipz
  3505     138F  2B8A               	goto	u2435
  3506     1390  0821               	movf	___lwdiv@divisor+1,w
  3507     1391  0223               	subwf	___lwdiv@dividend+1,w
  3508     1392  1D03               	skipz
  3509     1393  2B96               	goto	u2445
  3510     1394  0820               	movf	___lwdiv@divisor,w
  3511     1395  0222               	subwf	___lwdiv@dividend,w
  3512     1396                     u2445:
  3513     1396  1C03               	skipc
  3514     1397  2B99               	goto	u2441
  3515     1398  2B9A               	goto	u2440
  3516     1399                     u2441:
  3517     1399  2BA1               	goto	l2271
  3518     139A                     u2440:
  3519     139A                     l2267:
  3520     139A  0820               	movf	___lwdiv@divisor,w
  3521     139B  02A2               	subwf	___lwdiv@dividend,f
  3522     139C  0821               	movf	___lwdiv@divisor+1,w
  3523     139D  1C03               	skipc
  3524     139E  03A3               	decf	___lwdiv@dividend+1,f
  3525     139F  02A3               	subwf	___lwdiv@dividend+1,f
  3526     13A0                     l2269:
  3527     13A0  1424               	bsf	___lwdiv@quotient,0
  3528     13A1                     l2271:
  3529     13A1  3001               	movlw	1
  3530     13A2                     u2455:
  3531     13A2  1003               	clrc
  3532     13A3  0CA1               	rrf	___lwdiv@divisor+1,f
  3533     13A4  0CA0               	rrf	___lwdiv@divisor,f
  3534     13A5  3EFF               	addlw	-1
  3535     13A6  1D03               	skipz
  3536     13A7  2BA2               	goto	u2455
  3537     13A8                     l2273:
  3538     13A8  3001               	movlw	1
  3539     13A9  02A6               	subwf	___lwdiv@counter,f
  3540     13AA  1D03               	btfss	3,2
  3541     13AB  2BAD               	goto	u2461
  3542     13AC  2BAE               	goto	u2460
  3543     13AD                     u2461:
  3544     13AD  2B89               	goto	l2265
  3545     13AE                     u2460:
  3546     13AE                     l2275:
  3547     13AE  0825               	movf	___lwdiv@quotient+1,w
  3548     13AF  00A1               	movwf	?___lwdiv+1
  3549     13B0  0824               	movf	___lwdiv@quotient,w
  3550     13B1  00A0               	movwf	?___lwdiv
  3551     13B2                     l684:
  3552     13B2  0008               	return
  3553     13B3                     __end_of___lwdiv:
  3554                           
  3555                           	psect	text11
  3556     1234                     __ptext11:	
  3557 ;; *************** function _readEEPROM *****************
  3558 ;; Defined at:
  3559 ;;		line 66 in file "main1.c"
  3560 ;; Parameters:    Size  Location     Type
  3561 ;;  address         2    0[BANK0 ] unsigned int 
  3562 ;; Auto vars:     Size  Location     Type
  3563 ;;		None
  3564 ;; Return value:  Size  Location     Type
  3565 ;;                  2    0[BANK0 ] unsigned int 
  3566 ;; Registers used:
  3567 ;;		wreg
  3568 ;; Tracked objects:
  3569 ;;		On entry : 0/0
  3570 ;;		On exit  : 0/0
  3571 ;;		Unchanged: 0/0
  3572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3573 ;;      Params:         0       2       0       0       0
  3574 ;;      Locals:         0       0       0       0       0
  3575 ;;      Temps:          0       2       0       0       0
  3576 ;;      Totals:         0       4       0       0       0
  3577 ;;Total ram usage:        4 bytes
  3578 ;; Hardware stack levels used: 1
  3579 ;; Hardware stack levels required when called: 2
  3580 ;; This function calls:
  3581 ;;		Nothing
  3582 ;; This function is called by:
  3583 ;;		_main
  3584 ;; This function uses a non-reentrant model
  3585 ;;
  3586                           
  3587     1234                     _readEEPROM:	
  3588                           ;psect for function _readEEPROM
  3589                           
  3590     1234                     l2373:	
  3591                           ;incstack = 0
  3592                           ; Regs used in _readEEPROM: [wreg]
  3593                           
  3594                           
  3595                           ;main1.c: 68:     EEADR = address;
  3596     1234  1283               	bcf	3,5	;RP0=0, select bank0
  3597     1235  1303               	bcf	3,6	;RP1=0, select bank0
  3598     1236  0820               	movf	readEEPROM@address,w
  3599     1237  1283               	bcf	3,5	;RP0=0, select bank2
  3600     1238  1703               	bsf	3,6	;RP1=1, select bank2
  3601     1239  008D               	movwf	13	;volatile
  3602     123A                     l2375:
  3603                           
  3604                           ;main1.c: 69:     RD = 1;
  3605     123A  1683               	bsf	3,5	;RP0=1, select bank3
  3606     123B  1703               	bsf	3,6	;RP1=1, select bank3
  3607     123C  140C               	bsf	12,0	;volsfr
  3608                           
  3609                           ;main1.c: 70:     return EEDATA;
  3610     123D  1283               	bcf	3,5	;RP0=0, select bank2
  3611     123E  1703               	bsf	3,6	;RP1=1, select bank2
  3612     123F  080C               	movf	12,w	;volatile
  3613     1240  1283               	bcf	3,5	;RP0=0, select bank0
  3614     1241  1303               	bcf	3,6	;RP1=0, select bank0
  3615     1242  00A2               	movwf	??_readEEPROM
  3616     1243  01A3               	clrf	??_readEEPROM+1
  3617     1244  0822               	movf	??_readEEPROM,w
  3618     1245  00A0               	movwf	?_readEEPROM
  3619     1246  0823               	movf	??_readEEPROM+1,w
  3620     1247  00A1               	movwf	?_readEEPROM+1
  3621     1248                     l190:
  3622     1248  0008               	return
  3623     1249                     __end_of_readEEPROM:
  3624                           
  3625                           	psect	text12
  3626     083B                     __ptext12:	
  3627 ;; *************** function ___xxtofl *****************
  3628 ;; Defined at:
  3629 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\xxtofl.c"
  3630 ;; Parameters:    Size  Location     Type
  3631 ;;  sign            1    wreg     unsigned char 
  3632 ;;  val             4    0[BANK0 ] long 
  3633 ;; Auto vars:     Size  Location     Type
  3634 ;;  sign            1    8[BANK0 ] unsigned char 
  3635 ;;  arg             4   10[BANK0 ] unsigned long 
  3636 ;;  exp             1    9[BANK0 ] unsigned char 
  3637 ;; Return value:  Size  Location     Type
  3638 ;;                  4    0[BANK0 ] unsigned char 
  3639 ;; Registers used:
  3640 ;;		wreg, status,2, status,0, btemp+1
  3641 ;; Tracked objects:
  3642 ;;		On entry : 0/0
  3643 ;;		On exit  : 0/0
  3644 ;;		Unchanged: 0/0
  3645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3646 ;;      Params:         0       4       0       0       0
  3647 ;;      Locals:         0       6       0       0       0
  3648 ;;      Temps:          0       4       0       0       0
  3649 ;;      Totals:         0      14       0       0       0
  3650 ;;Total ram usage:       14 bytes
  3651 ;; Hardware stack levels used: 1
  3652 ;; Hardware stack levels required when called: 2
  3653 ;; This function calls:
  3654 ;;		Nothing
  3655 ;; This function is called by:
  3656 ;;		_main
  3657 ;; This function uses a non-reentrant model
  3658 ;;
  3659                           
  3660     083B                     ___xxtofl:	
  3661                           ;psect for function ___xxtofl
  3662                           
  3663                           
  3664                           ;incstack = 0
  3665                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  3666                           ;___xxtofl@sign stored from wreg
  3667     083B  1283               	bcf	3,5	;RP0=0, select bank0
  3668     083C  1303               	bcf	3,6	;RP1=0, select bank0
  3669     083D  00A8               	movwf	___xxtofl@sign
  3670     083E                     l2917:
  3671     083E  0828               	movf	___xxtofl@sign,w
  3672     083F  1903               	btfsc	3,2
  3673     0840  2842               	goto	u3771
  3674     0841  2843               	goto	u3770
  3675     0842                     u3771:
  3676     0842  2857               	goto	l2923
  3677     0843                     u3770:
  3678     0843                     l2919:
  3679     0843  1FA3               	btfss	___xxtofl@val+3,7
  3680     0844  2846               	goto	u3781
  3681     0845  2847               	goto	u3780
  3682     0846                     u3781:
  3683     0846  2857               	goto	l2923
  3684     0847                     u3780:
  3685     0847                     l2921:
  3686     0847  0920               	comf	___xxtofl@val,w
  3687     0848  00AA               	movwf	___xxtofl@arg
  3688     0849  0921               	comf	___xxtofl@val+1,w
  3689     084A  00AB               	movwf	___xxtofl@arg+1
  3690     084B  0922               	comf	___xxtofl@val+2,w
  3691     084C  00AC               	movwf	___xxtofl@arg+2
  3692     084D  0923               	comf	___xxtofl@val+3,w
  3693     084E  00AD               	movwf	___xxtofl@arg+3
  3694     084F  0AAA               	incf	___xxtofl@arg,f
  3695     0850  1903               	skipnz
  3696     0851  0AAB               	incf	___xxtofl@arg+1,f
  3697     0852  1903               	skipnz
  3698     0853  0AAC               	incf	___xxtofl@arg+2,f
  3699     0854  1903               	skipnz
  3700     0855  0AAD               	incf	___xxtofl@arg+3,f
  3701     0856  285F               	goto	l845
  3702     0857                     l2923:
  3703     0857  0823               	movf	___xxtofl@val+3,w
  3704     0858  00AD               	movwf	___xxtofl@arg+3
  3705     0859  0822               	movf	___xxtofl@val+2,w
  3706     085A  00AC               	movwf	___xxtofl@arg+2
  3707     085B  0821               	movf	___xxtofl@val+1,w
  3708     085C  00AB               	movwf	___xxtofl@arg+1
  3709     085D  0820               	movf	___xxtofl@val,w
  3710     085E  00AA               	movwf	___xxtofl@arg
  3711     085F                     l845:
  3712     085F  0823               	movf	___xxtofl@val+3,w
  3713     0860  0422               	iorwf	___xxtofl@val+2,w
  3714     0861  0421               	iorwf	___xxtofl@val+1,w
  3715     0862  0420               	iorwf	___xxtofl@val,w
  3716     0863  1D03               	skipz
  3717     0864  2866               	goto	u3791
  3718     0865  2867               	goto	u3790
  3719     0866                     u3791:
  3720     0866  2870               	goto	l2929
  3721     0867                     u3790:
  3722     0867                     l2925:
  3723     0867  3000               	movlw	0
  3724     0868  00A3               	movwf	?___xxtofl+3
  3725     0869  3000               	movlw	0
  3726     086A  00A2               	movwf	?___xxtofl+2
  3727     086B  3000               	movlw	0
  3728     086C  00A1               	movwf	?___xxtofl+1
  3729     086D  3000               	movlw	0
  3730     086E  00A0               	movwf	?___xxtofl
  3731     086F  28F4               	goto	l847
  3732     0870                     l2929:
  3733     0870  3096               	movlw	150
  3734     0871  00A9               	movwf	___xxtofl@exp
  3735     0872  2880               	goto	l2935
  3736     0873                     l2931:
  3737     0873  3001               	movlw	1
  3738     0874  00FF               	movwf	btemp+1
  3739     0875  087F               	movf	btemp+1,w
  3740     0876  07A9               	addwf	___xxtofl@exp,f
  3741     0877                     l2933:
  3742     0877  3001               	movlw	1
  3743     0878                     u3805:
  3744     0878  1003               	clrc
  3745     0879  0CAD               	rrf	___xxtofl@arg+3,f
  3746     087A  0CAC               	rrf	___xxtofl@arg+2,f
  3747     087B  0CAB               	rrf	___xxtofl@arg+1,f
  3748     087C  0CAA               	rrf	___xxtofl@arg,f
  3749     087D  3EFF               	addlw	-1
  3750     087E  1D03               	skipz
  3751     087F  2878               	goto	u3805
  3752     0880                     l2935:
  3753     0880  30FE               	movlw	254
  3754     0881  052D               	andwf	___xxtofl@arg+3,w
  3755     0882  1D03               	btfss	3,2
  3756     0883  2885               	goto	u3811
  3757     0884  2886               	goto	u3810
  3758     0885                     u3811:
  3759     0885  2873               	goto	l2931
  3760     0886                     u3810:
  3761     0886  28A2               	goto	l2943
  3762     0887                     l2937:
  3763     0887  3001               	movlw	1
  3764     0888  00FF               	movwf	btemp+1
  3765     0889  087F               	movf	btemp+1,w
  3766     088A  07A9               	addwf	___xxtofl@exp,f
  3767     088B                     l2939:
  3768     088B  3001               	movlw	1
  3769     088C  07AA               	addwf	___xxtofl@arg,f
  3770     088D  3000               	movlw	0
  3771     088E  1803               	skipnc
  3772     088F  3001               	movlw	1
  3773     0890  07AB               	addwf	___xxtofl@arg+1,f
  3774     0891  3000               	movlw	0
  3775     0892  1803               	skipnc
  3776     0893  3001               	movlw	1
  3777     0894  07AC               	addwf	___xxtofl@arg+2,f
  3778     0895  3000               	movlw	0
  3779     0896  1803               	skipnc
  3780     0897  3001               	movlw	1
  3781     0898  07AD               	addwf	___xxtofl@arg+3,f
  3782     0899                     l2941:
  3783     0899  3001               	movlw	1
  3784     089A                     u3825:
  3785     089A  1003               	clrc
  3786     089B  0CAD               	rrf	___xxtofl@arg+3,f
  3787     089C  0CAC               	rrf	___xxtofl@arg+2,f
  3788     089D  0CAB               	rrf	___xxtofl@arg+1,f
  3789     089E  0CAA               	rrf	___xxtofl@arg,f
  3790     089F  3EFF               	addlw	-1
  3791     08A0  1D03               	skipz
  3792     08A1  289A               	goto	u3825
  3793     08A2                     l2943:
  3794     08A2  30FF               	movlw	255
  3795     08A3  052D               	andwf	___xxtofl@arg+3,w
  3796     08A4  1D03               	btfss	3,2
  3797     08A5  28A7               	goto	u3831
  3798     08A6  28A8               	goto	u3830
  3799     08A7                     u3831:
  3800     08A7  2887               	goto	l2937
  3801     08A8                     u3830:
  3802     08A8  28B4               	goto	l2947
  3803     08A9                     l2945:
  3804     08A9  3001               	movlw	1
  3805     08AA  02A9               	subwf	___xxtofl@exp,f
  3806     08AB  3001               	movlw	1
  3807     08AC  00A4               	movwf	??___xxtofl
  3808     08AD                     u3845:
  3809     08AD  1003               	clrc
  3810     08AE  0DAA               	rlf	___xxtofl@arg,f
  3811     08AF  0DAB               	rlf	___xxtofl@arg+1,f
  3812     08B0  0DAC               	rlf	___xxtofl@arg+2,f
  3813     08B1  0DAD               	rlf	___xxtofl@arg+3,f
  3814     08B2  0BA4               	decfsz	??___xxtofl,f
  3815     08B3  28AD               	goto	u3845
  3816     08B4                     l2947:
  3817     08B4  1BAC               	btfsc	___xxtofl@arg+2,7
  3818     08B5  28B7               	goto	u3851
  3819     08B6  28B8               	goto	u3850
  3820     08B7                     u3851:
  3821     08B7  28BE               	goto	l858
  3822     08B8                     u3850:
  3823     08B8                     l2949:
  3824     08B8  3002               	movlw	2
  3825     08B9  0229               	subwf	___xxtofl@exp,w
  3826     08BA  1803               	skipnc
  3827     08BB  28BD               	goto	u3861
  3828     08BC  28BE               	goto	u3860
  3829     08BD                     u3861:
  3830     08BD  28A9               	goto	l2945
  3831     08BE                     u3860:
  3832     08BE                     l858:
  3833     08BE  1829               	btfsc	___xxtofl@exp,0
  3834     08BF  28C1               	goto	u3871
  3835     08C0  28C2               	goto	u3870
  3836     08C1                     u3871:
  3837     08C1  28CA               	goto	l859
  3838     08C2                     u3870:
  3839     08C2                     l2951:
  3840     08C2  30FF               	movlw	255
  3841     08C3  05AA               	andwf	___xxtofl@arg,f
  3842     08C4  30FF               	movlw	255
  3843     08C5  05AB               	andwf	___xxtofl@arg+1,f
  3844     08C6  307F               	movlw	127
  3845     08C7  05AC               	andwf	___xxtofl@arg+2,f
  3846     08C8  30FF               	movlw	255
  3847     08C9  05AD               	andwf	___xxtofl@arg+3,f
  3848     08CA                     l859:
  3849     08CA  1003               	clrc
  3850     08CB  0CA9               	rrf	___xxtofl@exp,f
  3851     08CC                     l2953:
  3852     08CC  0829               	movf	___xxtofl@exp,w
  3853     08CD  00A4               	movwf	??___xxtofl
  3854     08CE  01A5               	clrf	??___xxtofl+1
  3855     08CF  01A6               	clrf	??___xxtofl+2
  3856     08D0  01A7               	clrf	??___xxtofl+3
  3857     08D1  3018               	movlw	24
  3858     08D2                     u3885:
  3859     08D2  1003               	clrc
  3860     08D3  0DA4               	rlf	??___xxtofl,f
  3861     08D4  0DA5               	rlf	??___xxtofl+1,f
  3862     08D5  0DA6               	rlf	??___xxtofl+2,f
  3863     08D6  0DA7               	rlf	??___xxtofl+3,f
  3864     08D7                     u3880:
  3865     08D7  3EFF               	addlw	-1
  3866     08D8  1D03               	skipz
  3867     08D9  28D2               	goto	u3885
  3868     08DA  0824               	movf	??___xxtofl,w
  3869     08DB  04AA               	iorwf	___xxtofl@arg,f
  3870     08DC  0825               	movf	??___xxtofl+1,w
  3871     08DD  04AB               	iorwf	___xxtofl@arg+1,f
  3872     08DE  0826               	movf	??___xxtofl+2,w
  3873     08DF  04AC               	iorwf	___xxtofl@arg+2,f
  3874     08E0  0827               	movf	??___xxtofl+3,w
  3875     08E1  04AD               	iorwf	___xxtofl@arg+3,f
  3876     08E2                     l2955:
  3877     08E2  0828               	movf	___xxtofl@sign,w
  3878     08E3  1903               	btfsc	3,2
  3879     08E4  28E6               	goto	u3891
  3880     08E5  28E7               	goto	u3890
  3881     08E6                     u3891:
  3882     08E6  28EC               	goto	l2961
  3883     08E7                     u3890:
  3884     08E7                     l2957:
  3885     08E7  1FA3               	btfss	___xxtofl@val+3,7
  3886     08E8  28EA               	goto	u3901
  3887     08E9  28EB               	goto	u3900
  3888     08EA                     u3901:
  3889     08EA  28EC               	goto	l2961
  3890     08EB                     u3900:
  3891     08EB                     l2959:
  3892     08EB  17AD               	bsf	___xxtofl@arg+3,7
  3893     08EC                     l2961:
  3894     08EC  082D               	movf	___xxtofl@arg+3,w
  3895     08ED  00A3               	movwf	?___xxtofl+3
  3896     08EE  082C               	movf	___xxtofl@arg+2,w
  3897     08EF  00A2               	movwf	?___xxtofl+2
  3898     08F0  082B               	movf	___xxtofl@arg+1,w
  3899     08F1  00A1               	movwf	?___xxtofl+1
  3900     08F2  082A               	movf	___xxtofl@arg,w
  3901     08F3  00A0               	movwf	?___xxtofl
  3902     08F4                     l847:
  3903     08F4  0008               	return
  3904     08F5                     __end_of___xxtofl:
  3905                           
  3906                           	psect	text13
  3907     1666                     __ptext13:	
  3908 ;; *************** function ___fltol *****************
  3909 ;; Defined at:
  3910 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fltol.c"
  3911 ;; Parameters:    Size  Location     Type
  3912 ;;  f1              4    0[BANK0 ] unsigned char 
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;  exp1            1    9[BANK0 ] unsigned char 
  3915 ;;  sign1           1    8[BANK0 ] unsigned char 
  3916 ;; Return value:  Size  Location     Type
  3917 ;;                  4    0[BANK0 ] long 
  3918 ;; Registers used:
  3919 ;;		wreg, status,2, status,0, btemp+1
  3920 ;; Tracked objects:
  3921 ;;		On entry : 0/0
  3922 ;;		On exit  : 0/0
  3923 ;;		Unchanged: 0/0
  3924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3925 ;;      Params:         0       4       0       0       0
  3926 ;;      Locals:         0       2       0       0       0
  3927 ;;      Temps:          0       4       0       0       0
  3928 ;;      Totals:         0      10       0       0       0
  3929 ;;Total ram usage:       10 bytes
  3930 ;; Hardware stack levels used: 1
  3931 ;; Hardware stack levels required when called: 2
  3932 ;; This function calls:
  3933 ;;		Nothing
  3934 ;; This function is called by:
  3935 ;;		_main
  3936 ;; This function uses a non-reentrant model
  3937 ;;
  3938                           
  3939     1666                     ___fltol:	
  3940                           ;psect for function ___fltol
  3941                           
  3942     1666                     l2591:	
  3943                           ;incstack = 0
  3944                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  3945                           
  3946     1666  1003               	clrc
  3947     1667  1283               	bcf	3,5	;RP0=0, select bank0
  3948     1668  1303               	bcf	3,6	;RP1=0, select bank0
  3949     1669  0D22               	rlf	___fltol@f1+2,w
  3950     166A  0D23               	rlf	___fltol@f1+3,w
  3951     166B  00A9               	movwf	___fltol@exp1
  3952     166C  0829               	movf	___fltol@exp1,w
  3953     166D  1D03               	btfss	3,2
  3954     166E  2E70               	goto	u3011
  3955     166F  2E71               	goto	u3010
  3956     1670                     u3011:
  3957     1670  2E7A               	goto	l2597
  3958     1671                     u3010:
  3959     1671                     l2593:
  3960     1671  3000               	movlw	0
  3961     1672  00A3               	movwf	?___fltol+3
  3962     1673  3000               	movlw	0
  3963     1674  00A2               	movwf	?___fltol+2
  3964     1675  3000               	movlw	0
  3965     1676  00A1               	movwf	?___fltol+1
  3966     1677  3000               	movlw	0
  3967     1678  00A0               	movwf	?___fltol
  3968     1679  2EDD               	goto	l598
  3969     167A                     l2597:
  3970     167A  0820               	movf	___fltol@f1,w
  3971     167B  00A4               	movwf	??___fltol
  3972     167C  0821               	movf	___fltol@f1+1,w
  3973     167D  00A5               	movwf	??___fltol+1
  3974     167E  0822               	movf	___fltol@f1+2,w
  3975     167F  00A6               	movwf	??___fltol+2
  3976     1680  0823               	movf	___fltol@f1+3,w
  3977     1681  00A7               	movwf	??___fltol+3
  3978     1682  301F               	movlw	31
  3979     1683                     u3025:
  3980     1683  1003               	clrc
  3981     1684  0CA7               	rrf	??___fltol+3,f
  3982     1685  0CA6               	rrf	??___fltol+2,f
  3983     1686  0CA5               	rrf	??___fltol+1,f
  3984     1687  0CA4               	rrf	??___fltol,f
  3985     1688                     u3020:
  3986     1688  3EFF               	addlw	-1
  3987     1689  1D03               	skipz
  3988     168A  2E83               	goto	u3025
  3989     168B  0824               	movf	??___fltol,w
  3990     168C  00A8               	movwf	___fltol@sign1
  3991     168D                     l2599:
  3992     168D  17A2               	bsf	___fltol@f1+2,7
  3993     168E                     l2601:
  3994     168E  30FF               	movlw	255
  3995     168F  05A0               	andwf	___fltol@f1,f
  3996     1690  30FF               	movlw	255
  3997     1691  05A1               	andwf	___fltol@f1+1,f
  3998     1692  30FF               	movlw	255
  3999     1693  05A2               	andwf	___fltol@f1+2,f
  4000     1694  3000               	movlw	0
  4001     1695  05A3               	andwf	___fltol@f1+3,f
  4002     1696                     l2603:
  4003     1696  3096               	movlw	150
  4004     1697  02A9               	subwf	___fltol@exp1,f
  4005     1698                     l2605:
  4006     1698  1FA9               	btfss	___fltol@exp1,7
  4007     1699  2E9B               	goto	u3031
  4008     169A  2E9C               	goto	u3030
  4009     169B                     u3031:
  4010     169B  2EB6               	goto	l2617
  4011     169C                     u3030:
  4012     169C                     l2607:
  4013     169C  0829               	movf	___fltol@exp1,w
  4014     169D  3A80               	xorlw	128
  4015     169E  3E97               	addlw	151
  4016     169F  1803               	skipnc
  4017     16A0  2EA2               	goto	u3041
  4018     16A1  2EA3               	goto	u3040
  4019     16A2                     u3041:
  4020     16A2  2EA4               	goto	l2613
  4021     16A3                     u3040:
  4022     16A3  2E71               	goto	l2593
  4023     16A4                     l2613:
  4024     16A4  3001               	movlw	1
  4025     16A5                     u3055:
  4026     16A5  1003               	clrc
  4027     16A6  0CA3               	rrf	___fltol@f1+3,f
  4028     16A7  0CA2               	rrf	___fltol@f1+2,f
  4029     16A8  0CA1               	rrf	___fltol@f1+1,f
  4030     16A9  0CA0               	rrf	___fltol@f1,f
  4031     16AA  3EFF               	addlw	-1
  4032     16AB  1D03               	skipz
  4033     16AC  2EA5               	goto	u3055
  4034     16AD                     l2615:
  4035     16AD  3001               	movlw	1
  4036     16AE  00FF               	movwf	btemp+1
  4037     16AF  087F               	movf	btemp+1,w
  4038     16B0  07A9               	addwf	___fltol@exp1,f
  4039     16B1  1D03               	btfss	3,2
  4040     16B2  2EB4               	goto	u3061
  4041     16B3  2EB5               	goto	u3060
  4042     16B4                     u3061:
  4043     16B4  2EA4               	goto	l2613
  4044     16B5                     u3060:
  4045     16B5  2ECD               	goto	l2625
  4046     16B6                     l2617:
  4047     16B6  3020               	movlw	32
  4048     16B7  0229               	subwf	___fltol@exp1,w
  4049     16B8  1C03               	skipc
  4050     16B9  2EBB               	goto	u3071
  4051     16BA  2EBC               	goto	u3070
  4052     16BB                     u3071:
  4053     16BB  2EC8               	goto	l605
  4054     16BC                     u3070:
  4055     16BC  2E71               	goto	l2593
  4056     16BD                     l2623:
  4057     16BD  3001               	movlw	1
  4058     16BE  00A4               	movwf	??___fltol
  4059     16BF                     u3085:
  4060     16BF  1003               	clrc
  4061     16C0  0DA0               	rlf	___fltol@f1,f
  4062     16C1  0DA1               	rlf	___fltol@f1+1,f
  4063     16C2  0DA2               	rlf	___fltol@f1+2,f
  4064     16C3  0DA3               	rlf	___fltol@f1+3,f
  4065     16C4  0BA4               	decfsz	??___fltol,f
  4066     16C5  2EBF               	goto	u3085
  4067     16C6  3001               	movlw	1
  4068     16C7  02A9               	subwf	___fltol@exp1,f
  4069     16C8                     l605:
  4070     16C8  0829               	movf	___fltol@exp1,w
  4071     16C9  1D03               	btfss	3,2
  4072     16CA  2ECC               	goto	u3091
  4073     16CB  2ECD               	goto	u3090
  4074     16CC                     u3091:
  4075     16CC  2EBD               	goto	l2623
  4076     16CD                     u3090:
  4077     16CD                     l2625:
  4078     16CD  0828               	movf	___fltol@sign1,w
  4079     16CE  1903               	btfsc	3,2
  4080     16CF  2ED1               	goto	u3101
  4081     16D0  2ED2               	goto	u3100
  4082     16D1                     u3101:
  4083     16D1  2EDD               	goto	l608
  4084     16D2                     u3100:
  4085     16D2                     l2627:
  4086     16D2  09A0               	comf	___fltol@f1,f
  4087     16D3  09A1               	comf	___fltol@f1+1,f
  4088     16D4  09A2               	comf	___fltol@f1+2,f
  4089     16D5  09A3               	comf	___fltol@f1+3,f
  4090     16D6  0AA0               	incf	___fltol@f1,f
  4091     16D7  1903               	skipnz
  4092     16D8  0AA1               	incf	___fltol@f1+1,f
  4093     16D9  1903               	skipnz
  4094     16DA  0AA2               	incf	___fltol@f1+2,f
  4095     16DB  1903               	skipnz
  4096     16DC  0AA3               	incf	___fltol@f1+3,f
  4097     16DD                     l608:
  4098     16DD                     l598:
  4099     16DD  0008               	return
  4100     16DE                     __end_of___fltol:
  4101                           
  4102                           	psect	text14
  4103     0CBB                     __ptext14:	
  4104 ;; *************** function ___flmul *****************
  4105 ;; Defined at:
  4106 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcmul.c"
  4107 ;; Parameters:    Size  Location     Type
  4108 ;;  b               4   26[BANK0 ] long 
  4109 ;;  a               4   30[BANK0 ] long 
  4110 ;; Auto vars:     Size  Location     Type
  4111 ;;  prod            4   46[BANK0 ] struct .
  4112 ;;  grs             4   40[BANK0 ] unsigned long 
  4113 ;;  temp            2   50[BANK0 ] struct .
  4114 ;;  bexp            1   45[BANK0 ] unsigned char 
  4115 ;;  aexp            1   44[BANK0 ] unsigned char 
  4116 ;;  sign            1   39[BANK0 ] unsigned char 
  4117 ;; Return value:  Size  Location     Type
  4118 ;;                  4   26[BANK0 ] unsigned char 
  4119 ;; Registers used:
  4120 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4121 ;; Tracked objects:
  4122 ;;		On entry : 0/0
  4123 ;;		On exit  : 0/0
  4124 ;;		Unchanged: 0/0
  4125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4126 ;;      Params:         0       8       0       0       0
  4127 ;;      Locals:         0      13       0       0       0
  4128 ;;      Temps:          0       5       0       0       0
  4129 ;;      Totals:         0      26       0       0       0
  4130 ;;Total ram usage:       26 bytes
  4131 ;; Hardware stack levels used: 1
  4132 ;; Hardware stack levels required when called: 3
  4133 ;; This function calls:
  4134 ;;		__Umul8_16
  4135 ;; This function is called by:
  4136 ;;		_main
  4137 ;; This function uses a non-reentrant model
  4138 ;;
  4139                           
  4140     0CBB                     ___flmul:	
  4141                           ;psect for function ___flmul
  4142                           
  4143     0CBB                     l2775:	
  4144                           ;incstack = 0
  4145                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4146                           
  4147     0CBB  1283               	bcf	3,5	;RP0=0, select bank0
  4148     0CBC  1303               	bcf	3,6	;RP1=0, select bank0
  4149     0CBD  083D               	movf	___flmul@b+3,w
  4150     0CBE  3980               	andlw	128
  4151     0CBF  00C7               	movwf	___flmul@sign
  4152     0CC0                     l2777:
  4153     0CC0  083D               	movf	___flmul@b+3,w
  4154     0CC1  00C2               	movwf	??___flmul
  4155     0CC2  0742               	addwf	??___flmul,w
  4156     0CC3  00CD               	movwf	___flmul@bexp
  4157     0CC4                     l2779:
  4158     0CC4  1FBC               	btfss	___flmul@b+2,7
  4159     0CC5  2CC7               	goto	u3401
  4160     0CC6  2CC8               	goto	u3400
  4161     0CC7                     u3401:
  4162     0CC7  2CC9               	goto	l2783
  4163     0CC8                     u3400:
  4164     0CC8                     l2781:
  4165     0CC8  144D               	bsf	___flmul@bexp,0
  4166     0CC9                     l2783:
  4167     0CC9  084D               	movf	___flmul@bexp,w
  4168     0CCA  1903               	btfsc	3,2
  4169     0CCB  2CCD               	goto	u3411
  4170     0CCC  2CCE               	goto	u3410
  4171     0CCD                     u3411:
  4172     0CCD  2CDD               	goto	l2791
  4173     0CCE                     u3410:
  4174     0CCE                     l2785:
  4175     0CCE  0A4D               	incf	___flmul@bexp,w
  4176     0CCF  1D03               	btfss	3,2
  4177     0CD0  2CD2               	goto	u3421
  4178     0CD1  2CD3               	goto	u3420
  4179     0CD2                     u3421:
  4180     0CD2  2CDB               	goto	l2789
  4181     0CD3                     u3420:
  4182     0CD3                     l2787:
  4183     0CD3  3000               	movlw	0
  4184     0CD4  00BD               	movwf	___flmul@b+3
  4185     0CD5  3000               	movlw	0
  4186     0CD6  00BC               	movwf	___flmul@b+2
  4187     0CD7  3000               	movlw	0
  4188     0CD8  00BB               	movwf	___flmul@b+1
  4189     0CD9  3000               	movlw	0
  4190     0CDA  00BA               	movwf	___flmul@b
  4191     0CDB                     l2789:
  4192     0CDB  17BC               	bsf	___flmul@b+2,7
  4193     0CDC  2CE5               	goto	l2793
  4194     0CDD                     l2791:
  4195     0CDD  3000               	movlw	0
  4196     0CDE  00BD               	movwf	___flmul@b+3
  4197     0CDF  3000               	movlw	0
  4198     0CE0  00BC               	movwf	___flmul@b+2
  4199     0CE1  3000               	movlw	0
  4200     0CE2  00BB               	movwf	___flmul@b+1
  4201     0CE3  3000               	movlw	0
  4202     0CE4  00BA               	movwf	___flmul@b
  4203     0CE5                     l2793:
  4204     0CE5  0841               	movf	___flmul@a+3,w
  4205     0CE6  3980               	andlw	128
  4206     0CE7  00FF               	movwf	btemp+1
  4207     0CE8  087F               	movf	btemp+1,w
  4208     0CE9  06C7               	xorwf	___flmul@sign,f
  4209     0CEA                     l2795:
  4210     0CEA  0841               	movf	___flmul@a+3,w
  4211     0CEB  00C2               	movwf	??___flmul
  4212     0CEC  0742               	addwf	??___flmul,w
  4213     0CED  00CC               	movwf	___flmul@aexp
  4214     0CEE                     l2797:
  4215     0CEE  1FC0               	btfss	___flmul@a+2,7
  4216     0CEF  2CF1               	goto	u3431
  4217     0CF0  2CF2               	goto	u3430
  4218     0CF1                     u3431:
  4219     0CF1  2CF3               	goto	l2801
  4220     0CF2                     u3430:
  4221     0CF2                     l2799:
  4222     0CF2  144C               	bsf	___flmul@aexp,0
  4223     0CF3                     l2801:
  4224     0CF3  084C               	movf	___flmul@aexp,w
  4225     0CF4  1903               	btfsc	3,2
  4226     0CF5  2CF7               	goto	u3441
  4227     0CF6  2CF8               	goto	u3440
  4228     0CF7                     u3441:
  4229     0CF7  2D07               	goto	l2809
  4230     0CF8                     u3440:
  4231     0CF8                     l2803:
  4232     0CF8  0A4C               	incf	___flmul@aexp,w
  4233     0CF9  1D03               	btfss	3,2
  4234     0CFA  2CFC               	goto	u3451
  4235     0CFB  2CFD               	goto	u3450
  4236     0CFC                     u3451:
  4237     0CFC  2D05               	goto	l2807
  4238     0CFD                     u3450:
  4239     0CFD                     l2805:
  4240     0CFD  3000               	movlw	0
  4241     0CFE  00C1               	movwf	___flmul@a+3
  4242     0CFF  3000               	movlw	0
  4243     0D00  00C0               	movwf	___flmul@a+2
  4244     0D01  3000               	movlw	0
  4245     0D02  00BF               	movwf	___flmul@a+1
  4246     0D03  3000               	movlw	0
  4247     0D04  00BE               	movwf	___flmul@a
  4248     0D05                     l2807:
  4249     0D05  17C0               	bsf	___flmul@a+2,7
  4250     0D06  2D0F               	goto	l2811
  4251     0D07                     l2809:
  4252     0D07  3000               	movlw	0
  4253     0D08  00C1               	movwf	___flmul@a+3
  4254     0D09  3000               	movlw	0
  4255     0D0A  00C0               	movwf	___flmul@a+2
  4256     0D0B  3000               	movlw	0
  4257     0D0C  00BF               	movwf	___flmul@a+1
  4258     0D0D  3000               	movlw	0
  4259     0D0E  00BE               	movwf	___flmul@a
  4260     0D0F                     l2811:
  4261     0D0F  084C               	movf	___flmul@aexp,w
  4262     0D10  1903               	btfsc	3,2
  4263     0D11  2D13               	goto	u3461
  4264     0D12  2D14               	goto	u3460
  4265     0D13                     u3461:
  4266     0D13  2D19               	goto	l2815
  4267     0D14                     u3460:
  4268     0D14                     l2813:
  4269     0D14  084D               	movf	___flmul@bexp,w
  4270     0D15  1D03               	btfss	3,2
  4271     0D16  2D18               	goto	u3471
  4272     0D17  2D19               	goto	u3470
  4273     0D18                     u3471:
  4274     0D18  2D22               	goto	l2819
  4275     0D19                     u3470:
  4276     0D19                     l2815:
  4277     0D19  3000               	movlw	0
  4278     0D1A  00BD               	movwf	?___flmul+3
  4279     0D1B  3000               	movlw	0
  4280     0D1C  00BC               	movwf	?___flmul+2
  4281     0D1D  3000               	movlw	0
  4282     0D1E  00BB               	movwf	?___flmul+1
  4283     0D1F  3000               	movlw	0
  4284     0D20  00BA               	movwf	?___flmul
  4285     0D21  2FFF               	goto	l801
  4286     0D22                     l2819:
  4287     0D22  083A               	movf	___flmul@b,w
  4288     0D23  00A0               	movwf	__Umul8_16@multiplicand
  4289     0D24  0840               	movf	___flmul@a+2,w
  4290     0D25  160A  118A  22C2  120A  158A  	fcall	__Umul8_16
  4291     0D2A  1283               	bcf	3,5	;RP0=0, select bank0
  4292     0D2B  1303               	bcf	3,6	;RP1=0, select bank0
  4293     0D2C  0821               	movf	?__Umul8_16+1,w
  4294     0D2D  00D3               	movwf	___flmul@temp+1
  4295     0D2E  0820               	movf	?__Umul8_16,w
  4296     0D2F  00D2               	movwf	___flmul@temp
  4297     0D30                     l2821:
  4298     0D30  0852               	movf	___flmul@temp,w
  4299     0D31  00C2               	movwf	??___flmul
  4300     0D32  01C3               	clrf	??___flmul+1
  4301     0D33  01C4               	clrf	??___flmul+2
  4302     0D34  01C5               	clrf	??___flmul+3
  4303     0D35  0845               	movf	??___flmul+3,w
  4304     0D36  00CB               	movwf	___flmul@grs+3
  4305     0D37  0844               	movf	??___flmul+2,w
  4306     0D38  00CA               	movwf	___flmul@grs+2
  4307     0D39  0843               	movf	??___flmul+1,w
  4308     0D3A  00C9               	movwf	___flmul@grs+1
  4309     0D3B  0842               	movf	??___flmul,w
  4310     0D3C  00C8               	movwf	___flmul@grs
  4311     0D3D                     l2823:
  4312     0D3D  0853               	movf	___flmul@temp+1,w
  4313     0D3E  00C2               	movwf	??___flmul
  4314     0D3F  01C3               	clrf	??___flmul+1
  4315     0D40  01C4               	clrf	??___flmul+2
  4316     0D41  01C5               	clrf	??___flmul+3
  4317     0D42  0845               	movf	??___flmul+3,w
  4318     0D43  00D1               	movwf	___flmul@prod+3
  4319     0D44  0844               	movf	??___flmul+2,w
  4320     0D45  00D0               	movwf	___flmul@prod+2
  4321     0D46  0843               	movf	??___flmul+1,w
  4322     0D47  00CF               	movwf	___flmul@prod+1
  4323     0D48  0842               	movf	??___flmul,w
  4324     0D49  00CE               	movwf	___flmul@prod
  4325     0D4A  083B               	movf	___flmul@b+1,w
  4326     0D4B  00A0               	movwf	__Umul8_16@multiplicand
  4327     0D4C  083F               	movf	___flmul@a+1,w
  4328     0D4D  160A  118A  22C2  120A  158A  	fcall	__Umul8_16
  4329     0D52  1283               	bcf	3,5	;RP0=0, select bank0
  4330     0D53  1303               	bcf	3,6	;RP1=0, select bank0
  4331     0D54  0821               	movf	?__Umul8_16+1,w
  4332     0D55  00D3               	movwf	___flmul@temp+1
  4333     0D56  0820               	movf	?__Umul8_16,w
  4334     0D57  00D2               	movwf	___flmul@temp
  4335     0D58                     l2825:
  4336     0D58  0852               	movf	___flmul@temp,w
  4337     0D59  00C2               	movwf	??___flmul
  4338     0D5A  01C3               	clrf	??___flmul+1
  4339     0D5B  01C4               	clrf	??___flmul+2
  4340     0D5C  01C5               	clrf	??___flmul+3
  4341     0D5D  0842               	movf	??___flmul,w
  4342     0D5E  07C8               	addwf	___flmul@grs,f
  4343     0D5F  0843               	movf	??___flmul+1,w
  4344     0D60  1103               	clrz
  4345     0D61  1803               	skipnc
  4346     0D62  3E01               	addlw	1
  4347     0D63  1903               	skipnz
  4348     0D64  2D66               	goto	u3481
  4349     0D65  07C9               	addwf	___flmul@grs+1,f
  4350     0D66                     u3481:
  4351     0D66  0844               	movf	??___flmul+2,w
  4352     0D67  1103               	clrz
  4353     0D68  1803               	skipnc
  4354     0D69  3E01               	addlw	1
  4355     0D6A  1903               	skipnz
  4356     0D6B  2D6D               	goto	u3482
  4357     0D6C  07CA               	addwf	___flmul@grs+2,f
  4358     0D6D                     u3482:
  4359     0D6D  0845               	movf	??___flmul+3,w
  4360     0D6E  1103               	clrz
  4361     0D6F  1803               	skipnc
  4362     0D70  3E01               	addlw	1
  4363     0D71  1903               	skipnz
  4364     0D72  2D74               	goto	u3483
  4365     0D73  07CB               	addwf	___flmul@grs+3,f
  4366     0D74                     u3483:
  4367     0D74                     l2827:
  4368     0D74  0853               	movf	___flmul@temp+1,w
  4369     0D75  00C2               	movwf	??___flmul
  4370     0D76  01C3               	clrf	??___flmul+1
  4371     0D77  01C4               	clrf	??___flmul+2
  4372     0D78  01C5               	clrf	??___flmul+3
  4373     0D79  0842               	movf	??___flmul,w
  4374     0D7A  07CE               	addwf	___flmul@prod,f
  4375     0D7B  0843               	movf	??___flmul+1,w
  4376     0D7C  1103               	clrz
  4377     0D7D  1803               	skipnc
  4378     0D7E  3E01               	addlw	1
  4379     0D7F  1903               	skipnz
  4380     0D80  2D82               	goto	u3491
  4381     0D81  07CF               	addwf	___flmul@prod+1,f
  4382     0D82                     u3491:
  4383     0D82  0844               	movf	??___flmul+2,w
  4384     0D83  1103               	clrz
  4385     0D84  1803               	skipnc
  4386     0D85  3E01               	addlw	1
  4387     0D86  1903               	skipnz
  4388     0D87  2D89               	goto	u3492
  4389     0D88  07D0               	addwf	___flmul@prod+2,f
  4390     0D89                     u3492:
  4391     0D89  0845               	movf	??___flmul+3,w
  4392     0D8A  1103               	clrz
  4393     0D8B  1803               	skipnc
  4394     0D8C  3E01               	addlw	1
  4395     0D8D  1903               	skipnz
  4396     0D8E  2D90               	goto	u3493
  4397     0D8F  07D1               	addwf	___flmul@prod+3,f
  4398     0D90                     u3493:
  4399     0D90  083C               	movf	___flmul@b+2,w
  4400     0D91  00A0               	movwf	__Umul8_16@multiplicand
  4401     0D92  083E               	movf	___flmul@a,w
  4402     0D93  160A  118A  22C2  120A  158A  	fcall	__Umul8_16
  4403     0D98  1283               	bcf	3,5	;RP0=0, select bank0
  4404     0D99  1303               	bcf	3,6	;RP1=0, select bank0
  4405     0D9A  0821               	movf	?__Umul8_16+1,w
  4406     0D9B  00D3               	movwf	___flmul@temp+1
  4407     0D9C  0820               	movf	?__Umul8_16,w
  4408     0D9D  00D2               	movwf	___flmul@temp
  4409     0D9E                     l2829:
  4410     0D9E  0852               	movf	___flmul@temp,w
  4411     0D9F  00C2               	movwf	??___flmul
  4412     0DA0  01C3               	clrf	??___flmul+1
  4413     0DA1  01C4               	clrf	??___flmul+2
  4414     0DA2  01C5               	clrf	??___flmul+3
  4415     0DA3  0842               	movf	??___flmul,w
  4416     0DA4  07C8               	addwf	___flmul@grs,f
  4417     0DA5  0843               	movf	??___flmul+1,w
  4418     0DA6  1103               	clrz
  4419     0DA7  1803               	skipnc
  4420     0DA8  3E01               	addlw	1
  4421     0DA9  1903               	skipnz
  4422     0DAA  2DAC               	goto	u3501
  4423     0DAB  07C9               	addwf	___flmul@grs+1,f
  4424     0DAC                     u3501:
  4425     0DAC  0844               	movf	??___flmul+2,w
  4426     0DAD  1103               	clrz
  4427     0DAE  1803               	skipnc
  4428     0DAF  3E01               	addlw	1
  4429     0DB0  1903               	skipnz
  4430     0DB1  2DB3               	goto	u3502
  4431     0DB2  07CA               	addwf	___flmul@grs+2,f
  4432     0DB3                     u3502:
  4433     0DB3  0845               	movf	??___flmul+3,w
  4434     0DB4  1103               	clrz
  4435     0DB5  1803               	skipnc
  4436     0DB6  3E01               	addlw	1
  4437     0DB7  1903               	skipnz
  4438     0DB8  2DBA               	goto	u3503
  4439     0DB9  07CB               	addwf	___flmul@grs+3,f
  4440     0DBA                     u3503:
  4441     0DBA                     l2831:
  4442     0DBA  0853               	movf	___flmul@temp+1,w
  4443     0DBB  00C2               	movwf	??___flmul
  4444     0DBC  01C3               	clrf	??___flmul+1
  4445     0DBD  01C4               	clrf	??___flmul+2
  4446     0DBE  01C5               	clrf	??___flmul+3
  4447     0DBF  0842               	movf	??___flmul,w
  4448     0DC0  07CE               	addwf	___flmul@prod,f
  4449     0DC1  0843               	movf	??___flmul+1,w
  4450     0DC2  1103               	clrz
  4451     0DC3  1803               	skipnc
  4452     0DC4  3E01               	addlw	1
  4453     0DC5  1903               	skipnz
  4454     0DC6  2DC8               	goto	u3511
  4455     0DC7  07CF               	addwf	___flmul@prod+1,f
  4456     0DC8                     u3511:
  4457     0DC8  0844               	movf	??___flmul+2,w
  4458     0DC9  1103               	clrz
  4459     0DCA  1803               	skipnc
  4460     0DCB  3E01               	addlw	1
  4461     0DCC  1903               	skipnz
  4462     0DCD  2DCF               	goto	u3512
  4463     0DCE  07D0               	addwf	___flmul@prod+2,f
  4464     0DCF                     u3512:
  4465     0DCF  0845               	movf	??___flmul+3,w
  4466     0DD0  1103               	clrz
  4467     0DD1  1803               	skipnc
  4468     0DD2  3E01               	addlw	1
  4469     0DD3  1903               	skipnz
  4470     0DD4  2DD6               	goto	u3513
  4471     0DD5  07D1               	addwf	___flmul@prod+3,f
  4472     0DD6                     u3513:
  4473     0DD6                     l2833:
  4474     0DD6  3008               	movlw	8
  4475     0DD7  00C2               	movwf	??___flmul
  4476     0DD8                     u3525:
  4477     0DD8  1003               	clrc
  4478     0DD9  0DC8               	rlf	___flmul@grs,f
  4479     0DDA  0DC9               	rlf	___flmul@grs+1,f
  4480     0DDB  0DCA               	rlf	___flmul@grs+2,f
  4481     0DDC  0DCB               	rlf	___flmul@grs+3,f
  4482     0DDD  0BC2               	decfsz	??___flmul,f
  4483     0DDE  2DD8               	goto	u3525
  4484     0DDF                     l2835:
  4485     0DDF  083B               	movf	___flmul@b+1,w
  4486     0DE0  00A0               	movwf	__Umul8_16@multiplicand
  4487     0DE1  083E               	movf	___flmul@a,w
  4488     0DE2  160A  118A  22C2  120A  158A  	fcall	__Umul8_16
  4489     0DE7  1283               	bcf	3,5	;RP0=0, select bank0
  4490     0DE8  1303               	bcf	3,6	;RP1=0, select bank0
  4491     0DE9  0821               	movf	?__Umul8_16+1,w
  4492     0DEA  00D3               	movwf	___flmul@temp+1
  4493     0DEB  0820               	movf	?__Umul8_16,w
  4494     0DEC  00D2               	movwf	___flmul@temp
  4495     0DED                     l2837:
  4496     0DED  0852               	movf	___flmul@temp,w
  4497     0DEE  00C2               	movwf	??___flmul
  4498     0DEF  0853               	movf	___flmul@temp+1,w
  4499     0DF0  00C3               	movwf	??___flmul+1
  4500     0DF1  01C4               	clrf	??___flmul+2
  4501     0DF2  01C5               	clrf	??___flmul+3
  4502     0DF3  0842               	movf	??___flmul,w
  4503     0DF4  07C8               	addwf	___flmul@grs,f
  4504     0DF5  0843               	movf	??___flmul+1,w
  4505     0DF6  1103               	clrz
  4506     0DF7  1803               	skipnc
  4507     0DF8  3E01               	addlw	1
  4508     0DF9  1903               	skipnz
  4509     0DFA  2DFC               	goto	u3531
  4510     0DFB  07C9               	addwf	___flmul@grs+1,f
  4511     0DFC                     u3531:
  4512     0DFC  0844               	movf	??___flmul+2,w
  4513     0DFD  1103               	clrz
  4514     0DFE  1803               	skipnc
  4515     0DFF  3E01               	addlw	1
  4516     0E00  1903               	skipnz
  4517     0E01  2E03               	goto	u3532
  4518     0E02  07CA               	addwf	___flmul@grs+2,f
  4519     0E03                     u3532:
  4520     0E03  0845               	movf	??___flmul+3,w
  4521     0E04  1103               	clrz
  4522     0E05  1803               	skipnc
  4523     0E06  3E01               	addlw	1
  4524     0E07  1903               	skipnz
  4525     0E08  2E0A               	goto	u3533
  4526     0E09  07CB               	addwf	___flmul@grs+3,f
  4527     0E0A                     u3533:
  4528     0E0A                     l2839:
  4529     0E0A  083A               	movf	___flmul@b,w
  4530     0E0B  00A0               	movwf	__Umul8_16@multiplicand
  4531     0E0C  083F               	movf	___flmul@a+1,w
  4532     0E0D  160A  118A  22C2  120A  158A  	fcall	__Umul8_16
  4533     0E12  1283               	bcf	3,5	;RP0=0, select bank0
  4534     0E13  1303               	bcf	3,6	;RP1=0, select bank0
  4535     0E14  0821               	movf	?__Umul8_16+1,w
  4536     0E15  00D3               	movwf	___flmul@temp+1
  4537     0E16  0820               	movf	?__Umul8_16,w
  4538     0E17  00D2               	movwf	___flmul@temp
  4539     0E18                     l2841:
  4540     0E18  0852               	movf	___flmul@temp,w
  4541     0E19  00C2               	movwf	??___flmul
  4542     0E1A  0853               	movf	___flmul@temp+1,w
  4543     0E1B  00C3               	movwf	??___flmul+1
  4544     0E1C  01C4               	clrf	??___flmul+2
  4545     0E1D  01C5               	clrf	??___flmul+3
  4546     0E1E  0842               	movf	??___flmul,w
  4547     0E1F  07C8               	addwf	___flmul@grs,f
  4548     0E20  0843               	movf	??___flmul+1,w
  4549     0E21  1103               	clrz
  4550     0E22  1803               	skipnc
  4551     0E23  3E01               	addlw	1
  4552     0E24  1903               	skipnz
  4553     0E25  2E27               	goto	u3541
  4554     0E26  07C9               	addwf	___flmul@grs+1,f
  4555     0E27                     u3541:
  4556     0E27  0844               	movf	??___flmul+2,w
  4557     0E28  1103               	clrz
  4558     0E29  1803               	skipnc
  4559     0E2A  3E01               	addlw	1
  4560     0E2B  1903               	skipnz
  4561     0E2C  2E2E               	goto	u3542
  4562     0E2D  07CA               	addwf	___flmul@grs+2,f
  4563     0E2E                     u3542:
  4564     0E2E  0845               	movf	??___flmul+3,w
  4565     0E2F  1103               	clrz
  4566     0E30  1803               	skipnc
  4567     0E31  3E01               	addlw	1
  4568     0E32  1903               	skipnz
  4569     0E33  2E35               	goto	u3543
  4570     0E34  07CB               	addwf	___flmul@grs+3,f
  4571     0E35                     u3543:
  4572     0E35                     l2843:
  4573     0E35  3008               	movlw	8
  4574     0E36  00C2               	movwf	??___flmul
  4575     0E37                     u3555:
  4576     0E37  1003               	clrc
  4577     0E38  0DC8               	rlf	___flmul@grs,f
  4578     0E39  0DC9               	rlf	___flmul@grs+1,f
  4579     0E3A  0DCA               	rlf	___flmul@grs+2,f
  4580     0E3B  0DCB               	rlf	___flmul@grs+3,f
  4581     0E3C  0BC2               	decfsz	??___flmul,f
  4582     0E3D  2E37               	goto	u3555
  4583     0E3E  083A               	movf	___flmul@b,w
  4584     0E3F  00A0               	movwf	__Umul8_16@multiplicand
  4585     0E40  083E               	movf	___flmul@a,w
  4586     0E41  160A  118A  22C2  120A  158A  	fcall	__Umul8_16
  4587     0E46  1283               	bcf	3,5	;RP0=0, select bank0
  4588     0E47  1303               	bcf	3,6	;RP1=0, select bank0
  4589     0E48  0821               	movf	?__Umul8_16+1,w
  4590     0E49  00D3               	movwf	___flmul@temp+1
  4591     0E4A  0820               	movf	?__Umul8_16,w
  4592     0E4B  00D2               	movwf	___flmul@temp
  4593     0E4C                     l2845:
  4594     0E4C  0852               	movf	___flmul@temp,w
  4595     0E4D  00C2               	movwf	??___flmul
  4596     0E4E  0853               	movf	___flmul@temp+1,w
  4597     0E4F  00C3               	movwf	??___flmul+1
  4598     0E50  01C4               	clrf	??___flmul+2
  4599     0E51  01C5               	clrf	??___flmul+3
  4600     0E52  0842               	movf	??___flmul,w
  4601     0E53  07C8               	addwf	___flmul@grs,f
  4602     0E54  0843               	movf	??___flmul+1,w
  4603     0E55  1103               	clrz
  4604     0E56  1803               	skipnc
  4605     0E57  3E01               	addlw	1
  4606     0E58  1903               	skipnz
  4607     0E59  2E5B               	goto	u3561
  4608     0E5A  07C9               	addwf	___flmul@grs+1,f
  4609     0E5B                     u3561:
  4610     0E5B  0844               	movf	??___flmul+2,w
  4611     0E5C  1103               	clrz
  4612     0E5D  1803               	skipnc
  4613     0E5E  3E01               	addlw	1
  4614     0E5F  1903               	skipnz
  4615     0E60  2E62               	goto	u3562
  4616     0E61  07CA               	addwf	___flmul@grs+2,f
  4617     0E62                     u3562:
  4618     0E62  0845               	movf	??___flmul+3,w
  4619     0E63  1103               	clrz
  4620     0E64  1803               	skipnc
  4621     0E65  3E01               	addlw	1
  4622     0E66  1903               	skipnz
  4623     0E67  2E69               	goto	u3563
  4624     0E68  07CB               	addwf	___flmul@grs+3,f
  4625     0E69                     u3563:
  4626     0E69                     l2847:
  4627     0E69  083B               	movf	___flmul@b+1,w
  4628     0E6A  00A0               	movwf	__Umul8_16@multiplicand
  4629     0E6B  0840               	movf	___flmul@a+2,w
  4630     0E6C  160A  118A  22C2  120A  158A  	fcall	__Umul8_16
  4631     0E71  1283               	bcf	3,5	;RP0=0, select bank0
  4632     0E72  1303               	bcf	3,6	;RP1=0, select bank0
  4633     0E73  0821               	movf	?__Umul8_16+1,w
  4634     0E74  00D3               	movwf	___flmul@temp+1
  4635     0E75  0820               	movf	?__Umul8_16,w
  4636     0E76  00D2               	movwf	___flmul@temp
  4637     0E77  0852               	movf	___flmul@temp,w
  4638     0E78  00C2               	movwf	??___flmul
  4639     0E79  0853               	movf	___flmul@temp+1,w
  4640     0E7A  00C3               	movwf	??___flmul+1
  4641     0E7B  01C4               	clrf	??___flmul+2
  4642     0E7C  01C5               	clrf	??___flmul+3
  4643     0E7D  0842               	movf	??___flmul,w
  4644     0E7E  07CE               	addwf	___flmul@prod,f
  4645     0E7F  0843               	movf	??___flmul+1,w
  4646     0E80  1103               	clrz
  4647     0E81  1803               	skipnc
  4648     0E82  3E01               	addlw	1
  4649     0E83  1903               	skipnz
  4650     0E84  2E86               	goto	u3571
  4651     0E85  07CF               	addwf	___flmul@prod+1,f
  4652     0E86                     u3571:
  4653     0E86  0844               	movf	??___flmul+2,w
  4654     0E87  1103               	clrz
  4655     0E88  1803               	skipnc
  4656     0E89  3E01               	addlw	1
  4657     0E8A  1903               	skipnz
  4658     0E8B  2E8D               	goto	u3572
  4659     0E8C  07D0               	addwf	___flmul@prod+2,f
  4660     0E8D                     u3572:
  4661     0E8D  0845               	movf	??___flmul+3,w
  4662     0E8E  1103               	clrz
  4663     0E8F  1803               	skipnc
  4664     0E90  3E01               	addlw	1
  4665     0E91  1903               	skipnz
  4666     0E92  2E94               	goto	u3573
  4667     0E93  07D1               	addwf	___flmul@prod+3,f
  4668     0E94                     u3573:
  4669     0E94                     l2849:
  4670     0E94  083C               	movf	___flmul@b+2,w
  4671     0E95  00A0               	movwf	__Umul8_16@multiplicand
  4672     0E96  083F               	movf	___flmul@a+1,w
  4673     0E97  160A  118A  22C2  120A  158A  	fcall	__Umul8_16
  4674     0E9C  1283               	bcf	3,5	;RP0=0, select bank0
  4675     0E9D  1303               	bcf	3,6	;RP1=0, select bank0
  4676     0E9E  0821               	movf	?__Umul8_16+1,w
  4677     0E9F  00D3               	movwf	___flmul@temp+1
  4678     0EA0  0820               	movf	?__Umul8_16,w
  4679     0EA1  00D2               	movwf	___flmul@temp
  4680     0EA2                     l2851:
  4681     0EA2  0852               	movf	___flmul@temp,w
  4682     0EA3  00C2               	movwf	??___flmul
  4683     0EA4  0853               	movf	___flmul@temp+1,w
  4684     0EA5  00C3               	movwf	??___flmul+1
  4685     0EA6  01C4               	clrf	??___flmul+2
  4686     0EA7  01C5               	clrf	??___flmul+3
  4687     0EA8  0842               	movf	??___flmul,w
  4688     0EA9  07CE               	addwf	___flmul@prod,f
  4689     0EAA  0843               	movf	??___flmul+1,w
  4690     0EAB  1103               	clrz
  4691     0EAC  1803               	skipnc
  4692     0EAD  3E01               	addlw	1
  4693     0EAE  1903               	skipnz
  4694     0EAF  2EB1               	goto	u3581
  4695     0EB0  07CF               	addwf	___flmul@prod+1,f
  4696     0EB1                     u3581:
  4697     0EB1  0844               	movf	??___flmul+2,w
  4698     0EB2  1103               	clrz
  4699     0EB3  1803               	skipnc
  4700     0EB4  3E01               	addlw	1
  4701     0EB5  1903               	skipnz
  4702     0EB6  2EB8               	goto	u3582
  4703     0EB7  07D0               	addwf	___flmul@prod+2,f
  4704     0EB8                     u3582:
  4705     0EB8  0845               	movf	??___flmul+3,w
  4706     0EB9  1103               	clrz
  4707     0EBA  1803               	skipnc
  4708     0EBB  3E01               	addlw	1
  4709     0EBC  1903               	skipnz
  4710     0EBD  2EBF               	goto	u3583
  4711     0EBE  07D1               	addwf	___flmul@prod+3,f
  4712     0EBF                     u3583:
  4713     0EBF  083C               	movf	___flmul@b+2,w
  4714     0EC0  00A0               	movwf	__Umul8_16@multiplicand
  4715     0EC1  0840               	movf	___flmul@a+2,w
  4716     0EC2  160A  118A  22C2  120A  158A  	fcall	__Umul8_16
  4717     0EC7  1283               	bcf	3,5	;RP0=0, select bank0
  4718     0EC8  1303               	bcf	3,6	;RP1=0, select bank0
  4719     0EC9  0821               	movf	?__Umul8_16+1,w
  4720     0ECA  00D3               	movwf	___flmul@temp+1
  4721     0ECB  0820               	movf	?__Umul8_16,w
  4722     0ECC  00D2               	movwf	___flmul@temp
  4723     0ECD                     l2853:
  4724     0ECD  0852               	movf	___flmul@temp,w
  4725     0ECE  00C2               	movwf	??___flmul
  4726     0ECF  0853               	movf	___flmul@temp+1,w
  4727     0ED0  00C3               	movwf	??___flmul+1
  4728     0ED1  01C4               	clrf	??___flmul+2
  4729     0ED2  01C5               	clrf	??___flmul+3
  4730     0ED3  3008               	movlw	8
  4731     0ED4                     u3595:
  4732     0ED4  1003               	clrc
  4733     0ED5  0DC2               	rlf	??___flmul,f
  4734     0ED6  0DC3               	rlf	??___flmul+1,f
  4735     0ED7  0DC4               	rlf	??___flmul+2,f
  4736     0ED8  0DC5               	rlf	??___flmul+3,f
  4737     0ED9                     u3590:
  4738     0ED9  3EFF               	addlw	-1
  4739     0EDA  1D03               	skipz
  4740     0EDB  2ED4               	goto	u3595
  4741     0EDC  0842               	movf	??___flmul,w
  4742     0EDD  07CE               	addwf	___flmul@prod,f
  4743     0EDE  0843               	movf	??___flmul+1,w
  4744     0EDF  1103               	clrz
  4745     0EE0  1803               	skipnc
  4746     0EE1  3E01               	addlw	1
  4747     0EE2  1903               	skipnz
  4748     0EE3  2EE5               	goto	u3601
  4749     0EE4  07CF               	addwf	___flmul@prod+1,f
  4750     0EE5                     u3601:
  4751     0EE5  0844               	movf	??___flmul+2,w
  4752     0EE6  1103               	clrz
  4753     0EE7  1803               	skipnc
  4754     0EE8  3E01               	addlw	1
  4755     0EE9  1903               	skipnz
  4756     0EEA  2EEC               	goto	u3602
  4757     0EEB  07D0               	addwf	___flmul@prod+2,f
  4758     0EEC                     u3602:
  4759     0EEC  0845               	movf	??___flmul+3,w
  4760     0EED  1103               	clrz
  4761     0EEE  1803               	skipnc
  4762     0EEF  3E01               	addlw	1
  4763     0EF0  1903               	skipnz
  4764     0EF1  2EF3               	goto	u3603
  4765     0EF2  07D1               	addwf	___flmul@prod+3,f
  4766     0EF3                     u3603:
  4767     0EF3                     l2855:
  4768     0EF3  0848               	movf	___flmul@grs,w
  4769     0EF4  00C2               	movwf	??___flmul
  4770     0EF5  0849               	movf	___flmul@grs+1,w
  4771     0EF6  00C3               	movwf	??___flmul+1
  4772     0EF7  084A               	movf	___flmul@grs+2,w
  4773     0EF8  00C4               	movwf	??___flmul+2
  4774     0EF9  084B               	movf	___flmul@grs+3,w
  4775     0EFA  00C5               	movwf	??___flmul+3
  4776     0EFB  3018               	movlw	24
  4777     0EFC                     u3615:
  4778     0EFC  1003               	clrc
  4779     0EFD  0CC5               	rrf	??___flmul+3,f
  4780     0EFE  0CC4               	rrf	??___flmul+2,f
  4781     0EFF  0CC3               	rrf	??___flmul+1,f
  4782     0F00  0CC2               	rrf	??___flmul,f
  4783     0F01                     u3610:
  4784     0F01  3EFF               	addlw	-1
  4785     0F02  1D03               	skipz
  4786     0F03  2EFC               	goto	u3615
  4787     0F04  0842               	movf	??___flmul,w
  4788     0F05  07CE               	addwf	___flmul@prod,f
  4789     0F06  0843               	movf	??___flmul+1,w
  4790     0F07  1103               	clrz
  4791     0F08  1803               	skipnc
  4792     0F09  3E01               	addlw	1
  4793     0F0A  1903               	skipnz
  4794     0F0B  2F0D               	goto	u3621
  4795     0F0C  07CF               	addwf	___flmul@prod+1,f
  4796     0F0D                     u3621:
  4797     0F0D  0844               	movf	??___flmul+2,w
  4798     0F0E  1103               	clrz
  4799     0F0F  1803               	skipnc
  4800     0F10  3E01               	addlw	1
  4801     0F11  1903               	skipnz
  4802     0F12  2F14               	goto	u3622
  4803     0F13  07D0               	addwf	___flmul@prod+2,f
  4804     0F14                     u3622:
  4805     0F14  0845               	movf	??___flmul+3,w
  4806     0F15  1103               	clrz
  4807     0F16  1803               	skipnc
  4808     0F17  3E01               	addlw	1
  4809     0F18  1903               	skipnz
  4810     0F19  2F1B               	goto	u3623
  4811     0F1A  07D1               	addwf	___flmul@prod+3,f
  4812     0F1B                     u3623:
  4813     0F1B                     l2857:
  4814     0F1B  3008               	movlw	8
  4815     0F1C  00C2               	movwf	??___flmul
  4816     0F1D                     u3635:
  4817     0F1D  1003               	clrc
  4818     0F1E  0DC8               	rlf	___flmul@grs,f
  4819     0F1F  0DC9               	rlf	___flmul@grs+1,f
  4820     0F20  0DCA               	rlf	___flmul@grs+2,f
  4821     0F21  0DCB               	rlf	___flmul@grs+3,f
  4822     0F22  0BC2               	decfsz	??___flmul,f
  4823     0F23  2F1D               	goto	u3635
  4824     0F24                     l2859:
  4825     0F24  084D               	movf	___flmul@bexp,w
  4826     0F25  074C               	addwf	___flmul@aexp,w
  4827     0F26  00C2               	movwf	??___flmul
  4828     0F27  01C3               	clrf	??___flmul+1
  4829     0F28  0DC3               	rlf	??___flmul+1,f
  4830     0F29  0842               	movf	??___flmul,w
  4831     0F2A  3E82               	addlw	130
  4832     0F2B  00D2               	movwf	___flmul@temp
  4833     0F2C  0843               	movf	??___flmul+1,w
  4834     0F2D  1803               	skipnc
  4835     0F2E  3E01               	addlw	1
  4836     0F2F  3EFF               	addlw	255
  4837     0F30  00D3               	movwf	___flmul@temp+1
  4838     0F31  2F4F               	goto	l2871
  4839     0F32                     l2861:
  4840     0F32  3001               	movlw	1
  4841     0F33  00C2               	movwf	??___flmul
  4842     0F34                     u3645:
  4843     0F34  1003               	clrc
  4844     0F35  0DCE               	rlf	___flmul@prod,f
  4845     0F36  0DCF               	rlf	___flmul@prod+1,f
  4846     0F37  0DD0               	rlf	___flmul@prod+2,f
  4847     0F38  0DD1               	rlf	___flmul@prod+3,f
  4848     0F39  0BC2               	decfsz	??___flmul,f
  4849     0F3A  2F34               	goto	u3645
  4850     0F3B                     l2863:
  4851     0F3B  1FCB               	btfss	___flmul@grs+3,7
  4852     0F3C  2F3E               	goto	u3651
  4853     0F3D  2F3F               	goto	u3650
  4854     0F3E                     u3651:
  4855     0F3E  2F40               	goto	l2867
  4856     0F3F                     u3650:
  4857     0F3F                     l2865:
  4858     0F3F  144E               	bsf	___flmul@prod,0
  4859     0F40                     l2867:
  4860     0F40  3001               	movlw	1
  4861     0F41  00C2               	movwf	??___flmul
  4862     0F42                     u3665:
  4863     0F42  1003               	clrc
  4864     0F43  0DC8               	rlf	___flmul@grs,f
  4865     0F44  0DC9               	rlf	___flmul@grs+1,f
  4866     0F45  0DCA               	rlf	___flmul@grs+2,f
  4867     0F46  0DCB               	rlf	___flmul@grs+3,f
  4868     0F47  0BC2               	decfsz	??___flmul,f
  4869     0F48  2F42               	goto	u3665
  4870     0F49                     l2869:
  4871     0F49  30FF               	movlw	255
  4872     0F4A  07D2               	addwf	___flmul@temp,f
  4873     0F4B  1803               	skipnc
  4874     0F4C  0AD3               	incf	___flmul@temp+1,f
  4875     0F4D  30FF               	movlw	255
  4876     0F4E  07D3               	addwf	___flmul@temp+1,f
  4877     0F4F                     l2871:
  4878     0F4F  1FD0               	btfss	___flmul@prod+2,7
  4879     0F50  2F52               	goto	u3671
  4880     0F51  2F53               	goto	u3670
  4881     0F52                     u3671:
  4882     0F52  2F32               	goto	l2861
  4883     0F53                     u3670:
  4884     0F53                     l2873:
  4885     0F53  01CC               	clrf	___flmul@aexp
  4886     0F54                     l2875:
  4887     0F54  1FCB               	btfss	___flmul@grs+3,7
  4888     0F55  2F57               	goto	u3681
  4889     0F56  2F58               	goto	u3680
  4890     0F57                     u3681:
  4891     0F57  2F74               	goto	l2883
  4892     0F58                     u3680:
  4893     0F58                     l2877:
  4894     0F58  30FF               	movlw	255
  4895     0F59  0548               	andwf	___flmul@grs,w
  4896     0F5A  00C2               	movwf	??___flmul
  4897     0F5B  30FF               	movlw	255
  4898     0F5C  0549               	andwf	___flmul@grs+1,w
  4899     0F5D  00C3               	movwf	??___flmul+1
  4900     0F5E  30FF               	movlw	255
  4901     0F5F  054A               	andwf	___flmul@grs+2,w
  4902     0F60  00C4               	movwf	??___flmul+2
  4903     0F61  307F               	movlw	127
  4904     0F62  054B               	andwf	___flmul@grs+3,w
  4905     0F63  00C5               	movwf	??___flmul+3
  4906     0F64  0845               	movf	??___flmul+3,w
  4907     0F65  0444               	iorwf	??___flmul+2,w
  4908     0F66  0443               	iorwf	??___flmul+1,w
  4909     0F67  0442               	iorwf	??___flmul,w
  4910     0F68  1903               	skipnz
  4911     0F69  2F6B               	goto	u3691
  4912     0F6A  2F6C               	goto	u3690
  4913     0F6B                     u3691:
  4914     0F6B  2F6F               	goto	l807
  4915     0F6C                     u3690:
  4916     0F6C                     l2879:
  4917     0F6C  01CC               	clrf	___flmul@aexp
  4918     0F6D  0ACC               	incf	___flmul@aexp,f
  4919     0F6E  2F74               	goto	l2883
  4920     0F6F                     l807:
  4921     0F6F  1C4E               	btfss	___flmul@prod,0
  4922     0F70  2F72               	goto	u3701
  4923     0F71  2F73               	goto	u3700
  4924     0F72                     u3701:
  4925     0F72  2F74               	goto	l2883
  4926     0F73                     u3700:
  4927     0F73  2F6C               	goto	l2879
  4928     0F74                     l2883:
  4929     0F74  084C               	movf	___flmul@aexp,w
  4930     0F75  1903               	btfsc	3,2
  4931     0F76  2F78               	goto	u3711
  4932     0F77  2F79               	goto	u3710
  4933     0F78                     u3711:
  4934     0F78  2FAA               	goto	l2893
  4935     0F79                     u3710:
  4936     0F79                     l2885:
  4937     0F79  3001               	movlw	1
  4938     0F7A  07CE               	addwf	___flmul@prod,f
  4939     0F7B  3000               	movlw	0
  4940     0F7C  1803               	skipnc
  4941     0F7D  3001               	movlw	1
  4942     0F7E  07CF               	addwf	___flmul@prod+1,f
  4943     0F7F  3000               	movlw	0
  4944     0F80  1803               	skipnc
  4945     0F81  3001               	movlw	1
  4946     0F82  07D0               	addwf	___flmul@prod+2,f
  4947     0F83  3000               	movlw	0
  4948     0F84  1803               	skipnc
  4949     0F85  3001               	movlw	1
  4950     0F86  07D1               	addwf	___flmul@prod+3,f
  4951     0F87                     l2887:
  4952     0F87  1C51               	btfss	___flmul@prod+3,0
  4953     0F88  2F8A               	goto	u3721
  4954     0F89  2F8B               	goto	u3720
  4955     0F8A                     u3721:
  4956     0F8A  2FAA               	goto	l2893
  4957     0F8B                     u3720:
  4958     0F8B                     l2889:
  4959     0F8B  084E               	movf	___flmul@prod,w
  4960     0F8C  00C2               	movwf	??___flmul
  4961     0F8D  084F               	movf	___flmul@prod+1,w
  4962     0F8E  00C3               	movwf	??___flmul+1
  4963     0F8F  0850               	movf	___flmul@prod+2,w
  4964     0F90  00C4               	movwf	??___flmul+2
  4965     0F91  0851               	movf	___flmul@prod+3,w
  4966     0F92  00C5               	movwf	??___flmul+3
  4967     0F93  3001               	movlw	1
  4968     0F94  00C6               	movwf	??___flmul+4
  4969     0F95                     u3735:
  4970     0F95  0D45               	rlf	??___flmul+3,w
  4971     0F96  0CC5               	rrf	??___flmul+3,f
  4972     0F97  0CC4               	rrf	??___flmul+2,f
  4973     0F98  0CC3               	rrf	??___flmul+1,f
  4974     0F99  0CC2               	rrf	??___flmul,f
  4975     0F9A                     u3730:
  4976     0F9A  0BC6               	decfsz	??___flmul+4,f
  4977     0F9B  2F95               	goto	u3735
  4978     0F9C  0845               	movf	??___flmul+3,w
  4979     0F9D  00D1               	movwf	___flmul@prod+3
  4980     0F9E  0844               	movf	??___flmul+2,w
  4981     0F9F  00D0               	movwf	___flmul@prod+2
  4982     0FA0  0843               	movf	??___flmul+1,w
  4983     0FA1  00CF               	movwf	___flmul@prod+1
  4984     0FA2  0842               	movf	??___flmul,w
  4985     0FA3  00CE               	movwf	___flmul@prod
  4986     0FA4                     l2891:
  4987     0FA4  3001               	movlw	1
  4988     0FA5  07D2               	addwf	___flmul@temp,f
  4989     0FA6  1803               	skipnc
  4990     0FA7  0AD3               	incf	___flmul@temp+1,f
  4991     0FA8  3000               	movlw	0
  4992     0FA9  07D3               	addwf	___flmul@temp+1,f
  4993     0FAA                     l2893:
  4994     0FAA  0853               	movf	___flmul@temp+1,w
  4995     0FAB  3A80               	xorlw	128
  4996     0FAC  00FF               	movwf	btemp+1
  4997     0FAD  3080               	movlw	128
  4998     0FAE  027F               	subwf	btemp+1,w
  4999     0FAF  1D03               	skipz
  5000     0FB0  2FB3               	goto	u3745
  5001     0FB1  30FF               	movlw	255
  5002     0FB2  0252               	subwf	___flmul@temp,w
  5003     0FB3                     u3745:
  5004     0FB3  1C03               	skipc
  5005     0FB4  2FB6               	goto	u3741
  5006     0FB5  2FB7               	goto	u3740
  5007     0FB6                     u3741:
  5008     0FB6  2FC2               	goto	l2897
  5009     0FB7                     u3740:
  5010     0FB7                     l2895:
  5011     0FB7  307F               	movlw	127
  5012     0FB8  1283               	bcf	3,5	;RP0=0, select bank0
  5013     0FB9  1303               	bcf	3,6	;RP1=0, select bank0
  5014     0FBA  00D1               	movwf	___flmul@prod+3
  5015     0FBB  3080               	movlw	128
  5016     0FBC  00D0               	movwf	___flmul@prod+2
  5017     0FBD  3000               	movlw	0
  5018     0FBE  00CF               	movwf	___flmul@prod+1
  5019     0FBF  3000               	movlw	0
  5020     0FC0  00CE               	movwf	___flmul@prod
  5021     0FC1  2FF3               	goto	l2911
  5022     0FC2                     l2897:
  5023     0FC2  1283               	bcf	3,5	;RP0=0, select bank0
  5024     0FC3  1303               	bcf	3,6	;RP1=0, select bank0
  5025     0FC4  0853               	movf	___flmul@temp+1,w
  5026     0FC5  3A80               	xorlw	128
  5027     0FC6  00FF               	movwf	btemp+1
  5028     0FC7  3080               	movlw	128
  5029     0FC8  027F               	subwf	btemp+1,w
  5030     0FC9  1D03               	skipz
  5031     0FCA  2FCD               	goto	u3755
  5032     0FCB  3001               	movlw	1
  5033     0FCC  0252               	subwf	___flmul@temp,w
  5034     0FCD                     u3755:
  5035     0FCD  1803               	skipnc
  5036     0FCE  2FD0               	goto	u3751
  5037     0FCF  2FD1               	goto	u3750
  5038     0FD0                     u3751:
  5039     0FD0  2FDD               	goto	l2903
  5040     0FD1                     u3750:
  5041     0FD1                     l2899:
  5042     0FD1  3000               	movlw	0
  5043     0FD2  1283               	bcf	3,5	;RP0=0, select bank0
  5044     0FD3  1303               	bcf	3,6	;RP1=0, select bank0
  5045     0FD4  00D1               	movwf	___flmul@prod+3
  5046     0FD5  3000               	movlw	0
  5047     0FD6  00D0               	movwf	___flmul@prod+2
  5048     0FD7  3000               	movlw	0
  5049     0FD8  00CF               	movwf	___flmul@prod+1
  5050     0FD9  3000               	movlw	0
  5051     0FDA  00CE               	movwf	___flmul@prod
  5052     0FDB                     l2901:
  5053     0FDB  01C7               	clrf	___flmul@sign
  5054     0FDC  2FF3               	goto	l2911
  5055     0FDD                     l2903:
  5056     0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  5057     0FDE  1303               	bcf	3,6	;RP1=0, select bank0
  5058     0FDF  0852               	movf	___flmul@temp,w
  5059     0FE0  00CD               	movwf	___flmul@bexp
  5060     0FE1  30FF               	movlw	255
  5061     0FE2  05CE               	andwf	___flmul@prod,f
  5062     0FE3  30FF               	movlw	255
  5063     0FE4  05CF               	andwf	___flmul@prod+1,f
  5064     0FE5  307F               	movlw	127
  5065     0FE6  05D0               	andwf	___flmul@prod+2,f
  5066     0FE7  3000               	movlw	0
  5067     0FE8  05D1               	andwf	___flmul@prod+3,f
  5068     0FE9                     l2905:
  5069     0FE9  1C4D               	btfss	___flmul@bexp,0
  5070     0FEA  2FEC               	goto	u3761
  5071     0FEB  2FED               	goto	u3760
  5072     0FEC                     u3761:
  5073     0FEC  2FEE               	goto	l2909
  5074     0FED                     u3760:
  5075     0FED                     l2907:
  5076     0FED  17D0               	bsf	___flmul@prod+2,7
  5077     0FEE                     l2909:
  5078     0FEE  084D               	movf	___flmul@bexp,w
  5079     0FEF  00C2               	movwf	??___flmul
  5080     0FF0  1003               	clrc
  5081     0FF1  0C42               	rrf	??___flmul,w
  5082     0FF2  00D1               	movwf	___flmul@prod+3
  5083     0FF3                     l2911:
  5084     0FF3  0847               	movf	___flmul@sign,w
  5085     0FF4  00FF               	movwf	btemp+1
  5086     0FF5  087F               	movf	btemp+1,w
  5087     0FF6  04D1               	iorwf	___flmul@prod+3,f
  5088     0FF7                     l2913:
  5089     0FF7  0851               	movf	___flmul@prod+3,w
  5090     0FF8  00BD               	movwf	?___flmul+3
  5091     0FF9  0850               	movf	___flmul@prod+2,w
  5092     0FFA  00BC               	movwf	?___flmul+2
  5093     0FFB  084F               	movf	___flmul@prod+1,w
  5094     0FFC  00BB               	movwf	?___flmul+1
  5095     0FFD  084E               	movf	___flmul@prod,w
  5096     0FFE  00BA               	movwf	?___flmul
  5097     0FFF                     l801:
  5098     0FFF  0008               	return
  5099     1000                     __end_of___flmul:
  5100                           
  5101                           	psect	text15
  5102     12C2                     __ptext15:	
  5103 ;; *************** function __Umul8_16 *****************
  5104 ;; Defined at:
  5105 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul8_16.c"
  5106 ;; Parameters:    Size  Location     Type
  5107 ;;  multiplier      1    wreg     unsigned char 
  5108 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  5109 ;; Auto vars:     Size  Location     Type
  5110 ;;  multiplier      1    8[BANK0 ] unsigned char 
  5111 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  5112 ;;  product         2    4[BANK0 ] unsigned int 
  5113 ;; Return value:  Size  Location     Type
  5114 ;;                  2    0[BANK0 ] unsigned int 
  5115 ;; Registers used:
  5116 ;;		wreg, status,2, status,0
  5117 ;; Tracked objects:
  5118 ;;		On entry : 0/0
  5119 ;;		On exit  : 0/0
  5120 ;;		Unchanged: 0/0
  5121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5122 ;;      Params:         0       2       0       0       0
  5123 ;;      Locals:         0       5       0       0       0
  5124 ;;      Temps:          0       2       0       0       0
  5125 ;;      Totals:         0       9       0       0       0
  5126 ;;Total ram usage:        9 bytes
  5127 ;; Hardware stack levels used: 1
  5128 ;; Hardware stack levels required when called: 2
  5129 ;; This function calls:
  5130 ;;		Nothing
  5131 ;; This function is called by:
  5132 ;;		___flmul
  5133 ;; This function uses a non-reentrant model
  5134 ;;
  5135                           
  5136     12C2                     __Umul8_16:	
  5137                           ;psect for function __Umul8_16
  5138                           
  5139                           
  5140                           ;incstack = 0
  5141                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5142                           ;__Umul8_16@multiplier stored from wreg
  5143     12C2  1283               	bcf	3,5	;RP0=0, select bank0
  5144     12C3  1303               	bcf	3,6	;RP1=0, select bank0
  5145     12C4  00A8               	movwf	__Umul8_16@multiplier
  5146     12C5                     l2301:
  5147     12C5  01A4               	clrf	__Umul8_16@product
  5148     12C6  01A5               	clrf	__Umul8_16@product+1
  5149     12C7                     l2303:
  5150     12C7  0820               	movf	__Umul8_16@multiplicand,w
  5151     12C8  00A2               	movwf	??__Umul8_16
  5152     12C9  01A3               	clrf	??__Umul8_16+1
  5153     12CA  0822               	movf	??__Umul8_16,w
  5154     12CB  00A6               	movwf	__Umul8_16@word_mpld
  5155     12CC  0823               	movf	??__Umul8_16+1,w
  5156     12CD  00A7               	movwf	__Umul8_16@word_mpld+1
  5157     12CE                     l2305:
  5158     12CE  1C28               	btfss	__Umul8_16@multiplier,0
  5159     12CF  2AD1               	goto	u2531
  5160     12D0  2AD2               	goto	u2530
  5161     12D1                     u2531:
  5162     12D1  2AD8               	goto	l820
  5163     12D2                     u2530:
  5164     12D2                     l2307:
  5165     12D2  0826               	movf	__Umul8_16@word_mpld,w
  5166     12D3  07A4               	addwf	__Umul8_16@product,f
  5167     12D4  1803               	skipnc
  5168     12D5  0AA5               	incf	__Umul8_16@product+1,f
  5169     12D6  0827               	movf	__Umul8_16@word_mpld+1,w
  5170     12D7  07A5               	addwf	__Umul8_16@product+1,f
  5171     12D8                     l820:
  5172     12D8  3001               	movlw	1
  5173     12D9                     u2545:
  5174     12D9  1003               	clrc
  5175     12DA  0DA6               	rlf	__Umul8_16@word_mpld,f
  5176     12DB  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  5177     12DC  3EFF               	addlw	-1
  5178     12DD  1D03               	skipz
  5179     12DE  2AD9               	goto	u2545
  5180     12DF  1003               	clrc
  5181     12E0  0CA8               	rrf	__Umul8_16@multiplier,f
  5182     12E1                     l2309:
  5183     12E1  0828               	movf	__Umul8_16@multiplier,w
  5184     12E2  1D03               	btfss	3,2
  5185     12E3  2AE5               	goto	u2551
  5186     12E4  2AE6               	goto	u2550
  5187     12E5                     u2551:
  5188     12E5  2ACE               	goto	l2305
  5189     12E6                     u2550:
  5190     12E6                     l2311:
  5191     12E6  0825               	movf	__Umul8_16@product+1,w
  5192     12E7  00A1               	movwf	?__Umul8_16+1
  5193     12E8  0824               	movf	__Umul8_16@product,w
  5194     12E9  00A0               	movwf	?__Umul8_16
  5195     12EA                     l822:
  5196     12EA  0008               	return
  5197     12EB                     __end_of__Umul8_16:
  5198                           
  5199                           	psect	text16
  5200     08F5                     __ptext16:	
  5201 ;; *************** function ___fldiv *****************
  5202 ;; Defined at:
  5203 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcdiv.c"
  5204 ;; Parameters:    Size  Location     Type
  5205 ;;  a               4    0[BANK0 ] unsigned int 
  5206 ;;  b               4    4[BANK0 ] unsigned int 
  5207 ;; Auto vars:     Size  Location     Type
  5208 ;;  grs             4   20[BANK0 ] unsigned long 
  5209 ;;  rem             4   13[BANK0 ] unsigned long 
  5210 ;;  new_exp         2   18[BANK0 ] int 
  5211 ;;  aexp            1   25[BANK0 ] unsigned char 
  5212 ;;  bexp            1   24[BANK0 ] unsigned char 
  5213 ;;  sign            1   17[BANK0 ] unsigned char 
  5214 ;; Return value:  Size  Location     Type
  5215 ;;                  4    0[BANK0 ] unsigned char 
  5216 ;; Registers used:
  5217 ;;		wreg, status,2, status,0, btemp+1
  5218 ;; Tracked objects:
  5219 ;;		On entry : 0/0
  5220 ;;		On exit  : 0/0
  5221 ;;		Unchanged: 0/0
  5222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5223 ;;      Params:         0       8       0       0       0
  5224 ;;      Locals:         0      13       0       0       0
  5225 ;;      Temps:          0       5       0       0       0
  5226 ;;      Totals:         0      26       0       0       0
  5227 ;;Total ram usage:       26 bytes
  5228 ;; Hardware stack levels used: 1
  5229 ;; Hardware stack levels required when called: 2
  5230 ;; This function calls:
  5231 ;;		Nothing
  5232 ;; This function is called by:
  5233 ;;		_main
  5234 ;; This function uses a non-reentrant model
  5235 ;;
  5236                           
  5237     08F5                     ___fldiv:	
  5238                           ;psect for function ___fldiv
  5239                           
  5240     08F5                     l2629:	
  5241                           ;incstack = 0
  5242                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  5243                           
  5244     08F5  1283               	bcf	3,5	;RP0=0, select bank0
  5245     08F6  1303               	bcf	3,6	;RP1=0, select bank0
  5246     08F7  0827               	movf	___fldiv@b+3,w
  5247     08F8  3980               	andlw	128
  5248     08F9  00B1               	movwf	___fldiv@sign
  5249     08FA                     l2631:
  5250     08FA  0827               	movf	___fldiv@b+3,w
  5251     08FB  00A8               	movwf	??___fldiv
  5252     08FC  0728               	addwf	??___fldiv,w
  5253     08FD  00B8               	movwf	___fldiv@bexp
  5254     08FE                     l2633:
  5255     08FE  1FA6               	btfss	___fldiv@b+2,7
  5256     08FF  2901               	goto	u3111
  5257     0900  2902               	goto	u3110
  5258     0901                     u3111:
  5259     0901  2903               	goto	l2637
  5260     0902                     u3110:
  5261     0902                     l2635:
  5262     0902  1438               	bsf	___fldiv@bexp,0
  5263     0903                     l2637:
  5264     0903  0838               	movf	___fldiv@bexp,w
  5265     0904  1903               	btfsc	3,2
  5266     0905  2907               	goto	u3121
  5267     0906  2908               	goto	u3120
  5268     0907                     u3121:
  5269     0907  2918               	goto	l2647
  5270     0908                     u3120:
  5271     0908                     l2639:
  5272     0908  0A38               	incf	___fldiv@bexp,w
  5273     0909  1D03               	btfss	3,2
  5274     090A  290C               	goto	u3131
  5275     090B  290D               	goto	u3130
  5276     090C                     u3131:
  5277     090C  2915               	goto	l2643
  5278     090D                     u3130:
  5279     090D                     l2641:
  5280     090D  3000               	movlw	0
  5281     090E  00A7               	movwf	___fldiv@b+3
  5282     090F  3000               	movlw	0
  5283     0910  00A6               	movwf	___fldiv@b+2
  5284     0911  3000               	movlw	0
  5285     0912  00A5               	movwf	___fldiv@b+1
  5286     0913  3000               	movlw	0
  5287     0914  00A4               	movwf	___fldiv@b
  5288     0915                     l2643:
  5289     0915  17A6               	bsf	___fldiv@b+2,7
  5290     0916                     l2645:
  5291     0916  01A7               	clrf	___fldiv@b+3
  5292     0917  2920               	goto	l2649
  5293     0918                     l2647:
  5294     0918  3000               	movlw	0
  5295     0919  00A7               	movwf	___fldiv@b+3
  5296     091A  3000               	movlw	0
  5297     091B  00A6               	movwf	___fldiv@b+2
  5298     091C  3000               	movlw	0
  5299     091D  00A5               	movwf	___fldiv@b+1
  5300     091E  3000               	movlw	0
  5301     091F  00A4               	movwf	___fldiv@b
  5302     0920                     l2649:
  5303     0920  0823               	movf	___fldiv@a+3,w
  5304     0921  3980               	andlw	128
  5305     0922  00FF               	movwf	btemp+1
  5306     0923  087F               	movf	btemp+1,w
  5307     0924  06B1               	xorwf	___fldiv@sign,f
  5308     0925                     l2651:
  5309     0925  0823               	movf	___fldiv@a+3,w
  5310     0926  00A8               	movwf	??___fldiv
  5311     0927  0728               	addwf	??___fldiv,w
  5312     0928  00B9               	movwf	___fldiv@aexp
  5313     0929                     l2653:
  5314     0929  1FA2               	btfss	___fldiv@a+2,7
  5315     092A  292C               	goto	u3141
  5316     092B  292D               	goto	u3140
  5317     092C                     u3141:
  5318     092C  292E               	goto	l2657
  5319     092D                     u3140:
  5320     092D                     l2655:
  5321     092D  1439               	bsf	___fldiv@aexp,0
  5322     092E                     l2657:
  5323     092E  0839               	movf	___fldiv@aexp,w
  5324     092F  1903               	btfsc	3,2
  5325     0930  2932               	goto	u3151
  5326     0931  2933               	goto	u3150
  5327     0932                     u3151:
  5328     0932  2943               	goto	l2667
  5329     0933                     u3150:
  5330     0933                     l2659:
  5331     0933  0A39               	incf	___fldiv@aexp,w
  5332     0934  1D03               	btfss	3,2
  5333     0935  2937               	goto	u3161
  5334     0936  2938               	goto	u3160
  5335     0937                     u3161:
  5336     0937  2940               	goto	l2663
  5337     0938                     u3160:
  5338     0938                     l2661:
  5339     0938  3000               	movlw	0
  5340     0939  00A3               	movwf	___fldiv@a+3
  5341     093A  3000               	movlw	0
  5342     093B  00A2               	movwf	___fldiv@a+2
  5343     093C  3000               	movlw	0
  5344     093D  00A1               	movwf	___fldiv@a+1
  5345     093E  3000               	movlw	0
  5346     093F  00A0               	movwf	___fldiv@a
  5347     0940                     l2663:
  5348     0940  17A2               	bsf	___fldiv@a+2,7
  5349     0941                     l2665:
  5350     0941  01A3               	clrf	___fldiv@a+3
  5351     0942  294B               	goto	l761
  5352     0943                     l2667:
  5353     0943  3000               	movlw	0
  5354     0944  00A3               	movwf	___fldiv@a+3
  5355     0945  3000               	movlw	0
  5356     0946  00A2               	movwf	___fldiv@a+2
  5357     0947  3000               	movlw	0
  5358     0948  00A1               	movwf	___fldiv@a+1
  5359     0949  3000               	movlw	0
  5360     094A  00A0               	movwf	___fldiv@a
  5361     094B                     l761:
  5362     094B  0823               	movf	___fldiv@a+3,w
  5363     094C  0422               	iorwf	___fldiv@a+2,w
  5364     094D  0421               	iorwf	___fldiv@a+1,w
  5365     094E  0420               	iorwf	___fldiv@a,w
  5366     094F  1D03               	skipz
  5367     0950  2952               	goto	u3171
  5368     0951  2953               	goto	u3170
  5369     0952                     u3171:
  5370     0952  296C               	goto	l2677
  5371     0953                     u3170:
  5372     0953                     l2669:
  5373     0953  3000               	movlw	0
  5374     0954  00A7               	movwf	___fldiv@b+3
  5375     0955  3000               	movlw	0
  5376     0956  00A6               	movwf	___fldiv@b+2
  5377     0957  3000               	movlw	0
  5378     0958  00A5               	movwf	___fldiv@b+1
  5379     0959  3000               	movlw	0
  5380     095A  00A4               	movwf	___fldiv@b
  5381     095B  3080               	movlw	128
  5382     095C  04A6               	iorwf	___fldiv@b+2,f
  5383     095D  307F               	movlw	127
  5384     095E  04A7               	iorwf	___fldiv@b+3,f
  5385     095F                     l2671:
  5386     095F  0831               	movf	___fldiv@sign,w
  5387     0960  00FF               	movwf	btemp+1
  5388     0961  087F               	movf	btemp+1,w
  5389     0962  04A7               	iorwf	___fldiv@b+3,f
  5390     0963                     l2673:
  5391     0963  0827               	movf	___fldiv@b+3,w
  5392     0964  00A3               	movwf	?___fldiv+3
  5393     0965  0826               	movf	___fldiv@b+2,w
  5394     0966  00A2               	movwf	?___fldiv+2
  5395     0967  0825               	movf	___fldiv@b+1,w
  5396     0968  00A1               	movwf	?___fldiv+1
  5397     0969  0824               	movf	___fldiv@b,w
  5398     096A  00A0               	movwf	?___fldiv
  5399     096B  2AC3               	goto	l763
  5400     096C                     l2677:
  5401     096C  0838               	movf	___fldiv@bexp,w
  5402     096D  1D03               	btfss	3,2
  5403     096E  2970               	goto	u3181
  5404     096F  2971               	goto	u3180
  5405     0970                     u3181:
  5406     0970  297A               	goto	l2683
  5407     0971                     u3180:
  5408     0971                     l2679:
  5409     0971  3000               	movlw	0
  5410     0972  00A3               	movwf	?___fldiv+3
  5411     0973  3000               	movlw	0
  5412     0974  00A2               	movwf	?___fldiv+2
  5413     0975  3000               	movlw	0
  5414     0976  00A1               	movwf	?___fldiv+1
  5415     0977  3000               	movlw	0
  5416     0978  00A0               	movwf	?___fldiv
  5417     0979  2AC3               	goto	l763
  5418     097A                     l2683:
  5419     097A  0838               	movf	___fldiv@bexp,w
  5420     097B  00A8               	movwf	??___fldiv
  5421     097C  01A9               	clrf	??___fldiv+1
  5422     097D  0829               	movf	??___fldiv+1,w
  5423     097E  00AB               	movwf	??___fldiv+3
  5424     097F  0839               	movf	___fldiv@aexp,w
  5425     0980  0228               	subwf	??___fldiv,w
  5426     0981  00AA               	movwf	??___fldiv+2
  5427     0982  1C03               	skipc
  5428     0983  03AB               	decf	??___fldiv+3,f
  5429     0984  082A               	movf	??___fldiv+2,w
  5430     0985  3E7F               	addlw	127
  5431     0986  00B2               	movwf	___fldiv@new_exp
  5432     0987  082B               	movf	??___fldiv+3,w
  5433     0988  1803               	skipnc
  5434     0989  3E01               	addlw	1
  5435     098A  3E00               	addlw	0
  5436     098B  00B3               	movwf	___fldiv@new_exp+1
  5437     098C                     l2685:
  5438     098C  0827               	movf	___fldiv@b+3,w
  5439     098D  00B0               	movwf	___fldiv@rem+3
  5440     098E  0826               	movf	___fldiv@b+2,w
  5441     098F  00AF               	movwf	___fldiv@rem+2
  5442     0990  0825               	movf	___fldiv@b+1,w
  5443     0991  00AE               	movwf	___fldiv@rem+1
  5444     0992  0824               	movf	___fldiv@b,w
  5445     0993  00AD               	movwf	___fldiv@rem
  5446     0994                     l2687:
  5447     0994  3000               	movlw	0
  5448     0995  00A7               	movwf	___fldiv@b+3
  5449     0996  3000               	movlw	0
  5450     0997  00A6               	movwf	___fldiv@b+2
  5451     0998  3000               	movlw	0
  5452     0999  00A5               	movwf	___fldiv@b+1
  5453     099A  3000               	movlw	0
  5454     099B  00A4               	movwf	___fldiv@b
  5455     099C                     l2689:
  5456     099C  3000               	movlw	0
  5457     099D  00B7               	movwf	___fldiv@grs+3
  5458     099E  3000               	movlw	0
  5459     099F  00B6               	movwf	___fldiv@grs+2
  5460     09A0  3000               	movlw	0
  5461     09A1  00B5               	movwf	___fldiv@grs+1
  5462     09A2  3000               	movlw	0
  5463     09A3  00B4               	movwf	___fldiv@grs
  5464     09A4                     l2691:
  5465     09A4  01B9               	clrf	___fldiv@aexp
  5466     09A5  29F0               	goto	l2711
  5467     09A6                     l2693:
  5468     09A6  0839               	movf	___fldiv@aexp,w
  5469     09A7  1903               	btfsc	3,2
  5470     09A8  29AA               	goto	u3191
  5471     09A9  29AB               	goto	u3190
  5472     09AA                     u3191:
  5473     09AA  29CB               	goto	l2703
  5474     09AB                     u3190:
  5475     09AB                     l2695:
  5476     09AB  3001               	movlw	1
  5477     09AC  00A8               	movwf	??___fldiv
  5478     09AD                     u3205:
  5479     09AD  1003               	clrc
  5480     09AE  0DAD               	rlf	___fldiv@rem,f
  5481     09AF  0DAE               	rlf	___fldiv@rem+1,f
  5482     09B0  0DAF               	rlf	___fldiv@rem+2,f
  5483     09B1  0DB0               	rlf	___fldiv@rem+3,f
  5484     09B2  0BA8               	decfsz	??___fldiv,f
  5485     09B3  29AD               	goto	u3205
  5486     09B4  3001               	movlw	1
  5487     09B5  00A8               	movwf	??___fldiv
  5488     09B6                     u3215:
  5489     09B6  1003               	clrc
  5490     09B7  0DA4               	rlf	___fldiv@b,f
  5491     09B8  0DA5               	rlf	___fldiv@b+1,f
  5492     09B9  0DA6               	rlf	___fldiv@b+2,f
  5493     09BA  0DA7               	rlf	___fldiv@b+3,f
  5494     09BB  0BA8               	decfsz	??___fldiv,f
  5495     09BC  29B6               	goto	u3215
  5496     09BD                     l2697:
  5497     09BD  1FB7               	btfss	___fldiv@grs+3,7
  5498     09BE  29C0               	goto	u3221
  5499     09BF  29C1               	goto	u3220
  5500     09C0                     u3221:
  5501     09C0  29C2               	goto	l2701
  5502     09C1                     u3220:
  5503     09C1                     l2699:
  5504     09C1  1424               	bsf	___fldiv@b,0
  5505     09C2                     l2701:
  5506     09C2  3001               	movlw	1
  5507     09C3  00A8               	movwf	??___fldiv
  5508     09C4                     u3235:
  5509     09C4  1003               	clrc
  5510     09C5  0DB4               	rlf	___fldiv@grs,f
  5511     09C6  0DB5               	rlf	___fldiv@grs+1,f
  5512     09C7  0DB6               	rlf	___fldiv@grs+2,f
  5513     09C8  0DB7               	rlf	___fldiv@grs+3,f
  5514     09C9  0BA8               	decfsz	??___fldiv,f
  5515     09CA  29C4               	goto	u3235
  5516     09CB                     l2703:
  5517     09CB  0823               	movf	___fldiv@a+3,w
  5518     09CC  0230               	subwf	___fldiv@rem+3,w
  5519     09CD  1D03               	skipz
  5520     09CE  29D9               	goto	u3245
  5521     09CF  0822               	movf	___fldiv@a+2,w
  5522     09D0  022F               	subwf	___fldiv@rem+2,w
  5523     09D1  1D03               	skipz
  5524     09D2  29D9               	goto	u3245
  5525     09D3  0821               	movf	___fldiv@a+1,w
  5526     09D4  022E               	subwf	___fldiv@rem+1,w
  5527     09D5  1D03               	skipz
  5528     09D6  29D9               	goto	u3245
  5529     09D7  0820               	movf	___fldiv@a,w
  5530     09D8  022D               	subwf	___fldiv@rem,w
  5531     09D9                     u3245:
  5532     09D9  1C03               	skipc
  5533     09DA  29DC               	goto	u3241
  5534     09DB  29DD               	goto	u3240
  5535     09DC                     u3241:
  5536     09DC  29EC               	goto	l2709
  5537     09DD                     u3240:
  5538     09DD                     l2705:
  5539     09DD  1737               	bsf	___fldiv@grs+3,6
  5540     09DE                     l2707:
  5541     09DE  0820               	movf	___fldiv@a,w
  5542     09DF  02AD               	subwf	___fldiv@rem,f
  5543     09E0  0821               	movf	___fldiv@a+1,w
  5544     09E1  1C03               	skipc
  5545     09E2  0F21               	incfsz	___fldiv@a+1,w
  5546     09E3  02AE               	subwf	___fldiv@rem+1,f
  5547     09E4  0822               	movf	___fldiv@a+2,w
  5548     09E5  1C03               	skipc
  5549     09E6  0F22               	incfsz	___fldiv@a+2,w
  5550     09E7  02AF               	subwf	___fldiv@rem+2,f
  5551     09E8  0823               	movf	___fldiv@a+3,w
  5552     09E9  1C03               	skipc
  5553     09EA  0F23               	incfsz	___fldiv@a+3,w
  5554     09EB  02B0               	subwf	___fldiv@rem+3,f
  5555     09EC                     l2709:
  5556     09EC  3001               	movlw	1
  5557     09ED  00FF               	movwf	btemp+1
  5558     09EE  087F               	movf	btemp+1,w
  5559     09EF  07B9               	addwf	___fldiv@aexp,f
  5560     09F0                     l2711:
  5561     09F0  301A               	movlw	26
  5562     09F1  0239               	subwf	___fldiv@aexp,w
  5563     09F2  1C03               	skipc
  5564     09F3  29F5               	goto	u3251
  5565     09F4  29F6               	goto	u3250
  5566     09F5                     u3251:
  5567     09F5  29A6               	goto	l2693
  5568     09F6                     u3250:
  5569     09F6                     l2713:
  5570     09F6  0830               	movf	___fldiv@rem+3,w
  5571     09F7  042F               	iorwf	___fldiv@rem+2,w
  5572     09F8  042E               	iorwf	___fldiv@rem+1,w
  5573     09F9  042D               	iorwf	___fldiv@rem,w
  5574     09FA  1903               	skipnz
  5575     09FB  29FD               	goto	u3261
  5576     09FC  29FE               	goto	u3260
  5577     09FD                     u3261:
  5578     09FD  2A1D               	goto	l2727
  5579     09FE                     u3260:
  5580     09FE                     l2715:
  5581     09FE  1434               	bsf	___fldiv@grs,0
  5582     09FF  2A1D               	goto	l2727
  5583     0A00                     l2717:
  5584     0A00  3001               	movlw	1
  5585     0A01  00A8               	movwf	??___fldiv
  5586     0A02                     u3275:
  5587     0A02  1003               	clrc
  5588     0A03  0DA4               	rlf	___fldiv@b,f
  5589     0A04  0DA5               	rlf	___fldiv@b+1,f
  5590     0A05  0DA6               	rlf	___fldiv@b+2,f
  5591     0A06  0DA7               	rlf	___fldiv@b+3,f
  5592     0A07  0BA8               	decfsz	??___fldiv,f
  5593     0A08  2A02               	goto	u3275
  5594     0A09                     l2719:
  5595     0A09  1FB7               	btfss	___fldiv@grs+3,7
  5596     0A0A  2A0C               	goto	u3281
  5597     0A0B  2A0D               	goto	u3280
  5598     0A0C                     u3281:
  5599     0A0C  2A0E               	goto	l2723
  5600     0A0D                     u3280:
  5601     0A0D                     l2721:
  5602     0A0D  1424               	bsf	___fldiv@b,0
  5603     0A0E                     l2723:
  5604     0A0E  3001               	movlw	1
  5605     0A0F  00A8               	movwf	??___fldiv
  5606     0A10                     u3295:
  5607     0A10  1003               	clrc
  5608     0A11  0DB4               	rlf	___fldiv@grs,f
  5609     0A12  0DB5               	rlf	___fldiv@grs+1,f
  5610     0A13  0DB6               	rlf	___fldiv@grs+2,f
  5611     0A14  0DB7               	rlf	___fldiv@grs+3,f
  5612     0A15  0BA8               	decfsz	??___fldiv,f
  5613     0A16  2A10               	goto	u3295
  5614     0A17                     l2725:
  5615     0A17  30FF               	movlw	255
  5616     0A18  07B2               	addwf	___fldiv@new_exp,f
  5617     0A19  1803               	skipnc
  5618     0A1A  0AB3               	incf	___fldiv@new_exp+1,f
  5619     0A1B  30FF               	movlw	255
  5620     0A1C  07B3               	addwf	___fldiv@new_exp+1,f
  5621     0A1D                     l2727:
  5622     0A1D  1FA6               	btfss	___fldiv@b+2,7
  5623     0A1E  2A20               	goto	u3301
  5624     0A1F  2A21               	goto	u3300
  5625     0A20                     u3301:
  5626     0A20  2A00               	goto	l2717
  5627     0A21                     u3300:
  5628     0A21                     l2729:
  5629     0A21  01B9               	clrf	___fldiv@aexp
  5630     0A22                     l2731:
  5631     0A22  1FB7               	btfss	___fldiv@grs+3,7
  5632     0A23  2A25               	goto	u3311
  5633     0A24  2A26               	goto	u3310
  5634     0A25                     u3311:
  5635     0A25  2A42               	goto	l2739
  5636     0A26                     u3310:
  5637     0A26                     l2733:
  5638     0A26  30FF               	movlw	255
  5639     0A27  0534               	andwf	___fldiv@grs,w
  5640     0A28  00A8               	movwf	??___fldiv
  5641     0A29  30FF               	movlw	255
  5642     0A2A  0535               	andwf	___fldiv@grs+1,w
  5643     0A2B  00A9               	movwf	??___fldiv+1
  5644     0A2C  30FF               	movlw	255
  5645     0A2D  0536               	andwf	___fldiv@grs+2,w
  5646     0A2E  00AA               	movwf	??___fldiv+2
  5647     0A2F  307F               	movlw	127
  5648     0A30  0537               	andwf	___fldiv@grs+3,w
  5649     0A31  00AB               	movwf	??___fldiv+3
  5650     0A32  082B               	movf	??___fldiv+3,w
  5651     0A33  042A               	iorwf	??___fldiv+2,w
  5652     0A34  0429               	iorwf	??___fldiv+1,w
  5653     0A35  0428               	iorwf	??___fldiv,w
  5654     0A36  1903               	skipnz
  5655     0A37  2A39               	goto	u3321
  5656     0A38  2A3A               	goto	u3320
  5657     0A39                     u3321:
  5658     0A39  2A3D               	goto	l777
  5659     0A3A                     u3320:
  5660     0A3A                     l2735:
  5661     0A3A  01B9               	clrf	___fldiv@aexp
  5662     0A3B  0AB9               	incf	___fldiv@aexp,f
  5663     0A3C  2A42               	goto	l2739
  5664     0A3D                     l777:
  5665     0A3D  1C24               	btfss	___fldiv@b,0
  5666     0A3E  2A40               	goto	u3331
  5667     0A3F  2A41               	goto	u3330
  5668     0A40                     u3331:
  5669     0A40  2A42               	goto	l2739
  5670     0A41                     u3330:
  5671     0A41  2A3A               	goto	l2735
  5672     0A42                     l2739:
  5673     0A42  0839               	movf	___fldiv@aexp,w
  5674     0A43  1903               	btfsc	3,2
  5675     0A44  2A46               	goto	u3341
  5676     0A45  2A47               	goto	u3340
  5677     0A46                     u3341:
  5678     0A46  2A78               	goto	l2749
  5679     0A47                     u3340:
  5680     0A47                     l2741:
  5681     0A47  3001               	movlw	1
  5682     0A48  07A4               	addwf	___fldiv@b,f
  5683     0A49  3000               	movlw	0
  5684     0A4A  1803               	skipnc
  5685     0A4B  3001               	movlw	1
  5686     0A4C  07A5               	addwf	___fldiv@b+1,f
  5687     0A4D  3000               	movlw	0
  5688     0A4E  1803               	skipnc
  5689     0A4F  3001               	movlw	1
  5690     0A50  07A6               	addwf	___fldiv@b+2,f
  5691     0A51  3000               	movlw	0
  5692     0A52  1803               	skipnc
  5693     0A53  3001               	movlw	1
  5694     0A54  07A7               	addwf	___fldiv@b+3,f
  5695     0A55                     l2743:
  5696     0A55  1C27               	btfss	___fldiv@b+3,0
  5697     0A56  2A58               	goto	u3351
  5698     0A57  2A59               	goto	u3350
  5699     0A58                     u3351:
  5700     0A58  2A78               	goto	l2749
  5701     0A59                     u3350:
  5702     0A59                     l2745:
  5703     0A59  0824               	movf	___fldiv@b,w
  5704     0A5A  00A8               	movwf	??___fldiv
  5705     0A5B  0825               	movf	___fldiv@b+1,w
  5706     0A5C  00A9               	movwf	??___fldiv+1
  5707     0A5D  0826               	movf	___fldiv@b+2,w
  5708     0A5E  00AA               	movwf	??___fldiv+2
  5709     0A5F  0827               	movf	___fldiv@b+3,w
  5710     0A60  00AB               	movwf	??___fldiv+3
  5711     0A61  3001               	movlw	1
  5712     0A62  00AC               	movwf	??___fldiv+4
  5713     0A63                     u3365:
  5714     0A63  0D2B               	rlf	??___fldiv+3,w
  5715     0A64  0CAB               	rrf	??___fldiv+3,f
  5716     0A65  0CAA               	rrf	??___fldiv+2,f
  5717     0A66  0CA9               	rrf	??___fldiv+1,f
  5718     0A67  0CA8               	rrf	??___fldiv,f
  5719     0A68                     u3360:
  5720     0A68  0BAC               	decfsz	??___fldiv+4,f
  5721     0A69  2A63               	goto	u3365
  5722     0A6A  082B               	movf	??___fldiv+3,w
  5723     0A6B  00A7               	movwf	___fldiv@b+3
  5724     0A6C  082A               	movf	??___fldiv+2,w
  5725     0A6D  00A6               	movwf	___fldiv@b+2
  5726     0A6E  0829               	movf	??___fldiv+1,w
  5727     0A6F  00A5               	movwf	___fldiv@b+1
  5728     0A70  0828               	movf	??___fldiv,w
  5729     0A71  00A4               	movwf	___fldiv@b
  5730     0A72                     l2747:
  5731     0A72  3001               	movlw	1
  5732     0A73  07B2               	addwf	___fldiv@new_exp,f
  5733     0A74  1803               	skipnc
  5734     0A75  0AB3               	incf	___fldiv@new_exp+1,f
  5735     0A76  3000               	movlw	0
  5736     0A77  07B3               	addwf	___fldiv@new_exp+1,f
  5737     0A78                     l2749:
  5738     0A78  0833               	movf	___fldiv@new_exp+1,w
  5739     0A79  3A80               	xorlw	128
  5740     0A7A  00FF               	movwf	btemp+1
  5741     0A7B  3080               	movlw	128
  5742     0A7C  027F               	subwf	btemp+1,w
  5743     0A7D  1D03               	skipz
  5744     0A7E  2A81               	goto	u3375
  5745     0A7F  30FF               	movlw	255
  5746     0A80  0232               	subwf	___fldiv@new_exp,w
  5747     0A81                     u3375:
  5748     0A81  1C03               	skipc
  5749     0A82  2A84               	goto	u3371
  5750     0A83  2A85               	goto	u3370
  5751     0A84                     u3371:
  5752     0A84  2A93               	goto	l2753
  5753     0A85                     u3370:
  5754     0A85                     l2751:
  5755     0A85  30FF               	movlw	255
  5756     0A86  1283               	bcf	3,5	;RP0=0, select bank0
  5757     0A87  1303               	bcf	3,6	;RP1=0, select bank0
  5758     0A88  00B2               	movwf	___fldiv@new_exp
  5759     0A89  3000               	movlw	0
  5760     0A8A  00B3               	movwf	___fldiv@new_exp+1
  5761     0A8B  3000               	movlw	0
  5762     0A8C  00A7               	movwf	___fldiv@b+3
  5763     0A8D  3000               	movlw	0
  5764     0A8E  00A6               	movwf	___fldiv@b+2
  5765     0A8F  3000               	movlw	0
  5766     0A90  00A5               	movwf	___fldiv@b+1
  5767     0A91  3000               	movlw	0
  5768     0A92  00A4               	movwf	___fldiv@b
  5769     0A93                     l2753:
  5770     0A93  1283               	bcf	3,5	;RP0=0, select bank0
  5771     0A94  1303               	bcf	3,6	;RP1=0, select bank0
  5772     0A95  0833               	movf	___fldiv@new_exp+1,w
  5773     0A96  3A80               	xorlw	128
  5774     0A97  00FF               	movwf	btemp+1
  5775     0A98  3080               	movlw	128
  5776     0A99  027F               	subwf	btemp+1,w
  5777     0A9A  1D03               	skipz
  5778     0A9B  2A9E               	goto	u3385
  5779     0A9C  3001               	movlw	1
  5780     0A9D  0232               	subwf	___fldiv@new_exp,w
  5781     0A9E                     u3385:
  5782     0A9E  1803               	skipnc
  5783     0A9F  2AA1               	goto	u3381
  5784     0AA0  2AA2               	goto	u3380
  5785     0AA1                     u3381:
  5786     0AA1  2AAF               	goto	l783
  5787     0AA2                     u3380:
  5788     0AA2                     l2755:
  5789     0AA2  1283               	bcf	3,5	;RP0=0, select bank0
  5790     0AA3  1303               	bcf	3,6	;RP1=0, select bank0
  5791     0AA4  01B2               	clrf	___fldiv@new_exp
  5792     0AA5  01B3               	clrf	___fldiv@new_exp+1
  5793     0AA6                     l2757:
  5794     0AA6  3000               	movlw	0
  5795     0AA7  00A7               	movwf	___fldiv@b+3
  5796     0AA8  3000               	movlw	0
  5797     0AA9  00A6               	movwf	___fldiv@b+2
  5798     0AAA  3000               	movlw	0
  5799     0AAB  00A5               	movwf	___fldiv@b+1
  5800     0AAC  3000               	movlw	0
  5801     0AAD  00A4               	movwf	___fldiv@b
  5802     0AAE                     l2759:
  5803     0AAE  01B1               	clrf	___fldiv@sign
  5804     0AAF                     l783:
  5805     0AAF  1283               	bcf	3,5	;RP0=0, select bank0
  5806     0AB0  1303               	bcf	3,6	;RP1=0, select bank0
  5807     0AB1  0832               	movf	___fldiv@new_exp,w
  5808     0AB2  00B8               	movwf	___fldiv@bexp
  5809     0AB3                     l2761:
  5810     0AB3  1C38               	btfss	___fldiv@bexp,0
  5811     0AB4  2AB6               	goto	u3391
  5812     0AB5  2AB7               	goto	u3390
  5813     0AB6                     u3391:
  5814     0AB6  2AB9               	goto	l2765
  5815     0AB7                     u3390:
  5816     0AB7                     l2763:
  5817     0AB7  17A6               	bsf	___fldiv@b+2,7
  5818     0AB8  2ABD               	goto	l2767
  5819     0AB9                     l2765:
  5820     0AB9  307F               	movlw	127
  5821     0ABA  00FF               	movwf	btemp+1
  5822     0ABB  087F               	movf	btemp+1,w
  5823     0ABC  05A6               	andwf	___fldiv@b+2,f
  5824     0ABD                     l2767:
  5825     0ABD  0838               	movf	___fldiv@bexp,w
  5826     0ABE  00A8               	movwf	??___fldiv
  5827     0ABF  1003               	clrc
  5828     0AC0  0C28               	rrf	??___fldiv,w
  5829     0AC1  00A7               	movwf	___fldiv@b+3
  5830     0AC2  295F               	goto	l2671
  5831     0AC3                     l763:
  5832     0AC3  0008               	return
  5833     0AC4                     __end_of___fldiv:
  5834                           
  5835                           	psect	text17
  5836     14DE                     __ptext17:	
  5837 ;; *************** function ___awmod *****************
  5838 ;; Defined at:
  5839 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
  5840 ;; Parameters:    Size  Location     Type
  5841 ;;  divisor         2   10[BANK0 ] int 
  5842 ;;  dividend        2   12[BANK0 ] int 
  5843 ;; Auto vars:     Size  Location     Type
  5844 ;;  sign            1   15[BANK0 ] unsigned char 
  5845 ;;  counter         1   14[BANK0 ] unsigned char 
  5846 ;; Return value:  Size  Location     Type
  5847 ;;                  2   10[BANK0 ] int 
  5848 ;; Registers used:
  5849 ;;		wreg, status,2, status,0, btemp+1
  5850 ;; Tracked objects:
  5851 ;;		On entry : 0/0
  5852 ;;		On exit  : 0/0
  5853 ;;		Unchanged: 0/0
  5854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5855 ;;      Params:         0       4       0       0       0
  5856 ;;      Locals:         0       2       0       0       0
  5857 ;;      Temps:          0       0       0       0       0
  5858 ;;      Totals:         0       6       0       0       0
  5859 ;;Total ram usage:        6 bytes
  5860 ;; Hardware stack levels used: 1
  5861 ;; Hardware stack levels required when called: 2
  5862 ;; This function calls:
  5863 ;;		Nothing
  5864 ;; This function is called by:
  5865 ;;		_main
  5866 ;; This function uses a non-reentrant model
  5867 ;;
  5868                           
  5869     14DE                     ___awmod:	
  5870                           ;psect for function ___awmod
  5871                           
  5872     14DE                     l2553:	
  5873                           ;incstack = 0
  5874                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  5875                           
  5876     14DE  1283               	bcf	3,5	;RP0=0, select bank0
  5877     14DF  1303               	bcf	3,6	;RP1=0, select bank0
  5878     14E0  01AF               	clrf	___awmod@sign
  5879     14E1                     l2555:
  5880     14E1  1FAD               	btfss	___awmod@dividend+1,7
  5881     14E2  2CE4               	goto	u2921
  5882     14E3  2CE5               	goto	u2920
  5883     14E4                     u2921:
  5884     14E4  2CEC               	goto	l2561
  5885     14E5                     u2920:
  5886     14E5                     l2557:
  5887     14E5  09AC               	comf	___awmod@dividend,f
  5888     14E6  09AD               	comf	___awmod@dividend+1,f
  5889     14E7  0AAC               	incf	___awmod@dividend,f
  5890     14E8  1903               	skipnz
  5891     14E9  0AAD               	incf	___awmod@dividend+1,f
  5892     14EA                     l2559:
  5893     14EA  01AF               	clrf	___awmod@sign
  5894     14EB  0AAF               	incf	___awmod@sign,f
  5895     14EC                     l2561:
  5896     14EC  1FAB               	btfss	___awmod@divisor+1,7
  5897     14ED  2CEF               	goto	u2931
  5898     14EE  2CF0               	goto	u2930
  5899     14EF                     u2931:
  5900     14EF  2CF5               	goto	l2565
  5901     14F0                     u2930:
  5902     14F0                     l2563:
  5903     14F0  09AA               	comf	___awmod@divisor,f
  5904     14F1  09AB               	comf	___awmod@divisor+1,f
  5905     14F2  0AAA               	incf	___awmod@divisor,f
  5906     14F3  1903               	skipnz
  5907     14F4  0AAB               	incf	___awmod@divisor+1,f
  5908     14F5                     l2565:
  5909     14F5  082A               	movf	___awmod@divisor,w
  5910     14F6  042B               	iorwf	___awmod@divisor+1,w
  5911     14F7  1903               	btfsc	3,2
  5912     14F8  2CFA               	goto	u2941
  5913     14F9  2CFB               	goto	u2940
  5914     14FA                     u2941:
  5915     14FA  2D2A               	goto	l2583
  5916     14FB                     u2940:
  5917     14FB                     l2567:
  5918     14FB  01AE               	clrf	___awmod@counter
  5919     14FC  0AAE               	incf	___awmod@counter,f
  5920     14FD  2D09               	goto	l2573
  5921     14FE                     l2569:
  5922     14FE  3001               	movlw	1
  5923     14FF                     u2955:
  5924     14FF  1003               	clrc
  5925     1500  0DAA               	rlf	___awmod@divisor,f
  5926     1501  0DAB               	rlf	___awmod@divisor+1,f
  5927     1502  3EFF               	addlw	-1
  5928     1503  1D03               	skipz
  5929     1504  2CFF               	goto	u2955
  5930     1505                     l2571:
  5931     1505  3001               	movlw	1
  5932     1506  00FF               	movwf	btemp+1
  5933     1507  087F               	movf	btemp+1,w
  5934     1508  07AE               	addwf	___awmod@counter,f
  5935     1509                     l2573:
  5936     1509  1FAB               	btfss	___awmod@divisor+1,7
  5937     150A  2D0C               	goto	u2961
  5938     150B  2D0D               	goto	u2960
  5939     150C                     u2961:
  5940     150C  2CFE               	goto	l2569
  5941     150D                     u2960:
  5942     150D                     l2575:
  5943     150D  082B               	movf	___awmod@divisor+1,w
  5944     150E  022D               	subwf	___awmod@dividend+1,w
  5945     150F  1D03               	skipz
  5946     1510  2D13               	goto	u2975
  5947     1511  082A               	movf	___awmod@divisor,w
  5948     1512  022C               	subwf	___awmod@dividend,w
  5949     1513                     u2975:
  5950     1513  1C03               	skipc
  5951     1514  2D16               	goto	u2971
  5952     1515  2D17               	goto	u2970
  5953     1516                     u2971:
  5954     1516  2D1D               	goto	l2579
  5955     1517                     u2970:
  5956     1517                     l2577:
  5957     1517  082A               	movf	___awmod@divisor,w
  5958     1518  02AC               	subwf	___awmod@dividend,f
  5959     1519  082B               	movf	___awmod@divisor+1,w
  5960     151A  1C03               	skipc
  5961     151B  03AD               	decf	___awmod@dividend+1,f
  5962     151C  02AD               	subwf	___awmod@dividend+1,f
  5963     151D                     l2579:
  5964     151D  3001               	movlw	1
  5965     151E                     u2985:
  5966     151E  1003               	clrc
  5967     151F  0CAB               	rrf	___awmod@divisor+1,f
  5968     1520  0CAA               	rrf	___awmod@divisor,f
  5969     1521  3EFF               	addlw	-1
  5970     1522  1D03               	skipz
  5971     1523  2D1E               	goto	u2985
  5972     1524                     l2581:
  5973     1524  3001               	movlw	1
  5974     1525  02AE               	subwf	___awmod@counter,f
  5975     1526  1D03               	btfss	3,2
  5976     1527  2D29               	goto	u2991
  5977     1528  2D2A               	goto	u2990
  5978     1529                     u2991:
  5979     1529  2D0D               	goto	l2575
  5980     152A                     u2990:
  5981     152A                     l2583:
  5982     152A  082F               	movf	___awmod@sign,w
  5983     152B  1903               	btfsc	3,2
  5984     152C  2D2E               	goto	u3001
  5985     152D  2D2F               	goto	u3000
  5986     152E                     u3001:
  5987     152E  2D34               	goto	l2587
  5988     152F                     u3000:
  5989     152F                     l2585:
  5990     152F  09AC               	comf	___awmod@dividend,f
  5991     1530  09AD               	comf	___awmod@dividend+1,f
  5992     1531  0AAC               	incf	___awmod@dividend,f
  5993     1532  1903               	skipnz
  5994     1533  0AAD               	incf	___awmod@dividend+1,f
  5995     1534                     l2587:
  5996     1534  082D               	movf	___awmod@dividend+1,w
  5997     1535  00AB               	movwf	?___awmod+1
  5998     1536  082C               	movf	___awmod@dividend,w
  5999     1537  00AA               	movwf	?___awmod
  6000     1538                     l578:
  6001     1538  0008               	return
  6002     1539                     __end_of___awmod:
  6003                           
  6004                           	psect	text18
  6005     15FD                     __ptext18:	
  6006 ;; *************** function ___awdiv *****************
  6007 ;; Defined at:
  6008 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  6009 ;; Parameters:    Size  Location     Type
  6010 ;;  divisor         2   10[BANK0 ] int 
  6011 ;;  dividend        2   12[BANK0 ] int 
  6012 ;; Auto vars:     Size  Location     Type
  6013 ;;  quotient        2   16[BANK0 ] int 
  6014 ;;  sign            1   15[BANK0 ] unsigned char 
  6015 ;;  counter         1   14[BANK0 ] unsigned char 
  6016 ;; Return value:  Size  Location     Type
  6017 ;;                  2   10[BANK0 ] int 
  6018 ;; Registers used:
  6019 ;;		wreg, status,2, status,0, btemp+1
  6020 ;; Tracked objects:
  6021 ;;		On entry : 0/0
  6022 ;;		On exit  : 0/0
  6023 ;;		Unchanged: 0/0
  6024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6025 ;;      Params:         0       4       0       0       0
  6026 ;;      Locals:         0       4       0       0       0
  6027 ;;      Temps:          0       0       0       0       0
  6028 ;;      Totals:         0       8       0       0       0
  6029 ;;Total ram usage:        8 bytes
  6030 ;; Hardware stack levels used: 1
  6031 ;; Hardware stack levels required when called: 2
  6032 ;; This function calls:
  6033 ;;		Nothing
  6034 ;; This function is called by:
  6035 ;;		_main
  6036 ;; This function uses a non-reentrant model
  6037 ;;
  6038                           
  6039     15FD                     ___awdiv:	
  6040                           ;psect for function ___awdiv
  6041                           
  6042     15FD                     l2509:	
  6043                           ;incstack = 0
  6044                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  6045                           
  6046     15FD  1283               	bcf	3,5	;RP0=0, select bank0
  6047     15FE  1303               	bcf	3,6	;RP1=0, select bank0
  6048     15FF  01AF               	clrf	___awdiv@sign
  6049     1600                     l2511:
  6050     1600  1FAB               	btfss	___awdiv@divisor+1,7
  6051     1601  2E03               	goto	u2821
  6052     1602  2E04               	goto	u2820
  6053     1603                     u2821:
  6054     1603  2E0B               	goto	l2517
  6055     1604                     u2820:
  6056     1604                     l2513:
  6057     1604  09AA               	comf	___awdiv@divisor,f
  6058     1605  09AB               	comf	___awdiv@divisor+1,f
  6059     1606  0AAA               	incf	___awdiv@divisor,f
  6060     1607  1903               	skipnz
  6061     1608  0AAB               	incf	___awdiv@divisor+1,f
  6062     1609                     l2515:
  6063     1609  01AF               	clrf	___awdiv@sign
  6064     160A  0AAF               	incf	___awdiv@sign,f
  6065     160B                     l2517:
  6066     160B  1FAD               	btfss	___awdiv@dividend+1,7
  6067     160C  2E0E               	goto	u2831
  6068     160D  2E0F               	goto	u2830
  6069     160E                     u2831:
  6070     160E  2E18               	goto	l2523
  6071     160F                     u2830:
  6072     160F                     l2519:
  6073     160F  09AC               	comf	___awdiv@dividend,f
  6074     1610  09AD               	comf	___awdiv@dividend+1,f
  6075     1611  0AAC               	incf	___awdiv@dividend,f
  6076     1612  1903               	skipnz
  6077     1613  0AAD               	incf	___awdiv@dividend+1,f
  6078     1614                     l2521:
  6079     1614  3001               	movlw	1
  6080     1615  00FF               	movwf	btemp+1
  6081     1616  087F               	movf	btemp+1,w
  6082     1617  06AF               	xorwf	___awdiv@sign,f
  6083     1618                     l2523:
  6084     1618  01B0               	clrf	___awdiv@quotient
  6085     1619  01B1               	clrf	___awdiv@quotient+1
  6086     161A                     l2525:
  6087     161A  082A               	movf	___awdiv@divisor,w
  6088     161B  042B               	iorwf	___awdiv@divisor+1,w
  6089     161C  1903               	btfsc	3,2
  6090     161D  2E1F               	goto	u2841
  6091     161E  2E20               	goto	u2840
  6092     161F                     u2841:
  6093     161F  2E57               	goto	l2545
  6094     1620                     u2840:
  6095     1620                     l2527:
  6096     1620  01AE               	clrf	___awdiv@counter
  6097     1621  0AAE               	incf	___awdiv@counter,f
  6098     1622  2E2E               	goto	l2533
  6099     1623                     l2529:
  6100     1623  3001               	movlw	1
  6101     1624                     u2855:
  6102     1624  1003               	clrc
  6103     1625  0DAA               	rlf	___awdiv@divisor,f
  6104     1626  0DAB               	rlf	___awdiv@divisor+1,f
  6105     1627  3EFF               	addlw	-1
  6106     1628  1D03               	skipz
  6107     1629  2E24               	goto	u2855
  6108     162A                     l2531:
  6109     162A  3001               	movlw	1
  6110     162B  00FF               	movwf	btemp+1
  6111     162C  087F               	movf	btemp+1,w
  6112     162D  07AE               	addwf	___awdiv@counter,f
  6113     162E                     l2533:
  6114     162E  1FAB               	btfss	___awdiv@divisor+1,7
  6115     162F  2E31               	goto	u2861
  6116     1630  2E32               	goto	u2860
  6117     1631                     u2861:
  6118     1631  2E23               	goto	l2529
  6119     1632                     u2860:
  6120     1632                     l2535:
  6121     1632  3001               	movlw	1
  6122     1633                     u2875:
  6123     1633  1003               	clrc
  6124     1634  0DB0               	rlf	___awdiv@quotient,f
  6125     1635  0DB1               	rlf	___awdiv@quotient+1,f
  6126     1636  3EFF               	addlw	-1
  6127     1637  1D03               	skipz
  6128     1638  2E33               	goto	u2875
  6129     1639  082B               	movf	___awdiv@divisor+1,w
  6130     163A  022D               	subwf	___awdiv@dividend+1,w
  6131     163B  1D03               	skipz
  6132     163C  2E3F               	goto	u2885
  6133     163D  082A               	movf	___awdiv@divisor,w
  6134     163E  022C               	subwf	___awdiv@dividend,w
  6135     163F                     u2885:
  6136     163F  1C03               	skipc
  6137     1640  2E42               	goto	u2881
  6138     1641  2E43               	goto	u2880
  6139     1642                     u2881:
  6140     1642  2E4A               	goto	l2541
  6141     1643                     u2880:
  6142     1643                     l2537:
  6143     1643  082A               	movf	___awdiv@divisor,w
  6144     1644  02AC               	subwf	___awdiv@dividend,f
  6145     1645  082B               	movf	___awdiv@divisor+1,w
  6146     1646  1C03               	skipc
  6147     1647  03AD               	decf	___awdiv@dividend+1,f
  6148     1648  02AD               	subwf	___awdiv@dividend+1,f
  6149     1649                     l2539:
  6150     1649  1430               	bsf	___awdiv@quotient,0
  6151     164A                     l2541:
  6152     164A  3001               	movlw	1
  6153     164B                     u2895:
  6154     164B  1003               	clrc
  6155     164C  0CAB               	rrf	___awdiv@divisor+1,f
  6156     164D  0CAA               	rrf	___awdiv@divisor,f
  6157     164E  3EFF               	addlw	-1
  6158     164F  1D03               	skipz
  6159     1650  2E4B               	goto	u2895
  6160     1651                     l2543:
  6161     1651  3001               	movlw	1
  6162     1652  02AE               	subwf	___awdiv@counter,f
  6163     1653  1D03               	btfss	3,2
  6164     1654  2E56               	goto	u2901
  6165     1655  2E57               	goto	u2900
  6166     1656                     u2901:
  6167     1656  2E32               	goto	l2535
  6168     1657                     u2900:
  6169     1657                     l2545:
  6170     1657  082F               	movf	___awdiv@sign,w
  6171     1658  1903               	btfsc	3,2
  6172     1659  2E5B               	goto	u2911
  6173     165A  2E5C               	goto	u2910
  6174     165B                     u2911:
  6175     165B  2E61               	goto	l2549
  6176     165C                     u2910:
  6177     165C                     l2547:
  6178     165C  09B0               	comf	___awdiv@quotient,f
  6179     165D  09B1               	comf	___awdiv@quotient+1,f
  6180     165E  0AB0               	incf	___awdiv@quotient,f
  6181     165F  1903               	skipnz
  6182     1660  0AB1               	incf	___awdiv@quotient+1,f
  6183     1661                     l2549:
  6184     1661  0831               	movf	___awdiv@quotient+1,w
  6185     1662  00AB               	movwf	?___awdiv+1
  6186     1663  0830               	movf	___awdiv@quotient,w
  6187     1664  00AA               	movwf	?___awdiv
  6188     1665                     l565:
  6189     1665  0008               	return
  6190     1666                     __end_of___awdiv:
  6191                           
  6192                           	psect	text19
  6193     1327                     __ptext19:	
  6194 ;; *************** function _UART_Write_Text *****************
  6195 ;; Defined at:
  6196 ;;		line 18 in file "uart_lib.c"
  6197 ;; Parameters:    Size  Location     Type
  6198 ;;  text            2    1[BANK0 ] PTR unsigned char 
  6199 ;;		 -> STR_31(5), STR_30(5), STR_27(5), main@combinedText_374(20), 
  6200 ;;		 -> main@uartMessage_370(8), STR_21(5), main@combinedText(20), main@uartMessage(8), 
  6201 ;;		 -> STR_15(5), 
  6202 ;; Auto vars:     Size  Location     Type
  6203 ;;  i               2    6[BANK0 ] int 
  6204 ;; Return value:  Size  Location     Type
  6205 ;;                  1    wreg      void 
  6206 ;; Registers used:
  6207 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6208 ;; Tracked objects:
  6209 ;;		On entry : 0/0
  6210 ;;		On exit  : 0/0
  6211 ;;		Unchanged: 0/0
  6212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6213 ;;      Params:         0       2       0       0       0
  6214 ;;      Locals:         0       2       0       0       0
  6215 ;;      Temps:          0       3       0       0       0
  6216 ;;      Totals:         0       7       0       0       0
  6217 ;;Total ram usage:        7 bytes
  6218 ;; Hardware stack levels used: 1
  6219 ;; Hardware stack levels required when called: 3
  6220 ;; This function calls:
  6221 ;;		_UART_Write
  6222 ;; This function is called by:
  6223 ;;		_main
  6224 ;; This function uses a non-reentrant model
  6225 ;;
  6226                           
  6227     1327                     _UART_Write_Text:	
  6228                           ;psect for function _UART_Write_Text
  6229                           
  6230     1327                     l2319:	
  6231                           ;incstack = 0
  6232                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6233                           
  6234                           
  6235                           ;uart_lib.c: 18: void UART_Write_Text(char *text);uart_lib.c: 19: {;uart_lib.c: 20:   in
      +                          t i;;uart_lib.c: 21:   for(i=0;text[i]!='\0';i++)
  6236     1327  1283               	bcf	3,5	;RP0=0, select bank0
  6237     1328  1303               	bcf	3,6	;RP1=0, select bank0
  6238     1329  01A6               	clrf	UART_Write_Text@i
  6239     132A  01A7               	clrf	UART_Write_Text@i+1
  6240     132B  2B50               	goto	l2325
  6241     132C                     l2321:
  6242                           
  6243                           ;uart_lib.c: 22:     UART_Write(text[i]);
  6244     132C  0826               	movf	UART_Write_Text@i,w
  6245     132D  0721               	addwf	UART_Write_Text@text,w
  6246     132E  00A4               	movwf	??_UART_Write_Text+1
  6247     132F  0822               	movf	UART_Write_Text@text+1,w
  6248     1330  00A3               	movwf	??_UART_Write_Text
  6249     1331  1803               	skipnc
  6250     1332  0AA3               	incf	??_UART_Write_Text,f
  6251     1333  1FA6               	btfss	UART_Write_Text@i,7
  6252     1334  2B36               	goto	u2560
  6253     1335  03A3               	decf	??_UART_Write_Text,f
  6254     1336                     u2560:
  6255     1336  1283               	bcf	3,5	;RP0=0, select bank0
  6256     1337  1303               	bcf	3,6	;RP1=0, select bank0
  6257     1338  0823               	movf	??_UART_Write_Text,w
  6258     1339  00A5               	movwf	??_UART_Write_Text+2
  6259     133A  0825               	movf	??_UART_Write_Text+2,w
  6260     133B  00FF               	movwf	btemp+1
  6261     133C  0824               	movf	??_UART_Write_Text+1,w
  6262     133D  0084               	movwf	4
  6263     133E  160A  118A  2000  160A  118A  	fcall	stringtab
  6264     1343  120A  118A  27F2  160A  118A  	fcall	_UART_Write
  6265     1348                     l2323:
  6266     1348  3001               	movlw	1
  6267     1349  1283               	bcf	3,5	;RP0=0, select bank0
  6268     134A  1303               	bcf	3,6	;RP1=0, select bank0
  6269     134B  07A6               	addwf	UART_Write_Text@i,f
  6270     134C  1803               	skipnc
  6271     134D  0AA7               	incf	UART_Write_Text@i+1,f
  6272     134E  3000               	movlw	0
  6273     134F  07A7               	addwf	UART_Write_Text@i+1,f
  6274     1350                     l2325:
  6275     1350  0826               	movf	UART_Write_Text@i,w
  6276     1351  0721               	addwf	UART_Write_Text@text,w
  6277     1352  00A4               	movwf	??_UART_Write_Text+1
  6278     1353  0822               	movf	UART_Write_Text@text+1,w
  6279     1354  00A3               	movwf	??_UART_Write_Text
  6280     1355  1803               	skipnc
  6281     1356  0AA3               	incf	??_UART_Write_Text,f
  6282     1357  1FA6               	btfss	UART_Write_Text@i,7
  6283     1358  2B5A               	goto	u2570
  6284     1359  03A3               	decf	??_UART_Write_Text,f
  6285     135A                     u2570:
  6286     135A  1283               	bcf	3,5	;RP0=0, select bank0
  6287     135B  1303               	bcf	3,6	;RP1=0, select bank0
  6288     135C  0823               	movf	??_UART_Write_Text,w
  6289     135D  00A5               	movwf	??_UART_Write_Text+2
  6290     135E  0825               	movf	??_UART_Write_Text+2,w
  6291     135F  00FF               	movwf	btemp+1
  6292     1360  0824               	movf	??_UART_Write_Text+1,w
  6293     1361  0084               	movwf	4
  6294     1362  160A  118A  2000  160A  118A  	fcall	stringtab
  6295     1367  3A00               	xorlw	0
  6296     1368  1D03               	skipz
  6297     1369  2B6B               	goto	u2581
  6298     136A  2B6C               	goto	u2580
  6299     136B                     u2581:
  6300     136B  2B2C               	goto	l2321
  6301     136C                     u2580:
  6302     136C                     l25:
  6303     136C  0008               	return
  6304     136D                     __end_of_UART_Write_Text:
  6305                           
  6306                           	psect	text20
  6307     07F2                     __ptext20:	
  6308 ;; *************** function _UART_Write *****************
  6309 ;; Defined at:
  6310 ;;		line 12 in file "uart_lib.c"
  6311 ;; Parameters:    Size  Location     Type
  6312 ;;  data            1    wreg     unsigned char 
  6313 ;; Auto vars:     Size  Location     Type
  6314 ;;  data            1    0[BANK0 ] unsigned char 
  6315 ;; Return value:  Size  Location     Type
  6316 ;;                  1    wreg      void 
  6317 ;; Registers used:
  6318 ;;		wreg
  6319 ;; Tracked objects:
  6320 ;;		On entry : 0/0
  6321 ;;		On exit  : 0/0
  6322 ;;		Unchanged: 0/0
  6323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6324 ;;      Params:         0       0       0       0       0
  6325 ;;      Locals:         0       1       0       0       0
  6326 ;;      Temps:          0       0       0       0       0
  6327 ;;      Totals:         0       1       0       0       0
  6328 ;;Total ram usage:        1 bytes
  6329 ;; Hardware stack levels used: 1
  6330 ;; Hardware stack levels required when called: 2
  6331 ;; This function calls:
  6332 ;;		Nothing
  6333 ;; This function is called by:
  6334 ;;		_UART_Write_Text
  6335 ;; This function uses a non-reentrant model
  6336 ;;
  6337                           
  6338     07F2                     _UART_Write:	
  6339                           ;psect for function _UART_Write
  6340                           
  6341                           
  6342                           ;incstack = 0
  6343                           ; Regs used in _UART_Write: [wreg]
  6344                           ;UART_Write@data stored from wreg
  6345     07F2  1283               	bcf	3,5	;RP0=0, select bank0
  6346     07F3  1303               	bcf	3,6	;RP1=0, select bank0
  6347     07F4  00A0               	movwf	UART_Write@data
  6348     07F5                     l2193:
  6349     07F5                     l16:	
  6350                           ;uart_lib.c: 12: void UART_Write(char data);uart_lib.c: 13: {;uart_lib.c: 14:   while(!T
      +                          RMT);
  6351                           
  6352     07F5  1683               	bsf	3,5	;RP0=1, select bank1
  6353     07F6  1303               	bcf	3,6	;RP1=0, select bank1
  6354     07F7  1C98               	btfss	24,1	;volatile
  6355     07F8  2FFA               	goto	u2261
  6356     07F9  2FFB               	goto	u2260
  6357     07FA                     u2261:
  6358     07FA  2FF5               	goto	l16
  6359     07FB                     u2260:
  6360     07FB                     l2195:
  6361                           
  6362                           ;uart_lib.c: 15:   TXREG = data;
  6363     07FB  1283               	bcf	3,5	;RP0=0, select bank0
  6364     07FC  1303               	bcf	3,6	;RP1=0, select bank0
  6365     07FD  0820               	movf	UART_Write@data,w
  6366     07FE  0099               	movwf	25	;volatile
  6367     07FF                     l19:
  6368     07FF  0008               	return
  6369     0800                     __end_of_UART_Write:
  6370                           
  6371                           	psect	text21
  6372     1210                     __ptext21:	
  6373 ;; *************** function _UART_Initialize *****************
  6374 ;; Defined at:
  6375 ;;		line 4 in file "uart_lib.c"
  6376 ;; Parameters:    Size  Location     Type
  6377 ;;		None
  6378 ;; Auto vars:     Size  Location     Type
  6379 ;;		None
  6380 ;; Return value:  Size  Location     Type
  6381 ;;                  1    wreg      void 
  6382 ;; Registers used:
  6383 ;;		wreg, status,2
  6384 ;; Tracked objects:
  6385 ;;		On entry : 0/0
  6386 ;;		On exit  : 0/0
  6387 ;;		Unchanged: 0/0
  6388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6389 ;;      Params:         0       0       0       0       0
  6390 ;;      Locals:         0       0       0       0       0
  6391 ;;      Temps:          0       0       0       0       0
  6392 ;;      Totals:         0       0       0       0       0
  6393 ;;Total ram usage:        0 bytes
  6394 ;; Hardware stack levels used: 1
  6395 ;; Hardware stack levels required when called: 2
  6396 ;; This function calls:
  6397 ;;		Nothing
  6398 ;; This function is called by:
  6399 ;;		_main
  6400 ;; This function uses a non-reentrant model
  6401 ;;
  6402                           
  6403     1210                     _UART_Initialize:	
  6404                           ;psect for function _UART_Initialize
  6405                           
  6406     1210                     l2315:	
  6407                           ;incstack = 0
  6408                           ; Regs used in _UART_Initialize: [wreg+status,2]
  6409                           
  6410                           
  6411                           ;uart_lib.c: 6:     TXSTA=0b00100100;
  6412     1210  3024               	movlw	36
  6413     1211  1683               	bsf	3,5	;RP0=1, select bank1
  6414     1212  1303               	bcf	3,6	;RP1=0, select bank1
  6415     1213  0098               	movwf	24	;volatile
  6416                           
  6417                           ;uart_lib.c: 7:     RCSTA=0b10010000;
  6418     1214  3090               	movlw	144
  6419     1215  1283               	bcf	3,5	;RP0=0, select bank0
  6420     1216  1303               	bcf	3,6	;RP1=0, select bank0
  6421     1217  0098               	movwf	24	;volatile
  6422                           
  6423                           ;uart_lib.c: 8:     SPBRG=12;
  6424     1218  300C               	movlw	12
  6425     1219  1683               	bsf	3,5	;RP0=1, select bank1
  6426     121A  1303               	bcf	3,6	;RP1=0, select bank1
  6427     121B  0099               	movwf	25	;volatile
  6428     121C                     l2317:
  6429                           
  6430                           ;uart_lib.c: 9:     TXREG=0x00;
  6431     121C  1283               	bcf	3,5	;RP0=0, select bank0
  6432     121D  1303               	bcf	3,6	;RP1=0, select bank0
  6433     121E  0199               	clrf	25	;volatile
  6434     121F                     l13:
  6435     121F  0008               	return
  6436     1220                     __end_of_UART_Initialize:
  6437                           
  6438                           	psect	text22
  6439     159A                     __ptext22:	
  6440 ;; *************** function _Lcd_Init *****************
  6441 ;; Defined at:
  6442 ;;		line 61 in file "./lcd.h"
  6443 ;; Parameters:    Size  Location     Type
  6444 ;;		None
  6445 ;; Auto vars:     Size  Location     Type
  6446 ;;		None
  6447 ;; Return value:  Size  Location     Type
  6448 ;;                  1    wreg      void 
  6449 ;; Registers used:
  6450 ;;		wreg, status,2, status,0, pclath, cstack
  6451 ;; Tracked objects:
  6452 ;;		On entry : 0/0
  6453 ;;		On exit  : 0/0
  6454 ;;		Unchanged: 0/0
  6455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6456 ;;      Params:         0       0       0       0       0
  6457 ;;      Locals:         0       0       0       0       0
  6458 ;;      Temps:          0       2       0       0       0
  6459 ;;      Totals:         0       2       0       0       0
  6460 ;;Total ram usage:        2 bytes
  6461 ;; Hardware stack levels used: 1
  6462 ;; Hardware stack levels required when called: 4
  6463 ;; This function calls:
  6464 ;;		_Lcd_Cmd
  6465 ;;		_Lcd_Port
  6466 ;; This function is called by:
  6467 ;;		_main
  6468 ;; This function uses a non-reentrant model
  6469 ;;
  6470                           
  6471     159A                     _Lcd_Init:	
  6472                           ;psect for function _Lcd_Init
  6473                           
  6474     159A                     l2327:	
  6475                           ;incstack = 0
  6476                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  6477                           
  6478                           
  6479                           ;./lcd.h: 63:   Lcd_Port(0x00);
  6480     159A  3000               	movlw	0
  6481     159B  160A  118A  227B  160A  118A  	fcall	_Lcd_Port
  6482     15A0                     l2329:
  6483                           
  6484                           ;./lcd.h: 64:    _delay((unsigned long)((20)*(4000000/4000.0)));
  6485     15A0  301A               	movlw	26
  6486     15A1  1283               	bcf	3,5	;RP0=0, select bank0
  6487     15A2  1303               	bcf	3,6	;RP1=0, select bank0
  6488     15A3  00A5               	movwf	??_Lcd_Init+1
  6489     15A4  30F7               	movlw	247
  6490     15A5  00A4               	movwf	??_Lcd_Init
  6491     15A6                     u4517:
  6492     15A6  0BA4               	decfsz	??_Lcd_Init,f
  6493     15A7  2DA6               	goto	u4517
  6494     15A8  0BA5               	decfsz	??_Lcd_Init+1,f
  6495     15A9  2DA6               	goto	u4517
  6496     15AA  2DAB               	nop2
  6497     15AB                     l2331:
  6498                           
  6499                           ;./lcd.h: 65:   Lcd_Cmd(0x03);
  6500     15AB  3003               	movlw	3
  6501     15AC  160A  118A  225F  160A  118A  	fcall	_Lcd_Cmd
  6502                           
  6503                           ;./lcd.h: 66:  _delay((unsigned long)((5)*(4000000/4000.0)));
  6504     15B1  3007               	movlw	7
  6505     15B2  1283               	bcf	3,5	;RP0=0, select bank0
  6506     15B3  1303               	bcf	3,6	;RP1=0, select bank0
  6507     15B4  00A5               	movwf	??_Lcd_Init+1
  6508     15B5  307C               	movlw	124
  6509     15B6  00A4               	movwf	??_Lcd_Init
  6510     15B7                     u4527:
  6511     15B7  0BA4               	decfsz	??_Lcd_Init,f
  6512     15B8  2DB7               	goto	u4527
  6513     15B9  0BA5               	decfsz	??_Lcd_Init+1,f
  6514     15BA  2DB7               	goto	u4527
  6515     15BB  0000               	nop
  6516     15BC                     l2333:
  6517                           
  6518                           ;./lcd.h: 67:   Lcd_Cmd(0x03);
  6519     15BC  3003               	movlw	3
  6520     15BD  160A  118A  225F  160A  118A  	fcall	_Lcd_Cmd
  6521     15C2                     l2335:
  6522                           
  6523                           ;./lcd.h: 68:  _delay((unsigned long)((11)*(4000000/4000.0)));
  6524     15C2  300F               	movlw	15
  6525     15C3  1283               	bcf	3,5	;RP0=0, select bank0
  6526     15C4  1303               	bcf	3,6	;RP1=0, select bank0
  6527     15C5  00A5               	movwf	??_Lcd_Init+1
  6528     15C6  3047               	movlw	71
  6529     15C7  00A4               	movwf	??_Lcd_Init
  6530     15C8                     u4537:
  6531     15C8  0BA4               	decfsz	??_Lcd_Init,f
  6532     15C9  2DC8               	goto	u4537
  6533     15CA  0BA5               	decfsz	??_Lcd_Init+1,f
  6534     15CB  2DC8               	goto	u4537
  6535                           
  6536                           ;./lcd.h: 69:   Lcd_Cmd(0x03);
  6537     15CC  3003               	movlw	3
  6538     15CD  160A  118A  225F  160A  118A  	fcall	_Lcd_Cmd
  6539                           
  6540                           ;./lcd.h: 71:   Lcd_Cmd(0x02);
  6541     15D2  3002               	movlw	2
  6542     15D3  160A  118A  225F  160A  118A  	fcall	_Lcd_Cmd
  6543                           
  6544                           ;./lcd.h: 72:   Lcd_Cmd(0x02);
  6545     15D8  3002               	movlw	2
  6546     15D9  160A  118A  225F  160A  118A  	fcall	_Lcd_Cmd
  6547                           
  6548                           ;./lcd.h: 73:   Lcd_Cmd(0x08);
  6549     15DE  3008               	movlw	8
  6550     15DF  160A  118A  225F  160A  118A  	fcall	_Lcd_Cmd
  6551                           
  6552                           ;./lcd.h: 74:   Lcd_Cmd(0x00);
  6553     15E4  3000               	movlw	0
  6554     15E5  160A  118A  225F  160A  118A  	fcall	_Lcd_Cmd
  6555                           
  6556                           ;./lcd.h: 75:   Lcd_Cmd(0x0C);
  6557     15EA  300C               	movlw	12
  6558     15EB  160A  118A  225F  160A  118A  	fcall	_Lcd_Cmd
  6559                           
  6560                           ;./lcd.h: 76:   Lcd_Cmd(0x00);
  6561     15F0  3000               	movlw	0
  6562     15F1  160A  118A  225F  160A  118A  	fcall	_Lcd_Cmd
  6563                           
  6564                           ;./lcd.h: 77:   Lcd_Cmd(0x06);
  6565     15F6  3006               	movlw	6
  6566     15F7  160A  118A  225F  160A  118A  	fcall	_Lcd_Cmd
  6567     15FC                     l161:
  6568     15FC  0008               	return
  6569     15FD                     __end_of_Lcd_Init:
  6570                           
  6571                           	psect	text23
  6572     125F                     __ptext23:	
  6573 ;; *************** function _Lcd_Cmd *****************
  6574 ;; Defined at:
  6575 ;;		line 25 in file "./lcd.h"
  6576 ;; Parameters:    Size  Location     Type
  6577 ;;  a               1    wreg     unsigned char 
  6578 ;; Auto vars:     Size  Location     Type
  6579 ;;  a               1    3[BANK0 ] unsigned char 
  6580 ;; Return value:  Size  Location     Type
  6581 ;;                  1    wreg      void 
  6582 ;; Registers used:
  6583 ;;		wreg, status,2, status,0, pclath, cstack
  6584 ;; Tracked objects:
  6585 ;;		On entry : 0/0
  6586 ;;		On exit  : 0/0
  6587 ;;		Unchanged: 0/0
  6588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6589 ;;      Params:         0       0       0       0       0
  6590 ;;      Locals:         0       1       0       0       0
  6591 ;;      Temps:          0       2       0       0       0
  6592 ;;      Totals:         0       3       0       0       0
  6593 ;;Total ram usage:        3 bytes
  6594 ;; Hardware stack levels used: 1
  6595 ;; Hardware stack levels required when called: 3
  6596 ;; This function calls:
  6597 ;;		_Lcd_Port
  6598 ;; This function is called by:
  6599 ;;		_Lcd_Clear
  6600 ;;		_Lcd_Set_Cursor
  6601 ;;		_Lcd_Init
  6602 ;; This function uses a non-reentrant model
  6603 ;;
  6604                           
  6605     125F                     _Lcd_Cmd:	
  6606                           ;psect for function _Lcd_Cmd
  6607                           
  6608                           
  6609                           ;incstack = 0
  6610                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  6611                           ;Lcd_Cmd@a stored from wreg
  6612     125F  1283               	bcf	3,5	;RP0=0, select bank0
  6613     1260  1303               	bcf	3,6	;RP1=0, select bank0
  6614     1261  00A3               	movwf	Lcd_Cmd@a
  6615     1262                     l2163:
  6616                           
  6617                           ;./lcd.h: 25: void Lcd_Cmd(char a);./lcd.h: 26: {;./lcd.h: 27:  RB5 = 0;
  6618     1262  1286               	bcf	6,5	;volatile
  6619     1263                     l2165:
  6620                           
  6621                           ;./lcd.h: 28:  Lcd_Port(a);
  6622     1263  0823               	movf	Lcd_Cmd@a,w
  6623     1264  160A  118A  227B  160A  118A  	fcall	_Lcd_Port
  6624     1269                     l2167:
  6625                           
  6626                           ;./lcd.h: 29:  RB4 = 1;
  6627     1269  1283               	bcf	3,5	;RP0=0, select bank0
  6628     126A  1303               	bcf	3,6	;RP1=0, select bank0
  6629     126B  1606               	bsf	6,4	;volatile
  6630     126C                     l2169:
  6631                           
  6632                           ;./lcd.h: 30:         _delay((unsigned long)((4)*(4000000/4000.0)));
  6633     126C  3006               	movlw	6
  6634     126D  1283               	bcf	3,5	;RP0=0, select bank0
  6635     126E  1303               	bcf	3,6	;RP1=0, select bank0
  6636     126F  00A2               	movwf	??_Lcd_Cmd+1
  6637     1270  302F               	movlw	47
  6638     1271  00A1               	movwf	??_Lcd_Cmd
  6639     1272                     u4547:
  6640     1272  0BA1               	decfsz	??_Lcd_Cmd,f
  6641     1273  2A72               	goto	u4547
  6642     1274  0BA2               	decfsz	??_Lcd_Cmd+1,f
  6643     1275  2A72               	goto	u4547
  6644     1276  2A77               	nop2
  6645     1277                     l2171:
  6646                           
  6647                           ;./lcd.h: 31:         RB4 = 0;
  6648     1277  1283               	bcf	3,5	;RP0=0, select bank0
  6649     1278  1303               	bcf	3,6	;RP1=0, select bank0
  6650     1279  1206               	bcf	6,4	;volatile
  6651     127A                     l149:
  6652     127A  0008               	return
  6653     127B                     __end_of_Lcd_Cmd:
  6654                           
  6655                           	psect	text24
  6656     127B                     __ptext24:	
  6657 ;; *************** function _Lcd_Port *****************
  6658 ;; Defined at:
  6659 ;;		line 3 in file "./lcd.h"
  6660 ;; Parameters:    Size  Location     Type
  6661 ;;  a               1    wreg     unsigned char 
  6662 ;; Auto vars:     Size  Location     Type
  6663 ;;  a               1    0[BANK0 ] unsigned char 
  6664 ;; Return value:  Size  Location     Type
  6665 ;;                  1    wreg      void 
  6666 ;; Registers used:
  6667 ;;		wreg
  6668 ;; Tracked objects:
  6669 ;;		On entry : 0/0
  6670 ;;		On exit  : 0/0
  6671 ;;		Unchanged: 0/0
  6672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6673 ;;      Params:         0       0       0       0       0
  6674 ;;      Locals:         0       1       0       0       0
  6675 ;;      Temps:          0       0       0       0       0
  6676 ;;      Totals:         0       1       0       0       0
  6677 ;;Total ram usage:        1 bytes
  6678 ;; Hardware stack levels used: 1
  6679 ;; Hardware stack levels required when called: 2
  6680 ;; This function calls:
  6681 ;;		Nothing
  6682 ;; This function is called by:
  6683 ;;		_Lcd_Cmd
  6684 ;;		_Lcd_Init
  6685 ;;		_Lcd_Write_Char
  6686 ;; This function uses a non-reentrant model
  6687 ;;
  6688                           
  6689     127B                     _Lcd_Port:	
  6690                           ;psect for function _Lcd_Port
  6691                           
  6692                           
  6693                           ;incstack = 0
  6694                           ; Regs used in _Lcd_Port: [wreg]
  6695                           ;Lcd_Port@a stored from wreg
  6696     127B  1283               	bcf	3,5	;RP0=0, select bank0
  6697     127C  1303               	bcf	3,6	;RP1=0, select bank0
  6698     127D  00A0               	movwf	Lcd_Port@a
  6699     127E                     l2153:
  6700                           
  6701                           ;./lcd.h: 3: void Lcd_Port(char a);./lcd.h: 4: {;./lcd.h: 5:  if(a & 1)
  6702     127E  1C20               	btfss	Lcd_Port@a,0
  6703     127F  2A81               	goto	u2211
  6704     1280  2A82               	goto	u2210
  6705     1281                     u2211:
  6706     1281  2A84               	goto	l138
  6707     1282                     u2210:
  6708     1282                     l2155:
  6709                           
  6710                           ;./lcd.h: 6:   RB3 = 1;
  6711     1282  1586               	bsf	6,3	;volatile
  6712     1283  2A85               	goto	l139
  6713     1284                     l138:	
  6714                           ;./lcd.h: 7:  else
  6715                           
  6716                           
  6717                           ;./lcd.h: 8:   RB3 = 0;
  6718     1284  1186               	bcf	6,3	;volatile
  6719     1285                     l139:
  6720                           
  6721                           ;./lcd.h: 10:  if(a & 2)
  6722     1285  1CA0               	btfss	Lcd_Port@a,1
  6723     1286  2A88               	goto	u2221
  6724     1287  2A89               	goto	u2220
  6725     1288                     u2221:
  6726     1288  2A8B               	goto	l140
  6727     1289                     u2220:
  6728     1289                     l2157:
  6729                           
  6730                           ;./lcd.h: 11:   RB2 = 1;
  6731     1289  1506               	bsf	6,2	;volatile
  6732     128A  2A8C               	goto	l141
  6733     128B                     l140:	
  6734                           ;./lcd.h: 12:  else
  6735                           
  6736                           
  6737                           ;./lcd.h: 13:   RB2 = 0;
  6738     128B  1106               	bcf	6,2	;volatile
  6739     128C                     l141:
  6740                           
  6741                           ;./lcd.h: 15:  if(a & 4)
  6742     128C  1D20               	btfss	Lcd_Port@a,2
  6743     128D  2A8F               	goto	u2231
  6744     128E  2A90               	goto	u2230
  6745     128F                     u2231:
  6746     128F  2A92               	goto	l142
  6747     1290                     u2230:
  6748     1290                     l2159:
  6749                           
  6750                           ;./lcd.h: 16:   RB1 = 1;
  6751     1290  1486               	bsf	6,1	;volatile
  6752     1291  2A93               	goto	l143
  6753     1292                     l142:	
  6754                           ;./lcd.h: 17:  else
  6755                           
  6756                           
  6757                           ;./lcd.h: 18:   RB1 = 0;
  6758     1292  1086               	bcf	6,1	;volatile
  6759     1293                     l143:
  6760                           
  6761                           ;./lcd.h: 20:  if(a & 8)
  6762     1293  1DA0               	btfss	Lcd_Port@a,3
  6763     1294  2A96               	goto	u2241
  6764     1295  2A97               	goto	u2240
  6765     1296                     u2241:
  6766     1296  2A99               	goto	l144
  6767     1297                     u2240:
  6768     1297                     l2161:
  6769                           
  6770                           ;./lcd.h: 21:   RB0 = 1;
  6771     1297  1406               	bsf	6,0	;volatile
  6772     1298  2A9A               	goto	l146
  6773     1299                     l144:	
  6774                           ;./lcd.h: 22:  else
  6775                           
  6776                           
  6777                           ;./lcd.h: 23:   RB0 = 0;
  6778     1299  1006               	bcf	6,0	;volatile
  6779     129A                     l146:
  6780     129A  0008               	return
  6781     129B                     __end_of_Lcd_Port:
  6782                           
  6783                           	psect	text25
  6784     1539                     __ptext25:	
  6785 ;; *************** function _timer_isr *****************
  6786 ;; Defined at:
  6787 ;;		line 87 in file "main1.c"
  6788 ;; Parameters:    Size  Location     Type
  6789 ;;		None
  6790 ;; Auto vars:     Size  Location     Type
  6791 ;;  lowByte         1    7[COMMON] unsigned char 
  6792 ;;  highByte        1    0        unsigned char 
  6793 ;; Return value:  Size  Location     Type
  6794 ;;                  1    wreg      void 
  6795 ;; Registers used:
  6796 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6797 ;; Tracked objects:
  6798 ;;		On entry : 0/0
  6799 ;;		On exit  : 0/0
  6800 ;;		Unchanged: 0/0
  6801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6802 ;;      Params:         0       0       0       0       0
  6803 ;;      Locals:         1       0       0       0       0
  6804 ;;      Temps:          3       0       0       0       0
  6805 ;;      Totals:         4       0       0       0       0
  6806 ;;Total ram usage:        4 bytes
  6807 ;; Hardware stack levels used: 1
  6808 ;; Hardware stack levels required when called: 1
  6809 ;; This function calls:
  6810 ;;		_incrementTime
  6811 ;;		_writeEEPROM
  6812 ;; This function is called by:
  6813 ;;		Interrupt level 1
  6814 ;; This function uses a non-reentrant model
  6815 ;;
  6816                           
  6817     1539                     _timer_isr:	
  6818                           ;psect for function _timer_isr
  6819                           
  6820     1539                     i1l2965:
  6821                           
  6822                           ;main1.c: 88:     if (T0IF) {
  6823     1539  1D0B               	btfss	11,2	;volatile
  6824     153A  2D3C               	goto	u391_21
  6825     153B  2D3D               	goto	u391_20
  6826     153C                     u391_21:
  6827     153C  2D91               	goto	i1l203
  6828     153D                     u391_20:
  6829     153D                     i1l2967:
  6830                           
  6831                           ;main1.c: 89:         T0IF = 0;
  6832     153D  110B               	bcf	11,2	;volatile
  6833     153E                     i1l2969:
  6834                           
  6835                           ;main1.c: 90:         TMR0 = 61;
  6836     153E  303D               	movlw	61
  6837     153F  1283               	bcf	3,5	;RP0=0, select bank0
  6838     1540  1303               	bcf	3,6	;RP1=0, select bank0
  6839     1541  0081               	movwf	1	;volatile
  6840                           
  6841                           ;main1.c: 91:   epromayaz++;
  6842     1542  3001               	movlw	1
  6843     1543  07EE               	addwf	_epromayaz,f
  6844     1544  1803               	skipnc
  6845     1545  0AEF               	incf	_epromayaz+1,f
  6846     1546  3000               	movlw	0
  6847     1547  07EF               	addwf	_epromayaz+1,f
  6848     1548                     i1l2971:
  6849                           
  6850                           ;main1.c: 92:   if (epromayaz==60){
  6851     1548  303C               	movlw	60
  6852     1549  066E               	xorwf	_epromayaz,w
  6853     154A  046F               	iorwf	_epromayaz+1,w
  6854     154B  1D03               	btfss	3,2
  6855     154C  2D4E               	goto	u392_21
  6856     154D  2D4F               	goto	u392_20
  6857     154E                     u392_21:
  6858     154E  2D51               	goto	i1l2975
  6859     154F                     u392_20:
  6860     154F                     i1l2973:
  6861                           
  6862                           ;main1.c: 93:       epromayaz=0;
  6863     154F  01EE               	clrf	_epromayaz
  6864     1550  01EF               	clrf	_epromayaz+1
  6865     1551                     i1l2975:
  6866                           
  6867                           ;main1.c: 97:     unsigned char lowByte = (unsigned char)(currentTime.hours % 256);
  6868     1551  0878               	movf	_currentTime,w
  6869     1552  00F7               	movwf	timer_isr@lowByte
  6870                           
  6871                           ;main1.c: 99:         kesmeSayaci++;
  6872     1553  3001               	movlw	1
  6873     1554  1683               	bsf	3,5	;RP0=1, select bank3
  6874     1555  1703               	bsf	3,6	;RP1=1, select bank3
  6875     1556  07A4               	addwf	_kesmeSayaci^(0+384),f
  6876     1557  1803               	skipnc
  6877     1558  0AA5               	incf	(_kesmeSayaci+1)^(0+384),f
  6878     1559  3000               	movlw	0
  6879     155A  07A5               	addwf	(_kesmeSayaci+1)^(0+384),f
  6880     155B                     i1l2977:
  6881                           
  6882                           ;main1.c: 100:         if (kesmeSayaci==20){
  6883     155B  3014               	movlw	20
  6884     155C  0624               	xorwf	_kesmeSayaci^(0+384),w
  6885     155D  0425               	iorwf	(_kesmeSayaci+1)^(0+384),w
  6886     155E  1D03               	btfss	3,2
  6887     155F  2D61               	goto	u393_21
  6888     1560  2D62               	goto	u393_20
  6889     1561                     u393_21:
  6890     1561  2D91               	goto	i1l203
  6891     1562                     u393_20:
  6892     1562                     i1l2979:
  6893                           
  6894                           ;main1.c: 101:             kesmeSayaci = 0 ;
  6895     1562  01A4               	clrf	_kesmeSayaci^(0+384)
  6896     1563  01A5               	clrf	(_kesmeSayaci+1)^(0+384)
  6897     1564                     i1l2981:
  6898                           
  6899                           ;main1.c: 102:             incrementTime(&currentTime);
  6900     1564  3078               	movlw	(low (_currentTime| 0))& (0+255)
  6901     1565  160A  118A  23F9  160A  118A  	fcall	_incrementTime
  6902     156A                     i1l2983:
  6903                           
  6904                           ;main1.c: 105:        writeEEPROM(0x01, currentTime.hours);
  6905     156A  3001               	movlw	1
  6906     156B  00F0               	movwf	writeEEPROM@address
  6907     156C  3000               	movlw	0
  6908     156D  00F1               	movwf	writeEEPROM@address+1
  6909     156E  0879               	movf	_currentTime+1,w
  6910     156F  00F3               	movwf	writeEEPROM@data+1
  6911     1570  0878               	movf	_currentTime,w
  6912     1571  00F2               	movwf	writeEEPROM@data
  6913     1572  160A  118A  2249  160A  118A  	fcall	_writeEEPROM
  6914     1577                     i1l2985:
  6915                           
  6916                           ;main1.c: 106:         writeEEPROM(0x02, currentTime.minutes);
  6917     1577  3002               	movlw	2
  6918     1578  00F0               	movwf	writeEEPROM@address
  6919     1579  3000               	movlw	0
  6920     157A  00F1               	movwf	writeEEPROM@address+1
  6921     157B  087B               	movf	_currentTime+3,w
  6922     157C  00F3               	movwf	writeEEPROM@data+1
  6923     157D  087A               	movf	_currentTime+2,w
  6924     157E  00F2               	movwf	writeEEPROM@data
  6925     157F  160A  118A  2249  160A  118A  	fcall	_writeEEPROM
  6926     1584                     i1l2987:
  6927                           
  6928                           ;main1.c: 107:         writeEEPROM(0x03, currentTime.seconds);
  6929     1584  3003               	movlw	3
  6930     1585  00F0               	movwf	writeEEPROM@address
  6931     1586  3000               	movlw	0
  6932     1587  00F1               	movwf	writeEEPROM@address+1
  6933     1588  087D               	movf	_currentTime+5,w
  6934     1589  00F3               	movwf	writeEEPROM@data+1
  6935     158A  087C               	movf	_currentTime+4,w
  6936     158B  00F2               	movwf	writeEEPROM@data
  6937     158C  160A  118A  2249  160A  118A  	fcall	_writeEEPROM
  6938     1591                     i1l203:
  6939     1591  0876               	movf	??_timer_isr+2,w
  6940     1592  008A               	movwf	10
  6941     1593  0875               	movf	??_timer_isr+1,w
  6942     1594  0084               	movwf	4
  6943     1595  0E74               	swapf	??_timer_isr,w
  6944     1596  0083               	movwf	3
  6945     1597  0EFE               	swapf	btemp,f
  6946     1598  0E7E               	swapf	btemp,w
  6947     1599  0009               	retfie
  6948     159A                     __end_of_timer_isr:
  6949                           
  6950                           	psect	intentry
  6951     0004                     __pintentry:	
  6952                           ;incstack = 0
  6953                           ; Regs used in _timer_isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6954                           
  6955     0004                     interrupt_function:
  6956     007E                     saved_w	set	btemp
  6957     0004  00FE               	movwf	btemp
  6958     0005  0E03               	swapf	3,w
  6959     0006  00F4               	movwf	??_timer_isr
  6960     0007  0804               	movf	4,w
  6961     0008  00F5               	movwf	??_timer_isr+1
  6962     0009  080A               	movf	10,w
  6963     000A  00F6               	movwf	??_timer_isr+2
  6964     000B  160A  118A  2D39   	ljmp	_timer_isr
  6965                           
  6966                           	psect	text26
  6967     1249                     __ptext26:	
  6968 ;; *************** function _writeEEPROM *****************
  6969 ;; Defined at:
  6970 ;;		line 52 in file "main1.c"
  6971 ;; Parameters:    Size  Location     Type
  6972 ;;  address         2    0[COMMON] unsigned int 
  6973 ;;  data            2    2[COMMON] unsigned int 
  6974 ;; Auto vars:     Size  Location     Type
  6975 ;;		None
  6976 ;; Return value:  Size  Location     Type
  6977 ;;                  1    wreg      void 
  6978 ;; Registers used:
  6979 ;;		wreg
  6980 ;; Tracked objects:
  6981 ;;		On entry : 0/0
  6982 ;;		On exit  : 0/0
  6983 ;;		Unchanged: 0/0
  6984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6985 ;;      Params:         4       0       0       0       0
  6986 ;;      Locals:         0       0       0       0       0
  6987 ;;      Temps:          0       0       0       0       0
  6988 ;;      Totals:         4       0       0       0       0
  6989 ;;Total ram usage:        4 bytes
  6990 ;; Hardware stack levels used: 1
  6991 ;; This function calls:
  6992 ;;		Nothing
  6993 ;; This function is called by:
  6994 ;;		_timer_isr
  6995 ;; This function uses a non-reentrant model
  6996 ;;
  6997                           
  6998     1249                     _writeEEPROM:	
  6999                           ;psect for function _writeEEPROM
  7000                           
  7001     1249                     i1l2361:	
  7002                           ;incstack = 0
  7003                           ; Regs used in _writeEEPROM: [wreg]
  7004                           
  7005                           
  7006                           ;main1.c: 54:     EEADR = address;
  7007     1249  0870               	movf	writeEEPROM@address,w
  7008     124A  1283               	bcf	3,5	;RP0=0, select bank2
  7009     124B  1703               	bsf	3,6	;RP1=1, select bank2
  7010     124C  008D               	movwf	13	;volatile
  7011                           
  7012                           ;main1.c: 55:     EEDATA = data;
  7013     124D  0872               	movf	writeEEPROM@data,w
  7014     124E  008C               	movwf	12	;volatile
  7015     124F                     i1l2363:
  7016                           
  7017                           ;main1.c: 56:     WREN = 1;
  7018     124F  1683               	bsf	3,5	;RP0=1, select bank3
  7019     1250  1703               	bsf	3,6	;RP1=1, select bank3
  7020     1251  150C               	bsf	12,2	;volsfr
  7021     1252                     i1l2365:
  7022                           
  7023                           ;main1.c: 57:     GIE = 0;
  7024     1252  138B               	bcf	11,7	;volatile
  7025                           
  7026                           ;main1.c: 58:     EECON2 = 0x55;
  7027     1253  3055               	movlw	85
  7028     1254  008D               	movwf	13	;volsfr
  7029                           
  7030                           ;main1.c: 59:     EECON2 = 0xAA;
  7031     1255  30AA               	movlw	170
  7032     1256  008D               	movwf	13	;volsfr
  7033     1257                     i1l2367:
  7034                           
  7035                           ;main1.c: 60:     WR = 1;
  7036     1257  148C               	bsf	12,1	;volsfr
  7037     1258                     i1l2369:
  7038                           
  7039                           ;main1.c: 61:     GIE = 1;
  7040     1258  178B               	bsf	11,7	;volatile
  7041     1259                     i1l2371:
  7042                           
  7043                           ;main1.c: 62:     WREN = 0;
  7044     1259  110C               	bcf	12,2	;volsfr
  7045     125A                     i1l184:	
  7046                           ;main1.c: 63:     while (WR == 1);
  7047                           
  7048     125A  188C               	btfsc	12,1	;volsfr
  7049     125B  2A5D               	goto	u260_21
  7050     125C  2A5E               	goto	u260_20
  7051     125D                     u260_21:
  7052     125D  2A5A               	goto	i1l184
  7053     125E                     u260_20:
  7054     125E                     i1l187:
  7055     125E  0008               	return
  7056     125F                     __end_of_writeEEPROM:
  7057                           
  7058                           	psect	text27
  7059     13F9                     __ptext27:	
  7060 ;; *************** function _incrementTime *****************
  7061 ;; Defined at:
  7062 ;;		line 73 in file "main1.c"
  7063 ;; Parameters:    Size  Location     Type
  7064 ;;  time            1    wreg     PTR struct Time
  7065 ;;		 -> currentTime(6), 
  7066 ;; Auto vars:     Size  Location     Type
  7067 ;;  time            1    2[COMMON] PTR struct Time
  7068 ;;		 -> currentTime(6), 
  7069 ;; Return value:  Size  Location     Type
  7070 ;;                  1    wreg      void 
  7071 ;; Registers used:
  7072 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7073 ;; Tracked objects:
  7074 ;;		On entry : 0/0
  7075 ;;		On exit  : 0/0
  7076 ;;		Unchanged: 0/0
  7077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7078 ;;      Params:         0       0       0       0       0
  7079 ;;      Locals:         1       0       0       0       0
  7080 ;;      Temps:          2       0       0       0       0
  7081 ;;      Totals:         3       0       0       0       0
  7082 ;;Total ram usage:        3 bytes
  7083 ;; Hardware stack levels used: 1
  7084 ;; This function calls:
  7085 ;;		Nothing
  7086 ;; This function is called by:
  7087 ;;		_timer_isr
  7088 ;; This function uses a non-reentrant model
  7089 ;;
  7090                           
  7091     13F9                     _incrementTime:	
  7092                           ;psect for function _incrementTime
  7093                           
  7094                           
  7095                           ;incstack = 0
  7096                           ; Regs used in _incrementTime: [wreg-fsr0h+status,2+status,0]
  7097                           ;incrementTime@time stored from wreg
  7098     13F9  00F2               	movwf	incrementTime@time
  7099     13FA                     i1l2379:
  7100                           
  7101                           ;main1.c: 74:     time->seconds++;
  7102     13FA  0872               	movf	incrementTime@time,w
  7103     13FB  3E04               	addlw	4
  7104     13FC  0084               	movwf	4
  7105     13FD  3001               	movlw	1
  7106     13FE  0780               	addwf	0,f
  7107     13FF  0A84               	incf	4,f
  7108     1400  1803               	skipnc
  7109     1401  0A80               	incf	0,f
  7110                           
  7111                           ;main1.c: 75:     if (time->seconds >= 60) {
  7112     1402  0872               	movf	incrementTime@time,w
  7113     1403  3E04               	addlw	4
  7114     1404  0084               	movwf	4
  7115     1405  0800               	movf	0,w
  7116     1406  00F0               	movwf	??_incrementTime
  7117     1407  0A84               	incf	4,f
  7118     1408  0800               	movf	0,w
  7119     1409  00F1               	movwf	??_incrementTime+1
  7120     140A  3000               	movlw	0
  7121     140B  0271               	subwf	??_incrementTime+1,w
  7122     140C  303C               	movlw	60
  7123     140D  1903               	skipnz
  7124     140E  0270               	subwf	??_incrementTime,w
  7125     140F  1C03               	skipc
  7126     1410  2C12               	goto	u261_21
  7127     1411  2C13               	goto	u261_20
  7128     1412                     u261_21:
  7129     1412  2C3F               	goto	i1l195
  7130     1413                     u261_20:
  7131     1413                     i1l2381:
  7132                           
  7133                           ;main1.c: 76:         time->seconds = 0;
  7134     1413  0872               	movf	incrementTime@time,w
  7135     1414  3E04               	addlw	4
  7136     1415  0084               	movwf	4
  7137     1416  0180               	clrf	0
  7138     1417  0A84               	incf	4,f
  7139     1418  0180               	clrf	0
  7140                           
  7141                           ;main1.c: 77:         time->minutes++;
  7142     1419  0872               	movf	incrementTime@time,w
  7143     141A  3E02               	addlw	2
  7144     141B  0084               	movwf	4
  7145     141C  3001               	movlw	1
  7146     141D  0780               	addwf	0,f
  7147     141E  0A84               	incf	4,f
  7148     141F  1803               	skipnc
  7149     1420  0A80               	incf	0,f
  7150                           
  7151                           ;main1.c: 78:         if (time->minutes >= 60) {
  7152     1421  0872               	movf	incrementTime@time,w
  7153     1422  3E02               	addlw	2
  7154     1423  0084               	movwf	4
  7155     1424  0800               	movf	0,w
  7156     1425  00F0               	movwf	??_incrementTime
  7157     1426  0A84               	incf	4,f
  7158     1427  0800               	movf	0,w
  7159     1428  00F1               	movwf	??_incrementTime+1
  7160     1429  3000               	movlw	0
  7161     142A  0271               	subwf	??_incrementTime+1,w
  7162     142B  303C               	movlw	60
  7163     142C  1903               	skipnz
  7164     142D  0270               	subwf	??_incrementTime,w
  7165     142E  1C03               	skipc
  7166     142F  2C31               	goto	u262_21
  7167     1430  2C32               	goto	u262_20
  7168     1431                     u262_21:
  7169     1431  2C3F               	goto	i1l195
  7170     1432                     u262_20:
  7171     1432                     i1l2383:
  7172                           
  7173                           ;main1.c: 79:             time->minutes = 0;
  7174     1432  0872               	movf	incrementTime@time,w
  7175     1433  3E02               	addlw	2
  7176     1434  0084               	movwf	4
  7177     1435  0180               	clrf	0
  7178     1436  0A84               	incf	4,f
  7179     1437  0180               	clrf	0
  7180                           
  7181                           ;main1.c: 80:             time->hours++;
  7182     1438  0872               	movf	incrementTime@time,w
  7183     1439  0084               	movwf	4
  7184     143A  3001               	movlw	1
  7185     143B  0780               	addwf	0,f
  7186     143C  0A84               	incf	4,f
  7187     143D  1803               	skipnc
  7188     143E  0A80               	incf	0,f
  7189     143F                     i1l195:
  7190     143F  0008               	return
  7191     1440                     __end_of_incrementTime:
  7192     007E                     btemp	set	126	;btemp
  7193     007E                     wtemp0	set	126
  7194                           
  7195                           	psect	config
  7196                           
  7197                           ;Config register CONFIG @ 0x2007
  7198                           ;	Oscillator Selection bits
  7199                           ;	FOSC = XT, XT oscillator
  7200                           ;	Watchdog Timer Enable bit
  7201                           ;	WDTE = OFF, WDT disabled
  7202                           ;	Power-up Timer Enable bit
  7203                           ;	PWRTE = OFF, PWRT disabled
  7204                           ;	Brown-out Reset Enable bit
  7205                           ;	BOREN = ON, BOR enabled
  7206                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  7207                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  7208                           ;	Data EEPROM Memory Code Protection bit
  7209                           ;	CPD = OFF, Data EEPROM code protection off
  7210                           ;	Flash Program Memory Write Enable bits
  7211                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  7212                           ;	In-Circuit Debugger Mode bit
  7213                           ;	DEBUG = 0x1, unprogrammed default
  7214                           ;	Flash Program Memory Code Protection bit
  7215                           ;	CP = OFF, Code protection off
  7216     2007                     	org	8199
  7217     2007  3F79               	dw	16249
  7218                           
  7219                           	psect	maintext_split_1
  7220     0023                     u3950:
  7221     0023                     l3113:
  7222     0023  1809               	btfsc	9,0	;volatile
  7223     0024  2826               	goto	u3961
  7224     0025  2827               	goto	u3960
  7225     0026                     u3961:
  7226     0026  2FEF               	goto	l212
  7227     0027                     u3960:
  7228     0027                     l3115:
  7229     0027  1807               	btfsc	7,0	;volatile
  7230     0028  282A               	goto	u3971
  7231     0029  282B               	goto	u3970
  7232     002A                     u3971:
  7233     002A  2FEF               	goto	l212
  7234     002B                     u3970:
  7235     002B                     l3117:
  7236     002B  1889               	btfsc	9,1	;volatile
  7237     002C  282E               	goto	u3981
  7238     002D  282F               	goto	u3980
  7239     002E                     u3981:
  7240     002E  2FEF               	goto	l212
  7241     002F                     u3980:
  7242     002F                     l3119:
  7243                           
  7244                           ;main1.c: 227:             ilkAcilis = 0;
  7245     002F  1683               	bsf	3,5	;RP0=1, select bank3
  7246     0030  1703               	bsf	3,6	;RP1=1, select bank3
  7247     0031  0192               	clrf	main@ilkAcilis^(0+384)
  7248     0032  0193               	clrf	(main@ilkAcilis+1)^(0+384)
  7249     0033                     l209:	
  7250                           ;main1.c: 232:     }
  7251                           
  7252                           
  7253                           ;main1.c: 234: if( !RC3 && !RD0){
  7254     0033  1283               	bcf	3,5	;RP0=0, select bank0
  7255     0034  1303               	bcf	3,6	;RP1=0, select bank0
  7256     0035  1987               	btfsc	7,3	;volatile
  7257     0036  2838               	goto	u3991
  7258     0037  2839               	goto	u3990
  7259     0038                     u3991:
  7260     0038  2F5A               	goto	l213
  7261     0039                     u3990:
  7262     0039                     l3121:
  7263     0039  1808               	btfsc	8,0	;volatile
  7264     003A  283C               	goto	u4001
  7265     003B  283D               	goto	u4000
  7266     003C                     u4001:
  7267     003C  2F5A               	goto	l213
  7268     003D                     u4000:
  7269     003D                     l3123:
  7270                           
  7271                           ;main1.c: 237: if (( currentTime.hours % 500 == 0 && currentTime.hours != 0
  7272     003D  30F4               	movlw	244
  7273     003E  00A7               	movwf	___lwmod@divisor
  7274     003F  3001               	movlw	1
  7275     0040  00A8               	movwf	___lwmod@divisor+1
  7276     0041  0879               	movf	_currentTime+1,w
  7277     0042  00AA               	movwf	___lwmod@dividend+1
  7278     0043  0878               	movf	_currentTime,w
  7279     0044  00A9               	movwf	___lwmod@dividend
  7280     0045  160A  118A  22EB  120A  118A  	fcall	___lwmod
  7281     004A  1283               	bcf	3,5	;RP0=0, select bank0
  7282     004B  1303               	bcf	3,6	;RP1=0, select bank0
  7283     004C  0827               	movf	?___lwmod,w
  7284     004D  0428               	iorwf	?___lwmod+1,w
  7285     004E  1D03               	btfss	3,2
  7286     004F  2851               	goto	u4011
  7287     0050  2852               	goto	u4010
  7288     0051                     u4011:
  7289     0051  2858               	goto	l3127
  7290     0052                     u4010:
  7291     0052                     l3125:
  7292     0052  0878               	movf	_currentTime,w
  7293     0053  0479               	iorwf	_currentTime+1,w
  7294     0054  1D03               	btfss	3,2
  7295     0055  2857               	goto	u4021
  7296     0056  2858               	goto	u4020
  7297     0057                     u4021:
  7298     0057  2890               	goto	l3135
  7299     0058                     u4020:
  7300     0058                     l3127:
  7301     0058  30F4               	movlw	244
  7302     0059  00A7               	movwf	___lwmod@divisor
  7303     005A  3001               	movlw	1
  7304     005B  00A8               	movwf	___lwmod@divisor+1
  7305     005C  0879               	movf	_currentTime+1,w
  7306     005D  00AA               	movwf	___lwmod@dividend+1
  7307     005E  0878               	movf	_currentTime,w
  7308     005F  00A9               	movwf	___lwmod@dividend
  7309     0060  160A  118A  22EB  120A  118A  	fcall	___lwmod
  7310     0065  1283               	bcf	3,5	;RP0=0, select bank0
  7311     0066  1303               	bcf	3,6	;RP1=0, select bank0
  7312     0067  0327               	decf	?___lwmod,w
  7313     0068  0428               	iorwf	?___lwmod+1,w
  7314     0069  1D03               	btfss	3,2
  7315     006A  286C               	goto	u4031
  7316     006B  286D               	goto	u4030
  7317     006C                     u4031:
  7318     006C  2873               	goto	l3131
  7319     006D                     u4030:
  7320     006D                     l3129:
  7321     006D  0378               	decf	_currentTime,w
  7322     006E  0479               	iorwf	_currentTime+1,w
  7323     006F  1D03               	btfss	3,2
  7324     0070  2872               	goto	u4041
  7325     0071  2873               	goto	u4040
  7326     0072                     u4041:
  7327     0072  2890               	goto	l3135
  7328     0073                     u4040:
  7329     0073                     l3131:
  7330     0073  30F4               	movlw	244
  7331     0074  00A7               	movwf	___lwmod@divisor
  7332     0075  3001               	movlw	1
  7333     0076  00A8               	movwf	___lwmod@divisor+1
  7334     0077  0879               	movf	_currentTime+1,w
  7335     0078  00AA               	movwf	___lwmod@dividend+1
  7336     0079  0878               	movf	_currentTime,w
  7337     007A  00A9               	movwf	___lwmod@dividend
  7338     007B  160A  118A  22EB  120A  118A  	fcall	___lwmod
  7339     0080  3002               	movlw	2
  7340     0081  1283               	bcf	3,5	;RP0=0, select bank0
  7341     0082  1303               	bcf	3,6	;RP1=0, select bank0
  7342     0083  0627               	xorwf	?___lwmod,w
  7343     0084  0428               	iorwf	?___lwmod+1,w
  7344     0085  1D03               	btfss	3,2
  7345     0086  2888               	goto	u4051
  7346     0087  2889               	goto	u4050
  7347     0088                     u4051:
  7348     0088  289B               	goto	l3139
  7349     0089                     u4050:
  7350     0089                     l3133:
  7351     0089  3002               	movlw	2
  7352     008A  0678               	xorwf	_currentTime,w
  7353     008B  0479               	iorwf	_currentTime+1,w
  7354     008C  1903               	btfsc	3,2
  7355     008D  288F               	goto	u4061
  7356     008E  2890               	goto	u4060
  7357     008F                     u4061:
  7358     008F  289B               	goto	l3139
  7359     0090                     u4060:
  7360     0090                     l3135:
  7361     0090  087A               	movf	_currentTime+2,w
  7362     0091  047B               	iorwf	_currentTime+3,w
  7363     0092  1D03               	btfss	3,2
  7364     0093  2895               	goto	u4071
  7365     0094  2896               	goto	u4070
  7366     0095                     u4071:
  7367     0095  289B               	goto	l3139
  7368     0096                     u4070:
  7369     0096                     l3137:
  7370                           
  7371                           ;main1.c: 240:      && currentTime.minutes == 0) {;main1.c: 241:     yagBakim();
  7372     0096  160A  118A  248C  120A  118A  	fcall	_yagBakim
  7373     009B                     l3139:
  7374                           
  7375                           ;main1.c: 250:    int saat = readEEPROM(0x01);
  7376     009B  3001               	movlw	1
  7377     009C  1283               	bcf	3,5	;RP0=0, select bank0
  7378     009D  1303               	bcf	3,6	;RP1=0, select bank0
  7379     009E  00A0               	movwf	readEEPROM@address
  7380     009F  3000               	movlw	0
  7381     00A0  00A1               	movwf	readEEPROM@address+1
  7382     00A1  160A  118A  2234  120A  118A  	fcall	_readEEPROM
  7383     00A6  1283               	bcf	3,5	;RP0=0, select bank0
  7384     00A7  1303               	bcf	3,6	;RP1=0, select bank0
  7385     00A8  0821               	movf	?_readEEPROM+1,w
  7386     00A9  1683               	bsf	3,5	;RP0=1, select bank1
  7387     00AA  1303               	bcf	3,6	;RP1=0, select bank1
  7388     00AB  00E5               	movwf	(main@saat+1)^(0+128)
  7389     00AC  1283               	bcf	3,5	;RP0=0, select bank0
  7390     00AD  1303               	bcf	3,6	;RP1=0, select bank0
  7391     00AE  0820               	movf	?_readEEPROM,w
  7392     00AF  1683               	bsf	3,5	;RP0=1, select bank1
  7393     00B0  1303               	bcf	3,6	;RP1=0, select bank1
  7394     00B1  00E4               	movwf	main@saat^(0+128)
  7395     00B2                     l3141:
  7396                           
  7397                           ;main1.c: 251:    int dakika = readEEPROM(0x02);
  7398     00B2  3002               	movlw	2
  7399     00B3  1283               	bcf	3,5	;RP0=0, select bank0
  7400     00B4  1303               	bcf	3,6	;RP1=0, select bank0
  7401     00B5  00A0               	movwf	readEEPROM@address
  7402     00B6  3000               	movlw	0
  7403     00B7  00A1               	movwf	readEEPROM@address+1
  7404     00B8  160A  118A  2234  120A  118A  	fcall	_readEEPROM
  7405     00BD  1283               	bcf	3,5	;RP0=0, select bank0
  7406     00BE  1303               	bcf	3,6	;RP1=0, select bank0
  7407     00BF  0821               	movf	?_readEEPROM+1,w
  7408     00C0  1683               	bsf	3,5	;RP0=1, select bank1
  7409     00C1  1303               	bcf	3,6	;RP1=0, select bank1
  7410     00C2  00E7               	movwf	(main@dakika+1)^(0+128)
  7411     00C3  1283               	bcf	3,5	;RP0=0, select bank0
  7412     00C4  1303               	bcf	3,6	;RP1=0, select bank0
  7413     00C5  0820               	movf	?_readEEPROM,w
  7414     00C6  1683               	bsf	3,5	;RP0=1, select bank1
  7415     00C7  1303               	bcf	3,6	;RP1=0, select bank1
  7416     00C8  00E6               	movwf	main@dakika^(0+128)
  7417                           
  7418                           ;main1.c: 254:         sprintf(lcdText, "%5uh %02um", saat, dakika);
  7419     00C9  3014               	movlw	low (STR_8| (0+32768))
  7420     00CA  1283               	bcf	3,5	;RP0=0, select bank0
  7421     00CB  1303               	bcf	3,6	;RP1=0, select bank0
  7422     00CC  00AC               	movwf	sprintf@f
  7423     00CD  3091               	movlw	high (STR_8| (0+32768))
  7424     00CE  00AD               	movwf	sprintf@f+1
  7425     00CF  1683               	bsf	3,5	;RP0=1, select bank1
  7426     00D0  1303               	bcf	3,6	;RP1=0, select bank1
  7427     00D1  0865               	movf	(main@saat+1)^(0+128),w
  7428     00D2  1283               	bcf	3,5	;RP0=0, select bank0
  7429     00D3  1303               	bcf	3,6	;RP1=0, select bank0
  7430     00D4  00AF               	movwf	?_sprintf+3
  7431     00D5  1683               	bsf	3,5	;RP0=1, select bank1
  7432     00D6  1303               	bcf	3,6	;RP1=0, select bank1
  7433     00D7  0864               	movf	main@saat^(0+128),w
  7434     00D8  1283               	bcf	3,5	;RP0=0, select bank0
  7435     00D9  1303               	bcf	3,6	;RP1=0, select bank0
  7436     00DA  00AE               	movwf	?_sprintf+2
  7437     00DB  1683               	bsf	3,5	;RP0=1, select bank1
  7438     00DC  1303               	bcf	3,6	;RP1=0, select bank1
  7439     00DD  0867               	movf	(main@dakika+1)^(0+128),w
  7440     00DE  1283               	bcf	3,5	;RP0=0, select bank0
  7441     00DF  1303               	bcf	3,6	;RP1=0, select bank0
  7442     00E0  00B1               	movwf	?_sprintf+5
  7443     00E1  1683               	bsf	3,5	;RP0=1, select bank1
  7444     00E2  1303               	bcf	3,6	;RP1=0, select bank1
  7445     00E3  0866               	movf	main@dakika^(0+128),w
  7446     00E4  1283               	bcf	3,5	;RP0=0, select bank0
  7447     00E5  1303               	bcf	3,6	;RP1=0, select bank0
  7448     00E6  00B0               	movwf	?_sprintf+4
  7449     00E7  30B4               	movlw	(low (main@lcdText| 0))& (0+255)
  7450     00E8  120A  158A  22C4  120A  118A  	fcall	_sprintf
  7451     00ED                     l3143:
  7452                           
  7453                           ;main1.c: 257:      Lcd_Set_Cursor(1, 10);
  7454     00ED  300A               	movlw	10
  7455     00EE  1283               	bcf	3,5	;RP0=0, select bank0
  7456     00EF  1303               	bcf	3,6	;RP1=0, select bank0
  7457     00F0  00A4               	movwf	Lcd_Set_Cursor@b
  7458     00F1  3001               	movlw	1
  7459     00F2  160A  118A  2440  120A  118A  	fcall	_Lcd_Set_Cursor
  7460     00F7                     l3145:
  7461                           
  7462                           ;main1.c: 258:      Lcd_Write_String("  ");
  7463     00F7  30D9               	movlw	low ((STR_18+12)| (0+32768))
  7464     00F8  1283               	bcf	3,5	;RP0=0, select bank0
  7465     00F9  1303               	bcf	3,6	;RP1=0, select bank0
  7466     00FA  00A5               	movwf	Lcd_Write_String@a
  7467     00FB  3090               	movlw	high ((STR_18+12)| (0+32768))
  7468     00FC  00A6               	movwf	Lcd_Write_String@a+1
  7469     00FD  160A  118A  23B3  120A  118A  	fcall	_Lcd_Write_String
  7470                           
  7471                           ;main1.c: 259:      Lcd_Set_Cursor(1, 11);
  7472     0102  300B               	movlw	11
  7473     0103  1283               	bcf	3,5	;RP0=0, select bank0
  7474     0104  1303               	bcf	3,6	;RP1=0, select bank0
  7475     0105  00A4               	movwf	Lcd_Set_Cursor@b
  7476     0106  3001               	movlw	1
  7477     0107  160A  118A  2440  120A  118A  	fcall	_Lcd_Set_Cursor
  7478     010C                     l3147:
  7479                           
  7480                           ;main1.c: 260:      Lcd_Write_String(lcdText);
  7481     010C  30B4               	movlw	(low (main@lcdText| 0))& (0+255)
  7482     010D  1283               	bcf	3,5	;RP0=0, select bank0
  7483     010E  1303               	bcf	3,6	;RP1=0, select bank0
  7484     010F  00A5               	movwf	Lcd_Write_String@a
  7485     0110  3000               	movlw	0
  7486     0111  00A6               	movwf	Lcd_Write_String@a+1
  7487     0112  160A  118A  23B3  120A  118A  	fcall	_Lcd_Write_String
  7488     0117                     l3149:
  7489                           
  7490                           ;main1.c: 264:     ADCON0bits.CHS = 0b0010;
  7491     0117  1283               	bcf	3,5	;RP0=0, select bank0
  7492     0118  1303               	bcf	3,6	;RP1=0, select bank0
  7493     0119  081F               	movf	31,w	;volatile
  7494     011A  39C7               	andlw	-57
  7495     011B  3810               	iorlw	16
  7496     011C  009F               	movwf	31	;volatile
  7497     011D                     l3151:
  7498                           
  7499                           ;main1.c: 265:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  7500     011D  300F               	movlw	15
  7501     011E  1283               	bcf	3,5	;RP0=0, select bank0
  7502     011F  1303               	bcf	3,6	;RP1=0, select bank0
  7503     0120  00D4               	movwf	??_main
  7504     0121                     u4447:
  7505     0121  0BD4               	decfsz	??_main,f
  7506     0122  2921               	goto	u4447
  7507     0123  2924               	nop2
  7508     0124                     l3153:
  7509                           
  7510                           ;main1.c: 266:     ADCON0bits.GO = 1;
  7511     0124  1283               	bcf	3,5	;RP0=0, select bank0
  7512     0125  1303               	bcf	3,6	;RP1=0, select bank0
  7513     0126  151F               	bsf	31,2	;volatile
  7514     0127                     l221:	
  7515                           ;main1.c: 267:     while (ADCON0bits.GO);
  7516                           
  7517     0127  191F               	btfsc	31,2	;volatile
  7518     0128  292A               	goto	u4081
  7519     0129  292B               	goto	u4080
  7520     012A                     u4081:
  7521     012A  2927               	goto	l221
  7522     012B                     u4080:
  7523     012B                     l3155:
  7524                           
  7525                           ;main1.c: 268:     adcValue3 = (ADRESH << 8) | ADRESL;
  7526     012B  1683               	bsf	3,5	;RP0=1, select bank1
  7527     012C  1303               	bcf	3,6	;RP1=0, select bank1
  7528     012D  081E               	movf	30,w	;volatile
  7529     012E  1283               	bcf	3,5	;RP0=0, select bank0
  7530     012F  1303               	bcf	3,6	;RP1=0, select bank0
  7531     0130  00D4               	movwf	??_main
  7532     0131  01D5               	clrf	??_main+1
  7533     0132  081E               	movf	30,w	;volatile
  7534     0133  00D6               	movwf	??_main+2
  7535     0134  01D7               	clrf	??_main+3
  7536     0135  0856               	movf	??_main+2,w
  7537     0136  00D7               	movwf	??_main+3
  7538     0137  01D6               	clrf	??_main+2
  7539     0138  0854               	movf	??_main,w
  7540     0139  0456               	iorwf	??_main+2,w
  7541     013A  00A0               	movwf	___xxtofl@val
  7542     013B  0855               	movf	??_main+1,w
  7543     013C  0457               	iorwf	??_main+3,w
  7544     013D  00A1               	movwf	___xxtofl@val+1
  7545     013E  01A2               	clrf	___xxtofl@val+2
  7546     013F  1BA1               	btfsc	___xxtofl@val+1,7
  7547     0140  03A2               	decf	___xxtofl@val+2,f
  7548     0141  0822               	movf	___xxtofl@val+2,w
  7549     0142  00A3               	movwf	___xxtofl@val+3
  7550     0143  3001               	movlw	1
  7551     0144  120A  158A  203B  120A  118A  	fcall	___xxtofl
  7552     0149  1283               	bcf	3,5	;RP0=0, select bank0
  7553     014A  1303               	bcf	3,6	;RP1=0, select bank0
  7554     014B  0823               	movf	?___xxtofl+3,w
  7555     014C  1683               	bsf	3,5	;RP0=1, select bank1
  7556     014D  1303               	bcf	3,6	;RP1=0, select bank1
  7557     014E  00D5               	movwf	(main@adcValue3+3)^(0+128)
  7558     014F  1283               	bcf	3,5	;RP0=0, select bank0
  7559     0150  1303               	bcf	3,6	;RP1=0, select bank0
  7560     0151  0822               	movf	?___xxtofl+2,w
  7561     0152  1683               	bsf	3,5	;RP0=1, select bank1
  7562     0153  1303               	bcf	3,6	;RP1=0, select bank1
  7563     0154  00D4               	movwf	(main@adcValue3+2)^(0+128)
  7564     0155  1283               	bcf	3,5	;RP0=0, select bank0
  7565     0156  1303               	bcf	3,6	;RP1=0, select bank0
  7566     0157  0821               	movf	?___xxtofl+1,w
  7567     0158  1683               	bsf	3,5	;RP0=1, select bank1
  7568     0159  1303               	bcf	3,6	;RP1=0, select bank1
  7569     015A  00D3               	movwf	(main@adcValue3+1)^(0+128)
  7570     015B  1283               	bcf	3,5	;RP0=0, select bank0
  7571     015C  1303               	bcf	3,6	;RP1=0, select bank0
  7572     015D  0820               	movf	?___xxtofl,w
  7573     015E  1683               	bsf	3,5	;RP0=1, select bank1
  7574     015F  1303               	bcf	3,6	;RP1=0, select bank1
  7575     0160  00D2               	movwf	main@adcValue3^(0+128)
  7576                           
  7577                           ;main1.c: 269:     float oranValue = adcValue3/1024.0;
  7578     0161  3044               	movlw	68
  7579     0162  1283               	bcf	3,5	;RP0=0, select bank0
  7580     0163  1303               	bcf	3,6	;RP1=0, select bank0
  7581     0164  00A3               	movwf	___fldiv@a+3
  7582     0165  3080               	movlw	128
  7583     0166  00A2               	movwf	___fldiv@a+2
  7584     0167  3000               	movlw	0
  7585     0168  00A1               	movwf	___fldiv@a+1
  7586     0169  3000               	movlw	0
  7587     016A  00A0               	movwf	___fldiv@a
  7588     016B  1683               	bsf	3,5	;RP0=1, select bank1
  7589     016C  1303               	bcf	3,6	;RP1=0, select bank1
  7590     016D  0855               	movf	(main@adcValue3+3)^(0+128),w
  7591     016E  1283               	bcf	3,5	;RP0=0, select bank0
  7592     016F  1303               	bcf	3,6	;RP1=0, select bank0
  7593     0170  00A7               	movwf	___fldiv@b+3
  7594     0171  1683               	bsf	3,5	;RP0=1, select bank1
  7595     0172  1303               	bcf	3,6	;RP1=0, select bank1
  7596     0173  0854               	movf	(main@adcValue3+2)^(0+128),w
  7597     0174  1283               	bcf	3,5	;RP0=0, select bank0
  7598     0175  1303               	bcf	3,6	;RP1=0, select bank0
  7599     0176  00A6               	movwf	___fldiv@b+2
  7600     0177  1683               	bsf	3,5	;RP0=1, select bank1
  7601     0178  1303               	bcf	3,6	;RP1=0, select bank1
  7602     0179  0853               	movf	(main@adcValue3+1)^(0+128),w
  7603     017A  1283               	bcf	3,5	;RP0=0, select bank0
  7604     017B  1303               	bcf	3,6	;RP1=0, select bank0
  7605     017C  00A5               	movwf	___fldiv@b+1
  7606     017D  1683               	bsf	3,5	;RP0=1, select bank1
  7607     017E  1303               	bcf	3,6	;RP1=0, select bank1
  7608     017F  0852               	movf	main@adcValue3^(0+128),w
  7609     0180  1283               	bcf	3,5	;RP0=0, select bank0
  7610     0181  1303               	bcf	3,6	;RP1=0, select bank0
  7611     0182  00A4               	movwf	___fldiv@b
  7612     0183  120A  158A  20F5  120A  118A  	fcall	___fldiv
  7613     0188  1283               	bcf	3,5	;RP0=0, select bank0
  7614     0189  1303               	bcf	3,6	;RP1=0, select bank0
  7615     018A  0823               	movf	?___fldiv+3,w
  7616     018B  1683               	bsf	3,5	;RP0=1, select bank1
  7617     018C  1303               	bcf	3,6	;RP1=0, select bank1
  7618     018D  00D9               	movwf	(main@oranValue+3)^(0+128)
  7619     018E  1283               	bcf	3,5	;RP0=0, select bank0
  7620     018F  1303               	bcf	3,6	;RP1=0, select bank0
  7621     0190  0822               	movf	?___fldiv+2,w
  7622     0191  1683               	bsf	3,5	;RP0=1, select bank1
  7623     0192  1303               	bcf	3,6	;RP1=0, select bank1
  7624     0193  00D8               	movwf	(main@oranValue+2)^(0+128)
  7625     0194  1283               	bcf	3,5	;RP0=0, select bank0
  7626     0195  1303               	bcf	3,6	;RP1=0, select bank0
  7627     0196  0821               	movf	?___fldiv+1,w
  7628     0197  1683               	bsf	3,5	;RP0=1, select bank1
  7629     0198  1303               	bcf	3,6	;RP1=0, select bank1
  7630     0199  00D7               	movwf	(main@oranValue+1)^(0+128)
  7631     019A  1283               	bcf	3,5	;RP0=0, select bank0
  7632     019B  1303               	bcf	3,6	;RP1=0, select bank0
  7633     019C  0820               	movf	?___fldiv,w
  7634     019D  1683               	bsf	3,5	;RP0=1, select bank1
  7635     019E  1303               	bcf	3,6	;RP1=0, select bank1
  7636     019F  00D6               	movwf	main@oranValue^(0+128)
  7637     01A0                     l3157:
  7638                           
  7639                           ;main1.c: 272:     ADCON0bits.CHS = 0b0011;
  7640     01A0  1283               	bcf	3,5	;RP0=0, select bank0
  7641     01A1  1303               	bcf	3,6	;RP1=0, select bank0
  7642     01A2  081F               	movf	31,w	;volatile
  7643     01A3  39C7               	andlw	-57
  7644     01A4  3818               	iorlw	24
  7645     01A5  009F               	movwf	31	;volatile
  7646     01A6                     l3159:
  7647                           
  7648                           ;main1.c: 273:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  7649     01A6  300F               	movlw	15
  7650     01A7  1283               	bcf	3,5	;RP0=0, select bank0
  7651     01A8  1303               	bcf	3,6	;RP1=0, select bank0
  7652     01A9  00D4               	movwf	??_main
  7653     01AA                     u4457:
  7654     01AA  0BD4               	decfsz	??_main,f
  7655     01AB  29AA               	goto	u4457
  7656     01AC  29AD               	nop2
  7657     01AD                     l3161:
  7658                           
  7659                           ;main1.c: 274:     ADCON0bits.GO = 1;
  7660     01AD  1283               	bcf	3,5	;RP0=0, select bank0
  7661     01AE  1303               	bcf	3,6	;RP1=0, select bank0
  7662     01AF  151F               	bsf	31,2	;volatile
  7663     01B0                     l224:	
  7664                           ;main1.c: 275:     while (ADCON0bits.GO);
  7665                           
  7666     01B0  191F               	btfsc	31,2	;volatile
  7667     01B1  29B3               	goto	u4091
  7668     01B2  29B4               	goto	u4090
  7669     01B3                     u4091:
  7670     01B3  29B0               	goto	l224
  7671     01B4                     u4090:
  7672     01B4                     l3163:
  7673                           
  7674                           ;main1.c: 276:     adcValue2 = (ADRESH << 8) | ADRESL;
  7675     01B4  081E               	movf	30,w	;volatile
  7676     01B5  1683               	bsf	3,5	;RP0=1, select bank1
  7677     01B6  1303               	bcf	3,6	;RP1=0, select bank1
  7678     01B7  00E3               	movwf	(main@adcValue2+1)^(0+128)
  7679     01B8  081E               	movf	30,w	;volatile
  7680     01B9  00E2               	movwf	main@adcValue2^(0+128)
  7681     01BA                     l3165:
  7682                           
  7683                           ;main1.c: 278:     float integerPart = adcValue2*oranValue*3;
  7684     01BA  0859               	movf	(main@oranValue+3)^(0+128),w
  7685     01BB  1283               	bcf	3,5	;RP0=0, select bank0
  7686     01BC  1303               	bcf	3,6	;RP1=0, select bank0
  7687     01BD  00BD               	movwf	___flmul@b+3
  7688     01BE  1683               	bsf	3,5	;RP0=1, select bank1
  7689     01BF  1303               	bcf	3,6	;RP1=0, select bank1
  7690     01C0  0858               	movf	(main@oranValue+2)^(0+128),w
  7691     01C1  1283               	bcf	3,5	;RP0=0, select bank0
  7692     01C2  1303               	bcf	3,6	;RP1=0, select bank0
  7693     01C3  00BC               	movwf	___flmul@b+2
  7694     01C4  1683               	bsf	3,5	;RP0=1, select bank1
  7695     01C5  1303               	bcf	3,6	;RP1=0, select bank1
  7696     01C6  0857               	movf	(main@oranValue+1)^(0+128),w
  7697     01C7  1283               	bcf	3,5	;RP0=0, select bank0
  7698     01C8  1303               	bcf	3,6	;RP1=0, select bank0
  7699     01C9  00BB               	movwf	___flmul@b+1
  7700     01CA  1683               	bsf	3,5	;RP0=1, select bank1
  7701     01CB  1303               	bcf	3,6	;RP1=0, select bank1
  7702     01CC  0856               	movf	main@oranValue^(0+128),w
  7703     01CD  1283               	bcf	3,5	;RP0=0, select bank0
  7704     01CE  1303               	bcf	3,6	;RP1=0, select bank0
  7705     01CF  00BA               	movwf	___flmul@b
  7706     01D0  1683               	bsf	3,5	;RP0=1, select bank1
  7707     01D1  1303               	bcf	3,6	;RP1=0, select bank1
  7708     01D2  0862               	movf	main@adcValue2^(0+128),w
  7709     01D3  1283               	bcf	3,5	;RP0=0, select bank0
  7710     01D4  1303               	bcf	3,6	;RP1=0, select bank0
  7711     01D5  00A0               	movwf	___xxtofl@val
  7712     01D6  1683               	bsf	3,5	;RP0=1, select bank1
  7713     01D7  1303               	bcf	3,6	;RP1=0, select bank1
  7714     01D8  0863               	movf	(main@adcValue2+1)^(0+128),w
  7715     01D9  1283               	bcf	3,5	;RP0=0, select bank0
  7716     01DA  1303               	bcf	3,6	;RP1=0, select bank0
  7717     01DB  00A1               	movwf	___xxtofl@val+1
  7718     01DC  3000               	movlw	0
  7719     01DD  1BA1               	btfsc	___xxtofl@val+1,7
  7720     01DE  30FF               	movlw	255
  7721     01DF  00A2               	movwf	___xxtofl@val+2
  7722     01E0  00A3               	movwf	___xxtofl@val+3
  7723     01E1  3001               	movlw	1
  7724     01E2  120A  158A  203B  120A  118A  	fcall	___xxtofl
  7725     01E7  1283               	bcf	3,5	;RP0=0, select bank0
  7726     01E8  1303               	bcf	3,6	;RP1=0, select bank0
  7727     01E9  0823               	movf	?___xxtofl+3,w
  7728     01EA  00C1               	movwf	___flmul@a+3
  7729     01EB  0822               	movf	?___xxtofl+2,w
  7730     01EC  00C0               	movwf	___flmul@a+2
  7731     01ED  0821               	movf	?___xxtofl+1,w
  7732     01EE  00BF               	movwf	___flmul@a+1
  7733     01EF  0820               	movf	?___xxtofl,w
  7734     01F0  00BE               	movwf	___flmul@a
  7735     01F1  120A  158A  24BB  120A  118A  	fcall	___flmul
  7736     01F6  1283               	bcf	3,5	;RP0=0, select bank0
  7737     01F7  1303               	bcf	3,6	;RP1=0, select bank0
  7738     01F8  083D               	movf	?___flmul+3,w
  7739     01F9  1683               	bsf	3,5	;RP0=1, select bank1
  7740     01FA  1303               	bcf	3,6	;RP1=0, select bank1
  7741     01FB  00E1               	movwf	(_main$1028+3)^(0+128)
  7742     01FC  1283               	bcf	3,5	;RP0=0, select bank0
  7743     01FD  1303               	bcf	3,6	;RP1=0, select bank0
  7744     01FE  083C               	movf	?___flmul+2,w
  7745     01FF  1683               	bsf	3,5	;RP0=1, select bank1
  7746     0200  1303               	bcf	3,6	;RP1=0, select bank1
  7747     0201  00E0               	movwf	(_main$1028+2)^(0+128)
  7748     0202  1283               	bcf	3,5	;RP0=0, select bank0
  7749     0203  1303               	bcf	3,6	;RP1=0, select bank0
  7750     0204  083B               	movf	?___flmul+1,w
  7751     0205  1683               	bsf	3,5	;RP0=1, select bank1
  7752     0206  1303               	bcf	3,6	;RP1=0, select bank1
  7753     0207  00DF               	movwf	(_main$1028+1)^(0+128)
  7754     0208  1283               	bcf	3,5	;RP0=0, select bank0
  7755     0209  1303               	bcf	3,6	;RP1=0, select bank0
  7756     020A  083A               	movf	?___flmul,w
  7757     020B  1683               	bsf	3,5	;RP0=1, select bank1
  7758     020C  1303               	bcf	3,6	;RP1=0, select bank1
  7759     020D  00DE               	movwf	_main$1028^(0+128)
  7760     020E                     l3167:
  7761                           
  7762                           ;main1.c: 278:     float integerPart = adcValue2*oranValue*3;
  7763     020E  3040               	movlw	64
  7764     020F  1283               	bcf	3,5	;RP0=0, select bank0
  7765     0210  1303               	bcf	3,6	;RP1=0, select bank0
  7766     0211  00BD               	movwf	___flmul@b+3
  7767     0212  3040               	movlw	64
  7768     0213  00BC               	movwf	___flmul@b+2
  7769     0214  3000               	movlw	0
  7770     0215  00BB               	movwf	___flmul@b+1
  7771     0216  3000               	movlw	0
  7772     0217  00BA               	movwf	___flmul@b
  7773     0218  1683               	bsf	3,5	;RP0=1, select bank1
  7774     0219  1303               	bcf	3,6	;RP1=0, select bank1
  7775     021A  0861               	movf	(_main$1028+3)^(0+128),w
  7776     021B  1283               	bcf	3,5	;RP0=0, select bank0
  7777     021C  1303               	bcf	3,6	;RP1=0, select bank0
  7778     021D  00C1               	movwf	___flmul@a+3
  7779     021E  1683               	bsf	3,5	;RP0=1, select bank1
  7780     021F  1303               	bcf	3,6	;RP1=0, select bank1
  7781     0220  0860               	movf	(_main$1028+2)^(0+128),w
  7782     0221  1283               	bcf	3,5	;RP0=0, select bank0
  7783     0222  1303               	bcf	3,6	;RP1=0, select bank0
  7784     0223  00C0               	movwf	___flmul@a+2
  7785     0224  1683               	bsf	3,5	;RP0=1, select bank1
  7786     0225  1303               	bcf	3,6	;RP1=0, select bank1
  7787     0226  085F               	movf	(_main$1028+1)^(0+128),w
  7788     0227  1283               	bcf	3,5	;RP0=0, select bank0
  7789     0228  1303               	bcf	3,6	;RP1=0, select bank0
  7790     0229  00BF               	movwf	___flmul@a+1
  7791     022A  1683               	bsf	3,5	;RP0=1, select bank1
  7792     022B  1303               	bcf	3,6	;RP1=0, select bank1
  7793     022C  085E               	movf	_main$1028^(0+128),w
  7794     022D  1283               	bcf	3,5	;RP0=0, select bank0
  7795     022E  1303               	bcf	3,6	;RP1=0, select bank0
  7796     022F  00BE               	movwf	___flmul@a
  7797     0230  120A  158A  24BB  120A  118A  	fcall	___flmul
  7798     0235  1283               	bcf	3,5	;RP0=0, select bank0
  7799     0236  1303               	bcf	3,6	;RP1=0, select bank0
  7800     0237  083D               	movf	?___flmul+3,w
  7801     0238  1683               	bsf	3,5	;RP0=1, select bank3
  7802     0239  1703               	bsf	3,6	;RP1=1, select bank3
  7803     023A  009F               	movwf	(main@integerPart+3)^(0+384)
  7804     023B  1283               	bcf	3,5	;RP0=0, select bank0
  7805     023C  1303               	bcf	3,6	;RP1=0, select bank0
  7806     023D  083C               	movf	?___flmul+2,w
  7807     023E  1683               	bsf	3,5	;RP0=1, select bank3
  7808     023F  1703               	bsf	3,6	;RP1=1, select bank3
  7809     0240  009E               	movwf	(main@integerPart+2)^(0+384)
  7810     0241  1283               	bcf	3,5	;RP0=0, select bank0
  7811     0242  1303               	bcf	3,6	;RP1=0, select bank0
  7812     0243  083B               	movf	?___flmul+1,w
  7813     0244  1683               	bsf	3,5	;RP0=1, select bank3
  7814     0245  1703               	bsf	3,6	;RP1=1, select bank3
  7815     0246  009D               	movwf	(main@integerPart+1)^(0+384)
  7816     0247  1283               	bcf	3,5	;RP0=0, select bank0
  7817     0248  1303               	bcf	3,6	;RP1=0, select bank0
  7818     0249  083A               	movf	?___flmul,w
  7819     024A  1683               	bsf	3,5	;RP0=1, select bank3
  7820     024B  1703               	bsf	3,6	;RP1=1, select bank3
  7821     024C  009C               	movwf	main@integerPart^(0+384)
  7822     024D                     l3169:
  7823                           
  7824                           ;main1.c: 280:     int binler = (int)integerPart/1000;
  7825     024D  30E8               	movlw	232
  7826     024E  1283               	bcf	3,5	;RP0=0, select bank0
  7827     024F  1303               	bcf	3,6	;RP1=0, select bank0
  7828     0250  00AA               	movwf	___awdiv@divisor
  7829     0251  3003               	movlw	3
  7830     0252  00AB               	movwf	___awdiv@divisor+1
  7831     0253  1683               	bsf	3,5	;RP0=1, select bank3
  7832     0254  1703               	bsf	3,6	;RP1=1, select bank3
  7833     0255  081F               	movf	(main@integerPart+3)^(0+384),w
  7834     0256  1283               	bcf	3,5	;RP0=0, select bank0
  7835     0257  1303               	bcf	3,6	;RP1=0, select bank0
  7836     0258  00A3               	movwf	___fltol@f1+3
  7837     0259  1683               	bsf	3,5	;RP0=1, select bank3
  7838     025A  1703               	bsf	3,6	;RP1=1, select bank3
  7839     025B  081E               	movf	(main@integerPart+2)^(0+384),w
  7840     025C  1283               	bcf	3,5	;RP0=0, select bank0
  7841     025D  1303               	bcf	3,6	;RP1=0, select bank0
  7842     025E  00A2               	movwf	___fltol@f1+2
  7843     025F  1683               	bsf	3,5	;RP0=1, select bank3
  7844     0260  1703               	bsf	3,6	;RP1=1, select bank3
  7845     0261  081D               	movf	(main@integerPart+1)^(0+384),w
  7846     0262  1283               	bcf	3,5	;RP0=0, select bank0
  7847     0263  1303               	bcf	3,6	;RP1=0, select bank0
  7848     0264  00A1               	movwf	___fltol@f1+1
  7849     0265  1683               	bsf	3,5	;RP0=1, select bank3
  7850     0266  1703               	bsf	3,6	;RP1=1, select bank3
  7851     0267  081C               	movf	main@integerPart^(0+384),w
  7852     0268  1283               	bcf	3,5	;RP0=0, select bank0
  7853     0269  1303               	bcf	3,6	;RP1=0, select bank0
  7854     026A  00A0               	movwf	___fltol@f1
  7855     026B  160A  118A  2666  120A  118A  	fcall	___fltol
  7856     0270  1283               	bcf	3,5	;RP0=0, select bank0
  7857     0271  1303               	bcf	3,6	;RP1=0, select bank0
  7858     0272  0821               	movf	?___fltol+1,w
  7859     0273  00AD               	movwf	___awdiv@dividend+1
  7860     0274  0820               	movf	?___fltol,w
  7861     0275  00AC               	movwf	___awdiv@dividend
  7862     0276  160A  118A  25FD  120A  118A  	fcall	___awdiv
  7863     027B  1283               	bcf	3,5	;RP0=0, select bank0
  7864     027C  1303               	bcf	3,6	;RP1=0, select bank0
  7865     027D  082B               	movf	?___awdiv+1,w
  7866     027E  1683               	bsf	3,5	;RP0=1, select bank3
  7867     027F  1703               	bsf	3,6	;RP1=1, select bank3
  7868     0280  009B               	movwf	(main@binler+1)^(0+384)
  7869     0281  1283               	bcf	3,5	;RP0=0, select bank0
  7870     0282  1303               	bcf	3,6	;RP1=0, select bank0
  7871     0283  082A               	movf	?___awdiv,w
  7872     0284  1683               	bsf	3,5	;RP0=1, select bank3
  7873     0285  1703               	bsf	3,6	;RP1=1, select bank3
  7874     0286  009A               	movwf	main@binler^(0+384)
  7875     0287                     l3171:
  7876                           
  7877                           ;main1.c: 281:     int yuzler = ((int)integerPart-binler*1000)/100;
  7878     0287  3064               	movlw	100
  7879     0288  1283               	bcf	3,5	;RP0=0, select bank0
  7880     0289  1303               	bcf	3,6	;RP1=0, select bank0
  7881     028A  00AA               	movwf	___awdiv@divisor
  7882     028B  3000               	movlw	0
  7883     028C  00AB               	movwf	___awdiv@divisor+1
  7884     028D  1683               	bsf	3,5	;RP0=1, select bank3
  7885     028E  1703               	bsf	3,6	;RP1=1, select bank3
  7886     028F  081F               	movf	(main@integerPart+3)^(0+384),w
  7887     0290  1283               	bcf	3,5	;RP0=0, select bank0
  7888     0291  1303               	bcf	3,6	;RP1=0, select bank0
  7889     0292  00A3               	movwf	___fltol@f1+3
  7890     0293  1683               	bsf	3,5	;RP0=1, select bank3
  7891     0294  1703               	bsf	3,6	;RP1=1, select bank3
  7892     0295  081E               	movf	(main@integerPart+2)^(0+384),w
  7893     0296  1283               	bcf	3,5	;RP0=0, select bank0
  7894     0297  1303               	bcf	3,6	;RP1=0, select bank0
  7895     0298  00A2               	movwf	___fltol@f1+2
  7896     0299  1683               	bsf	3,5	;RP0=1, select bank3
  7897     029A  1703               	bsf	3,6	;RP1=1, select bank3
  7898     029B  081D               	movf	(main@integerPart+1)^(0+384),w
  7899     029C  1283               	bcf	3,5	;RP0=0, select bank0
  7900     029D  1303               	bcf	3,6	;RP1=0, select bank0
  7901     029E  00A1               	movwf	___fltol@f1+1
  7902     029F  1683               	bsf	3,5	;RP0=1, select bank3
  7903     02A0  1703               	bsf	3,6	;RP1=1, select bank3
  7904     02A1  081C               	movf	main@integerPart^(0+384),w
  7905     02A2  1283               	bcf	3,5	;RP0=0, select bank0
  7906     02A3  1303               	bcf	3,6	;RP1=0, select bank0
  7907     02A4  00A0               	movwf	___fltol@f1
  7908     02A5  160A  118A  2666  120A  118A  	fcall	___fltol
  7909     02AA  1283               	bcf	3,5	;RP0=0, select bank0
  7910     02AB  1303               	bcf	3,6	;RP1=0, select bank0
  7911     02AC  0820               	movf	?___fltol,w
  7912     02AD  00D4               	movwf	??_main
  7913     02AE  0821               	movf	?___fltol+1,w
  7914     02AF  00D5               	movwf	??_main+1
  7915     02B0  0822               	movf	?___fltol+2,w
  7916     02B1  00D6               	movwf	??_main+2
  7917     02B2  0823               	movf	?___fltol+3,w
  7918     02B3  00D7               	movwf	??_main+3
  7919     02B4  1683               	bsf	3,5	;RP0=1, select bank3
  7920     02B5  1703               	bsf	3,6	;RP1=1, select bank3
  7921     02B6  081B               	movf	(main@binler+1)^(0+384),w
  7922     02B7  1283               	bcf	3,5	;RP0=0, select bank0
  7923     02B8  1303               	bcf	3,6	;RP1=0, select bank0
  7924     02B9  00A1               	movwf	___wmul@multiplier+1
  7925     02BA  1683               	bsf	3,5	;RP0=1, select bank3
  7926     02BB  1703               	bsf	3,6	;RP1=1, select bank3
  7927     02BC  081A               	movf	main@binler^(0+384),w
  7928     02BD  1283               	bcf	3,5	;RP0=0, select bank0
  7929     02BE  1303               	bcf	3,6	;RP1=0, select bank0
  7930     02BF  00A0               	movwf	___wmul@multiplier
  7931     02C0  3018               	movlw	24
  7932     02C1  00A2               	movwf	___wmul@multiplicand
  7933     02C2  30FC               	movlw	252
  7934     02C3  00A3               	movwf	___wmul@multiplicand+1
  7935     02C4  160A  118A  229B  120A  118A  	fcall	___wmul
  7936     02C9  1283               	bcf	3,5	;RP0=0, select bank0
  7937     02CA  1303               	bcf	3,6	;RP1=0, select bank0
  7938     02CB  0820               	movf	?___wmul,w
  7939     02CC  0754               	addwf	??_main,w
  7940     02CD  00AC               	movwf	___awdiv@dividend
  7941     02CE  0821               	movf	?___wmul+1,w
  7942     02CF  1803               	skipnc
  7943     02D0  0A21               	incf	?___wmul+1,w
  7944     02D1  0755               	addwf	??_main+1,w
  7945     02D2  00AD               	movwf	___awdiv@dividend+1
  7946     02D3  160A  118A  25FD  120A  118A  	fcall	___awdiv
  7947     02D8  1283               	bcf	3,5	;RP0=0, select bank0
  7948     02D9  1303               	bcf	3,6	;RP1=0, select bank0
  7949     02DA  082B               	movf	?___awdiv+1,w
  7950     02DB  1683               	bsf	3,5	;RP0=1, select bank3
  7951     02DC  1703               	bsf	3,6	;RP1=1, select bank3
  7952     02DD  0099               	movwf	(main@yuzler+1)^(0+384)
  7953     02DE  1283               	bcf	3,5	;RP0=0, select bank0
  7954     02DF  1303               	bcf	3,6	;RP1=0, select bank0
  7955     02E0  082A               	movf	?___awdiv,w
  7956     02E1  1683               	bsf	3,5	;RP0=1, select bank3
  7957     02E2  1703               	bsf	3,6	;RP1=1, select bank3
  7958     02E3  0098               	movwf	main@yuzler^(0+384)
  7959     02E4                     l3173:
  7960                           
  7961                           ;main1.c: 282:     int onlar = ((int)integerPart-binler*1000-yuzler*100)/10;
  7962     02E4  300A               	movlw	10
  7963     02E5  1283               	bcf	3,5	;RP0=0, select bank0
  7964     02E6  1303               	bcf	3,6	;RP1=0, select bank0
  7965     02E7  00AA               	movwf	___awdiv@divisor
  7966     02E8  3000               	movlw	0
  7967     02E9  00AB               	movwf	___awdiv@divisor+1
  7968     02EA  1683               	bsf	3,5	;RP0=1, select bank3
  7969     02EB  1703               	bsf	3,6	;RP1=1, select bank3
  7970     02EC  081F               	movf	(main@integerPart+3)^(0+384),w
  7971     02ED  1283               	bcf	3,5	;RP0=0, select bank0
  7972     02EE  1303               	bcf	3,6	;RP1=0, select bank0
  7973     02EF  00A3               	movwf	___fltol@f1+3
  7974     02F0  1683               	bsf	3,5	;RP0=1, select bank3
  7975     02F1  1703               	bsf	3,6	;RP1=1, select bank3
  7976     02F2  081E               	movf	(main@integerPart+2)^(0+384),w
  7977     02F3  1283               	bcf	3,5	;RP0=0, select bank0
  7978     02F4  1303               	bcf	3,6	;RP1=0, select bank0
  7979     02F5  00A2               	movwf	___fltol@f1+2
  7980     02F6  1683               	bsf	3,5	;RP0=1, select bank3
  7981     02F7  1703               	bsf	3,6	;RP1=1, select bank3
  7982     02F8  081D               	movf	(main@integerPart+1)^(0+384),w
  7983     02F9  1283               	bcf	3,5	;RP0=0, select bank0
  7984     02FA  1303               	bcf	3,6	;RP1=0, select bank0
  7985     02FB  00A1               	movwf	___fltol@f1+1
  7986     02FC  1683               	bsf	3,5	;RP0=1, select bank3
  7987     02FD  1703               	bsf	3,6	;RP1=1, select bank3
  7988     02FE  081C               	movf	main@integerPart^(0+384),w
  7989     02FF  1283               	bcf	3,5	;RP0=0, select bank0
  7990     0300  1303               	bcf	3,6	;RP1=0, select bank0
  7991     0301  00A0               	movwf	___fltol@f1
  7992     0302  160A  118A  2666  120A  118A  	fcall	___fltol
  7993     0307  1283               	bcf	3,5	;RP0=0, select bank0
  7994     0308  1303               	bcf	3,6	;RP1=0, select bank0
  7995     0309  0820               	movf	?___fltol,w
  7996     030A  00D4               	movwf	??_main
  7997     030B  0821               	movf	?___fltol+1,w
  7998     030C  00D5               	movwf	??_main+1
  7999     030D  0822               	movf	?___fltol+2,w
  8000     030E  00D6               	movwf	??_main+2
  8001     030F  0823               	movf	?___fltol+3,w
  8002     0310  00D7               	movwf	??_main+3
  8003     0311  1683               	bsf	3,5	;RP0=1, select bank3
  8004     0312  1703               	bsf	3,6	;RP1=1, select bank3
  8005     0313  081B               	movf	(main@binler+1)^(0+384),w
  8006     0314  1283               	bcf	3,5	;RP0=0, select bank0
  8007     0315  1303               	bcf	3,6	;RP1=0, select bank0
  8008     0316  00A1               	movwf	___wmul@multiplier+1
  8009     0317  1683               	bsf	3,5	;RP0=1, select bank3
  8010     0318  1703               	bsf	3,6	;RP1=1, select bank3
  8011     0319  081A               	movf	main@binler^(0+384),w
  8012     031A  1283               	bcf	3,5	;RP0=0, select bank0
  8013     031B  1303               	bcf	3,6	;RP1=0, select bank0
  8014     031C  00A0               	movwf	___wmul@multiplier
  8015     031D  3018               	movlw	24
  8016     031E  00A2               	movwf	___wmul@multiplicand
  8017     031F  30FC               	movlw	252
  8018     0320  00A3               	movwf	___wmul@multiplicand+1
  8019     0321  160A  118A  229B  120A  118A  	fcall	___wmul
  8020     0326  1283               	bcf	3,5	;RP0=0, select bank0
  8021     0327  1303               	bcf	3,6	;RP1=0, select bank0
  8022     0328  0820               	movf	?___wmul,w
  8023     0329  0754               	addwf	??_main,w
  8024     032A  00D8               	movwf	??_main+4
  8025     032B  0821               	movf	?___wmul+1,w
  8026     032C  1803               	skipnc
  8027     032D  0A21               	incf	?___wmul+1,w
  8028     032E  0755               	addwf	??_main+1,w
  8029     032F  00D9               	movwf	??_main+5
  8030     0330  1683               	bsf	3,5	;RP0=1, select bank3
  8031     0331  1703               	bsf	3,6	;RP1=1, select bank3
  8032     0332  0819               	movf	(main@yuzler+1)^(0+384),w
  8033     0333  1283               	bcf	3,5	;RP0=0, select bank0
  8034     0334  1303               	bcf	3,6	;RP1=0, select bank0
  8035     0335  00A1               	movwf	___wmul@multiplier+1
  8036     0336  1683               	bsf	3,5	;RP0=1, select bank3
  8037     0337  1703               	bsf	3,6	;RP1=1, select bank3
  8038     0338  0818               	movf	main@yuzler^(0+384),w
  8039     0339  1283               	bcf	3,5	;RP0=0, select bank0
  8040     033A  1303               	bcf	3,6	;RP1=0, select bank0
  8041     033B  00A0               	movwf	___wmul@multiplier
  8042     033C  309C               	movlw	156
  8043     033D  00A2               	movwf	___wmul@multiplicand
  8044     033E  30FF               	movlw	255
  8045     033F  00A3               	movwf	___wmul@multiplicand+1
  8046     0340  160A  118A  229B  120A  118A  	fcall	___wmul
  8047     0345  1283               	bcf	3,5	;RP0=0, select bank0
  8048     0346  1303               	bcf	3,6	;RP1=0, select bank0
  8049     0347  0820               	movf	?___wmul,w
  8050     0348  0758               	addwf	??_main+4,w
  8051     0349  00AC               	movwf	___awdiv@dividend
  8052     034A  0821               	movf	?___wmul+1,w
  8053     034B  1803               	skipnc
  8054     034C  0A21               	incf	?___wmul+1,w
  8055     034D  0759               	addwf	??_main+5,w
  8056     034E  00AD               	movwf	___awdiv@dividend+1
  8057     034F  160A  118A  25FD  120A  118A  	fcall	___awdiv
  8058     0354  1283               	bcf	3,5	;RP0=0, select bank0
  8059     0355  1303               	bcf	3,6	;RP1=0, select bank0
  8060     0356  082B               	movf	?___awdiv+1,w
  8061     0357  1683               	bsf	3,5	;RP0=1, select bank1
  8062     0358  1303               	bcf	3,6	;RP1=0, select bank1
  8063     0359  00E9               	movwf	(main@onlar+1)^(0+128)
  8064     035A  1283               	bcf	3,5	;RP0=0, select bank0
  8065     035B  1303               	bcf	3,6	;RP1=0, select bank0
  8066     035C  082A               	movf	?___awdiv,w
  8067     035D  1683               	bsf	3,5	;RP0=1, select bank1
  8068     035E  1303               	bcf	3,6	;RP1=0, select bank1
  8069     035F  00E8               	movwf	main@onlar^(0+128)
  8070     0360                     l3175:
  8071                           
  8072                           ;main1.c: 283:     int birler = (int)integerPart%10;
  8073     0360  300A               	movlw	10
  8074     0361  1283               	bcf	3,5	;RP0=0, select bank0
  8075     0362  1303               	bcf	3,6	;RP1=0, select bank0
  8076     0363  00AA               	movwf	___awmod@divisor
  8077     0364  3000               	movlw	0
  8078     0365  00AB               	movwf	___awmod@divisor+1
  8079     0366  1683               	bsf	3,5	;RP0=1, select bank3
  8080     0367  1703               	bsf	3,6	;RP1=1, select bank3
  8081     0368  081F               	movf	(main@integerPart+3)^(0+384),w
  8082     0369  1283               	bcf	3,5	;RP0=0, select bank0
  8083     036A  1303               	bcf	3,6	;RP1=0, select bank0
  8084     036B  00A3               	movwf	___fltol@f1+3
  8085     036C  1683               	bsf	3,5	;RP0=1, select bank3
  8086     036D  1703               	bsf	3,6	;RP1=1, select bank3
  8087     036E  081E               	movf	(main@integerPart+2)^(0+384),w
  8088     036F  1283               	bcf	3,5	;RP0=0, select bank0
  8089     0370  1303               	bcf	3,6	;RP1=0, select bank0
  8090     0371  00A2               	movwf	___fltol@f1+2
  8091     0372  1683               	bsf	3,5	;RP0=1, select bank3
  8092     0373  1703               	bsf	3,6	;RP1=1, select bank3
  8093     0374  081D               	movf	(main@integerPart+1)^(0+384),w
  8094     0375  1283               	bcf	3,5	;RP0=0, select bank0
  8095     0376  1303               	bcf	3,6	;RP1=0, select bank0
  8096     0377  00A1               	movwf	___fltol@f1+1
  8097     0378  1683               	bsf	3,5	;RP0=1, select bank3
  8098     0379  1703               	bsf	3,6	;RP1=1, select bank3
  8099     037A  081C               	movf	main@integerPart^(0+384),w
  8100     037B  1283               	bcf	3,5	;RP0=0, select bank0
  8101     037C  1303               	bcf	3,6	;RP1=0, select bank0
  8102     037D  00A0               	movwf	___fltol@f1
  8103     037E  160A  118A  2666  120A  118A  	fcall	___fltol
  8104     0383  1283               	bcf	3,5	;RP0=0, select bank0
  8105     0384  1303               	bcf	3,6	;RP1=0, select bank0
  8106     0385  0821               	movf	?___fltol+1,w
  8107     0386  00AD               	movwf	___awmod@dividend+1
  8108     0387  0820               	movf	?___fltol,w
  8109     0388  00AC               	movwf	___awmod@dividend
  8110     0389  160A  118A  24DE  120A  118A  	fcall	___awmod
  8111     038E  1283               	bcf	3,5	;RP0=0, select bank0
  8112     038F  1303               	bcf	3,6	;RP1=0, select bank0
  8113     0390  082B               	movf	?___awmod+1,w
  8114     0391  1683               	bsf	3,5	;RP0=1, select bank1
  8115     0392  1303               	bcf	3,6	;RP1=0, select bank1
  8116     0393  00EB               	movwf	(main@birler+1)^(0+128)
  8117     0394  1283               	bcf	3,5	;RP0=0, select bank0
  8118     0395  1303               	bcf	3,6	;RP1=0, select bank0
  8119     0396  082A               	movf	?___awmod,w
  8120     0397  1683               	bsf	3,5	;RP0=1, select bank1
  8121     0398  1303               	bcf	3,6	;RP1=0, select bank1
  8122     0399  00EA               	movwf	main@birler^(0+128)
  8123     039A                     l3177:
  8124                           
  8125                           ;main1.c: 289:         ADCON0bits.CHS = 0b0001;
  8126     039A  1283               	bcf	3,5	;RP0=0, select bank0
  8127     039B  1303               	bcf	3,6	;RP1=0, select bank0
  8128     039C  081F               	movf	31,w	;volatile
  8129     039D  39C7               	andlw	-57
  8130     039E  3808               	iorlw	8
  8131     039F  009F               	movwf	31	;volatile
  8132     03A0                     l3179:
  8133                           
  8134                           ;main1.c: 290:         _delay((unsigned long)((50)*(4000000/4000000.0)));
  8135     03A0  300F               	movlw	15
  8136     03A1  1283               	bcf	3,5	;RP0=0, select bank0
  8137     03A2  1303               	bcf	3,6	;RP1=0, select bank0
  8138     03A3  00D4               	movwf	??_main
  8139     03A4                     u4467:
  8140     03A4  0BD4               	decfsz	??_main,f
  8141     03A5  2BA4               	goto	u4467
  8142     03A6  2BA7               	nop2
  8143     03A7                     l3181:
  8144                           
  8145                           ;main1.c: 291:         ADCON0bits.GO = 1;
  8146     03A7  1283               	bcf	3,5	;RP0=0, select bank0
  8147     03A8  1303               	bcf	3,6	;RP1=0, select bank0
  8148     03A9  151F               	bsf	31,2	;volatile
  8149     03AA                     l227:	
  8150                           ;main1.c: 292:         while (ADCON0bits.GO);
  8151                           
  8152     03AA  191F               	btfsc	31,2	;volatile
  8153     03AB  2BAD               	goto	u4101
  8154     03AC  2BAE               	goto	u4100
  8155     03AD                     u4101:
  8156     03AD  2BAA               	goto	l227
  8157     03AE                     u4100:
  8158     03AE                     l3183:
  8159                           
  8160                           ;main1.c: 293:         adcValue1 = (ADRESH << 8) | ADRESL;
  8161     03AE  1683               	bsf	3,5	;RP0=1, select bank1
  8162     03AF  1303               	bcf	3,6	;RP1=0, select bank1
  8163     03B0  081E               	movf	30,w	;volatile
  8164     03B1  1283               	bcf	3,5	;RP0=0, select bank0
  8165     03B2  1303               	bcf	3,6	;RP1=0, select bank0
  8166     03B3  00D4               	movwf	??_main
  8167     03B4  01D5               	clrf	??_main+1
  8168     03B5  081E               	movf	30,w	;volatile
  8169     03B6  00D6               	movwf	??_main+2
  8170     03B7  01D7               	clrf	??_main+3
  8171     03B8  0856               	movf	??_main+2,w
  8172     03B9  00D7               	movwf	??_main+3
  8173     03BA  01D6               	clrf	??_main+2
  8174     03BB  0854               	movf	??_main,w
  8175     03BC  0456               	iorwf	??_main+2,w
  8176     03BD  00A0               	movwf	___xxtofl@val
  8177     03BE  0855               	movf	??_main+1,w
  8178     03BF  0457               	iorwf	??_main+3,w
  8179     03C0  00A1               	movwf	___xxtofl@val+1
  8180     03C1  01A2               	clrf	___xxtofl@val+2
  8181     03C2  1BA1               	btfsc	___xxtofl@val+1,7
  8182     03C3  03A2               	decf	___xxtofl@val+2,f
  8183     03C4  0822               	movf	___xxtofl@val+2,w
  8184     03C5  00A3               	movwf	___xxtofl@val+3
  8185     03C6  3001               	movlw	1
  8186     03C7  120A  158A  203B  120A  118A  	fcall	___xxtofl
  8187     03CC  1283               	bcf	3,5	;RP0=0, select bank0
  8188     03CD  1303               	bcf	3,6	;RP1=0, select bank0
  8189     03CE  0823               	movf	?___xxtofl+3,w
  8190     03CF  1683               	bsf	3,5	;RP0=1, select bank3
  8191     03D0  1703               	bsf	3,6	;RP1=1, select bank3
  8192     03D1  0097               	movwf	(main@adcValue1+3)^(0+384)
  8193     03D2  1283               	bcf	3,5	;RP0=0, select bank0
  8194     03D3  1303               	bcf	3,6	;RP1=0, select bank0
  8195     03D4  0822               	movf	?___xxtofl+2,w
  8196     03D5  1683               	bsf	3,5	;RP0=1, select bank3
  8197     03D6  1703               	bsf	3,6	;RP1=1, select bank3
  8198     03D7  0096               	movwf	(main@adcValue1+2)^(0+384)
  8199     03D8  1283               	bcf	3,5	;RP0=0, select bank0
  8200     03D9  1303               	bcf	3,6	;RP1=0, select bank0
  8201     03DA  0821               	movf	?___xxtofl+1,w
  8202     03DB  1683               	bsf	3,5	;RP0=1, select bank3
  8203     03DC  1703               	bsf	3,6	;RP1=1, select bank3
  8204     03DD  0095               	movwf	(main@adcValue1+1)^(0+384)
  8205     03DE  1283               	bcf	3,5	;RP0=0, select bank0
  8206     03DF  1303               	bcf	3,6	;RP1=0, select bank0
  8207     03E0  0820               	movf	?___xxtofl,w
  8208     03E1  1683               	bsf	3,5	;RP0=1, select bank3
  8209     03E2  1703               	bsf	3,6	;RP1=1, select bank3
  8210     03E3  0094               	movwf	main@adcValue1^(0+384)
  8211     03E4                     l3185:
  8212                           
  8213                           ;main1.c: 294:         if (RE2==0 && RC0== 0 ){
  8214     03E4  1283               	bcf	3,5	;RP0=0, select bank0
  8215     03E5  1303               	bcf	3,6	;RP1=0, select bank0
  8216     03E6  1909               	btfsc	9,2	;volatile
  8217     03E7  2BE9               	goto	u4111
  8218     03E8  2BEA               	goto	u4110
  8219     03E9                     u4111:
  8220     03E9  2C18               	goto	l230
  8221     03EA                     u4110:
  8222     03EA                     l3187:
  8223     03EA  1807               	btfsc	7,0	;volatile
  8224     03EB  2BED               	goto	u4121
  8225     03EC  2BEE               	goto	u4120
  8226     03ED                     u4121:
  8227     03ED  2C18               	goto	l230
  8228     03EE                     u4120:
  8229     03EE                     l3189:
  8230                           
  8231                           ;main1.c: 295:         displayValue = (int)adcValue1 >> 1;
  8232     03EE  1683               	bsf	3,5	;RP0=1, select bank3
  8233     03EF  1703               	bsf	3,6	;RP1=1, select bank3
  8234     03F0  0817               	movf	(main@adcValue1+3)^(0+384),w
  8235     03F1  1283               	bcf	3,5	;RP0=0, select bank0
  8236     03F2  1303               	bcf	3,6	;RP1=0, select bank0
  8237     03F3  00A3               	movwf	___fltol@f1+3
  8238     03F4  1683               	bsf	3,5	;RP0=1, select bank3
  8239     03F5  1703               	bsf	3,6	;RP1=1, select bank3
  8240     03F6  0816               	movf	(main@adcValue1+2)^(0+384),w
  8241     03F7  1283               	bcf	3,5	;RP0=0, select bank0
  8242     03F8  1303               	bcf	3,6	;RP1=0, select bank0
  8243     03F9  00A2               	movwf	___fltol@f1+2
  8244     03FA  1683               	bsf	3,5	;RP0=1, select bank3
  8245     03FB  1703               	bsf	3,6	;RP1=1, select bank3
  8246     03FC  0815               	movf	(main@adcValue1+1)^(0+384),w
  8247     03FD  1283               	bcf	3,5	;RP0=0, select bank0
  8248     03FE  1303               	bcf	3,6	;RP1=0, select bank0
  8249     03FF  00A1               	movwf	___fltol@f1+1
  8250     0400  1683               	bsf	3,5	;RP0=1, select bank3
  8251     0401  1703               	bsf	3,6	;RP1=1, select bank3
  8252     0402  0814               	movf	main@adcValue1^(0+384),w
  8253     0403  1283               	bcf	3,5	;RP0=0, select bank0
  8254     0404  1303               	bcf	3,6	;RP1=0, select bank0
  8255     0405  00A0               	movwf	___fltol@f1
  8256     0406  160A  118A  2666  120A  118A  	fcall	___fltol
  8257     040B  1283               	bcf	3,5	;RP0=0, select bank0
  8258     040C  1303               	bcf	3,6	;RP1=0, select bank0
  8259     040D  0D21               	rlf	?___fltol+1,w
  8260     040E  0C21               	rrf	?___fltol+1,w
  8261     040F  1683               	bsf	3,5	;RP0=1, select bank3
  8262     0410  1703               	bsf	3,6	;RP1=1, select bank3
  8263     0411  00A3               	movwf	(main@displayValue+1)^(0+384)
  8264     0412  1283               	bcf	3,5	;RP0=0, select bank0
  8265     0413  1303               	bcf	3,6	;RP1=0, select bank0
  8266     0414  0C20               	rrf	?___fltol,w
  8267     0415  1683               	bsf	3,5	;RP0=1, select bank3
  8268     0416  1703               	bsf	3,6	;RP1=1, select bank3
  8269     0417  00A2               	movwf	main@displayValue^(0+384)
  8270     0418                     l230:	
  8271                           ;main1.c: 296:         }
  8272                           
  8273                           
  8274                           ;main1.c: 297:         float gostermeliklcd = adcValue1 / 1024 * 1000;
  8275     0418  3044               	movlw	68
  8276     0419  1283               	bcf	3,5	;RP0=0, select bank0
  8277     041A  1303               	bcf	3,6	;RP1=0, select bank0
  8278     041B  00BD               	movwf	___flmul@b+3
  8279     041C  307A               	movlw	122
  8280     041D  00BC               	movwf	___flmul@b+2
  8281     041E  3000               	movlw	0
  8282     041F  00BB               	movwf	___flmul@b+1
  8283     0420  3000               	movlw	0
  8284     0421  00BA               	movwf	___flmul@b
  8285     0422  3044               	movlw	68
  8286     0423  00A3               	movwf	___fldiv@a+3
  8287     0424  3080               	movlw	128
  8288     0425  00A2               	movwf	___fldiv@a+2
  8289     0426  3000               	movlw	0
  8290     0427  00A1               	movwf	___fldiv@a+1
  8291     0428  3000               	movlw	0
  8292     0429  00A0               	movwf	___fldiv@a
  8293     042A  1683               	bsf	3,5	;RP0=1, select bank3
  8294     042B  1703               	bsf	3,6	;RP1=1, select bank3
  8295     042C  0817               	movf	(main@adcValue1+3)^(0+384),w
  8296     042D  1283               	bcf	3,5	;RP0=0, select bank0
  8297     042E  1303               	bcf	3,6	;RP1=0, select bank0
  8298     042F  00A7               	movwf	___fldiv@b+3
  8299     0430  1683               	bsf	3,5	;RP0=1, select bank3
  8300     0431  1703               	bsf	3,6	;RP1=1, select bank3
  8301     0432  0816               	movf	(main@adcValue1+2)^(0+384),w
  8302     0433  1283               	bcf	3,5	;RP0=0, select bank0
  8303     0434  1303               	bcf	3,6	;RP1=0, select bank0
  8304     0435  00A6               	movwf	___fldiv@b+2
  8305     0436  1683               	bsf	3,5	;RP0=1, select bank3
  8306     0437  1703               	bsf	3,6	;RP1=1, select bank3
  8307     0438  0815               	movf	(main@adcValue1+1)^(0+384),w
  8308     0439  1283               	bcf	3,5	;RP0=0, select bank0
  8309     043A  1303               	bcf	3,6	;RP1=0, select bank0
  8310     043B  00A5               	movwf	___fldiv@b+1
  8311     043C  1683               	bsf	3,5	;RP0=1, select bank3
  8312     043D  1703               	bsf	3,6	;RP1=1, select bank3
  8313     043E  0814               	movf	main@adcValue1^(0+384),w
  8314     043F  1283               	bcf	3,5	;RP0=0, select bank0
  8315     0440  1303               	bcf	3,6	;RP1=0, select bank0
  8316     0441  00A4               	movwf	___fldiv@b
  8317     0442  120A  158A  20F5  120A  118A  	fcall	___fldiv
  8318     0447  1283               	bcf	3,5	;RP0=0, select bank0
  8319     0448  1303               	bcf	3,6	;RP1=0, select bank0
  8320     0449  0823               	movf	?___fldiv+3,w
  8321     044A  00C1               	movwf	___flmul@a+3
  8322     044B  0822               	movf	?___fldiv+2,w
  8323     044C  00C0               	movwf	___flmul@a+2
  8324     044D  0821               	movf	?___fldiv+1,w
  8325     044E  00BF               	movwf	___flmul@a+1
  8326     044F  0820               	movf	?___fldiv,w
  8327     0450  00BE               	movwf	___flmul@a
  8328     0451  120A  158A  24BB  120A  118A  	fcall	___flmul
  8329     0456  1283               	bcf	3,5	;RP0=0, select bank0
  8330     0457  1303               	bcf	3,6	;RP1=0, select bank0
  8331     0458  083D               	movf	?___flmul+3,w
  8332     0459  1683               	bsf	3,5	;RP0=1, select bank1
  8333     045A  1303               	bcf	3,6	;RP1=0, select bank1
  8334     045B  00DD               	movwf	(main@gostermeliklcd+3)^(0+128)
  8335     045C  1283               	bcf	3,5	;RP0=0, select bank0
  8336     045D  1303               	bcf	3,6	;RP1=0, select bank0
  8337     045E  083C               	movf	?___flmul+2,w
  8338     045F  1683               	bsf	3,5	;RP0=1, select bank1
  8339     0460  1303               	bcf	3,6	;RP1=0, select bank1
  8340     0461  00DC               	movwf	(main@gostermeliklcd+2)^(0+128)
  8341     0462  1283               	bcf	3,5	;RP0=0, select bank0
  8342     0463  1303               	bcf	3,6	;RP1=0, select bank0
  8343     0464  083B               	movf	?___flmul+1,w
  8344     0465  1683               	bsf	3,5	;RP0=1, select bank1
  8345     0466  1303               	bcf	3,6	;RP1=0, select bank1
  8346     0467  00DB               	movwf	(main@gostermeliklcd+1)^(0+128)
  8347     0468  1283               	bcf	3,5	;RP0=0, select bank0
  8348     0469  1303               	bcf	3,6	;RP1=0, select bank0
  8349     046A  083A               	movf	?___flmul,w
  8350     046B  1683               	bsf	3,5	;RP0=1, select bank1
  8351     046C  1303               	bcf	3,6	;RP1=0, select bank1
  8352     046D  00DA               	movwf	main@gostermeliklcd^(0+128)
  8353     046E                     l3191:
  8354                           
  8355                           ;main1.c: 302:         Lcd_Set_Cursor(2, 1);
  8356     046E  1283               	bcf	3,5	;RP0=0, select bank0
  8357     046F  1303               	bcf	3,6	;RP1=0, select bank0
  8358     0470  01A4               	clrf	Lcd_Set_Cursor@b
  8359     0471  0AA4               	incf	Lcd_Set_Cursor@b,f
  8360     0472  3002               	movlw	2
  8361     0473  160A  118A  2440  120A  118A  	fcall	_Lcd_Set_Cursor
  8362     0478                     l3193:
  8363                           
  8364                           ;main1.c: 303:         Lcd_Write_String("FeedRate:");
  8365     0478  301F               	movlw	low (STR_10| (0+32768))
  8366     0479  1283               	bcf	3,5	;RP0=0, select bank0
  8367     047A  1303               	bcf	3,6	;RP1=0, select bank0
  8368     047B  00A5               	movwf	Lcd_Write_String@a
  8369     047C  3091               	movlw	high (STR_10| (0+32768))
  8370     047D  00A6               	movwf	Lcd_Write_String@a+1
  8371     047E  160A  118A  23B3  120A  118A  	fcall	_Lcd_Write_String
  8372     0483                     l3195:
  8373                           
  8374                           ;main1.c: 304:         char adcString1[4];;main1.c: 305:         sprintf(adcString1, "%0
      +                          03u", (int)gostermeliklcd);
  8375     0483  305F               	movlw	low (STR_11| (0+32768))
  8376     0484  1283               	bcf	3,5	;RP0=0, select bank0
  8377     0485  1303               	bcf	3,6	;RP1=0, select bank0
  8378     0486  00AC               	movwf	sprintf@f
  8379     0487  3091               	movlw	high (STR_11| (0+32768))
  8380     0488  00AD               	movwf	sprintf@f+1
  8381     0489  1683               	bsf	3,5	;RP0=1, select bank1
  8382     048A  1303               	bcf	3,6	;RP1=0, select bank1
  8383     048B  085D               	movf	(main@gostermeliklcd+3)^(0+128),w
  8384     048C  1283               	bcf	3,5	;RP0=0, select bank0
  8385     048D  1303               	bcf	3,6	;RP1=0, select bank0
  8386     048E  00A3               	movwf	___fltol@f1+3
  8387     048F  1683               	bsf	3,5	;RP0=1, select bank1
  8388     0490  1303               	bcf	3,6	;RP1=0, select bank1
  8389     0491  085C               	movf	(main@gostermeliklcd+2)^(0+128),w
  8390     0492  1283               	bcf	3,5	;RP0=0, select bank0
  8391     0493  1303               	bcf	3,6	;RP1=0, select bank0
  8392     0494  00A2               	movwf	___fltol@f1+2
  8393     0495  1683               	bsf	3,5	;RP0=1, select bank1
  8394     0496  1303               	bcf	3,6	;RP1=0, select bank1
  8395     0497  085B               	movf	(main@gostermeliklcd+1)^(0+128),w
  8396     0498  1283               	bcf	3,5	;RP0=0, select bank0
  8397     0499  1303               	bcf	3,6	;RP1=0, select bank0
  8398     049A  00A1               	movwf	___fltol@f1+1
  8399     049B  1683               	bsf	3,5	;RP0=1, select bank1
  8400     049C  1303               	bcf	3,6	;RP1=0, select bank1
  8401     049D  085A               	movf	main@gostermeliklcd^(0+128),w
  8402     049E  1283               	bcf	3,5	;RP0=0, select bank0
  8403     049F  1303               	bcf	3,6	;RP1=0, select bank0
  8404     04A0  00A0               	movwf	___fltol@f1
  8405     04A1  160A  118A  2666  120A  118A  	fcall	___fltol
  8406     04A6  1283               	bcf	3,5	;RP0=0, select bank0
  8407     04A7  1303               	bcf	3,6	;RP1=0, select bank0
  8408     04A8  0821               	movf	?___fltol+1,w
  8409     04A9  00AF               	movwf	?_sprintf+3
  8410     04AA  0820               	movf	?___fltol,w
  8411     04AB  00AE               	movwf	?_sprintf+2
  8412     04AC  30EC               	movlw	(low (main@adcString1| 0))& (0+255)
  8413     04AD  120A  158A  22C4  120A  118A  	fcall	_sprintf
  8414     04B2                     l3197:
  8415                           
  8416                           ;main1.c: 306:         Lcd_Set_Cursor(2, 10);
  8417     04B2  300A               	movlw	10
  8418     04B3  1283               	bcf	3,5	;RP0=0, select bank0
  8419     04B4  1303               	bcf	3,6	;RP1=0, select bank0
  8420     04B5  00A4               	movwf	Lcd_Set_Cursor@b
  8421     04B6  3002               	movlw	2
  8422     04B7  160A  118A  2440  120A  118A  	fcall	_Lcd_Set_Cursor
  8423     04BC                     l3199:
  8424                           
  8425                           ;main1.c: 307:         Lcd_Write_String(adcString1);
  8426     04BC  30EC               	movlw	(low (main@adcString1| 0))& (0+255)
  8427     04BD  1283               	bcf	3,5	;RP0=0, select bank0
  8428     04BE  1303               	bcf	3,6	;RP1=0, select bank0
  8429     04BF  00A5               	movwf	Lcd_Write_String@a
  8430     04C0  3000               	movlw	0
  8431     04C1  00A6               	movwf	Lcd_Write_String@a+1
  8432     04C2  160A  118A  23B3  120A  118A  	fcall	_Lcd_Write_String
  8433     04C7                     l3201:
  8434                           
  8435                           ;main1.c: 310:         Lcd_Set_Cursor(1, 1);
  8436     04C7  1283               	bcf	3,5	;RP0=0, select bank0
  8437     04C8  1303               	bcf	3,6	;RP1=0, select bank0
  8438     04C9  01A4               	clrf	Lcd_Set_Cursor@b
  8439     04CA  0AA4               	incf	Lcd_Set_Cursor@b,f
  8440     04CB  3001               	movlw	1
  8441     04CC  160A  118A  2440  120A  118A  	fcall	_Lcd_Set_Cursor
  8442     04D1                     l3203:
  8443                           
  8444                           ;main1.c: 311:         Lcd_Write_String("RPM:");
  8445     04D1  306A               	movlw	low (STR_12| (0+32768))
  8446     04D2  1283               	bcf	3,5	;RP0=0, select bank0
  8447     04D3  1303               	bcf	3,6	;RP1=0, select bank0
  8448     04D4  00A5               	movwf	Lcd_Write_String@a
  8449     04D5  3091               	movlw	high (STR_12| (0+32768))
  8450     04D6  00A6               	movwf	Lcd_Write_String@a+1
  8451     04D7  160A  118A  23B3  120A  118A  	fcall	_Lcd_Write_String
  8452     04DC                     l3205:
  8453                           
  8454                           ;main1.c: 312:         char rpmString[5];;main1.c: 313: sprintf(rpmString, "%u%u%u.%u", 
      +                          binler,yuzler,onlar,birler);
  8455     04DC  303D               	movlw	low (STR_13| (0+32768))
  8456     04DD  1283               	bcf	3,5	;RP0=0, select bank0
  8457     04DE  1303               	bcf	3,6	;RP1=0, select bank0
  8458     04DF  00AC               	movwf	sprintf@f
  8459     04E0  3091               	movlw	high (STR_13| (0+32768))
  8460     04E1  00AD               	movwf	sprintf@f+1
  8461     04E2  1683               	bsf	3,5	;RP0=1, select bank3
  8462     04E3  1703               	bsf	3,6	;RP1=1, select bank3
  8463     04E4  081B               	movf	(main@binler+1)^(0+384),w
  8464     04E5  1283               	bcf	3,5	;RP0=0, select bank0
  8465     04E6  1303               	bcf	3,6	;RP1=0, select bank0
  8466     04E7  00AF               	movwf	?_sprintf+3
  8467     04E8  1683               	bsf	3,5	;RP0=1, select bank3
  8468     04E9  1703               	bsf	3,6	;RP1=1, select bank3
  8469     04EA  081A               	movf	main@binler^(0+384),w
  8470     04EB  1283               	bcf	3,5	;RP0=0, select bank0
  8471     04EC  1303               	bcf	3,6	;RP1=0, select bank0
  8472     04ED  00AE               	movwf	?_sprintf+2
  8473     04EE  1683               	bsf	3,5	;RP0=1, select bank3
  8474     04EF  1703               	bsf	3,6	;RP1=1, select bank3
  8475     04F0  0819               	movf	(main@yuzler+1)^(0+384),w
  8476     04F1  1283               	bcf	3,5	;RP0=0, select bank0
  8477     04F2  1303               	bcf	3,6	;RP1=0, select bank0
  8478     04F3  00B1               	movwf	?_sprintf+5
  8479     04F4  1683               	bsf	3,5	;RP0=1, select bank3
  8480     04F5  1703               	bsf	3,6	;RP1=1, select bank3
  8481     04F6  0818               	movf	main@yuzler^(0+384),w
  8482     04F7  1283               	bcf	3,5	;RP0=0, select bank0
  8483     04F8  1303               	bcf	3,6	;RP1=0, select bank0
  8484     04F9  00B0               	movwf	?_sprintf+4
  8485     04FA  1683               	bsf	3,5	;RP0=1, select bank1
  8486     04FB  1303               	bcf	3,6	;RP1=0, select bank1
  8487     04FC  0869               	movf	(main@onlar+1)^(0+128),w
  8488     04FD  1283               	bcf	3,5	;RP0=0, select bank0
  8489     04FE  1303               	bcf	3,6	;RP1=0, select bank0
  8490     04FF  00B3               	movwf	?_sprintf+7
  8491     0500  1683               	bsf	3,5	;RP0=1, select bank1
  8492     0501  1303               	bcf	3,6	;RP1=0, select bank1
  8493     0502  0868               	movf	main@onlar^(0+128),w
  8494     0503  1283               	bcf	3,5	;RP0=0, select bank0
  8495     0504  1303               	bcf	3,6	;RP1=0, select bank0
  8496     0505  00B2               	movwf	?_sprintf+6
  8497     0506  1683               	bsf	3,5	;RP0=1, select bank1
  8498     0507  1303               	bcf	3,6	;RP1=0, select bank1
  8499     0508  086B               	movf	(main@birler+1)^(0+128),w
  8500     0509  1283               	bcf	3,5	;RP0=0, select bank0
  8501     050A  1303               	bcf	3,6	;RP1=0, select bank0
  8502     050B  00B5               	movwf	?_sprintf+9
  8503     050C  1683               	bsf	3,5	;RP0=1, select bank1
  8504     050D  1303               	bcf	3,6	;RP1=0, select bank1
  8505     050E  086A               	movf	main@birler^(0+128),w
  8506     050F  1283               	bcf	3,5	;RP0=0, select bank0
  8507     0510  1303               	bcf	3,6	;RP1=0, select bank0
  8508     0511  00B4               	movwf	?_sprintf+8
  8509     0512  30CD               	movlw	(low (main@rpmString| 0))& (0+255)
  8510     0513  120A  158A  22C4  120A  118A  	fcall	_sprintf
  8511     0518                     l3207:
  8512                           
  8513                           ;main1.c: 315: Lcd_Set_Cursor(1, 5);
  8514     0518  3005               	movlw	5
  8515     0519  1283               	bcf	3,5	;RP0=0, select bank0
  8516     051A  1303               	bcf	3,6	;RP1=0, select bank0
  8517     051B  00A4               	movwf	Lcd_Set_Cursor@b
  8518     051C  3001               	movlw	1
  8519     051D  160A  118A  2440  120A  118A  	fcall	_Lcd_Set_Cursor
  8520     0522                     l3209:
  8521                           
  8522                           ;main1.c: 316: Lcd_Write_String(rpmString);
  8523     0522  30CD               	movlw	(low (main@rpmString| 0))& (0+255)
  8524     0523  1283               	bcf	3,5	;RP0=0, select bank0
  8525     0524  1303               	bcf	3,6	;RP1=0, select bank0
  8526     0525  00A5               	movwf	Lcd_Write_String@a
  8527     0526  3000               	movlw	0
  8528     0527  00A6               	movwf	Lcd_Write_String@a+1
  8529     0528  160A  118A  23B3  120A  118A  	fcall	_Lcd_Write_String
  8530     052D                     l3211:
  8531                           
  8532                           ;main1.c: 323:  if (RC1 == 1 && (RE0 == 1 || RE2 == 1)) {
  8533     052D  1283               	bcf	3,5	;RP0=0, select bank0
  8534     052E  1303               	bcf	3,6	;RP1=0, select bank0
  8535     052F  1C87               	btfss	7,1	;volatile
  8536     0530  2D32               	goto	u4131
  8537     0531  2D33               	goto	u4130
  8538     0532                     u4131:
  8539     0532  2D5A               	goto	l231
  8540     0533                     u4130:
  8541     0533                     l3213:
  8542     0533  1809               	btfsc	9,0	;volatile
  8543     0534  2D36               	goto	u4141
  8544     0535  2D37               	goto	u4140
  8545     0536                     u4141:
  8546     0536  2D3B               	goto	l3217
  8547     0537                     u4140:
  8548     0537                     l3215:
  8549     0537  1D09               	btfss	9,2	;volatile
  8550     0538  2D3A               	goto	u4151
  8551     0539  2D3B               	goto	u4150
  8552     053A                     u4151:
  8553     053A  2D5A               	goto	l231
  8554     053B                     u4150:
  8555     053B                     l3217:
  8556                           
  8557                           ;main1.c: 324:             Lcd_Set_Cursor(2, 13);
  8558     053B  300D               	movlw	13
  8559     053C  00A4               	movwf	Lcd_Set_Cursor@b
  8560     053D  3002               	movlw	2
  8561     053E  160A  118A  2440  120A  118A  	fcall	_Lcd_Set_Cursor
  8562     0543                     l3219:
  8563                           
  8564                           ;main1.c: 325:             Lcd_Write_String(" FWD LMT");
  8565     0543  3047               	movlw	low (STR_14| (0+32768))
  8566     0544  1283               	bcf	3,5	;RP0=0, select bank0
  8567     0545  1303               	bcf	3,6	;RP1=0, select bank0
  8568     0546  00A5               	movwf	Lcd_Write_String@a
  8569     0547  3091               	movlw	high (STR_14| (0+32768))
  8570     0548  00A6               	movwf	Lcd_Write_String@a+1
  8571     0549  160A  118A  23B3  120A  118A  	fcall	_Lcd_Write_String
  8572     054E                     l3221:
  8573                           
  8574                           ;main1.c: 326:             UART_Write_Text("s0\r\n");
  8575     054E  3065               	movlw	low (STR_15| (0+32768))
  8576     054F  1283               	bcf	3,5	;RP0=0, select bank0
  8577     0550  1303               	bcf	3,6	;RP1=0, select bank0
  8578     0551  00A1               	movwf	UART_Write_Text@text
  8579     0552  3091               	movlw	high (STR_15| (0+32768))
  8580     0553  00A2               	movwf	UART_Write_Text@text+1
  8581     0554  160A  118A  2327  120A  118A  	fcall	_UART_Write_Text
  8582                           
  8583                           ;main1.c: 328:         } else if ((RE2 == 1 && RE0 == 1) || (RE2 == 1 && RE1 == 0)) {
  8584     0559  2F39               	goto	l3299
  8585     055A                     l231:
  8586     055A  1D09               	btfss	9,2	;volatile
  8587     055B  2D5D               	goto	u4161
  8588     055C  2D5E               	goto	u4160
  8589     055D                     u4161:
  8590     055D  2D62               	goto	l239
  8591     055E                     u4160:
  8592     055E                     l3223:
  8593     055E  1809               	btfsc	9,0	;volatile
  8594     055F  2D61               	goto	u4171
  8595     0560  2D62               	goto	u4170
  8596     0561                     u4171:
  8597     0561  2D6A               	goto	l3227
  8598     0562                     u4170:
  8599     0562                     l239:
  8600     0562  1D09               	btfss	9,2	;volatile
  8601     0563  2D65               	goto	u4181
  8602     0564  2D66               	goto	u4180
  8603     0565                     u4181:
  8604     0565  2DC0               	goto	l235
  8605     0566                     u4180:
  8606     0566                     l3225:
  8607     0566  1889               	btfsc	9,1	;volatile
  8608     0567  2D69               	goto	u4191
  8609     0568  2D6A               	goto	u4190
  8610     0569                     u4191:
  8611     0569  2DC0               	goto	l235
  8612     056A                     u4190:
  8613     056A                     l3227:
  8614                           
  8615                           ;main1.c: 329:             Lcd_Set_Cursor(2, 13);
  8616     056A  300D               	movlw	13
  8617     056B  00A4               	movwf	Lcd_Set_Cursor@b
  8618     056C  3002               	movlw	2
  8619     056D  160A  118A  2440  120A  118A  	fcall	_Lcd_Set_Cursor
  8620     0572                     l3229:
  8621                           
  8622                           ;main1.c: 330:             Lcd_Write_String(" FWD 1.6K");
  8623     0572  3029               	movlw	low (STR_16| (0+32768))
  8624     0573  1283               	bcf	3,5	;RP0=0, select bank0
  8625     0574  1303               	bcf	3,6	;RP1=0, select bank0
  8626     0575  00A5               	movwf	Lcd_Write_String@a
  8627     0576  3091               	movlw	high (STR_16| (0+32768))
  8628     0577  00A6               	movwf	Lcd_Write_String@a+1
  8629     0578  160A  118A  23B3  120A  118A  	fcall	_Lcd_Write_String
  8630     057D                     l3231:
  8631                           
  8632                           ;main1.c: 331:             if (displayValue < 800) {
  8633     057D  3003               	movlw	3
  8634     057E  1683               	bsf	3,5	;RP0=1, select bank3
  8635     057F  1703               	bsf	3,6	;RP1=1, select bank3
  8636     0580  0223               	subwf	(main@displayValue+1)^(0+384),w
  8637     0581  3020               	movlw	32
  8638     0582  1903               	skipnz
  8639     0583  0222               	subwf	main@displayValue^(0+384),w
  8640     0584  1803               	skipnc
  8641     0585  2D87               	goto	u4201
  8642     0586  2D88               	goto	u4200
  8643     0587                     u4201:
  8644     0587  2F39               	goto	l3299
  8645     0588                     u4200:
  8646     0588                     l3233:
  8647                           
  8648                           ;main1.c: 332:                 char uartMessage[8];;main1.c: 333:                 displa
      +                          yValue += 80;
  8649     0588  3050               	movlw	80
  8650     0589  07A2               	addwf	main@displayValue^(0+384),f
  8651     058A  1803               	skipnc
  8652     058B  0AA3               	incf	(main@displayValue+1)^(0+384),f
  8653     058C  3000               	movlw	0
  8654     058D  07A3               	addwf	(main@displayValue+1)^(0+384),f
  8655                           
  8656                           ;main1.c: 335:                 if (displayValue > 800) {
  8657     058E  3003               	movlw	3
  8658     058F  0223               	subwf	(main@displayValue+1)^(0+384),w
  8659     0590  3021               	movlw	33
  8660     0591  1903               	skipnz
  8661     0592  0222               	subwf	main@displayValue^(0+384),w
  8662     0593  1C03               	skipc
  8663     0594  2D96               	goto	u4211
  8664     0595  2D97               	goto	u4210
  8665     0596                     u4211:
  8666     0596  2D9B               	goto	l3237
  8667     0597                     u4210:
  8668     0597                     l3235:
  8669                           
  8670                           ;main1.c: 336:                     displayValue = 800;
  8671     0597  3020               	movlw	32
  8672     0598  00A2               	movwf	main@displayValue^(0+384)
  8673     0599  3003               	movlw	3
  8674     059A  00A3               	movwf	(main@displayValue^(0+384)+1)
  8675     059B                     l3237:
  8676                           
  8677                           ;main1.c: 338:                 sprintf(uartMessage, "s%d\r\n", displayValue);
  8678     059B  3059               	movlw	low (STR_17| (0+32768))
  8679     059C  1283               	bcf	3,5	;RP0=0, select bank0
  8680     059D  1303               	bcf	3,6	;RP1=0, select bank0
  8681     059E  00AC               	movwf	sprintf@f
  8682     059F  3091               	movlw	high (STR_17| (0+32768))
  8683     05A0  00AD               	movwf	sprintf@f+1
  8684     05A1  1683               	bsf	3,5	;RP0=1, select bank3
  8685     05A2  1703               	bsf	3,6	;RP1=1, select bank3
  8686     05A3  0823               	movf	(main@displayValue+1)^(0+384),w
  8687     05A4  1283               	bcf	3,5	;RP0=0, select bank0
  8688     05A5  1303               	bcf	3,6	;RP1=0, select bank0
  8689     05A6  00AF               	movwf	?_sprintf+3
  8690     05A7  1683               	bsf	3,5	;RP0=1, select bank3
  8691     05A8  1703               	bsf	3,6	;RP1=1, select bank3
  8692     05A9  0822               	movf	main@displayValue^(0+384),w
  8693     05AA  1283               	bcf	3,5	;RP0=0, select bank0
  8694     05AB  1303               	bcf	3,6	;RP1=0, select bank0
  8695     05AC  00AE               	movwf	?_sprintf+2
  8696     05AD  30BD               	movlw	(low (main@uartMessage| 0))& (0+255)
  8697     05AE  120A  158A  22C4  120A  118A  	fcall	_sprintf
  8698     05B3                     l3239:
  8699                           
  8700                           ;main1.c: 339:                 UART_Write_Text(uartMessage);
  8701     05B3  30BD               	movlw	(low (main@uartMessage| 0))& (0+255)
  8702     05B4  1283               	bcf	3,5	;RP0=0, select bank0
  8703     05B5  1303               	bcf	3,6	;RP1=0, select bank0
  8704     05B6  00A1               	movwf	UART_Write_Text@text
  8705     05B7  3000               	movlw	0
  8706     05B8  00A2               	movwf	UART_Write_Text@text+1
  8707     05B9  160A  118A  2327  120A  118A  	fcall	_UART_Write_Text
  8708     05BE  2F39               	goto	l3299
  8709     05BF                     l240:	
  8710                           ;main1.c: 340:             }
  8711                           
  8712                           
  8713                           ;main1.c: 342:         } else if (RE0 == 1) {
  8714     05BF  2F39               	goto	l3299
  8715     05C0                     l235:
  8716     05C0  1C09               	btfss	9,0	;volatile
  8717     05C1  2DC3               	goto	u4221
  8718     05C2  2DC4               	goto	u4220
  8719     05C3                     u4221:
  8720     05C3  2DFB               	goto	l243
  8721     05C4                     u4220:
  8722     05C4                     l3241:
  8723                           
  8724                           ;main1.c: 343:             Lcd_Set_Cursor(2, 13);
  8725     05C4  300D               	movlw	13
  8726     05C5  00A4               	movwf	Lcd_Set_Cursor@b
  8727     05C6  3002               	movlw	2
  8728     05C7  160A  118A  2440  120A  118A  	fcall	_Lcd_Set_Cursor
  8729     05CC                     l3243:
  8730                           
  8731                           ;main1.c: 344:             Lcd_Write_String(" FWD          ");
  8732     05CC  30CD               	movlw	low (STR_18| (0+32768))
  8733     05CD  1283               	bcf	3,5	;RP0=0, select bank0
  8734     05CE  1303               	bcf	3,6	;RP1=0, select bank0
  8735     05CF  00A5               	movwf	Lcd_Write_String@a
  8736     05D0  3090               	movlw	high (STR_18| (0+32768))
  8737     05D1  00A6               	movwf	Lcd_Write_String@a+1
  8738     05D2  160A  118A  23B3  120A  118A  	fcall	_Lcd_Write_String
  8739     05D7                     l3245:
  8740                           
  8741                           ;main1.c: 345:             char combinedText[20];;main1.c: 346:             sprintf(comb
      +                          inedText, "s%d\r\n", displayValue);
  8742     05D7  3059               	movlw	low (STR_17| (0+32768))
  8743     05D8  1283               	bcf	3,5	;RP0=0, select bank0
  8744     05D9  1303               	bcf	3,6	;RP1=0, select bank0
  8745     05DA  00AC               	movwf	sprintf@f
  8746     05DB  3091               	movlw	high (STR_17| (0+32768))
  8747     05DC  00AD               	movwf	sprintf@f+1
  8748     05DD  1683               	bsf	3,5	;RP0=1, select bank3
  8749     05DE  1703               	bsf	3,6	;RP1=1, select bank3
  8750     05DF  0823               	movf	(main@displayValue+1)^(0+384),w
  8751     05E0  1283               	bcf	3,5	;RP0=0, select bank0
  8752     05E1  1303               	bcf	3,6	;RP1=0, select bank0
  8753     05E2  00AF               	movwf	?_sprintf+3
  8754     05E3  1683               	bsf	3,5	;RP0=1, select bank3
  8755     05E4  1703               	bsf	3,6	;RP1=1, select bank3
  8756     05E5  0822               	movf	main@displayValue^(0+384),w
  8757     05E6  1283               	bcf	3,5	;RP0=0, select bank0
  8758     05E7  1303               	bcf	3,6	;RP1=0, select bank0
  8759     05E8  00AE               	movwf	?_sprintf+2
  8760     05E9  305A               	movlw	(low (main@combinedText| 0))& (0+255)
  8761     05EA  120A  158A  22C4  120A  118A  	fcall	_sprintf
  8762     05EF                     l3247:
  8763                           
  8764                           ;main1.c: 347:             UART_Write_Text(combinedText);
  8765     05EF  305A               	movlw	(low (main@combinedText| 0))& (0+255)
  8766     05F0  1283               	bcf	3,5	;RP0=0, select bank0
  8767     05F1  1303               	bcf	3,6	;RP1=0, select bank0
  8768     05F2  00A1               	movwf	UART_Write_Text@text
  8769     05F3  3000               	movlw	0
  8770     05F4  00A2               	movwf	UART_Write_Text@text+1
  8771     05F5  160A  118A  2327  120A  118A  	fcall	_UART_Write_Text
  8772                           
  8773                           ;main1.c: 350:         } else if (RC2 == 1 && (RE1 == 1 || RC0 == 1)) {
  8774     05FA  2F39               	goto	l3299
  8775     05FB                     l243:
  8776     05FB  1D07               	btfss	7,2	;volatile
  8777     05FC  2DFE               	goto	u4231
  8778     05FD  2DFF               	goto	u4230
  8779     05FE                     u4231:
  8780     05FE  2E26               	goto	l245
  8781     05FF                     u4230:
  8782     05FF                     l3249:
  8783     05FF  1889               	btfsc	9,1	;volatile
  8784     0600  2E02               	goto	u4241
  8785     0601  2E03               	goto	u4240
  8786     0602                     u4241:
  8787     0602  2E07               	goto	l3253
  8788     0603                     u4240:
  8789     0603                     l3251:
  8790     0603  1C07               	btfss	7,0	;volatile
  8791     0604  2E06               	goto	u4251
  8792     0605  2E07               	goto	u4250
  8793     0606                     u4251:
  8794     0606  2E26               	goto	l245
  8795     0607                     u4250:
  8796     0607                     l3253:
  8797                           
  8798                           ;main1.c: 351:             Lcd_Set_Cursor(2, 13);
  8799     0607  300D               	movlw	13
  8800     0608  00A4               	movwf	Lcd_Set_Cursor@b
  8801     0609  3002               	movlw	2
  8802     060A  160A  118A  2440  120A  118A  	fcall	_Lcd_Set_Cursor
  8803     060F                     l3255:
  8804                           
  8805                           ;main1.c: 352:             Lcd_Write_String(" REW LMT");
  8806     060F  3050               	movlw	low (STR_20| (0+32768))
  8807     0610  1283               	bcf	3,5	;RP0=0, select bank0
  8808     0611  1303               	bcf	3,6	;RP1=0, select bank0
  8809     0612  00A5               	movwf	Lcd_Write_String@a
  8810     0613  3091               	movlw	high (STR_20| (0+32768))
  8811     0614  00A6               	movwf	Lcd_Write_String@a+1
  8812     0615  160A  118A  23B3  120A  118A  	fcall	_Lcd_Write_String
  8813     061A                     l3257:
  8814                           
  8815                           ;main1.c: 353:             UART_Write_Text("s0\r\n");
  8816     061A  3065               	movlw	low (STR_15| (0+32768))
  8817     061B  1283               	bcf	3,5	;RP0=0, select bank0
  8818     061C  1303               	bcf	3,6	;RP1=0, select bank0
  8819     061D  00A1               	movwf	UART_Write_Text@text
  8820     061E  3091               	movlw	high (STR_15| (0+32768))
  8821     061F  00A2               	movwf	UART_Write_Text@text+1
  8822     0620  160A  118A  2327  120A  118A  	fcall	_UART_Write_Text
  8823                           
  8824                           ;main1.c: 355:         } else if ((RC0 == 1 && RE1 == 1) || (RC0 == 1 && RE0 == 0)) {
  8825     0625  2F39               	goto	l3299
  8826     0626                     l245:
  8827     0626  1C07               	btfss	7,0	;volatile
  8828     0627  2E29               	goto	u4261
  8829     0628  2E2A               	goto	u4260
  8830     0629                     u4261:
  8831     0629  2E2E               	goto	l253
  8832     062A                     u4260:
  8833     062A                     l3259:
  8834     062A  1889               	btfsc	9,1	;volatile
  8835     062B  2E2D               	goto	u4271
  8836     062C  2E2E               	goto	u4270
  8837     062D                     u4271:
  8838     062D  2E36               	goto	l3263
  8839     062E                     u4270:
  8840     062E                     l253:
  8841     062E  1C07               	btfss	7,0	;volatile
  8842     062F  2E31               	goto	u4281
  8843     0630  2E32               	goto	u4280
  8844     0631                     u4281:
  8845     0631  2EC7               	goto	l249
  8846     0632                     u4280:
  8847     0632                     l3261:
  8848     0632  1809               	btfsc	9,0	;volatile
  8849     0633  2E35               	goto	u4291
  8850     0634  2E36               	goto	u4290
  8851     0635                     u4291:
  8852     0635  2EC7               	goto	l249
  8853     0636                     u4290:
  8854     0636                     l3263:
  8855                           
  8856                           ;main1.c: 356:             Lcd_Set_Cursor(2, 13);
  8857     0636  300D               	movlw	13
  8858     0637  00A4               	movwf	Lcd_Set_Cursor@b
  8859     0638  3002               	movlw	2
  8860     0639  160A  118A  2440  120A  118A  	fcall	_Lcd_Set_Cursor
  8861     063E                     l3265:
  8862                           
  8863                           ;main1.c: 357:             Lcd_Write_String(" REW 1.6K");
  8864     063E  3033               	movlw	low (STR_22| (0+32768))
  8865     063F  1283               	bcf	3,5	;RP0=0, select bank0
  8866     0640  1303               	bcf	3,6	;RP1=0, select bank0
  8867     0641  00A5               	movwf	Lcd_Write_String@a
  8868     0642  3091               	movlw	high (STR_22| (0+32768))
  8869     0643  00A6               	movwf	Lcd_Write_String@a+1
  8870     0644  160A  118A  23B3  120A  118A  	fcall	_Lcd_Write_String
  8871     0649                     l3267:
  8872                           
  8873                           ;main1.c: 358:             int negativeFeedValue = -displayValue;
  8874     0649  1683               	bsf	3,5	;RP0=1, select bank3
  8875     064A  1703               	bsf	3,6	;RP1=1, select bank3
  8876     064B  0922               	comf	main@displayValue^(0+384),w
  8877     064C  1283               	bcf	3,5	;RP0=0, select bank0
  8878     064D  1303               	bcf	3,6	;RP1=0, select bank0
  8879     064E  00D4               	movwf	??_main
  8880     064F  1683               	bsf	3,5	;RP0=1, select bank3
  8881     0650  1703               	bsf	3,6	;RP1=1, select bank3
  8882     0651  0923               	comf	(main@displayValue+1)^(0+384),w
  8883     0652  1283               	bcf	3,5	;RP0=0, select bank0
  8884     0653  1303               	bcf	3,6	;RP1=0, select bank0
  8885     0654  00D5               	movwf	??_main+1
  8886     0655  0AD4               	incf	??_main,f
  8887     0656  1903               	skipnz
  8888     0657  0AD5               	incf	??_main+1,f
  8889     0658  0854               	movf	??_main,w
  8890     0659  1683               	bsf	3,5	;RP0=1, select bank3
  8891     065A  1703               	bsf	3,6	;RP1=1, select bank3
  8892     065B  00A0               	movwf	main@negativeFeedValue^(0+384)
  8893     065C  1283               	bcf	3,5	;RP0=0, select bank0
  8894     065D  1303               	bcf	3,6	;RP1=0, select bank0
  8895     065E  0855               	movf	??_main+1,w
  8896     065F  1683               	bsf	3,5	;RP0=1, select bank3
  8897     0660  1703               	bsf	3,6	;RP1=1, select bank3
  8898     0661  00A1               	movwf	(main@negativeFeedValue+1)^(0+384)
  8899     0662                     l3269:
  8900                           
  8901                           ;main1.c: 359:             if (negativeFeedValue > -800) {
  8902     0662  0821               	movf	(main@negativeFeedValue+1)^(0+384),w
  8903     0663  3A80               	xorlw	128
  8904     0664  00FF               	movwf	btemp+1
  8905     0665  307C               	movlw	124
  8906     0666  027F               	subwf	btemp+1,w
  8907     0667  1D03               	skipz
  8908     0668  2E6B               	goto	u4305
  8909     0669  30E1               	movlw	225
  8910     066A  0220               	subwf	main@negativeFeedValue^(0+384),w
  8911     066B                     u4305:
  8912     066B  1C03               	skipc
  8913     066C  2E6E               	goto	u4301
  8914     066D  2E6F               	goto	u4300
  8915     066E                     u4301:
  8916     066E  2DBF               	goto	l240
  8917     066F                     u4300:
  8918     066F                     l3271:
  8919                           
  8920                           ;main1.c: 360:                 char uartMessage[8];;main1.c: 361:                 negati
      +                          veFeedValue -= 80;
  8921     066F  30B0               	movlw	176
  8922     0670  1683               	bsf	3,5	;RP0=1, select bank3
  8923     0671  1703               	bsf	3,6	;RP1=1, select bank3
  8924     0672  07A0               	addwf	main@negativeFeedValue^(0+384),f
  8925     0673  1803               	skipnc
  8926     0674  0AA1               	incf	(main@negativeFeedValue+1)^(0+384),f
  8927     0675  30FF               	movlw	255
  8928     0676  07A1               	addwf	(main@negativeFeedValue+1)^(0+384),f
  8929     0677                     l3273:
  8930                           
  8931                           ;main1.c: 362:                 if (negativeFeedValue < -800) {
  8932     0677  0821               	movf	(main@negativeFeedValue+1)^(0+384),w
  8933     0678  3A80               	xorlw	128
  8934     0679  00FF               	movwf	btemp+1
  8935     067A  307C               	movlw	124
  8936     067B  027F               	subwf	btemp+1,w
  8937     067C  1D03               	skipz
  8938     067D  2E80               	goto	u4315
  8939     067E  30E0               	movlw	224
  8940     067F  0220               	subwf	main@negativeFeedValue^(0+384),w
  8941     0680                     u4315:
  8942     0680  1803               	skipnc
  8943     0681  2E83               	goto	u4311
  8944     0682  2E84               	goto	u4310
  8945     0683                     u4311:
  8946     0683  2E8A               	goto	l3277
  8947     0684                     u4310:
  8948     0684                     l3275:
  8949                           
  8950                           ;main1.c: 363:                     negativeFeedValue = -800;
  8951     0684  30E0               	movlw	224
  8952     0685  1683               	bsf	3,5	;RP0=1, select bank3
  8953     0686  1703               	bsf	3,6	;RP1=1, select bank3
  8954     0687  00A0               	movwf	main@negativeFeedValue^(0+384)
  8955     0688  30FC               	movlw	252
  8956     0689  00A1               	movwf	(main@negativeFeedValue^(0+384)+1)
  8957     068A                     l3277:
  8958                           
  8959                           ;main1.c: 365:                 displayValue=-negativeFeedValue;
  8960     068A  1683               	bsf	3,5	;RP0=1, select bank3
  8961     068B  1703               	bsf	3,6	;RP1=1, select bank3
  8962     068C  0920               	comf	main@negativeFeedValue^(0+384),w
  8963     068D  1283               	bcf	3,5	;RP0=0, select bank0
  8964     068E  1303               	bcf	3,6	;RP1=0, select bank0
  8965     068F  00D4               	movwf	??_main
  8966     0690  1683               	bsf	3,5	;RP0=1, select bank3
  8967     0691  1703               	bsf	3,6	;RP1=1, select bank3
  8968     0692  0921               	comf	(main@negativeFeedValue+1)^(0+384),w
  8969     0693  1283               	bcf	3,5	;RP0=0, select bank0
  8970     0694  1303               	bcf	3,6	;RP1=0, select bank0
  8971     0695  00D5               	movwf	??_main+1
  8972     0696  0AD4               	incf	??_main,f
  8973     0697  1903               	skipnz
  8974     0698  0AD5               	incf	??_main+1,f
  8975     0699  0854               	movf	??_main,w
  8976     069A  1683               	bsf	3,5	;RP0=1, select bank3
  8977     069B  1703               	bsf	3,6	;RP1=1, select bank3
  8978     069C  00A2               	movwf	main@displayValue^(0+384)
  8979     069D  1283               	bcf	3,5	;RP0=0, select bank0
  8980     069E  1303               	bcf	3,6	;RP1=0, select bank0
  8981     069F  0855               	movf	??_main+1,w
  8982     06A0  1683               	bsf	3,5	;RP0=1, select bank3
  8983     06A1  1703               	bsf	3,6	;RP1=1, select bank3
  8984     06A2  00A3               	movwf	(main@displayValue+1)^(0+384)
  8985     06A3                     l3279:
  8986                           
  8987                           ;main1.c: 366:                 sprintf(uartMessage, "s%d\r\n", negativeFeedValue);
  8988     06A3  3059               	movlw	low (STR_17| (0+32768))
  8989     06A4  1283               	bcf	3,5	;RP0=0, select bank0
  8990     06A5  1303               	bcf	3,6	;RP1=0, select bank0
  8991     06A6  00AC               	movwf	sprintf@f
  8992     06A7  3091               	movlw	high (STR_17| (0+32768))
  8993     06A8  00AD               	movwf	sprintf@f+1
  8994     06A9  1683               	bsf	3,5	;RP0=1, select bank3
  8995     06AA  1703               	bsf	3,6	;RP1=1, select bank3
  8996     06AB  0821               	movf	(main@negativeFeedValue+1)^(0+384),w
  8997     06AC  1283               	bcf	3,5	;RP0=0, select bank0
  8998     06AD  1303               	bcf	3,6	;RP1=0, select bank0
  8999     06AE  00AF               	movwf	?_sprintf+3
  9000     06AF  1683               	bsf	3,5	;RP0=1, select bank3
  9001     06B0  1703               	bsf	3,6	;RP1=1, select bank3
  9002     06B1  0820               	movf	main@negativeFeedValue^(0+384),w
  9003     06B2  1283               	bcf	3,5	;RP0=0, select bank0
  9004     06B3  1303               	bcf	3,6	;RP1=0, select bank0
  9005     06B4  00AE               	movwf	?_sprintf+2
  9006     06B5  30C5               	movlw	(low (main@uartMessage_370| 0))& (0+255)
  9007     06B6  120A  158A  22C4  120A  118A  	fcall	_sprintf
  9008     06BB                     l3281:
  9009                           
  9010                           ;main1.c: 367:                 UART_Write_Text(uartMessage);
  9011     06BB  30C5               	movlw	(low (main@uartMessage_370| 0))& (0+255)
  9012     06BC  1283               	bcf	3,5	;RP0=0, select bank0
  9013     06BD  1303               	bcf	3,6	;RP1=0, select bank0
  9014     06BE  00A1               	movwf	UART_Write_Text@text
  9015     06BF  3000               	movlw	0
  9016     06C0  00A2               	movwf	UART_Write_Text@text+1
  9017     06C1  160A  118A  2327  120A  118A  	fcall	_UART_Write_Text
  9018     06C6  2F39               	goto	l3299
  9019     06C7                     l249:
  9020     06C7  1C89               	btfss	9,1	;volatile
  9021     06C8  2ECA               	goto	u4321
  9022     06C9  2ECB               	goto	u4320
  9023     06CA                     u4321:
  9024     06CA  2F1B               	goto	l3293
  9025     06CB                     u4320:
  9026     06CB                     l3283:
  9027                           
  9028                           ;main1.c: 371:             Lcd_Set_Cursor(2, 13);
  9029     06CB  300D               	movlw	13
  9030     06CC  00A4               	movwf	Lcd_Set_Cursor@b
  9031     06CD  3002               	movlw	2
  9032     06CE  160A  118A  2440  120A  118A  	fcall	_Lcd_Set_Cursor
  9033     06D3                     l3285:
  9034                           
  9035                           ;main1.c: 372:             Lcd_Write_String(" REW         ");
  9036     06D3  30EB               	movlw	low (STR_24| (0+32768))
  9037     06D4  1283               	bcf	3,5	;RP0=0, select bank0
  9038     06D5  1303               	bcf	3,6	;RP1=0, select bank0
  9039     06D6  00A5               	movwf	Lcd_Write_String@a
  9040     06D7  3090               	movlw	high (STR_24| (0+32768))
  9041     06D8  00A6               	movwf	Lcd_Write_String@a+1
  9042     06D9  160A  118A  23B3  120A  118A  	fcall	_Lcd_Write_String
  9043     06DE                     l3287:
  9044                           
  9045                           ;main1.c: 373:             int negativeDisplayValue = -displayValue;
  9046     06DE  1683               	bsf	3,5	;RP0=1, select bank3
  9047     06DF  1703               	bsf	3,6	;RP1=1, select bank3
  9048     06E0  0922               	comf	main@displayValue^(0+384),w
  9049     06E1  1283               	bcf	3,5	;RP0=0, select bank0
  9050     06E2  1303               	bcf	3,6	;RP1=0, select bank0
  9051     06E3  00D4               	movwf	??_main
  9052     06E4  1683               	bsf	3,5	;RP0=1, select bank3
  9053     06E5  1703               	bsf	3,6	;RP1=1, select bank3
  9054     06E6  0923               	comf	(main@displayValue+1)^(0+384),w
  9055     06E7  1283               	bcf	3,5	;RP0=0, select bank0
  9056     06E8  1303               	bcf	3,6	;RP1=0, select bank0
  9057     06E9  00D5               	movwf	??_main+1
  9058     06EA  0AD4               	incf	??_main,f
  9059     06EB  1903               	skipnz
  9060     06EC  0AD5               	incf	??_main+1,f
  9061     06ED  0854               	movf	??_main,w
  9062     06EE  1683               	bsf	3,5	;RP0=1, select bank3
  9063     06EF  1703               	bsf	3,6	;RP1=1, select bank3
  9064     06F0  0090               	movwf	main@negativeDisplayValue^(0+384)
  9065     06F1  1283               	bcf	3,5	;RP0=0, select bank0
  9066     06F2  1303               	bcf	3,6	;RP1=0, select bank0
  9067     06F3  0855               	movf	??_main+1,w
  9068     06F4  1683               	bsf	3,5	;RP0=1, select bank3
  9069     06F5  1703               	bsf	3,6	;RP1=1, select bank3
  9070     06F6  0091               	movwf	(main@negativeDisplayValue+1)^(0+384)
  9071     06F7                     l3289:
  9072                           
  9073                           ;main1.c: 374:             char combinedText[20];;main1.c: 375:             sprintf(comb
      +                          inedText, "s%d\r\n", negativeDisplayValue);
  9074     06F7  3059               	movlw	low (STR_17| (0+32768))
  9075     06F8  1283               	bcf	3,5	;RP0=0, select bank0
  9076     06F9  1303               	bcf	3,6	;RP1=0, select bank0
  9077     06FA  00AC               	movwf	sprintf@f
  9078     06FB  3091               	movlw	high (STR_17| (0+32768))
  9079     06FC  00AD               	movwf	sprintf@f+1
  9080     06FD  1683               	bsf	3,5	;RP0=1, select bank3
  9081     06FE  1703               	bsf	3,6	;RP1=1, select bank3
  9082     06FF  0811               	movf	(main@negativeDisplayValue+1)^(0+384),w
  9083     0700  1283               	bcf	3,5	;RP0=0, select bank0
  9084     0701  1303               	bcf	3,6	;RP1=0, select bank0
  9085     0702  00AF               	movwf	?_sprintf+3
  9086     0703  1683               	bsf	3,5	;RP0=1, select bank3
  9087     0704  1703               	bsf	3,6	;RP1=1, select bank3
  9088     0705  0810               	movf	main@negativeDisplayValue^(0+384),w
  9089     0706  1283               	bcf	3,5	;RP0=0, select bank0
  9090     0707  1303               	bcf	3,6	;RP1=0, select bank0
  9091     0708  00AE               	movwf	?_sprintf+2
  9092     0709  30A0               	movlw	(low (main@combinedText_374| 0))& (0+255)
  9093     070A  120A  158A  22C4  120A  118A  	fcall	_sprintf
  9094     070F                     l3291:
  9095                           
  9096                           ;main1.c: 376:             UART_Write_Text(combinedText);
  9097     070F  30A0               	movlw	(low (main@combinedText_374| 0))& (0+255)
  9098     0710  1283               	bcf	3,5	;RP0=0, select bank0
  9099     0711  1303               	bcf	3,6	;RP1=0, select bank0
  9100     0712  00A1               	movwf	UART_Write_Text@text
  9101     0713  3000               	movlw	0
  9102     0714  00A2               	movwf	UART_Write_Text@text+1
  9103     0715  160A  118A  2327  120A  118A  	fcall	_UART_Write_Text
  9104                           
  9105                           ;main1.c: 377:         } else {
  9106     071A  2F39               	goto	l3299
  9107     071B                     l3293:
  9108                           
  9109                           ;main1.c: 379:             Lcd_Set_Cursor(2, 13);
  9110     071B  300D               	movlw	13
  9111     071C  00A4               	movwf	Lcd_Set_Cursor@b
  9112     071D  3002               	movlw	2
  9113     071E  160A  118A  2440  120A  118A  	fcall	_Lcd_Set_Cursor
  9114     0723                     l3295:
  9115                           
  9116                           ;main1.c: 380:             Lcd_Write_String(" STOP       ");
  9117     0723  3007               	movlw	low (STR_26| (0+32768))
  9118     0724  1283               	bcf	3,5	;RP0=0, select bank0
  9119     0725  1303               	bcf	3,6	;RP1=0, select bank0
  9120     0726  00A5               	movwf	Lcd_Write_String@a
  9121     0727  3091               	movlw	high (STR_26| (0+32768))
  9122     0728  00A6               	movwf	Lcd_Write_String@a+1
  9123     0729  160A  118A  23B3  120A  118A  	fcall	_Lcd_Write_String
  9124     072E                     l3297:
  9125                           
  9126                           ;main1.c: 381:             UART_Write_Text("s0\r\n");
  9127     072E  3065               	movlw	low (STR_15| (0+32768))
  9128     072F  1283               	bcf	3,5	;RP0=0, select bank0
  9129     0730  1303               	bcf	3,6	;RP1=0, select bank0
  9130     0731  00A1               	movwf	UART_Write_Text@text
  9131     0732  3091               	movlw	high (STR_15| (0+32768))
  9132     0733  00A2               	movwf	UART_Write_Text@text+1
  9133     0734  160A  118A  2327  120A  118A  	fcall	_UART_Write_Text
  9134     0739                     l3299:
  9135                           
  9136                           ;main1.c: 388:         if((RC1==1) &&( RE0==1 || RE2 )){
  9137     0739  1283               	bcf	3,5	;RP0=0, select bank0
  9138     073A  1303               	bcf	3,6	;RP1=0, select bank0
  9139     073B  1C87               	btfss	7,1	;volatile
  9140     073C  2F3E               	goto	u4331
  9141     073D  2F3F               	goto	u4330
  9142     073E                     u4331:
  9143     073E  2F4B               	goto	l259
  9144     073F                     u4330:
  9145     073F                     l3301:
  9146     073F  1809               	btfsc	9,0	;volatile
  9147     0740  2F42               	goto	u4341
  9148     0741  2F43               	goto	u4340
  9149     0742                     u4341:
  9150     0742  2F47               	goto	l261
  9151     0743                     u4340:
  9152     0743                     l3303:
  9153     0743  1D09               	btfss	9,2	;volatile
  9154     0744  2F46               	goto	u4351
  9155     0745  2F47               	goto	u4350
  9156     0746                     u4351:
  9157     0746  2F4B               	goto	l259
  9158     0747                     u4350:
  9159     0747                     l261:
  9160                           
  9161                           ;main1.c: 390:             RA4=1;
  9162     0747  1283               	bcf	3,5	;RP0=0, select bank0
  9163     0748  1303               	bcf	3,6	;RP1=0, select bank0
  9164     0749  1605               	bsf	5,4	;volatile
  9165                           
  9166                           ;main1.c: 391:         }
  9167     074A  2FEC               	goto	l267
  9168     074B                     l259:	
  9169                           ;main1.c: 392:         else if(( RC2==1) && (RE1==1 || RC0)){
  9170                           
  9171     074B  1D07               	btfss	7,2	;volatile
  9172     074C  2F4E               	goto	u4361
  9173     074D  2F4F               	goto	u4360
  9174     074E                     u4361:
  9175     074E  2F58               	goto	l263
  9176     074F                     u4360:
  9177     074F                     l3305:
  9178     074F  1889               	btfsc	9,1	;volatile
  9179     0750  2F52               	goto	u4371
  9180     0751  2F53               	goto	u4370
  9181     0752                     u4371:
  9182     0752  2F47               	goto	l261
  9183     0753                     u4370:
  9184     0753                     l3307:
  9185     0753  1C07               	btfss	7,0	;volatile
  9186     0754  2F56               	goto	u4381
  9187     0755  2F57               	goto	u4380
  9188     0756                     u4381:
  9189     0756  2F58               	goto	l263
  9190     0757                     u4380:
  9191     0757  2F47               	goto	l261
  9192     0758                     l263:	
  9193                           ;main1.c: 396:         else {
  9194                           
  9195                           
  9196                           ;main1.c: 397:             RA4=0;
  9197     0758  1205               	bcf	5,4	;volatile
  9198     0759  2FEC               	goto	l267
  9199     075A                     l213:	
  9200                           ;main1.c: 402: else if( RC3==1) {
  9201                           
  9202     075A  1D87               	btfss	7,3	;volatile
  9203     075B  2F5D               	goto	u4391
  9204     075C  2F5E               	goto	u4390
  9205     075D                     u4391:
  9206     075D  2FB4               	goto	l268
  9207     075E                     u4390:
  9208     075E                     l3309:
  9209                           
  9210                           ;main1.c: 407:     Lcd_Set_Cursor(1,1);
  9211     075E  01A4               	clrf	Lcd_Set_Cursor@b
  9212     075F  0AA4               	incf	Lcd_Set_Cursor@b,f
  9213     0760  3001               	movlw	1
  9214     0761  160A  118A  2440  120A  118A  	fcall	_Lcd_Set_Cursor
  9215     0766                     l3311:
  9216                           
  9217                           ;main1.c: 408:             Lcd_Write_String("   FEED RATE ERROR       ");
  9218     0766  3037               	movlw	low (STR_28| (0+32768))
  9219     0767  1283               	bcf	3,5	;RP0=0, select bank0
  9220     0768  1303               	bcf	3,6	;RP1=0, select bank0
  9221     0769  00A5               	movwf	Lcd_Write_String@a
  9222     076A  3090               	movlw	high (STR_28| (0+32768))
  9223     076B  00A6               	movwf	Lcd_Write_String@a+1
  9224     076C  160A  118A  23B3  120A  118A  	fcall	_Lcd_Write_String
  9225     0771                     l3313:
  9226                           
  9227                           ;main1.c: 409:     Lcd_Set_Cursor(2,1);
  9228     0771  1283               	bcf	3,5	;RP0=0, select bank0
  9229     0772  1303               	bcf	3,6	;RP1=0, select bank0
  9230     0773  01A4               	clrf	Lcd_Set_Cursor@b
  9231     0774  0AA4               	incf	Lcd_Set_Cursor@b,f
  9232     0775  3002               	movlw	2
  9233     0776  160A  118A  2440  120A  118A  	fcall	_Lcd_Set_Cursor
  9234                           
  9235                           ;main1.c: 410:             Lcd_Write_String("   ILERLEME HATASI        ");
  9236     077B  301C               	movlw	low (STR_29| (0+32768))
  9237     077C  1283               	bcf	3,5	;RP0=0, select bank0
  9238     077D  1303               	bcf	3,6	;RP1=0, select bank0
  9239     077E  00A5               	movwf	Lcd_Write_String@a
  9240     077F  3090               	movlw	high (STR_29| (0+32768))
  9241     0780  00A6               	movwf	Lcd_Write_String@a+1
  9242     0781  160A  118A  23B3  120A  118A  	fcall	_Lcd_Write_String
  9243                           
  9244                           ;main1.c: 411:      UART_Write_Text("s0\r\n");
  9245     0786  3065               	movlw	low (STR_15| (0+32768))
  9246     0787  1283               	bcf	3,5	;RP0=0, select bank0
  9247     0788  1303               	bcf	3,6	;RP1=0, select bank0
  9248     0789  00A1               	movwf	UART_Write_Text@text
  9249     078A  3091               	movlw	high (STR_15| (0+32768))
  9250     078B  00A2               	movwf	UART_Write_Text@text+1
  9251     078C  160A  118A  2327  120A  118A  	fcall	_UART_Write_Text
  9252     0791                     l3315:
  9253                           
  9254                           ;main1.c: 412:       RA4=1;
  9255     0791  1283               	bcf	3,5	;RP0=0, select bank0
  9256     0792  1303               	bcf	3,6	;RP1=0, select bank0
  9257     0793  1605               	bsf	5,4	;volatile
  9258     0794                     l3317:
  9259                           
  9260                           ;main1.c: 413:       _delay((unsigned long)((1000)*(4000000/4000.0)));
  9261     0794  3006               	movlw	6
  9262     0795  1283               	bcf	3,5	;RP0=0, select bank0
  9263     0796  1303               	bcf	3,6	;RP1=0, select bank0
  9264     0797  00D6               	movwf	??_main+2
  9265     0798  3013               	movlw	19
  9266     0799  00D5               	movwf	??_main+1
  9267     079A  30AD               	movlw	173
  9268     079B  00D4               	movwf	??_main
  9269     079C                     u4477:
  9270     079C  0BD4               	decfsz	??_main,f
  9271     079D  2F9C               	goto	u4477
  9272     079E  0BD5               	decfsz	??_main+1,f
  9273     079F  2F9C               	goto	u4477
  9274     07A0  0BD6               	decfsz	??_main+2,f
  9275     07A1  2F9C               	goto	u4477
  9276     07A2                     l3319:
  9277                           
  9278                           ;main1.c: 414:       RA4=0;
  9279     07A2  1283               	bcf	3,5	;RP0=0, select bank0
  9280     07A3  1303               	bcf	3,6	;RP1=0, select bank0
  9281     07A4  1205               	bcf	5,4	;volatile
  9282     07A5                     l3321:
  9283                           
  9284                           ;main1.c: 415:       _delay((unsigned long)((3000)*(4000000/4000.0)));
  9285     07A5  3010               	movlw	16
  9286     07A6  1283               	bcf	3,5	;RP0=0, select bank0
  9287     07A7  1303               	bcf	3,6	;RP1=0, select bank0
  9288     07A8  00D6               	movwf	??_main+2
  9289     07A9  3039               	movlw	57
  9290     07AA  00D5               	movwf	??_main+1
  9291     07AB  300D               	movlw	13
  9292     07AC  00D4               	movwf	??_main
  9293     07AD                     u4487:
  9294     07AD  0BD4               	decfsz	??_main,f
  9295     07AE  2FAD               	goto	u4487
  9296     07AF  0BD5               	decfsz	??_main+1,f
  9297     07B0  2FAD               	goto	u4487
  9298     07B1  0BD6               	decfsz	??_main+2,f
  9299     07B2  2FAD               	goto	u4487
  9300     07B3  2F47               	goto	l261
  9301     07B4                     l268:	
  9302                           ;main1.c: 421:      else if (RD0 == 1 ){
  9303                           
  9304     07B4  1C08               	btfss	8,0	;volatile
  9305     07B5  2FB7               	goto	u4401
  9306     07B6  2FB8               	goto	u4400
  9307     07B7                     u4401:
  9308     07B7  2FEC               	goto	l267
  9309     07B8                     u4400:
  9310     07B8                     l3325:
  9311                           
  9312                           ;main1.c: 422:     UART_Write_Text("s0\r\n");
  9313     07B8  3065               	movlw	low (STR_15| (0+32768))
  9314     07B9  00A1               	movwf	UART_Write_Text@text
  9315     07BA  3091               	movlw	high (STR_15| (0+32768))
  9316     07BB  00A2               	movwf	UART_Write_Text@text+1
  9317     07BC  160A  118A  2327  120A  118A  	fcall	_UART_Write_Text
  9318     07C1                     l3327:
  9319                           
  9320                           ;main1.c: 423:     Lcd_Set_Cursor(1,1);
  9321     07C1  1283               	bcf	3,5	;RP0=0, select bank0
  9322     07C2  1303               	bcf	3,6	;RP1=0, select bank0
  9323     07C3  01A4               	clrf	Lcd_Set_Cursor@b
  9324     07C4  0AA4               	incf	Lcd_Set_Cursor@b,f
  9325     07C5  3001               	movlw	1
  9326     07C6  160A  118A  2440  120A  118A  	fcall	_Lcd_Set_Cursor
  9327     07CB                     l3329:
  9328                           
  9329                           ;main1.c: 424:             Lcd_Write_String("   ROTATION ERROR      ");
  9330     07CB  3069               	movlw	low (STR_32| (0+32768))
  9331     07CC  1283               	bcf	3,5	;RP0=0, select bank0
  9332     07CD  1303               	bcf	3,6	;RP1=0, select bank0
  9333     07CE  00A5               	movwf	Lcd_Write_String@a
  9334     07CF  3090               	movlw	high (STR_32| (0+32768))
  9335     07D0  00A6               	movwf	Lcd_Write_String@a+1
  9336     07D1  160A  118A  23B3  120A  118A  	fcall	_Lcd_Write_String
  9337                           
  9338                           ;main1.c: 425:     Lcd_Set_Cursor(2,1);
  9339     07D6  1283               	bcf	3,5	;RP0=0, select bank0
  9340     07D7  1303               	bcf	3,6	;RP1=0, select bank0
  9341     07D8  01A4               	clrf	Lcd_Set_Cursor@b
  9342     07D9  0AA4               	incf	Lcd_Set_Cursor@b,f
  9343     07DA  3002               	movlw	2
  9344     07DB  160A  118A  2440  120A  118A  	fcall	_Lcd_Set_Cursor
  9345     07E0                     l3331:
  9346                           
  9347                           ;main1.c: 426:             Lcd_Write_String("   DONME HATASI        ");
  9348     07E0  3051               	movlw	low (STR_33| (0+32768))
  9349     07E1  1283               	bcf	3,5	;RP0=0, select bank0
  9350     07E2  1303               	bcf	3,6	;RP1=0, select bank0
  9351     07E3  00A5               	movwf	Lcd_Write_String@a
  9352     07E4  3090               	movlw	high (STR_33| (0+32768))
  9353     07E5  00A6               	movwf	Lcd_Write_String@a+1
  9354     07E6  160A  118A  23B3  120A  118A  	fcall	_Lcd_Write_String
  9355     07EB  2F91               	goto	l3315
  9356     07EC                     l267:
  9357     07EC  160A  118A  2FB4   	goto	l3101
  9358     07EF                     l212:
  9359     07EF  120A  118A  280E   	ljmp	start
  9360     07F2                     __end_of_main:

Data Sizes:
    Strings     342
    Constant    10
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80     78      80
    BANK1            80     80      80
    BANK3            96     20      22
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_25(CODE[6]), STR_23(CODE[6]), STR_19(CODE[6]), STR_17(CODE[6]), 
		 -> STR_13(CODE[10]), STR_11(CODE[6]), STR_8(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> main@combinedText_374(BANK1[20]), main@uartMessage_370(BANK1[8]), main@combinedText(BANK0[20]), main@uartMessage(BANK1[8]), 
		 -> main@rpmString(BANK1[5]), main@adcString1(BANK1[4]), main@lcdText(BANK1[9]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    incrementTime@time	PTR struct Time size(1) Largest target is 6
		 -> currentTime(COMMON[6]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 27
		 -> STR_33(CODE[24]), STR_32(CODE[24]), STR_29(CODE[27]), STR_28(CODE[26]), 
		 -> STR_26(CODE[13]), STR_24(CODE[14]), STR_22(CODE[10]), STR_20(CODE[9]), 
		 -> STR_18(CODE[15]), STR_16(CODE[10]), STR_14(CODE[9]), main@rpmString(BANK1[5]), 
		 -> STR_12(CODE[5]), main@adcString1(BANK1[4]), STR_10(CODE[10]), STR_9(CODE[3]), 
		 -> main@lcdText(BANK1[9]), STR_7(CODE[21]), STR_6(CODE[20]), STR_5(CODE[3]), 
		 -> STR_4(CODE[15]), STR_3(CODE[16]), STR_2(CODE[14]), STR_1(CODE[19]), 

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 20
		 -> STR_31(CODE[5]), STR_30(CODE[5]), STR_27(CODE[5]), main@combinedText_374(BANK1[20]), 
		 -> main@uartMessage_370(BANK1[8]), STR_21(CODE[5]), main@combinedText(BANK0[20]), main@uartMessage(BANK1[8]), 
		 -> STR_15(CODE[5]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _timer_isr in COMMON

    _timer_isr->_writeEEPROM

Critical Paths under _main in BANK0

    _main->___flmul
    _yagBakim->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    ___flmul->___fldiv
    ___awmod->___fltol
    ___awdiv->___fltol
    _UART_Write_Text->_UART_Write
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _timer_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer_isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer_isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               132   132      0   22945
                                             52 BANK0     26    26      0
                                              0 BANK1     80    80      0
                                              0 BANK3     20    20      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                    _UART_Initialize
                    _UART_Write_Text
                            ___awdiv
                            ___awmod
                            ___fldiv
                            ___flmul
                            ___fltol
                            ___lwmod
                             ___wmul
                           ___xxtofl
                         _readEEPROM
                            _sprintf
                           _yagBakim
 ---------------------------------------------------------------------------------
 (1) _yagBakim                                             2     2      0    4452
                                             12 BANK0      2     2      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2    2092
                                              5 BANK0      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     178
                                              1 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1    2204
                                              4 BANK0      6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             31    21     10    3567
                                             12 BANK0     23    13     10
                            ___fltol (ARG)
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     700
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     767
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _readEEPROM                                           4     2      2     326
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     550
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     685
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2721
                                             26 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1425
                                              0 BANK0     26    18      8
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     448
                                             10 BANK0      6     2      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     756
                                             10 BANK0      8     4      4
                            ___fltol (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      7     5      2     796
                                              1 BANK0      7     5      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     110
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _timer_isr                                            5     5      0     689
                                              4 COMMON     4     4      0
                      _incrementTime
                        _writeEEPROM
 ---------------------------------------------------------------------------------
 (6) _writeEEPROM                                          4     0      4     500
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (6) _incrementTime                                        3     3      0     187
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _UART_Initialize
   _UART_Write_Text
     _UART_Write
   ___awdiv
     ___fltol (ARG)
     ___wmul (ARG)
   ___awmod
     ___fltol (ARG)
   ___fldiv
   ___flmul
     __Umul8_16
     ___fldiv (ARG)
     ___xxtofl (ARG)
   ___fltol
   ___lwmod
     ___lwdiv (ARG)
   ___wmul
   ___xxtofl
   _readEEPROM
   _sprintf
     ___fltol (ARG)
     ___lwdiv (ARG)
     ___lwmod (ARG)
     ___wmul (ARG)
     _isdigit (ARG)
   _yagBakim
     _Lcd_Clear
     _Lcd_Set_Cursor
     _Lcd_Write_String

 _timer_isr (ROOT)
   _incrementTime
   _writeEEPROM

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      C4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60     14      16       9       22.9%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      C4      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Sep 22 11:46:37 2023

            ___fldiv@aexp 0039              ___fldiv@bexp 0038                         pc 0002  
            ___fldiv@sign 0031                        l13 121F                        l16 07F5  
                      l25 136C                        l19 07FF                        _RD 0C60  
                      _WR 0C61              ___awdiv@sign 002F                        fsr 0004  
     ___wmul@multiplicand 0022       __Umul8_16@word_mpld 0026                       l140 128B  
                     l212 07EF                       l141 128C                       l221 0127  
                     l213 075A                       l142 1292                       l230 0418  
                     l143 1293                       l231 055A                       l144 1299  
                     l152 120F                       l240 05BF                       l224 01B0  
                     l161 15FC                       l209 0033                       l146 129A  
                     l138 1284                       l170 13F8                       l139 1285  
                     l243 05FB                       l235 05C0                       l227 03AA  
                     l412 12A9                       l164 083A                       l149 127A  
                     l261 0747                       l253 062E                       l245 0626  
                     l190 1248                       l414 12C1                       l158 148B  
                     l175 14DD                       l263 0758                       l239 0562  
                     l408 0CBA                       l249 06C7                       l370 0ADE  
                     l267 07EC                       l259 074B                       l268 07B4  
                     l605 16C8                       l382 0B7D                       l391 0BE5  
                     l608 16DD                       l384 0B53                       l801 0FFF  
                     l820 12D8                       l565 1665                       l822 12EA  
                     l807 0F6F                       l761 094B                       l578 1538  
                     l763 0AC3                       l684 13B2                       l845 085F  
                     l598 16DD                       l694 1326                       l783 0AAF  
                     l847 08F4                       l777 0A3D                       l865 1233  
                     l858 08BE                       l859 08CA                       _GIE 005F  
                     _RB0 0030                       _RB1 0031                       _RB2 0032  
                     _RA4 002C                       _RC0 0038                       _RB3 0033  
                     _RC1 0039                       _RB4 0034                       _RC2 003A  
                     _RD0 0040                       _RB5 0035                       _RC3 003B  
                     _RE0 0048                       _RE1 0049                       _RE2 004A  
                     fsr0 0004                       indf 0000              ___awmod@sign 002F  
            ___flmul@aexp 004C              ___flmul@bexp 004D              ___flmul@sign 0047  
            ___flmul@temp 0052              ___flmul@prod 004E               main@lcdText 00B4  
            ___fltol@exp1 0029                      l2201 1448                      l3001 16E6  
                    l2211 146D                      l2203 1455                      l3011 16EB  
                    l3003 16E7                      l2301 12C5                      l2213 147A  
                    l2205 1458                      l2221 13B8                      l3101 17B4  
                    l3021 16F6                      l3013 16EC                      l3005 16E8  
                    l2311 12E6                      l2303 12C7                      l2231 122A  
                    l2215 147D                      l2207 145E                      l2223 13D4  
                    l3111 17F6                      l3103 17BE                      l3031 16FC  
                    l3023 16F7                      l3015 16ED                      l3007 16E9  
                    l2161 1297                      l2153 127E                      l2321 132C  
                    l2305 12CE                      l2241 129F                      l2233 1230  
                    l2401 0AFA                      l2217 1483                      l2209 1467  
                    l2225 13DC                      l3201 04C7                      l3121 0039  
                    l3113 0023                      l3105 17C8                      l3041 172F  
                    l3033 170B                      l3025 16F8                      l3017 16F2  
                    l3009 16EA                      l2155 1282                      l2171 1277  
                    l2163 1262                      l2331 15AB                      l2315 1210  
                    l2323 1348                      l2307 12D2                      l2243 12A3  
                    l2235 1232                      l2227 1223                      l2411 0B40  
                    l2403 0B0C                      l2219 13B3                      l3211 052D  
                    l3203 04D1                      l3131 0073                      l3123 003D  
                    l3115 0027                      l3107 17D3                      l3051 1734  
                    l3043 1730                      l3035 170E                      l3027 16F9  
                    l3019 16F5                      l2157 1289                      l2165 1263  
                    l2333 15BC                      l2317 121C                      l2325 1350  
                    l2309 12E1                      l2261 1381                      l2253 136D  
                    l2245 12B0                      l2229 1224                      l2421 0B8D  
                    l2405 0B10                      l2181 081D                      l2173 0805  
                    l3301 073F                      l3221 054E                      l3213 0533  
                    l3205 04DC                      l3141 00B2                      l3133 0089  
                    l3125 0052                      l3117 002B                      l3109 17E8  
                    l3061 1750                      l3053 1735                      l3045 1731  
                    l3037 171D                      l3029 16FA                      l2159 1290  
                    l2167 1269                      l2335 15C2                      l2327 159A  
                    l2319 1327                      l2511 1600                      l2271 13A1  
                    l2263 1385                      l2255 1371                      l2247 12B7  
                    l2239 129B                      l2423 0B91                      l2431 0BA7  
                    l2407 0B25                      l2415 0B55                      l2191 0837  
                    l2183 0824                      l2175 080B                      l2351 14BF  
                    l3311 0766                      l3303 0743                      l3231 057D  
                    l3223 055E                      l3215 0537                      l3207 0518  
                    l3151 011D                      l3143 00ED                      l3135 0090  
                    l3127 0058                      l3119 002F                      l3071 1788  
                    l3063 175A                      l3055 1736                      l3047 1732  
                    l3039 172C                      l2169 126C                      l2329 15A0  
                    l2193 07F5                      l2521 1614                      l2513 1604  
                    l2601 168E                      l2273 13A8                      l2265 1389  
                    l2257 1377                      l2281 12F3                      l2249 12BD  
                    l2441 0BC9                      l2425 0B95                      l2417 0B81  
                    l2409 0B3A                      l2185 0827                      l2177 080C  
                    l2353 14C2                      l2345 1495                      l2337 148C  
                    l3321 07A5                      l3313 0771                      l3305 074F  
                    l3241 05C4                      l3233 0588                      l3225 0566  
                    l3217 053B                      l3209 0522                      l3161 01AD  
                    l3153 0124                      l3145 00F7                      l3137 0096  
                    l3129 006D                      l3081 179D                      l3073 178D  
                    l3065 1765                      l3057 173B                      l3049 1733  
                    l2195 07FB                      l2531 162A                      l2523 1618  
                    l2515 1609                      l2603 1696                      l2267 139A  
                    l2259 137A                      l2275 13AE                      l2291 130F  
                    l2283 12F6                      l2451 0BF0                      l2443 0BCD  
                    l2419 0B89                      l2427 0B9B                      l2187 082D  
                    l2179 081A                      l2355 14C8                      l2347 149F  
                    l2339 1491                      l3331 07E0                      l3315 0791  
                    l3307 0753                      l3251 0603                      l3243 05CC  
                    l3235 0597                      l3227 056A                      l3219 0543  
                    l3171 0287                      l3163 01B4                      l3155 012B  
                    l3147 010C                      l3139 009B                      l3091 17AA  
                    l3083 17A1                      l3075 1791                      l3067 176F  
                    l3059 1745                      l2541 164A                      l2533 162E  
                    l2525 161A                      l2517 160B                      l2509 15FD  
                    l2701 09C2                      l2613 16A4                      l2605 1698  
                    l2373 1234                      l2269 13A0                      l2293 1315  
                    l2285 12FD                      l2461 0C0F                      l2453 0BFC  
                    l2445 0BD3                      l2437 0BA9                      l2429 0BA3  
                    l2197 1203                      l2189 0830                      l2357 14D5  
                    l2349 14AA                      l3325 07B8                      l3317 0794  
                    l3309 075E                      l3261 0632                      l3253 0607  
                    l3245 05D7                      l3237 059B                      l3229 0572  
                    l3181 03A7                      l3173 02E4                      l3165 01BA  
                    l3157 01A0                      l3149 0117                      l3093 17AB  
                    l3085 17A7                      l3077 1796                      l3069 177A  
                    l2543 1651                      l2535 1632                      l2527 1620  
                    l2519 160F                      l2703 09CB                      l2711 09F0  
                    l2631 08FA                      l2623 16BD                      l2615 16AD  
                    l2607 169C                      l2375 123A                      l2295 131C  
                    l2287 1301                      l2279 12EB                      l2463 0C13  
                    l2471 0C2F                      l2455 0C00                      l2447 0BD9  
                    l2391 0AD5                      l2199 1443                      l2359 14DA  
                    l3327 07C1                      l3319 07A2                      l3271 066F  
                    l3263 0636                      l3255 060F                      l3247 05EF  
                    l3239 05B3                      l3191 046E                      l3183 03AE  
                    l3175 0360                      l3167 020E                      l3159 01A6  
                    l3095 17AC                      l3087 17A8                      l3079 179A  
                    l2537 1643                      l2529 1623                      l2545 1657  
                    l2561 14EC                      l2553 14DE                      l2721 0A0D  
                    l2713 09F6                      l2705 09DD                      l2641 090D  
                    l2633 08FE                      l2801 0CF3                      l2625 16CD  
                    l2617 16B6                      l2289 1305                      l2297 1322  
                    l2481 0C50                      l2473 0C35                      l2465 0C19  
                    l2457 0C04                      l2449 0BDF                      l2393 0ADA  
                    l2385 0AC7                      l3329 07CB                      l3281 06BB  
                    l3273 0677                      l3265 063E                      l3257 061A  
                    l3249 05FF                      l3193 0478                      l3185 03E4  
                    l3177 039A                      l3169 024D                      l3097 17AD  
                    l3089 17A9                      l2547 165C                      l2539 1649  
                    l2571 1505                      l2563 14F0                      l2555 14E1  
                    l2731 0A22                      l2723 0A0E                      l2715 09FE  
                    l2707 09DE                      l2651 0925                      l2643 0915  
                    l2635 0902                      l2811 0D0F                      l2803 0CF8  
                    l2627 16D2                      l2491 0C93                      l2483 0C55  
                    l2475 0C3A                      l2467 0C1E                      l2459 0C0A  
                    l2395 0ADF                      l2387 0ACA                      l3291 070F  
                    l3283 06CB                      l3275 0684                      l3267 0649  
                    l3259 062A                      l3195 0483                      l3187 03EA  
                    l3179 03A0                      l3099 17AE                      l2549 1661  
                    l2581 1524                      l2573 1509                      l2565 14F5  
                    l2557 14E5                      l2741 0A47                      l2733 0A26  
                    l2725 0A17                      l2717 0A00                      l2709 09EC  
                    l2661 0938                      l2653 0929                      l2645 0916  
                    l2637 0903                      l2629 08F5                      l2901 0FDB  
                    l2821 0D30                      l2813 0D14                      l2805 0CFD  
                    l2493 0C97                      l2477 0C3E                      l2469 0C22  
                    l2485 0C59                      l2389 0AD0                      l3285 06D3  
                    l3293 071B                      l3277 068A                      l3269 0662  
                    l3197 04B2                      l3189 03EE                      l2575 150D  
                    l2567 14FB                      l2583 152A                      l2559 14EA  
                    l2751 0A85                      l2743 0A55                      l2735 0A3A  
                    l2719 0A09                      l2727 0A1D                      l2671 095F  
                    l2663 0940                      l2655 092D                      l2639 0908  
                    l2647 0918                      l2903 0FDD                      l2911 0FF3  
                    l2831 0DBA                      l2823 0D3D                      l2815 0D19  
                    l2807 0D05                      l2591 1666                      l2487 0C5C  
                    l2479 0C4A                      l3383 0AF5                      l2399 0AE5  
                    l2495 0CA0                      l3295 0723                      l3287 06DE  
                    l3279 06A3                      l3199 04BC                      l2585 152F  
                    l2577 1517                      l2569 14FE                      l2761 0AB3  
                    l2753 0A93                      l2745 0A59                      l2729 0A21  
                    l2673 0963                      l2665 0941                      l2657 092E  
                    l2649 0920                      l2913 0FF7                      l2905 0FE9  
                    l2841 0E18                      l2833 0DD6                      l2825 0D58  
                    l2809 0D07                      l2593 1671                      l2921 0847  
                    l2489 0C8E                      l2497 0CB6                      l3385 0B6F  
                    l3297 072E                      l3289 06F7                      l2587 1534  
                    l2579 151D                      l2763 0AB7                      l2755 0AA2  
                    l2747 0A72                      l2739 0A42                      l2691 09A4  
                    l2683 097A                      l2659 0933                      l2667 0943  
                    l2907 0FED                      l2851 0EA2                      l2843 0E35  
                    l2835 0DDF                      l2827 0D74                      l2819 0D22  
                    l2931 0873                      l2923 0857                      l3299 0739  
                    l2765 0AB9                      l2757 0AA6                      l2749 0A78  
                    l2693 09A6                      l2685 098C                      l2669 0953  
                    l2677 096C                      l2909 0FEE                      l2861 0F32  
                    l2853 0ECD                      l2845 0E4C                      l2837 0DED  
                    l2829 0D9E                      l2781 0CC8                      l2597 167A  
                    l2941 0899                      l2933 0877                      l2925 0867  
                    l2917 083E                      l2767 0ABD                      l2759 0AAE  
                    l2695 09AB                      l2687 0994                      l2679 0971  
                    l2863 0F3B                      l2871 0F4F                      l2855 0EF3  
                    l2847 0E69                      l2839 0E0A                      l2791 0CDD  
                    l2783 0CC9                      l2775 0CBB                      l2599 168D  
                    l2951 08C2                      l2943 08A2                      l2935 0880  
                    l2919 0843                      l2697 09BD                      l2689 099C  
                    l2873 0F53                      l2865 0F3F                      l2857 0F1B  
                    l2849 0E94                      l2793 0CE5                      l2785 0CCE  
                    l2777 0CC0                      l2961 08EC                      l2953 08CC  
                    l2945 08A9                      l2937 0887                      l2929 0870  
                    l2699 09C1                      l2891 0FA4                      l2883 0F74  
                    l2875 0F54                      l2867 0F40                      l2859 0F24  
                    l2795 0CEA                      l2787 0CD3                      l2779 0CC4  
                    l2955 08E2                      l2947 08B4                      l2939 088B  
                    l2885 0F79                      l2893 0FAA                      l2877 0F58  
                    l2869 0F49                      l2797 0CEE                      l2789 0CDB  
                    l2957 08E7                      l2949 08B8                      l2895 0FB7  
                    l2887 0F87                      l2879 0F6C                      l2799 0CF2  
                    l2959 08EB                      l2991 16E1                      l2897 0FC2  
                    l2889 0F8B                      l2993 16E2                      l2899 0FD1  
                    l2995 16E3                      l2997 16E4                      l2989 16DE  
                    l2999 16E5                      STR_1 10AA                      STR_2 10F9  
                    STR_3 10BD                      STR_4 10DC                      STR_5 116F  
                    STR_6 1096                      STR_7 1081                      STR_8 1114  
                    STR_9 10D9                      _T0IF 005A                      u3000 152F  
                    u3001 152E                      u2210 1282                      u3010 1671  
                    u2211 1281                      u3011 1670                      u2220 1289  
                    u3100 16D2                      u3020 1688                      u2221 1288  
                    u3101 16D1                      u2230 1290                      u3110 0902  
                    u3030 169C                      u2310 13C2                      u2231 128F  
                    u3111 0901                      u3031 169B                      u2240 1297  
                    u3120 0908                      u3040 16A3                      u2400 1377  
                    u2320 13E6                      u4000 003D                      u2241 1296  
                    u3121 0907                      u3041 16A2                      u3025 1683  
                    u2401 1376                      u2305 1473                      u4001 003C  
                    u3130 090D                      u2330 13F8                      u4010 0052  
                    u3131 090C                      u2331 13F7                      u4011 0051  
                    u2260 07FB                      u3300 0A21                      u3220 09C1  
                    u3140 092D                      u3060 16B5                      u2420 1389  
                    u2500 130F                      u2340 122A                      u4100 03AE  
                    u4020 0058                      u2261 07FA                      u3301 0A20  
                    u3221 09C0                      u3205 09AD                      u3141 092C  
                    u3061 16B4                      u2421 1388                      u2501 130E  
                    u2341 1229                      u4101 03AD                      u4021 0057  
                    u3310 0A26                      u3150 0933                      u3070 16BC  
                    u2350 1230                      u2270 1448                      u4110 03EA  
                    u4030 006D                      u3311 0A25                      u3215 09B6  
                    u3151 0932                      u3071 16BB                      u3055 16A5  
                    u2415 137B                      u2351 122F                      u2271 1447  
                    u2255 080F                      u4111 03E9                      u4031 006C  
                    u3320 0A3A                      u3240 09DD                      u3160 0938  
                    u3400 0CC8                      u2440 139A                      u2520 1322  
                    u2360 12A3                      u4200 0588                      u4120 03EE  
                    u4040 0073                      u3321 0A39                      u3241 09DC  
                    u3161 0937                      u3401 0CC7                      u2441 1399  
                    u2521 1321                      u2505 130B                      u2361 12A2  
                    u4201 0587                      u4121 03ED                      u4041 0072  
                    u3330 0A41                      u3250 09F6                      u3170 0953  
                    u2530 12D2                      u3410 0CCE                      u3090 16CD  
                    u2290 146D                      u4210 0597                      u4130 0533  
                    u4050 0089                      u3331 0A40                      u3251 09F5  
                    u3235 09C4                      u3171 0952                      u2531 12D1  
                    u3411 0CCD                      u3091 16CC                      u2435 138A  
                    u2515 1316                      u2291 146C                      u4211 0596  
                    u4131 0532                      u4051 0088                      u3340 0A47  
                    u3260 09FE                      u3180 0971                      u3420 0CD3  
                    u2460 13AE                      u2700 0BD9                      u4300 066F  
                    u4220 05C4                      u4140 0537                      u4060 0090  
                    u3341 0A46                      u3261 09FD                      u3245 09D9  
                    u3181 0970                      u3501 0DAC                      u3421 0CD2  
                    u3085 16BF                      u2461 13AD                      u2445 1396  
                    u2701 0BD8                      u2285 144E                      u4301 066E  
                    u4221 05C3                      u4141 0536                      u4061 008F  
                    u3350 0A59                      u3190 09AB                      u2550 12E6  
                    u3502 0DB3                      u3430 0CF2                      u2470 12F3  
                    u2390 12BD                      u2710 0BDF                      u2630 0AD0  
                    u4310 0684                      u4230 05FF                      u4150 053B  
                    u4070 0096                      u3351 0A58                      u3191 09AA  
                    u2551 12E5                      u3511 0DC8                      u3503 0DBA  
                    u3431 0CF1                      u2455 13A2                      u2471 12F2  
                    u2391 12BC                      u2375 12AA                      u2711 0BDE  
                    u2631 0ACF                      u4311 0683                      u4231 05FE  
                    u4151 053A                      u4071 0095                      u2560 1336  
                    u3360 0A68                      u3280 0A0D                      u3512 0DCF  
                    u3440 0CF8                      u2800 0CA0                      u2720 0BF0  
                    u2640 0B0C                      u4400 07B8                      u4320 06CB  
                    u4240 0603                      u4160 055E                      u4080 012B  
                    u3281 0A0C                      u2545 12D9                      u3601 0EE5  
                    u3513 0DD6                      u3441 0CF7                      u2385 12B1  
                    u2801 0C9F                      u2721 0BEF                      u2641 0B0B  
                    u4401 07B7                      u4321 06CA                      u4305 066B  
                    u4241 0602                      u4161 055D                      u4081 012A  
                    u2570 135A                      u3370 0A85                      u3610 0F01  
                    u3602 0EEC                      u3450 0CFD                      u2490 1305  
                    u2810 0CB6                      u2730 0C04                      u2650 0B52  
                    u4330 073F                      u4250 0607                      u4170 0562  
                    u4090 01B4                      u3371 0A84                      u3275 0A02  
                    u3603 0EF3                      u3531 0DFC                      u3451 0CFC  
                    u2491 1304                      u2811 0CB5                      u2731 0C03  
                    u2651 0B51                      u4331 073E                      u4315 0680  
                    u4251 0606                      u4171 0561                      u4091 01B3  
                    u2580 136C                      u2900 1657                      u2820 1604  
                    u3380 0AA2                      u3700 0F73                      u3532 0E03  
                    u3460 0D14                      u2740 0C0A                      u2660 0B81  
                    u4340 0743                      u4260 062A                      u4180 0566  
                    u2581 136B                      u2901 1656                      u2821 1603  
                    u3381 0AA1                      u3365 0A63                      u3701 0F72  
                    u3621 0F0D                      u3541 0E27                      u3533 0E0A  
                    u3525 0DD8                      u3461 0D13                      u2485 12F7  
                    u2741 0C09                      u2725 0BEC                      u2661 0B80  
                    u4341 0742                      u4261 0629                      u4181 0565  
                    u2910 165C                      u2830 160F                      u3390 0AB7  
                    u3710 0F79                      u3622 0F14                      u3542 0E2E  
                    u3470 0D19                      u2750 0C19                      u2670 0B91  
                    u2590 14D5                      u4350 0747                      u4270 062E  
                    u4190 056A                      u2911 165B                      u2831 160E  
                    u3391 0AB6                      u3375 0A81                      u3295 0A10  
                    u3711 0F78                      u3623 0F1B                      u3615 0EFC  
                    u3543 0E35                      u3471 0D18                      u2751 0C18  
                    u2671 0B90                      u2591 14D4                      u4351 0746  
                    u4271 062D                      u4191 0569                      u2840 1620  
                    u2920 14E5                      u3720 0F8B                      u2760 0C2E  
                    u2680 0BC8                      u4360 074F                      u4280 0632  
                    u2841 161F                      u2921 14E4                      u3385 0A9E  
                    u3721 0F8A                      u3561 0E5B                      u3481 0D66  
                    u2761 0C2D                      u2681 0BC7                      u4361 074E  
                    u4281 0631                      u4417 1704                      u2930 14F0  
                    u3730 0F9A                      u3650 0F3F                      u3562 0E62  
                    u3482 0D6D                      u3810 0886                      u2770 0C35  
                    u2690 0BD3                      u4370 0753                      u4290 0636  
                    u2931 14EF                      u3651 0F3E                      u3635 0F1D  
                    u3571 0E86                      u3563 0E69                      u3555 0E37  
                    u3491 0D82                      u3483 0D74                      u3811 0885  
                    u2771 0C34                      u2691 0BD2                      u4507 0834  
                    u2595 14D1                      u4371 0752                      u4291 0635  
                    u4427 1782                      u2860 1632                      u2940 14FB  
                    u3740 0FB7                      u3572 0E8D                      u3492 0D89  
                    u3900 08EB                      u2780 0C4A                      u4380 0757  
                    u4517 15A6                      u2861 1631                      u2941 14FA  
                    u3741 0FB6                      u3645 0F34                      u3581 0EB1  
                    u3573 0E94                      u3493 0D90                      u3901 08EA  
                    u3805 0878                      u2781 0C49                      u2685 0BC4  
                    u4381 0756                      u4437 17F0                      u3750 0FD1  
                    u3670 0F53                      u3590 0ED9                      u3582 0EB8  
                    u3830 08A8                      u2790 0C50                      u4390 075E  
                    u4527 15B7                      u2855 1624                      u3751 0FD0  
                    u3735 0F95                      u3671 0F52                      u3583 0EBF  
                    u3831 08A7                      u2791 0C4F                      u4391 075D  
                    u4447 0121                      u2880 1643                      u2960 150D  
                    u3760 0FED                      u3680 0F58                      u4537 15C8  
                    u2881 1642                      u2961 150C                      u3761 0FEC  
                    u3745 0FB3                      u3681 0F57                      u3665 0F42  
                    u3825 089A                      u4457 01AA                      u2970 1517  
                    u3690 0F6C                      u3850 08B8                      u3770 0843  
                    u4547 1272                      u2875 1633                      u2971 1516  
                    u2955 14FF                      u3755 0FCD                      u3691 0F6B  
                    u3595 0ED4                      u3851 08B7                      u3771 0842  
                    u4467 03A4                      u3860 08BE                      u3780 0847  
                    u3940 17BE                      u2885 163F                      u3861 08BD  
                    u3845 08AD                      u3781 0846                      u4477 079C  
                    u3941 17BB                      u2990 152A                      u3870 08C2  
                    u3790 0867                      u3950 0023                      u2895 164B  
                    u2991 1529                      u2975 1513                      u3871 08C1  
                    u3791 0866                      u4487 07AD                      u3951 17FD  
                    u3880 08D7                      u3960 0027                      u2985 151E  
                    u4497 0821                      u3961 0026                      u3890 08E7  
                    u3970 002B                      u3891 08E6                      u3971 002A  
                    u3980 002F                      u3885 08D2                      u3981 002E  
                    u3990 0039                      u3991 0038                      _TMR0 0001  
                    _TRMT 04C1                      _WREN 0C62         ?_Lcd_Write_String 0025  
                    _main 16DE                      btemp 007E                      start 000E  
      ??_Lcd_Write_String 0027           ___fldiv@new_exp 0032           __end_of_Lcd_Cmd 127B  
             _writeEEPROM 1249   __end_of_UART_Write_Text 136D          ?_UART_Initialize 0070  
           ___fltol@sign1 0028        writeEEPROM@address 0070                     ?_main 0070  
         __end_of___fldiv 0AC4           __end_of___awdiv 1666                     _EEADR 010D  
                   STR_10 111F                     STR_11 115F                     STR_12 116A  
                   STR_20 1150                     STR_21 1165                     STR_13 113D  
                   STR_30 1165                     STR_14 1147                     STR_22 1133  
                   STR_31 1165                     STR_23 1159                     STR_15 1165  
                   STR_16 1129                     STR_24 10EB                     STR_32 1069  
                   STR_25 1159                     STR_17 1159                     STR_33 1051  
                   STR_26 1107                     STR_18 10CD                     STR_27 1165  
                   STR_19 1159                     STR_28 1037           __end_of___awmod 1539  
                   STR_29 101C           __end_of___flmul 1000           __end_of___fltol 16DE  
         ___awdiv@divisor 002A           __end_of___lwdiv 13B3                     i1l203 1591  
                   i1l184 125A           __end_of___lwmod 1327                     i1l195 143F  
                   i1l187 125E           ___awdiv@counter 002E                     _RCSTA 0018  
                   _SPBRG 0099                     _TRISB 0086                     _TRISD 0088  
                   _TXREG 0019                     _TXSTA 0098               ?_UART_Write 0070  
         __end_of_dpowers 101C           __end_of_isdigit 1234             main@adcValue1 0194  
           main@adcValue2 00E2             main@adcValue3 00D2                     pclath 000A  
                   status 0003                     wtemp0 007E           __end_of_sprintf 0CBB  
        __end_of_Lcd_Init 15FD          __end_of_Lcd_Port 129B           __initialization 0011  
            __end_of_main 07F2                    ??_main 0054             main@ilkAcilis 0192  
                  _ADRESH 001E                    _ADRESL 009E                    _EEDATA 010C  
                  _EECON2 018D          ___awdiv@dividend 002C                    i1l2361 1249  
                  i1l2371 1259                    i1l2363 124F                    i1l2381 1413  
                  i1l2365 1252                    i1l2383 1432                    i1l2367 1257  
                  i1l2369 1258                    i1l2379 13FA                    i1l2971 1548  
                  i1l2981 1564                    i1l2973 154F                    i1l2965 1539  
                  i1l2983 156A                    i1l2975 1551                    i1l2967 153D  
                  i1l2985 1577                    i1l2977 155B                    i1l2969 153E  
                  i1l2987 1584                    i1l2979 1562                    u260_20 125E  
                  u260_21 125D                    u261_20 1413                    u261_21 1412  
                  u262_20 1432                    u262_21 1431                    u391_20 153D  
                  u391_21 153C                    u392_20 154F                    u392_21 154E  
                  u393_20 1562                    u393_21 1561                 ??_Lcd_Cmd 0021  
                  _TRISA0 0428                    _TRISA1 0429                    _TRISA2 042A  
                  _TRISA3 042B                    _TRISA4 042C                    _TRISC0 0438  
                  _TRISC1 0439                    _TRISA5 042D                    _TRISC2 043A  
                  _TRISD0 0440                    _TRISC3 043B                    _TRISE0 0448  
                  _TRISC4 043C                    _TRISE1 0449                    _TRISC5 043D  
                  _TRISE2 044A                    _TRISC6 043E                    _TRISC7 043F  
        __end_of___xxtofl 08F5                    ___wmul 129B                 ??___fldiv 0028  
               ??___awdiv 002E                 ??___awmod 002E                 ??___flmul 0042  
        ?_UART_Write_Text 0021                 ??___fltol 0024             main@oranValue 00D6  
               ??___lwdiv 0024                 ??___lwmod 002B          ___awdiv@quotient 0030  
         ___awmod@divisor 002A           ___awmod@counter 002E             _incrementTime 13F9  
        __end_of_yagBakim 14DE             main@rpmString 00CD                 ??_isdigit 0020  
                  saved_w 007E            main@adcString1 00EC                 ??_sprintf 0036  
         Lcd_Set_Cursor@a 0026           Lcd_Set_Cursor@b 0024           Lcd_Set_Cursor@y 0028  
         Lcd_Set_Cursor@z 0027              ___xxtofl@arg 002A              ___xxtofl@exp 0029  
            ___xxtofl@val 0020   __end_of__initialization 001F         __end_of_Lcd_Clear 1210  
              ___fltol@f1 0020           writeEEPROM@data 0072            __pcstackCOMMON 0070  
        timer_isr@lowByte 0077            ?_incrementTime 0070            _Lcd_Set_Cursor 1440  
       incrementTime@time 0072            _OPTION_REGbits 0081        main@gostermeliklcd 00DA  
               ?_Lcd_Init 0070                 ?_Lcd_Port 0070              sprintf@width 003F  
        main@combinedText 005A                __pbssBANK0 006E                __pbssBANK3 01A4  
       __end_of__Umul8_16 12EB                __pmaintext 16DE              ?_writeEEPROM 0070  
                 ?___wmul 0020                __pintentry 0004    __end_of_Lcd_Set_Cursor 148C  
        main@displayValue 01A2                 ?___xxtofl 0020              ??_UART_Write 0020  
              ??_Lcd_Init 0024                ??_Lcd_Port 0020                __stringtab 1000  
          _Lcd_Write_Char 0802                   _Lcd_Cmd 125F                _readEEPROM 1234  
               ?_yagBakim 0070                   ___fldiv 08F5                   ___awdiv 15FD  
         ??_incrementTime 0070                   ___awmod 14DE                   ___flmul 0CBB  
                 ___fltol 1666        __end_of_UART_Write 0800                   ___lwdiv 136D  
                 ___lwmod 12EB           ?_Lcd_Set_Cursor 0024                   __ptext1 148C  
                 __ptext2 13B3                   __ptext3 0802                   __ptext4 1440  
                 __ptext5 1203                   __ptext6 0AC4                   __ptext7 1220  
                 __ptext8 129B                   __ptext9 12EB                   _dpowers 1012  
                 _isdigit 1220                ??___xxtofl 0024          ___awmod@dividend 002C  
   main@negativeFeedValue 01A0                   _sprintf 0AC4    __end_of_Lcd_Write_Char 083B  
    end_of_initialization 001F                ??_yagBakim 002C         __end_of_timer_isr 159A  
                 psplit$0 B0029                 Lcd_Port@a 0020              __pstringtext 1000  
          UART_Write@data 0020             ___xxtofl@sign 0028               ___fldiv@grs 0034  
             ___fldiv@rem 002D      pnum$maintext_split_1 0029         readEEPROM@address 0020  
         ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0025         Lcd_Write_String@i 002A  
             ___flmul@grs 0048                main@dakika 00E6                main@binler 019A  
              main@birler 00EA               ?_readEEPROM 0020                main@yuzler 0198  
               _Lcd_Clear 1203            __end_of___wmul 12C2          _Lcd_Write_String 13B3  
     start_initialization 0011         ??_UART_Initialize 0020                ?_Lcd_Clear 0070  
                ??___wmul 0024                 __Umul8_16 12C2           Lcd_Write_Char@a 0024  
         Lcd_Write_Char@y 0023                 ___fldiv@a 0020                 ___fldiv@b 0024  
               ___flmul@a 003E                 ___flmul@b 003A               __pbssCOMMON 0078  
               ___latbits 0002             __pcstackBANK0 0020             __pcstackBANK1 00A0  
           __pcstackBANK3 0190                  ?_Lcd_Cmd 0070               sprintf@flag 003E  
             sprintf@prec 003A                 _main$1028 00DE          ___lwdiv@dividend 0022  
main@negativeDisplayValue 0190          ??_Lcd_Set_Cursor 0025                  ?___fldiv 0020  
                ?___awdiv 002A                  ?___awmod 002A                  ?___flmul 003A  
                ?___fltol 0020                ?__Umul8_16 0020                  ?___lwdiv 0020  
                ?___lwmod 0027                  ?_isdigit 0070                 _epromayaz 006E  
        ___lwdiv@quotient 0024                  ?_sprintf 002C         ??_UART_Write_Text 0023  
       interrupt_function 0004            ___wmul@product 0024                  Lcd_Cmd@a 0023  
             ??_Lcd_Clear 0024                 _timer_isr 1539     __end_of_incrementTime 1440  
              _ADCON0bits 001F               __stringbase 1012                _ADCON1bits 009F  
       ___wmul@multiplier 0020          ??_Lcd_Write_Char 0021                 main@onlar 00E8  
                _Lcd_Init 159A                  _Lcd_Port 127B           main@integerPart 019C  
__end_of_Lcd_Write_String 13F9              ??_readEEPROM 0022               _kesmeSayaci 01A4  
             ??__Umul8_16 0022                ?_timer_isr 0070              pnum$maintext 000B  
      __end_of__stringtab 1012               _isdigit$837 0020           _UART_Initialize 1210  
             _currentTime 0078                sprintf@val 003C                  ___xxtofl 083B  
               yagBakim@i 002C        __end_of_readEEPROM 1249           ___lwdiv@divisor 0020  
         ___lwdiv@counter 0026                  __ptext10 136D                  __ptext11 1234  
                __ptext20 07F2                  __ptext12 083B                  __ptext21 1210  
                __ptext13 1666                  __ptext22 159A                  __ptext14 0CBB  
                __ptext23 125F                  __ptext15 12C2                  __ptext24 127B  
                __ptext16 08F5                  __ptext25 1539                  __ptext17 14DE  
                __ptext26 1249                  __ptext18 15FD                  __ptext27 13F9  
                __ptext19 1327       UART_Write_Text@text 0021                  _yagBakim 148C  
           ??_writeEEPROM 0074           main@uartMessage 00BD                  main@saat 00E4  
              _INTCONbits 000B                  isdigit@c 0021        Lcd_Write_Char@temp 0022  
                intlevel1 0000                 sprintf@ap 003B                 sprintf@sp 0042  
        ___lwmod@dividend 0029                 stringcode 100A               ??_timer_isr 0074  
 __end_of_UART_Initialize 1220       main@uartMessage_370 00C5        Lcd_Set_Cursor@temp 0029  
    main@combinedText_374 00A0       __end_of_writeEEPROM 125F    __Umul8_16@multiplicand 0020  
         _UART_Write_Text 1327                  sprintf@c 0041                  sprintf@f 002C  
         ___lwmod@divisor 0027           ___lwmod@counter 002B                  stringtab 1000  
              _UART_Write 07F2          UART_Write_Text@i 0026      __Umul8_16@multiplier 0028  
       __Umul8_16@product 0024  
