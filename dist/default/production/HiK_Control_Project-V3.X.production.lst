

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Sep 20 23:16:34 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     9                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    42                           	psect	maintext_split_1,global,class=CODE,split=1,delta=2
    43                           	psect	maintext_split_2,global,class=CODE,split=1,delta=2
    44                           	psect	maintext_split_3,global,class=CODE,split=1,delta=2
    45                           	dabs	1,0x7E,2
    46     0000                     
    47                           ; Generated 22/03/2023 GMT
    48                           ; 
    49                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution. Publication is not required when
    63                           ;        this file is used in an embedded application.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F877A Definitions
    79                           ; 
    80                           ; SFR Addresses
    81     0000                     	;# 
    82     0001                     	;# 
    83     0002                     	;# 
    84     0003                     	;# 
    85     0004                     	;# 
    86     0005                     	;# 
    87     0006                     	;# 
    88     0007                     	;# 
    89     0008                     	;# 
    90     0009                     	;# 
    91     000A                     	;# 
    92     000B                     	;# 
    93     000C                     	;# 
    94     000D                     	;# 
    95     000E                     	;# 
    96     000E                     	;# 
    97     000F                     	;# 
    98     0010                     	;# 
    99     0011                     	;# 
   100     0012                     	;# 
   101     0013                     	;# 
   102     0014                     	;# 
   103     0015                     	;# 
   104     0015                     	;# 
   105     0016                     	;# 
   106     0017                     	;# 
   107     0018                     	;# 
   108     0019                     	;# 
   109     001A                     	;# 
   110     001B                     	;# 
   111     001B                     	;# 
   112     001C                     	;# 
   113     001D                     	;# 
   114     001E                     	;# 
   115     001F                     	;# 
   116     0081                     	;# 
   117     0085                     	;# 
   118     0086                     	;# 
   119     0087                     	;# 
   120     0088                     	;# 
   121     0089                     	;# 
   122     008C                     	;# 
   123     008D                     	;# 
   124     008E                     	;# 
   125     0091                     	;# 
   126     0092                     	;# 
   127     0093                     	;# 
   128     0094                     	;# 
   129     0098                     	;# 
   130     0099                     	;# 
   131     009C                     	;# 
   132     009D                     	;# 
   133     009E                     	;# 
   134     009F                     	;# 
   135     010C                     	;# 
   136     010D                     	;# 
   137     010E                     	;# 
   138     010F                     	;# 
   139     018C                     	;# 
   140     018D                     	;# 
   141     0000                     	;# 
   142     0001                     	;# 
   143     0002                     	;# 
   144     0003                     	;# 
   145     0004                     	;# 
   146     0005                     	;# 
   147     0006                     	;# 
   148     0007                     	;# 
   149     0008                     	;# 
   150     0009                     	;# 
   151     000A                     	;# 
   152     000B                     	;# 
   153     000C                     	;# 
   154     000D                     	;# 
   155     000E                     	;# 
   156     000E                     	;# 
   157     000F                     	;# 
   158     0010                     	;# 
   159     0011                     	;# 
   160     0012                     	;# 
   161     0013                     	;# 
   162     0014                     	;# 
   163     0015                     	;# 
   164     0015                     	;# 
   165     0016                     	;# 
   166     0017                     	;# 
   167     0018                     	;# 
   168     0019                     	;# 
   169     001A                     	;# 
   170     001B                     	;# 
   171     001B                     	;# 
   172     001C                     	;# 
   173     001D                     	;# 
   174     001E                     	;# 
   175     001F                     	;# 
   176     0081                     	;# 
   177     0085                     	;# 
   178     0086                     	;# 
   179     0087                     	;# 
   180     0088                     	;# 
   181     0089                     	;# 
   182     008C                     	;# 
   183     008D                     	;# 
   184     008E                     	;# 
   185     0091                     	;# 
   186     0092                     	;# 
   187     0093                     	;# 
   188     0094                     	;# 
   189     0098                     	;# 
   190     0099                     	;# 
   191     009C                     	;# 
   192     009D                     	;# 
   193     009E                     	;# 
   194     009F                     	;# 
   195     010C                     	;# 
   196     010D                     	;# 
   197     010E                     	;# 
   198     010F                     	;# 
   199     018C                     	;# 
   200     018D                     	;# 
   201     0000                     	;# 
   202     0001                     	;# 
   203     0002                     	;# 
   204     0003                     	;# 
   205     0004                     	;# 
   206     0005                     	;# 
   207     0006                     	;# 
   208     0007                     	;# 
   209     0008                     	;# 
   210     0009                     	;# 
   211     000A                     	;# 
   212     000B                     	;# 
   213     000C                     	;# 
   214     000D                     	;# 
   215     000E                     	;# 
   216     000E                     	;# 
   217     000F                     	;# 
   218     0010                     	;# 
   219     0011                     	;# 
   220     0012                     	;# 
   221     0013                     	;# 
   222     0014                     	;# 
   223     0015                     	;# 
   224     0015                     	;# 
   225     0016                     	;# 
   226     0017                     	;# 
   227     0018                     	;# 
   228     0019                     	;# 
   229     001A                     	;# 
   230     001B                     	;# 
   231     001B                     	;# 
   232     001C                     	;# 
   233     001D                     	;# 
   234     001E                     	;# 
   235     001F                     	;# 
   236     0081                     	;# 
   237     0085                     	;# 
   238     0086                     	;# 
   239     0087                     	;# 
   240     0088                     	;# 
   241     0089                     	;# 
   242     008C                     	;# 
   243     008D                     	;# 
   244     008E                     	;# 
   245     0091                     	;# 
   246     0092                     	;# 
   247     0093                     	;# 
   248     0094                     	;# 
   249     0098                     	;# 
   250     0099                     	;# 
   251     009C                     	;# 
   252     009D                     	;# 
   253     009E                     	;# 
   254     009F                     	;# 
   255     010C                     	;# 
   256     010D                     	;# 
   257     010E                     	;# 
   258     010F                     	;# 
   259     018C                     	;# 
   260     018D                     	;# 
   261                           
   262                           	psect	stringtext
   263     1800                     __pstringtext:
   264     1800                     stringtab:
   265     1800                     __stringtab:
   266                           
   267                           ;	String table - string pointers are 2 bytes each
   268     1800  1BFF               	btfsc	btemp+1,7
   269     1801  280A               	ljmp	stringcode
   270     1802  1383               	bcf	3,7
   271     1803  187F               	btfsc	btemp+1,0
   272     1804  1783               	bsf	3,7
   273     1805  0800               	movf	0,w
   274     1806  0A84               	incf	4,f
   275     1807  1903               	skipnz
   276     1808  0AFF               	incf	btemp+1,f
   277     1809  0008               	return
   278     180A                     stringcode:
   279     180A  087F               	movf	btemp+1,w
   280     180B  397F               	andlw	127
   281     180C  008A               	movwf	10
   282     180D  0804               	movf	4,w
   283     180E  0A84               	incf	4,f
   284     180F  1903               	skipnz
   285     1810  0AFF               	incf	btemp+1,f
   286     1811  0082               	movwf	2
   287     1812                     __stringbase:
   288     1812                     __end_of__stringtab:
   289     1812                     _dpowers:
   290     1812  3401               	retlw	1
   291     1813  3400               	retlw	0
   292     1814  340A               	retlw	10
   293     1815  3400               	retlw	0
   294     1816  3464               	retlw	100
   295     1817  3400               	retlw	0
   296     1818  34E8               	retlw	232
   297     1819  3403               	retlw	3
   298     181A  3410               	retlw	16
   299     181B  3427               	retlw	39
   300     181C                     __end_of_dpowers:
   301     0019                     _TXREG	set	25
   302     0018                     _RCSTA	set	24
   303     001E                     _ADRESH	set	30
   304     001F                     _ADCON0bits	set	31
   305     000B                     _INTCONbits	set	11
   306     0001                     _TMR0	set	1
   307     0040                     _RD0	set	64
   308     003B                     _RC3	set	59
   309     0049                     _RE1	set	73
   310     0038                     _RC0	set	56
   311     003A                     _RC2	set	58
   312     0048                     _RE0	set	72
   313     004A                     _RE2	set	74
   314     0039                     _RC1	set	57
   315     002C                     _RA4	set	44
   316     005A                     _T0IF	set	90
   317     005F                     _GIE	set	95
   318     0034                     _RB4	set	52
   319     0035                     _RB5	set	53
   320     0030                     _RB0	set	48
   321     0031                     _RB1	set	49
   322     0032                     _RB2	set	50
   323     0033                     _RB3	set	51
   324     0098                     _TXSTA	set	152
   325     009E                     _ADRESL	set	158
   326     009F                     _ADCON1bits	set	159
   327     0099                     _SPBRG	set	153
   328     0081                     _OPTION_REGbits	set	129
   329     0088                     _TRISD	set	136
   330     0086                     _TRISB	set	134
   331     04C1                     _TRMT	set	1217
   332     043D                     _TRISC5	set	1085
   333     043C                     _TRISC4	set	1084
   334     042D                     _TRISA5	set	1069
   335     0428                     _TRISA0	set	1064
   336     043F                     _TRISC7	set	1087
   337     043E                     _TRISC6	set	1086
   338     042B                     _TRISA3	set	1067
   339     042A                     _TRISA2	set	1066
   340     0429                     _TRISA1	set	1065
   341     0440                     _TRISD0	set	1088
   342     043B                     _TRISC3	set	1083
   343     0438                     _TRISC0	set	1080
   344     044A                     _TRISE2	set	1098
   345     043A                     _TRISC2	set	1082
   346     0439                     _TRISC1	set	1081
   347     0449                     _TRISE1	set	1097
   348     0448                     _TRISE0	set	1096
   349     042C                     _TRISA4	set	1068
   350     010C                     _EEDATA	set	268
   351     010D                     _EEADR	set	269
   352     018D                     _EECON2	set	397
   353     0C60                     _RD	set	3168
   354     0C61                     _WR	set	3169
   355     0C62                     _WREN	set	3170
   356     181C                     STR_39:
   357     181C  3420               	retlw	32	;' '
   358     181D  3420               	retlw	32	;' '
   359     181E  3420               	retlw	32	;' '
   360     181F  3449               	retlw	73	;'I'
   361     1820  344C               	retlw	76	;'L'
   362     1821  3445               	retlw	69	;'E'
   363     1822  3452               	retlw	82	;'R'
   364     1823  344C               	retlw	76	;'L'
   365     1824  3445               	retlw	69	;'E'
   366     1825  344D               	retlw	77	;'M'
   367     1826  3445               	retlw	69	;'E'
   368     1827  3420               	retlw	32	;' '
   369     1828  3448               	retlw	72	;'H'
   370     1829  3441               	retlw	65	;'A'
   371     182A  3454               	retlw	84	;'T'
   372     182B  3441               	retlw	65	;'A'
   373     182C  3453               	retlw	83	;'S'
   374     182D  3449               	retlw	73	;'I'
   375     182E  3420               	retlw	32	;' '
   376     182F  3420               	retlw	32	;' '
   377     1830  3420               	retlw	32	;' '
   378     1831  3420               	retlw	32	;' '
   379     1832  3420               	retlw	32	;' '
   380     1833  3420               	retlw	32	;' '
   381     1834  3420               	retlw	32	;' '
   382     1835  3420               	retlw	32	;' '
   383     1836  3400               	retlw	0
   384     1837                     STR_38:
   385     1837  3420               	retlw	32	;' '
   386     1838  3420               	retlw	32	;' '
   387     1839  3420               	retlw	32	;' '
   388     183A  3446               	retlw	70	;'F'
   389     183B  3445               	retlw	69	;'E'
   390     183C  3445               	retlw	69	;'E'
   391     183D  3444               	retlw	68	;'D'
   392     183E  3420               	retlw	32	;' '
   393     183F  3452               	retlw	82	;'R'
   394     1840  3441               	retlw	65	;'A'
   395     1841  3454               	retlw	84	;'T'
   396     1842  3445               	retlw	69	;'E'
   397     1843  3420               	retlw	32	;' '
   398     1844  3445               	retlw	69	;'E'
   399     1845  3452               	retlw	82	;'R'
   400     1846  3452               	retlw	82	;'R'
   401     1847  344F               	retlw	79	;'O'
   402     1848  3452               	retlw	82	;'R'
   403     1849  3420               	retlw	32	;' '
   404     184A  3420               	retlw	32	;' '
   405     184B  3420               	retlw	32	;' '
   406     184C  3420               	retlw	32	;' '
   407     184D  3420               	retlw	32	;' '
   408     184E  3420               	retlw	32	;' '
   409     184F  3420               	retlw	32	;' '
   410     1850  3400               	retlw	0
   411     1851                     STR_43:
   412     1851  3420               	retlw	32	;' '
   413     1852  3420               	retlw	32	;' '
   414     1853  3420               	retlw	32	;' '
   415     1854  3444               	retlw	68	;'D'
   416     1855  344F               	retlw	79	;'O'
   417     1856  344E               	retlw	78	;'N'
   418     1857  344D               	retlw	77	;'M'
   419     1858  3445               	retlw	69	;'E'
   420     1859  3420               	retlw	32	;' '
   421     185A  3448               	retlw	72	;'H'
   422     185B  3441               	retlw	65	;'A'
   423     185C  3454               	retlw	84	;'T'
   424     185D  3441               	retlw	65	;'A'
   425     185E  3453               	retlw	83	;'S'
   426     185F  3449               	retlw	73	;'I'
   427     1860  3420               	retlw	32	;' '
   428     1861  3420               	retlw	32	;' '
   429     1862  3420               	retlw	32	;' '
   430     1863  3420               	retlw	32	;' '
   431     1864  3420               	retlw	32	;' '
   432     1865  3420               	retlw	32	;' '
   433     1866  3420               	retlw	32	;' '
   434     1867  3420               	retlw	32	;' '
   435     1868  3400               	retlw	0
   436     1869                     STR_42:
   437     1869  3420               	retlw	32	;' '
   438     186A  3420               	retlw	32	;' '
   439     186B  3420               	retlw	32	;' '
   440     186C  3452               	retlw	82	;'R'
   441     186D  344F               	retlw	79	;'O'
   442     186E  3454               	retlw	84	;'T'
   443     186F  3441               	retlw	65	;'A'
   444     1870  3454               	retlw	84	;'T'
   445     1871  3449               	retlw	73	;'I'
   446     1872  344F               	retlw	79	;'O'
   447     1873  344E               	retlw	78	;'N'
   448     1874  3420               	retlw	32	;' '
   449     1875  3445               	retlw	69	;'E'
   450     1876  3452               	retlw	82	;'R'
   451     1877  3452               	retlw	82	;'R'
   452     1878  344F               	retlw	79	;'O'
   453     1879  3452               	retlw	82	;'R'
   454     187A  3420               	retlw	32	;' '
   455     187B  3420               	retlw	32	;' '
   456     187C  3420               	retlw	32	;' '
   457     187D  3420               	retlw	32	;' '
   458     187E  3420               	retlw	32	;' '
   459     187F  3420               	retlw	32	;' '
   460     1880  3400               	retlw	0
   461     1881                     STR_5:
   462     1881  3450               	retlw	80	;'P'
   463     1882  3455               	retlw	85	;'U'
   464     1883  3454               	retlw	84	;'T'
   465     1884  3420               	retlw	32	;' '
   466     1885  3449               	retlw	73	;'I'
   467     1886  3454               	retlw	84	;'T'
   468     1887  3420               	retlw	32	;' '
   469     1888  3449               	retlw	73	;'I'
   470     1889  344E               	retlw	78	;'N'
   471     188A  3420               	retlw	32	;' '
   472     188B  3453               	retlw	83	;'S'
   473     188C  3454               	retlw	84	;'T'
   474     188D  344F               	retlw	79	;'O'
   475     188E  3450               	retlw	80	;'P'
   476     188F  3420               	retlw	32	;' '
   477     1890  3453               	retlw	83	;'S'
   478     1891  3454               	retlw	84	;'T'
   479     1892  3441               	retlw	65	;'A'
   480     1893  3454               	retlw	84	;'T'
   481     1894  3445               	retlw	69	;'E'
   482     1895  3400               	retlw	0
   483     1896                     STR_4:
   484     1896  3453               	retlw	83	;'S'
   485     1897  3454               	retlw	84	;'T'
   486     1898  344F               	retlw	79	;'O'
   487     1899  3450               	retlw	80	;'P'
   488     189A  3420               	retlw	32	;' '
   489     189B  3444               	retlw	68	;'D'
   490     189C  3455               	retlw	85	;'U'
   491     189D  3452               	retlw	82	;'R'
   492     189E  3455               	retlw	85	;'U'
   493     189F  344D               	retlw	77	;'M'
   494     18A0  3455               	retlw	85	;'U'
   495     18A1  344E               	retlw	78	;'N'
   496     18A2  3441               	retlw	65	;'A'
   497     18A3  3420               	retlw	32	;' '
   498     18A4  3447               	retlw	71	;'G'
   499     18A5  3445               	retlw	69	;'E'
   500     18A6  3454               	retlw	84	;'T'
   501     18A7  3449               	retlw	73	;'I'
   502     18A8  3452               	retlw	82	;'R'
   503     18A9  3400               	retlw	0
   504     18AA                     STR_6:
   505     18AA  3459               	retlw	89	;'Y'
   506     18AB  3441               	retlw	65	;'A'
   507     18AC  3447               	retlw	71	;'G'
   508     18AD  3420               	retlw	32	;' '
   509     18AE  3442               	retlw	66	;'B'
   510     18AF  3441               	retlw	65	;'A'
   511     18B0  344B               	retlw	75	;'K'
   512     18B1  3449               	retlw	73	;'I'
   513     18B2  344D               	retlw	77	;'M'
   514     18B3  3449               	retlw	73	;'I'
   515     18B4  3420               	retlw	32	;' '
   516     18B5  3459               	retlw	89	;'Y'
   517     18B6  3441               	retlw	65	;'A'
   518     18B7  3450               	retlw	80	;'P'
   519     18B8  3449               	retlw	73	;'I'
   520     18B9  344E               	retlw	78	;'N'
   521     18BA  3449               	retlw	73	;'I'
   522     18BB  345A               	retlw	90	;'Z'
   523     18BC  3400               	retlw	0
   524     18BD                     STR_1:
   525     18BD  3455               	retlw	85	;'U'
   526     18BE  345A               	retlw	90	;'Z'
   527     18BF  344D               	retlw	77	;'M'
   528     18C0  3441               	retlw	65	;'A'
   529     18C1  344E               	retlw	78	;'N'
   530     18C2  344C               	retlw	76	;'L'
   531     18C3  3441               	retlw	65	;'A'
   532     18C4  3452               	retlw	82	;'R'
   533     18C5  3420               	retlw	32	;' '
   534     18C6  344D               	retlw	77	;'M'
   535     18C7  3441               	retlw	65	;'A'
   536     18C8  344B               	retlw	75	;'K'
   537     18C9  3449               	retlw	73	;'I'
   538     18CA  344E               	retlw	78	;'N'
   539     18CB  3441               	retlw	65	;'A'
   540     18CC  3400               	retlw	0
   541     18CD                     STR_28:
   542     18CD  3420               	retlw	32	;' '
   543     18CE  3446               	retlw	70	;'F'
   544     18CF  3457               	retlw	87	;'W'
   545     18D0  3444               	retlw	68	;'D'
   546     18D1  3420               	retlw	32	;' '
   547     18D2  3420               	retlw	32	;' '
   548     18D3  3420               	retlw	32	;' '
   549     18D4  3420               	retlw	32	;' '
   550     18D5  3420               	retlw	32	;' '
   551     18D6  3420               	retlw	32	;' '
   552     18D7  3420               	retlw	32	;' '
   553     18D8  3420               	retlw	32	;' '
   554     18D9  3420               	retlw	32	;' '
   555     18DA  3420               	retlw	32	;' '
   556     18DB  3400               	retlw	0
   557     18DC                     STR_2:
   558     18DC  3477               	retlw	119	;'w'
   559     18DD  3477               	retlw	119	;'w'
   560     18DE  3477               	retlw	119	;'w'
   561     18DF  342E               	retlw	46	;'.'
   562     18E0  3462               	retlw	98	;'b'
   563     18E1  346F               	retlw	111	;'o'
   564     18E2  3472               	retlw	114	;'r'
   565     18E3  3476               	retlw	118	;'v'
   566     18E4  3465               	retlw	101	;'e'
   567     18E5  346B               	retlw	107	;'k'
   568     18E6  342E               	retlw	46	;'.'
   569     18E7  3463               	retlw	99	;'c'
   570     18E8  346F               	retlw	111	;'o'
   571     18E9  346D               	retlw	109	;'m'
   572     18EA  3400               	retlw	0
   573     18EB                     STR_34:
   574     18EB  3420               	retlw	32	;' '
   575     18EC  3452               	retlw	82	;'R'
   576     18ED  3445               	retlw	69	;'E'
   577     18EE  3457               	retlw	87	;'W'
   578     18EF  3420               	retlw	32	;' '
   579     18F0  3420               	retlw	32	;' '
   580     18F1  3420               	retlw	32	;' '
   581     18F2  3420               	retlw	32	;' '
   582     18F3  3420               	retlw	32	;' '
   583     18F4  3420               	retlw	32	;' '
   584     18F5  3420               	retlw	32	;' '
   585     18F6  3420               	retlw	32	;' '
   586     18F7  3420               	retlw	32	;' '
   587     18F8  3400               	retlw	0
   588     18F9                     STR_7:
   589     18F9  344F               	retlw	79	;'O'
   590     18FA  3449               	retlw	73	;'I'
   591     18FB  344C               	retlw	76	;'L'
   592     18FC  3420               	retlw	32	;' '
   593     18FD  3454               	retlw	84	;'T'
   594     18FE  3448               	retlw	72	;'H'
   595     18FF  3445               	retlw	69	;'E'
   596     1900  3420               	retlw	32	;' '
   597     1901  3447               	retlw	71	;'G'
   598     1902  3445               	retlw	69	;'E'
   599     1903  3441               	retlw	65	;'A'
   600     1904  3452               	retlw	82	;'R'
   601     1905  3453               	retlw	83	;'S'
   602     1906  3400               	retlw	0
   603     1907                     STR_36:
   604     1907  3420               	retlw	32	;' '
   605     1908  3453               	retlw	83	;'S'
   606     1909  3454               	retlw	84	;'T'
   607     190A  344F               	retlw	79	;'O'
   608     190B  3450               	retlw	80	;'P'
   609     190C  3420               	retlw	32	;' '
   610     190D  3420               	retlw	32	;' '
   611     190E  3420               	retlw	32	;' '
   612     190F  3420               	retlw	32	;' '
   613     1910  3420               	retlw	32	;' '
   614     1911  3420               	retlw	32	;' '
   615     1912  3420               	retlw	32	;' '
   616     1913  3400               	retlw	0
   617     1914                     STR_18:
   618     1914  3425               	retlw	37	;'%'
   619     1915  3435               	retlw	53	;'5'
   620     1916  3475               	retlw	117	;'u'
   621     1917  3468               	retlw	104	;'h'
   622     1918  3420               	retlw	32	;' '
   623     1919  3425               	retlw	37	;'%'
   624     191A  3430               	retlw	48	;'0'
   625     191B  3432               	retlw	50	;'2'
   626     191C  3475               	retlw	117	;'u'
   627     191D  346D               	retlw	109	;'m'
   628     191E  3400               	retlw	0
   629     191F                     STR_20:
   630     191F  3446               	retlw	70	;'F'
   631     1920  3465               	retlw	101	;'e'
   632     1921  3465               	retlw	101	;'e'
   633     1922  3464               	retlw	100	;'d'
   634     1923  3452               	retlw	82	;'R'
   635     1924  3461               	retlw	97	;'a'
   636     1925  3474               	retlw	116	;'t'
   637     1926  3465               	retlw	101	;'e'
   638     1927  343A               	retlw	58	;':'
   639     1928  3400               	retlw	0
   640     1929                     STR_26:
   641     1929  3420               	retlw	32	;' '
   642     192A  3446               	retlw	70	;'F'
   643     192B  3457               	retlw	87	;'W'
   644     192C  3444               	retlw	68	;'D'
   645     192D  3420               	retlw	32	;' '
   646     192E  3431               	retlw	49	;'1'
   647     192F  342E               	retlw	46	;'.'
   648     1930  3436               	retlw	54	;'6'
   649     1931  344B               	retlw	75	;'K'
   650     1932  3400               	retlw	0
   651     1933                     STR_32:
   652     1933  3420               	retlw	32	;' '
   653     1934  3452               	retlw	82	;'R'
   654     1935  3445               	retlw	69	;'E'
   655     1936  3457               	retlw	87	;'W'
   656     1937  3420               	retlw	32	;' '
   657     1938  3431               	retlw	49	;'1'
   658     1939  342E               	retlw	46	;'.'
   659     193A  3436               	retlw	54	;'6'
   660     193B  344B               	retlw	75	;'K'
   661     193C  3400               	retlw	0
   662     193D                     STR_23:
   663     193D  3425               	retlw	37	;'%'
   664     193E  3475               	retlw	117	;'u'
   665     193F  3425               	retlw	37	;'%'
   666     1940  3475               	retlw	117	;'u'
   667     1941  3425               	retlw	37	;'%'
   668     1942  3475               	retlw	117	;'u'
   669     1943  342E               	retlw	46	;'.'
   670     1944  3425               	retlw	37	;'%'
   671     1945  3475               	retlw	117	;'u'
   672     1946  3400               	retlw	0
   673     1947                     STR_24:
   674     1947  3420               	retlw	32	;' '
   675     1948  3446               	retlw	70	;'F'
   676     1949  3457               	retlw	87	;'W'
   677     194A  3444               	retlw	68	;'D'
   678     194B  3420               	retlw	32	;' '
   679     194C  344C               	retlw	76	;'L'
   680     194D  344D               	retlw	77	;'M'
   681     194E  3454               	retlw	84	;'T'
   682     194F  3400               	retlw	0
   683     1950                     STR_30:
   684     1950  3420               	retlw	32	;' '
   685     1951  3452               	retlw	82	;'R'
   686     1952  3445               	retlw	69	;'E'
   687     1953  3457               	retlw	87	;'W'
   688     1954  3420               	retlw	32	;' '
   689     1955  344C               	retlw	76	;'L'
   690     1956  344D               	retlw	77	;'M'
   691     1957  3454               	retlw	84	;'T'
   692     1958  3400               	retlw	0
   693     1959                     STR_27:
   694     1959  3473               	retlw	115	;'s'
   695     195A  3425               	retlw	37	;'%'
   696     195B  3464               	retlw	100	;'d'
   697     195C  340D               	retlw	13
   698     195D  340A               	retlw	10
   699     195E  3400               	retlw	0
   700     195F                     STR_21:
   701     195F  3425               	retlw	37	;'%'
   702     1960  3430               	retlw	48	;'0'
   703     1961  3430               	retlw	48	;'0'
   704     1962  3433               	retlw	51	;'3'
   705     1963  3475               	retlw	117	;'u'
   706     1964  3400               	retlw	0
   707     1965                     STR_25:
   708     1965  3473               	retlw	115	;'s'
   709     1966  3430               	retlw	48	;'0'
   710     1967  340D               	retlw	13
   711     1968  340A               	retlw	10
   712     1969  3400               	retlw	0
   713     196A                     STR_22:
   714     196A  3452               	retlw	82	;'R'
   715     196B  3450               	retlw	80	;'P'
   716     196C  344D               	retlw	77	;'M'
   717     196D  343A               	retlw	58	;':'
   718     196E  3400               	retlw	0
   719     196F                     STR_3:
   720     196F  3456               	retlw	86	;'V'
   721     1970  3433               	retlw	51	;'3'
   722     1971  3400               	retlw	0
   723     1965                     
   724                           	psect	cinit
   725     0011                     start_initialization:	
   726                           ; #config settings
   727                           
   728     0011                     __initialization:
   729                           
   730                           ; Clear objects allocated to COMMON
   731     0011  01F7               	clrf	__pbssCOMMON& (0+127)
   732     0012  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   733     0013  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   734     0014  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   735     0015  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
   736     0016  01FC               	clrf	(__pbssCOMMON+5)& (0+127)
   737                           
   738                           ; Clear objects allocated to BANK0
   739     0017  1283               	bcf	3,5	;RP0=0, select bank0
   740     0018  1303               	bcf	3,6	;RP1=0, select bank0
   741     0019  01EE               	clrf	__pbssBANK0& (0+127)
   742     001A  01EF               	clrf	(__pbssBANK0+1)& (0+127)
   743                           
   744                           ; Clear objects allocated to BANK3
   745     001B  1683               	bsf	3,5	;RP0=1, select bank3
   746     001C  1703               	bsf	3,6	;RP1=1, select bank3
   747     001D  01B0               	clrf	__pbssBANK3& (0+127)
   748     001E  01B1               	clrf	(__pbssBANK3+1)& (0+127)
   749     001F                     end_of_initialization:	
   750                           ;End of C runtime variable initialization code
   751                           
   752     001F                     __end_of__initialization:
   753     001F  0183               	clrf	3
   754     0020  160A  118A  2D57   	ljmp	_main	;jump to C main() function
   755                           
   756                           	psect	bssCOMMON
   757     0077                     __pbssCOMMON:
   758     0077                     _currentTime:
   759     0077                     	ds	6
   760                           
   761                           	psect	bssBANK0
   762     006E                     __pbssBANK0:
   763     006E                     _epromayaz:
   764     006E                     	ds	2
   765                           
   766                           	psect	bssBANK3
   767     01B0                     __pbssBANK3:
   768     01B0                     _kesmeSayaci:
   769     01B0                     	ds	2
   770                           
   771                           	psect	cstackBANK3
   772     0190                     __pcstackBANK3:
   773     0190                     main@negativeDisplayValue:
   774                           
   775                           ; 2 bytes @ 0x0
   776     0190                     	ds	2
   777     0192                     main@ilkAcilis:
   778                           
   779                           ; 2 bytes @ 0x2
   780     0192                     	ds	2
   781     0194                     main@adcValue1:
   782                           
   783                           ; 4 bytes @ 0x4
   784     0194                     	ds	4
   785     0198                     main@yuzler:
   786                           
   787                           ; 2 bytes @ 0x8
   788     0198                     	ds	2
   789     019A                     main@i:
   790                           
   791                           ; 2 bytes @ 0xA
   792     019A                     	ds	2
   793     019C                     main@i_323:
   794                           
   795                           ; 2 bytes @ 0xC
   796     019C                     	ds	2
   797     019E                     main@i_326:
   798                           
   799                           ; 2 bytes @ 0xE
   800     019E                     	ds	2
   801     01A0                     main@i_329:
   802                           
   803                           ; 2 bytes @ 0x10
   804     01A0                     	ds	2
   805     01A2                     main@i_332:
   806                           
   807                           ; 2 bytes @ 0x12
   808     01A2                     	ds	2
   809     01A4                     main@i_335:
   810                           
   811                           ; 2 bytes @ 0x14
   812     01A4                     	ds	2
   813     01A6                     main@binler:
   814                           
   815                           ; 2 bytes @ 0x16
   816     01A6                     	ds	2
   817     01A8                     main@integerPart:
   818                           
   819                           ; 4 bytes @ 0x18
   820     01A8                     	ds	4
   821     01AC                     main@negativeFeedValue:
   822                           
   823                           ; 2 bytes @ 0x1C
   824     01AC                     	ds	2
   825     01AE                     main@displayValue:
   826                           
   827                           ; 2 bytes @ 0x1E
   828     01AE                     	ds	2
   829                           
   830                           	psect	cstackBANK1
   831     00A0                     __pcstackBANK1:
   832     00A0                     main@combinedText_378:
   833                           
   834                           ; 20 bytes @ 0x0
   835     00A0                     	ds	20
   836     00B4                     main@lcdText:
   837                           
   838                           ; 9 bytes @ 0x14
   839     00B4                     	ds	9
   840     00BD                     main@uartMessage:
   841                           
   842                           ; 8 bytes @ 0x1D
   843     00BD                     	ds	8
   844     00C5                     main@uartMessage_374:
   845                           
   846                           ; 8 bytes @ 0x25
   847     00C5                     	ds	8
   848     00CD                     main@adcValue3:
   849                           
   850                           ; 4 bytes @ 0x2D
   851     00CD                     	ds	4
   852     00D1                     main@oranValue:
   853                           
   854                           ; 4 bytes @ 0x31
   855     00D1                     	ds	4
   856     00D5                     main@gostermeliklcd:
   857                           
   858                           ; 4 bytes @ 0x35
   859     00D5                     	ds	4
   860     00D9                     _main$1038:
   861                           
   862                           ; 4 bytes @ 0x39
   863     00D9                     	ds	4
   864     00DD                     main@rpmString:
   865                           
   866                           ; 5 bytes @ 0x3D
   867     00DD                     	ds	5
   868     00E2                     main@adcValue2:
   869                           
   870                           ; 2 bytes @ 0x42
   871     00E2                     	ds	2
   872     00E4                     main@saat:
   873                           
   874                           ; 2 bytes @ 0x44
   875     00E4                     	ds	2
   876     00E6                     main@dakika:
   877                           
   878                           ; 2 bytes @ 0x46
   879     00E6                     	ds	2
   880     00E8                     main@onlar:
   881                           
   882                           ; 2 bytes @ 0x48
   883     00E8                     	ds	2
   884     00EA                     main@birler:
   885                           
   886                           ; 2 bytes @ 0x4A
   887     00EA                     	ds	2
   888     00EC                     main@adcString1:
   889                           
   890                           ; 4 bytes @ 0x4C
   891     00EC                     	ds	4
   892                           
   893                           	psect	cstackCOMMON
   894     0070                     __pcstackCOMMON:
   895     0070                     ?_isdigit:
   896     0070                     ?_UART_Initialize:	
   897                           ; 1 bit 
   898                           
   899     0070                     ?_Lcd_Port:	
   900                           ; 1 bytes @ 0x0
   901                           
   902     0070                     ?_Lcd_Cmd:	
   903                           ; 1 bytes @ 0x0
   904                           
   905     0070                     ?_Lcd_Clear:	
   906                           ; 1 bytes @ 0x0
   907                           
   908     0070                     ?_Lcd_Init:	
   909                           ; 1 bytes @ 0x0
   910                           
   911     0070                     ?_Lcd_Write_Char:	
   912                           ; 1 bytes @ 0x0
   913                           
   914     0070                     ?_writeEEPROM:	
   915                           ; 1 bytes @ 0x0
   916                           
   917     0070                     ?_incrementTime:	
   918                           ; 1 bytes @ 0x0
   919                           
   920     0070                     ??_incrementTime:	
   921                           ; 1 bytes @ 0x0
   922                           
   923     0070                     ?_timer_isr:	
   924                           ; 1 bytes @ 0x0
   925                           
   926     0070                     ?_UART_Write:	
   927                           ; 1 bytes @ 0x0
   928                           
   929     0070                     ?_main:	
   930                           ; 1 bytes @ 0x0
   931                           
   932     0070                     writeEEPROM@address:	
   933                           ; 2 bytes @ 0x0
   934                           
   935                           
   936                           ; 2 bytes @ 0x0
   937     0070                     	ds	2
   938     0072                     incrementTime@time:
   939     0072                     writeEEPROM@data:	
   940                           ; 1 bytes @ 0x2
   941                           
   942                           
   943                           ; 2 bytes @ 0x2
   944     0072                     	ds	2
   945     0074                     ??_writeEEPROM:
   946     0074                     ??_timer_isr:	
   947                           ; 1 bytes @ 0x4
   948                           
   949                           
   950                           ; 1 bytes @ 0x4
   951     0074                     	ds	3
   952                           
   953                           	psect	cstackBANK0
   954     0020                     __pcstackBANK0:
   955     0020                     ??_UART_Initialize:
   956     0020                     ??_isdigit:	
   957                           ; 1 bytes @ 0x0
   958                           
   959     0020                     ??_Lcd_Port:	
   960                           ; 1 bytes @ 0x0
   961                           
   962     0020                     ??_UART_Write:	
   963                           ; 1 bytes @ 0x0
   964                           
   965     0020                     ?__Umul8_16:	
   966                           ; 1 bytes @ 0x0
   967                           
   968     0020                     ?_readEEPROM:	
   969                           ; 2 bytes @ 0x0
   970                           
   971     0020                     ?___wmul:	
   972                           ; 2 bytes @ 0x0
   973                           
   974     0020                     ?___lwdiv:	
   975                           ; 2 bytes @ 0x0
   976                           
   977     0020                     ?___fltol:	
   978                           ; 2 bytes @ 0x0
   979                           
   980     0020                     ?___fldiv:	
   981                           ; 4 bytes @ 0x0
   982                           
   983     0020                     ?___xxtofl:	
   984                           ; 4 bytes @ 0x0
   985                           
   986     0020                     Lcd_Port@a:	
   987                           ; 4 bytes @ 0x0
   988                           
   989     0020                     UART_Write@data:	
   990                           ; 1 bytes @ 0x0
   991                           
   992     0020                     __Umul8_16@multiplicand:	
   993                           ; 1 bytes @ 0x0
   994                           
   995     0020                     _isdigit$853:	
   996                           ; 1 bytes @ 0x0
   997                           
   998     0020                     readEEPROM@address:	
   999                           ; 1 bytes @ 0x0
  1000                           
  1001     0020                     ___wmul@multiplier:	
  1002                           ; 2 bytes @ 0x0
  1003                           
  1004     0020                     ___lwdiv@divisor:	
  1005                           ; 2 bytes @ 0x0
  1006                           
  1007     0020                     ___fltol@f1:	
  1008                           ; 2 bytes @ 0x0
  1009                           
  1010     0020                     ___fldiv@a:	
  1011                           ; 4 bytes @ 0x0
  1012                           
  1013     0020                     ___xxtofl@val:	
  1014                           ; 4 bytes @ 0x0
  1015                           
  1016                           
  1017                           ; 4 bytes @ 0x0
  1018     0020                     	ds	1
  1019     0021                     ?_UART_Write_Text:
  1020     0021                     ??_Lcd_Cmd:	
  1021                           ; 1 bytes @ 0x1
  1022                           
  1023     0021                     ??_Lcd_Write_Char:	
  1024                           ; 1 bytes @ 0x1
  1025                           
  1026     0021                     isdigit@c:	
  1027                           ; 1 bytes @ 0x1
  1028                           
  1029     0021                     UART_Write_Text@text:	
  1030                           ; 1 bytes @ 0x1
  1031                           
  1032                           
  1033                           ; 2 bytes @ 0x1
  1034     0021                     	ds	1
  1035     0022                     ??__Umul8_16:
  1036     0022                     ??_readEEPROM:	
  1037                           ; 1 bytes @ 0x2
  1038                           
  1039     0022                     Lcd_Write_Char@temp:	
  1040                           ; 1 bytes @ 0x2
  1041                           
  1042     0022                     ___wmul@multiplicand:	
  1043                           ; 1 bytes @ 0x2
  1044                           
  1045     0022                     ___lwdiv@dividend:	
  1046                           ; 2 bytes @ 0x2
  1047                           
  1048                           
  1049                           ; 2 bytes @ 0x2
  1050     0022                     	ds	1
  1051     0023                     ??_UART_Write_Text:
  1052     0023                     Lcd_Cmd@a:	
  1053                           ; 1 bytes @ 0x3
  1054                           
  1055     0023                     Lcd_Write_Char@y:	
  1056                           ; 1 bytes @ 0x3
  1057                           
  1058                           
  1059                           ; 1 bytes @ 0x3
  1060     0023                     	ds	1
  1061     0024                     ??_Lcd_Clear:
  1062     0024                     ?_Lcd_Set_Cursor:	
  1063                           ; 1 bytes @ 0x4
  1064                           
  1065     0024                     ??_Lcd_Init:	
  1066                           ; 1 bytes @ 0x4
  1067                           
  1068     0024                     ??___wmul:	
  1069                           ; 1 bytes @ 0x4
  1070                           
  1071     0024                     ??___fltol:	
  1072                           ; 1 bytes @ 0x4
  1073                           
  1074     0024                     ??___lwdiv:	
  1075                           ; 1 bytes @ 0x4
  1076                           
  1077     0024                     ??___xxtofl:	
  1078                           ; 1 bytes @ 0x4
  1079                           
  1080     0024                     Lcd_Set_Cursor@b:	
  1081                           ; 1 bytes @ 0x4
  1082                           
  1083     0024                     Lcd_Write_Char@a:	
  1084                           ; 1 bytes @ 0x4
  1085                           
  1086     0024                     ___lwdiv@counter:	
  1087                           ; 1 bytes @ 0x4
  1088                           
  1089     0024                     ___wmul@product:	
  1090                           ; 1 bytes @ 0x4
  1091                           
  1092     0024                     __Umul8_16@product:	
  1093                           ; 2 bytes @ 0x4
  1094                           
  1095     0024                     ___fldiv@b:	
  1096                           ; 2 bytes @ 0x4
  1097                           
  1098                           
  1099                           ; 4 bytes @ 0x4
  1100     0024                     	ds	1
  1101     0025                     ??_Lcd_Set_Cursor:
  1102     0025                     ?_Lcd_Write_String:	
  1103                           ; 1 bytes @ 0x5
  1104                           
  1105     0025                     Lcd_Write_String@a:	
  1106                           ; 1 bytes @ 0x5
  1107                           
  1108     0025                     ___lwdiv@quotient:	
  1109                           ; 2 bytes @ 0x5
  1110                           
  1111                           
  1112                           ; 2 bytes @ 0x5
  1113     0025                     	ds	1
  1114     0026                     Lcd_Set_Cursor@a:
  1115     0026                     UART_Write_Text@i:	
  1116                           ; 1 bytes @ 0x6
  1117                           
  1118     0026                     __Umul8_16@word_mpld:	
  1119                           ; 2 bytes @ 0x6
  1120                           
  1121                           
  1122                           ; 2 bytes @ 0x6
  1123     0026                     	ds	1
  1124     0027                     ??_Lcd_Write_String:
  1125     0027                     ?___lwmod:	
  1126                           ; 1 bytes @ 0x7
  1127                           
  1128     0027                     Lcd_Set_Cursor@z:	
  1129                           ; 2 bytes @ 0x7
  1130                           
  1131     0027                     ___lwmod@divisor:	
  1132                           ; 1 bytes @ 0x7
  1133                           
  1134                           
  1135                           ; 2 bytes @ 0x7
  1136     0027                     	ds	1
  1137     0028                     ??___fldiv:
  1138     0028                     Lcd_Set_Cursor@y:	
  1139                           ; 1 bytes @ 0x8
  1140                           
  1141     0028                     ___fltol@sign1:	
  1142                           ; 1 bytes @ 0x8
  1143                           
  1144     0028                     __Umul8_16@multiplier:	
  1145                           ; 1 bytes @ 0x8
  1146                           
  1147     0028                     ___xxtofl@sign:	
  1148                           ; 1 bytes @ 0x8
  1149                           
  1150                           
  1151                           ; 1 bytes @ 0x8
  1152     0028                     	ds	1
  1153     0029                     Lcd_Set_Cursor@temp:
  1154     0029                     ___fltol@exp1:	
  1155                           ; 1 bytes @ 0x9
  1156                           
  1157     0029                     ___xxtofl@exp:	
  1158                           ; 1 bytes @ 0x9
  1159                           
  1160     0029                     ___lwmod@dividend:	
  1161                           ; 1 bytes @ 0x9
  1162                           
  1163                           
  1164                           ; 2 bytes @ 0x9
  1165     0029                     	ds	1
  1166     002A                     ?___awdiv:
  1167     002A                     ?___awmod:	
  1168                           ; 2 bytes @ 0xA
  1169                           
  1170     002A                     Lcd_Write_String@i:	
  1171                           ; 2 bytes @ 0xA
  1172                           
  1173     002A                     ___awdiv@divisor:	
  1174                           ; 2 bytes @ 0xA
  1175                           
  1176     002A                     ___awmod@divisor:	
  1177                           ; 2 bytes @ 0xA
  1178                           
  1179     002A                     ___xxtofl@arg:	
  1180                           ; 2 bytes @ 0xA
  1181                           
  1182                           
  1183                           ; 4 bytes @ 0xA
  1184     002A                     	ds	1
  1185     002B                     ??___lwmod:
  1186     002B                     ___lwmod@counter:	
  1187                           ; 1 bytes @ 0xB
  1188                           
  1189                           
  1190                           ; 1 bytes @ 0xB
  1191     002B                     	ds	1
  1192     002C                     ?_sprintf:
  1193     002C                     sprintf@f:	
  1194                           ; 2 bytes @ 0xC
  1195                           
  1196     002C                     ___awdiv@dividend:	
  1197                           ; 2 bytes @ 0xC
  1198                           
  1199     002C                     ___awmod@dividend:	
  1200                           ; 2 bytes @ 0xC
  1201                           
  1202                           
  1203                           ; 2 bytes @ 0xC
  1204     002C                     	ds	1
  1205     002D                     ___fldiv@rem:
  1206                           
  1207                           ; 4 bytes @ 0xD
  1208     002D                     	ds	1
  1209     002E                     ??___awdiv:
  1210     002E                     ??___awmod:	
  1211                           ; 1 bytes @ 0xE
  1212                           
  1213     002E                     ___awdiv@counter:	
  1214                           ; 1 bytes @ 0xE
  1215                           
  1216     002E                     ___awmod@counter:	
  1217                           ; 1 bytes @ 0xE
  1218                           
  1219                           
  1220                           ; 1 bytes @ 0xE
  1221     002E                     	ds	1
  1222     002F                     ___awdiv@sign:
  1223     002F                     ___awmod@sign:	
  1224                           ; 1 bytes @ 0xF
  1225                           
  1226                           
  1227                           ; 1 bytes @ 0xF
  1228     002F                     	ds	1
  1229     0030                     ___awdiv@quotient:
  1230                           
  1231                           ; 2 bytes @ 0x10
  1232     0030                     	ds	1
  1233     0031                     ___fldiv@sign:
  1234                           
  1235                           ; 1 bytes @ 0x11
  1236     0031                     	ds	1
  1237     0032                     ___fldiv@new_exp:
  1238                           
  1239                           ; 2 bytes @ 0x12
  1240     0032                     	ds	2
  1241     0034                     ___fldiv@grs:
  1242                           
  1243                           ; 4 bytes @ 0x14
  1244     0034                     	ds	2
  1245     0036                     ??_sprintf:
  1246                           
  1247                           ; 1 bytes @ 0x16
  1248     0036                     	ds	2
  1249     0038                     ___fldiv@bexp:
  1250                           
  1251                           ; 1 bytes @ 0x18
  1252     0038                     	ds	1
  1253     0039                     ___fldiv@aexp:
  1254                           
  1255                           ; 1 bytes @ 0x19
  1256     0039                     	ds	1
  1257     003A                     ?___flmul:
  1258     003A                     sprintf@prec:	
  1259                           ; 4 bytes @ 0x1A
  1260                           
  1261     003A                     ___flmul@b:	
  1262                           ; 1 bytes @ 0x1A
  1263                           
  1264                           
  1265                           ; 4 bytes @ 0x1A
  1266     003A                     	ds	1
  1267     003B                     sprintf@ap:
  1268                           
  1269                           ; 1 bytes @ 0x1B
  1270     003B                     	ds	1
  1271     003C                     sprintf@val:
  1272                           
  1273                           ; 2 bytes @ 0x1C
  1274     003C                     	ds	2
  1275     003E                     sprintf@flag:
  1276     003E                     ___flmul@a:	
  1277                           ; 1 bytes @ 0x1E
  1278                           
  1279                           
  1280                           ; 4 bytes @ 0x1E
  1281     003E                     	ds	1
  1282     003F                     sprintf@width:
  1283                           
  1284                           ; 2 bytes @ 0x1F
  1285     003F                     	ds	2
  1286     0041                     sprintf@c:
  1287                           
  1288                           ; 1 bytes @ 0x21
  1289     0041                     	ds	1
  1290     0042                     ??___flmul:
  1291     0042                     sprintf@sp:	
  1292                           ; 1 bytes @ 0x22
  1293                           
  1294                           
  1295                           ; 1 bytes @ 0x22
  1296     0042                     	ds	5
  1297     0047                     ___flmul@sign:
  1298                           
  1299                           ; 1 bytes @ 0x27
  1300     0047                     	ds	1
  1301     0048                     ___flmul@grs:
  1302                           
  1303                           ; 4 bytes @ 0x28
  1304     0048                     	ds	4
  1305     004C                     ___flmul@aexp:
  1306                           
  1307                           ; 1 bytes @ 0x2C
  1308     004C                     	ds	1
  1309     004D                     ___flmul@bexp:
  1310                           
  1311                           ; 1 bytes @ 0x2D
  1312     004D                     	ds	1
  1313     004E                     ___flmul@prod:
  1314                           
  1315                           ; 4 bytes @ 0x2E
  1316     004E                     	ds	4
  1317     0052                     ___flmul@temp:
  1318                           
  1319                           ; 2 bytes @ 0x32
  1320     0052                     	ds	2
  1321     0054                     ??_main:
  1322                           
  1323                           ; 1 bytes @ 0x34
  1324     0054                     	ds	6
  1325     005A                     main@combinedText:
  1326                           
  1327                           ; 20 bytes @ 0x3A
  1328     005A                     	ds	20
  1329                           
  1330                           	psect	maintext
  1331     1557                     __pmaintext:	
  1332 ;;
  1333 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
  1334 ;;
  1335 ;; *************** function _main *****************
  1336 ;; Defined at:
  1337 ;;		line 100 in file "main.c"
  1338 ;; Parameters:    Size  Location     Type
  1339 ;;		None
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;  uartMessage     8   37[BANK1 ] unsigned char [8]
  1342 ;;  uartMessage     8   29[BANK1 ] unsigned char [8]
  1343 ;;  combinedText   20    0[BANK1 ] unsigned char [20]
  1344 ;;  negativeDisp    2    0[BANK3 ] int 
  1345 ;;  negativeFeed    2   28[BANK3 ] int 
  1346 ;;  combinedText   20   58[BANK0 ] unsigned char [20]
  1347 ;;  i               2   20[BANK3 ] int 
  1348 ;;  i               2   18[BANK3 ] int 
  1349 ;;  i               2   16[BANK3 ] int 
  1350 ;;  i               2   14[BANK3 ] int 
  1351 ;;  i               2   12[BANK3 ] int 
  1352 ;;  i               2   10[BANK3 ] int 
  1353 ;;  rpmString       5   61[BANK1 ] unsigned char [5]
  1354 ;;  adcString1      4   76[BANK1 ] unsigned char [4]
  1355 ;;  integerPart     4   24[BANK3 ] float 
  1356 ;;  gostermelikl    4   53[BANK1 ] float 
  1357 ;;  oranValue       4   49[BANK1 ] float 
  1358 ;;  binler          2   22[BANK3 ] int 
  1359 ;;  yuzler          2    8[BANK3 ] int 
  1360 ;;  birler          2   74[BANK1 ] int 
  1361 ;;  onlar           2   72[BANK1 ] int 
  1362 ;;  dakika          2   70[BANK1 ] int 
  1363 ;;  saat            2   68[BANK1 ] int 
  1364 ;;  lcdText         9   20[BANK1 ] unsigned char [9]
  1365 ;;  adcValue1       4    4[BANK3 ] float 
  1366 ;;  adcValue3       4   45[BANK1 ] float 
  1367 ;;  rpmtofloat      4    0        float 
  1368 ;;  displayValue    2   30[BANK3 ] unsigned int 
  1369 ;;  ilkAcilis       2    2[BANK3 ] int 
  1370 ;;  adcValue2       2   66[BANK1 ] int 
  1371 ;;  a               2    0        unsigned int 
  1372 ;; Return value:  Size  Location     Type
  1373 ;;                  2  177[None  ] int 
  1374 ;; Registers used:
  1375 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1376 ;; Tracked objects:
  1377 ;;		On entry : B00/0
  1378 ;;		On exit  : 0/0
  1379 ;;		Unchanged: 0/0
  1380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1381 ;;      Params:         0       0       0       0       0
  1382 ;;      Locals:         0      20      80      32       0
  1383 ;;      Temps:          0       6       0       0       0
  1384 ;;      Totals:         0      26      80      32       0
  1385 ;;Total ram usage:      138 bytes
  1386 ;; Hardware stack levels required when called: 5
  1387 ;; This function calls:
  1388 ;;		_Lcd_Clear
  1389 ;;		_Lcd_Init
  1390 ;;		_Lcd_Set_Cursor
  1391 ;;		_Lcd_Write_String
  1392 ;;		_UART_Initialize
  1393 ;;		_UART_Write_Text
  1394 ;;		___awdiv
  1395 ;;		___awmod
  1396 ;;		___fldiv
  1397 ;;		___flmul
  1398 ;;		___fltol
  1399 ;;		___wmul
  1400 ;;		___xxtofl
  1401 ;;		_readEEPROM
  1402 ;;		_sprintf
  1403 ;; This function is called by:
  1404 ;;		Startup code after reset
  1405 ;; This function uses a non-reentrant model
  1406 ;;
  1407                           
  1408     1557                     _main:	
  1409                           ;psect for function _main
  1410                           
  1411     1557                     l4081:	
  1412                           ;incstack = 0
  1413                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1414                           
  1415                           
  1416                           ;main.c: 102:   unsigned int a;;main.c: 105: TRISB = 0b00000000;
  1417     1557  1683               	bsf	3,5	;RP0=1, select bank1
  1418     1558  1303               	bcf	3,6	;RP1=0, select bank1
  1419     1559  0186               	clrf	6	;volatile
  1420     155A                     l4083:
  1421                           
  1422                           ;main.c: 106: TRISA4 = 0;
  1423     155A  1205               	bcf	5,4	;volatile
  1424     155B                     l4085:
  1425                           
  1426                           ;main.c: 107: TRISE0 = 1;
  1427     155B  1409               	bsf	9,0	;volatile
  1428     155C                     l4087:
  1429                           
  1430                           ;main.c: 108: TRISE1 = 1;
  1431     155C  1489               	bsf	9,1	;volatile
  1432     155D                     l4089:
  1433                           
  1434                           ;main.c: 109: TRISC1 = 1;
  1435     155D  1487               	bsf	7,1	;volatile
  1436     155E                     l4091:
  1437                           
  1438                           ;main.c: 110: TRISC2 = 1;
  1439     155E  1507               	bsf	7,2	;volatile
  1440     155F                     l4093:
  1441                           
  1442                           ;main.c: 111: TRISE2 = 1;
  1443     155F  1509               	bsf	9,2	;volatile
  1444     1560                     l4095:
  1445                           
  1446                           ;main.c: 112: TRISC0 = 1;
  1447     1560  1407               	bsf	7,0	;volatile
  1448     1561                     l4097:
  1449                           
  1450                           ;main.c: 113: TRISC3 = 1;
  1451     1561  1587               	bsf	7,3	;volatile
  1452     1562                     l4099:
  1453                           
  1454                           ;main.c: 114: TRISD0 = 1;
  1455     1562  1408               	bsf	8,0	;volatile
  1456     1563                     l4101:
  1457                           
  1458                           ;main.c: 116: TRISA1 = 1;
  1459     1563  1485               	bsf	5,1	;volatile
  1460     1564                     l4103:
  1461                           
  1462                           ;main.c: 117: TRISA2 = 1;
  1463     1564  1505               	bsf	5,2	;volatile
  1464     1565                     l4105:
  1465                           
  1466                           ;main.c: 118: TRISA3 = 1;
  1467     1565  1585               	bsf	5,3	;volatile
  1468     1566                     l4107:
  1469                           
  1470                           ;main.c: 119: Lcd_Init();
  1471     1566  160A  118A  2359  160A  118A  	fcall	_Lcd_Init
  1472     156B                     l4109:
  1473                           
  1474                           ;main.c: 121: TRISC6 = 0;
  1475     156B  1683               	bsf	3,5	;RP0=1, select bank1
  1476     156C  1303               	bcf	3,6	;RP1=0, select bank1
  1477     156D  1307               	bcf	7,6	;volatile
  1478     156E                     l4111:
  1479                           
  1480                           ;main.c: 122: TRISC7 = 1;
  1481     156E  1787               	bsf	7,7	;volatile
  1482     156F                     l4113:
  1483                           
  1484                           ;main.c: 125: TRISA0 = 0;
  1485     156F  1005               	bcf	5,0	;volatile
  1486     1570                     l4115:
  1487                           
  1488                           ;main.c: 126: TRISA5 = 0;
  1489     1570  1285               	bcf	5,5	;volatile
  1490     1571                     l4117:
  1491                           
  1492                           ;main.c: 127: TRISC4 = 0;
  1493     1571  1207               	bcf	7,4	;volatile
  1494     1572                     l4119:
  1495                           
  1496                           ;main.c: 128: TRISC5 = 0;
  1497     1572  1287               	bcf	7,5	;volatile
  1498     1573                     l4121:
  1499                           
  1500                           ;main.c: 129: TRISD = 0b00000001;
  1501     1573  3001               	movlw	1
  1502     1574  0088               	movwf	8	;volatile
  1503     1575                     l4123:
  1504                           
  1505                           ;main.c: 132:   _delay((unsigned long)((100)*(4000000/4000.0)));
  1506     1575  3082               	movlw	130
  1507     1576  1283               	bcf	3,5	;RP0=0, select bank0
  1508     1577  1303               	bcf	3,6	;RP1=0, select bank0
  1509     1578  00D5               	movwf	??_main+1
  1510     1579  30DD               	movlw	221
  1511     157A  00D4               	movwf	??_main
  1512     157B                     u6287:
  1513     157B  0BD4               	decfsz	??_main,f
  1514     157C  2D7B               	goto	u6287
  1515     157D  0BD5               	decfsz	??_main+1,f
  1516     157E  2D7B               	goto	u6287
  1517     157F                     l4125:
  1518                           
  1519                           ;main.c: 133:   RA4 = 0;
  1520     157F  1283               	bcf	3,5	;RP0=0, select bank0
  1521     1580  1303               	bcf	3,6	;RP1=0, select bank0
  1522     1581  1205               	bcf	5,4	;volatile
  1523     1582                     l4127:
  1524                           
  1525                           ;main.c: 137:     currentTime.hours = readEEPROM(0x00);
  1526     1582  3000               	movlw	0
  1527     1583  00A0               	movwf	readEEPROM@address
  1528     1584  00A1               	movwf	readEEPROM@address+1
  1529     1585  160A  118A  2036  160A  118A  	fcall	_readEEPROM
  1530     158A  1283               	bcf	3,5	;RP0=0, select bank0
  1531     158B  1303               	bcf	3,6	;RP1=0, select bank0
  1532     158C  0821               	movf	?_readEEPROM+1,w
  1533     158D  00F8               	movwf	_currentTime+1
  1534     158E  0820               	movf	?_readEEPROM,w
  1535     158F  00F7               	movwf	_currentTime
  1536     1590                     l4129:
  1537                           
  1538                           ;main.c: 138:     currentTime.minutes = readEEPROM(0x01);
  1539     1590  3001               	movlw	1
  1540     1591  00A0               	movwf	readEEPROM@address
  1541     1592  3000               	movlw	0
  1542     1593  00A1               	movwf	readEEPROM@address+1
  1543     1594  160A  118A  2036  160A  118A  	fcall	_readEEPROM
  1544     1599  1283               	bcf	3,5	;RP0=0, select bank0
  1545     159A  1303               	bcf	3,6	;RP1=0, select bank0
  1546     159B  0821               	movf	?_readEEPROM+1,w
  1547     159C  00FA               	movwf	_currentTime+3
  1548     159D  0820               	movf	?_readEEPROM,w
  1549     159E  00F9               	movwf	_currentTime+2
  1550     159F                     l4131:
  1551                           
  1552                           ;main.c: 143:     char lcdText[9];;main.c: 145:     OPTION_REGbits.T0CS = 0;
  1553     159F  1683               	bsf	3,5	;RP0=1, select bank1
  1554     15A0  1303               	bcf	3,6	;RP1=0, select bank1
  1555     15A1  1281               	bcf	1,5	;volatile
  1556     15A2                     l4133:
  1557                           
  1558                           ;main.c: 146:     OPTION_REGbits.PSA = 0;
  1559     15A2  1181               	bcf	1,3	;volatile
  1560     15A3                     l4135:
  1561                           
  1562                           ;main.c: 147:     OPTION_REGbits.PS2 = 1;
  1563     15A3  1501               	bsf	1,2	;volatile
  1564     15A4                     l4137:
  1565                           
  1566                           ;main.c: 148:     OPTION_REGbits.PS1 = 1;
  1567     15A4  1481               	bsf	1,1	;volatile
  1568     15A5                     l4139:
  1569                           
  1570                           ;main.c: 149:     OPTION_REGbits.PS0 = 1;
  1571     15A5  1401               	bsf	1,0	;volatile
  1572     15A6                     l4141:
  1573                           
  1574                           ;main.c: 152:     INTCONbits.GIE = 1;
  1575     15A6  178B               	bsf	11,7	;volatile
  1576     15A7                     l4143:
  1577                           
  1578                           ;main.c: 153:     INTCONbits.PEIE = 1;
  1579     15A7  170B               	bsf	11,6	;volatile
  1580     15A8                     l4145:
  1581                           
  1582                           ;main.c: 154:     INTCONbits.T0IE = 1;
  1583     15A8  168B               	bsf	11,5	;volatile
  1584     15A9                     l4147:
  1585                           
  1586                           ;main.c: 157:     Lcd_Clear();
  1587     15A9  160A  158A  27F3  160A  118A  	fcall	_Lcd_Clear
  1588     15AE                     l4149:
  1589                           
  1590                           ;main.c: 158:     Lcd_Set_Cursor(1,1);
  1591     15AE  1283               	bcf	3,5	;RP0=0, select bank0
  1592     15AF  1303               	bcf	3,6	;RP1=0, select bank0
  1593     15B0  01A4               	clrf	Lcd_Set_Cursor@b
  1594     15B1  0AA4               	incf	Lcd_Set_Cursor@b,f
  1595     15B2  3001               	movlw	1
  1596     15B3  160A  118A  225F  160A  118A  	fcall	_Lcd_Set_Cursor
  1597     15B8                     l4151:
  1598                           
  1599                           ;main.c: 159:     Lcd_Write_String("UZMANLAR MAKINA");
  1600     15B8  30BD               	movlw	low (STR_1| (0+32768))
  1601     15B9  1283               	bcf	3,5	;RP0=0, select bank0
  1602     15BA  1303               	bcf	3,6	;RP1=0, select bank0
  1603     15BB  00A5               	movwf	Lcd_Write_String@a
  1604     15BC  3098               	movlw	high (STR_1| (0+32768))
  1605     15BD  00A6               	movwf	Lcd_Write_String@a+1
  1606     15BE  160A  118A  2146  160A  118A  	fcall	_Lcd_Write_String
  1607     15C3                     l4153:
  1608                           
  1609                           ;main.c: 160:     Lcd_Set_Cursor(2,1);
  1610     15C3  1283               	bcf	3,5	;RP0=0, select bank0
  1611     15C4  1303               	bcf	3,6	;RP1=0, select bank0
  1612     15C5  01A4               	clrf	Lcd_Set_Cursor@b
  1613     15C6  0AA4               	incf	Lcd_Set_Cursor@b,f
  1614     15C7  3002               	movlw	2
  1615     15C8  160A  118A  225F  160A  118A  	fcall	_Lcd_Set_Cursor
  1616     15CD                     l4155:
  1617                           
  1618                           ;main.c: 161:     Lcd_Write_String("www.borvek.com");
  1619     15CD  30DC               	movlw	low (STR_2| (0+32768))
  1620     15CE  1283               	bcf	3,5	;RP0=0, select bank0
  1621     15CF  1303               	bcf	3,6	;RP1=0, select bank0
  1622     15D0  00A5               	movwf	Lcd_Write_String@a
  1623     15D1  3098               	movlw	high (STR_2| (0+32768))
  1624     15D2  00A6               	movwf	Lcd_Write_String@a+1
  1625     15D3  160A  118A  2146  160A  118A  	fcall	_Lcd_Write_String
  1626     15D8                     l4157:
  1627                           
  1628                           ;main.c: 162:     Lcd_Set_Cursor(2,17);
  1629     15D8  3011               	movlw	17
  1630     15D9  1283               	bcf	3,5	;RP0=0, select bank0
  1631     15DA  1303               	bcf	3,6	;RP1=0, select bank0
  1632     15DB  00A4               	movwf	Lcd_Set_Cursor@b
  1633     15DC  3002               	movlw	2
  1634     15DD  160A  118A  225F  160A  118A  	fcall	_Lcd_Set_Cursor
  1635     15E2                     l4159:
  1636                           
  1637                           ;main.c: 163:     Lcd_Write_String("V3");
  1638     15E2  306F               	movlw	low (STR_3| (0+32768))
  1639     15E3  1283               	bcf	3,5	;RP0=0, select bank0
  1640     15E4  1303               	bcf	3,6	;RP1=0, select bank0
  1641     15E5  00A5               	movwf	Lcd_Write_String@a
  1642     15E6  3099               	movlw	high (STR_3| (0+32768))
  1643     15E7  00A6               	movwf	Lcd_Write_String@a+1
  1644     15E8  160A  118A  2146  160A  118A  	fcall	_Lcd_Write_String
  1645     15ED                     l4161:
  1646                           
  1647                           ;main.c: 165:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1648     15ED  3006               	movlw	6
  1649     15EE  1283               	bcf	3,5	;RP0=0, select bank0
  1650     15EF  1303               	bcf	3,6	;RP1=0, select bank0
  1651     15F0  00D6               	movwf	??_main+2
  1652     15F1  3013               	movlw	19
  1653     15F2  00D5               	movwf	??_main+1
  1654     15F3  30AD               	movlw	173
  1655     15F4  00D4               	movwf	??_main
  1656     15F5                     u6297:
  1657     15F5  0BD4               	decfsz	??_main,f
  1658     15F6  2DF5               	goto	u6297
  1659     15F7  0BD5               	decfsz	??_main+1,f
  1660     15F8  2DF5               	goto	u6297
  1661     15F9  0BD6               	decfsz	??_main+2,f
  1662     15FA  2DF5               	goto	u6297
  1663     15FB                     l4163:
  1664                           
  1665                           ;main.c: 166:     Lcd_Clear();
  1666     15FB  160A  158A  27F3  160A  118A  	fcall	_Lcd_Clear
  1667     1600                     l4165:
  1668                           
  1669                           ;main.c: 171:     SPBRG = ((4000000/16)/19200) - 1;
  1670     1600  300C               	movlw	12
  1671     1601  1683               	bsf	3,5	;RP0=1, select bank1
  1672     1602  1303               	bcf	3,6	;RP1=0, select bank1
  1673     1603  0099               	movwf	25	;volatile
  1674     1604                     l4167:
  1675                           
  1676                           ;main.c: 172:     UART_Initialize();
  1677     1604  160A  118A  2012  160A  118A  	fcall	_UART_Initialize
  1678     1609                     l4169:
  1679                           
  1680                           ;main.c: 173: unsigned int displayValue = 0;
  1681     1609  1683               	bsf	3,5	;RP0=1, select bank3
  1682     160A  1703               	bsf	3,6	;RP1=1, select bank3
  1683     160B  01AE               	clrf	main@displayValue^(0+384)
  1684     160C  01AF               	clrf	(main@displayValue+1)^(0+384)
  1685     160D                     l4171:
  1686                           
  1687                           ;main.c: 178:     ADCON1bits.ADFM = 1;
  1688     160D  1683               	bsf	3,5	;RP0=1, select bank1
  1689     160E  1303               	bcf	3,6	;RP1=0, select bank1
  1690     160F  179F               	bsf	31,7	;volatile
  1691     1610                     l4173:
  1692                           
  1693                           ;main.c: 179:     ADCON1bits.PCFG = 0b100;
  1694     1610  081F               	movf	31,w	;volatile
  1695     1611  39F0               	andlw	-16
  1696     1612  3804               	iorlw	4
  1697     1613  009F               	movwf	31	;volatile
  1698     1614                     l4175:
  1699                           
  1700                           ;main.c: 180:     ADCON0bits.ADCS = 0b10;
  1701     1614  1283               	bcf	3,5	;RP0=0, select bank0
  1702     1615  1303               	bcf	3,6	;RP1=0, select bank0
  1703     1616  081F               	movf	31,w	;volatile
  1704     1617  393F               	andlw	-193
  1705     1618  3880               	iorlw	128
  1706     1619  009F               	movwf	31	;volatile
  1707     161A                     l4177:
  1708                           
  1709                           ;main.c: 181:     ADCON0bits.ADON = 1;
  1710     161A  141F               	bsf	31,0	;volatile
  1711     161B                     l4179:
  1712                           
  1713                           ;main.c: 183:     float adcValue1;;main.c: 184:     int adcValue2;;main.c: 185:     floa
      +                          t adcValue3;;main.c: 186:     float rpmtofloat;;main.c: 191:     RC1 = 0;
  1714     161B  1087               	bcf	7,1	;volatile
  1715     161C                     l4181:
  1716                           
  1717                           ;main.c: 192:     RE2 = 0;
  1718     161C  1109               	bcf	9,2	;volatile
  1719     161D                     l4183:
  1720                           
  1721                           ;main.c: 193:     RE0 = 0;
  1722     161D  1009               	bcf	9,0	;volatile
  1723     161E                     l4185:
  1724                           
  1725                           ;main.c: 194:     RC2 = 0;
  1726     161E  1107               	bcf	7,2	;volatile
  1727     161F                     l4187:
  1728                           
  1729                           ;main.c: 195:     RC0 = 0;
  1730     161F  1007               	bcf	7,0	;volatile
  1731     1620                     l4189:
  1732                           
  1733                           ;main.c: 196:     RE1 = 0;
  1734     1620  1089               	bcf	9,1	;volatile
  1735     1621                     l4191:
  1736                           
  1737                           ;main.c: 198: int ilkAcilis = 1;
  1738     1621  3001               	movlw	1
  1739     1622  1683               	bsf	3,5	;RP0=1, select bank3
  1740     1623  1703               	bsf	3,6	;RP1=1, select bank3
  1741     1624  0092               	movwf	main@ilkAcilis^(0+384)
  1742     1625  3000               	movlw	0
  1743     1626  0093               	movwf	(main@ilkAcilis^(0+384)+1)
  1744     1627                     l4193:
  1745                           
  1746                           ;main.c: 202: if (ilkAcilis) {
  1747     1627  1683               	bsf	3,5	;RP0=1, select bank3
  1748     1628  1703               	bsf	3,6	;RP1=1, select bank3
  1749     1629  0812               	movf	main@ilkAcilis^(0+384),w
  1750     162A  0413               	iorwf	(main@ilkAcilis+1)^(0+384),w
  1751     162B  1903               	btfsc	3,2
  1752     162C  2E2E               	goto	u5581
  1753     162D  2E31               	goto	u5580
  1754     162E                     u5581:
  1755     162E  160A  118A  2E85   	goto	l179
  1756     1631                     u5580:
  1757     1631                     l4195:
  1758                           
  1759                           ;main.c: 204:     Lcd_Set_Cursor(1,1);
  1760     1631  1283               	bcf	3,5	;RP0=0, select bank0
  1761     1632  1303               	bcf	3,6	;RP1=0, select bank0
  1762     1633  01A4               	clrf	Lcd_Set_Cursor@b
  1763     1634  0AA4               	incf	Lcd_Set_Cursor@b,f
  1764     1635  3001               	movlw	1
  1765     1636  160A  118A  225F  160A  118A  	fcall	_Lcd_Set_Cursor
  1766     163B                     l4197:
  1767                           
  1768                           ;main.c: 205:     Lcd_Write_String("STOP DURUMUNA GETIR");
  1769     163B  3096               	movlw	low (STR_4| (0+32768))
  1770     163C  1283               	bcf	3,5	;RP0=0, select bank0
  1771     163D  1303               	bcf	3,6	;RP1=0, select bank0
  1772     163E  00A5               	movwf	Lcd_Write_String@a
  1773     163F  3098               	movlw	high (STR_4| (0+32768))
  1774     1640  00A6               	movwf	Lcd_Write_String@a+1
  1775     1641  160A  118A  2146  160A  118A  	fcall	_Lcd_Write_String
  1776     1646                     l4199:
  1777                           
  1778                           ;main.c: 206:     Lcd_Set_Cursor(2,1);
  1779     1646  1283               	bcf	3,5	;RP0=0, select bank0
  1780     1647  1303               	bcf	3,6	;RP1=0, select bank0
  1781     1648  01A4               	clrf	Lcd_Set_Cursor@b
  1782     1649  0AA4               	incf	Lcd_Set_Cursor@b,f
  1783     164A  3002               	movlw	2
  1784     164B  160A  118A  225F  160A  118A  	fcall	_Lcd_Set_Cursor
  1785                           
  1786                           ;main.c: 207:     Lcd_Write_String("PUT IT IN STOP STATE");
  1787     1650  3081               	movlw	low (STR_5| (0+32768))
  1788     1651  1283               	bcf	3,5	;RP0=0, select bank0
  1789     1652  1303               	bcf	3,6	;RP1=0, select bank0
  1790     1653  00A5               	movwf	Lcd_Write_String@a
  1791     1654  3098               	movlw	high (STR_5| (0+32768))
  1792     1655  00A6               	movwf	Lcd_Write_String@a+1
  1793     1656  160A  118A  2146  160A  118A  	fcall	_Lcd_Write_String
  1794     165B                     l4201:
  1795                           
  1796                           ;main.c: 208:     _delay((unsigned long)((500)*(4000000/4000.0)));
  1797     165B  3003               	movlw	3
  1798     165C  1283               	bcf	3,5	;RP0=0, select bank0
  1799     165D  1303               	bcf	3,6	;RP1=0, select bank0
  1800     165E  00D6               	movwf	??_main+2
  1801     165F  308A               	movlw	138
  1802     1660  00D5               	movwf	??_main+1
  1803     1661  3055               	movlw	85
  1804     1662  00D4               	movwf	??_main
  1805     1663                     u6307:
  1806     1663  0BD4               	decfsz	??_main,f
  1807     1664  2E63               	goto	u6307
  1808     1665  0BD5               	decfsz	??_main+1,f
  1809     1666  2E63               	goto	u6307
  1810     1667  0BD6               	decfsz	??_main+2,f
  1811     1668  2E63               	goto	u6307
  1812     1669                     l4203:
  1813                           
  1814                           ;main.c: 209:         if ( RE2 == 0 && RE0 == 0 && RC0 == 0 && RE1 == 0) {
  1815     1669  1283               	bcf	3,5	;RP0=0, select bank0
  1816     166A  1303               	bcf	3,6	;RP1=0, select bank0
  1817     166B  1909               	btfsc	9,2	;volatile
  1818     166C  2E70               	goto	u5591
  1819     166D  160A  118A  2E73   	goto	u5590
  1820     1670                     u5591:
  1821     1670  120A  158A  2CB8   	goto	l182
  1822                           
  1823                           	psect	text1
  1824     0805                     __ptext1:	
  1825 ;; *************** function _sprintf *****************
  1826 ;; Defined at:
  1827 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  1828 ;; Parameters:    Size  Location     Type
  1829 ;;  sp              1    wreg     PTR unsigned char 
  1830 ;;		 -> main@combinedText_378(20), main@uartMessage_374(8), main@combinedText(20), main@uartMessage(8), 
  1831 ;;		 -> main@rpmString(5), main@adcString1(4), main@lcdText(9), 
  1832 ;;  f               2   12[BANK0 ] PTR const unsigned char 
  1833 ;;		 -> STR_35(6), STR_33(6), STR_29(6), STR_27(6), 
  1834 ;;		 -> STR_23(10), STR_21(6), STR_18(11), 
  1835 ;; Auto vars:     Size  Location     Type
  1836 ;;  sp              1   34[BANK0 ] PTR unsigned char 
  1837 ;;		 -> main@combinedText_378(20), main@uartMessage_374(8), main@combinedText(20), main@uartMessage(8), 
  1838 ;;		 -> main@rpmString(5), main@adcString1(4), main@lcdText(9), 
  1839 ;;  tmpval          4    0        struct .
  1840 ;;  width           2   31[BANK0 ] int 
  1841 ;;  val             2   28[BANK0 ] unsigned int 
  1842 ;;  cp              2    0        PTR const unsigned char 
  1843 ;;  len             2    0        unsigned int 
  1844 ;;  c               1   33[BANK0 ] unsigned char 
  1845 ;;  flag            1   30[BANK0 ] unsigned char 
  1846 ;;  ap              1   27[BANK0 ] PTR void [1]
  1847 ;;		 -> ?_sprintf(2), 
  1848 ;;  prec            1   26[BANK0 ] char 
  1849 ;; Return value:  Size  Location     Type
  1850 ;;                  2   12[BANK0 ] int 
  1851 ;; Registers used:
  1852 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1853 ;; Tracked objects:
  1854 ;;		On entry : 0/0
  1855 ;;		On exit  : 0/0
  1856 ;;		Unchanged: 0/0
  1857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1858 ;;      Params:         0      10       0       0       0
  1859 ;;      Locals:         0       9       0       0       0
  1860 ;;      Temps:          0       4       0       0       0
  1861 ;;      Totals:         0      23       0       0       0
  1862 ;;Total ram usage:       23 bytes
  1863 ;; Hardware stack levels used: 1
  1864 ;; Hardware stack levels required when called: 3
  1865 ;; This function calls:
  1866 ;;		___lwdiv
  1867 ;;		___lwmod
  1868 ;;		___wmul
  1869 ;;		_isdigit
  1870 ;; This function is called by:
  1871 ;;		_main
  1872 ;; This function uses a non-reentrant model
  1873 ;;
  1874                           
  1875     0805                     _sprintf:	
  1876                           ;psect for function _sprintf
  1877                           
  1878                           
  1879                           ;incstack = 0
  1880                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1881                           ;sprintf@sp stored from wreg
  1882     0805  1283               	bcf	3,5	;RP0=0, select bank0
  1883     0806  1303               	bcf	3,6	;RP1=0, select bank0
  1884     0807  00C2               	movwf	sprintf@sp
  1885     0808                     l3867:
  1886                           
  1887                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  1888     0808  302E               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1889     0809  00BB               	movwf	sprintf@ap
  1890                           
  1891                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1892     080A  29E1               	goto	l3977
  1893     080B                     l3869:
  1894                           
  1895                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1896     080B  3025               	movlw	37
  1897     080C  0641               	xorwf	sprintf@c,w
  1898     080D  1903               	btfsc	3,2
  1899     080E  2810               	goto	u5171
  1900     080F  2811               	goto	u5170
  1901     0810                     u5171:
  1902     0810  281B               	goto	l3875
  1903     0811                     u5170:
  1904     0811                     l3871:
  1905                           
  1906                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1907     0811  0842               	movf	sprintf@sp,w
  1908     0812  0084               	movwf	4
  1909     0813  0841               	movf	sprintf@c,w
  1910     0814  1383               	bcf	3,7	;select IRP bank0
  1911     0815  0080               	movwf	0
  1912     0816                     l3873:
  1913     0816  3001               	movlw	1
  1914     0817  00FF               	movwf	btemp+1
  1915     0818  087F               	movf	btemp+1,w
  1916     0819  07C2               	addwf	sprintf@sp,f
  1917                           
  1918                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 559:    continue;
  1919     081A  29E1               	goto	l3977
  1920     081B                     l3875:
  1921                           
  1922                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1923     081B  01BF               	clrf	sprintf@width
  1924     081C  01C0               	clrf	sprintf@width+1
  1925                           
  1926                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1927     081D  01BE               	clrf	sprintf@flag
  1928     081E  2826               	goto	l3881
  1929     081F                     l388:	
  1930                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 596:    case '0':
  1931                           
  1932                           
  1933                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  1934     081F  153E               	bsf	sprintf@flag,2
  1935     0820                     l3877:
  1936                           
  1937                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 598:     f++;
  1938     0820  3001               	movlw	1
  1939     0821  07AC               	addwf	sprintf@f,f
  1940     0822  1803               	skipnc
  1941     0823  0AAD               	incf	sprintf@f+1,f
  1942     0824  3000               	movlw	0
  1943     0825  07AD               	addwf	sprintf@f+1,f
  1944     0826                     l3881:	
  1945                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  1946                           
  1947     0826  082D               	movf	sprintf@f+1,w
  1948     0827  00FF               	movwf	btemp+1
  1949     0828  082C               	movf	sprintf@f,w
  1950     0829  0084               	movwf	4
  1951     082A  160A  158A  2000  120A  158A  	fcall	stringtab
  1952     082F  00B6               	movwf	??_sprintf
  1953     0830  01B7               	clrf	??_sprintf+1
  1954                           
  1955                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1956                           ; Switch size 1, requested type "simple"
  1957                           ; Number of cases is 1, Range of values is 0 to 0
  1958                           ; switch strategies available:
  1959                           ; Name         Instructions Cycles
  1960                           ; simple_byte            4     3 (average)
  1961                           ; direct_byte           11     8 (fixed)
  1962                           ; jumptable            260     6 (fixed)
  1963                           ;	Chosen strategy is simple_byte
  1964     0831  0837               	movf	??_sprintf+1,w
  1965     0832  3A00               	xorlw	0	; case 0
  1966     0833  1903               	skipnz
  1967     0834  2836               	goto	l4653
  1968     0835  283B               	goto	l3883
  1969     0836                     l4653:
  1970                           
  1971                           ; Switch size 1, requested type "simple"
  1972                           ; Number of cases is 1, Range of values is 48 to 48
  1973                           ; switch strategies available:
  1974                           ; Name         Instructions Cycles
  1975                           ; simple_byte            4     3 (average)
  1976                           ; direct_byte           14    11 (fixed)
  1977                           ; jumptable            263     9 (fixed)
  1978                           ;	Chosen strategy is simple_byte
  1979     0836  0836               	movf	??_sprintf,w
  1980     0837  3A30               	xorlw	48	; case 48
  1981     0838  1903               	skipnz
  1982     0839  281F               	goto	l388
  1983     083A  283B               	goto	l3883
  1984     083B                     l3883:
  1985                           
  1986                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1987     083B  082D               	movf	sprintf@f+1,w
  1988     083C  00FF               	movwf	btemp+1
  1989     083D  082C               	movf	sprintf@f,w
  1990     083E  0084               	movwf	4
  1991     083F  160A  158A  2000  120A  158A  	fcall	stringtab
  1992     0844  160A  118A  2022  120A  158A  	fcall	_isdigit
  1993     0849  1C03               	btfss	3,0
  1994     084A  284C               	goto	u5181
  1995     084B  284D               	goto	u5180
  1996     084C                     u5181:
  1997     084C  2896               	goto	l3897
  1998     084D                     u5180:
  1999     084D                     l3885:
  2000                           
  2001                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2002     084D  1283               	bcf	3,5	;RP0=0, select bank0
  2003     084E  1303               	bcf	3,6	;RP1=0, select bank0
  2004     084F  01BF               	clrf	sprintf@width
  2005     0850  01C0               	clrf	sprintf@width+1
  2006     0851                     l3887:
  2007                           
  2008                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2009     0851  300A               	movlw	10
  2010     0852  1283               	bcf	3,5	;RP0=0, select bank0
  2011     0853  1303               	bcf	3,6	;RP1=0, select bank0
  2012     0854  00A0               	movwf	___wmul@multiplier
  2013     0855  3000               	movlw	0
  2014     0856  00A1               	movwf	___wmul@multiplier+1
  2015     0857  0840               	movf	sprintf@width+1,w
  2016     0858  00A3               	movwf	___wmul@multiplicand+1
  2017     0859  083F               	movf	sprintf@width,w
  2018     085A  00A2               	movwf	___wmul@multiplicand
  2019     085B  160A  118A  2081  120A  158A  	fcall	___wmul
  2020     0860  1283               	bcf	3,5	;RP0=0, select bank0
  2021     0861  1303               	bcf	3,6	;RP1=0, select bank0
  2022     0862  0821               	movf	?___wmul+1,w
  2023     0863  00C0               	movwf	sprintf@width+1
  2024     0864  0820               	movf	?___wmul,w
  2025     0865  00BF               	movwf	sprintf@width
  2026     0866                     l3889:
  2027                           
  2028                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2029     0866  082D               	movf	sprintf@f+1,w
  2030     0867  00FF               	movwf	btemp+1
  2031     0868  082C               	movf	sprintf@f,w
  2032     0869  0084               	movwf	4
  2033     086A  160A  158A  2000  120A  158A  	fcall	stringtab
  2034     086F  3ED0               	addlw	208
  2035     0870  00B6               	movwf	??_sprintf
  2036     0871  30FF               	movlw	255
  2037     0872  1803               	skipnc
  2038     0873  3000               	movlw	0
  2039     0874  00B7               	movwf	??_sprintf+1
  2040     0875  0836               	movf	??_sprintf,w
  2041     0876  07BF               	addwf	sprintf@width,f
  2042     0877  1803               	skipnc
  2043     0878  0AC0               	incf	sprintf@width+1,f
  2044     0879  0837               	movf	??_sprintf+1,w
  2045     087A  07C0               	addwf	sprintf@width+1,f
  2046     087B                     l3891:
  2047     087B  3001               	movlw	1
  2048     087C  07AC               	addwf	sprintf@f,f
  2049     087D  1803               	skipnc
  2050     087E  0AAD               	incf	sprintf@f+1,f
  2051     087F  3000               	movlw	0
  2052     0880  07AD               	addwf	sprintf@f+1,f
  2053     0881                     l3893:
  2054                           
  2055                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2056     0881  082D               	movf	sprintf@f+1,w
  2057     0882  00FF               	movwf	btemp+1
  2058     0883  082C               	movf	sprintf@f,w
  2059     0884  0084               	movwf	4
  2060     0885  160A  158A  2000  120A  158A  	fcall	stringtab
  2061     088A  160A  118A  2022  120A  158A  	fcall	_isdigit
  2062     088F  1803               	btfsc	3,0
  2063     0890  2892               	goto	u5191
  2064     0891  2893               	goto	u5190
  2065     0892                     u5191:
  2066     0892  2851               	goto	l3887
  2067     0893                     u5190:
  2068     0893  2896               	goto	l3897
  2069     0894                     l402:	
  2070                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 843:   case 'u':
  2071                           
  2072                           
  2073                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          x40;
  2074     0894  173E               	bsf	sprintf@flag,6
  2075                           
  2076                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 845:    break;
  2077     0895  28BE               	goto	l400
  2078     0896                     l3897:
  2079     0896  1283               	bcf	3,5	;RP0=0, select bank0
  2080     0897  1303               	bcf	3,6	;RP1=0, select bank0
  2081     0898  082D               	movf	sprintf@f+1,w
  2082     0899  00B7               	movwf	??_sprintf+1
  2083     089A  082C               	movf	sprintf@f,w
  2084     089B  00B6               	movwf	??_sprintf
  2085     089C  0AAC               	incf	sprintf@f,f
  2086     089D  1903               	skipnz
  2087     089E  0AAD               	incf	sprintf@f+1,f
  2088     089F  0837               	movf	??_sprintf+1,w
  2089     08A0  00FF               	movwf	btemp+1
  2090     08A1  0836               	movf	??_sprintf,w
  2091     08A2  0084               	movwf	4
  2092     08A3  160A  158A  2000  120A  158A  	fcall	stringtab
  2093     08A8  00C1               	movwf	sprintf@c
  2094     08A9  00B8               	movwf	??_sprintf+2
  2095     08AA  01B9               	clrf	??_sprintf+3
  2096                           
  2097                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2098                           ; Switch size 1, requested type "simple"
  2099                           ; Number of cases is 1, Range of values is 0 to 0
  2100                           ; switch strategies available:
  2101                           ; Name         Instructions Cycles
  2102                           ; simple_byte            4     3 (average)
  2103                           ; direct_byte           11     8 (fixed)
  2104                           ; jumptable            260     6 (fixed)
  2105                           ;	Chosen strategy is simple_byte
  2106     08AB  0839               	movf	??_sprintf+3,w
  2107     08AC  3A00               	xorlw	0	; case 0
  2108     08AD  1903               	skipnz
  2109     08AE  28B0               	goto	l4655
  2110     08AF  29E1               	goto	l3977
  2111     08B0                     l4655:
  2112                           
  2113                           ; Switch size 1, requested type "simple"
  2114                           ; Number of cases is 4, Range of values is 0 to 117
  2115                           ; switch strategies available:
  2116                           ; Name         Instructions Cycles
  2117                           ; simple_byte           13     7 (average)
  2118                           ; jumptable            260     6 (fixed)
  2119                           ;	Chosen strategy is simple_byte
  2120     08B0  0838               	movf	??_sprintf+2,w
  2121     08B1  3A00               	xorlw	0	; case 0
  2122     08B2  1903               	skipnz
  2123     08B3  29F7               	goto	l3979
  2124     08B4  3A64               	xorlw	100	; case 100
  2125     08B5  1903               	skipnz
  2126     08B6  28BE               	goto	l400
  2127     08B7  3A0D               	xorlw	13	; case 105
  2128     08B8  1903               	skipnz
  2129     08B9  28BE               	goto	l400
  2130     08BA  3A1C               	xorlw	28	; case 117
  2131     08BB  1903               	skipnz
  2132     08BC  2894               	goto	l402
  2133     08BD  29E1               	goto	l3977
  2134     08BE                     l400:
  2135                           
  2136                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1277:   if((flag 
      +                          & 0x40) == 0x00)
  2137     08BE  1B3E               	btfsc	sprintf@flag,6
  2138     08BF  28C1               	goto	u5201
  2139     08C0  28C2               	goto	u5200
  2140     08C1                     u5201:
  2141     08C1  28DC               	goto	l3909
  2142     08C2                     u5200:
  2143     08C2                     l3899:
  2144                           
  2145                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2146     08C2  083B               	movf	sprintf@ap,w
  2147     08C3  0084               	movwf	4
  2148     08C4  1383               	bcf	3,7	;select IRP bank0
  2149     08C5  0800               	movf	0,w
  2150     08C6  00BC               	movwf	sprintf@val
  2151     08C7  0A84               	incf	4,f
  2152     08C8  0800               	movf	0,w
  2153     08C9  00BD               	movwf	sprintf@val+1
  2154     08CA                     l3901:
  2155     08CA  3002               	movlw	2
  2156     08CB  00FF               	movwf	btemp+1
  2157     08CC  087F               	movf	btemp+1,w
  2158     08CD  07BB               	addwf	sprintf@ap,f
  2159     08CE                     l3903:
  2160                           
  2161                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2162     08CE  1FBD               	btfss	sprintf@val+1,7
  2163     08CF  28D1               	goto	u5211
  2164     08D0  28D2               	goto	u5210
  2165     08D1                     u5211:
  2166     08D1  28E8               	goto	l3913
  2167     08D2                     u5210:
  2168     08D2                     l3905:
  2169                           
  2170                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2171     08D2  3003               	movlw	3
  2172     08D3  00FF               	movwf	btemp+1
  2173     08D4  087F               	movf	btemp+1,w
  2174     08D5  04BE               	iorwf	sprintf@flag,f
  2175     08D6                     l3907:
  2176                           
  2177                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2178     08D6  09BC               	comf	sprintf@val,f
  2179     08D7  09BD               	comf	sprintf@val+1,f
  2180     08D8  0ABC               	incf	sprintf@val,f
  2181     08D9  1903               	skipnz
  2182     08DA  0ABD               	incf	sprintf@val+1,f
  2183     08DB  28E8               	goto	l3913
  2184     08DC                     l3909:
  2185                           
  2186                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2187     08DC  083B               	movf	sprintf@ap,w
  2188     08DD  0084               	movwf	4
  2189     08DE  1383               	bcf	3,7	;select IRP bank0
  2190     08DF  0800               	movf	0,w
  2191     08E0  00BC               	movwf	sprintf@val
  2192     08E1  0A84               	incf	4,f
  2193     08E2  0800               	movf	0,w
  2194     08E3  00BD               	movwf	sprintf@val+1
  2195     08E4                     l3911:
  2196     08E4  3002               	movlw	2
  2197     08E5  00FF               	movwf	btemp+1
  2198     08E6  087F               	movf	btemp+1,w
  2199     08E7  07BB               	addwf	sprintf@ap,f
  2200     08E8                     l3913:
  2201                           
  2202                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2203     08E8  01C1               	clrf	sprintf@c
  2204     08E9  0AC1               	incf	sprintf@c,f
  2205     08EA                     l3919:
  2206                           
  2207                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2208     08EA  0841               	movf	sprintf@c,w
  2209     08EB  00B6               	movwf	??_sprintf
  2210     08EC  0736               	addwf	??_sprintf,w
  2211     08ED  3E12               	addlw	low (_dpowers| (0+32768))
  2212     08EE  0084               	movwf	4
  2213     08EF  3098               	movlw	high (_dpowers| (0+32768))
  2214     08F0  1803               	skipnc
  2215     08F1  3E01               	addlw	1
  2216     08F2  00FF               	movwf	btemp+1
  2217     08F3  160A  158A  2000  120A  158A  	fcall	stringtab
  2218     08F8  00B7               	movwf	??_sprintf+1
  2219     08F9  160A  158A  2000  120A  158A  	fcall	stringtab
  2220     08FE  00B8               	movwf	??_sprintf+2
  2221     08FF  0838               	movf	??_sprintf+2,w
  2222     0900  023D               	subwf	sprintf@val+1,w
  2223     0901  1D03               	skipz
  2224     0902  2905               	goto	u5225
  2225     0903  0837               	movf	??_sprintf+1,w
  2226     0904  023C               	subwf	sprintf@val,w
  2227     0905                     u5225:
  2228     0905  1803               	skipnc
  2229     0906  2908               	goto	u5221
  2230     0907  2909               	goto	u5220
  2231     0908                     u5221:
  2232     0908  290A               	goto	l3923
  2233     0909                     u5220:
  2234     0909  2914               	goto	l3927
  2235     090A                     l3923:
  2236     090A  3001               	movlw	1
  2237     090B  00FF               	movwf	btemp+1
  2238     090C  087F               	movf	btemp+1,w
  2239     090D  07C1               	addwf	sprintf@c,f
  2240     090E                     l3925:
  2241     090E  3005               	movlw	5
  2242     090F  0641               	xorwf	sprintf@c,w
  2243     0910  1D03               	btfss	3,2
  2244     0911  2913               	goto	u5231
  2245     0912  2914               	goto	u5230
  2246     0913                     u5231:
  2247     0913  28EA               	goto	l3919
  2248     0914                     u5230:
  2249     0914                     l3927:
  2250                           
  2251                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  2252     0914  083F               	movf	sprintf@width,w
  2253     0915  0440               	iorwf	sprintf@width+1,w
  2254     0916  1903               	btfsc	3,2
  2255     0917  2919               	goto	u5241
  2256     0918  291A               	goto	u5240
  2257     0919                     u5241:
  2258     0919  2926               	goto	l409
  2259     091A                     u5240:
  2260     091A                     l3929:
  2261     091A  083E               	movf	sprintf@flag,w
  2262     091B  3903               	andlw	3
  2263     091C  1903               	btfsc	3,2
  2264     091D  291F               	goto	u5251
  2265     091E  2920               	goto	u5250
  2266     091F                     u5251:
  2267     091F  2926               	goto	l409
  2268     0920                     u5250:
  2269     0920                     l3931:
  2270                           
  2271                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1372:    width--;
  2272     0920  30FF               	movlw	255
  2273     0921  07BF               	addwf	sprintf@width,f
  2274     0922  1803               	skipnc
  2275     0923  0AC0               	incf	sprintf@width+1,f
  2276     0924  30FF               	movlw	255
  2277     0925  07C0               	addwf	sprintf@width+1,f
  2278     0926                     l409:
  2279                           
  2280                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  2281     0926  0840               	movf	sprintf@width+1,w
  2282     0927  3A80               	xorlw	128
  2283     0928  3C80               	sublw	128
  2284     0929  1D03               	skipz
  2285     092A  292D               	goto	u5265
  2286     092B  083F               	movf	sprintf@width,w
  2287     092C  0241               	subwf	sprintf@c,w
  2288     092D                     u5265:
  2289     092D  1803               	skipnc
  2290     092E  2930               	goto	u5261
  2291     092F  2931               	goto	u5260
  2292     0930                     u5261:
  2293     0930  293D               	goto	l3935
  2294     0931                     u5260:
  2295     0931                     l3933:
  2296                           
  2297                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  2298     0931  1283               	bcf	3,5	;RP0=0, select bank0
  2299     0932  1303               	bcf	3,6	;RP1=0, select bank0
  2300     0933  0841               	movf	sprintf@c,w
  2301     0934  00B6               	movwf	??_sprintf
  2302     0935  01B7               	clrf	??_sprintf+1
  2303     0936  0836               	movf	??_sprintf,w
  2304     0937  02BF               	subwf	sprintf@width,f
  2305     0938  0837               	movf	??_sprintf+1,w
  2306     0939  1C03               	skipc
  2307     093A  03C0               	decf	sprintf@width+1,f
  2308     093B  02C0               	subwf	sprintf@width+1,f
  2309     093C  2941               	goto	l3937
  2310     093D                     l3935:
  2311                           
  2312                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  2313     093D  1283               	bcf	3,5	;RP0=0, select bank0
  2314     093E  1303               	bcf	3,6	;RP1=0, select bank0
  2315     093F  01BF               	clrf	sprintf@width
  2316     0940  01C0               	clrf	sprintf@width+1
  2317     0941                     l3937:
  2318                           
  2319                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  2320     0941  1D3E               	btfss	sprintf@flag,2
  2321     0942  2944               	goto	u5271
  2322     0943  2945               	goto	u5270
  2323     0944                     u5271:
  2324     0944  2970               	goto	l3953
  2325     0945                     u5270:
  2326     0945                     l3939:
  2327                           
  2328                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1418:    if(flag 
      +                          & 0x03)
  2329     0945  083E               	movf	sprintf@flag,w
  2330     0946  3903               	andlw	3
  2331     0947  1903               	btfsc	3,2
  2332     0948  294A               	goto	u5281
  2333     0949  294B               	goto	u5280
  2334     094A                     u5281:
  2335     094A  2954               	goto	l3945
  2336     094B                     u5280:
  2337     094B                     l3941:
  2338                           
  2339                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1419:     ((*sp++
      +                           = ('-')));
  2340     094B  0842               	movf	sprintf@sp,w
  2341     094C  0084               	movwf	4
  2342     094D  302D               	movlw	45
  2343     094E  1383               	bcf	3,7	;select IRP bank0
  2344     094F  0080               	movwf	0
  2345     0950                     l3943:
  2346     0950  3001               	movlw	1
  2347     0951  00FF               	movwf	btemp+1
  2348     0952  087F               	movf	btemp+1,w
  2349     0953  07C2               	addwf	sprintf@sp,f
  2350     0954                     l3945:
  2351                           
  2352                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  2353     0954  083F               	movf	sprintf@width,w
  2354     0955  0440               	iorwf	sprintf@width+1,w
  2355     0956  1903               	btfsc	3,2
  2356     0957  2959               	goto	u5291
  2357     0958  295A               	goto	u5290
  2358     0959                     u5291:
  2359     0959  299A               	goto	l3967
  2360     095A                     u5290:
  2361     095A                     l3947:
  2362                           
  2363                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
  2364     095A  0842               	movf	sprintf@sp,w
  2365     095B  0084               	movwf	4
  2366     095C  3030               	movlw	48
  2367     095D  1383               	bcf	3,7	;select IRP bank0
  2368     095E  0080               	movwf	0
  2369     095F                     l3949:
  2370     095F  3001               	movlw	1
  2371     0960  00FF               	movwf	btemp+1
  2372     0961  087F               	movf	btemp+1,w
  2373     0962  07C2               	addwf	sprintf@sp,f
  2374     0963                     l3951:
  2375     0963  30FF               	movlw	255
  2376     0964  07BF               	addwf	sprintf@width,f
  2377     0965  1803               	skipnc
  2378     0966  0AC0               	incf	sprintf@width+1,f
  2379     0967  30FF               	movlw	255
  2380     0968  07C0               	addwf	sprintf@width+1,f
  2381     0969  083F               	movf	sprintf@width,w
  2382     096A  0440               	iorwf	sprintf@width+1,w
  2383     096B  1D03               	btfss	3,2
  2384     096C  296E               	goto	u5301
  2385     096D  296F               	goto	u5300
  2386     096E                     u5301:
  2387     096E  295A               	goto	l3947
  2388     096F                     u5300:
  2389     096F  299A               	goto	l3967
  2390     0970                     l3953:
  2391                           
  2392                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1450:    if(width
  2393     0970  083F               	movf	sprintf@width,w
  2394     0971  0440               	iorwf	sprintf@width+1,w
  2395     0972  1903               	btfsc	3,2
  2396     0973  2975               	goto	u5311
  2397     0974  2976               	goto	u5310
  2398     0975                     u5311:
  2399     0975  298B               	goto	l3961
  2400     0976                     u5310:
  2401     0976                     l3955:
  2402                           
  2403                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  2404     0976  0842               	movf	sprintf@sp,w
  2405     0977  0084               	movwf	4
  2406     0978  3020               	movlw	32
  2407     0979  1383               	bcf	3,7	;select IRP bank0
  2408     097A  0080               	movwf	0
  2409     097B                     l3957:
  2410     097B  3001               	movlw	1
  2411     097C  00FF               	movwf	btemp+1
  2412     097D  087F               	movf	btemp+1,w
  2413     097E  07C2               	addwf	sprintf@sp,f
  2414     097F                     l3959:
  2415     097F  30FF               	movlw	255
  2416     0980  07BF               	addwf	sprintf@width,f
  2417     0981  1803               	skipnc
  2418     0982  0AC0               	incf	sprintf@width+1,f
  2419     0983  30FF               	movlw	255
  2420     0984  07C0               	addwf	sprintf@width+1,f
  2421     0985  083F               	movf	sprintf@width,w
  2422     0986  0440               	iorwf	sprintf@width+1,w
  2423     0987  1D03               	btfss	3,2
  2424     0988  298A               	goto	u5321
  2425     0989  298B               	goto	u5320
  2426     098A                     u5321:
  2427     098A  2976               	goto	l3955
  2428     098B                     u5320:
  2429     098B                     l3961:
  2430                           
  2431                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  2432     098B  083E               	movf	sprintf@flag,w
  2433     098C  3903               	andlw	3
  2434     098D  1903               	btfsc	3,2
  2435     098E  2990               	goto	u5331
  2436     098F  2991               	goto	u5330
  2437     0990                     u5331:
  2438     0990  299A               	goto	l3967
  2439     0991                     u5330:
  2440     0991                     l3963:
  2441                           
  2442                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2443     0991  0842               	movf	sprintf@sp,w
  2444     0992  0084               	movwf	4
  2445     0993  302D               	movlw	45
  2446     0994  1383               	bcf	3,7	;select IRP bank0
  2447     0995  0080               	movwf	0
  2448     0996                     l3965:
  2449     0996  3001               	movlw	1
  2450     0997  00FF               	movwf	btemp+1
  2451     0998  087F               	movf	btemp+1,w
  2452     0999  07C2               	addwf	sprintf@sp,f
  2453     099A                     l3967:
  2454                           
  2455                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2456     099A  0841               	movf	sprintf@c,w
  2457     099B  00BA               	movwf	sprintf@prec
  2458                           
  2459                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2460     099C  29D8               	goto	l3975
  2461     099D                     l3969:
  2462                           
  2463                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2464     099D  300A               	movlw	10
  2465     099E  00A7               	movwf	___lwmod@divisor
  2466     099F  3000               	movlw	0
  2467     09A0  00A8               	movwf	___lwmod@divisor+1
  2468     09A1  083A               	movf	sprintf@prec,w
  2469     09A2  00B6               	movwf	??_sprintf
  2470     09A3  0736               	addwf	??_sprintf,w
  2471     09A4  3E12               	addlw	low (_dpowers| (0+32768))
  2472     09A5  0084               	movwf	4
  2473     09A6  3098               	movlw	high (_dpowers| (0+32768))
  2474     09A7  1803               	skipnc
  2475     09A8  3E01               	addlw	1
  2476     09A9  00FF               	movwf	btemp+1
  2477     09AA  160A  158A  2000  120A  158A  	fcall	stringtab
  2478     09AF  00A0               	movwf	___lwdiv@divisor
  2479     09B0  160A  158A  2000  120A  158A  	fcall	stringtab
  2480     09B5  00A1               	movwf	___lwdiv@divisor+1
  2481     09B6  083D               	movf	sprintf@val+1,w
  2482     09B7  00A3               	movwf	___lwdiv@dividend+1
  2483     09B8  083C               	movf	sprintf@val,w
  2484     09B9  00A2               	movwf	___lwdiv@dividend
  2485     09BA  160A  118A  21D2  120A  158A  	fcall	___lwdiv
  2486     09BF  1283               	bcf	3,5	;RP0=0, select bank0
  2487     09C0  1303               	bcf	3,6	;RP1=0, select bank0
  2488     09C1  0821               	movf	?___lwdiv+1,w
  2489     09C2  00AA               	movwf	___lwmod@dividend+1
  2490     09C3  0820               	movf	?___lwdiv,w
  2491     09C4  00A9               	movwf	___lwmod@dividend
  2492     09C5  160A  118A  210A  120A  158A  	fcall	___lwmod
  2493     09CA  1283               	bcf	3,5	;RP0=0, select bank0
  2494     09CB  1303               	bcf	3,6	;RP1=0, select bank0
  2495     09CC  0827               	movf	?___lwmod,w
  2496     09CD  3E30               	addlw	48
  2497     09CE  00C1               	movwf	sprintf@c
  2498     09CF                     l3971:
  2499                           
  2500                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2501     09CF  0842               	movf	sprintf@sp,w
  2502     09D0  0084               	movwf	4
  2503     09D1  0841               	movf	sprintf@c,w
  2504     09D2  1383               	bcf	3,7	;select IRP bank0
  2505     09D3  0080               	movwf	0
  2506     09D4                     l3973:
  2507     09D4  3001               	movlw	1
  2508     09D5  00FF               	movwf	btemp+1
  2509     09D6  087F               	movf	btemp+1,w
  2510     09D7  07C2               	addwf	sprintf@sp,f
  2511     09D8                     l3975:
  2512                           
  2513                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2514     09D8  30FF               	movlw	255
  2515     09D9  00FF               	movwf	btemp+1
  2516     09DA  087F               	movf	btemp+1,w
  2517     09DB  07BA               	addwf	sprintf@prec,f
  2518     09DC  0A3A               	incf	sprintf@prec,w
  2519     09DD  1D03               	btfss	3,2
  2520     09DE  29E0               	goto	u5341
  2521     09DF  29E1               	goto	u5340
  2522     09E0                     u5341:
  2523     09E0  299D               	goto	l3969
  2524     09E1                     u5340:
  2525     09E1                     l3977:
  2526                           
  2527                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2528     09E1  082D               	movf	sprintf@f+1,w
  2529     09E2  00B7               	movwf	??_sprintf+1
  2530     09E3  082C               	movf	sprintf@f,w
  2531     09E4  00B6               	movwf	??_sprintf
  2532     09E5  0AAC               	incf	sprintf@f,f
  2533     09E6  1903               	skipnz
  2534     09E7  0AAD               	incf	sprintf@f+1,f
  2535     09E8  0837               	movf	??_sprintf+1,w
  2536     09E9  00FF               	movwf	btemp+1
  2537     09EA  0836               	movf	??_sprintf,w
  2538     09EB  0084               	movwf	4
  2539     09EC  160A  158A  2000  120A  158A  	fcall	stringtab
  2540     09F1  00C1               	movwf	sprintf@c
  2541     09F2  0841               	movf	sprintf@c,w
  2542     09F3  1D03               	btfss	3,2
  2543     09F4  29F6               	goto	u5351
  2544     09F5  29F7               	goto	u5350
  2545     09F6                     u5351:
  2546     09F6  280B               	goto	l3869
  2547     09F7                     u5350:
  2548     09F7                     l3979:
  2549                           
  2550                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2551     09F7  0842               	movf	sprintf@sp,w
  2552     09F8  0084               	movwf	4
  2553     09F9  1383               	bcf	3,7	;select IRP bank0
  2554     09FA  0180               	clrf	0
  2555     09FB                     l426:
  2556     09FB  0008               	return
  2557     09FC                     __end_of_sprintf:
  2558                           
  2559                           	psect	text2
  2560     1022                     __ptext2:	
  2561 ;; *************** function _isdigit *****************
  2562 ;; Defined at:
  2563 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\isdigit.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;  c               1    wreg     unsigned char 
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;  c               1    1[BANK0 ] unsigned char 
  2568 ;; Return value:  Size  Location     Type
  2569 ;;		None               void
  2570 ;; Registers used:
  2571 ;;		wreg, status,2, status,0
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2577 ;;      Params:         0       0       0       0       0
  2578 ;;      Locals:         0       2       0       0       0
  2579 ;;      Temps:          0       0       0       0       0
  2580 ;;      Totals:         0       2       0       0       0
  2581 ;;Total ram usage:        2 bytes
  2582 ;; Hardware stack levels used: 1
  2583 ;; Hardware stack levels required when called: 2
  2584 ;; This function calls:
  2585 ;;		Nothing
  2586 ;; This function is called by:
  2587 ;;		_sprintf
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           
  2591     1022                     _isdigit:	
  2592                           ;psect for function _isdigit
  2593                           
  2594                           
  2595                           ;incstack = 0
  2596                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2597                           ;isdigit@c stored from wreg
  2598     1022  1283               	bcf	3,5	;RP0=0, select bank0
  2599     1023  1303               	bcf	3,6	;RP1=0, select bank0
  2600     1024  00A1               	movwf	isdigit@c
  2601     1025                     l3749:
  2602     1025  01A0               	clrf	_isdigit$853
  2603     1026                     l3751:
  2604     1026  303A               	movlw	58
  2605     1027  0221               	subwf	isdigit@c,w
  2606     1028  1803               	skipnc
  2607     1029  282B               	goto	u4911
  2608     102A  282C               	goto	u4910
  2609     102B                     u4911:
  2610     102B  2834               	goto	l3757
  2611     102C                     u4910:
  2612     102C                     l3753:
  2613     102C  3030               	movlw	48
  2614     102D  0221               	subwf	isdigit@c,w
  2615     102E  1C03               	skipc
  2616     102F  2831               	goto	u4921
  2617     1030  2832               	goto	u4920
  2618     1031                     u4921:
  2619     1031  2834               	goto	l3757
  2620     1032                     u4920:
  2621     1032                     l3755:
  2622     1032  01A0               	clrf	_isdigit$853
  2623     1033  0AA0               	incf	_isdigit$853,f
  2624     1034                     l3757:
  2625     1034  0C20               	rrf	_isdigit$853,w
  2626     1035                     l883:
  2627     1035  0008               	return
  2628     1036                     __end_of_isdigit:
  2629                           
  2630                           	psect	text3
  2631     1081                     __ptext3:	
  2632 ;; *************** function ___wmul *****************
  2633 ;; Defined at:
  2634 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  2635 ;; Parameters:    Size  Location     Type
  2636 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2637 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2638 ;; Auto vars:     Size  Location     Type
  2639 ;;  product         2    4[BANK0 ] unsigned int 
  2640 ;; Return value:  Size  Location     Type
  2641 ;;                  2    0[BANK0 ] unsigned int 
  2642 ;; Registers used:
  2643 ;;		wreg, status,2, status,0
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/0
  2646 ;;		On exit  : 0/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2649 ;;      Params:         0       4       0       0       0
  2650 ;;      Locals:         0       2       0       0       0
  2651 ;;      Temps:          0       0       0       0       0
  2652 ;;      Totals:         0       6       0       0       0
  2653 ;;Total ram usage:        6 bytes
  2654 ;; Hardware stack levels used: 1
  2655 ;; Hardware stack levels required when called: 2
  2656 ;; This function calls:
  2657 ;;		Nothing
  2658 ;; This function is called by:
  2659 ;;		_main
  2660 ;;		_sprintf
  2661 ;; This function uses a non-reentrant model
  2662 ;;
  2663                           
  2664     1081                     ___wmul:	
  2665                           ;psect for function ___wmul
  2666                           
  2667     1081                     l3761:	
  2668                           ;incstack = 0
  2669                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2670                           
  2671     1081  1283               	bcf	3,5	;RP0=0, select bank0
  2672     1082  1303               	bcf	3,6	;RP1=0, select bank0
  2673     1083  01A4               	clrf	___wmul@product
  2674     1084  01A5               	clrf	___wmul@product+1
  2675     1085                     l3763:
  2676     1085  1C20               	btfss	___wmul@multiplier,0
  2677     1086  2888               	goto	u4931
  2678     1087  2889               	goto	u4930
  2679     1088                     u4931:
  2680     1088  288F               	goto	l430
  2681     1089                     u4930:
  2682     1089                     l3765:
  2683     1089  0822               	movf	___wmul@multiplicand,w
  2684     108A  07A4               	addwf	___wmul@product,f
  2685     108B  1803               	skipnc
  2686     108C  0AA5               	incf	___wmul@product+1,f
  2687     108D  0823               	movf	___wmul@multiplicand+1,w
  2688     108E  07A5               	addwf	___wmul@product+1,f
  2689     108F                     l430:
  2690     108F  3001               	movlw	1
  2691     1090                     u4945:
  2692     1090  1003               	clrc
  2693     1091  0DA2               	rlf	___wmul@multiplicand,f
  2694     1092  0DA3               	rlf	___wmul@multiplicand+1,f
  2695     1093  3EFF               	addlw	-1
  2696     1094  1D03               	skipz
  2697     1095  2890               	goto	u4945
  2698     1096                     l3767:
  2699     1096  3001               	movlw	1
  2700     1097                     u4955:
  2701     1097  1003               	clrc
  2702     1098  0CA1               	rrf	___wmul@multiplier+1,f
  2703     1099  0CA0               	rrf	___wmul@multiplier,f
  2704     109A  3EFF               	addlw	-1
  2705     109B  1D03               	skipz
  2706     109C  2897               	goto	u4955
  2707     109D                     l3769:
  2708     109D  0820               	movf	___wmul@multiplier,w
  2709     109E  0421               	iorwf	___wmul@multiplier+1,w
  2710     109F  1D03               	btfss	3,2
  2711     10A0  28A2               	goto	u4961
  2712     10A1  28A3               	goto	u4960
  2713     10A2                     u4961:
  2714     10A2  2885               	goto	l3763
  2715     10A3                     u4960:
  2716     10A3                     l3771:
  2717     10A3  0825               	movf	___wmul@product+1,w
  2718     10A4  00A1               	movwf	?___wmul+1
  2719     10A5  0824               	movf	___wmul@product,w
  2720     10A6  00A0               	movwf	?___wmul
  2721     10A7                     l432:
  2722     10A7  0008               	return
  2723     10A8                     __end_of___wmul:
  2724                           
  2725                           	psect	text4
  2726     110A                     __ptext4:	
  2727 ;; *************** function ___lwmod *****************
  2728 ;; Defined at:
  2729 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;  divisor         2    7[BANK0 ] unsigned int 
  2732 ;;  dividend        2    9[BANK0 ] unsigned int 
  2733 ;; Auto vars:     Size  Location     Type
  2734 ;;  counter         1   11[BANK0 ] unsigned char 
  2735 ;; Return value:  Size  Location     Type
  2736 ;;                  2    7[BANK0 ] unsigned int 
  2737 ;; Registers used:
  2738 ;;		wreg, status,2, status,0, btemp+1
  2739 ;; Tracked objects:
  2740 ;;		On entry : 0/0
  2741 ;;		On exit  : 0/0
  2742 ;;		Unchanged: 0/0
  2743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2744 ;;      Params:         0       4       0       0       0
  2745 ;;      Locals:         0       1       0       0       0
  2746 ;;      Temps:          0       0       0       0       0
  2747 ;;      Totals:         0       5       0       0       0
  2748 ;;Total ram usage:        5 bytes
  2749 ;; Hardware stack levels used: 1
  2750 ;; Hardware stack levels required when called: 2
  2751 ;; This function calls:
  2752 ;;		Nothing
  2753 ;; This function is called by:
  2754 ;;		_sprintf
  2755 ;; This function uses a non-reentrant model
  2756 ;;
  2757                           
  2758     110A                     ___lwmod:	
  2759                           ;psect for function ___lwmod
  2760                           
  2761     110A                     l3801:	
  2762                           ;incstack = 0
  2763                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  2764                           
  2765     110A  1283               	bcf	3,5	;RP0=0, select bank0
  2766     110B  1303               	bcf	3,6	;RP1=0, select bank0
  2767     110C  0827               	movf	___lwmod@divisor,w
  2768     110D  0428               	iorwf	___lwmod@divisor+1,w
  2769     110E  1903               	btfsc	3,2
  2770     110F  2911               	goto	u5041
  2771     1110  2912               	goto	u5040
  2772     1111                     u5041:
  2773     1111  2941               	goto	l3819
  2774     1112                     u5040:
  2775     1112                     l3803:
  2776     1112  01AB               	clrf	___lwmod@counter
  2777     1113  0AAB               	incf	___lwmod@counter,f
  2778     1114  2920               	goto	l3809
  2779     1115                     l3805:
  2780     1115  3001               	movlw	1
  2781     1116                     u5055:
  2782     1116  1003               	clrc
  2783     1117  0DA7               	rlf	___lwmod@divisor,f
  2784     1118  0DA8               	rlf	___lwmod@divisor+1,f
  2785     1119  3EFF               	addlw	-1
  2786     111A  1D03               	skipz
  2787     111B  2916               	goto	u5055
  2788     111C                     l3807:
  2789     111C  3001               	movlw	1
  2790     111D  00FF               	movwf	btemp+1
  2791     111E  087F               	movf	btemp+1,w
  2792     111F  07AB               	addwf	___lwmod@counter,f
  2793     1120                     l3809:
  2794     1120  1FA8               	btfss	___lwmod@divisor+1,7
  2795     1121  2923               	goto	u5061
  2796     1122  2924               	goto	u5060
  2797     1123                     u5061:
  2798     1123  2915               	goto	l3805
  2799     1124                     u5060:
  2800     1124                     l3811:
  2801     1124  0828               	movf	___lwmod@divisor+1,w
  2802     1125  022A               	subwf	___lwmod@dividend+1,w
  2803     1126  1D03               	skipz
  2804     1127  292A               	goto	u5075
  2805     1128  0827               	movf	___lwmod@divisor,w
  2806     1129  0229               	subwf	___lwmod@dividend,w
  2807     112A                     u5075:
  2808     112A  1C03               	skipc
  2809     112B  292D               	goto	u5071
  2810     112C  292E               	goto	u5070
  2811     112D                     u5071:
  2812     112D  2934               	goto	l3815
  2813     112E                     u5070:
  2814     112E                     l3813:
  2815     112E  0827               	movf	___lwmod@divisor,w
  2816     112F  02A9               	subwf	___lwmod@dividend,f
  2817     1130  0828               	movf	___lwmod@divisor+1,w
  2818     1131  1C03               	skipc
  2819     1132  03AA               	decf	___lwmod@dividend+1,f
  2820     1133  02AA               	subwf	___lwmod@dividend+1,f
  2821     1134                     l3815:
  2822     1134  3001               	movlw	1
  2823     1135                     u5085:
  2824     1135  1003               	clrc
  2825     1136  0CA8               	rrf	___lwmod@divisor+1,f
  2826     1137  0CA7               	rrf	___lwmod@divisor,f
  2827     1138  3EFF               	addlw	-1
  2828     1139  1D03               	skipz
  2829     113A  2935               	goto	u5085
  2830     113B                     l3817:
  2831     113B  3001               	movlw	1
  2832     113C  02AB               	subwf	___lwmod@counter,f
  2833     113D  1D03               	btfss	3,2
  2834     113E  2940               	goto	u5091
  2835     113F  2941               	goto	u5090
  2836     1140                     u5091:
  2837     1140  2924               	goto	l3811
  2838     1141                     u5090:
  2839     1141                     l3819:
  2840     1141  082A               	movf	___lwmod@dividend+1,w
  2841     1142  00A8               	movwf	?___lwmod+1
  2842     1143  0829               	movf	___lwmod@dividend,w
  2843     1144  00A7               	movwf	?___lwmod
  2844     1145                     l712:
  2845     1145  0008               	return
  2846     1146                     __end_of___lwmod:
  2847                           
  2848                           	psect	text5
  2849     11D2                     __ptext5:	
  2850 ;; *************** function ___lwdiv *****************
  2851 ;; Defined at:
  2852 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  2853 ;; Parameters:    Size  Location     Type
  2854 ;;  divisor         2    0[BANK0 ] unsigned int 
  2855 ;;  dividend        2    2[BANK0 ] unsigned int 
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;  quotient        2    5[BANK0 ] unsigned int 
  2858 ;;  counter         1    4[BANK0 ] unsigned char 
  2859 ;; Return value:  Size  Location     Type
  2860 ;;                  2    0[BANK0 ] unsigned int 
  2861 ;; Registers used:
  2862 ;;		wreg, status,2, status,0, btemp+1
  2863 ;; Tracked objects:
  2864 ;;		On entry : 0/0
  2865 ;;		On exit  : 0/0
  2866 ;;		Unchanged: 0/0
  2867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2868 ;;      Params:         0       4       0       0       0
  2869 ;;      Locals:         0       3       0       0       0
  2870 ;;      Temps:          0       0       0       0       0
  2871 ;;      Totals:         0       7       0       0       0
  2872 ;;Total ram usage:        7 bytes
  2873 ;; Hardware stack levels used: 1
  2874 ;; Hardware stack levels required when called: 2
  2875 ;; This function calls:
  2876 ;;		Nothing
  2877 ;; This function is called by:
  2878 ;;		_sprintf
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881                           
  2882     11D2                     ___lwdiv:	
  2883                           ;psect for function ___lwdiv
  2884                           
  2885     11D2                     l3775:	
  2886                           ;incstack = 0
  2887                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  2888                           
  2889     11D2  1283               	bcf	3,5	;RP0=0, select bank0
  2890     11D3  1303               	bcf	3,6	;RP1=0, select bank0
  2891     11D4  01A5               	clrf	___lwdiv@quotient
  2892     11D5  01A6               	clrf	___lwdiv@quotient+1
  2893     11D6                     l3777:
  2894     11D6  0820               	movf	___lwdiv@divisor,w
  2895     11D7  0421               	iorwf	___lwdiv@divisor+1,w
  2896     11D8  1903               	btfsc	3,2
  2897     11D9  29DB               	goto	u4971
  2898     11DA  29DC               	goto	u4970
  2899     11DB                     u4971:
  2900     11DB  2A13               	goto	l3797
  2901     11DC                     u4970:
  2902     11DC                     l3779:
  2903     11DC  01A4               	clrf	___lwdiv@counter
  2904     11DD  0AA4               	incf	___lwdiv@counter,f
  2905     11DE  29EA               	goto	l3785
  2906     11DF                     l3781:
  2907     11DF  3001               	movlw	1
  2908     11E0                     u4985:
  2909     11E0  1003               	clrc
  2910     11E1  0DA0               	rlf	___lwdiv@divisor,f
  2911     11E2  0DA1               	rlf	___lwdiv@divisor+1,f
  2912     11E3  3EFF               	addlw	-1
  2913     11E4  1D03               	skipz
  2914     11E5  29E0               	goto	u4985
  2915     11E6                     l3783:
  2916     11E6  3001               	movlw	1
  2917     11E7  00FF               	movwf	btemp+1
  2918     11E8  087F               	movf	btemp+1,w
  2919     11E9  07A4               	addwf	___lwdiv@counter,f
  2920     11EA                     l3785:
  2921     11EA  1FA1               	btfss	___lwdiv@divisor+1,7
  2922     11EB  29ED               	goto	u4991
  2923     11EC  29EE               	goto	u4990
  2924     11ED                     u4991:
  2925     11ED  29DF               	goto	l3781
  2926     11EE                     u4990:
  2927     11EE                     l3787:
  2928     11EE  3001               	movlw	1
  2929     11EF                     u5005:
  2930     11EF  1003               	clrc
  2931     11F0  0DA5               	rlf	___lwdiv@quotient,f
  2932     11F1  0DA6               	rlf	___lwdiv@quotient+1,f
  2933     11F2  3EFF               	addlw	-1
  2934     11F3  1D03               	skipz
  2935     11F4  29EF               	goto	u5005
  2936     11F5  0821               	movf	___lwdiv@divisor+1,w
  2937     11F6  0223               	subwf	___lwdiv@dividend+1,w
  2938     11F7  1D03               	skipz
  2939     11F8  29FB               	goto	u5015
  2940     11F9  0820               	movf	___lwdiv@divisor,w
  2941     11FA  0222               	subwf	___lwdiv@dividend,w
  2942     11FB                     u5015:
  2943     11FB  1C03               	skipc
  2944     11FC  29FE               	goto	u5011
  2945     11FD  29FF               	goto	u5010
  2946     11FE                     u5011:
  2947     11FE  2A06               	goto	l3793
  2948     11FF                     u5010:
  2949     11FF                     l3789:
  2950     11FF  0820               	movf	___lwdiv@divisor,w
  2951     1200  02A2               	subwf	___lwdiv@dividend,f
  2952     1201  0821               	movf	___lwdiv@divisor+1,w
  2953     1202  1C03               	skipc
  2954     1203  03A3               	decf	___lwdiv@dividend+1,f
  2955     1204  02A3               	subwf	___lwdiv@dividend+1,f
  2956     1205                     l3791:
  2957     1205  1425               	bsf	___lwdiv@quotient,0
  2958     1206                     l3793:
  2959     1206  3001               	movlw	1
  2960     1207                     u5025:
  2961     1207  1003               	clrc
  2962     1208  0CA1               	rrf	___lwdiv@divisor+1,f
  2963     1209  0CA0               	rrf	___lwdiv@divisor,f
  2964     120A  3EFF               	addlw	-1
  2965     120B  1D03               	skipz
  2966     120C  2A07               	goto	u5025
  2967     120D                     l3795:
  2968     120D  3001               	movlw	1
  2969     120E  02A4               	subwf	___lwdiv@counter,f
  2970     120F  1D03               	btfss	3,2
  2971     1210  2A12               	goto	u5031
  2972     1211  2A13               	goto	u5030
  2973     1212                     u5031:
  2974     1212  29EE               	goto	l3787
  2975     1213                     u5030:
  2976     1213                     l3797:
  2977     1213  0826               	movf	___lwdiv@quotient+1,w
  2978     1214  00A1               	movwf	?___lwdiv+1
  2979     1215  0825               	movf	___lwdiv@quotient,w
  2980     1216  00A0               	movwf	?___lwdiv
  2981     1217                     l702:
  2982     1217  0008               	return
  2983     1218                     __end_of___lwdiv:
  2984                           
  2985                           	psect	text6
  2986     1036                     __ptext6:	
  2987 ;; *************** function _readEEPROM *****************
  2988 ;; Defined at:
  2989 ;;		line 53 in file "main.c"
  2990 ;; Parameters:    Size  Location     Type
  2991 ;;  address         2    0[BANK0 ] unsigned int 
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;		None
  2994 ;; Return value:  Size  Location     Type
  2995 ;;                  2    0[BANK0 ] unsigned int 
  2996 ;; Registers used:
  2997 ;;		wreg
  2998 ;; Tracked objects:
  2999 ;;		On entry : 0/0
  3000 ;;		On exit  : 0/0
  3001 ;;		Unchanged: 0/0
  3002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3003 ;;      Params:         0       2       0       0       0
  3004 ;;      Locals:         0       0       0       0       0
  3005 ;;      Temps:          0       2       0       0       0
  3006 ;;      Totals:         0       4       0       0       0
  3007 ;;Total ram usage:        4 bytes
  3008 ;; Hardware stack levels used: 1
  3009 ;; Hardware stack levels required when called: 2
  3010 ;; This function calls:
  3011 ;;		Nothing
  3012 ;; This function is called by:
  3013 ;;		_main
  3014 ;; This function uses a non-reentrant model
  3015 ;;
  3016                           
  3017     1036                     _readEEPROM:	
  3018                           ;psect for function _readEEPROM
  3019                           
  3020     1036                     l2507:	
  3021                           ;incstack = 0
  3022                           ; Regs used in _readEEPROM: [wreg]
  3023                           
  3024                           
  3025                           ;main.c: 55:     EEADR = address;
  3026     1036  1283               	bcf	3,5	;RP0=0, select bank0
  3027     1037  1303               	bcf	3,6	;RP1=0, select bank0
  3028     1038  0820               	movf	readEEPROM@address,w
  3029     1039  1283               	bcf	3,5	;RP0=0, select bank2
  3030     103A  1703               	bsf	3,6	;RP1=1, select bank2
  3031     103B  008D               	movwf	13	;volatile
  3032     103C                     l2509:
  3033                           
  3034                           ;main.c: 56:     RD = 1;
  3035     103C  1683               	bsf	3,5	;RP0=1, select bank3
  3036     103D  1703               	bsf	3,6	;RP1=1, select bank3
  3037     103E  140C               	bsf	12,0	;volsfr
  3038                           
  3039                           ;main.c: 57:     return EEDATA;
  3040     103F  1283               	bcf	3,5	;RP0=0, select bank2
  3041     1040  1703               	bsf	3,6	;RP1=1, select bank2
  3042     1041  080C               	movf	12,w	;volatile
  3043     1042  1283               	bcf	3,5	;RP0=0, select bank0
  3044     1043  1303               	bcf	3,6	;RP1=0, select bank0
  3045     1044  00A2               	movwf	??_readEEPROM
  3046     1045  01A3               	clrf	??_readEEPROM+1
  3047     1046  0822               	movf	??_readEEPROM,w
  3048     1047  00A0               	movwf	?_readEEPROM
  3049     1048  0823               	movf	??_readEEPROM+1,w
  3050     1049  00A1               	movwf	?_readEEPROM+1
  3051     104A                     l160:
  3052     104A  0008               	return
  3053     104B                     __end_of_readEEPROM:
  3054                           
  3055                           	psect	text7
  3056     149D                     __ptext7:	
  3057 ;; *************** function ___xxtofl *****************
  3058 ;; Defined at:
  3059 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\xxtofl.c"
  3060 ;; Parameters:    Size  Location     Type
  3061 ;;  sign            1    wreg     unsigned char 
  3062 ;;  val             4    0[BANK0 ] long 
  3063 ;; Auto vars:     Size  Location     Type
  3064 ;;  sign            1    8[BANK0 ] unsigned char 
  3065 ;;  arg             4   10[BANK0 ] unsigned long 
  3066 ;;  exp             1    9[BANK0 ] unsigned char 
  3067 ;; Return value:  Size  Location     Type
  3068 ;;                  4    0[BANK0 ] unsigned char 
  3069 ;; Registers used:
  3070 ;;		wreg, status,2, status,0, btemp+1
  3071 ;; Tracked objects:
  3072 ;;		On entry : 0/0
  3073 ;;		On exit  : 0/0
  3074 ;;		Unchanged: 0/0
  3075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3076 ;;      Params:         0       4       0       0       0
  3077 ;;      Locals:         0       6       0       0       0
  3078 ;;      Temps:          0       4       0       0       0
  3079 ;;      Totals:         0      14       0       0       0
  3080 ;;Total ram usage:       14 bytes
  3081 ;; Hardware stack levels used: 1
  3082 ;; Hardware stack levels required when called: 2
  3083 ;; This function calls:
  3084 ;;		Nothing
  3085 ;; This function is called by:
  3086 ;;		_main
  3087 ;; This function uses a non-reentrant model
  3088 ;;
  3089                           
  3090     149D                     ___xxtofl:	
  3091                           ;psect for function ___xxtofl
  3092                           
  3093                           
  3094                           ;incstack = 0
  3095                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  3096                           ;___xxtofl@sign stored from wreg
  3097     149D  1283               	bcf	3,5	;RP0=0, select bank0
  3098     149E  1303               	bcf	3,6	;RP1=0, select bank0
  3099     149F  00A8               	movwf	___xxtofl@sign
  3100     14A0                     l3063:
  3101     14A0  0828               	movf	___xxtofl@sign,w
  3102     14A1  1903               	btfsc	3,2
  3103     14A2  2CA4               	goto	u3981
  3104     14A3  2CA5               	goto	u3980
  3105     14A4                     u3981:
  3106     14A4  2CB9               	goto	l3069
  3107     14A5                     u3980:
  3108     14A5                     l3065:
  3109     14A5  1FA3               	btfss	___xxtofl@val+3,7
  3110     14A6  2CA8               	goto	u3991
  3111     14A7  2CA9               	goto	u3990
  3112     14A8                     u3991:
  3113     14A8  2CB9               	goto	l3069
  3114     14A9                     u3990:
  3115     14A9                     l3067:
  3116     14A9  0920               	comf	___xxtofl@val,w
  3117     14AA  00AA               	movwf	___xxtofl@arg
  3118     14AB  0921               	comf	___xxtofl@val+1,w
  3119     14AC  00AB               	movwf	___xxtofl@arg+1
  3120     14AD  0922               	comf	___xxtofl@val+2,w
  3121     14AE  00AC               	movwf	___xxtofl@arg+2
  3122     14AF  0923               	comf	___xxtofl@val+3,w
  3123     14B0  00AD               	movwf	___xxtofl@arg+3
  3124     14B1  0AAA               	incf	___xxtofl@arg,f
  3125     14B2  1903               	skipnz
  3126     14B3  0AAB               	incf	___xxtofl@arg+1,f
  3127     14B4  1903               	skipnz
  3128     14B5  0AAC               	incf	___xxtofl@arg+2,f
  3129     14B6  1903               	skipnz
  3130     14B7  0AAD               	incf	___xxtofl@arg+3,f
  3131     14B8  2CC1               	goto	l863
  3132     14B9                     l3069:
  3133     14B9  0823               	movf	___xxtofl@val+3,w
  3134     14BA  00AD               	movwf	___xxtofl@arg+3
  3135     14BB  0822               	movf	___xxtofl@val+2,w
  3136     14BC  00AC               	movwf	___xxtofl@arg+2
  3137     14BD  0821               	movf	___xxtofl@val+1,w
  3138     14BE  00AB               	movwf	___xxtofl@arg+1
  3139     14BF  0820               	movf	___xxtofl@val,w
  3140     14C0  00AA               	movwf	___xxtofl@arg
  3141     14C1                     l863:
  3142     14C1  0823               	movf	___xxtofl@val+3,w
  3143     14C2  0422               	iorwf	___xxtofl@val+2,w
  3144     14C3  0421               	iorwf	___xxtofl@val+1,w
  3145     14C4  0420               	iorwf	___xxtofl@val,w
  3146     14C5  1D03               	skipz
  3147     14C6  2CC8               	goto	u4001
  3148     14C7  2CC9               	goto	u4000
  3149     14C8                     u4001:
  3150     14C8  2CD2               	goto	l3075
  3151     14C9                     u4000:
  3152     14C9                     l3071:
  3153     14C9  3000               	movlw	0
  3154     14CA  00A3               	movwf	?___xxtofl+3
  3155     14CB  3000               	movlw	0
  3156     14CC  00A2               	movwf	?___xxtofl+2
  3157     14CD  3000               	movlw	0
  3158     14CE  00A1               	movwf	?___xxtofl+1
  3159     14CF  3000               	movlw	0
  3160     14D0  00A0               	movwf	?___xxtofl
  3161     14D1  2D56               	goto	l865
  3162     14D2                     l3075:
  3163     14D2  3096               	movlw	150
  3164     14D3  00A9               	movwf	___xxtofl@exp
  3165     14D4  2CE2               	goto	l3081
  3166     14D5                     l3077:
  3167     14D5  3001               	movlw	1
  3168     14D6  00FF               	movwf	btemp+1
  3169     14D7  087F               	movf	btemp+1,w
  3170     14D8  07A9               	addwf	___xxtofl@exp,f
  3171     14D9                     l3079:
  3172     14D9  3001               	movlw	1
  3173     14DA                     u4015:
  3174     14DA  1003               	clrc
  3175     14DB  0CAD               	rrf	___xxtofl@arg+3,f
  3176     14DC  0CAC               	rrf	___xxtofl@arg+2,f
  3177     14DD  0CAB               	rrf	___xxtofl@arg+1,f
  3178     14DE  0CAA               	rrf	___xxtofl@arg,f
  3179     14DF  3EFF               	addlw	-1
  3180     14E0  1D03               	skipz
  3181     14E1  2CDA               	goto	u4015
  3182     14E2                     l3081:
  3183     14E2  30FE               	movlw	254
  3184     14E3  052D               	andwf	___xxtofl@arg+3,w
  3185     14E4  1D03               	btfss	3,2
  3186     14E5  2CE7               	goto	u4021
  3187     14E6  2CE8               	goto	u4020
  3188     14E7                     u4021:
  3189     14E7  2CD5               	goto	l3077
  3190     14E8                     u4020:
  3191     14E8  2D04               	goto	l3089
  3192     14E9                     l3083:
  3193     14E9  3001               	movlw	1
  3194     14EA  00FF               	movwf	btemp+1
  3195     14EB  087F               	movf	btemp+1,w
  3196     14EC  07A9               	addwf	___xxtofl@exp,f
  3197     14ED                     l3085:
  3198     14ED  3001               	movlw	1
  3199     14EE  07AA               	addwf	___xxtofl@arg,f
  3200     14EF  3000               	movlw	0
  3201     14F0  1803               	skipnc
  3202     14F1  3001               	movlw	1
  3203     14F2  07AB               	addwf	___xxtofl@arg+1,f
  3204     14F3  3000               	movlw	0
  3205     14F4  1803               	skipnc
  3206     14F5  3001               	movlw	1
  3207     14F6  07AC               	addwf	___xxtofl@arg+2,f
  3208     14F7  3000               	movlw	0
  3209     14F8  1803               	skipnc
  3210     14F9  3001               	movlw	1
  3211     14FA  07AD               	addwf	___xxtofl@arg+3,f
  3212     14FB                     l3087:
  3213     14FB  3001               	movlw	1
  3214     14FC                     u4035:
  3215     14FC  1003               	clrc
  3216     14FD  0CAD               	rrf	___xxtofl@arg+3,f
  3217     14FE  0CAC               	rrf	___xxtofl@arg+2,f
  3218     14FF  0CAB               	rrf	___xxtofl@arg+1,f
  3219     1500  0CAA               	rrf	___xxtofl@arg,f
  3220     1501  3EFF               	addlw	-1
  3221     1502  1D03               	skipz
  3222     1503  2CFC               	goto	u4035
  3223     1504                     l3089:
  3224     1504  30FF               	movlw	255
  3225     1505  052D               	andwf	___xxtofl@arg+3,w
  3226     1506  1D03               	btfss	3,2
  3227     1507  2D09               	goto	u4041
  3228     1508  2D0A               	goto	u4040
  3229     1509                     u4041:
  3230     1509  2CE9               	goto	l3083
  3231     150A                     u4040:
  3232     150A  2D16               	goto	l3093
  3233     150B                     l3091:
  3234     150B  3001               	movlw	1
  3235     150C  02A9               	subwf	___xxtofl@exp,f
  3236     150D  3001               	movlw	1
  3237     150E  00A4               	movwf	??___xxtofl
  3238     150F                     u4055:
  3239     150F  1003               	clrc
  3240     1510  0DAA               	rlf	___xxtofl@arg,f
  3241     1511  0DAB               	rlf	___xxtofl@arg+1,f
  3242     1512  0DAC               	rlf	___xxtofl@arg+2,f
  3243     1513  0DAD               	rlf	___xxtofl@arg+3,f
  3244     1514  0BA4               	decfsz	??___xxtofl,f
  3245     1515  2D0F               	goto	u4055
  3246     1516                     l3093:
  3247     1516  1BAC               	btfsc	___xxtofl@arg+2,7
  3248     1517  2D19               	goto	u4061
  3249     1518  2D1A               	goto	u4060
  3250     1519                     u4061:
  3251     1519  2D20               	goto	l876
  3252     151A                     u4060:
  3253     151A                     l3095:
  3254     151A  3002               	movlw	2
  3255     151B  0229               	subwf	___xxtofl@exp,w
  3256     151C  1803               	skipnc
  3257     151D  2D1F               	goto	u4071
  3258     151E  2D20               	goto	u4070
  3259     151F                     u4071:
  3260     151F  2D0B               	goto	l3091
  3261     1520                     u4070:
  3262     1520                     l876:
  3263     1520  1829               	btfsc	___xxtofl@exp,0
  3264     1521  2D23               	goto	u4081
  3265     1522  2D24               	goto	u4080
  3266     1523                     u4081:
  3267     1523  2D2C               	goto	l877
  3268     1524                     u4080:
  3269     1524                     l3097:
  3270     1524  30FF               	movlw	255
  3271     1525  05AA               	andwf	___xxtofl@arg,f
  3272     1526  30FF               	movlw	255
  3273     1527  05AB               	andwf	___xxtofl@arg+1,f
  3274     1528  307F               	movlw	127
  3275     1529  05AC               	andwf	___xxtofl@arg+2,f
  3276     152A  30FF               	movlw	255
  3277     152B  05AD               	andwf	___xxtofl@arg+3,f
  3278     152C                     l877:
  3279     152C  1003               	clrc
  3280     152D  0CA9               	rrf	___xxtofl@exp,f
  3281     152E                     l3099:
  3282     152E  0829               	movf	___xxtofl@exp,w
  3283     152F  00A4               	movwf	??___xxtofl
  3284     1530  01A5               	clrf	??___xxtofl+1
  3285     1531  01A6               	clrf	??___xxtofl+2
  3286     1532  01A7               	clrf	??___xxtofl+3
  3287     1533  3018               	movlw	24
  3288     1534                     u4095:
  3289     1534  1003               	clrc
  3290     1535  0DA4               	rlf	??___xxtofl,f
  3291     1536  0DA5               	rlf	??___xxtofl+1,f
  3292     1537  0DA6               	rlf	??___xxtofl+2,f
  3293     1538  0DA7               	rlf	??___xxtofl+3,f
  3294     1539                     u4090:
  3295     1539  3EFF               	addlw	-1
  3296     153A  1D03               	skipz
  3297     153B  2D34               	goto	u4095
  3298     153C  0824               	movf	??___xxtofl,w
  3299     153D  04AA               	iorwf	___xxtofl@arg,f
  3300     153E  0825               	movf	??___xxtofl+1,w
  3301     153F  04AB               	iorwf	___xxtofl@arg+1,f
  3302     1540  0826               	movf	??___xxtofl+2,w
  3303     1541  04AC               	iorwf	___xxtofl@arg+2,f
  3304     1542  0827               	movf	??___xxtofl+3,w
  3305     1543  04AD               	iorwf	___xxtofl@arg+3,f
  3306     1544                     l3101:
  3307     1544  0828               	movf	___xxtofl@sign,w
  3308     1545  1903               	btfsc	3,2
  3309     1546  2D48               	goto	u4101
  3310     1547  2D49               	goto	u4100
  3311     1548                     u4101:
  3312     1548  2D4E               	goto	l3107
  3313     1549                     u4100:
  3314     1549                     l3103:
  3315     1549  1FA3               	btfss	___xxtofl@val+3,7
  3316     154A  2D4C               	goto	u4111
  3317     154B  2D4D               	goto	u4110
  3318     154C                     u4111:
  3319     154C  2D4E               	goto	l3107
  3320     154D                     u4110:
  3321     154D                     l3105:
  3322     154D  17AD               	bsf	___xxtofl@arg+3,7
  3323     154E                     l3107:
  3324     154E  082D               	movf	___xxtofl@arg+3,w
  3325     154F  00A3               	movwf	?___xxtofl+3
  3326     1550  082C               	movf	___xxtofl@arg+2,w
  3327     1551  00A2               	movwf	?___xxtofl+2
  3328     1552  082B               	movf	___xxtofl@arg+1,w
  3329     1553  00A1               	movwf	?___xxtofl+1
  3330     1554  082A               	movf	___xxtofl@arg,w
  3331     1555  00A0               	movwf	?___xxtofl
  3332     1556                     l865:
  3333     1556  0008               	return
  3334     1557                     __end_of___xxtofl:
  3335                           
  3336                           	psect	text8
  3337     1425                     __ptext8:	
  3338 ;; *************** function ___fltol *****************
  3339 ;; Defined at:
  3340 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fltol.c"
  3341 ;; Parameters:    Size  Location     Type
  3342 ;;  f1              4    0[BANK0 ] unsigned char 
  3343 ;; Auto vars:     Size  Location     Type
  3344 ;;  exp1            1    9[BANK0 ] unsigned char 
  3345 ;;  sign1           1    8[BANK0 ] unsigned char 
  3346 ;; Return value:  Size  Location     Type
  3347 ;;                  4    0[BANK0 ] long 
  3348 ;; Registers used:
  3349 ;;		wreg, status,2, status,0, btemp+1
  3350 ;; Tracked objects:
  3351 ;;		On entry : 0/0
  3352 ;;		On exit  : 0/0
  3353 ;;		Unchanged: 0/0
  3354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3355 ;;      Params:         0       4       0       0       0
  3356 ;;      Locals:         0       2       0       0       0
  3357 ;;      Temps:          0       4       0       0       0
  3358 ;;      Totals:         0      10       0       0       0
  3359 ;;Total ram usage:       10 bytes
  3360 ;; Hardware stack levels used: 1
  3361 ;; Hardware stack levels required when called: 2
  3362 ;; This function calls:
  3363 ;;		Nothing
  3364 ;; This function is called by:
  3365 ;;		_main
  3366 ;; This function uses a non-reentrant model
  3367 ;;
  3368                           
  3369     1425                     ___fltol:	
  3370                           ;psect for function ___fltol
  3371                           
  3372     1425                     l2737:	
  3373                           ;incstack = 0
  3374                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  3375                           
  3376     1425  1003               	clrc
  3377     1426  1283               	bcf	3,5	;RP0=0, select bank0
  3378     1427  1303               	bcf	3,6	;RP1=0, select bank0
  3379     1428  0D22               	rlf	___fltol@f1+2,w
  3380     1429  0D23               	rlf	___fltol@f1+3,w
  3381     142A  00A9               	movwf	___fltol@exp1
  3382     142B  0829               	movf	___fltol@exp1,w
  3383     142C  1D03               	btfss	3,2
  3384     142D  2C2F               	goto	u3221
  3385     142E  2C30               	goto	u3220
  3386     142F                     u3221:
  3387     142F  2C39               	goto	l2743
  3388     1430                     u3220:
  3389     1430                     l2739:
  3390     1430  3000               	movlw	0
  3391     1431  00A3               	movwf	?___fltol+3
  3392     1432  3000               	movlw	0
  3393     1433  00A2               	movwf	?___fltol+2
  3394     1434  3000               	movlw	0
  3395     1435  00A1               	movwf	?___fltol+1
  3396     1436  3000               	movlw	0
  3397     1437  00A0               	movwf	?___fltol
  3398     1438  2C9C               	goto	l616
  3399     1439                     l2743:
  3400     1439  0820               	movf	___fltol@f1,w
  3401     143A  00A4               	movwf	??___fltol
  3402     143B  0821               	movf	___fltol@f1+1,w
  3403     143C  00A5               	movwf	??___fltol+1
  3404     143D  0822               	movf	___fltol@f1+2,w
  3405     143E  00A6               	movwf	??___fltol+2
  3406     143F  0823               	movf	___fltol@f1+3,w
  3407     1440  00A7               	movwf	??___fltol+3
  3408     1441  301F               	movlw	31
  3409     1442                     u3235:
  3410     1442  1003               	clrc
  3411     1443  0CA7               	rrf	??___fltol+3,f
  3412     1444  0CA6               	rrf	??___fltol+2,f
  3413     1445  0CA5               	rrf	??___fltol+1,f
  3414     1446  0CA4               	rrf	??___fltol,f
  3415     1447                     u3230:
  3416     1447  3EFF               	addlw	-1
  3417     1448  1D03               	skipz
  3418     1449  2C42               	goto	u3235
  3419     144A  0824               	movf	??___fltol,w
  3420     144B  00A8               	movwf	___fltol@sign1
  3421     144C                     l2745:
  3422     144C  17A2               	bsf	___fltol@f1+2,7
  3423     144D                     l2747:
  3424     144D  30FF               	movlw	255
  3425     144E  05A0               	andwf	___fltol@f1,f
  3426     144F  30FF               	movlw	255
  3427     1450  05A1               	andwf	___fltol@f1+1,f
  3428     1451  30FF               	movlw	255
  3429     1452  05A2               	andwf	___fltol@f1+2,f
  3430     1453  3000               	movlw	0
  3431     1454  05A3               	andwf	___fltol@f1+3,f
  3432     1455                     l2749:
  3433     1455  3096               	movlw	150
  3434     1456  02A9               	subwf	___fltol@exp1,f
  3435     1457                     l2751:
  3436     1457  1FA9               	btfss	___fltol@exp1,7
  3437     1458  2C5A               	goto	u3241
  3438     1459  2C5B               	goto	u3240
  3439     145A                     u3241:
  3440     145A  2C75               	goto	l2763
  3441     145B                     u3240:
  3442     145B                     l2753:
  3443     145B  0829               	movf	___fltol@exp1,w
  3444     145C  3A80               	xorlw	128
  3445     145D  3E97               	addlw	151
  3446     145E  1803               	skipnc
  3447     145F  2C61               	goto	u3251
  3448     1460  2C62               	goto	u3250
  3449     1461                     u3251:
  3450     1461  2C63               	goto	l2759
  3451     1462                     u3250:
  3452     1462  2C30               	goto	l2739
  3453     1463                     l2759:
  3454     1463  3001               	movlw	1
  3455     1464                     u3265:
  3456     1464  1003               	clrc
  3457     1465  0CA3               	rrf	___fltol@f1+3,f
  3458     1466  0CA2               	rrf	___fltol@f1+2,f
  3459     1467  0CA1               	rrf	___fltol@f1+1,f
  3460     1468  0CA0               	rrf	___fltol@f1,f
  3461     1469  3EFF               	addlw	-1
  3462     146A  1D03               	skipz
  3463     146B  2C64               	goto	u3265
  3464     146C                     l2761:
  3465     146C  3001               	movlw	1
  3466     146D  00FF               	movwf	btemp+1
  3467     146E  087F               	movf	btemp+1,w
  3468     146F  07A9               	addwf	___fltol@exp1,f
  3469     1470  1D03               	btfss	3,2
  3470     1471  2C73               	goto	u3271
  3471     1472  2C74               	goto	u3270
  3472     1473                     u3271:
  3473     1473  2C63               	goto	l2759
  3474     1474                     u3270:
  3475     1474  2C8C               	goto	l2771
  3476     1475                     l2763:
  3477     1475  3020               	movlw	32
  3478     1476  0229               	subwf	___fltol@exp1,w
  3479     1477  1C03               	skipc
  3480     1478  2C7A               	goto	u3281
  3481     1479  2C7B               	goto	u3280
  3482     147A                     u3281:
  3483     147A  2C87               	goto	l623
  3484     147B                     u3280:
  3485     147B  2C30               	goto	l2739
  3486     147C                     l2769:
  3487     147C  3001               	movlw	1
  3488     147D  00A4               	movwf	??___fltol
  3489     147E                     u3295:
  3490     147E  1003               	clrc
  3491     147F  0DA0               	rlf	___fltol@f1,f
  3492     1480  0DA1               	rlf	___fltol@f1+1,f
  3493     1481  0DA2               	rlf	___fltol@f1+2,f
  3494     1482  0DA3               	rlf	___fltol@f1+3,f
  3495     1483  0BA4               	decfsz	??___fltol,f
  3496     1484  2C7E               	goto	u3295
  3497     1485  3001               	movlw	1
  3498     1486  02A9               	subwf	___fltol@exp1,f
  3499     1487                     l623:
  3500     1487  0829               	movf	___fltol@exp1,w
  3501     1488  1D03               	btfss	3,2
  3502     1489  2C8B               	goto	u3301
  3503     148A  2C8C               	goto	u3300
  3504     148B                     u3301:
  3505     148B  2C7C               	goto	l2769
  3506     148C                     u3300:
  3507     148C                     l2771:
  3508     148C  0828               	movf	___fltol@sign1,w
  3509     148D  1903               	btfsc	3,2
  3510     148E  2C90               	goto	u3311
  3511     148F  2C91               	goto	u3310
  3512     1490                     u3311:
  3513     1490  2C9C               	goto	l626
  3514     1491                     u3310:
  3515     1491                     l2773:
  3516     1491  09A0               	comf	___fltol@f1,f
  3517     1492  09A1               	comf	___fltol@f1+1,f
  3518     1493  09A2               	comf	___fltol@f1+2,f
  3519     1494  09A3               	comf	___fltol@f1+3,f
  3520     1495  0AA0               	incf	___fltol@f1,f
  3521     1496  1903               	skipnz
  3522     1497  0AA1               	incf	___fltol@f1+1,f
  3523     1498  1903               	skipnz
  3524     1499  0AA2               	incf	___fltol@f1+2,f
  3525     149A  1903               	skipnz
  3526     149B  0AA3               	incf	___fltol@f1+3,f
  3527     149C                     l626:
  3528     149C                     l616:
  3529     149C  0008               	return
  3530     149D                     __end_of___fltol:
  3531                           
  3532                           	psect	text9
  3533     0CBB                     __ptext9:	
  3534 ;; *************** function ___flmul *****************
  3535 ;; Defined at:
  3536 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcmul.c"
  3537 ;; Parameters:    Size  Location     Type
  3538 ;;  b               4   26[BANK0 ] long 
  3539 ;;  a               4   30[BANK0 ] long 
  3540 ;; Auto vars:     Size  Location     Type
  3541 ;;  prod            4   46[BANK0 ] struct .
  3542 ;;  grs             4   40[BANK0 ] unsigned long 
  3543 ;;  temp            2   50[BANK0 ] struct .
  3544 ;;  bexp            1   45[BANK0 ] unsigned char 
  3545 ;;  aexp            1   44[BANK0 ] unsigned char 
  3546 ;;  sign            1   39[BANK0 ] unsigned char 
  3547 ;; Return value:  Size  Location     Type
  3548 ;;                  4   26[BANK0 ] unsigned char 
  3549 ;; Registers used:
  3550 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3551 ;; Tracked objects:
  3552 ;;		On entry : 0/0
  3553 ;;		On exit  : 0/0
  3554 ;;		Unchanged: 0/0
  3555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3556 ;;      Params:         0       8       0       0       0
  3557 ;;      Locals:         0      13       0       0       0
  3558 ;;      Temps:          0       5       0       0       0
  3559 ;;      Totals:         0      26       0       0       0
  3560 ;;Total ram usage:       26 bytes
  3561 ;; Hardware stack levels used: 1
  3562 ;; Hardware stack levels required when called: 3
  3563 ;; This function calls:
  3564 ;;		__Umul8_16
  3565 ;; This function is called by:
  3566 ;;		_main
  3567 ;; This function uses a non-reentrant model
  3568 ;;
  3569                           
  3570     0CBB                     ___flmul:	
  3571                           ;psect for function ___flmul
  3572                           
  3573     0CBB                     l2921:	
  3574                           ;incstack = 0
  3575                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3576                           
  3577     0CBB  1283               	bcf	3,5	;RP0=0, select bank0
  3578     0CBC  1303               	bcf	3,6	;RP1=0, select bank0
  3579     0CBD  083D               	movf	___flmul@b+3,w
  3580     0CBE  3980               	andlw	128
  3581     0CBF  00C7               	movwf	___flmul@sign
  3582     0CC0                     l2923:
  3583     0CC0  083D               	movf	___flmul@b+3,w
  3584     0CC1  00C2               	movwf	??___flmul
  3585     0CC2  0742               	addwf	??___flmul,w
  3586     0CC3  00CD               	movwf	___flmul@bexp
  3587     0CC4                     l2925:
  3588     0CC4  1FBC               	btfss	___flmul@b+2,7
  3589     0CC5  2CC7               	goto	u3611
  3590     0CC6  2CC8               	goto	u3610
  3591     0CC7                     u3611:
  3592     0CC7  2CC9               	goto	l2929
  3593     0CC8                     u3610:
  3594     0CC8                     l2927:
  3595     0CC8  144D               	bsf	___flmul@bexp,0
  3596     0CC9                     l2929:
  3597     0CC9  084D               	movf	___flmul@bexp,w
  3598     0CCA  1903               	btfsc	3,2
  3599     0CCB  2CCD               	goto	u3621
  3600     0CCC  2CCE               	goto	u3620
  3601     0CCD                     u3621:
  3602     0CCD  2CDD               	goto	l2937
  3603     0CCE                     u3620:
  3604     0CCE                     l2931:
  3605     0CCE  0A4D               	incf	___flmul@bexp,w
  3606     0CCF  1D03               	btfss	3,2
  3607     0CD0  2CD2               	goto	u3631
  3608     0CD1  2CD3               	goto	u3630
  3609     0CD2                     u3631:
  3610     0CD2  2CDB               	goto	l2935
  3611     0CD3                     u3630:
  3612     0CD3                     l2933:
  3613     0CD3  3000               	movlw	0
  3614     0CD4  00BD               	movwf	___flmul@b+3
  3615     0CD5  3000               	movlw	0
  3616     0CD6  00BC               	movwf	___flmul@b+2
  3617     0CD7  3000               	movlw	0
  3618     0CD8  00BB               	movwf	___flmul@b+1
  3619     0CD9  3000               	movlw	0
  3620     0CDA  00BA               	movwf	___flmul@b
  3621     0CDB                     l2935:
  3622     0CDB  17BC               	bsf	___flmul@b+2,7
  3623     0CDC  2CE5               	goto	l2939
  3624     0CDD                     l2937:
  3625     0CDD  3000               	movlw	0
  3626     0CDE  00BD               	movwf	___flmul@b+3
  3627     0CDF  3000               	movlw	0
  3628     0CE0  00BC               	movwf	___flmul@b+2
  3629     0CE1  3000               	movlw	0
  3630     0CE2  00BB               	movwf	___flmul@b+1
  3631     0CE3  3000               	movlw	0
  3632     0CE4  00BA               	movwf	___flmul@b
  3633     0CE5                     l2939:
  3634     0CE5  0841               	movf	___flmul@a+3,w
  3635     0CE6  3980               	andlw	128
  3636     0CE7  00FF               	movwf	btemp+1
  3637     0CE8  087F               	movf	btemp+1,w
  3638     0CE9  06C7               	xorwf	___flmul@sign,f
  3639     0CEA                     l2941:
  3640     0CEA  0841               	movf	___flmul@a+3,w
  3641     0CEB  00C2               	movwf	??___flmul
  3642     0CEC  0742               	addwf	??___flmul,w
  3643     0CED  00CC               	movwf	___flmul@aexp
  3644     0CEE                     l2943:
  3645     0CEE  1FC0               	btfss	___flmul@a+2,7
  3646     0CEF  2CF1               	goto	u3641
  3647     0CF0  2CF2               	goto	u3640
  3648     0CF1                     u3641:
  3649     0CF1  2CF3               	goto	l2947
  3650     0CF2                     u3640:
  3651     0CF2                     l2945:
  3652     0CF2  144C               	bsf	___flmul@aexp,0
  3653     0CF3                     l2947:
  3654     0CF3  084C               	movf	___flmul@aexp,w
  3655     0CF4  1903               	btfsc	3,2
  3656     0CF5  2CF7               	goto	u3651
  3657     0CF6  2CF8               	goto	u3650
  3658     0CF7                     u3651:
  3659     0CF7  2D07               	goto	l2955
  3660     0CF8                     u3650:
  3661     0CF8                     l2949:
  3662     0CF8  0A4C               	incf	___flmul@aexp,w
  3663     0CF9  1D03               	btfss	3,2
  3664     0CFA  2CFC               	goto	u3661
  3665     0CFB  2CFD               	goto	u3660
  3666     0CFC                     u3661:
  3667     0CFC  2D05               	goto	l2953
  3668     0CFD                     u3660:
  3669     0CFD                     l2951:
  3670     0CFD  3000               	movlw	0
  3671     0CFE  00C1               	movwf	___flmul@a+3
  3672     0CFF  3000               	movlw	0
  3673     0D00  00C0               	movwf	___flmul@a+2
  3674     0D01  3000               	movlw	0
  3675     0D02  00BF               	movwf	___flmul@a+1
  3676     0D03  3000               	movlw	0
  3677     0D04  00BE               	movwf	___flmul@a
  3678     0D05                     l2953:
  3679     0D05  17C0               	bsf	___flmul@a+2,7
  3680     0D06  2D0F               	goto	l2957
  3681     0D07                     l2955:
  3682     0D07  3000               	movlw	0
  3683     0D08  00C1               	movwf	___flmul@a+3
  3684     0D09  3000               	movlw	0
  3685     0D0A  00C0               	movwf	___flmul@a+2
  3686     0D0B  3000               	movlw	0
  3687     0D0C  00BF               	movwf	___flmul@a+1
  3688     0D0D  3000               	movlw	0
  3689     0D0E  00BE               	movwf	___flmul@a
  3690     0D0F                     l2957:
  3691     0D0F  084C               	movf	___flmul@aexp,w
  3692     0D10  1903               	btfsc	3,2
  3693     0D11  2D13               	goto	u3671
  3694     0D12  2D14               	goto	u3670
  3695     0D13                     u3671:
  3696     0D13  2D19               	goto	l2961
  3697     0D14                     u3670:
  3698     0D14                     l2959:
  3699     0D14  084D               	movf	___flmul@bexp,w
  3700     0D15  1D03               	btfss	3,2
  3701     0D16  2D18               	goto	u3681
  3702     0D17  2D19               	goto	u3680
  3703     0D18                     u3681:
  3704     0D18  2D22               	goto	l2965
  3705     0D19                     u3680:
  3706     0D19                     l2961:
  3707     0D19  3000               	movlw	0
  3708     0D1A  00BD               	movwf	?___flmul+3
  3709     0D1B  3000               	movlw	0
  3710     0D1C  00BC               	movwf	?___flmul+2
  3711     0D1D  3000               	movlw	0
  3712     0D1E  00BB               	movwf	?___flmul+1
  3713     0D1F  3000               	movlw	0
  3714     0D20  00BA               	movwf	?___flmul
  3715     0D21  2FFF               	goto	l819
  3716     0D22                     l2965:
  3717     0D22  083A               	movf	___flmul@b,w
  3718     0D23  00A0               	movwf	__Umul8_16@multiplicand
  3719     0D24  0840               	movf	___flmul@a+2,w
  3720     0D25  160A  118A  20A8  120A  158A  	fcall	__Umul8_16
  3721     0D2A  1283               	bcf	3,5	;RP0=0, select bank0
  3722     0D2B  1303               	bcf	3,6	;RP1=0, select bank0
  3723     0D2C  0821               	movf	?__Umul8_16+1,w
  3724     0D2D  00D3               	movwf	___flmul@temp+1
  3725     0D2E  0820               	movf	?__Umul8_16,w
  3726     0D2F  00D2               	movwf	___flmul@temp
  3727     0D30                     l2967:
  3728     0D30  0852               	movf	___flmul@temp,w
  3729     0D31  00C2               	movwf	??___flmul
  3730     0D32  01C3               	clrf	??___flmul+1
  3731     0D33  01C4               	clrf	??___flmul+2
  3732     0D34  01C5               	clrf	??___flmul+3
  3733     0D35  0845               	movf	??___flmul+3,w
  3734     0D36  00CB               	movwf	___flmul@grs+3
  3735     0D37  0844               	movf	??___flmul+2,w
  3736     0D38  00CA               	movwf	___flmul@grs+2
  3737     0D39  0843               	movf	??___flmul+1,w
  3738     0D3A  00C9               	movwf	___flmul@grs+1
  3739     0D3B  0842               	movf	??___flmul,w
  3740     0D3C  00C8               	movwf	___flmul@grs
  3741     0D3D                     l2969:
  3742     0D3D  0853               	movf	___flmul@temp+1,w
  3743     0D3E  00C2               	movwf	??___flmul
  3744     0D3F  01C3               	clrf	??___flmul+1
  3745     0D40  01C4               	clrf	??___flmul+2
  3746     0D41  01C5               	clrf	??___flmul+3
  3747     0D42  0845               	movf	??___flmul+3,w
  3748     0D43  00D1               	movwf	___flmul@prod+3
  3749     0D44  0844               	movf	??___flmul+2,w
  3750     0D45  00D0               	movwf	___flmul@prod+2
  3751     0D46  0843               	movf	??___flmul+1,w
  3752     0D47  00CF               	movwf	___flmul@prod+1
  3753     0D48  0842               	movf	??___flmul,w
  3754     0D49  00CE               	movwf	___flmul@prod
  3755     0D4A  083B               	movf	___flmul@b+1,w
  3756     0D4B  00A0               	movwf	__Umul8_16@multiplicand
  3757     0D4C  083F               	movf	___flmul@a+1,w
  3758     0D4D  160A  118A  20A8  120A  158A  	fcall	__Umul8_16
  3759     0D52  1283               	bcf	3,5	;RP0=0, select bank0
  3760     0D53  1303               	bcf	3,6	;RP1=0, select bank0
  3761     0D54  0821               	movf	?__Umul8_16+1,w
  3762     0D55  00D3               	movwf	___flmul@temp+1
  3763     0D56  0820               	movf	?__Umul8_16,w
  3764     0D57  00D2               	movwf	___flmul@temp
  3765     0D58                     l2971:
  3766     0D58  0852               	movf	___flmul@temp,w
  3767     0D59  00C2               	movwf	??___flmul
  3768     0D5A  01C3               	clrf	??___flmul+1
  3769     0D5B  01C4               	clrf	??___flmul+2
  3770     0D5C  01C5               	clrf	??___flmul+3
  3771     0D5D  0842               	movf	??___flmul,w
  3772     0D5E  07C8               	addwf	___flmul@grs,f
  3773     0D5F  0843               	movf	??___flmul+1,w
  3774     0D60  1103               	clrz
  3775     0D61  1803               	skipnc
  3776     0D62  3E01               	addlw	1
  3777     0D63  1903               	skipnz
  3778     0D64  2D66               	goto	u3691
  3779     0D65  07C9               	addwf	___flmul@grs+1,f
  3780     0D66                     u3691:
  3781     0D66  0844               	movf	??___flmul+2,w
  3782     0D67  1103               	clrz
  3783     0D68  1803               	skipnc
  3784     0D69  3E01               	addlw	1
  3785     0D6A  1903               	skipnz
  3786     0D6B  2D6D               	goto	u3692
  3787     0D6C  07CA               	addwf	___flmul@grs+2,f
  3788     0D6D                     u3692:
  3789     0D6D  0845               	movf	??___flmul+3,w
  3790     0D6E  1103               	clrz
  3791     0D6F  1803               	skipnc
  3792     0D70  3E01               	addlw	1
  3793     0D71  1903               	skipnz
  3794     0D72  2D74               	goto	u3693
  3795     0D73  07CB               	addwf	___flmul@grs+3,f
  3796     0D74                     u3693:
  3797     0D74                     l2973:
  3798     0D74  0853               	movf	___flmul@temp+1,w
  3799     0D75  00C2               	movwf	??___flmul
  3800     0D76  01C3               	clrf	??___flmul+1
  3801     0D77  01C4               	clrf	??___flmul+2
  3802     0D78  01C5               	clrf	??___flmul+3
  3803     0D79  0842               	movf	??___flmul,w
  3804     0D7A  07CE               	addwf	___flmul@prod,f
  3805     0D7B  0843               	movf	??___flmul+1,w
  3806     0D7C  1103               	clrz
  3807     0D7D  1803               	skipnc
  3808     0D7E  3E01               	addlw	1
  3809     0D7F  1903               	skipnz
  3810     0D80  2D82               	goto	u3701
  3811     0D81  07CF               	addwf	___flmul@prod+1,f
  3812     0D82                     u3701:
  3813     0D82  0844               	movf	??___flmul+2,w
  3814     0D83  1103               	clrz
  3815     0D84  1803               	skipnc
  3816     0D85  3E01               	addlw	1
  3817     0D86  1903               	skipnz
  3818     0D87  2D89               	goto	u3702
  3819     0D88  07D0               	addwf	___flmul@prod+2,f
  3820     0D89                     u3702:
  3821     0D89  0845               	movf	??___flmul+3,w
  3822     0D8A  1103               	clrz
  3823     0D8B  1803               	skipnc
  3824     0D8C  3E01               	addlw	1
  3825     0D8D  1903               	skipnz
  3826     0D8E  2D90               	goto	u3703
  3827     0D8F  07D1               	addwf	___flmul@prod+3,f
  3828     0D90                     u3703:
  3829     0D90  083C               	movf	___flmul@b+2,w
  3830     0D91  00A0               	movwf	__Umul8_16@multiplicand
  3831     0D92  083E               	movf	___flmul@a,w
  3832     0D93  160A  118A  20A8  120A  158A  	fcall	__Umul8_16
  3833     0D98  1283               	bcf	3,5	;RP0=0, select bank0
  3834     0D99  1303               	bcf	3,6	;RP1=0, select bank0
  3835     0D9A  0821               	movf	?__Umul8_16+1,w
  3836     0D9B  00D3               	movwf	___flmul@temp+1
  3837     0D9C  0820               	movf	?__Umul8_16,w
  3838     0D9D  00D2               	movwf	___flmul@temp
  3839     0D9E                     l2975:
  3840     0D9E  0852               	movf	___flmul@temp,w
  3841     0D9F  00C2               	movwf	??___flmul
  3842     0DA0  01C3               	clrf	??___flmul+1
  3843     0DA1  01C4               	clrf	??___flmul+2
  3844     0DA2  01C5               	clrf	??___flmul+3
  3845     0DA3  0842               	movf	??___flmul,w
  3846     0DA4  07C8               	addwf	___flmul@grs,f
  3847     0DA5  0843               	movf	??___flmul+1,w
  3848     0DA6  1103               	clrz
  3849     0DA7  1803               	skipnc
  3850     0DA8  3E01               	addlw	1
  3851     0DA9  1903               	skipnz
  3852     0DAA  2DAC               	goto	u3711
  3853     0DAB  07C9               	addwf	___flmul@grs+1,f
  3854     0DAC                     u3711:
  3855     0DAC  0844               	movf	??___flmul+2,w
  3856     0DAD  1103               	clrz
  3857     0DAE  1803               	skipnc
  3858     0DAF  3E01               	addlw	1
  3859     0DB0  1903               	skipnz
  3860     0DB1  2DB3               	goto	u3712
  3861     0DB2  07CA               	addwf	___flmul@grs+2,f
  3862     0DB3                     u3712:
  3863     0DB3  0845               	movf	??___flmul+3,w
  3864     0DB4  1103               	clrz
  3865     0DB5  1803               	skipnc
  3866     0DB6  3E01               	addlw	1
  3867     0DB7  1903               	skipnz
  3868     0DB8  2DBA               	goto	u3713
  3869     0DB9  07CB               	addwf	___flmul@grs+3,f
  3870     0DBA                     u3713:
  3871     0DBA                     l2977:
  3872     0DBA  0853               	movf	___flmul@temp+1,w
  3873     0DBB  00C2               	movwf	??___flmul
  3874     0DBC  01C3               	clrf	??___flmul+1
  3875     0DBD  01C4               	clrf	??___flmul+2
  3876     0DBE  01C5               	clrf	??___flmul+3
  3877     0DBF  0842               	movf	??___flmul,w
  3878     0DC0  07CE               	addwf	___flmul@prod,f
  3879     0DC1  0843               	movf	??___flmul+1,w
  3880     0DC2  1103               	clrz
  3881     0DC3  1803               	skipnc
  3882     0DC4  3E01               	addlw	1
  3883     0DC5  1903               	skipnz
  3884     0DC6  2DC8               	goto	u3721
  3885     0DC7  07CF               	addwf	___flmul@prod+1,f
  3886     0DC8                     u3721:
  3887     0DC8  0844               	movf	??___flmul+2,w
  3888     0DC9  1103               	clrz
  3889     0DCA  1803               	skipnc
  3890     0DCB  3E01               	addlw	1
  3891     0DCC  1903               	skipnz
  3892     0DCD  2DCF               	goto	u3722
  3893     0DCE  07D0               	addwf	___flmul@prod+2,f
  3894     0DCF                     u3722:
  3895     0DCF  0845               	movf	??___flmul+3,w
  3896     0DD0  1103               	clrz
  3897     0DD1  1803               	skipnc
  3898     0DD2  3E01               	addlw	1
  3899     0DD3  1903               	skipnz
  3900     0DD4  2DD6               	goto	u3723
  3901     0DD5  07D1               	addwf	___flmul@prod+3,f
  3902     0DD6                     u3723:
  3903     0DD6                     l2979:
  3904     0DD6  3008               	movlw	8
  3905     0DD7  00C2               	movwf	??___flmul
  3906     0DD8                     u3735:
  3907     0DD8  1003               	clrc
  3908     0DD9  0DC8               	rlf	___flmul@grs,f
  3909     0DDA  0DC9               	rlf	___flmul@grs+1,f
  3910     0DDB  0DCA               	rlf	___flmul@grs+2,f
  3911     0DDC  0DCB               	rlf	___flmul@grs+3,f
  3912     0DDD  0BC2               	decfsz	??___flmul,f
  3913     0DDE  2DD8               	goto	u3735
  3914     0DDF                     l2981:
  3915     0DDF  083B               	movf	___flmul@b+1,w
  3916     0DE0  00A0               	movwf	__Umul8_16@multiplicand
  3917     0DE1  083E               	movf	___flmul@a,w
  3918     0DE2  160A  118A  20A8  120A  158A  	fcall	__Umul8_16
  3919     0DE7  1283               	bcf	3,5	;RP0=0, select bank0
  3920     0DE8  1303               	bcf	3,6	;RP1=0, select bank0
  3921     0DE9  0821               	movf	?__Umul8_16+1,w
  3922     0DEA  00D3               	movwf	___flmul@temp+1
  3923     0DEB  0820               	movf	?__Umul8_16,w
  3924     0DEC  00D2               	movwf	___flmul@temp
  3925     0DED                     l2983:
  3926     0DED  0852               	movf	___flmul@temp,w
  3927     0DEE  00C2               	movwf	??___flmul
  3928     0DEF  0853               	movf	___flmul@temp+1,w
  3929     0DF0  00C3               	movwf	??___flmul+1
  3930     0DF1  01C4               	clrf	??___flmul+2
  3931     0DF2  01C5               	clrf	??___flmul+3
  3932     0DF3  0842               	movf	??___flmul,w
  3933     0DF4  07C8               	addwf	___flmul@grs,f
  3934     0DF5  0843               	movf	??___flmul+1,w
  3935     0DF6  1103               	clrz
  3936     0DF7  1803               	skipnc
  3937     0DF8  3E01               	addlw	1
  3938     0DF9  1903               	skipnz
  3939     0DFA  2DFC               	goto	u3741
  3940     0DFB  07C9               	addwf	___flmul@grs+1,f
  3941     0DFC                     u3741:
  3942     0DFC  0844               	movf	??___flmul+2,w
  3943     0DFD  1103               	clrz
  3944     0DFE  1803               	skipnc
  3945     0DFF  3E01               	addlw	1
  3946     0E00  1903               	skipnz
  3947     0E01  2E03               	goto	u3742
  3948     0E02  07CA               	addwf	___flmul@grs+2,f
  3949     0E03                     u3742:
  3950     0E03  0845               	movf	??___flmul+3,w
  3951     0E04  1103               	clrz
  3952     0E05  1803               	skipnc
  3953     0E06  3E01               	addlw	1
  3954     0E07  1903               	skipnz
  3955     0E08  2E0A               	goto	u3743
  3956     0E09  07CB               	addwf	___flmul@grs+3,f
  3957     0E0A                     u3743:
  3958     0E0A                     l2985:
  3959     0E0A  083A               	movf	___flmul@b,w
  3960     0E0B  00A0               	movwf	__Umul8_16@multiplicand
  3961     0E0C  083F               	movf	___flmul@a+1,w
  3962     0E0D  160A  118A  20A8  120A  158A  	fcall	__Umul8_16
  3963     0E12  1283               	bcf	3,5	;RP0=0, select bank0
  3964     0E13  1303               	bcf	3,6	;RP1=0, select bank0
  3965     0E14  0821               	movf	?__Umul8_16+1,w
  3966     0E15  00D3               	movwf	___flmul@temp+1
  3967     0E16  0820               	movf	?__Umul8_16,w
  3968     0E17  00D2               	movwf	___flmul@temp
  3969     0E18                     l2987:
  3970     0E18  0852               	movf	___flmul@temp,w
  3971     0E19  00C2               	movwf	??___flmul
  3972     0E1A  0853               	movf	___flmul@temp+1,w
  3973     0E1B  00C3               	movwf	??___flmul+1
  3974     0E1C  01C4               	clrf	??___flmul+2
  3975     0E1D  01C5               	clrf	??___flmul+3
  3976     0E1E  0842               	movf	??___flmul,w
  3977     0E1F  07C8               	addwf	___flmul@grs,f
  3978     0E20  0843               	movf	??___flmul+1,w
  3979     0E21  1103               	clrz
  3980     0E22  1803               	skipnc
  3981     0E23  3E01               	addlw	1
  3982     0E24  1903               	skipnz
  3983     0E25  2E27               	goto	u3751
  3984     0E26  07C9               	addwf	___flmul@grs+1,f
  3985     0E27                     u3751:
  3986     0E27  0844               	movf	??___flmul+2,w
  3987     0E28  1103               	clrz
  3988     0E29  1803               	skipnc
  3989     0E2A  3E01               	addlw	1
  3990     0E2B  1903               	skipnz
  3991     0E2C  2E2E               	goto	u3752
  3992     0E2D  07CA               	addwf	___flmul@grs+2,f
  3993     0E2E                     u3752:
  3994     0E2E  0845               	movf	??___flmul+3,w
  3995     0E2F  1103               	clrz
  3996     0E30  1803               	skipnc
  3997     0E31  3E01               	addlw	1
  3998     0E32  1903               	skipnz
  3999     0E33  2E35               	goto	u3753
  4000     0E34  07CB               	addwf	___flmul@grs+3,f
  4001     0E35                     u3753:
  4002     0E35                     l2989:
  4003     0E35  3008               	movlw	8
  4004     0E36  00C2               	movwf	??___flmul
  4005     0E37                     u3765:
  4006     0E37  1003               	clrc
  4007     0E38  0DC8               	rlf	___flmul@grs,f
  4008     0E39  0DC9               	rlf	___flmul@grs+1,f
  4009     0E3A  0DCA               	rlf	___flmul@grs+2,f
  4010     0E3B  0DCB               	rlf	___flmul@grs+3,f
  4011     0E3C  0BC2               	decfsz	??___flmul,f
  4012     0E3D  2E37               	goto	u3765
  4013     0E3E  083A               	movf	___flmul@b,w
  4014     0E3F  00A0               	movwf	__Umul8_16@multiplicand
  4015     0E40  083E               	movf	___flmul@a,w
  4016     0E41  160A  118A  20A8  120A  158A  	fcall	__Umul8_16
  4017     0E46  1283               	bcf	3,5	;RP0=0, select bank0
  4018     0E47  1303               	bcf	3,6	;RP1=0, select bank0
  4019     0E48  0821               	movf	?__Umul8_16+1,w
  4020     0E49  00D3               	movwf	___flmul@temp+1
  4021     0E4A  0820               	movf	?__Umul8_16,w
  4022     0E4B  00D2               	movwf	___flmul@temp
  4023     0E4C                     l2991:
  4024     0E4C  0852               	movf	___flmul@temp,w
  4025     0E4D  00C2               	movwf	??___flmul
  4026     0E4E  0853               	movf	___flmul@temp+1,w
  4027     0E4F  00C3               	movwf	??___flmul+1
  4028     0E50  01C4               	clrf	??___flmul+2
  4029     0E51  01C5               	clrf	??___flmul+3
  4030     0E52  0842               	movf	??___flmul,w
  4031     0E53  07C8               	addwf	___flmul@grs,f
  4032     0E54  0843               	movf	??___flmul+1,w
  4033     0E55  1103               	clrz
  4034     0E56  1803               	skipnc
  4035     0E57  3E01               	addlw	1
  4036     0E58  1903               	skipnz
  4037     0E59  2E5B               	goto	u3771
  4038     0E5A  07C9               	addwf	___flmul@grs+1,f
  4039     0E5B                     u3771:
  4040     0E5B  0844               	movf	??___flmul+2,w
  4041     0E5C  1103               	clrz
  4042     0E5D  1803               	skipnc
  4043     0E5E  3E01               	addlw	1
  4044     0E5F  1903               	skipnz
  4045     0E60  2E62               	goto	u3772
  4046     0E61  07CA               	addwf	___flmul@grs+2,f
  4047     0E62                     u3772:
  4048     0E62  0845               	movf	??___flmul+3,w
  4049     0E63  1103               	clrz
  4050     0E64  1803               	skipnc
  4051     0E65  3E01               	addlw	1
  4052     0E66  1903               	skipnz
  4053     0E67  2E69               	goto	u3773
  4054     0E68  07CB               	addwf	___flmul@grs+3,f
  4055     0E69                     u3773:
  4056     0E69                     l2993:
  4057     0E69  083B               	movf	___flmul@b+1,w
  4058     0E6A  00A0               	movwf	__Umul8_16@multiplicand
  4059     0E6B  0840               	movf	___flmul@a+2,w
  4060     0E6C  160A  118A  20A8  120A  158A  	fcall	__Umul8_16
  4061     0E71  1283               	bcf	3,5	;RP0=0, select bank0
  4062     0E72  1303               	bcf	3,6	;RP1=0, select bank0
  4063     0E73  0821               	movf	?__Umul8_16+1,w
  4064     0E74  00D3               	movwf	___flmul@temp+1
  4065     0E75  0820               	movf	?__Umul8_16,w
  4066     0E76  00D2               	movwf	___flmul@temp
  4067     0E77  0852               	movf	___flmul@temp,w
  4068     0E78  00C2               	movwf	??___flmul
  4069     0E79  0853               	movf	___flmul@temp+1,w
  4070     0E7A  00C3               	movwf	??___flmul+1
  4071     0E7B  01C4               	clrf	??___flmul+2
  4072     0E7C  01C5               	clrf	??___flmul+3
  4073     0E7D  0842               	movf	??___flmul,w
  4074     0E7E  07CE               	addwf	___flmul@prod,f
  4075     0E7F  0843               	movf	??___flmul+1,w
  4076     0E80  1103               	clrz
  4077     0E81  1803               	skipnc
  4078     0E82  3E01               	addlw	1
  4079     0E83  1903               	skipnz
  4080     0E84  2E86               	goto	u3781
  4081     0E85  07CF               	addwf	___flmul@prod+1,f
  4082     0E86                     u3781:
  4083     0E86  0844               	movf	??___flmul+2,w
  4084     0E87  1103               	clrz
  4085     0E88  1803               	skipnc
  4086     0E89  3E01               	addlw	1
  4087     0E8A  1903               	skipnz
  4088     0E8B  2E8D               	goto	u3782
  4089     0E8C  07D0               	addwf	___flmul@prod+2,f
  4090     0E8D                     u3782:
  4091     0E8D  0845               	movf	??___flmul+3,w
  4092     0E8E  1103               	clrz
  4093     0E8F  1803               	skipnc
  4094     0E90  3E01               	addlw	1
  4095     0E91  1903               	skipnz
  4096     0E92  2E94               	goto	u3783
  4097     0E93  07D1               	addwf	___flmul@prod+3,f
  4098     0E94                     u3783:
  4099     0E94                     l2995:
  4100     0E94  083C               	movf	___flmul@b+2,w
  4101     0E95  00A0               	movwf	__Umul8_16@multiplicand
  4102     0E96  083F               	movf	___flmul@a+1,w
  4103     0E97  160A  118A  20A8  120A  158A  	fcall	__Umul8_16
  4104     0E9C  1283               	bcf	3,5	;RP0=0, select bank0
  4105     0E9D  1303               	bcf	3,6	;RP1=0, select bank0
  4106     0E9E  0821               	movf	?__Umul8_16+1,w
  4107     0E9F  00D3               	movwf	___flmul@temp+1
  4108     0EA0  0820               	movf	?__Umul8_16,w
  4109     0EA1  00D2               	movwf	___flmul@temp
  4110     0EA2                     l2997:
  4111     0EA2  0852               	movf	___flmul@temp,w
  4112     0EA3  00C2               	movwf	??___flmul
  4113     0EA4  0853               	movf	___flmul@temp+1,w
  4114     0EA5  00C3               	movwf	??___flmul+1
  4115     0EA6  01C4               	clrf	??___flmul+2
  4116     0EA7  01C5               	clrf	??___flmul+3
  4117     0EA8  0842               	movf	??___flmul,w
  4118     0EA9  07CE               	addwf	___flmul@prod,f
  4119     0EAA  0843               	movf	??___flmul+1,w
  4120     0EAB  1103               	clrz
  4121     0EAC  1803               	skipnc
  4122     0EAD  3E01               	addlw	1
  4123     0EAE  1903               	skipnz
  4124     0EAF  2EB1               	goto	u3791
  4125     0EB0  07CF               	addwf	___flmul@prod+1,f
  4126     0EB1                     u3791:
  4127     0EB1  0844               	movf	??___flmul+2,w
  4128     0EB2  1103               	clrz
  4129     0EB3  1803               	skipnc
  4130     0EB4  3E01               	addlw	1
  4131     0EB5  1903               	skipnz
  4132     0EB6  2EB8               	goto	u3792
  4133     0EB7  07D0               	addwf	___flmul@prod+2,f
  4134     0EB8                     u3792:
  4135     0EB8  0845               	movf	??___flmul+3,w
  4136     0EB9  1103               	clrz
  4137     0EBA  1803               	skipnc
  4138     0EBB  3E01               	addlw	1
  4139     0EBC  1903               	skipnz
  4140     0EBD  2EBF               	goto	u3793
  4141     0EBE  07D1               	addwf	___flmul@prod+3,f
  4142     0EBF                     u3793:
  4143     0EBF  083C               	movf	___flmul@b+2,w
  4144     0EC0  00A0               	movwf	__Umul8_16@multiplicand
  4145     0EC1  0840               	movf	___flmul@a+2,w
  4146     0EC2  160A  118A  20A8  120A  158A  	fcall	__Umul8_16
  4147     0EC7  1283               	bcf	3,5	;RP0=0, select bank0
  4148     0EC8  1303               	bcf	3,6	;RP1=0, select bank0
  4149     0EC9  0821               	movf	?__Umul8_16+1,w
  4150     0ECA  00D3               	movwf	___flmul@temp+1
  4151     0ECB  0820               	movf	?__Umul8_16,w
  4152     0ECC  00D2               	movwf	___flmul@temp
  4153     0ECD                     l2999:
  4154     0ECD  0852               	movf	___flmul@temp,w
  4155     0ECE  00C2               	movwf	??___flmul
  4156     0ECF  0853               	movf	___flmul@temp+1,w
  4157     0ED0  00C3               	movwf	??___flmul+1
  4158     0ED1  01C4               	clrf	??___flmul+2
  4159     0ED2  01C5               	clrf	??___flmul+3
  4160     0ED3  3008               	movlw	8
  4161     0ED4                     u3805:
  4162     0ED4  1003               	clrc
  4163     0ED5  0DC2               	rlf	??___flmul,f
  4164     0ED6  0DC3               	rlf	??___flmul+1,f
  4165     0ED7  0DC4               	rlf	??___flmul+2,f
  4166     0ED8  0DC5               	rlf	??___flmul+3,f
  4167     0ED9                     u3800:
  4168     0ED9  3EFF               	addlw	-1
  4169     0EDA  1D03               	skipz
  4170     0EDB  2ED4               	goto	u3805
  4171     0EDC  0842               	movf	??___flmul,w
  4172     0EDD  07CE               	addwf	___flmul@prod,f
  4173     0EDE  0843               	movf	??___flmul+1,w
  4174     0EDF  1103               	clrz
  4175     0EE0  1803               	skipnc
  4176     0EE1  3E01               	addlw	1
  4177     0EE2  1903               	skipnz
  4178     0EE3  2EE5               	goto	u3811
  4179     0EE4  07CF               	addwf	___flmul@prod+1,f
  4180     0EE5                     u3811:
  4181     0EE5  0844               	movf	??___flmul+2,w
  4182     0EE6  1103               	clrz
  4183     0EE7  1803               	skipnc
  4184     0EE8  3E01               	addlw	1
  4185     0EE9  1903               	skipnz
  4186     0EEA  2EEC               	goto	u3812
  4187     0EEB  07D0               	addwf	___flmul@prod+2,f
  4188     0EEC                     u3812:
  4189     0EEC  0845               	movf	??___flmul+3,w
  4190     0EED  1103               	clrz
  4191     0EEE  1803               	skipnc
  4192     0EEF  3E01               	addlw	1
  4193     0EF0  1903               	skipnz
  4194     0EF1  2EF3               	goto	u3813
  4195     0EF2  07D1               	addwf	___flmul@prod+3,f
  4196     0EF3                     u3813:
  4197     0EF3                     l3001:
  4198     0EF3  0848               	movf	___flmul@grs,w
  4199     0EF4  00C2               	movwf	??___flmul
  4200     0EF5  0849               	movf	___flmul@grs+1,w
  4201     0EF6  00C3               	movwf	??___flmul+1
  4202     0EF7  084A               	movf	___flmul@grs+2,w
  4203     0EF8  00C4               	movwf	??___flmul+2
  4204     0EF9  084B               	movf	___flmul@grs+3,w
  4205     0EFA  00C5               	movwf	??___flmul+3
  4206     0EFB  3018               	movlw	24
  4207     0EFC                     u3825:
  4208     0EFC  1003               	clrc
  4209     0EFD  0CC5               	rrf	??___flmul+3,f
  4210     0EFE  0CC4               	rrf	??___flmul+2,f
  4211     0EFF  0CC3               	rrf	??___flmul+1,f
  4212     0F00  0CC2               	rrf	??___flmul,f
  4213     0F01                     u3820:
  4214     0F01  3EFF               	addlw	-1
  4215     0F02  1D03               	skipz
  4216     0F03  2EFC               	goto	u3825
  4217     0F04  0842               	movf	??___flmul,w
  4218     0F05  07CE               	addwf	___flmul@prod,f
  4219     0F06  0843               	movf	??___flmul+1,w
  4220     0F07  1103               	clrz
  4221     0F08  1803               	skipnc
  4222     0F09  3E01               	addlw	1
  4223     0F0A  1903               	skipnz
  4224     0F0B  2F0D               	goto	u3831
  4225     0F0C  07CF               	addwf	___flmul@prod+1,f
  4226     0F0D                     u3831:
  4227     0F0D  0844               	movf	??___flmul+2,w
  4228     0F0E  1103               	clrz
  4229     0F0F  1803               	skipnc
  4230     0F10  3E01               	addlw	1
  4231     0F11  1903               	skipnz
  4232     0F12  2F14               	goto	u3832
  4233     0F13  07D0               	addwf	___flmul@prod+2,f
  4234     0F14                     u3832:
  4235     0F14  0845               	movf	??___flmul+3,w
  4236     0F15  1103               	clrz
  4237     0F16  1803               	skipnc
  4238     0F17  3E01               	addlw	1
  4239     0F18  1903               	skipnz
  4240     0F19  2F1B               	goto	u3833
  4241     0F1A  07D1               	addwf	___flmul@prod+3,f
  4242     0F1B                     u3833:
  4243     0F1B                     l3003:
  4244     0F1B  3008               	movlw	8
  4245     0F1C  00C2               	movwf	??___flmul
  4246     0F1D                     u3845:
  4247     0F1D  1003               	clrc
  4248     0F1E  0DC8               	rlf	___flmul@grs,f
  4249     0F1F  0DC9               	rlf	___flmul@grs+1,f
  4250     0F20  0DCA               	rlf	___flmul@grs+2,f
  4251     0F21  0DCB               	rlf	___flmul@grs+3,f
  4252     0F22  0BC2               	decfsz	??___flmul,f
  4253     0F23  2F1D               	goto	u3845
  4254     0F24                     l3005:
  4255     0F24  084D               	movf	___flmul@bexp,w
  4256     0F25  074C               	addwf	___flmul@aexp,w
  4257     0F26  00C2               	movwf	??___flmul
  4258     0F27  01C3               	clrf	??___flmul+1
  4259     0F28  0DC3               	rlf	??___flmul+1,f
  4260     0F29  0842               	movf	??___flmul,w
  4261     0F2A  3E82               	addlw	130
  4262     0F2B  00D2               	movwf	___flmul@temp
  4263     0F2C  0843               	movf	??___flmul+1,w
  4264     0F2D  1803               	skipnc
  4265     0F2E  3E01               	addlw	1
  4266     0F2F  3EFF               	addlw	255
  4267     0F30  00D3               	movwf	___flmul@temp+1
  4268     0F31  2F4F               	goto	l3017
  4269     0F32                     l3007:
  4270     0F32  3001               	movlw	1
  4271     0F33  00C2               	movwf	??___flmul
  4272     0F34                     u3855:
  4273     0F34  1003               	clrc
  4274     0F35  0DCE               	rlf	___flmul@prod,f
  4275     0F36  0DCF               	rlf	___flmul@prod+1,f
  4276     0F37  0DD0               	rlf	___flmul@prod+2,f
  4277     0F38  0DD1               	rlf	___flmul@prod+3,f
  4278     0F39  0BC2               	decfsz	??___flmul,f
  4279     0F3A  2F34               	goto	u3855
  4280     0F3B                     l3009:
  4281     0F3B  1FCB               	btfss	___flmul@grs+3,7
  4282     0F3C  2F3E               	goto	u3861
  4283     0F3D  2F3F               	goto	u3860
  4284     0F3E                     u3861:
  4285     0F3E  2F40               	goto	l3013
  4286     0F3F                     u3860:
  4287     0F3F                     l3011:
  4288     0F3F  144E               	bsf	___flmul@prod,0
  4289     0F40                     l3013:
  4290     0F40  3001               	movlw	1
  4291     0F41  00C2               	movwf	??___flmul
  4292     0F42                     u3875:
  4293     0F42  1003               	clrc
  4294     0F43  0DC8               	rlf	___flmul@grs,f
  4295     0F44  0DC9               	rlf	___flmul@grs+1,f
  4296     0F45  0DCA               	rlf	___flmul@grs+2,f
  4297     0F46  0DCB               	rlf	___flmul@grs+3,f
  4298     0F47  0BC2               	decfsz	??___flmul,f
  4299     0F48  2F42               	goto	u3875
  4300     0F49                     l3015:
  4301     0F49  30FF               	movlw	255
  4302     0F4A  07D2               	addwf	___flmul@temp,f
  4303     0F4B  1803               	skipnc
  4304     0F4C  0AD3               	incf	___flmul@temp+1,f
  4305     0F4D  30FF               	movlw	255
  4306     0F4E  07D3               	addwf	___flmul@temp+1,f
  4307     0F4F                     l3017:
  4308     0F4F  1FD0               	btfss	___flmul@prod+2,7
  4309     0F50  2F52               	goto	u3881
  4310     0F51  2F53               	goto	u3880
  4311     0F52                     u3881:
  4312     0F52  2F32               	goto	l3007
  4313     0F53                     u3880:
  4314     0F53                     l3019:
  4315     0F53  01CC               	clrf	___flmul@aexp
  4316     0F54                     l3021:
  4317     0F54  1FCB               	btfss	___flmul@grs+3,7
  4318     0F55  2F57               	goto	u3891
  4319     0F56  2F58               	goto	u3890
  4320     0F57                     u3891:
  4321     0F57  2F74               	goto	l3029
  4322     0F58                     u3890:
  4323     0F58                     l3023:
  4324     0F58  30FF               	movlw	255
  4325     0F59  0548               	andwf	___flmul@grs,w
  4326     0F5A  00C2               	movwf	??___flmul
  4327     0F5B  30FF               	movlw	255
  4328     0F5C  0549               	andwf	___flmul@grs+1,w
  4329     0F5D  00C3               	movwf	??___flmul+1
  4330     0F5E  30FF               	movlw	255
  4331     0F5F  054A               	andwf	___flmul@grs+2,w
  4332     0F60  00C4               	movwf	??___flmul+2
  4333     0F61  307F               	movlw	127
  4334     0F62  054B               	andwf	___flmul@grs+3,w
  4335     0F63  00C5               	movwf	??___flmul+3
  4336     0F64  0845               	movf	??___flmul+3,w
  4337     0F65  0444               	iorwf	??___flmul+2,w
  4338     0F66  0443               	iorwf	??___flmul+1,w
  4339     0F67  0442               	iorwf	??___flmul,w
  4340     0F68  1903               	skipnz
  4341     0F69  2F6B               	goto	u3901
  4342     0F6A  2F6C               	goto	u3900
  4343     0F6B                     u3901:
  4344     0F6B  2F6F               	goto	l825
  4345     0F6C                     u3900:
  4346     0F6C                     l3025:
  4347     0F6C  01CC               	clrf	___flmul@aexp
  4348     0F6D  0ACC               	incf	___flmul@aexp,f
  4349     0F6E  2F74               	goto	l3029
  4350     0F6F                     l825:
  4351     0F6F  1C4E               	btfss	___flmul@prod,0
  4352     0F70  2F72               	goto	u3911
  4353     0F71  2F73               	goto	u3910
  4354     0F72                     u3911:
  4355     0F72  2F74               	goto	l3029
  4356     0F73                     u3910:
  4357     0F73  2F6C               	goto	l3025
  4358     0F74                     l3029:
  4359     0F74  084C               	movf	___flmul@aexp,w
  4360     0F75  1903               	btfsc	3,2
  4361     0F76  2F78               	goto	u3921
  4362     0F77  2F79               	goto	u3920
  4363     0F78                     u3921:
  4364     0F78  2FAA               	goto	l3039
  4365     0F79                     u3920:
  4366     0F79                     l3031:
  4367     0F79  3001               	movlw	1
  4368     0F7A  07CE               	addwf	___flmul@prod,f
  4369     0F7B  3000               	movlw	0
  4370     0F7C  1803               	skipnc
  4371     0F7D  3001               	movlw	1
  4372     0F7E  07CF               	addwf	___flmul@prod+1,f
  4373     0F7F  3000               	movlw	0
  4374     0F80  1803               	skipnc
  4375     0F81  3001               	movlw	1
  4376     0F82  07D0               	addwf	___flmul@prod+2,f
  4377     0F83  3000               	movlw	0
  4378     0F84  1803               	skipnc
  4379     0F85  3001               	movlw	1
  4380     0F86  07D1               	addwf	___flmul@prod+3,f
  4381     0F87                     l3033:
  4382     0F87  1C51               	btfss	___flmul@prod+3,0
  4383     0F88  2F8A               	goto	u3931
  4384     0F89  2F8B               	goto	u3930
  4385     0F8A                     u3931:
  4386     0F8A  2FAA               	goto	l3039
  4387     0F8B                     u3930:
  4388     0F8B                     l3035:
  4389     0F8B  084E               	movf	___flmul@prod,w
  4390     0F8C  00C2               	movwf	??___flmul
  4391     0F8D  084F               	movf	___flmul@prod+1,w
  4392     0F8E  00C3               	movwf	??___flmul+1
  4393     0F8F  0850               	movf	___flmul@prod+2,w
  4394     0F90  00C4               	movwf	??___flmul+2
  4395     0F91  0851               	movf	___flmul@prod+3,w
  4396     0F92  00C5               	movwf	??___flmul+3
  4397     0F93  3001               	movlw	1
  4398     0F94  00C6               	movwf	??___flmul+4
  4399     0F95                     u3945:
  4400     0F95  0D45               	rlf	??___flmul+3,w
  4401     0F96  0CC5               	rrf	??___flmul+3,f
  4402     0F97  0CC4               	rrf	??___flmul+2,f
  4403     0F98  0CC3               	rrf	??___flmul+1,f
  4404     0F99  0CC2               	rrf	??___flmul,f
  4405     0F9A                     u3940:
  4406     0F9A  0BC6               	decfsz	??___flmul+4,f
  4407     0F9B  2F95               	goto	u3945
  4408     0F9C  0845               	movf	??___flmul+3,w
  4409     0F9D  00D1               	movwf	___flmul@prod+3
  4410     0F9E  0844               	movf	??___flmul+2,w
  4411     0F9F  00D0               	movwf	___flmul@prod+2
  4412     0FA0  0843               	movf	??___flmul+1,w
  4413     0FA1  00CF               	movwf	___flmul@prod+1
  4414     0FA2  0842               	movf	??___flmul,w
  4415     0FA3  00CE               	movwf	___flmul@prod
  4416     0FA4                     l3037:
  4417     0FA4  3001               	movlw	1
  4418     0FA5  07D2               	addwf	___flmul@temp,f
  4419     0FA6  1803               	skipnc
  4420     0FA7  0AD3               	incf	___flmul@temp+1,f
  4421     0FA8  3000               	movlw	0
  4422     0FA9  07D3               	addwf	___flmul@temp+1,f
  4423     0FAA                     l3039:
  4424     0FAA  0853               	movf	___flmul@temp+1,w
  4425     0FAB  3A80               	xorlw	128
  4426     0FAC  00FF               	movwf	btemp+1
  4427     0FAD  3080               	movlw	128
  4428     0FAE  027F               	subwf	btemp+1,w
  4429     0FAF  1D03               	skipz
  4430     0FB0  2FB3               	goto	u3955
  4431     0FB1  30FF               	movlw	255
  4432     0FB2  0252               	subwf	___flmul@temp,w
  4433     0FB3                     u3955:
  4434     0FB3  1C03               	skipc
  4435     0FB4  2FB6               	goto	u3951
  4436     0FB5  2FB7               	goto	u3950
  4437     0FB6                     u3951:
  4438     0FB6  2FC2               	goto	l3043
  4439     0FB7                     u3950:
  4440     0FB7                     l3041:
  4441     0FB7  307F               	movlw	127
  4442     0FB8  1283               	bcf	3,5	;RP0=0, select bank0
  4443     0FB9  1303               	bcf	3,6	;RP1=0, select bank0
  4444     0FBA  00D1               	movwf	___flmul@prod+3
  4445     0FBB  3080               	movlw	128
  4446     0FBC  00D0               	movwf	___flmul@prod+2
  4447     0FBD  3000               	movlw	0
  4448     0FBE  00CF               	movwf	___flmul@prod+1
  4449     0FBF  3000               	movlw	0
  4450     0FC0  00CE               	movwf	___flmul@prod
  4451     0FC1  2FF3               	goto	l3057
  4452     0FC2                     l3043:
  4453     0FC2  1283               	bcf	3,5	;RP0=0, select bank0
  4454     0FC3  1303               	bcf	3,6	;RP1=0, select bank0
  4455     0FC4  0853               	movf	___flmul@temp+1,w
  4456     0FC5  3A80               	xorlw	128
  4457     0FC6  00FF               	movwf	btemp+1
  4458     0FC7  3080               	movlw	128
  4459     0FC8  027F               	subwf	btemp+1,w
  4460     0FC9  1D03               	skipz
  4461     0FCA  2FCD               	goto	u3965
  4462     0FCB  3001               	movlw	1
  4463     0FCC  0252               	subwf	___flmul@temp,w
  4464     0FCD                     u3965:
  4465     0FCD  1803               	skipnc
  4466     0FCE  2FD0               	goto	u3961
  4467     0FCF  2FD1               	goto	u3960
  4468     0FD0                     u3961:
  4469     0FD0  2FDD               	goto	l3049
  4470     0FD1                     u3960:
  4471     0FD1                     l3045:
  4472     0FD1  3000               	movlw	0
  4473     0FD2  1283               	bcf	3,5	;RP0=0, select bank0
  4474     0FD3  1303               	bcf	3,6	;RP1=0, select bank0
  4475     0FD4  00D1               	movwf	___flmul@prod+3
  4476     0FD5  3000               	movlw	0
  4477     0FD6  00D0               	movwf	___flmul@prod+2
  4478     0FD7  3000               	movlw	0
  4479     0FD8  00CF               	movwf	___flmul@prod+1
  4480     0FD9  3000               	movlw	0
  4481     0FDA  00CE               	movwf	___flmul@prod
  4482     0FDB                     l3047:
  4483     0FDB  01C7               	clrf	___flmul@sign
  4484     0FDC  2FF3               	goto	l3057
  4485     0FDD                     l3049:
  4486     0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  4487     0FDE  1303               	bcf	3,6	;RP1=0, select bank0
  4488     0FDF  0852               	movf	___flmul@temp,w
  4489     0FE0  00CD               	movwf	___flmul@bexp
  4490     0FE1  30FF               	movlw	255
  4491     0FE2  05CE               	andwf	___flmul@prod,f
  4492     0FE3  30FF               	movlw	255
  4493     0FE4  05CF               	andwf	___flmul@prod+1,f
  4494     0FE5  307F               	movlw	127
  4495     0FE6  05D0               	andwf	___flmul@prod+2,f
  4496     0FE7  3000               	movlw	0
  4497     0FE8  05D1               	andwf	___flmul@prod+3,f
  4498     0FE9                     l3051:
  4499     0FE9  1C4D               	btfss	___flmul@bexp,0
  4500     0FEA  2FEC               	goto	u3971
  4501     0FEB  2FED               	goto	u3970
  4502     0FEC                     u3971:
  4503     0FEC  2FEE               	goto	l3055
  4504     0FED                     u3970:
  4505     0FED                     l3053:
  4506     0FED  17D0               	bsf	___flmul@prod+2,7
  4507     0FEE                     l3055:
  4508     0FEE  084D               	movf	___flmul@bexp,w
  4509     0FEF  00C2               	movwf	??___flmul
  4510     0FF0  1003               	clrc
  4511     0FF1  0C42               	rrf	??___flmul,w
  4512     0FF2  00D1               	movwf	___flmul@prod+3
  4513     0FF3                     l3057:
  4514     0FF3  0847               	movf	___flmul@sign,w
  4515     0FF4  00FF               	movwf	btemp+1
  4516     0FF5  087F               	movf	btemp+1,w
  4517     0FF6  04D1               	iorwf	___flmul@prod+3,f
  4518     0FF7                     l3059:
  4519     0FF7  0851               	movf	___flmul@prod+3,w
  4520     0FF8  00BD               	movwf	?___flmul+3
  4521     0FF9  0850               	movf	___flmul@prod+2,w
  4522     0FFA  00BC               	movwf	?___flmul+2
  4523     0FFB  084F               	movf	___flmul@prod+1,w
  4524     0FFC  00BB               	movwf	?___flmul+1
  4525     0FFD  084E               	movf	___flmul@prod,w
  4526     0FFE  00BA               	movwf	?___flmul
  4527     0FFF                     l819:
  4528     0FFF  0008               	return
  4529     1000                     __end_of___flmul:
  4530                           
  4531                           	psect	text10
  4532     10A8                     __ptext10:	
  4533 ;; *************** function __Umul8_16 *****************
  4534 ;; Defined at:
  4535 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul8_16.c"
  4536 ;; Parameters:    Size  Location     Type
  4537 ;;  multiplier      1    wreg     unsigned char 
  4538 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  4539 ;; Auto vars:     Size  Location     Type
  4540 ;;  multiplier      1    8[BANK0 ] unsigned char 
  4541 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  4542 ;;  product         2    4[BANK0 ] unsigned int 
  4543 ;; Return value:  Size  Location     Type
  4544 ;;                  2    0[BANK0 ] unsigned int 
  4545 ;; Registers used:
  4546 ;;		wreg, status,2, status,0
  4547 ;; Tracked objects:
  4548 ;;		On entry : 0/0
  4549 ;;		On exit  : 0/0
  4550 ;;		Unchanged: 0/0
  4551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4552 ;;      Params:         0       2       0       0       0
  4553 ;;      Locals:         0       5       0       0       0
  4554 ;;      Temps:          0       2       0       0       0
  4555 ;;      Totals:         0       9       0       0       0
  4556 ;;Total ram usage:        9 bytes
  4557 ;; Hardware stack levels used: 1
  4558 ;; Hardware stack levels required when called: 2
  4559 ;; This function calls:
  4560 ;;		Nothing
  4561 ;; This function is called by:
  4562 ;;		___flmul
  4563 ;; This function uses a non-reentrant model
  4564 ;;
  4565                           
  4566     10A8                     __Umul8_16:	
  4567                           ;psect for function __Umul8_16
  4568                           
  4569                           
  4570                           ;incstack = 0
  4571                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  4572                           ;__Umul8_16@multiplier stored from wreg
  4573     10A8  1283               	bcf	3,5	;RP0=0, select bank0
  4574     10A9  1303               	bcf	3,6	;RP1=0, select bank0
  4575     10AA  00A8               	movwf	__Umul8_16@multiplier
  4576     10AB                     l2441:
  4577     10AB  01A4               	clrf	__Umul8_16@product
  4578     10AC  01A5               	clrf	__Umul8_16@product+1
  4579     10AD                     l2443:
  4580     10AD  0820               	movf	__Umul8_16@multiplicand,w
  4581     10AE  00A2               	movwf	??__Umul8_16
  4582     10AF  01A3               	clrf	??__Umul8_16+1
  4583     10B0  0822               	movf	??__Umul8_16,w
  4584     10B1  00A6               	movwf	__Umul8_16@word_mpld
  4585     10B2  0823               	movf	??__Umul8_16+1,w
  4586     10B3  00A7               	movwf	__Umul8_16@word_mpld+1
  4587     10B4                     l2445:
  4588     10B4  1C28               	btfss	__Umul8_16@multiplier,0
  4589     10B5  28B7               	goto	u2681
  4590     10B6  28B8               	goto	u2680
  4591     10B7                     u2681:
  4592     10B7  28BE               	goto	l838
  4593     10B8                     u2680:
  4594     10B8                     l2447:
  4595     10B8  0826               	movf	__Umul8_16@word_mpld,w
  4596     10B9  07A4               	addwf	__Umul8_16@product,f
  4597     10BA  1803               	skipnc
  4598     10BB  0AA5               	incf	__Umul8_16@product+1,f
  4599     10BC  0827               	movf	__Umul8_16@word_mpld+1,w
  4600     10BD  07A5               	addwf	__Umul8_16@product+1,f
  4601     10BE                     l838:
  4602     10BE  3001               	movlw	1
  4603     10BF                     u2695:
  4604     10BF  1003               	clrc
  4605     10C0  0DA6               	rlf	__Umul8_16@word_mpld,f
  4606     10C1  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  4607     10C2  3EFF               	addlw	-1
  4608     10C3  1D03               	skipz
  4609     10C4  28BF               	goto	u2695
  4610     10C5  1003               	clrc
  4611     10C6  0CA8               	rrf	__Umul8_16@multiplier,f
  4612     10C7                     l2449:
  4613     10C7  0828               	movf	__Umul8_16@multiplier,w
  4614     10C8  1D03               	btfss	3,2
  4615     10C9  28CB               	goto	u2701
  4616     10CA  28CC               	goto	u2700
  4617     10CB                     u2701:
  4618     10CB  28B4               	goto	l2445
  4619     10CC                     u2700:
  4620     10CC                     l2451:
  4621     10CC  0825               	movf	__Umul8_16@product+1,w
  4622     10CD  00A1               	movwf	?__Umul8_16+1
  4623     10CE  0824               	movf	__Umul8_16@product,w
  4624     10CF  00A0               	movwf	?__Umul8_16
  4625     10D0                     l840:
  4626     10D0  0008               	return
  4627     10D1                     __end_of__Umul8_16:
  4628                           
  4629                           	psect	text11
  4630     0615                     __ptext11:	
  4631 ;; *************** function ___fldiv *****************
  4632 ;; Defined at:
  4633 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcdiv.c"
  4634 ;; Parameters:    Size  Location     Type
  4635 ;;  a               4    0[BANK0 ] unsigned int 
  4636 ;;  b               4    4[BANK0 ] unsigned int 
  4637 ;; Auto vars:     Size  Location     Type
  4638 ;;  grs             4   20[BANK0 ] unsigned long 
  4639 ;;  rem             4   13[BANK0 ] unsigned long 
  4640 ;;  new_exp         2   18[BANK0 ] int 
  4641 ;;  aexp            1   25[BANK0 ] unsigned char 
  4642 ;;  bexp            1   24[BANK0 ] unsigned char 
  4643 ;;  sign            1   17[BANK0 ] unsigned char 
  4644 ;; Return value:  Size  Location     Type
  4645 ;;                  4    0[BANK0 ] unsigned char 
  4646 ;; Registers used:
  4647 ;;		wreg, status,2, status,0, btemp+1
  4648 ;; Tracked objects:
  4649 ;;		On entry : 0/0
  4650 ;;		On exit  : 0/0
  4651 ;;		Unchanged: 0/0
  4652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4653 ;;      Params:         0       8       0       0       0
  4654 ;;      Locals:         0      13       0       0       0
  4655 ;;      Temps:          0       5       0       0       0
  4656 ;;      Totals:         0      26       0       0       0
  4657 ;;Total ram usage:       26 bytes
  4658 ;; Hardware stack levels used: 1
  4659 ;; Hardware stack levels required when called: 2
  4660 ;; This function calls:
  4661 ;;		Nothing
  4662 ;; This function is called by:
  4663 ;;		_main
  4664 ;; This function uses a non-reentrant model
  4665 ;;
  4666                           
  4667     0615                     ___fldiv:	
  4668                           ;psect for function ___fldiv
  4669                           
  4670     0615                     l2775:	
  4671                           ;incstack = 0
  4672                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  4673                           
  4674     0615  1283               	bcf	3,5	;RP0=0, select bank0
  4675     0616  1303               	bcf	3,6	;RP1=0, select bank0
  4676     0617  0827               	movf	___fldiv@b+3,w
  4677     0618  3980               	andlw	128
  4678     0619  00B1               	movwf	___fldiv@sign
  4679     061A                     l2777:
  4680     061A  0827               	movf	___fldiv@b+3,w
  4681     061B  00A8               	movwf	??___fldiv
  4682     061C  0728               	addwf	??___fldiv,w
  4683     061D  00B8               	movwf	___fldiv@bexp
  4684     061E                     l2779:
  4685     061E  1FA6               	btfss	___fldiv@b+2,7
  4686     061F  2E21               	goto	u3321
  4687     0620  2E22               	goto	u3320
  4688     0621                     u3321:
  4689     0621  2E23               	goto	l2783
  4690     0622                     u3320:
  4691     0622                     l2781:
  4692     0622  1438               	bsf	___fldiv@bexp,0
  4693     0623                     l2783:
  4694     0623  0838               	movf	___fldiv@bexp,w
  4695     0624  1903               	btfsc	3,2
  4696     0625  2E27               	goto	u3331
  4697     0626  2E28               	goto	u3330
  4698     0627                     u3331:
  4699     0627  2E38               	goto	l2793
  4700     0628                     u3330:
  4701     0628                     l2785:
  4702     0628  0A38               	incf	___fldiv@bexp,w
  4703     0629  1D03               	btfss	3,2
  4704     062A  2E2C               	goto	u3341
  4705     062B  2E2D               	goto	u3340
  4706     062C                     u3341:
  4707     062C  2E35               	goto	l2789
  4708     062D                     u3340:
  4709     062D                     l2787:
  4710     062D  3000               	movlw	0
  4711     062E  00A7               	movwf	___fldiv@b+3
  4712     062F  3000               	movlw	0
  4713     0630  00A6               	movwf	___fldiv@b+2
  4714     0631  3000               	movlw	0
  4715     0632  00A5               	movwf	___fldiv@b+1
  4716     0633  3000               	movlw	0
  4717     0634  00A4               	movwf	___fldiv@b
  4718     0635                     l2789:
  4719     0635  17A6               	bsf	___fldiv@b+2,7
  4720     0636                     l2791:
  4721     0636  01A7               	clrf	___fldiv@b+3
  4722     0637  2E40               	goto	l2795
  4723     0638                     l2793:
  4724     0638  3000               	movlw	0
  4725     0639  00A7               	movwf	___fldiv@b+3
  4726     063A  3000               	movlw	0
  4727     063B  00A6               	movwf	___fldiv@b+2
  4728     063C  3000               	movlw	0
  4729     063D  00A5               	movwf	___fldiv@b+1
  4730     063E  3000               	movlw	0
  4731     063F  00A4               	movwf	___fldiv@b
  4732     0640                     l2795:
  4733     0640  0823               	movf	___fldiv@a+3,w
  4734     0641  3980               	andlw	128
  4735     0642  00FF               	movwf	btemp+1
  4736     0643  087F               	movf	btemp+1,w
  4737     0644  06B1               	xorwf	___fldiv@sign,f
  4738     0645                     l2797:
  4739     0645  0823               	movf	___fldiv@a+3,w
  4740     0646  00A8               	movwf	??___fldiv
  4741     0647  0728               	addwf	??___fldiv,w
  4742     0648  00B9               	movwf	___fldiv@aexp
  4743     0649                     l2799:
  4744     0649  1FA2               	btfss	___fldiv@a+2,7
  4745     064A  2E4C               	goto	u3351
  4746     064B  2E4D               	goto	u3350
  4747     064C                     u3351:
  4748     064C  2E4E               	goto	l2803
  4749     064D                     u3350:
  4750     064D                     l2801:
  4751     064D  1439               	bsf	___fldiv@aexp,0
  4752     064E                     l2803:
  4753     064E  0839               	movf	___fldiv@aexp,w
  4754     064F  1903               	btfsc	3,2
  4755     0650  2E52               	goto	u3361
  4756     0651  2E53               	goto	u3360
  4757     0652                     u3361:
  4758     0652  2E63               	goto	l2813
  4759     0653                     u3360:
  4760     0653                     l2805:
  4761     0653  0A39               	incf	___fldiv@aexp,w
  4762     0654  1D03               	btfss	3,2
  4763     0655  2E57               	goto	u3371
  4764     0656  2E58               	goto	u3370
  4765     0657                     u3371:
  4766     0657  2E60               	goto	l2809
  4767     0658                     u3370:
  4768     0658                     l2807:
  4769     0658  3000               	movlw	0
  4770     0659  00A3               	movwf	___fldiv@a+3
  4771     065A  3000               	movlw	0
  4772     065B  00A2               	movwf	___fldiv@a+2
  4773     065C  3000               	movlw	0
  4774     065D  00A1               	movwf	___fldiv@a+1
  4775     065E  3000               	movlw	0
  4776     065F  00A0               	movwf	___fldiv@a
  4777     0660                     l2809:
  4778     0660  17A2               	bsf	___fldiv@a+2,7
  4779     0661                     l2811:
  4780     0661  01A3               	clrf	___fldiv@a+3
  4781     0662  2E6B               	goto	l779
  4782     0663                     l2813:
  4783     0663  3000               	movlw	0
  4784     0664  00A3               	movwf	___fldiv@a+3
  4785     0665  3000               	movlw	0
  4786     0666  00A2               	movwf	___fldiv@a+2
  4787     0667  3000               	movlw	0
  4788     0668  00A1               	movwf	___fldiv@a+1
  4789     0669  3000               	movlw	0
  4790     066A  00A0               	movwf	___fldiv@a
  4791     066B                     l779:
  4792     066B  0823               	movf	___fldiv@a+3,w
  4793     066C  0422               	iorwf	___fldiv@a+2,w
  4794     066D  0421               	iorwf	___fldiv@a+1,w
  4795     066E  0420               	iorwf	___fldiv@a,w
  4796     066F  1D03               	skipz
  4797     0670  2E72               	goto	u3381
  4798     0671  2E73               	goto	u3380
  4799     0672                     u3381:
  4800     0672  2E8C               	goto	l2823
  4801     0673                     u3380:
  4802     0673                     l2815:
  4803     0673  3000               	movlw	0
  4804     0674  00A7               	movwf	___fldiv@b+3
  4805     0675  3000               	movlw	0
  4806     0676  00A6               	movwf	___fldiv@b+2
  4807     0677  3000               	movlw	0
  4808     0678  00A5               	movwf	___fldiv@b+1
  4809     0679  3000               	movlw	0
  4810     067A  00A4               	movwf	___fldiv@b
  4811     067B  3080               	movlw	128
  4812     067C  04A6               	iorwf	___fldiv@b+2,f
  4813     067D  307F               	movlw	127
  4814     067E  04A7               	iorwf	___fldiv@b+3,f
  4815     067F                     l2817:
  4816     067F  0831               	movf	___fldiv@sign,w
  4817     0680  00FF               	movwf	btemp+1
  4818     0681  087F               	movf	btemp+1,w
  4819     0682  04A7               	iorwf	___fldiv@b+3,f
  4820     0683                     l2819:
  4821     0683  0827               	movf	___fldiv@b+3,w
  4822     0684  00A3               	movwf	?___fldiv+3
  4823     0685  0826               	movf	___fldiv@b+2,w
  4824     0686  00A2               	movwf	?___fldiv+2
  4825     0687  0825               	movf	___fldiv@b+1,w
  4826     0688  00A1               	movwf	?___fldiv+1
  4827     0689  0824               	movf	___fldiv@b,w
  4828     068A  00A0               	movwf	?___fldiv
  4829     068B  2FE3               	goto	l781
  4830     068C                     l2823:
  4831     068C  0838               	movf	___fldiv@bexp,w
  4832     068D  1D03               	btfss	3,2
  4833     068E  2E90               	goto	u3391
  4834     068F  2E91               	goto	u3390
  4835     0690                     u3391:
  4836     0690  2E9A               	goto	l2829
  4837     0691                     u3390:
  4838     0691                     l2825:
  4839     0691  3000               	movlw	0
  4840     0692  00A3               	movwf	?___fldiv+3
  4841     0693  3000               	movlw	0
  4842     0694  00A2               	movwf	?___fldiv+2
  4843     0695  3000               	movlw	0
  4844     0696  00A1               	movwf	?___fldiv+1
  4845     0697  3000               	movlw	0
  4846     0698  00A0               	movwf	?___fldiv
  4847     0699  2FE3               	goto	l781
  4848     069A                     l2829:
  4849     069A  0838               	movf	___fldiv@bexp,w
  4850     069B  00A8               	movwf	??___fldiv
  4851     069C  01A9               	clrf	??___fldiv+1
  4852     069D  0829               	movf	??___fldiv+1,w
  4853     069E  00AB               	movwf	??___fldiv+3
  4854     069F  0839               	movf	___fldiv@aexp,w
  4855     06A0  0228               	subwf	??___fldiv,w
  4856     06A1  00AA               	movwf	??___fldiv+2
  4857     06A2  1C03               	skipc
  4858     06A3  03AB               	decf	??___fldiv+3,f
  4859     06A4  082A               	movf	??___fldiv+2,w
  4860     06A5  3E7F               	addlw	127
  4861     06A6  00B2               	movwf	___fldiv@new_exp
  4862     06A7  082B               	movf	??___fldiv+3,w
  4863     06A8  1803               	skipnc
  4864     06A9  3E01               	addlw	1
  4865     06AA  3E00               	addlw	0
  4866     06AB  00B3               	movwf	___fldiv@new_exp+1
  4867     06AC                     l2831:
  4868     06AC  0827               	movf	___fldiv@b+3,w
  4869     06AD  00B0               	movwf	___fldiv@rem+3
  4870     06AE  0826               	movf	___fldiv@b+2,w
  4871     06AF  00AF               	movwf	___fldiv@rem+2
  4872     06B0  0825               	movf	___fldiv@b+1,w
  4873     06B1  00AE               	movwf	___fldiv@rem+1
  4874     06B2  0824               	movf	___fldiv@b,w
  4875     06B3  00AD               	movwf	___fldiv@rem
  4876     06B4                     l2833:
  4877     06B4  3000               	movlw	0
  4878     06B5  00A7               	movwf	___fldiv@b+3
  4879     06B6  3000               	movlw	0
  4880     06B7  00A6               	movwf	___fldiv@b+2
  4881     06B8  3000               	movlw	0
  4882     06B9  00A5               	movwf	___fldiv@b+1
  4883     06BA  3000               	movlw	0
  4884     06BB  00A4               	movwf	___fldiv@b
  4885     06BC                     l2835:
  4886     06BC  3000               	movlw	0
  4887     06BD  00B7               	movwf	___fldiv@grs+3
  4888     06BE  3000               	movlw	0
  4889     06BF  00B6               	movwf	___fldiv@grs+2
  4890     06C0  3000               	movlw	0
  4891     06C1  00B5               	movwf	___fldiv@grs+1
  4892     06C2  3000               	movlw	0
  4893     06C3  00B4               	movwf	___fldiv@grs
  4894     06C4                     l2837:
  4895     06C4  01B9               	clrf	___fldiv@aexp
  4896     06C5  2F10               	goto	l2857
  4897     06C6                     l2839:
  4898     06C6  0839               	movf	___fldiv@aexp,w
  4899     06C7  1903               	btfsc	3,2
  4900     06C8  2ECA               	goto	u3401
  4901     06C9  2ECB               	goto	u3400
  4902     06CA                     u3401:
  4903     06CA  2EEB               	goto	l2849
  4904     06CB                     u3400:
  4905     06CB                     l2841:
  4906     06CB  3001               	movlw	1
  4907     06CC  00A8               	movwf	??___fldiv
  4908     06CD                     u3415:
  4909     06CD  1003               	clrc
  4910     06CE  0DAD               	rlf	___fldiv@rem,f
  4911     06CF  0DAE               	rlf	___fldiv@rem+1,f
  4912     06D0  0DAF               	rlf	___fldiv@rem+2,f
  4913     06D1  0DB0               	rlf	___fldiv@rem+3,f
  4914     06D2  0BA8               	decfsz	??___fldiv,f
  4915     06D3  2ECD               	goto	u3415
  4916     06D4  3001               	movlw	1
  4917     06D5  00A8               	movwf	??___fldiv
  4918     06D6                     u3425:
  4919     06D6  1003               	clrc
  4920     06D7  0DA4               	rlf	___fldiv@b,f
  4921     06D8  0DA5               	rlf	___fldiv@b+1,f
  4922     06D9  0DA6               	rlf	___fldiv@b+2,f
  4923     06DA  0DA7               	rlf	___fldiv@b+3,f
  4924     06DB  0BA8               	decfsz	??___fldiv,f
  4925     06DC  2ED6               	goto	u3425
  4926     06DD                     l2843:
  4927     06DD  1FB7               	btfss	___fldiv@grs+3,7
  4928     06DE  2EE0               	goto	u3431
  4929     06DF  2EE1               	goto	u3430
  4930     06E0                     u3431:
  4931     06E0  2EE2               	goto	l2847
  4932     06E1                     u3430:
  4933     06E1                     l2845:
  4934     06E1  1424               	bsf	___fldiv@b,0
  4935     06E2                     l2847:
  4936     06E2  3001               	movlw	1
  4937     06E3  00A8               	movwf	??___fldiv
  4938     06E4                     u3445:
  4939     06E4  1003               	clrc
  4940     06E5  0DB4               	rlf	___fldiv@grs,f
  4941     06E6  0DB5               	rlf	___fldiv@grs+1,f
  4942     06E7  0DB6               	rlf	___fldiv@grs+2,f
  4943     06E8  0DB7               	rlf	___fldiv@grs+3,f
  4944     06E9  0BA8               	decfsz	??___fldiv,f
  4945     06EA  2EE4               	goto	u3445
  4946     06EB                     l2849:
  4947     06EB  0823               	movf	___fldiv@a+3,w
  4948     06EC  0230               	subwf	___fldiv@rem+3,w
  4949     06ED  1D03               	skipz
  4950     06EE  2EF9               	goto	u3455
  4951     06EF  0822               	movf	___fldiv@a+2,w
  4952     06F0  022F               	subwf	___fldiv@rem+2,w
  4953     06F1  1D03               	skipz
  4954     06F2  2EF9               	goto	u3455
  4955     06F3  0821               	movf	___fldiv@a+1,w
  4956     06F4  022E               	subwf	___fldiv@rem+1,w
  4957     06F5  1D03               	skipz
  4958     06F6  2EF9               	goto	u3455
  4959     06F7  0820               	movf	___fldiv@a,w
  4960     06F8  022D               	subwf	___fldiv@rem,w
  4961     06F9                     u3455:
  4962     06F9  1C03               	skipc
  4963     06FA  2EFC               	goto	u3451
  4964     06FB  2EFD               	goto	u3450
  4965     06FC                     u3451:
  4966     06FC  2F0C               	goto	l2855
  4967     06FD                     u3450:
  4968     06FD                     l2851:
  4969     06FD  1737               	bsf	___fldiv@grs+3,6
  4970     06FE                     l2853:
  4971     06FE  0820               	movf	___fldiv@a,w
  4972     06FF  02AD               	subwf	___fldiv@rem,f
  4973     0700  0821               	movf	___fldiv@a+1,w
  4974     0701  1C03               	skipc
  4975     0702  0F21               	incfsz	___fldiv@a+1,w
  4976     0703  02AE               	subwf	___fldiv@rem+1,f
  4977     0704  0822               	movf	___fldiv@a+2,w
  4978     0705  1C03               	skipc
  4979     0706  0F22               	incfsz	___fldiv@a+2,w
  4980     0707  02AF               	subwf	___fldiv@rem+2,f
  4981     0708  0823               	movf	___fldiv@a+3,w
  4982     0709  1C03               	skipc
  4983     070A  0F23               	incfsz	___fldiv@a+3,w
  4984     070B  02B0               	subwf	___fldiv@rem+3,f
  4985     070C                     l2855:
  4986     070C  3001               	movlw	1
  4987     070D  00FF               	movwf	btemp+1
  4988     070E  087F               	movf	btemp+1,w
  4989     070F  07B9               	addwf	___fldiv@aexp,f
  4990     0710                     l2857:
  4991     0710  301A               	movlw	26
  4992     0711  0239               	subwf	___fldiv@aexp,w
  4993     0712  1C03               	skipc
  4994     0713  2F15               	goto	u3461
  4995     0714  2F16               	goto	u3460
  4996     0715                     u3461:
  4997     0715  2EC6               	goto	l2839
  4998     0716                     u3460:
  4999     0716                     l2859:
  5000     0716  0830               	movf	___fldiv@rem+3,w
  5001     0717  042F               	iorwf	___fldiv@rem+2,w
  5002     0718  042E               	iorwf	___fldiv@rem+1,w
  5003     0719  042D               	iorwf	___fldiv@rem,w
  5004     071A  1903               	skipnz
  5005     071B  2F1D               	goto	u3471
  5006     071C  2F1E               	goto	u3470
  5007     071D                     u3471:
  5008     071D  2F3D               	goto	l2873
  5009     071E                     u3470:
  5010     071E                     l2861:
  5011     071E  1434               	bsf	___fldiv@grs,0
  5012     071F  2F3D               	goto	l2873
  5013     0720                     l2863:
  5014     0720  3001               	movlw	1
  5015     0721  00A8               	movwf	??___fldiv
  5016     0722                     u3485:
  5017     0722  1003               	clrc
  5018     0723  0DA4               	rlf	___fldiv@b,f
  5019     0724  0DA5               	rlf	___fldiv@b+1,f
  5020     0725  0DA6               	rlf	___fldiv@b+2,f
  5021     0726  0DA7               	rlf	___fldiv@b+3,f
  5022     0727  0BA8               	decfsz	??___fldiv,f
  5023     0728  2F22               	goto	u3485
  5024     0729                     l2865:
  5025     0729  1FB7               	btfss	___fldiv@grs+3,7
  5026     072A  2F2C               	goto	u3491
  5027     072B  2F2D               	goto	u3490
  5028     072C                     u3491:
  5029     072C  2F2E               	goto	l2869
  5030     072D                     u3490:
  5031     072D                     l2867:
  5032     072D  1424               	bsf	___fldiv@b,0
  5033     072E                     l2869:
  5034     072E  3001               	movlw	1
  5035     072F  00A8               	movwf	??___fldiv
  5036     0730                     u3505:
  5037     0730  1003               	clrc
  5038     0731  0DB4               	rlf	___fldiv@grs,f
  5039     0732  0DB5               	rlf	___fldiv@grs+1,f
  5040     0733  0DB6               	rlf	___fldiv@grs+2,f
  5041     0734  0DB7               	rlf	___fldiv@grs+3,f
  5042     0735  0BA8               	decfsz	??___fldiv,f
  5043     0736  2F30               	goto	u3505
  5044     0737                     l2871:
  5045     0737  30FF               	movlw	255
  5046     0738  07B2               	addwf	___fldiv@new_exp,f
  5047     0739  1803               	skipnc
  5048     073A  0AB3               	incf	___fldiv@new_exp+1,f
  5049     073B  30FF               	movlw	255
  5050     073C  07B3               	addwf	___fldiv@new_exp+1,f
  5051     073D                     l2873:
  5052     073D  1FA6               	btfss	___fldiv@b+2,7
  5053     073E  2F40               	goto	u3511
  5054     073F  2F41               	goto	u3510
  5055     0740                     u3511:
  5056     0740  2F20               	goto	l2863
  5057     0741                     u3510:
  5058     0741                     l2875:
  5059     0741  01B9               	clrf	___fldiv@aexp
  5060     0742                     l2877:
  5061     0742  1FB7               	btfss	___fldiv@grs+3,7
  5062     0743  2F45               	goto	u3521
  5063     0744  2F46               	goto	u3520
  5064     0745                     u3521:
  5065     0745  2F62               	goto	l2885
  5066     0746                     u3520:
  5067     0746                     l2879:
  5068     0746  30FF               	movlw	255
  5069     0747  0534               	andwf	___fldiv@grs,w
  5070     0748  00A8               	movwf	??___fldiv
  5071     0749  30FF               	movlw	255
  5072     074A  0535               	andwf	___fldiv@grs+1,w
  5073     074B  00A9               	movwf	??___fldiv+1
  5074     074C  30FF               	movlw	255
  5075     074D  0536               	andwf	___fldiv@grs+2,w
  5076     074E  00AA               	movwf	??___fldiv+2
  5077     074F  307F               	movlw	127
  5078     0750  0537               	andwf	___fldiv@grs+3,w
  5079     0751  00AB               	movwf	??___fldiv+3
  5080     0752  082B               	movf	??___fldiv+3,w
  5081     0753  042A               	iorwf	??___fldiv+2,w
  5082     0754  0429               	iorwf	??___fldiv+1,w
  5083     0755  0428               	iorwf	??___fldiv,w
  5084     0756  1903               	skipnz
  5085     0757  2F59               	goto	u3531
  5086     0758  2F5A               	goto	u3530
  5087     0759                     u3531:
  5088     0759  2F5D               	goto	l795
  5089     075A                     u3530:
  5090     075A                     l2881:
  5091     075A  01B9               	clrf	___fldiv@aexp
  5092     075B  0AB9               	incf	___fldiv@aexp,f
  5093     075C  2F62               	goto	l2885
  5094     075D                     l795:
  5095     075D  1C24               	btfss	___fldiv@b,0
  5096     075E  2F60               	goto	u3541
  5097     075F  2F61               	goto	u3540
  5098     0760                     u3541:
  5099     0760  2F62               	goto	l2885
  5100     0761                     u3540:
  5101     0761  2F5A               	goto	l2881
  5102     0762                     l2885:
  5103     0762  0839               	movf	___fldiv@aexp,w
  5104     0763  1903               	btfsc	3,2
  5105     0764  2F66               	goto	u3551
  5106     0765  2F67               	goto	u3550
  5107     0766                     u3551:
  5108     0766  2F98               	goto	l2895
  5109     0767                     u3550:
  5110     0767                     l2887:
  5111     0767  3001               	movlw	1
  5112     0768  07A4               	addwf	___fldiv@b,f
  5113     0769  3000               	movlw	0
  5114     076A  1803               	skipnc
  5115     076B  3001               	movlw	1
  5116     076C  07A5               	addwf	___fldiv@b+1,f
  5117     076D  3000               	movlw	0
  5118     076E  1803               	skipnc
  5119     076F  3001               	movlw	1
  5120     0770  07A6               	addwf	___fldiv@b+2,f
  5121     0771  3000               	movlw	0
  5122     0772  1803               	skipnc
  5123     0773  3001               	movlw	1
  5124     0774  07A7               	addwf	___fldiv@b+3,f
  5125     0775                     l2889:
  5126     0775  1C27               	btfss	___fldiv@b+3,0
  5127     0776  2F78               	goto	u3561
  5128     0777  2F79               	goto	u3560
  5129     0778                     u3561:
  5130     0778  2F98               	goto	l2895
  5131     0779                     u3560:
  5132     0779                     l2891:
  5133     0779  0824               	movf	___fldiv@b,w
  5134     077A  00A8               	movwf	??___fldiv
  5135     077B  0825               	movf	___fldiv@b+1,w
  5136     077C  00A9               	movwf	??___fldiv+1
  5137     077D  0826               	movf	___fldiv@b+2,w
  5138     077E  00AA               	movwf	??___fldiv+2
  5139     077F  0827               	movf	___fldiv@b+3,w
  5140     0780  00AB               	movwf	??___fldiv+3
  5141     0781  3001               	movlw	1
  5142     0782  00AC               	movwf	??___fldiv+4
  5143     0783                     u3575:
  5144     0783  0D2B               	rlf	??___fldiv+3,w
  5145     0784  0CAB               	rrf	??___fldiv+3,f
  5146     0785  0CAA               	rrf	??___fldiv+2,f
  5147     0786  0CA9               	rrf	??___fldiv+1,f
  5148     0787  0CA8               	rrf	??___fldiv,f
  5149     0788                     u3570:
  5150     0788  0BAC               	decfsz	??___fldiv+4,f
  5151     0789  2F83               	goto	u3575
  5152     078A  082B               	movf	??___fldiv+3,w
  5153     078B  00A7               	movwf	___fldiv@b+3
  5154     078C  082A               	movf	??___fldiv+2,w
  5155     078D  00A6               	movwf	___fldiv@b+2
  5156     078E  0829               	movf	??___fldiv+1,w
  5157     078F  00A5               	movwf	___fldiv@b+1
  5158     0790  0828               	movf	??___fldiv,w
  5159     0791  00A4               	movwf	___fldiv@b
  5160     0792                     l2893:
  5161     0792  3001               	movlw	1
  5162     0793  07B2               	addwf	___fldiv@new_exp,f
  5163     0794  1803               	skipnc
  5164     0795  0AB3               	incf	___fldiv@new_exp+1,f
  5165     0796  3000               	movlw	0
  5166     0797  07B3               	addwf	___fldiv@new_exp+1,f
  5167     0798                     l2895:
  5168     0798  0833               	movf	___fldiv@new_exp+1,w
  5169     0799  3A80               	xorlw	128
  5170     079A  00FF               	movwf	btemp+1
  5171     079B  3080               	movlw	128
  5172     079C  027F               	subwf	btemp+1,w
  5173     079D  1D03               	skipz
  5174     079E  2FA1               	goto	u3585
  5175     079F  30FF               	movlw	255
  5176     07A0  0232               	subwf	___fldiv@new_exp,w
  5177     07A1                     u3585:
  5178     07A1  1C03               	skipc
  5179     07A2  2FA4               	goto	u3581
  5180     07A3  2FA5               	goto	u3580
  5181     07A4                     u3581:
  5182     07A4  2FB3               	goto	l2899
  5183     07A5                     u3580:
  5184     07A5                     l2897:
  5185     07A5  30FF               	movlw	255
  5186     07A6  1283               	bcf	3,5	;RP0=0, select bank0
  5187     07A7  1303               	bcf	3,6	;RP1=0, select bank0
  5188     07A8  00B2               	movwf	___fldiv@new_exp
  5189     07A9  3000               	movlw	0
  5190     07AA  00B3               	movwf	___fldiv@new_exp+1
  5191     07AB  3000               	movlw	0
  5192     07AC  00A7               	movwf	___fldiv@b+3
  5193     07AD  3000               	movlw	0
  5194     07AE  00A6               	movwf	___fldiv@b+2
  5195     07AF  3000               	movlw	0
  5196     07B0  00A5               	movwf	___fldiv@b+1
  5197     07B1  3000               	movlw	0
  5198     07B2  00A4               	movwf	___fldiv@b
  5199     07B3                     l2899:
  5200     07B3  1283               	bcf	3,5	;RP0=0, select bank0
  5201     07B4  1303               	bcf	3,6	;RP1=0, select bank0
  5202     07B5  0833               	movf	___fldiv@new_exp+1,w
  5203     07B6  3A80               	xorlw	128
  5204     07B7  00FF               	movwf	btemp+1
  5205     07B8  3080               	movlw	128
  5206     07B9  027F               	subwf	btemp+1,w
  5207     07BA  1D03               	skipz
  5208     07BB  2FBE               	goto	u3595
  5209     07BC  3001               	movlw	1
  5210     07BD  0232               	subwf	___fldiv@new_exp,w
  5211     07BE                     u3595:
  5212     07BE  1803               	skipnc
  5213     07BF  2FC1               	goto	u3591
  5214     07C0  2FC2               	goto	u3590
  5215     07C1                     u3591:
  5216     07C1  2FCF               	goto	l801
  5217     07C2                     u3590:
  5218     07C2                     l2901:
  5219     07C2  1283               	bcf	3,5	;RP0=0, select bank0
  5220     07C3  1303               	bcf	3,6	;RP1=0, select bank0
  5221     07C4  01B2               	clrf	___fldiv@new_exp
  5222     07C5  01B3               	clrf	___fldiv@new_exp+1
  5223     07C6                     l2903:
  5224     07C6  3000               	movlw	0
  5225     07C7  00A7               	movwf	___fldiv@b+3
  5226     07C8  3000               	movlw	0
  5227     07C9  00A6               	movwf	___fldiv@b+2
  5228     07CA  3000               	movlw	0
  5229     07CB  00A5               	movwf	___fldiv@b+1
  5230     07CC  3000               	movlw	0
  5231     07CD  00A4               	movwf	___fldiv@b
  5232     07CE                     l2905:
  5233     07CE  01B1               	clrf	___fldiv@sign
  5234     07CF                     l801:
  5235     07CF  1283               	bcf	3,5	;RP0=0, select bank0
  5236     07D0  1303               	bcf	3,6	;RP1=0, select bank0
  5237     07D1  0832               	movf	___fldiv@new_exp,w
  5238     07D2  00B8               	movwf	___fldiv@bexp
  5239     07D3                     l2907:
  5240     07D3  1C38               	btfss	___fldiv@bexp,0
  5241     07D4  2FD6               	goto	u3601
  5242     07D5  2FD7               	goto	u3600
  5243     07D6                     u3601:
  5244     07D6  2FD9               	goto	l2911
  5245     07D7                     u3600:
  5246     07D7                     l2909:
  5247     07D7  17A6               	bsf	___fldiv@b+2,7
  5248     07D8  2FDD               	goto	l2913
  5249     07D9                     l2911:
  5250     07D9  307F               	movlw	127
  5251     07DA  00FF               	movwf	btemp+1
  5252     07DB  087F               	movf	btemp+1,w
  5253     07DC  05A6               	andwf	___fldiv@b+2,f
  5254     07DD                     l2913:
  5255     07DD  0838               	movf	___fldiv@bexp,w
  5256     07DE  00A8               	movwf	??___fldiv
  5257     07DF  1003               	clrc
  5258     07E0  0C28               	rrf	??___fldiv,w
  5259     07E1  00A7               	movwf	___fldiv@b+3
  5260     07E2  2E7F               	goto	l2817
  5261     07E3                     l781:
  5262     07E3  0008               	return
  5263     07E4                     __end_of___fldiv:
  5264                           
  5265                           	psect	text12
  5266     12FE                     __ptext12:	
  5267 ;; *************** function ___awmod *****************
  5268 ;; Defined at:
  5269 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
  5270 ;; Parameters:    Size  Location     Type
  5271 ;;  divisor         2   10[BANK0 ] int 
  5272 ;;  dividend        2   12[BANK0 ] int 
  5273 ;; Auto vars:     Size  Location     Type
  5274 ;;  sign            1   15[BANK0 ] unsigned char 
  5275 ;;  counter         1   14[BANK0 ] unsigned char 
  5276 ;; Return value:  Size  Location     Type
  5277 ;;                  2   10[BANK0 ] int 
  5278 ;; Registers used:
  5279 ;;		wreg, status,2, status,0, btemp+1
  5280 ;; Tracked objects:
  5281 ;;		On entry : 0/0
  5282 ;;		On exit  : 0/0
  5283 ;;		Unchanged: 0/0
  5284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5285 ;;      Params:         0       4       0       0       0
  5286 ;;      Locals:         0       2       0       0       0
  5287 ;;      Temps:          0       0       0       0       0
  5288 ;;      Totals:         0       6       0       0       0
  5289 ;;Total ram usage:        6 bytes
  5290 ;; Hardware stack levels used: 1
  5291 ;; Hardware stack levels required when called: 2
  5292 ;; This function calls:
  5293 ;;		Nothing
  5294 ;; This function is called by:
  5295 ;;		_main
  5296 ;; This function uses a non-reentrant model
  5297 ;;
  5298                           
  5299     12FE                     ___awmod:	
  5300                           ;psect for function ___awmod
  5301                           
  5302     12FE                     l4043:	
  5303                           ;incstack = 0
  5304                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  5305                           
  5306     12FE  1283               	bcf	3,5	;RP0=0, select bank0
  5307     12FF  1303               	bcf	3,6	;RP1=0, select bank0
  5308     1300  01AF               	clrf	___awmod@sign
  5309     1301                     l4045:
  5310     1301  1FAD               	btfss	___awmod@dividend+1,7
  5311     1302  2B04               	goto	u5491
  5312     1303  2B05               	goto	u5490
  5313     1304                     u5491:
  5314     1304  2B0C               	goto	l4051
  5315     1305                     u5490:
  5316     1305                     l4047:
  5317     1305  09AC               	comf	___awmod@dividend,f
  5318     1306  09AD               	comf	___awmod@dividend+1,f
  5319     1307  0AAC               	incf	___awmod@dividend,f
  5320     1308  1903               	skipnz
  5321     1309  0AAD               	incf	___awmod@dividend+1,f
  5322     130A                     l4049:
  5323     130A  01AF               	clrf	___awmod@sign
  5324     130B  0AAF               	incf	___awmod@sign,f
  5325     130C                     l4051:
  5326     130C  1FAB               	btfss	___awmod@divisor+1,7
  5327     130D  2B0F               	goto	u5501
  5328     130E  2B10               	goto	u5500
  5329     130F                     u5501:
  5330     130F  2B15               	goto	l4055
  5331     1310                     u5500:
  5332     1310                     l4053:
  5333     1310  09AA               	comf	___awmod@divisor,f
  5334     1311  09AB               	comf	___awmod@divisor+1,f
  5335     1312  0AAA               	incf	___awmod@divisor,f
  5336     1313  1903               	skipnz
  5337     1314  0AAB               	incf	___awmod@divisor+1,f
  5338     1315                     l4055:
  5339     1315  082A               	movf	___awmod@divisor,w
  5340     1316  042B               	iorwf	___awmod@divisor+1,w
  5341     1317  1903               	btfsc	3,2
  5342     1318  2B1A               	goto	u5511
  5343     1319  2B1B               	goto	u5510
  5344     131A                     u5511:
  5345     131A  2B4A               	goto	l4073
  5346     131B                     u5510:
  5347     131B                     l4057:
  5348     131B  01AE               	clrf	___awmod@counter
  5349     131C  0AAE               	incf	___awmod@counter,f
  5350     131D  2B29               	goto	l4063
  5351     131E                     l4059:
  5352     131E  3001               	movlw	1
  5353     131F                     u5525:
  5354     131F  1003               	clrc
  5355     1320  0DAA               	rlf	___awmod@divisor,f
  5356     1321  0DAB               	rlf	___awmod@divisor+1,f
  5357     1322  3EFF               	addlw	-1
  5358     1323  1D03               	skipz
  5359     1324  2B1F               	goto	u5525
  5360     1325                     l4061:
  5361     1325  3001               	movlw	1
  5362     1326  00FF               	movwf	btemp+1
  5363     1327  087F               	movf	btemp+1,w
  5364     1328  07AE               	addwf	___awmod@counter,f
  5365     1329                     l4063:
  5366     1329  1FAB               	btfss	___awmod@divisor+1,7
  5367     132A  2B2C               	goto	u5531
  5368     132B  2B2D               	goto	u5530
  5369     132C                     u5531:
  5370     132C  2B1E               	goto	l4059
  5371     132D                     u5530:
  5372     132D                     l4065:
  5373     132D  082B               	movf	___awmod@divisor+1,w
  5374     132E  022D               	subwf	___awmod@dividend+1,w
  5375     132F  1D03               	skipz
  5376     1330  2B33               	goto	u5545
  5377     1331  082A               	movf	___awmod@divisor,w
  5378     1332  022C               	subwf	___awmod@dividend,w
  5379     1333                     u5545:
  5380     1333  1C03               	skipc
  5381     1334  2B36               	goto	u5541
  5382     1335  2B37               	goto	u5540
  5383     1336                     u5541:
  5384     1336  2B3D               	goto	l4069
  5385     1337                     u5540:
  5386     1337                     l4067:
  5387     1337  082A               	movf	___awmod@divisor,w
  5388     1338  02AC               	subwf	___awmod@dividend,f
  5389     1339  082B               	movf	___awmod@divisor+1,w
  5390     133A  1C03               	skipc
  5391     133B  03AD               	decf	___awmod@dividend+1,f
  5392     133C  02AD               	subwf	___awmod@dividend+1,f
  5393     133D                     l4069:
  5394     133D  3001               	movlw	1
  5395     133E                     u5555:
  5396     133E  1003               	clrc
  5397     133F  0CAB               	rrf	___awmod@divisor+1,f
  5398     1340  0CAA               	rrf	___awmod@divisor,f
  5399     1341  3EFF               	addlw	-1
  5400     1342  1D03               	skipz
  5401     1343  2B3E               	goto	u5555
  5402     1344                     l4071:
  5403     1344  3001               	movlw	1
  5404     1345  02AE               	subwf	___awmod@counter,f
  5405     1346  1D03               	btfss	3,2
  5406     1347  2B49               	goto	u5561
  5407     1348  2B4A               	goto	u5560
  5408     1349                     u5561:
  5409     1349  2B2D               	goto	l4065
  5410     134A                     u5560:
  5411     134A                     l4073:
  5412     134A  082F               	movf	___awmod@sign,w
  5413     134B  1903               	btfsc	3,2
  5414     134C  2B4E               	goto	u5571
  5415     134D  2B4F               	goto	u5570
  5416     134E                     u5571:
  5417     134E  2B54               	goto	l4077
  5418     134F                     u5570:
  5419     134F                     l4075:
  5420     134F  09AC               	comf	___awmod@dividend,f
  5421     1350  09AD               	comf	___awmod@dividend+1,f
  5422     1351  0AAC               	incf	___awmod@dividend,f
  5423     1352  1903               	skipnz
  5424     1353  0AAD               	incf	___awmod@dividend+1,f
  5425     1354                     l4077:
  5426     1354  082D               	movf	___awmod@dividend+1,w
  5427     1355  00AB               	movwf	?___awmod+1
  5428     1356  082C               	movf	___awmod@dividend,w
  5429     1357  00AA               	movwf	?___awmod
  5430     1358                     l596:
  5431     1358  0008               	return
  5432     1359                     __end_of___awmod:
  5433                           
  5434                           	psect	text13
  5435     13BC                     __ptext13:	
  5436 ;; *************** function ___awdiv *****************
  5437 ;; Defined at:
  5438 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  5439 ;; Parameters:    Size  Location     Type
  5440 ;;  divisor         2   10[BANK0 ] int 
  5441 ;;  dividend        2   12[BANK0 ] int 
  5442 ;; Auto vars:     Size  Location     Type
  5443 ;;  quotient        2   16[BANK0 ] int 
  5444 ;;  sign            1   15[BANK0 ] unsigned char 
  5445 ;;  counter         1   14[BANK0 ] unsigned char 
  5446 ;; Return value:  Size  Location     Type
  5447 ;;                  2   10[BANK0 ] int 
  5448 ;; Registers used:
  5449 ;;		wreg, status,2, status,0, btemp+1
  5450 ;; Tracked objects:
  5451 ;;		On entry : 0/0
  5452 ;;		On exit  : 0/0
  5453 ;;		Unchanged: 0/0
  5454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5455 ;;      Params:         0       4       0       0       0
  5456 ;;      Locals:         0       4       0       0       0
  5457 ;;      Temps:          0       0       0       0       0
  5458 ;;      Totals:         0       8       0       0       0
  5459 ;;Total ram usage:        8 bytes
  5460 ;; Hardware stack levels used: 1
  5461 ;; Hardware stack levels required when called: 2
  5462 ;; This function calls:
  5463 ;;		Nothing
  5464 ;; This function is called by:
  5465 ;;		_main
  5466 ;; This function uses a non-reentrant model
  5467 ;;
  5468                           
  5469     13BC                     ___awdiv:	
  5470                           ;psect for function ___awdiv
  5471                           
  5472     13BC                     l3999:	
  5473                           ;incstack = 0
  5474                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  5475                           
  5476     13BC  1283               	bcf	3,5	;RP0=0, select bank0
  5477     13BD  1303               	bcf	3,6	;RP1=0, select bank0
  5478     13BE  01AF               	clrf	___awdiv@sign
  5479     13BF                     l4001:
  5480     13BF  1FAB               	btfss	___awdiv@divisor+1,7
  5481     13C0  2BC2               	goto	u5391
  5482     13C1  2BC3               	goto	u5390
  5483     13C2                     u5391:
  5484     13C2  2BCA               	goto	l4007
  5485     13C3                     u5390:
  5486     13C3                     l4003:
  5487     13C3  09AA               	comf	___awdiv@divisor,f
  5488     13C4  09AB               	comf	___awdiv@divisor+1,f
  5489     13C5  0AAA               	incf	___awdiv@divisor,f
  5490     13C6  1903               	skipnz
  5491     13C7  0AAB               	incf	___awdiv@divisor+1,f
  5492     13C8                     l4005:
  5493     13C8  01AF               	clrf	___awdiv@sign
  5494     13C9  0AAF               	incf	___awdiv@sign,f
  5495     13CA                     l4007:
  5496     13CA  1FAD               	btfss	___awdiv@dividend+1,7
  5497     13CB  2BCD               	goto	u5401
  5498     13CC  2BCE               	goto	u5400
  5499     13CD                     u5401:
  5500     13CD  2BD7               	goto	l4013
  5501     13CE                     u5400:
  5502     13CE                     l4009:
  5503     13CE  09AC               	comf	___awdiv@dividend,f
  5504     13CF  09AD               	comf	___awdiv@dividend+1,f
  5505     13D0  0AAC               	incf	___awdiv@dividend,f
  5506     13D1  1903               	skipnz
  5507     13D2  0AAD               	incf	___awdiv@dividend+1,f
  5508     13D3                     l4011:
  5509     13D3  3001               	movlw	1
  5510     13D4  00FF               	movwf	btemp+1
  5511     13D5  087F               	movf	btemp+1,w
  5512     13D6  06AF               	xorwf	___awdiv@sign,f
  5513     13D7                     l4013:
  5514     13D7  01B0               	clrf	___awdiv@quotient
  5515     13D8  01B1               	clrf	___awdiv@quotient+1
  5516     13D9                     l4015:
  5517     13D9  082A               	movf	___awdiv@divisor,w
  5518     13DA  042B               	iorwf	___awdiv@divisor+1,w
  5519     13DB  1903               	btfsc	3,2
  5520     13DC  2BDE               	goto	u5411
  5521     13DD  2BDF               	goto	u5410
  5522     13DE                     u5411:
  5523     13DE  2C16               	goto	l4035
  5524     13DF                     u5410:
  5525     13DF                     l4017:
  5526     13DF  01AE               	clrf	___awdiv@counter
  5527     13E0  0AAE               	incf	___awdiv@counter,f
  5528     13E1  2BED               	goto	l4023
  5529     13E2                     l4019:
  5530     13E2  3001               	movlw	1
  5531     13E3                     u5425:
  5532     13E3  1003               	clrc
  5533     13E4  0DAA               	rlf	___awdiv@divisor,f
  5534     13E5  0DAB               	rlf	___awdiv@divisor+1,f
  5535     13E6  3EFF               	addlw	-1
  5536     13E7  1D03               	skipz
  5537     13E8  2BE3               	goto	u5425
  5538     13E9                     l4021:
  5539     13E9  3001               	movlw	1
  5540     13EA  00FF               	movwf	btemp+1
  5541     13EB  087F               	movf	btemp+1,w
  5542     13EC  07AE               	addwf	___awdiv@counter,f
  5543     13ED                     l4023:
  5544     13ED  1FAB               	btfss	___awdiv@divisor+1,7
  5545     13EE  2BF0               	goto	u5431
  5546     13EF  2BF1               	goto	u5430
  5547     13F0                     u5431:
  5548     13F0  2BE2               	goto	l4019
  5549     13F1                     u5430:
  5550     13F1                     l4025:
  5551     13F1  3001               	movlw	1
  5552     13F2                     u5445:
  5553     13F2  1003               	clrc
  5554     13F3  0DB0               	rlf	___awdiv@quotient,f
  5555     13F4  0DB1               	rlf	___awdiv@quotient+1,f
  5556     13F5  3EFF               	addlw	-1
  5557     13F6  1D03               	skipz
  5558     13F7  2BF2               	goto	u5445
  5559     13F8  082B               	movf	___awdiv@divisor+1,w
  5560     13F9  022D               	subwf	___awdiv@dividend+1,w
  5561     13FA  1D03               	skipz
  5562     13FB  2BFE               	goto	u5455
  5563     13FC  082A               	movf	___awdiv@divisor,w
  5564     13FD  022C               	subwf	___awdiv@dividend,w
  5565     13FE                     u5455:
  5566     13FE  1C03               	skipc
  5567     13FF  2C01               	goto	u5451
  5568     1400  2C02               	goto	u5450
  5569     1401                     u5451:
  5570     1401  2C09               	goto	l4031
  5571     1402                     u5450:
  5572     1402                     l4027:
  5573     1402  082A               	movf	___awdiv@divisor,w
  5574     1403  02AC               	subwf	___awdiv@dividend,f
  5575     1404  082B               	movf	___awdiv@divisor+1,w
  5576     1405  1C03               	skipc
  5577     1406  03AD               	decf	___awdiv@dividend+1,f
  5578     1407  02AD               	subwf	___awdiv@dividend+1,f
  5579     1408                     l4029:
  5580     1408  1430               	bsf	___awdiv@quotient,0
  5581     1409                     l4031:
  5582     1409  3001               	movlw	1
  5583     140A                     u5465:
  5584     140A  1003               	clrc
  5585     140B  0CAB               	rrf	___awdiv@divisor+1,f
  5586     140C  0CAA               	rrf	___awdiv@divisor,f
  5587     140D  3EFF               	addlw	-1
  5588     140E  1D03               	skipz
  5589     140F  2C0A               	goto	u5465
  5590     1410                     l4033:
  5591     1410  3001               	movlw	1
  5592     1411  02AE               	subwf	___awdiv@counter,f
  5593     1412  1D03               	btfss	3,2
  5594     1413  2C15               	goto	u5471
  5595     1414  2C16               	goto	u5470
  5596     1415                     u5471:
  5597     1415  2BF1               	goto	l4025
  5598     1416                     u5470:
  5599     1416                     l4035:
  5600     1416  082F               	movf	___awdiv@sign,w
  5601     1417  1903               	btfsc	3,2
  5602     1418  2C1A               	goto	u5481
  5603     1419  2C1B               	goto	u5480
  5604     141A                     u5481:
  5605     141A  2C20               	goto	l4039
  5606     141B                     u5480:
  5607     141B                     l4037:
  5608     141B  09B0               	comf	___awdiv@quotient,f
  5609     141C  09B1               	comf	___awdiv@quotient+1,f
  5610     141D  0AB0               	incf	___awdiv@quotient,f
  5611     141E  1903               	skipnz
  5612     141F  0AB1               	incf	___awdiv@quotient+1,f
  5613     1420                     l4039:
  5614     1420  0831               	movf	___awdiv@quotient+1,w
  5615     1421  00AB               	movwf	?___awdiv+1
  5616     1422  0830               	movf	___awdiv@quotient,w
  5617     1423  00AA               	movwf	?___awdiv
  5618     1424                     l583:
  5619     1424  0008               	return
  5620     1425                     __end_of___awdiv:
  5621                           
  5622                           	psect	text14
  5623     118C                     __ptext14:	
  5624 ;; *************** function _UART_Write_Text *****************
  5625 ;; Defined at:
  5626 ;;		line 18 in file "uart_lib.c"
  5627 ;; Parameters:    Size  Location     Type
  5628 ;;  text            2    1[BANK0 ] PTR unsigned char 
  5629 ;;		 -> STR_41(5), STR_40(5), STR_37(5), main@combinedText_378(20), 
  5630 ;;		 -> main@uartMessage_374(8), STR_31(5), main@combinedText(20), main@uartMessage(8), 
  5631 ;;		 -> STR_25(5), 
  5632 ;; Auto vars:     Size  Location     Type
  5633 ;;  i               2    6[BANK0 ] int 
  5634 ;; Return value:  Size  Location     Type
  5635 ;;                  1    wreg      void 
  5636 ;; Registers used:
  5637 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5638 ;; Tracked objects:
  5639 ;;		On entry : 0/0
  5640 ;;		On exit  : 0/0
  5641 ;;		Unchanged: 0/0
  5642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5643 ;;      Params:         0       2       0       0       0
  5644 ;;      Locals:         0       2       0       0       0
  5645 ;;      Temps:          0       3       0       0       0
  5646 ;;      Totals:         0       7       0       0       0
  5647 ;;Total ram usage:        7 bytes
  5648 ;; Hardware stack levels used: 1
  5649 ;; Hardware stack levels required when called: 3
  5650 ;; This function calls:
  5651 ;;		_UART_Write
  5652 ;; This function is called by:
  5653 ;;		_main
  5654 ;; This function uses a non-reentrant model
  5655 ;;
  5656                           
  5657     118C                     _UART_Write_Text:	
  5658                           ;psect for function _UART_Write_Text
  5659                           
  5660     118C                     l3991:	
  5661                           ;incstack = 0
  5662                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5663                           
  5664                           
  5665                           ;uart_lib.c: 18: void UART_Write_Text(char *text);uart_lib.c: 19: {;uart_lib.c: 20:   in
      +                          t i;;uart_lib.c: 21:   for(i=0;text[i]!='\0';i++)
  5666     118C  1283               	bcf	3,5	;RP0=0, select bank0
  5667     118D  1303               	bcf	3,6	;RP1=0, select bank0
  5668     118E  01A6               	clrf	UART_Write_Text@i
  5669     118F  01A7               	clrf	UART_Write_Text@i+1
  5670     1190  29B5               	goto	l3997
  5671     1191                     l3993:
  5672                           
  5673                           ;uart_lib.c: 22:     UART_Write(text[i]);
  5674     1191  0826               	movf	UART_Write_Text@i,w
  5675     1192  0721               	addwf	UART_Write_Text@text,w
  5676     1193  00A4               	movwf	??_UART_Write_Text+1
  5677     1194  0822               	movf	UART_Write_Text@text+1,w
  5678     1195  00A3               	movwf	??_UART_Write_Text
  5679     1196  1803               	skipnc
  5680     1197  0AA3               	incf	??_UART_Write_Text,f
  5681     1198  1FA6               	btfss	UART_Write_Text@i,7
  5682     1199  299B               	goto	u5360
  5683     119A  03A3               	decf	??_UART_Write_Text,f
  5684     119B                     u5360:
  5685     119B  1283               	bcf	3,5	;RP0=0, select bank0
  5686     119C  1303               	bcf	3,6	;RP1=0, select bank0
  5687     119D  0823               	movf	??_UART_Write_Text,w
  5688     119E  00A5               	movwf	??_UART_Write_Text+2
  5689     119F  0825               	movf	??_UART_Write_Text+2,w
  5690     11A0  00FF               	movwf	btemp+1
  5691     11A1  0824               	movf	??_UART_Write_Text+1,w
  5692     11A2  0084               	movwf	4
  5693     11A3  160A  158A  2000  160A  118A  	fcall	stringtab
  5694     11A8  160A  118A  2004  160A  118A  	fcall	_UART_Write
  5695     11AD                     l3995:
  5696     11AD  3001               	movlw	1
  5697     11AE  1283               	bcf	3,5	;RP0=0, select bank0
  5698     11AF  1303               	bcf	3,6	;RP1=0, select bank0
  5699     11B0  07A6               	addwf	UART_Write_Text@i,f
  5700     11B1  1803               	skipnc
  5701     11B2  0AA7               	incf	UART_Write_Text@i+1,f
  5702     11B3  3000               	movlw	0
  5703     11B4  07A7               	addwf	UART_Write_Text@i+1,f
  5704     11B5                     l3997:
  5705     11B5  0826               	movf	UART_Write_Text@i,w
  5706     11B6  0721               	addwf	UART_Write_Text@text,w
  5707     11B7  00A4               	movwf	??_UART_Write_Text+1
  5708     11B8  0822               	movf	UART_Write_Text@text+1,w
  5709     11B9  00A3               	movwf	??_UART_Write_Text
  5710     11BA  1803               	skipnc
  5711     11BB  0AA3               	incf	??_UART_Write_Text,f
  5712     11BC  1FA6               	btfss	UART_Write_Text@i,7
  5713     11BD  29BF               	goto	u5370
  5714     11BE  03A3               	decf	??_UART_Write_Text,f
  5715     11BF                     u5370:
  5716     11BF  1283               	bcf	3,5	;RP0=0, select bank0
  5717     11C0  1303               	bcf	3,6	;RP1=0, select bank0
  5718     11C1  0823               	movf	??_UART_Write_Text,w
  5719     11C2  00A5               	movwf	??_UART_Write_Text+2
  5720     11C3  0825               	movf	??_UART_Write_Text+2,w
  5721     11C4  00FF               	movwf	btemp+1
  5722     11C5  0824               	movf	??_UART_Write_Text+1,w
  5723     11C6  0084               	movwf	4
  5724     11C7  160A  158A  2000  160A  118A  	fcall	stringtab
  5725     11CC  3A00               	xorlw	0
  5726     11CD  1D03               	skipz
  5727     11CE  29D0               	goto	u5381
  5728     11CF  29D1               	goto	u5380
  5729     11D0                     u5381:
  5730     11D0  2991               	goto	l3993
  5731     11D1                     u5380:
  5732     11D1                     l290:
  5733     11D1  0008               	return
  5734     11D2                     __end_of_UART_Write_Text:
  5735                           
  5736                           	psect	text15
  5737     1004                     __ptext15:	
  5738 ;; *************** function _UART_Write *****************
  5739 ;; Defined at:
  5740 ;;		line 12 in file "uart_lib.c"
  5741 ;; Parameters:    Size  Location     Type
  5742 ;;  data            1    wreg     unsigned char 
  5743 ;; Auto vars:     Size  Location     Type
  5744 ;;  data            1    0[BANK0 ] unsigned char 
  5745 ;; Return value:  Size  Location     Type
  5746 ;;                  1    wreg      void 
  5747 ;; Registers used:
  5748 ;;		wreg
  5749 ;; Tracked objects:
  5750 ;;		On entry : 0/0
  5751 ;;		On exit  : 0/0
  5752 ;;		Unchanged: 0/0
  5753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5754 ;;      Params:         0       0       0       0       0
  5755 ;;      Locals:         0       1       0       0       0
  5756 ;;      Temps:          0       0       0       0       0
  5757 ;;      Totals:         0       1       0       0       0
  5758 ;;Total ram usage:        1 bytes
  5759 ;; Hardware stack levels used: 1
  5760 ;; Hardware stack levels required when called: 2
  5761 ;; This function calls:
  5762 ;;		Nothing
  5763 ;; This function is called by:
  5764 ;;		_UART_Write_Text
  5765 ;; This function uses a non-reentrant model
  5766 ;;
  5767                           
  5768     1004                     _UART_Write:	
  5769                           ;psect for function _UART_Write
  5770                           
  5771                           
  5772                           ;incstack = 0
  5773                           ; Regs used in _UART_Write: [wreg]
  5774                           ;UART_Write@data stored from wreg
  5775     1004  1283               	bcf	3,5	;RP0=0, select bank0
  5776     1005  1303               	bcf	3,6	;RP1=0, select bank0
  5777     1006  00A0               	movwf	UART_Write@data
  5778     1007                     l3745:
  5779     1007                     l281:	
  5780                           ;uart_lib.c: 12: void UART_Write(char data);uart_lib.c: 13: {;uart_lib.c: 14:   while(!T
      +                          RMT);
  5781                           
  5782     1007  1683               	bsf	3,5	;RP0=1, select bank1
  5783     1008  1303               	bcf	3,6	;RP1=0, select bank1
  5784     1009  1C98               	btfss	24,1	;volatile
  5785     100A  280C               	goto	u4901
  5786     100B  280D               	goto	u4900
  5787     100C                     u4901:
  5788     100C  2807               	goto	l281
  5789     100D                     u4900:
  5790     100D                     l3747:
  5791                           
  5792                           ;uart_lib.c: 15:   TXREG = data;
  5793     100D  1283               	bcf	3,5	;RP0=0, select bank0
  5794     100E  1303               	bcf	3,6	;RP1=0, select bank0
  5795     100F  0820               	movf	UART_Write@data,w
  5796     1010  0099               	movwf	25	;volatile
  5797     1011                     l284:
  5798     1011  0008               	return
  5799     1012                     __end_of_UART_Write:
  5800                           
  5801                           	psect	text16
  5802     1012                     __ptext16:	
  5803 ;; *************** function _UART_Initialize *****************
  5804 ;; Defined at:
  5805 ;;		line 4 in file "uart_lib.c"
  5806 ;; Parameters:    Size  Location     Type
  5807 ;;		None
  5808 ;; Auto vars:     Size  Location     Type
  5809 ;;		None
  5810 ;; Return value:  Size  Location     Type
  5811 ;;                  1    wreg      void 
  5812 ;; Registers used:
  5813 ;;		wreg, status,2
  5814 ;; Tracked objects:
  5815 ;;		On entry : 0/0
  5816 ;;		On exit  : 0/0
  5817 ;;		Unchanged: 0/0
  5818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5819 ;;      Params:         0       0       0       0       0
  5820 ;;      Locals:         0       0       0       0       0
  5821 ;;      Temps:          0       0       0       0       0
  5822 ;;      Totals:         0       0       0       0       0
  5823 ;;Total ram usage:        0 bytes
  5824 ;; Hardware stack levels used: 1
  5825 ;; Hardware stack levels required when called: 2
  5826 ;; This function calls:
  5827 ;;		Nothing
  5828 ;; This function is called by:
  5829 ;;		_main
  5830 ;; This function uses a non-reentrant model
  5831 ;;
  5832                           
  5833     1012                     _UART_Initialize:	
  5834                           ;psect for function _UART_Initialize
  5835                           
  5836     1012                     l3863:	
  5837                           ;incstack = 0
  5838                           ; Regs used in _UART_Initialize: [wreg+status,2]
  5839                           
  5840                           
  5841                           ;uart_lib.c: 6:     TXSTA=0b00100100;
  5842     1012  3024               	movlw	36
  5843     1013  1683               	bsf	3,5	;RP0=1, select bank1
  5844     1014  1303               	bcf	3,6	;RP1=0, select bank1
  5845     1015  0098               	movwf	24	;volatile
  5846                           
  5847                           ;uart_lib.c: 7:     RCSTA=0b10010000;
  5848     1016  3090               	movlw	144
  5849     1017  1283               	bcf	3,5	;RP0=0, select bank0
  5850     1018  1303               	bcf	3,6	;RP1=0, select bank0
  5851     1019  0098               	movwf	24	;volatile
  5852                           
  5853                           ;uart_lib.c: 8:     SPBRG=12;
  5854     101A  300C               	movlw	12
  5855     101B  1683               	bsf	3,5	;RP0=1, select bank1
  5856     101C  1303               	bcf	3,6	;RP1=0, select bank1
  5857     101D  0099               	movwf	25	;volatile
  5858     101E                     l3865:
  5859                           
  5860                           ;uart_lib.c: 9:     TXREG=0x00;
  5861     101E  1283               	bcf	3,5	;RP0=0, select bank0
  5862     101F  1303               	bcf	3,6	;RP1=0, select bank0
  5863     1020  0199               	clrf	25	;volatile
  5864     1021                     l278:
  5865     1021  0008               	return
  5866     1022                     __end_of_UART_Initialize:
  5867                           
  5868                           	psect	text17
  5869     1146                     __ptext17:	
  5870 ;; *************** function _Lcd_Write_String *****************
  5871 ;; Defined at:
  5872 ;;		line 96 in file "./lcd.h"
  5873 ;; Parameters:    Size  Location     Type
  5874 ;;  a               2    5[BANK0 ] PTR unsigned char 
  5875 ;;		 -> STR_43(24), STR_42(24), STR_39(27), STR_38(26), 
  5876 ;;		 -> STR_36(13), STR_34(14), STR_32(10), STR_30(9), 
  5877 ;;		 -> STR_28(15), STR_26(10), STR_24(9), main@rpmString(5), 
  5878 ;;		 -> STR_22(5), main@adcString1(4), STR_20(10), STR_19(3), 
  5879 ;;		 -> main@lcdText(9), STR_17(14), STR_16(19), STR_15(14), 
  5880 ;;		 -> STR_14(19), STR_13(14), STR_12(19), STR_11(14), 
  5881 ;;		 -> STR_10(19), STR_9(14), STR_8(19), STR_7(14), 
  5882 ;;		 -> STR_6(19), STR_5(21), STR_4(20), STR_3(3), 
  5883 ;;		 -> STR_2(15), STR_1(16), 
  5884 ;; Auto vars:     Size  Location     Type
  5885 ;;  i               2   10[BANK0 ] int 
  5886 ;; Return value:  Size  Location     Type
  5887 ;;                  1    wreg      void 
  5888 ;; Registers used:
  5889 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5890 ;; Tracked objects:
  5891 ;;		On entry : 0/0
  5892 ;;		On exit  : 0/0
  5893 ;;		Unchanged: 0/0
  5894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5895 ;;      Params:         0       2       0       0       0
  5896 ;;      Locals:         0       2       0       0       0
  5897 ;;      Temps:          0       3       0       0       0
  5898 ;;      Totals:         0       7       0       0       0
  5899 ;;Total ram usage:        7 bytes
  5900 ;; Hardware stack levels used: 1
  5901 ;; Hardware stack levels required when called: 4
  5902 ;; This function calls:
  5903 ;;		_Lcd_Write_Char
  5904 ;; This function is called by:
  5905 ;;		_main
  5906 ;; This function uses a non-reentrant model
  5907 ;;
  5908                           
  5909     1146                     _Lcd_Write_String:	
  5910                           ;psect for function _Lcd_Write_String
  5911                           
  5912     1146                     l3855:	
  5913                           ;incstack = 0
  5914                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5915                           
  5916                           
  5917                           ;./lcd.h: 96: void Lcd_Write_String(char *a);./lcd.h: 97: {;./lcd.h: 98:  int i;;./lcd.h
      +                          : 99:  for(i=0;a[i]!='\0';i++)
  5918     1146  1283               	bcf	3,5	;RP0=0, select bank0
  5919     1147  1303               	bcf	3,6	;RP1=0, select bank0
  5920     1148  01AA               	clrf	Lcd_Write_String@i
  5921     1149  01AB               	clrf	Lcd_Write_String@i+1
  5922     114A  296F               	goto	l3861
  5923     114B                     l3857:
  5924                           
  5925                           ;./lcd.h: 100:     Lcd_Write_Char(a[i]);
  5926     114B  082A               	movf	Lcd_Write_String@i,w
  5927     114C  0725               	addwf	Lcd_Write_String@a,w
  5928     114D  00A8               	movwf	??_Lcd_Write_String+1
  5929     114E  0826               	movf	Lcd_Write_String@a+1,w
  5930     114F  00A7               	movwf	??_Lcd_Write_String
  5931     1150  1803               	skipnc
  5932     1151  0AA7               	incf	??_Lcd_Write_String,f
  5933     1152  1FAA               	btfss	Lcd_Write_String@i,7
  5934     1153  2955               	goto	u5140
  5935     1154  03A7               	decf	??_Lcd_Write_String,f
  5936     1155                     u5140:
  5937     1155  1283               	bcf	3,5	;RP0=0, select bank0
  5938     1156  1303               	bcf	3,6	;RP1=0, select bank0
  5939     1157  0827               	movf	??_Lcd_Write_String,w
  5940     1158  00A9               	movwf	??_Lcd_Write_String+2
  5941     1159  0829               	movf	??_Lcd_Write_String+2,w
  5942     115A  00FF               	movwf	btemp+1
  5943     115B  0828               	movf	??_Lcd_Write_String+1,w
  5944     115C  0084               	movwf	4
  5945     115D  160A  158A  2000  160A  118A  	fcall	stringtab
  5946     1162  160A  118A  20D1  160A  118A  	fcall	_Lcd_Write_Char
  5947     1167                     l3859:
  5948     1167  3001               	movlw	1
  5949     1168  1283               	bcf	3,5	;RP0=0, select bank0
  5950     1169  1303               	bcf	3,6	;RP1=0, select bank0
  5951     116A  07AA               	addwf	Lcd_Write_String@i,f
  5952     116B  1803               	skipnc
  5953     116C  0AAB               	incf	Lcd_Write_String@i+1,f
  5954     116D  3000               	movlw	0
  5955     116E  07AB               	addwf	Lcd_Write_String@i+1,f
  5956     116F                     l3861:
  5957     116F  082A               	movf	Lcd_Write_String@i,w
  5958     1170  0725               	addwf	Lcd_Write_String@a,w
  5959     1171  00A8               	movwf	??_Lcd_Write_String+1
  5960     1172  0826               	movf	Lcd_Write_String@a+1,w
  5961     1173  00A7               	movwf	??_Lcd_Write_String
  5962     1174  1803               	skipnc
  5963     1175  0AA7               	incf	??_Lcd_Write_String,f
  5964     1176  1FAA               	btfss	Lcd_Write_String@i,7
  5965     1177  2979               	goto	u5150
  5966     1178  03A7               	decf	??_Lcd_Write_String,f
  5967     1179                     u5150:
  5968     1179  1283               	bcf	3,5	;RP0=0, select bank0
  5969     117A  1303               	bcf	3,6	;RP1=0, select bank0
  5970     117B  0827               	movf	??_Lcd_Write_String,w
  5971     117C  00A9               	movwf	??_Lcd_Write_String+2
  5972     117D  0829               	movf	??_Lcd_Write_String+2,w
  5973     117E  00FF               	movwf	btemp+1
  5974     117F  0828               	movf	??_Lcd_Write_String+1,w
  5975     1180  0084               	movwf	4
  5976     1181  160A  158A  2000  160A  118A  	fcall	stringtab
  5977     1186  3A00               	xorlw	0
  5978     1187  1D03               	skipz
  5979     1188  298A               	goto	u5161
  5980     1189  298B               	goto	u5160
  5981     118A                     u5161:
  5982     118A  294B               	goto	l3857
  5983     118B                     u5160:
  5984     118B                     l145:
  5985     118B  0008               	return
  5986     118C                     __end_of_Lcd_Write_String:
  5987                           
  5988                           	psect	text18
  5989     10D1                     __ptext18:	
  5990 ;; *************** function _Lcd_Write_Char *****************
  5991 ;; Defined at:
  5992 ;;		line 80 in file "./lcd.h"
  5993 ;; Parameters:    Size  Location     Type
  5994 ;;  a               1    wreg     unsigned char 
  5995 ;; Auto vars:     Size  Location     Type
  5996 ;;  a               1    4[BANK0 ] unsigned char 
  5997 ;;  y               1    3[BANK0 ] unsigned char 
  5998 ;;  temp            1    2[BANK0 ] unsigned char 
  5999 ;; Return value:  Size  Location     Type
  6000 ;;                  1    wreg      void 
  6001 ;; Registers used:
  6002 ;;		wreg, status,2, status,0, pclath, cstack
  6003 ;; Tracked objects:
  6004 ;;		On entry : 0/0
  6005 ;;		On exit  : 0/0
  6006 ;;		Unchanged: 0/0
  6007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6008 ;;      Params:         0       0       0       0       0
  6009 ;;      Locals:         0       3       0       0       0
  6010 ;;      Temps:          0       1       0       0       0
  6011 ;;      Totals:         0       4       0       0       0
  6012 ;;Total ram usage:        4 bytes
  6013 ;; Hardware stack levels used: 1
  6014 ;; Hardware stack levels required when called: 3
  6015 ;; This function calls:
  6016 ;;		_Lcd_Port
  6017 ;; This function is called by:
  6018 ;;		_Lcd_Write_String
  6019 ;; This function uses a non-reentrant model
  6020 ;;
  6021                           
  6022     10D1                     _Lcd_Write_Char:	
  6023                           ;psect for function _Lcd_Write_Char
  6024                           
  6025                           
  6026                           ;incstack = 0
  6027                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  6028                           ;Lcd_Write_Char@a stored from wreg
  6029     10D1  1283               	bcf	3,5	;RP0=0, select bank0
  6030     10D2  1303               	bcf	3,6	;RP1=0, select bank0
  6031     10D3  00A4               	movwf	Lcd_Write_Char@a
  6032     10D4                     l3725:
  6033                           
  6034                           ;./lcd.h: 80: void Lcd_Write_Char(char a);./lcd.h: 81: {;./lcd.h: 82:    char temp,y;;./
      +                          lcd.h: 83:    temp = a&0x0F;
  6035     10D4  0824               	movf	Lcd_Write_Char@a,w
  6036     10D5  390F               	andlw	15
  6037     10D6  00A2               	movwf	Lcd_Write_Char@temp
  6038                           
  6039                           ;./lcd.h: 84:    y = a&0xF0;
  6040     10D7  0824               	movf	Lcd_Write_Char@a,w
  6041     10D8  39F0               	andlw	240
  6042     10D9  00A3               	movwf	Lcd_Write_Char@y
  6043     10DA                     l3727:
  6044                           
  6045                           ;./lcd.h: 85:    RB5 = 1;
  6046     10DA  1686               	bsf	6,5	;volatile
  6047     10DB                     l3729:
  6048                           
  6049                           ;./lcd.h: 86:    Lcd_Port(y>>4);
  6050     10DB  0823               	movf	Lcd_Write_Char@y,w
  6051     10DC  00A1               	movwf	??_Lcd_Write_Char
  6052     10DD  3004               	movlw	4
  6053     10DE                     u4895:
  6054     10DE  1003               	clrc
  6055     10DF  0CA1               	rrf	??_Lcd_Write_Char,f
  6056     10E0  3EFF               	addlw	-1
  6057     10E1  1D03               	skipz
  6058     10E2  28DE               	goto	u4895
  6059     10E3  0821               	movf	??_Lcd_Write_Char,w
  6060     10E4  160A  118A  2061  160A  118A  	fcall	_Lcd_Port
  6061     10E9                     l3731:
  6062                           
  6063                           ;./lcd.h: 87:    RB4 = 1;
  6064     10E9  1283               	bcf	3,5	;RP0=0, select bank0
  6065     10EA  1303               	bcf	3,6	;RP1=0, select bank0
  6066     10EB  1606               	bsf	6,4	;volatile
  6067     10EC                     l3733:
  6068                           
  6069                           ;./lcd.h: 88:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  6070     10EC  300C               	movlw	12
  6071     10ED  1283               	bcf	3,5	;RP0=0, select bank0
  6072     10EE  1303               	bcf	3,6	;RP1=0, select bank0
  6073     10EF  00A1               	movwf	??_Lcd_Write_Char
  6074     10F0                     u6367:
  6075     10F0  0BA1               	decfsz	??_Lcd_Write_Char,f
  6076     10F1  28F0               	goto	u6367
  6077     10F2  0000               	nop
  6078     10F3                     l3735:
  6079                           
  6080                           ;./lcd.h: 89:    RB4 = 0;
  6081     10F3  1283               	bcf	3,5	;RP0=0, select bank0
  6082     10F4  1303               	bcf	3,6	;RP1=0, select bank0
  6083     10F5  1206               	bcf	6,4	;volatile
  6084     10F6                     l3737:
  6085                           
  6086                           ;./lcd.h: 90:    Lcd_Port(temp);
  6087     10F6  0822               	movf	Lcd_Write_Char@temp,w
  6088     10F7  160A  118A  2061  160A  118A  	fcall	_Lcd_Port
  6089     10FC                     l3739:
  6090                           
  6091                           ;./lcd.h: 91:    RB4 = 1;
  6092     10FC  1283               	bcf	3,5	;RP0=0, select bank0
  6093     10FD  1303               	bcf	3,6	;RP1=0, select bank0
  6094     10FE  1606               	bsf	6,4	;volatile
  6095     10FF                     l3741:
  6096                           
  6097                           ;./lcd.h: 92:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  6098     10FF  300C               	movlw	12
  6099     1100  1283               	bcf	3,5	;RP0=0, select bank0
  6100     1101  1303               	bcf	3,6	;RP1=0, select bank0
  6101     1102  00A1               	movwf	??_Lcd_Write_Char
  6102     1103                     u6377:
  6103     1103  0BA1               	decfsz	??_Lcd_Write_Char,f
  6104     1104  2903               	goto	u6377
  6105     1105  0000               	nop
  6106     1106                     l3743:
  6107                           
  6108                           ;./lcd.h: 93:    RB4 = 0;
  6109     1106  1283               	bcf	3,5	;RP0=0, select bank0
  6110     1107  1303               	bcf	3,6	;RP1=0, select bank0
  6111     1108  1206               	bcf	6,4	;volatile
  6112     1109                     l139:
  6113     1109  0008               	return
  6114     110A                     __end_of_Lcd_Write_Char:
  6115                           
  6116                           	psect	text19
  6117     125F                     __ptext19:	
  6118 ;; *************** function _Lcd_Set_Cursor *****************
  6119 ;; Defined at:
  6120 ;;		line 40 in file "./lcd.h"
  6121 ;; Parameters:    Size  Location     Type
  6122 ;;  a               1    wreg     unsigned char 
  6123 ;;  b               1    4[BANK0 ] unsigned char 
  6124 ;; Auto vars:     Size  Location     Type
  6125 ;;  a               1    6[BANK0 ] unsigned char 
  6126 ;;  temp            1    9[BANK0 ] unsigned char 
  6127 ;;  y               1    8[BANK0 ] unsigned char 
  6128 ;;  z               1    7[BANK0 ] unsigned char 
  6129 ;; Return value:  Size  Location     Type
  6130 ;;                  1    wreg      void 
  6131 ;; Registers used:
  6132 ;;		wreg, status,2, status,0, pclath, cstack
  6133 ;; Tracked objects:
  6134 ;;		On entry : 0/0
  6135 ;;		On exit  : 0/0
  6136 ;;		Unchanged: 0/0
  6137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6138 ;;      Params:         0       1       0       0       0
  6139 ;;      Locals:         0       4       0       0       0
  6140 ;;      Temps:          0       1       0       0       0
  6141 ;;      Totals:         0       6       0       0       0
  6142 ;;Total ram usage:        6 bytes
  6143 ;; Hardware stack levels used: 1
  6144 ;; Hardware stack levels required when called: 4
  6145 ;; This function calls:
  6146 ;;		_Lcd_Cmd
  6147 ;; This function is called by:
  6148 ;;		_main
  6149 ;; This function uses a non-reentrant model
  6150 ;;
  6151                           
  6152     125F                     _Lcd_Set_Cursor:	
  6153                           ;psect for function _Lcd_Set_Cursor
  6154                           
  6155                           
  6156                           ;incstack = 0
  6157                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  6158                           ;Lcd_Set_Cursor@a stored from wreg
  6159     125F  1283               	bcf	3,5	;RP0=0, select bank0
  6160     1260  1303               	bcf	3,6	;RP1=0, select bank0
  6161     1261  00A6               	movwf	Lcd_Set_Cursor@a
  6162     1262                     l3825:
  6163                           
  6164                           ;./lcd.h: 40: void Lcd_Set_Cursor(char a, char b);./lcd.h: 41: {;./lcd.h: 42:  char temp
      +                          ,z,y;;./lcd.h: 43:  if(a == 1)
  6165     1262  0326               	decf	Lcd_Set_Cursor@a,w
  6166     1263  1D03               	btfss	3,2
  6167     1264  2A66               	goto	u5101
  6168     1265  2A67               	goto	u5100
  6169     1266                     u5101:
  6170     1266  2A86               	goto	l3835
  6171     1267                     u5100:
  6172     1267                     l3827:
  6173                           
  6174                           ;./lcd.h: 44:  {;./lcd.h: 45:    temp = 0x80 + b - 1;
  6175     1267  0824               	movf	Lcd_Set_Cursor@b,w
  6176     1268  3E7F               	addlw	127
  6177     1269  00A9               	movwf	Lcd_Set_Cursor@temp
  6178                           
  6179                           ;./lcd.h: 46:   z = temp>>4;
  6180     126A  0829               	movf	Lcd_Set_Cursor@temp,w
  6181     126B  00A5               	movwf	??_Lcd_Set_Cursor
  6182     126C  3004               	movlw	4
  6183     126D                     u5115:
  6184     126D  1003               	clrc
  6185     126E  0CA5               	rrf	??_Lcd_Set_Cursor,f
  6186     126F  3EFF               	addlw	-1
  6187     1270  1D03               	skipz
  6188     1271  2A6D               	goto	u5115
  6189     1272  0825               	movf	??_Lcd_Set_Cursor,w
  6190     1273  00A7               	movwf	Lcd_Set_Cursor@z
  6191     1274                     l3829:
  6192                           
  6193                           ;./lcd.h: 47:   y = temp & 0x0F;
  6194     1274  0829               	movf	Lcd_Set_Cursor@temp,w
  6195     1275  390F               	andlw	15
  6196     1276  00A8               	movwf	Lcd_Set_Cursor@y
  6197     1277                     l3831:
  6198                           
  6199                           ;./lcd.h: 48:   Lcd_Cmd(z);
  6200     1277  0827               	movf	Lcd_Set_Cursor@z,w
  6201     1278  120A  118A  27E4  160A  118A  	fcall	_Lcd_Cmd
  6202     127D                     l3833:
  6203                           
  6204                           ;./lcd.h: 49:   Lcd_Cmd(y);
  6205     127D  1283               	bcf	3,5	;RP0=0, select bank0
  6206     127E  1303               	bcf	3,6	;RP1=0, select bank0
  6207     127F  0828               	movf	Lcd_Set_Cursor@y,w
  6208     1280  120A  118A  27E4  160A  118A  	fcall	_Lcd_Cmd
  6209                           
  6210                           ;./lcd.h: 50:  }
  6211     1285  2AAA               	goto	l133
  6212     1286                     l3835:
  6213     1286  3002               	movlw	2
  6214     1287  0626               	xorwf	Lcd_Set_Cursor@a,w
  6215     1288  1D03               	btfss	3,2
  6216     1289  2A8B               	goto	u5121
  6217     128A  2A8C               	goto	u5120
  6218     128B                     u5121:
  6219     128B  2AAA               	goto	l133
  6220     128C                     u5120:
  6221     128C                     l3837:
  6222                           
  6223                           ;./lcd.h: 52:  {;./lcd.h: 53:   temp = 0xC0 + b - 1;
  6224     128C  0824               	movf	Lcd_Set_Cursor@b,w
  6225     128D  3EBF               	addlw	191
  6226     128E  00A9               	movwf	Lcd_Set_Cursor@temp
  6227                           
  6228                           ;./lcd.h: 54:   z = temp>>4;
  6229     128F  0829               	movf	Lcd_Set_Cursor@temp,w
  6230     1290  00A5               	movwf	??_Lcd_Set_Cursor
  6231     1291  3004               	movlw	4
  6232     1292                     u5135:
  6233     1292  1003               	clrc
  6234     1293  0CA5               	rrf	??_Lcd_Set_Cursor,f
  6235     1294  3EFF               	addlw	-1
  6236     1295  1D03               	skipz
  6237     1296  2A92               	goto	u5135
  6238     1297  0825               	movf	??_Lcd_Set_Cursor,w
  6239     1298  00A7               	movwf	Lcd_Set_Cursor@z
  6240     1299                     l3839:
  6241                           
  6242                           ;./lcd.h: 55:   y = temp & 0x0F;
  6243     1299  0829               	movf	Lcd_Set_Cursor@temp,w
  6244     129A  390F               	andlw	15
  6245     129B  00A8               	movwf	Lcd_Set_Cursor@y
  6246     129C                     l3841:
  6247                           
  6248                           ;./lcd.h: 56:   Lcd_Cmd(z);
  6249     129C  0827               	movf	Lcd_Set_Cursor@z,w
  6250     129D  120A  118A  27E4  160A  118A  	fcall	_Lcd_Cmd
  6251     12A2                     l3843:
  6252                           
  6253                           ;./lcd.h: 57:   Lcd_Cmd(y);
  6254     12A2  1283               	bcf	3,5	;RP0=0, select bank0
  6255     12A3  1303               	bcf	3,6	;RP1=0, select bank0
  6256     12A4  0828               	movf	Lcd_Set_Cursor@y,w
  6257     12A5  120A  118A  27E4  160A  118A  	fcall	_Lcd_Cmd
  6258     12AA                     l133:
  6259     12AA  0008               	return
  6260     12AB                     __end_of_Lcd_Set_Cursor:
  6261                           
  6262                           	psect	text20
  6263     1359                     __ptext20:	
  6264 ;; *************** function _Lcd_Init *****************
  6265 ;; Defined at:
  6266 ;;		line 61 in file "./lcd.h"
  6267 ;; Parameters:    Size  Location     Type
  6268 ;;		None
  6269 ;; Auto vars:     Size  Location     Type
  6270 ;;		None
  6271 ;; Return value:  Size  Location     Type
  6272 ;;                  1    wreg      void 
  6273 ;; Registers used:
  6274 ;;		wreg, status,2, status,0, pclath, cstack
  6275 ;; Tracked objects:
  6276 ;;		On entry : 0/0
  6277 ;;		On exit  : 0/0
  6278 ;;		Unchanged: 0/0
  6279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6280 ;;      Params:         0       0       0       0       0
  6281 ;;      Locals:         0       0       0       0       0
  6282 ;;      Temps:          0       2       0       0       0
  6283 ;;      Totals:         0       2       0       0       0
  6284 ;;Total ram usage:        2 bytes
  6285 ;; Hardware stack levels used: 1
  6286 ;; Hardware stack levels required when called: 4
  6287 ;; This function calls:
  6288 ;;		_Lcd_Cmd
  6289 ;;		_Lcd_Port
  6290 ;; This function is called by:
  6291 ;;		_main
  6292 ;; This function uses a non-reentrant model
  6293 ;;
  6294                           
  6295     1359                     _Lcd_Init:	
  6296                           ;psect for function _Lcd_Init
  6297                           
  6298     1359                     l3845:	
  6299                           ;incstack = 0
  6300                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  6301                           
  6302                           
  6303                           ;./lcd.h: 63:   Lcd_Port(0x00);
  6304     1359  3000               	movlw	0
  6305     135A  160A  118A  2061  160A  118A  	fcall	_Lcd_Port
  6306     135F                     l3847:
  6307                           
  6308                           ;./lcd.h: 64:    _delay((unsigned long)((20)*(4000000/4000.0)));
  6309     135F  301A               	movlw	26
  6310     1360  1283               	bcf	3,5	;RP0=0, select bank0
  6311     1361  1303               	bcf	3,6	;RP1=0, select bank0
  6312     1362  00A5               	movwf	??_Lcd_Init+1
  6313     1363  30F7               	movlw	247
  6314     1364  00A4               	movwf	??_Lcd_Init
  6315     1365                     u6387:
  6316     1365  0BA4               	decfsz	??_Lcd_Init,f
  6317     1366  2B65               	goto	u6387
  6318     1367  0BA5               	decfsz	??_Lcd_Init+1,f
  6319     1368  2B65               	goto	u6387
  6320     1369  2B6A               	nop2
  6321     136A                     l3849:
  6322                           
  6323                           ;./lcd.h: 65:   Lcd_Cmd(0x03);
  6324     136A  3003               	movlw	3
  6325     136B  120A  118A  27E4  160A  118A  	fcall	_Lcd_Cmd
  6326                           
  6327                           ;./lcd.h: 66:  _delay((unsigned long)((5)*(4000000/4000.0)));
  6328     1370  3007               	movlw	7
  6329     1371  1283               	bcf	3,5	;RP0=0, select bank0
  6330     1372  1303               	bcf	3,6	;RP1=0, select bank0
  6331     1373  00A5               	movwf	??_Lcd_Init+1
  6332     1374  307C               	movlw	124
  6333     1375  00A4               	movwf	??_Lcd_Init
  6334     1376                     u6397:
  6335     1376  0BA4               	decfsz	??_Lcd_Init,f
  6336     1377  2B76               	goto	u6397
  6337     1378  0BA5               	decfsz	??_Lcd_Init+1,f
  6338     1379  2B76               	goto	u6397
  6339     137A  0000               	nop
  6340     137B                     l3851:
  6341                           
  6342                           ;./lcd.h: 67:   Lcd_Cmd(0x03);
  6343     137B  3003               	movlw	3
  6344     137C  120A  118A  27E4  160A  118A  	fcall	_Lcd_Cmd
  6345     1381                     l3853:
  6346                           
  6347                           ;./lcd.h: 68:  _delay((unsigned long)((11)*(4000000/4000.0)));
  6348     1381  300F               	movlw	15
  6349     1382  1283               	bcf	3,5	;RP0=0, select bank0
  6350     1383  1303               	bcf	3,6	;RP1=0, select bank0
  6351     1384  00A5               	movwf	??_Lcd_Init+1
  6352     1385  3047               	movlw	71
  6353     1386  00A4               	movwf	??_Lcd_Init
  6354     1387                     u6407:
  6355     1387  0BA4               	decfsz	??_Lcd_Init,f
  6356     1388  2B87               	goto	u6407
  6357     1389  0BA5               	decfsz	??_Lcd_Init+1,f
  6358     138A  2B87               	goto	u6407
  6359                           
  6360                           ;./lcd.h: 69:   Lcd_Cmd(0x03);
  6361     138B  3003               	movlw	3
  6362     138C  120A  118A  27E4  160A  118A  	fcall	_Lcd_Cmd
  6363                           
  6364                           ;./lcd.h: 71:   Lcd_Cmd(0x02);
  6365     1391  3002               	movlw	2
  6366     1392  120A  118A  27E4  160A  118A  	fcall	_Lcd_Cmd
  6367                           
  6368                           ;./lcd.h: 72:   Lcd_Cmd(0x02);
  6369     1397  3002               	movlw	2
  6370     1398  120A  118A  27E4  160A  118A  	fcall	_Lcd_Cmd
  6371                           
  6372                           ;./lcd.h: 73:   Lcd_Cmd(0x08);
  6373     139D  3008               	movlw	8
  6374     139E  120A  118A  27E4  160A  118A  	fcall	_Lcd_Cmd
  6375                           
  6376                           ;./lcd.h: 74:   Lcd_Cmd(0x00);
  6377     13A3  3000               	movlw	0
  6378     13A4  120A  118A  27E4  160A  118A  	fcall	_Lcd_Cmd
  6379                           
  6380                           ;./lcd.h: 75:   Lcd_Cmd(0x0C);
  6381     13A9  300C               	movlw	12
  6382     13AA  120A  118A  27E4  160A  118A  	fcall	_Lcd_Cmd
  6383                           
  6384                           ;./lcd.h: 76:   Lcd_Cmd(0x00);
  6385     13AF  3000               	movlw	0
  6386     13B0  120A  118A  27E4  160A  118A  	fcall	_Lcd_Cmd
  6387                           
  6388                           ;./lcd.h: 77:   Lcd_Cmd(0x06);
  6389     13B5  3006               	movlw	6
  6390     13B6  120A  118A  27E4  160A  118A  	fcall	_Lcd_Cmd
  6391     13BB                     l136:
  6392     13BB  0008               	return
  6393     13BC                     __end_of_Lcd_Init:
  6394                           
  6395                           	psect	text21
  6396     1FF3                     __ptext21:	
  6397 ;; *************** function _Lcd_Clear *****************
  6398 ;; Defined at:
  6399 ;;		line 34 in file "./lcd.h"
  6400 ;; Parameters:    Size  Location     Type
  6401 ;;		None
  6402 ;; Auto vars:     Size  Location     Type
  6403 ;;		None
  6404 ;; Return value:  Size  Location     Type
  6405 ;;                  1    wreg      void 
  6406 ;; Registers used:
  6407 ;;		wreg, status,2, status,0, pclath, cstack
  6408 ;; Tracked objects:
  6409 ;;		On entry : 0/0
  6410 ;;		On exit  : 0/0
  6411 ;;		Unchanged: 0/0
  6412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6413 ;;      Params:         0       0       0       0       0
  6414 ;;      Locals:         0       0       0       0       0
  6415 ;;      Temps:          0       0       0       0       0
  6416 ;;      Totals:         0       0       0       0       0
  6417 ;;Total ram usage:        0 bytes
  6418 ;; Hardware stack levels used: 1
  6419 ;; Hardware stack levels required when called: 4
  6420 ;; This function calls:
  6421 ;;		_Lcd_Cmd
  6422 ;; This function is called by:
  6423 ;;		_main
  6424 ;; This function uses a non-reentrant model
  6425 ;;
  6426                           
  6427     1FF3                     _Lcd_Clear:	
  6428                           ;psect for function _Lcd_Clear
  6429                           
  6430     1FF3                     l3823:	
  6431                           ;incstack = 0
  6432                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  6433                           
  6434                           
  6435                           ;./lcd.h: 36:  Lcd_Cmd(0);
  6436     1FF3  3000               	movlw	0
  6437     1FF4  120A  118A  27E4  160A  158A  	fcall	_Lcd_Cmd
  6438                           
  6439                           ;./lcd.h: 37:  Lcd_Cmd(1);
  6440     1FF9  3001               	movlw	1
  6441     1FFA  120A  118A  27E4  160A  158A  	fcall	_Lcd_Cmd
  6442     1FFF                     l127:
  6443     1FFF  0008               	return
  6444     2000                     __end_of_Lcd_Clear:
  6445                           
  6446                           	psect	text22
  6447     07E4                     __ptext22:	
  6448 ;; *************** function _Lcd_Cmd *****************
  6449 ;; Defined at:
  6450 ;;		line 25 in file "./lcd.h"
  6451 ;; Parameters:    Size  Location     Type
  6452 ;;  a               1    wreg     unsigned char 
  6453 ;; Auto vars:     Size  Location     Type
  6454 ;;  a               1    3[BANK0 ] unsigned char 
  6455 ;; Return value:  Size  Location     Type
  6456 ;;                  1    wreg      void 
  6457 ;; Registers used:
  6458 ;;		wreg, status,2, status,0, pclath, cstack
  6459 ;; Tracked objects:
  6460 ;;		On entry : 0/0
  6461 ;;		On exit  : 0/0
  6462 ;;		Unchanged: 0/0
  6463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6464 ;;      Params:         0       0       0       0       0
  6465 ;;      Locals:         0       1       0       0       0
  6466 ;;      Temps:          0       2       0       0       0
  6467 ;;      Totals:         0       3       0       0       0
  6468 ;;Total ram usage:        3 bytes
  6469 ;; Hardware stack levels used: 1
  6470 ;; Hardware stack levels required when called: 3
  6471 ;; This function calls:
  6472 ;;		_Lcd_Port
  6473 ;; This function is called by:
  6474 ;;		_Lcd_Clear
  6475 ;;		_Lcd_Set_Cursor
  6476 ;;		_Lcd_Init
  6477 ;; This function uses a non-reentrant model
  6478 ;;
  6479                           
  6480     07E4                     _Lcd_Cmd:	
  6481                           ;psect for function _Lcd_Cmd
  6482                           
  6483                           
  6484                           ;incstack = 0
  6485                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  6486                           ;Lcd_Cmd@a stored from wreg
  6487     07E4  1283               	bcf	3,5	;RP0=0, select bank0
  6488     07E5  1303               	bcf	3,6	;RP1=0, select bank0
  6489     07E6  00A3               	movwf	Lcd_Cmd@a
  6490     07E7                     l3715:
  6491                           
  6492                           ;./lcd.h: 25: void Lcd_Cmd(char a);./lcd.h: 26: {;./lcd.h: 27:  RB5 = 0;
  6493     07E7  1286               	bcf	6,5	;volatile
  6494     07E8                     l3717:
  6495                           
  6496                           ;./lcd.h: 28:  Lcd_Port(a);
  6497     07E8  0823               	movf	Lcd_Cmd@a,w
  6498     07E9  160A  118A  2061  120A  118A  	fcall	_Lcd_Port
  6499     07EE                     l3719:
  6500                           
  6501                           ;./lcd.h: 29:  RB4 = 1;
  6502     07EE  1283               	bcf	3,5	;RP0=0, select bank0
  6503     07EF  1303               	bcf	3,6	;RP1=0, select bank0
  6504     07F0  1606               	bsf	6,4	;volatile
  6505     07F1                     l3721:
  6506                           
  6507                           ;./lcd.h: 30:         _delay((unsigned long)((4)*(4000000/4000.0)));
  6508     07F1  3006               	movlw	6
  6509     07F2  1283               	bcf	3,5	;RP0=0, select bank0
  6510     07F3  1303               	bcf	3,6	;RP1=0, select bank0
  6511     07F4  00A2               	movwf	??_Lcd_Cmd+1
  6512     07F5  302F               	movlw	47
  6513     07F6  00A1               	movwf	??_Lcd_Cmd
  6514     07F7                     u6417:
  6515     07F7  0BA1               	decfsz	??_Lcd_Cmd,f
  6516     07F8  2FF7               	goto	u6417
  6517     07F9  0BA2               	decfsz	??_Lcd_Cmd+1,f
  6518     07FA  2FF7               	goto	u6417
  6519     07FB  2FFC               	nop2
  6520     07FC                     l3723:
  6521                           
  6522                           ;./lcd.h: 31:         RB4 = 0;
  6523     07FC  1283               	bcf	3,5	;RP0=0, select bank0
  6524     07FD  1303               	bcf	3,6	;RP1=0, select bank0
  6525     07FE  1206               	bcf	6,4	;volatile
  6526     07FF                     l124:
  6527     07FF  0008               	return
  6528     0800                     __end_of_Lcd_Cmd:
  6529                           
  6530                           	psect	text23
  6531     1061                     __ptext23:	
  6532 ;; *************** function _Lcd_Port *****************
  6533 ;; Defined at:
  6534 ;;		line 3 in file "./lcd.h"
  6535 ;; Parameters:    Size  Location     Type
  6536 ;;  a               1    wreg     unsigned char 
  6537 ;; Auto vars:     Size  Location     Type
  6538 ;;  a               1    0[BANK0 ] unsigned char 
  6539 ;; Return value:  Size  Location     Type
  6540 ;;                  1    wreg      void 
  6541 ;; Registers used:
  6542 ;;		wreg
  6543 ;; Tracked objects:
  6544 ;;		On entry : 0/0
  6545 ;;		On exit  : 0/0
  6546 ;;		Unchanged: 0/0
  6547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6548 ;;      Params:         0       0       0       0       0
  6549 ;;      Locals:         0       1       0       0       0
  6550 ;;      Temps:          0       0       0       0       0
  6551 ;;      Totals:         0       1       0       0       0
  6552 ;;Total ram usage:        1 bytes
  6553 ;; Hardware stack levels used: 1
  6554 ;; Hardware stack levels required when called: 2
  6555 ;; This function calls:
  6556 ;;		Nothing
  6557 ;; This function is called by:
  6558 ;;		_Lcd_Cmd
  6559 ;;		_Lcd_Init
  6560 ;;		_Lcd_Write_Char
  6561 ;; This function uses a non-reentrant model
  6562 ;;
  6563                           
  6564     1061                     _Lcd_Port:	
  6565                           ;psect for function _Lcd_Port
  6566                           
  6567                           
  6568                           ;incstack = 0
  6569                           ; Regs used in _Lcd_Port: [wreg]
  6570                           ;Lcd_Port@a stored from wreg
  6571     1061  1283               	bcf	3,5	;RP0=0, select bank0
  6572     1062  1303               	bcf	3,6	;RP1=0, select bank0
  6573     1063  00A0               	movwf	Lcd_Port@a
  6574     1064                     l3705:
  6575                           
  6576                           ;./lcd.h: 3: void Lcd_Port(char a);./lcd.h: 4: {;./lcd.h: 5:  if(a & 1)
  6577     1064  1C20               	btfss	Lcd_Port@a,0
  6578     1065  2867               	goto	u4851
  6579     1066  2868               	goto	u4850
  6580     1067                     u4851:
  6581     1067  286A               	goto	l113
  6582     1068                     u4850:
  6583     1068                     l3707:
  6584                           
  6585                           ;./lcd.h: 6:   RB3 = 1;
  6586     1068  1586               	bsf	6,3	;volatile
  6587     1069  286B               	goto	l114
  6588     106A                     l113:	
  6589                           ;./lcd.h: 7:  else
  6590                           
  6591                           
  6592                           ;./lcd.h: 8:   RB3 = 0;
  6593     106A  1186               	bcf	6,3	;volatile
  6594     106B                     l114:
  6595                           
  6596                           ;./lcd.h: 10:  if(a & 2)
  6597     106B  1CA0               	btfss	Lcd_Port@a,1
  6598     106C  286E               	goto	u4861
  6599     106D  286F               	goto	u4860
  6600     106E                     u4861:
  6601     106E  2871               	goto	l115
  6602     106F                     u4860:
  6603     106F                     l3709:
  6604                           
  6605                           ;./lcd.h: 11:   RB2 = 1;
  6606     106F  1506               	bsf	6,2	;volatile
  6607     1070  2872               	goto	l116
  6608     1071                     l115:	
  6609                           ;./lcd.h: 12:  else
  6610                           
  6611                           
  6612                           ;./lcd.h: 13:   RB2 = 0;
  6613     1071  1106               	bcf	6,2	;volatile
  6614     1072                     l116:
  6615                           
  6616                           ;./lcd.h: 15:  if(a & 4)
  6617     1072  1D20               	btfss	Lcd_Port@a,2
  6618     1073  2875               	goto	u4871
  6619     1074  2876               	goto	u4870
  6620     1075                     u4871:
  6621     1075  2878               	goto	l117
  6622     1076                     u4870:
  6623     1076                     l3711:
  6624                           
  6625                           ;./lcd.h: 16:   RB1 = 1;
  6626     1076  1486               	bsf	6,1	;volatile
  6627     1077  2879               	goto	l118
  6628     1078                     l117:	
  6629                           ;./lcd.h: 17:  else
  6630                           
  6631                           
  6632                           ;./lcd.h: 18:   RB1 = 0;
  6633     1078  1086               	bcf	6,1	;volatile
  6634     1079                     l118:
  6635                           
  6636                           ;./lcd.h: 20:  if(a & 8)
  6637     1079  1DA0               	btfss	Lcd_Port@a,3
  6638     107A  287C               	goto	u4881
  6639     107B  287D               	goto	u4880
  6640     107C                     u4881:
  6641     107C  287F               	goto	l119
  6642     107D                     u4880:
  6643     107D                     l3713:
  6644                           
  6645                           ;./lcd.h: 21:   RB0 = 1;
  6646     107D  1406               	bsf	6,0	;volatile
  6647     107E  2880               	goto	l121
  6648     107F                     l119:	
  6649                           ;./lcd.h: 22:  else
  6650                           
  6651                           
  6652                           ;./lcd.h: 23:   RB0 = 0;
  6653     107F  1006               	bcf	6,0	;volatile
  6654     1080                     l121:
  6655     1080  0008               	return
  6656     1081                     __end_of_Lcd_Port:
  6657                           
  6658                           	psect	text24
  6659     12AB                     __ptext24:	
  6660 ;; *************** function _timer_isr *****************
  6661 ;; Defined at:
  6662 ;;		line 74 in file "main.c"
  6663 ;; Parameters:    Size  Location     Type
  6664 ;;		None
  6665 ;; Auto vars:     Size  Location     Type
  6666 ;;		None
  6667 ;; Return value:  Size  Location     Type
  6668 ;;                  1    wreg      void 
  6669 ;; Registers used:
  6670 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6671 ;; Tracked objects:
  6672 ;;		On entry : 0/0
  6673 ;;		On exit  : 0/0
  6674 ;;		Unchanged: 0/0
  6675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6676 ;;      Params:         0       0       0       0       0
  6677 ;;      Locals:         0       0       0       0       0
  6678 ;;      Temps:          3       0       0       0       0
  6679 ;;      Totals:         3       0       0       0       0
  6680 ;;Total ram usage:        3 bytes
  6681 ;; Hardware stack levels used: 1
  6682 ;; Hardware stack levels required when called: 1
  6683 ;; This function calls:
  6684 ;;		_incrementTime
  6685 ;;		_writeEEPROM
  6686 ;; This function is called by:
  6687 ;;		Interrupt level 1
  6688 ;; This function uses a non-reentrant model
  6689 ;;
  6690                           
  6691     12AB                     _timer_isr:	
  6692                           ;psect for function _timer_isr
  6693                           
  6694     12AB                     i1l3111:
  6695                           
  6696                           ;main.c: 75:     if (T0IF) {
  6697     12AB  1D0B               	btfss	11,2	;volatile
  6698     12AC  2AAE               	goto	u412_21
  6699     12AD  2AAF               	goto	u412_20
  6700     12AE                     u412_21:
  6701     12AE  2AF5               	goto	i1l173
  6702     12AF                     u412_20:
  6703     12AF                     i1l3113:
  6704                           
  6705                           ;main.c: 76:         T0IF = 0;
  6706     12AF  110B               	bcf	11,2	;volatile
  6707     12B0                     i1l3115:
  6708                           
  6709                           ;main.c: 77:         TMR0 = 61;
  6710     12B0  303D               	movlw	61
  6711     12B1  1283               	bcf	3,5	;RP0=0, select bank0
  6712     12B2  1303               	bcf	3,6	;RP1=0, select bank0
  6713     12B3  0081               	movwf	1	;volatile
  6714                           
  6715                           ;main.c: 78:   epromayaz++;
  6716     12B4  3001               	movlw	1
  6717     12B5  07EE               	addwf	_epromayaz,f
  6718     12B6  1803               	skipnc
  6719     12B7  0AEF               	incf	_epromayaz+1,f
  6720     12B8  3000               	movlw	0
  6721     12B9  07EF               	addwf	_epromayaz+1,f
  6722     12BA                     i1l3117:
  6723                           
  6724                           ;main.c: 79:   if (epromayaz==800){
  6725     12BA  3020               	movlw	32
  6726     12BB  066E               	xorwf	_epromayaz,w
  6727     12BC  3003               	movlw	3
  6728     12BD  1903               	skipnz
  6729     12BE  066F               	xorwf	_epromayaz+1,w
  6730     12BF  1D03               	btfss	3,2
  6731     12C0  2AC2               	goto	u413_21
  6732     12C1  2AC3               	goto	u413_20
  6733     12C2                     u413_21:
  6734     12C2  2ADE               	goto	i1l3125
  6735     12C3                     u413_20:
  6736     12C3                     i1l3119:
  6737                           
  6738                           ;main.c: 80:       epromayaz=0;
  6739     12C3  01EE               	clrf	_epromayaz
  6740     12C4  01EF               	clrf	_epromayaz+1
  6741     12C5                     i1l3121:
  6742                           
  6743                           ;main.c: 82:         writeEEPROM(0x00, currentTime.hours);
  6744     12C5  3000               	movlw	0
  6745     12C6  00F0               	movwf	writeEEPROM@address
  6746     12C7  00F1               	movwf	writeEEPROM@address+1
  6747     12C8  0878               	movf	_currentTime+1,w
  6748     12C9  00F3               	movwf	writeEEPROM@data+1
  6749     12CA  0877               	movf	_currentTime,w
  6750     12CB  00F2               	movwf	writeEEPROM@data
  6751     12CC  160A  118A  204B  160A  118A  	fcall	_writeEEPROM
  6752     12D1                     i1l3123:
  6753                           
  6754                           ;main.c: 83:         writeEEPROM(0x01, currentTime.minutes);
  6755     12D1  3001               	movlw	1
  6756     12D2  00F0               	movwf	writeEEPROM@address
  6757     12D3  3000               	movlw	0
  6758     12D4  00F1               	movwf	writeEEPROM@address+1
  6759     12D5  087A               	movf	_currentTime+3,w
  6760     12D6  00F3               	movwf	writeEEPROM@data+1
  6761     12D7  0879               	movf	_currentTime+2,w
  6762     12D8  00F2               	movwf	writeEEPROM@data
  6763     12D9  160A  118A  204B  160A  118A  	fcall	_writeEEPROM
  6764     12DE                     i1l3125:
  6765                           
  6766                           ;main.c: 90:         kesmeSayaci++;
  6767     12DE  3001               	movlw	1
  6768     12DF  1683               	bsf	3,5	;RP0=1, select bank3
  6769     12E0  1703               	bsf	3,6	;RP1=1, select bank3
  6770     12E1  07B0               	addwf	_kesmeSayaci^(0+384),f
  6771     12E2  1803               	skipnc
  6772     12E3  0AB1               	incf	(_kesmeSayaci+1)^(0+384),f
  6773     12E4  3000               	movlw	0
  6774     12E5  07B1               	addwf	(_kesmeSayaci+1)^(0+384),f
  6775     12E6                     i1l3127:
  6776                           
  6777                           ;main.c: 91:         if (kesmeSayaci==20){
  6778     12E6  3014               	movlw	20
  6779     12E7  0630               	xorwf	_kesmeSayaci^(0+384),w
  6780     12E8  0431               	iorwf	(_kesmeSayaci+1)^(0+384),w
  6781     12E9  1D03               	btfss	3,2
  6782     12EA  2AEC               	goto	u414_21
  6783     12EB  2AED               	goto	u414_20
  6784     12EC                     u414_21:
  6785     12EC  2AF5               	goto	i1l173
  6786     12ED                     u414_20:
  6787     12ED                     i1l3129:
  6788                           
  6789                           ;main.c: 92:             kesmeSayaci = 0 ;
  6790     12ED  01B0               	clrf	_kesmeSayaci^(0+384)
  6791     12EE  01B1               	clrf	(_kesmeSayaci+1)^(0+384)
  6792     12EF                     i1l3131:
  6793                           
  6794                           ;main.c: 93:             incrementTime(&currentTime);
  6795     12EF  3077               	movlw	(low (_currentTime| 0))& (0+255)
  6796     12F0  160A  118A  2218  160A  118A  	fcall	_incrementTime
  6797     12F5                     i1l173:
  6798     12F5  0876               	movf	??_timer_isr+2,w
  6799     12F6  008A               	movwf	10
  6800     12F7  0875               	movf	??_timer_isr+1,w
  6801     12F8  0084               	movwf	4
  6802     12F9  0E74               	swapf	??_timer_isr,w
  6803     12FA  0083               	movwf	3
  6804     12FB  0EFE               	swapf	btemp,f
  6805     12FC  0E7E               	swapf	btemp,w
  6806     12FD  0009               	retfie
  6807     12FE                     __end_of_timer_isr:
  6808                           
  6809                           	psect	intentry
  6810     0004                     __pintentry:	
  6811                           ;incstack = 0
  6812                           ; Regs used in _timer_isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6813                           
  6814     0004                     interrupt_function:
  6815     007E                     saved_w	set	btemp
  6816     0004  00FE               	movwf	btemp
  6817     0005  0E03               	swapf	3,w
  6818     0006  00F4               	movwf	??_timer_isr
  6819     0007  0804               	movf	4,w
  6820     0008  00F5               	movwf	??_timer_isr+1
  6821     0009  080A               	movf	10,w
  6822     000A  00F6               	movwf	??_timer_isr+2
  6823     000B  160A  118A  2AAB   	ljmp	_timer_isr
  6824                           
  6825                           	psect	text25
  6826     104B                     __ptext25:	
  6827 ;; *************** function _writeEEPROM *****************
  6828 ;; Defined at:
  6829 ;;		line 39 in file "main.c"
  6830 ;; Parameters:    Size  Location     Type
  6831 ;;  address         2    0[COMMON] unsigned int 
  6832 ;;  data            2    2[COMMON] unsigned int 
  6833 ;; Auto vars:     Size  Location     Type
  6834 ;;		None
  6835 ;; Return value:  Size  Location     Type
  6836 ;;                  1    wreg      void 
  6837 ;; Registers used:
  6838 ;;		wreg
  6839 ;; Tracked objects:
  6840 ;;		On entry : 0/0
  6841 ;;		On exit  : 0/0
  6842 ;;		Unchanged: 0/0
  6843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6844 ;;      Params:         4       0       0       0       0
  6845 ;;      Locals:         0       0       0       0       0
  6846 ;;      Temps:          0       0       0       0       0
  6847 ;;      Totals:         4       0       0       0       0
  6848 ;;Total ram usage:        4 bytes
  6849 ;; Hardware stack levels used: 1
  6850 ;; This function calls:
  6851 ;;		Nothing
  6852 ;; This function is called by:
  6853 ;;		_timer_isr
  6854 ;; This function uses a non-reentrant model
  6855 ;;
  6856                           
  6857     104B                     _writeEEPROM:	
  6858                           ;psect for function _writeEEPROM
  6859                           
  6860     104B                     i1l2495:	
  6861                           ;incstack = 0
  6862                           ; Regs used in _writeEEPROM: [wreg]
  6863                           
  6864                           
  6865                           ;main.c: 41:     EEADR = address;
  6866     104B  0870               	movf	writeEEPROM@address,w
  6867     104C  1283               	bcf	3,5	;RP0=0, select bank2
  6868     104D  1703               	bsf	3,6	;RP1=1, select bank2
  6869     104E  008D               	movwf	13	;volatile
  6870                           
  6871                           ;main.c: 42:     EEDATA = data;
  6872     104F  0872               	movf	writeEEPROM@data,w
  6873     1050  008C               	movwf	12	;volatile
  6874     1051                     i1l2497:
  6875                           
  6876                           ;main.c: 43:     WREN = 1;
  6877     1051  1683               	bsf	3,5	;RP0=1, select bank3
  6878     1052  1703               	bsf	3,6	;RP1=1, select bank3
  6879     1053  150C               	bsf	12,2	;volsfr
  6880     1054                     i1l2499:
  6881                           
  6882                           ;main.c: 44:     GIE = 0;
  6883     1054  138B               	bcf	11,7	;volatile
  6884                           
  6885                           ;main.c: 45:     EECON2 = 0x55;
  6886     1055  3055               	movlw	85
  6887     1056  008D               	movwf	13	;volsfr
  6888                           
  6889                           ;main.c: 46:     EECON2 = 0xAA;
  6890     1057  30AA               	movlw	170
  6891     1058  008D               	movwf	13	;volsfr
  6892     1059                     i1l2501:
  6893                           
  6894                           ;main.c: 47:     WR = 1;
  6895     1059  148C               	bsf	12,1	;volsfr
  6896     105A                     i1l2503:
  6897                           
  6898                           ;main.c: 48:     GIE = 1;
  6899     105A  178B               	bsf	11,7	;volatile
  6900     105B                     i1l2505:
  6901                           
  6902                           ;main.c: 49:     WREN = 0;
  6903     105B  110C               	bcf	12,2	;volsfr
  6904     105C                     i1l154:	
  6905                           ;main.c: 50:     while (WR == 1);
  6906                           
  6907     105C  188C               	btfsc	12,1	;volsfr
  6908     105D  285F               	goto	u278_21
  6909     105E  2860               	goto	u278_20
  6910     105F                     u278_21:
  6911     105F  285C               	goto	i1l154
  6912     1060                     u278_20:
  6913     1060                     i1l157:
  6914     1060  0008               	return
  6915     1061                     __end_of_writeEEPROM:
  6916                           
  6917                           	psect	text26
  6918     1218                     __ptext26:	
  6919 ;; *************** function _incrementTime *****************
  6920 ;; Defined at:
  6921 ;;		line 60 in file "main.c"
  6922 ;; Parameters:    Size  Location     Type
  6923 ;;  time            1    wreg     PTR struct Time
  6924 ;;		 -> currentTime(6), 
  6925 ;; Auto vars:     Size  Location     Type
  6926 ;;  time            1    2[COMMON] PTR struct Time
  6927 ;;		 -> currentTime(6), 
  6928 ;; Return value:  Size  Location     Type
  6929 ;;                  1    wreg      void 
  6930 ;; Registers used:
  6931 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6932 ;; Tracked objects:
  6933 ;;		On entry : 0/0
  6934 ;;		On exit  : 0/0
  6935 ;;		Unchanged: 0/0
  6936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6937 ;;      Params:         0       0       0       0       0
  6938 ;;      Locals:         1       0       0       0       0
  6939 ;;      Temps:          2       0       0       0       0
  6940 ;;      Totals:         3       0       0       0       0
  6941 ;;Total ram usage:        3 bytes
  6942 ;; Hardware stack levels used: 1
  6943 ;; This function calls:
  6944 ;;		Nothing
  6945 ;; This function is called by:
  6946 ;;		_timer_isr
  6947 ;; This function uses a non-reentrant model
  6948 ;;
  6949                           
  6950     1218                     _incrementTime:	
  6951                           ;psect for function _incrementTime
  6952                           
  6953                           
  6954                           ;incstack = 0
  6955                           ; Regs used in _incrementTime: [wreg-fsr0h+status,2+status,0]
  6956                           ;incrementTime@time stored from wreg
  6957     1218  00F2               	movwf	incrementTime@time
  6958     1219                     i1l2513:
  6959                           
  6960                           ;main.c: 61:     time->seconds++;
  6961     1219  0872               	movf	incrementTime@time,w
  6962     121A  3E04               	addlw	4
  6963     121B  0084               	movwf	4
  6964     121C  3001               	movlw	1
  6965     121D  0780               	addwf	0,f
  6966     121E  0A84               	incf	4,f
  6967     121F  1803               	skipnc
  6968     1220  0A80               	incf	0,f
  6969                           
  6970                           ;main.c: 62:     if (time->seconds >= 60) {
  6971     1221  0872               	movf	incrementTime@time,w
  6972     1222  3E04               	addlw	4
  6973     1223  0084               	movwf	4
  6974     1224  0800               	movf	0,w
  6975     1225  00F0               	movwf	??_incrementTime
  6976     1226  0A84               	incf	4,f
  6977     1227  0800               	movf	0,w
  6978     1228  00F1               	movwf	??_incrementTime+1
  6979     1229  3000               	movlw	0
  6980     122A  0271               	subwf	??_incrementTime+1,w
  6981     122B  303C               	movlw	60
  6982     122C  1903               	skipnz
  6983     122D  0270               	subwf	??_incrementTime,w
  6984     122E  1C03               	skipc
  6985     122F  2A31               	goto	u279_21
  6986     1230  2A32               	goto	u279_20
  6987     1231                     u279_21:
  6988     1231  2A5E               	goto	i1l165
  6989     1232                     u279_20:
  6990     1232                     i1l2515:
  6991                           
  6992                           ;main.c: 63:         time->seconds = 0;
  6993     1232  0872               	movf	incrementTime@time,w
  6994     1233  3E04               	addlw	4
  6995     1234  0084               	movwf	4
  6996     1235  0180               	clrf	0
  6997     1236  0A84               	incf	4,f
  6998     1237  0180               	clrf	0
  6999                           
  7000                           ;main.c: 64:         time->minutes++;
  7001     1238  0872               	movf	incrementTime@time,w
  7002     1239  3E02               	addlw	2
  7003     123A  0084               	movwf	4
  7004     123B  3001               	movlw	1
  7005     123C  0780               	addwf	0,f
  7006     123D  0A84               	incf	4,f
  7007     123E  1803               	skipnc
  7008     123F  0A80               	incf	0,f
  7009                           
  7010                           ;main.c: 65:         if (time->minutes >= 60) {
  7011     1240  0872               	movf	incrementTime@time,w
  7012     1241  3E02               	addlw	2
  7013     1242  0084               	movwf	4
  7014     1243  0800               	movf	0,w
  7015     1244  00F0               	movwf	??_incrementTime
  7016     1245  0A84               	incf	4,f
  7017     1246  0800               	movf	0,w
  7018     1247  00F1               	movwf	??_incrementTime+1
  7019     1248  3000               	movlw	0
  7020     1249  0271               	subwf	??_incrementTime+1,w
  7021     124A  303C               	movlw	60
  7022     124B  1903               	skipnz
  7023     124C  0270               	subwf	??_incrementTime,w
  7024     124D  1C03               	skipc
  7025     124E  2A50               	goto	u280_21
  7026     124F  2A51               	goto	u280_20
  7027     1250                     u280_21:
  7028     1250  2A5E               	goto	i1l165
  7029     1251                     u280_20:
  7030     1251                     i1l2517:
  7031                           
  7032                           ;main.c: 66:             time->minutes = 0;
  7033     1251  0872               	movf	incrementTime@time,w
  7034     1252  3E02               	addlw	2
  7035     1253  0084               	movwf	4
  7036     1254  0180               	clrf	0
  7037     1255  0A84               	incf	4,f
  7038     1256  0180               	clrf	0
  7039                           
  7040                           ;main.c: 67:             time->hours++;
  7041     1257  0872               	movf	incrementTime@time,w
  7042     1258  0084               	movwf	4
  7043     1259  3001               	movlw	1
  7044     125A  0780               	addwf	0,f
  7045     125B  0A84               	incf	4,f
  7046     125C  1803               	skipnc
  7047     125D  0A80               	incf	0,f
  7048     125E                     i1l165:
  7049     125E  0008               	return
  7050     125F                     __end_of_incrementTime:
  7051     007E                     btemp	set	126	;btemp
  7052     007E                     wtemp0	set	126
  7053                           
  7054                           	psect	config
  7055                           
  7056                           ;Config register CONFIG @ 0x2007
  7057                           ;	Oscillator Selection bits
  7058                           ;	FOSC = XT, XT oscillator
  7059                           ;	Watchdog Timer Enable bit
  7060                           ;	WDTE = OFF, WDT disabled
  7061                           ;	Power-up Timer Enable bit
  7062                           ;	PWRTE = OFF, PWRT disabled
  7063                           ;	Brown-out Reset Enable bit
  7064                           ;	BOREN = ON, BOR enabled
  7065                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  7066                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  7067                           ;	Data EEPROM Memory Code Protection bit
  7068                           ;	CPD = OFF, Data EEPROM code protection off
  7069                           ;	Flash Program Memory Write Enable bits
  7070                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  7071                           ;	In-Circuit Debugger Mode bit
  7072                           ;	DEBUG = 0x1, unprogrammed default
  7073                           ;	Flash Program Memory Code Protection bit
  7074                           ;	CP = OFF, Code protection off
  7075     2007                     	org	8199
  7076     2007  3F79               	dw	16249
  7077                           
  7078                           	psect	maintext_split_1
  7079     1673                     u5590:
  7080     1673                     l4205:
  7081     1673  1809               	btfsc	9,0	;volatile
  7082     1674  2E76               	goto	u5601
  7083     1675  2E79               	goto	u5600
  7084     1676                     u5601:
  7085     1676  120A  158A  2CB8   	goto	l182
  7086     1679                     u5600:
  7087     1679                     l4207:
  7088     1679  1807               	btfsc	7,0	;volatile
  7089     167A  2E7C               	goto	u5611
  7090     167B  2E7D               	goto	u5610
  7091     167C                     u5611:
  7092     167C  2E76               	goto	u5601
  7093     167D                     u5610:
  7094     167D                     l4209:
  7095     167D  1889               	btfsc	9,1	;volatile
  7096     167E  2E80               	goto	u5621
  7097     167F  2E81               	goto	u5620
  7098     1680                     u5621:
  7099     1680  2E76               	goto	u5601
  7100     1681                     u5620:
  7101     1681                     l4211:
  7102                           
  7103                           ;main.c: 210:             ilkAcilis = 0;
  7104     1681  1683               	bsf	3,5	;RP0=1, select bank3
  7105     1682  1703               	bsf	3,6	;RP1=1, select bank3
  7106     1683  0192               	clrf	main@ilkAcilis^(0+384)
  7107     1684  0193               	clrf	(main@ilkAcilis+1)^(0+384)
  7108     1685                     l179:	
  7109                           ;main.c: 215:     }
  7110                           
  7111                           
  7112                           ;main.c: 217: if( !RC3 && !RD0){
  7113     1685  1283               	bcf	3,5	;RP0=0, select bank0
  7114     1686  1303               	bcf	3,6	;RP1=0, select bank0
  7115     1687  1987               	btfsc	7,3	;volatile
  7116     1688  2E8A               	goto	u5631
  7117     1689  2E8D               	goto	u5630
  7118     168A                     u5631:
  7119     168A  120A  158A  2C23   	goto	l183
  7120     168D                     u5630:
  7121     168D                     l4213:
  7122     168D  1808               	btfsc	8,0	;volatile
  7123     168E  2E90               	goto	u5641
  7124     168F  2E91               	goto	u5640
  7125     1690                     u5641:
  7126     1690  2E8A               	goto	u5631
  7127     1691                     u5640:
  7128     1691                     l4215:
  7129                           
  7130                           ;main.c: 218:      if ((currentTime.hours == 500 || currentTime.hours == 501 || currentT
      +                          ime.hours == 502) && currentTime.minutes == 1) {
  7131     1691  30F4               	movlw	244
  7132     1692  0677               	xorwf	_currentTime,w
  7133     1693  1D03               	skipz
  7134     1694  2E9A               	goto	u5650
  7135     1695  0378               	decf	_currentTime+1,w
  7136     1696  1903               	btfsc	3,2
  7137     1697  2E99               	goto	u5651
  7138     1698  2E9A               	goto	u5650
  7139     1699                     u5651:
  7140     1699  2EAC               	goto	l4221
  7141     169A                     u5650:
  7142     169A                     l4217:
  7143     169A  30F5               	movlw	245
  7144     169B  0677               	xorwf	_currentTime,w
  7145     169C  1D03               	skipz
  7146     169D  2EA3               	goto	u5660
  7147     169E  0378               	decf	_currentTime+1,w
  7148     169F  1903               	btfsc	3,2
  7149     16A0  2EA2               	goto	u5661
  7150     16A1  2EA3               	goto	u5660
  7151     16A2                     u5661:
  7152     16A2  2EAC               	goto	l4221
  7153     16A3                     u5660:
  7154     16A3                     l4219:
  7155     16A3  30F6               	movlw	246
  7156     16A4  0677               	xorwf	_currentTime,w
  7157     16A5  1D03               	skipz
  7158     16A6  2EAB               	goto	u5671
  7159     16A7  0378               	decf	_currentTime+1,w
  7160     16A8  1D03               	btfss	3,2
  7161     16A9  2EAB               	goto	u5671
  7162     16AA  2EAC               	goto	u5670
  7163     16AB                     u5671:
  7164     16AB  2F07               	goto	l4247
  7165     16AC                     u5670:
  7166     16AC                     l4221:
  7167     16AC  0379               	decf	_currentTime+2,w
  7168     16AD  047A               	iorwf	_currentTime+3,w
  7169     16AE  1D03               	btfss	3,2
  7170     16AF  2EB1               	goto	u5681
  7171     16B0  2EB2               	goto	u5680
  7172     16B1                     u5681:
  7173     16B1  2F07               	goto	l4247
  7174     16B2                     u5680:
  7175     16B2                     l4223:
  7176                           
  7177                           ;main.c: 220:     Lcd_Clear();
  7178     16B2  160A  158A  27F3  160A  118A  	fcall	_Lcd_Clear
  7179     16B7                     l4225:
  7180                           
  7181                           ;main.c: 221:     int i=0 ;
  7182     16B7  1683               	bsf	3,5	;RP0=1, select bank3
  7183     16B8  1703               	bsf	3,6	;RP1=1, select bank3
  7184     16B9  019A               	clrf	main@i^(0+384)
  7185     16BA  019B               	clrf	(main@i+1)^(0+384)
  7186     16BB                     l4227:
  7187                           
  7188                           ;main.c: 222:     for(; i < 10; i++)
  7189     16BB  081B               	movf	(main@i+1)^(0+384),w
  7190     16BC  3A80               	xorlw	128
  7191     16BD  00FF               	movwf	btemp+1
  7192     16BE  3080               	movlw	128
  7193     16BF  027F               	subwf	btemp+1,w
  7194     16C0  1D03               	skipz
  7195     16C1  2EC4               	goto	u5695
  7196     16C2  300A               	movlw	10
  7197     16C3  021A               	subwf	main@i^(0+384),w
  7198     16C4                     u5695:
  7199     16C4  1C03               	skipc
  7200     16C5  2EC7               	goto	u5691
  7201     16C6  2EC8               	goto	u5690
  7202     16C7                     u5691:
  7203     16C7  2EC9               	goto	l4231
  7204     16C8                     u5690:
  7205     16C8  2EFF               	goto	l4243
  7206     16C9                     l4231:
  7207                           
  7208                           ;main.c: 223: {;main.c: 224:    Lcd_Set_Cursor(1, 1);
  7209     16C9  1283               	bcf	3,5	;RP0=0, select bank0
  7210     16CA  1303               	bcf	3,6	;RP1=0, select bank0
  7211     16CB  01A4               	clrf	Lcd_Set_Cursor@b
  7212     16CC  0AA4               	incf	Lcd_Set_Cursor@b,f
  7213     16CD  3001               	movlw	1
  7214     16CE  160A  118A  225F  160A  118A  	fcall	_Lcd_Set_Cursor
  7215     16D3                     l4233:
  7216                           
  7217                           ;main.c: 225: Lcd_Write_String("YAG BAKIMI YAPINIZ");
  7218     16D3  30AA               	movlw	low (STR_6| (0+32768))
  7219     16D4  1283               	bcf	3,5	;RP0=0, select bank0
  7220     16D5  1303               	bcf	3,6	;RP1=0, select bank0
  7221     16D6  00A5               	movwf	Lcd_Write_String@a
  7222     16D7  3098               	movlw	high (STR_6| (0+32768))
  7223     16D8  00A6               	movwf	Lcd_Write_String@a+1
  7224     16D9  160A  118A  2146  160A  118A  	fcall	_Lcd_Write_String
  7225     16DE                     l4235:
  7226                           
  7227                           ;main.c: 226: Lcd_Set_Cursor(2, 1);
  7228     16DE  1283               	bcf	3,5	;RP0=0, select bank0
  7229     16DF  1303               	bcf	3,6	;RP1=0, select bank0
  7230     16E0  01A4               	clrf	Lcd_Set_Cursor@b
  7231     16E1  0AA4               	incf	Lcd_Set_Cursor@b,f
  7232     16E2  3002               	movlw	2
  7233     16E3  160A  118A  225F  160A  118A  	fcall	_Lcd_Set_Cursor
  7234                           
  7235                           ;main.c: 227: Lcd_Write_String("OIL THE GEARS");
  7236     16E8  30F9               	movlw	low (STR_7| (0+32768))
  7237     16E9  1283               	bcf	3,5	;RP0=0, select bank0
  7238     16EA  1303               	bcf	3,6	;RP1=0, select bank0
  7239     16EB  00A5               	movwf	Lcd_Write_String@a
  7240     16EC  3098               	movlw	high (STR_7| (0+32768))
  7241     16ED  00A6               	movwf	Lcd_Write_String@a+1
  7242     16EE  160A  118A  2146  160A  118A  	fcall	_Lcd_Write_String
  7243     16F3                     l4237:
  7244                           
  7245                           ;main.c: 228: RA4 = 1;
  7246     16F3  1283               	bcf	3,5	;RP0=0, select bank0
  7247     16F4  1303               	bcf	3,6	;RP1=0, select bank0
  7248     16F5  1605               	bsf	5,4	;volatile
  7249     16F6                     l4239:
  7250                           
  7251                           ;main.c: 229: }
  7252     16F6  3001               	movlw	1
  7253     16F7  1683               	bsf	3,5	;RP0=1, select bank3
  7254     16F8  1703               	bsf	3,6	;RP1=1, select bank3
  7255     16F9  079A               	addwf	main@i^(0+384),f
  7256     16FA  1803               	skipnc
  7257     16FB  0A9B               	incf	(main@i+1)^(0+384),f
  7258     16FC  3000               	movlw	0
  7259     16FD  079B               	addwf	(main@i+1)^(0+384),f
  7260     16FE  2EBB               	goto	l4227
  7261     16FF                     l4243:
  7262                           
  7263                           ;main.c: 230:     Lcd_Clear();
  7264     16FF  160A  158A  27F3  160A  118A  	fcall	_Lcd_Clear
  7265     1704                     l4245:
  7266                           
  7267                           ;main.c: 232:     RA4 = 0;
  7268     1704  1283               	bcf	3,5	;RP0=0, select bank0
  7269     1705  1303               	bcf	3,6	;RP1=0, select bank0
  7270     1706  1205               	bcf	5,4	;volatile
  7271     1707                     l4247:
  7272                           
  7273                           ;main.c: 235: if ((currentTime.hours == 500 || currentTime.hours == 501 || currentTime.h
      +                          ours == 502) && currentTime.minutes == 0) {
  7274     1707  30F4               	movlw	244
  7275     1708  0677               	xorwf	_currentTime,w
  7276     1709  1D03               	skipz
  7277     170A  2F10               	goto	u5700
  7278     170B  0378               	decf	_currentTime+1,w
  7279     170C  1903               	btfsc	3,2
  7280     170D  2F0F               	goto	u5701
  7281     170E  2F10               	goto	u5700
  7282     170F                     u5701:
  7283     170F  2F22               	goto	l4253
  7284     1710                     u5700:
  7285     1710                     l4249:
  7286     1710  30F5               	movlw	245
  7287     1711  0677               	xorwf	_currentTime,w
  7288     1712  1D03               	skipz
  7289     1713  2F19               	goto	u5710
  7290     1714  0378               	decf	_currentTime+1,w
  7291     1715  1903               	btfsc	3,2
  7292     1716  2F18               	goto	u5711
  7293     1717  2F19               	goto	u5710
  7294     1718                     u5711:
  7295     1718  2F22               	goto	l4253
  7296     1719                     u5710:
  7297     1719                     l4251:
  7298     1719  30F6               	movlw	246
  7299     171A  0677               	xorwf	_currentTime,w
  7300     171B  1D03               	skipz
  7301     171C  2F21               	goto	u5721
  7302     171D  0378               	decf	_currentTime+1,w
  7303     171E  1D03               	btfss	3,2
  7304     171F  2F21               	goto	u5721
  7305     1720  2F22               	goto	u5720
  7306     1721                     u5721:
  7307     1721  2F7D               	goto	l4279
  7308     1722                     u5720:
  7309     1722                     l4253:
  7310     1722  0879               	movf	_currentTime+2,w
  7311     1723  047A               	iorwf	_currentTime+3,w
  7312     1724  1D03               	btfss	3,2
  7313     1725  2F27               	goto	u5731
  7314     1726  2F28               	goto	u5730
  7315     1727                     u5731:
  7316     1727  2F7D               	goto	l4279
  7317     1728                     u5730:
  7318     1728                     l4255:
  7319                           
  7320                           ;main.c: 237:     Lcd_Clear();
  7321     1728  160A  158A  27F3  160A  118A  	fcall	_Lcd_Clear
  7322     172D                     l4257:
  7323                           
  7324                           ;main.c: 238:     int i=0 ;
  7325     172D  1683               	bsf	3,5	;RP0=1, select bank3
  7326     172E  1703               	bsf	3,6	;RP1=1, select bank3
  7327     172F  019C               	clrf	main@i_323^(0+384)
  7328     1730  019D               	clrf	(main@i_323+1)^(0+384)
  7329     1731                     l4259:
  7330                           
  7331                           ;main.c: 239:     for(; i < 10; i++)
  7332     1731  081D               	movf	(main@i_323+1)^(0+384),w
  7333     1732  3A80               	xorlw	128
  7334     1733  00FF               	movwf	btemp+1
  7335     1734  3080               	movlw	128
  7336     1735  027F               	subwf	btemp+1,w
  7337     1736  1D03               	skipz
  7338     1737  2F3A               	goto	u5745
  7339     1738  300A               	movlw	10
  7340     1739  021C               	subwf	main@i_323^(0+384),w
  7341     173A                     u5745:
  7342     173A  1C03               	skipc
  7343     173B  2F3D               	goto	u5741
  7344     173C  2F3E               	goto	u5740
  7345     173D                     u5741:
  7346     173D  2F3F               	goto	l4263
  7347     173E                     u5740:
  7348     173E  2F75               	goto	l4275
  7349     173F                     l4263:
  7350                           
  7351                           ;main.c: 240: {;main.c: 241:    Lcd_Set_Cursor(1, 1);
  7352     173F  1283               	bcf	3,5	;RP0=0, select bank0
  7353     1740  1303               	bcf	3,6	;RP1=0, select bank0
  7354     1741  01A4               	clrf	Lcd_Set_Cursor@b
  7355     1742  0AA4               	incf	Lcd_Set_Cursor@b,f
  7356     1743  3001               	movlw	1
  7357     1744  160A  118A  225F  160A  118A  	fcall	_Lcd_Set_Cursor
  7358     1749                     l4265:
  7359                           
  7360                           ;main.c: 242: Lcd_Write_String("YAG BAKIMI YAPINIZ");
  7361     1749  30AA               	movlw	low (STR_6| (0+32768))
  7362     174A  1283               	bcf	3,5	;RP0=0, select bank0
  7363     174B  1303               	bcf	3,6	;RP1=0, select bank0
  7364     174C  00A5               	movwf	Lcd_Write_String@a
  7365     174D  3098               	movlw	high (STR_6| (0+32768))
  7366     174E  00A6               	movwf	Lcd_Write_String@a+1
  7367     174F  160A  118A  2146  160A  118A  	fcall	_Lcd_Write_String
  7368     1754                     l4267:
  7369                           
  7370                           ;main.c: 243: Lcd_Set_Cursor(2, 1);
  7371     1754  1283               	bcf	3,5	;RP0=0, select bank0
  7372     1755  1303               	bcf	3,6	;RP1=0, select bank0
  7373     1756  01A4               	clrf	Lcd_Set_Cursor@b
  7374     1757  0AA4               	incf	Lcd_Set_Cursor@b,f
  7375     1758  3002               	movlw	2
  7376     1759  160A  118A  225F  160A  118A  	fcall	_Lcd_Set_Cursor
  7377                           
  7378                           ;main.c: 244: Lcd_Write_String("OIL THE GEARS");
  7379     175E  30F9               	movlw	low (STR_7| (0+32768))
  7380     175F  1283               	bcf	3,5	;RP0=0, select bank0
  7381     1760  1303               	bcf	3,6	;RP1=0, select bank0
  7382     1761  00A5               	movwf	Lcd_Write_String@a
  7383     1762  3098               	movlw	high (STR_7| (0+32768))
  7384     1763  00A6               	movwf	Lcd_Write_String@a+1
  7385     1764  160A  118A  2146  160A  118A  	fcall	_Lcd_Write_String
  7386     1769                     l4269:
  7387                           
  7388                           ;main.c: 245: RA4 = 1;
  7389     1769  1283               	bcf	3,5	;RP0=0, select bank0
  7390     176A  1303               	bcf	3,6	;RP1=0, select bank0
  7391     176B  1605               	bsf	5,4	;volatile
  7392     176C                     l4271:
  7393                           
  7394                           ;main.c: 246: }
  7395     176C  3001               	movlw	1
  7396     176D  1683               	bsf	3,5	;RP0=1, select bank3
  7397     176E  1703               	bsf	3,6	;RP1=1, select bank3
  7398     176F  079C               	addwf	main@i_323^(0+384),f
  7399     1770  1803               	skipnc
  7400     1771  0A9D               	incf	(main@i_323+1)^(0+384),f
  7401     1772  3000               	movlw	0
  7402     1773  079D               	addwf	(main@i_323+1)^(0+384),f
  7403     1774  2F31               	goto	l4259
  7404     1775                     l4275:
  7405                           
  7406                           ;main.c: 247:     Lcd_Clear();
  7407     1775  160A  158A  27F3  160A  118A  	fcall	_Lcd_Clear
  7408     177A                     l4277:
  7409                           
  7410                           ;main.c: 248:     RA4 = 0;
  7411     177A  1283               	bcf	3,5	;RP0=0, select bank0
  7412     177B  1303               	bcf	3,6	;RP1=0, select bank0
  7413     177C  1205               	bcf	5,4	;volatile
  7414     177D                     l4279:
  7415                           
  7416                           ;main.c: 251: if ((currentTime.hours == 1000 || currentTime.hours == 1001 || currentTime
      +                          .hours == 1002) && currentTime.minutes == 0) {
  7417     177D  30E8               	movlw	232
  7418     177E  0677               	xorwf	_currentTime,w
  7419     177F  3003               	movlw	3
  7420     1780  1903               	skipnz
  7421     1781  0678               	xorwf	_currentTime+1,w
  7422     1782  1903               	btfsc	3,2
  7423     1783  2F85               	goto	u5751
  7424     1784  2F86               	goto	u5750
  7425     1785                     u5751:
  7426     1785  2F98               	goto	l4285
  7427     1786                     u5750:
  7428     1786                     l4281:
  7429     1786  30E9               	movlw	233
  7430     1787  0677               	xorwf	_currentTime,w
  7431     1788  3003               	movlw	3
  7432     1789  1903               	skipnz
  7433     178A  0678               	xorwf	_currentTime+1,w
  7434     178B  1903               	btfsc	3,2
  7435     178C  2F8E               	goto	u5761
  7436     178D  2F8F               	goto	u5760
  7437     178E                     u5761:
  7438     178E  2F98               	goto	l4285
  7439     178F                     u5760:
  7440     178F                     l4283:
  7441     178F  30EA               	movlw	234
  7442     1790  0677               	xorwf	_currentTime,w
  7443     1791  3003               	movlw	3
  7444     1792  1903               	skipnz
  7445     1793  0678               	xorwf	_currentTime+1,w
  7446     1794  1D03               	btfss	3,2
  7447     1795  2F97               	goto	u5771
  7448     1796  2F98               	goto	u5770
  7449     1797                     u5771:
  7450     1797  2FF3               	goto	l4311
  7451     1798                     u5770:
  7452     1798                     l4285:
  7453     1798  0879               	movf	_currentTime+2,w
  7454     1799  047A               	iorwf	_currentTime+3,w
  7455     179A  1D03               	btfss	3,2
  7456     179B  2F9D               	goto	u5781
  7457     179C  2F9E               	goto	u5780
  7458     179D                     u5781:
  7459     179D  2FF3               	goto	l4311
  7460     179E                     u5780:
  7461     179E                     l4287:
  7462                           
  7463                           ;main.c: 253:     Lcd_Clear();
  7464     179E  160A  158A  27F3  160A  118A  	fcall	_Lcd_Clear
  7465     17A3                     l4289:
  7466                           
  7467                           ;main.c: 254:     int i=0 ;
  7468     17A3  1683               	bsf	3,5	;RP0=1, select bank3
  7469     17A4  1703               	bsf	3,6	;RP1=1, select bank3
  7470     17A5  019E               	clrf	main@i_326^(0+384)
  7471     17A6  019F               	clrf	(main@i_326+1)^(0+384)
  7472     17A7                     l4291:
  7473                           
  7474                           ;main.c: 255:     for(; i < 10; i++)
  7475     17A7  081F               	movf	(main@i_326+1)^(0+384),w
  7476     17A8  3A80               	xorlw	128
  7477     17A9  00FF               	movwf	btemp+1
  7478     17AA  3080               	movlw	128
  7479     17AB  027F               	subwf	btemp+1,w
  7480     17AC  1D03               	skipz
  7481     17AD  2FB0               	goto	u5795
  7482     17AE  300A               	movlw	10
  7483     17AF  021E               	subwf	main@i_326^(0+384),w
  7484     17B0                     u5795:
  7485     17B0  1C03               	skipc
  7486     17B1  2FB3               	goto	u5791
  7487     17B2  2FB4               	goto	u5790
  7488     17B3                     u5791:
  7489     17B3  2FB5               	goto	l4295
  7490     17B4                     u5790:
  7491     17B4  2FEB               	goto	l4307
  7492     17B5                     l4295:
  7493                           
  7494                           ;main.c: 256: {;main.c: 257:    Lcd_Set_Cursor(1, 1);
  7495     17B5  1283               	bcf	3,5	;RP0=0, select bank0
  7496     17B6  1303               	bcf	3,6	;RP1=0, select bank0
  7497     17B7  01A4               	clrf	Lcd_Set_Cursor@b
  7498     17B8  0AA4               	incf	Lcd_Set_Cursor@b,f
  7499     17B9  3001               	movlw	1
  7500     17BA  160A  118A  225F  160A  118A  	fcall	_Lcd_Set_Cursor
  7501     17BF                     l4297:
  7502                           
  7503                           ;main.c: 258: Lcd_Write_String("YAG BAKIMI YAPINIZ");
  7504     17BF  30AA               	movlw	low (STR_6| (0+32768))
  7505     17C0  1283               	bcf	3,5	;RP0=0, select bank0
  7506     17C1  1303               	bcf	3,6	;RP1=0, select bank0
  7507     17C2  00A5               	movwf	Lcd_Write_String@a
  7508     17C3  3098               	movlw	high (STR_6| (0+32768))
  7509     17C4  00A6               	movwf	Lcd_Write_String@a+1
  7510     17C5  160A  118A  2146  160A  118A  	fcall	_Lcd_Write_String
  7511     17CA                     l4299:
  7512                           
  7513                           ;main.c: 259: Lcd_Set_Cursor(2, 1);
  7514     17CA  1283               	bcf	3,5	;RP0=0, select bank0
  7515     17CB  1303               	bcf	3,6	;RP1=0, select bank0
  7516     17CC  01A4               	clrf	Lcd_Set_Cursor@b
  7517     17CD  0AA4               	incf	Lcd_Set_Cursor@b,f
  7518     17CE  3002               	movlw	2
  7519     17CF  160A  118A  225F  160A  118A  	fcall	_Lcd_Set_Cursor
  7520                           
  7521                           ;main.c: 260: Lcd_Write_String("OIL THE GEARS");
  7522     17D4  30F9               	movlw	low (STR_7| (0+32768))
  7523     17D5  1283               	bcf	3,5	;RP0=0, select bank0
  7524     17D6  1303               	bcf	3,6	;RP1=0, select bank0
  7525     17D7  00A5               	movwf	Lcd_Write_String@a
  7526     17D8  3098               	movlw	high (STR_7| (0+32768))
  7527     17D9  00A6               	movwf	Lcd_Write_String@a+1
  7528     17DA  160A  118A  2146  160A  118A  	fcall	_Lcd_Write_String
  7529     17DF                     l4301:
  7530                           
  7531                           ;main.c: 261: RA4 = 1;
  7532     17DF  1283               	bcf	3,5	;RP0=0, select bank0
  7533     17E0  1303               	bcf	3,6	;RP1=0, select bank0
  7534     17E1  1605               	bsf	5,4	;volatile
  7535     17E2                     l4303:
  7536                           
  7537                           ;main.c: 262: }
  7538     17E2  3001               	movlw	1
  7539     17E3  1683               	bsf	3,5	;RP0=1, select bank3
  7540     17E4  1703               	bsf	3,6	;RP1=1, select bank3
  7541     17E5  079E               	addwf	main@i_326^(0+384),f
  7542     17E6  1803               	skipnc
  7543     17E7  0A9F               	incf	(main@i_326+1)^(0+384),f
  7544     17E8  3000               	movlw	0
  7545     17E9  079F               	addwf	(main@i_326+1)^(0+384),f
  7546     17EA  2FA7               	goto	l4291
  7547     17EB                     l4307:
  7548                           
  7549                           ;main.c: 263:     Lcd_Clear();
  7550     17EB  160A  158A  27F3  160A  118A  	fcall	_Lcd_Clear
  7551     17F0                     l4309:
  7552                           
  7553                           ;main.c: 264:     RA4 = 0;
  7554     17F0  1283               	bcf	3,5	;RP0=0, select bank0
  7555     17F1  1303               	bcf	3,6	;RP1=0, select bank0
  7556     17F2  1205               	bcf	5,4	;volatile
  7557     17F3                     l4311:
  7558                           
  7559                           ;main.c: 267: if ((currentTime.hours == 1500 || currentTime.hours == 1501 || currentTime
      +                          .hours == 1502) && currentTime.minutes == 0) {
  7560     17F3  30DC               	movlw	220
  7561     17F4  0677               	xorwf	_currentTime,w
  7562     17F5  3005               	movlw	5
  7563     17F6  1903               	skipnz
  7564     17F7  0678               	xorwf	_currentTime+1,w
  7565     17F8  1903               	btfsc	3,2
  7566     17F9  2FFD               	goto	u5801
  7567     17FA  120A  118A  2823   	goto	u5800
  7568     17FD                     u5801:
  7569     17FD  120A  118A  2835   	goto	l4317
  7570                           
  7571                           	psect	maintext_split_2
  7572     0023                     u5800:
  7573     0023                     l4313:
  7574     0023  30DD               	movlw	221
  7575     0024  0677               	xorwf	_currentTime,w
  7576     0025  3005               	movlw	5
  7577     0026  1903               	skipnz
  7578     0027  0678               	xorwf	_currentTime+1,w
  7579     0028  1903               	btfsc	3,2
  7580     0029  282B               	goto	u5811
  7581     002A  282C               	goto	u5810
  7582     002B                     u5811:
  7583     002B  2835               	goto	l4317
  7584     002C                     u5810:
  7585     002C                     l4315:
  7586     002C  30DE               	movlw	222
  7587     002D  0677               	xorwf	_currentTime,w
  7588     002E  3005               	movlw	5
  7589     002F  1903               	skipnz
  7590     0030  0678               	xorwf	_currentTime+1,w
  7591     0031  1D03               	btfss	3,2
  7592     0032  2834               	goto	u5821
  7593     0033  2835               	goto	u5820
  7594     0034                     u5821:
  7595     0034  2890               	goto	l4343
  7596     0035                     u5820:
  7597     0035                     l4317:
  7598     0035  0879               	movf	_currentTime+2,w
  7599     0036  047A               	iorwf	_currentTime+3,w
  7600     0037  1D03               	btfss	3,2
  7601     0038  283A               	goto	u5831
  7602     0039  283B               	goto	u5830
  7603     003A                     u5831:
  7604     003A  2890               	goto	l4343
  7605     003B                     u5830:
  7606     003B                     l4319:
  7607                           
  7608                           ;main.c: 269:     Lcd_Clear();
  7609     003B  160A  158A  27F3  120A  118A  	fcall	_Lcd_Clear
  7610     0040                     l4321:
  7611                           
  7612                           ;main.c: 270:     int i=0 ;
  7613     0040  1683               	bsf	3,5	;RP0=1, select bank3
  7614     0041  1703               	bsf	3,6	;RP1=1, select bank3
  7615     0042  01A0               	clrf	main@i_329^(0+384)
  7616     0043  01A1               	clrf	(main@i_329+1)^(0+384)
  7617     0044                     l4323:
  7618                           
  7619                           ;main.c: 271:     for(; i < 10; i++)
  7620     0044  0821               	movf	(main@i_329+1)^(0+384),w
  7621     0045  3A80               	xorlw	128
  7622     0046  00FF               	movwf	btemp+1
  7623     0047  3080               	movlw	128
  7624     0048  027F               	subwf	btemp+1,w
  7625     0049  1D03               	skipz
  7626     004A  284D               	goto	u5845
  7627     004B  300A               	movlw	10
  7628     004C  0220               	subwf	main@i_329^(0+384),w
  7629     004D                     u5845:
  7630     004D  1C03               	skipc
  7631     004E  2850               	goto	u5841
  7632     004F  2851               	goto	u5840
  7633     0050                     u5841:
  7634     0050  2852               	goto	l4327
  7635     0051                     u5840:
  7636     0051  2888               	goto	l4339
  7637     0052                     l4327:
  7638                           
  7639                           ;main.c: 272: {;main.c: 273:    Lcd_Set_Cursor(1, 1);
  7640     0052  1283               	bcf	3,5	;RP0=0, select bank0
  7641     0053  1303               	bcf	3,6	;RP1=0, select bank0
  7642     0054  01A4               	clrf	Lcd_Set_Cursor@b
  7643     0055  0AA4               	incf	Lcd_Set_Cursor@b,f
  7644     0056  3001               	movlw	1
  7645     0057  160A  118A  225F  120A  118A  	fcall	_Lcd_Set_Cursor
  7646     005C                     l4329:
  7647                           
  7648                           ;main.c: 274: Lcd_Write_String("YAG BAKIMI YAPINIZ");
  7649     005C  30AA               	movlw	low (STR_6| (0+32768))
  7650     005D  1283               	bcf	3,5	;RP0=0, select bank0
  7651     005E  1303               	bcf	3,6	;RP1=0, select bank0
  7652     005F  00A5               	movwf	Lcd_Write_String@a
  7653     0060  3098               	movlw	high (STR_6| (0+32768))
  7654     0061  00A6               	movwf	Lcd_Write_String@a+1
  7655     0062  160A  118A  2146  120A  118A  	fcall	_Lcd_Write_String
  7656     0067                     l4331:
  7657                           
  7658                           ;main.c: 275: Lcd_Set_Cursor(2, 1);
  7659     0067  1283               	bcf	3,5	;RP0=0, select bank0
  7660     0068  1303               	bcf	3,6	;RP1=0, select bank0
  7661     0069  01A4               	clrf	Lcd_Set_Cursor@b
  7662     006A  0AA4               	incf	Lcd_Set_Cursor@b,f
  7663     006B  3002               	movlw	2
  7664     006C  160A  118A  225F  120A  118A  	fcall	_Lcd_Set_Cursor
  7665                           
  7666                           ;main.c: 276: Lcd_Write_String("OIL THE GEARS");
  7667     0071  30F9               	movlw	low (STR_7| (0+32768))
  7668     0072  1283               	bcf	3,5	;RP0=0, select bank0
  7669     0073  1303               	bcf	3,6	;RP1=0, select bank0
  7670     0074  00A5               	movwf	Lcd_Write_String@a
  7671     0075  3098               	movlw	high (STR_7| (0+32768))
  7672     0076  00A6               	movwf	Lcd_Write_String@a+1
  7673     0077  160A  118A  2146  120A  118A  	fcall	_Lcd_Write_String
  7674     007C                     l4333:
  7675                           
  7676                           ;main.c: 277: RA4 = 1;
  7677     007C  1283               	bcf	3,5	;RP0=0, select bank0
  7678     007D  1303               	bcf	3,6	;RP1=0, select bank0
  7679     007E  1605               	bsf	5,4	;volatile
  7680     007F                     l4335:
  7681                           
  7682                           ;main.c: 278: }
  7683     007F  3001               	movlw	1
  7684     0080  1683               	bsf	3,5	;RP0=1, select bank3
  7685     0081  1703               	bsf	3,6	;RP1=1, select bank3
  7686     0082  07A0               	addwf	main@i_329^(0+384),f
  7687     0083  1803               	skipnc
  7688     0084  0AA1               	incf	(main@i_329+1)^(0+384),f
  7689     0085  3000               	movlw	0
  7690     0086  07A1               	addwf	(main@i_329+1)^(0+384),f
  7691     0087  2844               	goto	l4323
  7692     0088                     l4339:
  7693                           
  7694                           ;main.c: 279:     Lcd_Clear();
  7695     0088  160A  158A  27F3  120A  118A  	fcall	_Lcd_Clear
  7696     008D                     l4341:
  7697                           
  7698                           ;main.c: 280:     RA4 = 0;
  7699     008D  1283               	bcf	3,5	;RP0=0, select bank0
  7700     008E  1303               	bcf	3,6	;RP1=0, select bank0
  7701     008F  1205               	bcf	5,4	;volatile
  7702     0090                     l4343:
  7703                           
  7704                           ;main.c: 283: if ((currentTime.hours == 2000 || currentTime.hours == 2001 || currentTime
      +                          .hours == 2002) && currentTime.minutes == 0) {
  7705     0090  30D0               	movlw	208
  7706     0091  0677               	xorwf	_currentTime,w
  7707     0092  3007               	movlw	7
  7708     0093  1903               	skipnz
  7709     0094  0678               	xorwf	_currentTime+1,w
  7710     0095  1903               	btfsc	3,2
  7711     0096  2898               	goto	u5851
  7712     0097  2899               	goto	u5850
  7713     0098                     u5851:
  7714     0098  28AB               	goto	l4349
  7715     0099                     u5850:
  7716     0099                     l4345:
  7717     0099  30D1               	movlw	209
  7718     009A  0677               	xorwf	_currentTime,w
  7719     009B  3007               	movlw	7
  7720     009C  1903               	skipnz
  7721     009D  0678               	xorwf	_currentTime+1,w
  7722     009E  1903               	btfsc	3,2
  7723     009F  28A1               	goto	u5861
  7724     00A0  28A2               	goto	u5860
  7725     00A1                     u5861:
  7726     00A1  28AB               	goto	l4349
  7727     00A2                     u5860:
  7728     00A2                     l4347:
  7729     00A2  30D2               	movlw	210
  7730     00A3  0677               	xorwf	_currentTime,w
  7731     00A4  3007               	movlw	7
  7732     00A5  1903               	skipnz
  7733     00A6  0678               	xorwf	_currentTime+1,w
  7734     00A7  1D03               	btfss	3,2
  7735     00A8  28AA               	goto	u5871
  7736     00A9  28AB               	goto	u5870
  7737     00AA                     u5871:
  7738     00AA  2906               	goto	l4375
  7739     00AB                     u5870:
  7740     00AB                     l4349:
  7741     00AB  0879               	movf	_currentTime+2,w
  7742     00AC  047A               	iorwf	_currentTime+3,w
  7743     00AD  1D03               	btfss	3,2
  7744     00AE  28B0               	goto	u5881
  7745     00AF  28B1               	goto	u5880
  7746     00B0                     u5881:
  7747     00B0  2906               	goto	l4375
  7748     00B1                     u5880:
  7749     00B1                     l4351:
  7750                           
  7751                           ;main.c: 285:     Lcd_Clear();
  7752     00B1  160A  158A  27F3  120A  118A  	fcall	_Lcd_Clear
  7753     00B6                     l4353:
  7754                           
  7755                           ;main.c: 286:     int i=0 ;
  7756     00B6  1683               	bsf	3,5	;RP0=1, select bank3
  7757     00B7  1703               	bsf	3,6	;RP1=1, select bank3
  7758     00B8  01A2               	clrf	main@i_332^(0+384)
  7759     00B9  01A3               	clrf	(main@i_332+1)^(0+384)
  7760     00BA                     l4355:
  7761                           
  7762                           ;main.c: 287:     for(; i < 10; i++)
  7763     00BA  0823               	movf	(main@i_332+1)^(0+384),w
  7764     00BB  3A80               	xorlw	128
  7765     00BC  00FF               	movwf	btemp+1
  7766     00BD  3080               	movlw	128
  7767     00BE  027F               	subwf	btemp+1,w
  7768     00BF  1D03               	skipz
  7769     00C0  28C3               	goto	u5895
  7770     00C1  300A               	movlw	10
  7771     00C2  0222               	subwf	main@i_332^(0+384),w
  7772     00C3                     u5895:
  7773     00C3  1C03               	skipc
  7774     00C4  28C6               	goto	u5891
  7775     00C5  28C7               	goto	u5890
  7776     00C6                     u5891:
  7777     00C6  28C8               	goto	l4359
  7778     00C7                     u5890:
  7779     00C7  28FE               	goto	l4371
  7780     00C8                     l4359:
  7781                           
  7782                           ;main.c: 288: {;main.c: 289:    Lcd_Set_Cursor(1, 1);
  7783     00C8  1283               	bcf	3,5	;RP0=0, select bank0
  7784     00C9  1303               	bcf	3,6	;RP1=0, select bank0
  7785     00CA  01A4               	clrf	Lcd_Set_Cursor@b
  7786     00CB  0AA4               	incf	Lcd_Set_Cursor@b,f
  7787     00CC  3001               	movlw	1
  7788     00CD  160A  118A  225F  120A  118A  	fcall	_Lcd_Set_Cursor
  7789     00D2                     l4361:
  7790                           
  7791                           ;main.c: 290: Lcd_Write_String("YAG BAKIMI YAPINIZ");
  7792     00D2  30AA               	movlw	low (STR_6| (0+32768))
  7793     00D3  1283               	bcf	3,5	;RP0=0, select bank0
  7794     00D4  1303               	bcf	3,6	;RP1=0, select bank0
  7795     00D5  00A5               	movwf	Lcd_Write_String@a
  7796     00D6  3098               	movlw	high (STR_6| (0+32768))
  7797     00D7  00A6               	movwf	Lcd_Write_String@a+1
  7798     00D8  160A  118A  2146  120A  118A  	fcall	_Lcd_Write_String
  7799     00DD                     l4363:
  7800                           
  7801                           ;main.c: 291: Lcd_Set_Cursor(2, 1);
  7802     00DD  1283               	bcf	3,5	;RP0=0, select bank0
  7803     00DE  1303               	bcf	3,6	;RP1=0, select bank0
  7804     00DF  01A4               	clrf	Lcd_Set_Cursor@b
  7805     00E0  0AA4               	incf	Lcd_Set_Cursor@b,f
  7806     00E1  3002               	movlw	2
  7807     00E2  160A  118A  225F  120A  118A  	fcall	_Lcd_Set_Cursor
  7808                           
  7809                           ;main.c: 292: Lcd_Write_String("OIL THE GEARS");
  7810     00E7  30F9               	movlw	low (STR_7| (0+32768))
  7811     00E8  1283               	bcf	3,5	;RP0=0, select bank0
  7812     00E9  1303               	bcf	3,6	;RP1=0, select bank0
  7813     00EA  00A5               	movwf	Lcd_Write_String@a
  7814     00EB  3098               	movlw	high (STR_7| (0+32768))
  7815     00EC  00A6               	movwf	Lcd_Write_String@a+1
  7816     00ED  160A  118A  2146  120A  118A  	fcall	_Lcd_Write_String
  7817     00F2                     l4365:
  7818                           
  7819                           ;main.c: 293: RA4 = 1;
  7820     00F2  1283               	bcf	3,5	;RP0=0, select bank0
  7821     00F3  1303               	bcf	3,6	;RP1=0, select bank0
  7822     00F4  1605               	bsf	5,4	;volatile
  7823     00F5                     l4367:
  7824                           
  7825                           ;main.c: 294: }
  7826     00F5  3001               	movlw	1
  7827     00F6  1683               	bsf	3,5	;RP0=1, select bank3
  7828     00F7  1703               	bsf	3,6	;RP1=1, select bank3
  7829     00F8  07A2               	addwf	main@i_332^(0+384),f
  7830     00F9  1803               	skipnc
  7831     00FA  0AA3               	incf	(main@i_332+1)^(0+384),f
  7832     00FB  3000               	movlw	0
  7833     00FC  07A3               	addwf	(main@i_332+1)^(0+384),f
  7834     00FD  28BA               	goto	l4355
  7835     00FE                     l4371:
  7836                           
  7837                           ;main.c: 295:     Lcd_Clear();
  7838     00FE  160A  158A  27F3  120A  118A  	fcall	_Lcd_Clear
  7839     0103                     l4373:
  7840                           
  7841                           ;main.c: 296:     RA4 = 0;
  7842     0103  1283               	bcf	3,5	;RP0=0, select bank0
  7843     0104  1303               	bcf	3,6	;RP1=0, select bank0
  7844     0105  1205               	bcf	5,4	;volatile
  7845     0106                     l4375:
  7846                           
  7847                           ;main.c: 299: if ((currentTime.hours == 2500 || currentTime.hours == 2501 || currentTime
      +                          .hours == 2502) && currentTime.minutes == 0) {
  7848     0106  30C4               	movlw	196
  7849     0107  0677               	xorwf	_currentTime,w
  7850     0108  3009               	movlw	9
  7851     0109  1903               	skipnz
  7852     010A  0678               	xorwf	_currentTime+1,w
  7853     010B  1903               	btfsc	3,2
  7854     010C  290E               	goto	u5901
  7855     010D  290F               	goto	u5900
  7856     010E                     u5901:
  7857     010E  2921               	goto	l4381
  7858     010F                     u5900:
  7859     010F                     l4377:
  7860     010F  30C5               	movlw	197
  7861     0110  0677               	xorwf	_currentTime,w
  7862     0111  3009               	movlw	9
  7863     0112  1903               	skipnz
  7864     0113  0678               	xorwf	_currentTime+1,w
  7865     0114  1903               	btfsc	3,2
  7866     0115  2917               	goto	u5911
  7867     0116  2918               	goto	u5910
  7868     0117                     u5911:
  7869     0117  2921               	goto	l4381
  7870     0118                     u5910:
  7871     0118                     l4379:
  7872     0118  30C6               	movlw	198
  7873     0119  0677               	xorwf	_currentTime,w
  7874     011A  3009               	movlw	9
  7875     011B  1903               	skipnz
  7876     011C  0678               	xorwf	_currentTime+1,w
  7877     011D  1D03               	btfss	3,2
  7878     011E  2920               	goto	u5921
  7879     011F  2921               	goto	u5920
  7880     0120                     u5921:
  7881     0120  297C               	goto	l4407
  7882     0121                     u5920:
  7883     0121                     l4381:
  7884     0121  0879               	movf	_currentTime+2,w
  7885     0122  047A               	iorwf	_currentTime+3,w
  7886     0123  1D03               	btfss	3,2
  7887     0124  2926               	goto	u5931
  7888     0125  2927               	goto	u5930
  7889     0126                     u5931:
  7890     0126  297C               	goto	l4407
  7891     0127                     u5930:
  7892     0127                     l4383:
  7893                           
  7894                           ;main.c: 301:     Lcd_Clear();
  7895     0127  160A  158A  27F3  120A  118A  	fcall	_Lcd_Clear
  7896     012C                     l4385:
  7897                           
  7898                           ;main.c: 302:     int i=0 ;
  7899     012C  1683               	bsf	3,5	;RP0=1, select bank3
  7900     012D  1703               	bsf	3,6	;RP1=1, select bank3
  7901     012E  01A4               	clrf	main@i_335^(0+384)
  7902     012F  01A5               	clrf	(main@i_335+1)^(0+384)
  7903     0130                     l4387:
  7904                           
  7905                           ;main.c: 303:     for(; i < 10; i++)
  7906     0130  0825               	movf	(main@i_335+1)^(0+384),w
  7907     0131  3A80               	xorlw	128
  7908     0132  00FF               	movwf	btemp+1
  7909     0133  3080               	movlw	128
  7910     0134  027F               	subwf	btemp+1,w
  7911     0135  1D03               	skipz
  7912     0136  2939               	goto	u5945
  7913     0137  300A               	movlw	10
  7914     0138  0224               	subwf	main@i_335^(0+384),w
  7915     0139                     u5945:
  7916     0139  1C03               	skipc
  7917     013A  293C               	goto	u5941
  7918     013B  293D               	goto	u5940
  7919     013C                     u5941:
  7920     013C  293E               	goto	l4391
  7921     013D                     u5940:
  7922     013D  2974               	goto	l4403
  7923     013E                     l4391:
  7924                           
  7925                           ;main.c: 304: {;main.c: 305:    Lcd_Set_Cursor(1, 1);
  7926     013E  1283               	bcf	3,5	;RP0=0, select bank0
  7927     013F  1303               	bcf	3,6	;RP1=0, select bank0
  7928     0140  01A4               	clrf	Lcd_Set_Cursor@b
  7929     0141  0AA4               	incf	Lcd_Set_Cursor@b,f
  7930     0142  3001               	movlw	1
  7931     0143  160A  118A  225F  120A  118A  	fcall	_Lcd_Set_Cursor
  7932     0148                     l4393:
  7933                           
  7934                           ;main.c: 306: Lcd_Write_String("YAG BAKIMI YAPINIZ");
  7935     0148  30AA               	movlw	low (STR_6| (0+32768))
  7936     0149  1283               	bcf	3,5	;RP0=0, select bank0
  7937     014A  1303               	bcf	3,6	;RP1=0, select bank0
  7938     014B  00A5               	movwf	Lcd_Write_String@a
  7939     014C  3098               	movlw	high (STR_6| (0+32768))
  7940     014D  00A6               	movwf	Lcd_Write_String@a+1
  7941     014E  160A  118A  2146  120A  118A  	fcall	_Lcd_Write_String
  7942     0153                     l4395:
  7943                           
  7944                           ;main.c: 307: Lcd_Set_Cursor(2, 1);
  7945     0153  1283               	bcf	3,5	;RP0=0, select bank0
  7946     0154  1303               	bcf	3,6	;RP1=0, select bank0
  7947     0155  01A4               	clrf	Lcd_Set_Cursor@b
  7948     0156  0AA4               	incf	Lcd_Set_Cursor@b,f
  7949     0157  3002               	movlw	2
  7950     0158  160A  118A  225F  120A  118A  	fcall	_Lcd_Set_Cursor
  7951                           
  7952                           ;main.c: 308: Lcd_Write_String("OIL THE GEARS");
  7953     015D  30F9               	movlw	low (STR_7| (0+32768))
  7954     015E  1283               	bcf	3,5	;RP0=0, select bank0
  7955     015F  1303               	bcf	3,6	;RP1=0, select bank0
  7956     0160  00A5               	movwf	Lcd_Write_String@a
  7957     0161  3098               	movlw	high (STR_7| (0+32768))
  7958     0162  00A6               	movwf	Lcd_Write_String@a+1
  7959     0163  160A  118A  2146  120A  118A  	fcall	_Lcd_Write_String
  7960     0168                     l4397:
  7961                           
  7962                           ;main.c: 309: RA4 = 1;
  7963     0168  1283               	bcf	3,5	;RP0=0, select bank0
  7964     0169  1303               	bcf	3,6	;RP1=0, select bank0
  7965     016A  1605               	bsf	5,4	;volatile
  7966     016B                     l4399:
  7967                           
  7968                           ;main.c: 310: }
  7969     016B  3001               	movlw	1
  7970     016C  1683               	bsf	3,5	;RP0=1, select bank3
  7971     016D  1703               	bsf	3,6	;RP1=1, select bank3
  7972     016E  07A4               	addwf	main@i_335^(0+384),f
  7973     016F  1803               	skipnc
  7974     0170  0AA5               	incf	(main@i_335+1)^(0+384),f
  7975     0171  3000               	movlw	0
  7976     0172  07A5               	addwf	(main@i_335+1)^(0+384),f
  7977     0173  2930               	goto	l4387
  7978     0174                     l4403:
  7979                           
  7980                           ;main.c: 311:     Lcd_Clear();
  7981     0174  160A  158A  27F3  120A  118A  	fcall	_Lcd_Clear
  7982     0179                     l4405:
  7983                           
  7984                           ;main.c: 312:     RA4 = 0;
  7985     0179  1283               	bcf	3,5	;RP0=0, select bank0
  7986     017A  1303               	bcf	3,6	;RP1=0, select bank0
  7987     017B  1205               	bcf	5,4	;volatile
  7988     017C                     l4407:
  7989                           
  7990                           ;main.c: 314:    int saat = readEEPROM(0x00);
  7991     017C  3000               	movlw	0
  7992     017D  00A0               	movwf	readEEPROM@address
  7993     017E  00A1               	movwf	readEEPROM@address+1
  7994     017F  160A  118A  2036  120A  118A  	fcall	_readEEPROM
  7995     0184  1283               	bcf	3,5	;RP0=0, select bank0
  7996     0185  1303               	bcf	3,6	;RP1=0, select bank0
  7997     0186  0821               	movf	?_readEEPROM+1,w
  7998     0187  1683               	bsf	3,5	;RP0=1, select bank1
  7999     0188  1303               	bcf	3,6	;RP1=0, select bank1
  8000     0189  00E5               	movwf	(main@saat+1)^(0+128)
  8001     018A  1283               	bcf	3,5	;RP0=0, select bank0
  8002     018B  1303               	bcf	3,6	;RP1=0, select bank0
  8003     018C  0820               	movf	?_readEEPROM,w
  8004     018D  1683               	bsf	3,5	;RP0=1, select bank1
  8005     018E  1303               	bcf	3,6	;RP1=0, select bank1
  8006     018F  00E4               	movwf	main@saat^(0+128)
  8007     0190                     l4409:
  8008                           
  8009                           ;main.c: 315:    int dakika = readEEPROM(0x01);
  8010     0190  3001               	movlw	1
  8011     0191  1283               	bcf	3,5	;RP0=0, select bank0
  8012     0192  1303               	bcf	3,6	;RP1=0, select bank0
  8013     0193  00A0               	movwf	readEEPROM@address
  8014     0194  3000               	movlw	0
  8015     0195  00A1               	movwf	readEEPROM@address+1
  8016     0196  160A  118A  2036  120A  118A  	fcall	_readEEPROM
  8017     019B  1283               	bcf	3,5	;RP0=0, select bank0
  8018     019C  1303               	bcf	3,6	;RP1=0, select bank0
  8019     019D  0821               	movf	?_readEEPROM+1,w
  8020     019E  1683               	bsf	3,5	;RP0=1, select bank1
  8021     019F  1303               	bcf	3,6	;RP1=0, select bank1
  8022     01A0  00E7               	movwf	(main@dakika+1)^(0+128)
  8023     01A1  1283               	bcf	3,5	;RP0=0, select bank0
  8024     01A2  1303               	bcf	3,6	;RP1=0, select bank0
  8025     01A3  0820               	movf	?_readEEPROM,w
  8026     01A4  1683               	bsf	3,5	;RP0=1, select bank1
  8027     01A5  1303               	bcf	3,6	;RP1=0, select bank1
  8028     01A6  00E6               	movwf	main@dakika^(0+128)
  8029     01A7                     l4411:
  8030                           
  8031                           ;main.c: 318:         sprintf(lcdText, "%5uh %02um", saat, dakika);
  8032     01A7  3014               	movlw	low (STR_18| (0+32768))
  8033     01A8  1283               	bcf	3,5	;RP0=0, select bank0
  8034     01A9  1303               	bcf	3,6	;RP1=0, select bank0
  8035     01AA  00AC               	movwf	sprintf@f
  8036     01AB  3099               	movlw	high (STR_18| (0+32768))
  8037     01AC  00AD               	movwf	sprintf@f+1
  8038     01AD  1683               	bsf	3,5	;RP0=1, select bank1
  8039     01AE  1303               	bcf	3,6	;RP1=0, select bank1
  8040     01AF  0865               	movf	(main@saat+1)^(0+128),w
  8041     01B0  1283               	bcf	3,5	;RP0=0, select bank0
  8042     01B1  1303               	bcf	3,6	;RP1=0, select bank0
  8043     01B2  00AF               	movwf	?_sprintf+3
  8044     01B3  1683               	bsf	3,5	;RP0=1, select bank1
  8045     01B4  1303               	bcf	3,6	;RP1=0, select bank1
  8046     01B5  0864               	movf	main@saat^(0+128),w
  8047     01B6  1283               	bcf	3,5	;RP0=0, select bank0
  8048     01B7  1303               	bcf	3,6	;RP1=0, select bank0
  8049     01B8  00AE               	movwf	?_sprintf+2
  8050     01B9  1683               	bsf	3,5	;RP0=1, select bank1
  8051     01BA  1303               	bcf	3,6	;RP1=0, select bank1
  8052     01BB  0867               	movf	(main@dakika+1)^(0+128),w
  8053     01BC  1283               	bcf	3,5	;RP0=0, select bank0
  8054     01BD  1303               	bcf	3,6	;RP1=0, select bank0
  8055     01BE  00B1               	movwf	?_sprintf+5
  8056     01BF  1683               	bsf	3,5	;RP0=1, select bank1
  8057     01C0  1303               	bcf	3,6	;RP1=0, select bank1
  8058     01C1  0866               	movf	main@dakika^(0+128),w
  8059     01C2  1283               	bcf	3,5	;RP0=0, select bank0
  8060     01C3  1303               	bcf	3,6	;RP1=0, select bank0
  8061     01C4  00B0               	movwf	?_sprintf+4
  8062     01C5  30B4               	movlw	(low (main@lcdText| 0))& (0+255)
  8063     01C6  120A  158A  2005  120A  118A  	fcall	_sprintf
  8064     01CB                     l4413:
  8065                           
  8066                           ;main.c: 321:      Lcd_Set_Cursor(1, 10);
  8067     01CB  300A               	movlw	10
  8068     01CC  1283               	bcf	3,5	;RP0=0, select bank0
  8069     01CD  1303               	bcf	3,6	;RP1=0, select bank0
  8070     01CE  00A4               	movwf	Lcd_Set_Cursor@b
  8071     01CF  3001               	movlw	1
  8072     01D0  160A  118A  225F  120A  118A  	fcall	_Lcd_Set_Cursor
  8073                           
  8074                           ;main.c: 322:      Lcd_Write_String("  ");
  8075     01D5  30D9               	movlw	low ((STR_28+12)| (0+32768))
  8076     01D6  1283               	bcf	3,5	;RP0=0, select bank0
  8077     01D7  1303               	bcf	3,6	;RP1=0, select bank0
  8078     01D8  00A5               	movwf	Lcd_Write_String@a
  8079     01D9  3098               	movlw	high ((STR_28+12)| (0+32768))
  8080     01DA  00A6               	movwf	Lcd_Write_String@a+1
  8081     01DB  160A  118A  2146  120A  118A  	fcall	_Lcd_Write_String
  8082     01E0                     l4415:
  8083                           
  8084                           ;main.c: 323:      Lcd_Set_Cursor(1, 11);
  8085     01E0  300B               	movlw	11
  8086     01E1  1283               	bcf	3,5	;RP0=0, select bank0
  8087     01E2  1303               	bcf	3,6	;RP1=0, select bank0
  8088     01E3  00A4               	movwf	Lcd_Set_Cursor@b
  8089     01E4  3001               	movlw	1
  8090     01E5  160A  118A  225F  120A  118A  	fcall	_Lcd_Set_Cursor
  8091     01EA                     l4417:
  8092                           
  8093                           ;main.c: 324:      Lcd_Write_String(lcdText);
  8094     01EA  30B4               	movlw	(low (main@lcdText| 0))& (0+255)
  8095     01EB  1283               	bcf	3,5	;RP0=0, select bank0
  8096     01EC  1303               	bcf	3,6	;RP1=0, select bank0
  8097     01ED  00A5               	movwf	Lcd_Write_String@a
  8098     01EE  3000               	movlw	0
  8099     01EF  00A6               	movwf	Lcd_Write_String@a+1
  8100     01F0  160A  118A  2146  120A  118A  	fcall	_Lcd_Write_String
  8101     01F5                     l4419:
  8102                           
  8103                           ;main.c: 328:     ADCON0bits.CHS = 0b0010;
  8104     01F5  1283               	bcf	3,5	;RP0=0, select bank0
  8105     01F6  1303               	bcf	3,6	;RP1=0, select bank0
  8106     01F7  081F               	movf	31,w	;volatile
  8107     01F8  39C7               	andlw	-57
  8108     01F9  3810               	iorlw	16
  8109     01FA  009F               	movwf	31	;volatile
  8110     01FB                     l4421:
  8111                           
  8112                           ;main.c: 329:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  8113     01FB  300F               	movlw	15
  8114     01FC  1283               	bcf	3,5	;RP0=0, select bank0
  8115     01FD  1303               	bcf	3,6	;RP1=0, select bank0
  8116     01FE  00D4               	movwf	??_main
  8117     01FF                     u6317:
  8118     01FF  0BD4               	decfsz	??_main,f
  8119     0200  29FF               	goto	u6317
  8120     0201  2A02               	nop2
  8121     0202                     l4423:
  8122                           
  8123                           ;main.c: 330:     ADCON0bits.GO = 1;
  8124     0202  1283               	bcf	3,5	;RP0=0, select bank0
  8125     0203  1303               	bcf	3,6	;RP1=0, select bank0
  8126     0204  151F               	bsf	31,2	;volatile
  8127     0205                     l214:	
  8128                           ;main.c: 331:     while (ADCON0bits.GO);
  8129                           
  8130     0205  191F               	btfsc	31,2	;volatile
  8131     0206  2A08               	goto	u5951
  8132     0207  2A09               	goto	u5950
  8133     0208                     u5951:
  8134     0208  2A05               	goto	l214
  8135     0209                     u5950:
  8136     0209                     l4425:
  8137                           
  8138                           ;main.c: 332:     adcValue3 = (ADRESH << 8) | ADRESL;
  8139     0209  1683               	bsf	3,5	;RP0=1, select bank1
  8140     020A  1303               	bcf	3,6	;RP1=0, select bank1
  8141     020B  081E               	movf	30,w	;volatile
  8142     020C  1283               	bcf	3,5	;RP0=0, select bank0
  8143     020D  1303               	bcf	3,6	;RP1=0, select bank0
  8144     020E  00D4               	movwf	??_main
  8145     020F  01D5               	clrf	??_main+1
  8146     0210  081E               	movf	30,w	;volatile
  8147     0211  00D6               	movwf	??_main+2
  8148     0212  01D7               	clrf	??_main+3
  8149     0213  0856               	movf	??_main+2,w
  8150     0214  00D7               	movwf	??_main+3
  8151     0215  01D6               	clrf	??_main+2
  8152     0216  0854               	movf	??_main,w
  8153     0217  0456               	iorwf	??_main+2,w
  8154     0218  00A0               	movwf	___xxtofl@val
  8155     0219  0855               	movf	??_main+1,w
  8156     021A  0457               	iorwf	??_main+3,w
  8157     021B  00A1               	movwf	___xxtofl@val+1
  8158     021C  01A2               	clrf	___xxtofl@val+2
  8159     021D  1BA1               	btfsc	___xxtofl@val+1,7
  8160     021E  03A2               	decf	___xxtofl@val+2,f
  8161     021F  0822               	movf	___xxtofl@val+2,w
  8162     0220  00A3               	movwf	___xxtofl@val+3
  8163     0221  3001               	movlw	1
  8164     0222  160A  118A  249D  120A  118A  	fcall	___xxtofl
  8165     0227  1283               	bcf	3,5	;RP0=0, select bank0
  8166     0228  1303               	bcf	3,6	;RP1=0, select bank0
  8167     0229  0823               	movf	?___xxtofl+3,w
  8168     022A  1683               	bsf	3,5	;RP0=1, select bank1
  8169     022B  1303               	bcf	3,6	;RP1=0, select bank1
  8170     022C  00D0               	movwf	(main@adcValue3+3)^(0+128)
  8171     022D  1283               	bcf	3,5	;RP0=0, select bank0
  8172     022E  1303               	bcf	3,6	;RP1=0, select bank0
  8173     022F  0822               	movf	?___xxtofl+2,w
  8174     0230  1683               	bsf	3,5	;RP0=1, select bank1
  8175     0231  1303               	bcf	3,6	;RP1=0, select bank1
  8176     0232  00CF               	movwf	(main@adcValue3+2)^(0+128)
  8177     0233  1283               	bcf	3,5	;RP0=0, select bank0
  8178     0234  1303               	bcf	3,6	;RP1=0, select bank0
  8179     0235  0821               	movf	?___xxtofl+1,w
  8180     0236  1683               	bsf	3,5	;RP0=1, select bank1
  8181     0237  1303               	bcf	3,6	;RP1=0, select bank1
  8182     0238  00CE               	movwf	(main@adcValue3+1)^(0+128)
  8183     0239  1283               	bcf	3,5	;RP0=0, select bank0
  8184     023A  1303               	bcf	3,6	;RP1=0, select bank0
  8185     023B  0820               	movf	?___xxtofl,w
  8186     023C  1683               	bsf	3,5	;RP0=1, select bank1
  8187     023D  1303               	bcf	3,6	;RP1=0, select bank1
  8188     023E  00CD               	movwf	main@adcValue3^(0+128)
  8189                           
  8190                           ;main.c: 333:     float oranValue = adcValue3/1024.0;
  8191     023F  3044               	movlw	68
  8192     0240  1283               	bcf	3,5	;RP0=0, select bank0
  8193     0241  1303               	bcf	3,6	;RP1=0, select bank0
  8194     0242  00A3               	movwf	___fldiv@a+3
  8195     0243  3080               	movlw	128
  8196     0244  00A2               	movwf	___fldiv@a+2
  8197     0245  3000               	movlw	0
  8198     0246  00A1               	movwf	___fldiv@a+1
  8199     0247  3000               	movlw	0
  8200     0248  00A0               	movwf	___fldiv@a
  8201     0249  1683               	bsf	3,5	;RP0=1, select bank1
  8202     024A  1303               	bcf	3,6	;RP1=0, select bank1
  8203     024B  0850               	movf	(main@adcValue3+3)^(0+128),w
  8204     024C  1283               	bcf	3,5	;RP0=0, select bank0
  8205     024D  1303               	bcf	3,6	;RP1=0, select bank0
  8206     024E  00A7               	movwf	___fldiv@b+3
  8207     024F  1683               	bsf	3,5	;RP0=1, select bank1
  8208     0250  1303               	bcf	3,6	;RP1=0, select bank1
  8209     0251  084F               	movf	(main@adcValue3+2)^(0+128),w
  8210     0252  1283               	bcf	3,5	;RP0=0, select bank0
  8211     0253  1303               	bcf	3,6	;RP1=0, select bank0
  8212     0254  00A6               	movwf	___fldiv@b+2
  8213     0255  1683               	bsf	3,5	;RP0=1, select bank1
  8214     0256  1303               	bcf	3,6	;RP1=0, select bank1
  8215     0257  084E               	movf	(main@adcValue3+1)^(0+128),w
  8216     0258  1283               	bcf	3,5	;RP0=0, select bank0
  8217     0259  1303               	bcf	3,6	;RP1=0, select bank0
  8218     025A  00A5               	movwf	___fldiv@b+1
  8219     025B  1683               	bsf	3,5	;RP0=1, select bank1
  8220     025C  1303               	bcf	3,6	;RP1=0, select bank1
  8221     025D  084D               	movf	main@adcValue3^(0+128),w
  8222     025E  1283               	bcf	3,5	;RP0=0, select bank0
  8223     025F  1303               	bcf	3,6	;RP1=0, select bank0
  8224     0260  00A4               	movwf	___fldiv@b
  8225     0261  120A  118A  2615  120A  118A  	fcall	___fldiv
  8226     0266  1283               	bcf	3,5	;RP0=0, select bank0
  8227     0267  1303               	bcf	3,6	;RP1=0, select bank0
  8228     0268  0823               	movf	?___fldiv+3,w
  8229     0269  1683               	bsf	3,5	;RP0=1, select bank1
  8230     026A  1303               	bcf	3,6	;RP1=0, select bank1
  8231     026B  00D4               	movwf	(main@oranValue+3)^(0+128)
  8232     026C  1283               	bcf	3,5	;RP0=0, select bank0
  8233     026D  1303               	bcf	3,6	;RP1=0, select bank0
  8234     026E  0822               	movf	?___fldiv+2,w
  8235     026F  1683               	bsf	3,5	;RP0=1, select bank1
  8236     0270  1303               	bcf	3,6	;RP1=0, select bank1
  8237     0271  00D3               	movwf	(main@oranValue+2)^(0+128)
  8238     0272  1283               	bcf	3,5	;RP0=0, select bank0
  8239     0273  1303               	bcf	3,6	;RP1=0, select bank0
  8240     0274  0821               	movf	?___fldiv+1,w
  8241     0275  1683               	bsf	3,5	;RP0=1, select bank1
  8242     0276  1303               	bcf	3,6	;RP1=0, select bank1
  8243     0277  00D2               	movwf	(main@oranValue+1)^(0+128)
  8244     0278  1283               	bcf	3,5	;RP0=0, select bank0
  8245     0279  1303               	bcf	3,6	;RP1=0, select bank0
  8246     027A  0820               	movf	?___fldiv,w
  8247     027B  1683               	bsf	3,5	;RP0=1, select bank1
  8248     027C  1303               	bcf	3,6	;RP1=0, select bank1
  8249     027D  00D1               	movwf	main@oranValue^(0+128)
  8250     027E                     l4427:
  8251                           
  8252                           ;main.c: 336:     ADCON0bits.CHS = 0b0011;
  8253     027E  1283               	bcf	3,5	;RP0=0, select bank0
  8254     027F  1303               	bcf	3,6	;RP1=0, select bank0
  8255     0280  081F               	movf	31,w	;volatile
  8256     0281  39C7               	andlw	-57
  8257     0282  3818               	iorlw	24
  8258     0283  009F               	movwf	31	;volatile
  8259     0284                     l4429:
  8260                           
  8261                           ;main.c: 337:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  8262     0284  300F               	movlw	15
  8263     0285  1283               	bcf	3,5	;RP0=0, select bank0
  8264     0286  1303               	bcf	3,6	;RP1=0, select bank0
  8265     0287  00D4               	movwf	??_main
  8266     0288                     u6327:
  8267     0288  0BD4               	decfsz	??_main,f
  8268     0289  2A88               	goto	u6327
  8269     028A  2A8B               	nop2
  8270     028B                     l4431:
  8271                           
  8272                           ;main.c: 338:     ADCON0bits.GO = 1;
  8273     028B  1283               	bcf	3,5	;RP0=0, select bank0
  8274     028C  1303               	bcf	3,6	;RP1=0, select bank0
  8275     028D  151F               	bsf	31,2	;volatile
  8276     028E                     l217:	
  8277                           ;main.c: 339:     while (ADCON0bits.GO);
  8278                           
  8279     028E  191F               	btfsc	31,2	;volatile
  8280     028F  2A91               	goto	u5961
  8281     0290  2A92               	goto	u5960
  8282     0291                     u5961:
  8283     0291  2A8E               	goto	l217
  8284     0292                     u5960:
  8285     0292                     l4433:
  8286                           
  8287                           ;main.c: 340:     adcValue2 = (ADRESH << 8) | ADRESL;
  8288     0292  081E               	movf	30,w	;volatile
  8289     0293  1683               	bsf	3,5	;RP0=1, select bank1
  8290     0294  1303               	bcf	3,6	;RP1=0, select bank1
  8291     0295  00E3               	movwf	(main@adcValue2+1)^(0+128)
  8292     0296  081E               	movf	30,w	;volatile
  8293     0297  00E2               	movwf	main@adcValue2^(0+128)
  8294     0298                     l4435:
  8295                           
  8296                           ;main.c: 344:     float integerPart = adcValue2*oranValue*3;
  8297     0298  0854               	movf	(main@oranValue+3)^(0+128),w
  8298     0299  1283               	bcf	3,5	;RP0=0, select bank0
  8299     029A  1303               	bcf	3,6	;RP1=0, select bank0
  8300     029B  00BD               	movwf	___flmul@b+3
  8301     029C  1683               	bsf	3,5	;RP0=1, select bank1
  8302     029D  1303               	bcf	3,6	;RP1=0, select bank1
  8303     029E  0853               	movf	(main@oranValue+2)^(0+128),w
  8304     029F  1283               	bcf	3,5	;RP0=0, select bank0
  8305     02A0  1303               	bcf	3,6	;RP1=0, select bank0
  8306     02A1  00BC               	movwf	___flmul@b+2
  8307     02A2  1683               	bsf	3,5	;RP0=1, select bank1
  8308     02A3  1303               	bcf	3,6	;RP1=0, select bank1
  8309     02A4  0852               	movf	(main@oranValue+1)^(0+128),w
  8310     02A5  1283               	bcf	3,5	;RP0=0, select bank0
  8311     02A6  1303               	bcf	3,6	;RP1=0, select bank0
  8312     02A7  00BB               	movwf	___flmul@b+1
  8313     02A8  1683               	bsf	3,5	;RP0=1, select bank1
  8314     02A9  1303               	bcf	3,6	;RP1=0, select bank1
  8315     02AA  0851               	movf	main@oranValue^(0+128),w
  8316     02AB  1283               	bcf	3,5	;RP0=0, select bank0
  8317     02AC  1303               	bcf	3,6	;RP1=0, select bank0
  8318     02AD  00BA               	movwf	___flmul@b
  8319     02AE  1683               	bsf	3,5	;RP0=1, select bank1
  8320     02AF  1303               	bcf	3,6	;RP1=0, select bank1
  8321     02B0  0862               	movf	main@adcValue2^(0+128),w
  8322     02B1  1283               	bcf	3,5	;RP0=0, select bank0
  8323     02B2  1303               	bcf	3,6	;RP1=0, select bank0
  8324     02B3  00A0               	movwf	___xxtofl@val
  8325     02B4  1683               	bsf	3,5	;RP0=1, select bank1
  8326     02B5  1303               	bcf	3,6	;RP1=0, select bank1
  8327     02B6  0863               	movf	(main@adcValue2+1)^(0+128),w
  8328     02B7  1283               	bcf	3,5	;RP0=0, select bank0
  8329     02B8  1303               	bcf	3,6	;RP1=0, select bank0
  8330     02B9  00A1               	movwf	___xxtofl@val+1
  8331     02BA  3000               	movlw	0
  8332     02BB  1BA1               	btfsc	___xxtofl@val+1,7
  8333     02BC  30FF               	movlw	255
  8334     02BD  00A2               	movwf	___xxtofl@val+2
  8335     02BE  00A3               	movwf	___xxtofl@val+3
  8336     02BF  3001               	movlw	1
  8337     02C0  160A  118A  249D  120A  118A  	fcall	___xxtofl
  8338     02C5  1283               	bcf	3,5	;RP0=0, select bank0
  8339     02C6  1303               	bcf	3,6	;RP1=0, select bank0
  8340     02C7  0823               	movf	?___xxtofl+3,w
  8341     02C8  00C1               	movwf	___flmul@a+3
  8342     02C9  0822               	movf	?___xxtofl+2,w
  8343     02CA  00C0               	movwf	___flmul@a+2
  8344     02CB  0821               	movf	?___xxtofl+1,w
  8345     02CC  00BF               	movwf	___flmul@a+1
  8346     02CD  0820               	movf	?___xxtofl,w
  8347     02CE  00BE               	movwf	___flmul@a
  8348     02CF  120A  158A  24BB  120A  118A  	fcall	___flmul
  8349     02D4  1283               	bcf	3,5	;RP0=0, select bank0
  8350     02D5  1303               	bcf	3,6	;RP1=0, select bank0
  8351     02D6  083D               	movf	?___flmul+3,w
  8352     02D7  1683               	bsf	3,5	;RP0=1, select bank1
  8353     02D8  1303               	bcf	3,6	;RP1=0, select bank1
  8354     02D9  00DC               	movwf	(_main$1038+3)^(0+128)
  8355     02DA  1283               	bcf	3,5	;RP0=0, select bank0
  8356     02DB  1303               	bcf	3,6	;RP1=0, select bank0
  8357     02DC  083C               	movf	?___flmul+2,w
  8358     02DD  1683               	bsf	3,5	;RP0=1, select bank1
  8359     02DE  1303               	bcf	3,6	;RP1=0, select bank1
  8360     02DF  00DB               	movwf	(_main$1038+2)^(0+128)
  8361     02E0  1283               	bcf	3,5	;RP0=0, select bank0
  8362     02E1  1303               	bcf	3,6	;RP1=0, select bank0
  8363     02E2  083B               	movf	?___flmul+1,w
  8364     02E3  1683               	bsf	3,5	;RP0=1, select bank1
  8365     02E4  1303               	bcf	3,6	;RP1=0, select bank1
  8366     02E5  00DA               	movwf	(_main$1038+1)^(0+128)
  8367     02E6  1283               	bcf	3,5	;RP0=0, select bank0
  8368     02E7  1303               	bcf	3,6	;RP1=0, select bank0
  8369     02E8  083A               	movf	?___flmul,w
  8370     02E9  1683               	bsf	3,5	;RP0=1, select bank1
  8371     02EA  1303               	bcf	3,6	;RP1=0, select bank1
  8372     02EB  00D9               	movwf	_main$1038^(0+128)
  8373     02EC                     l4437:
  8374                           
  8375                           ;main.c: 344:     float integerPart = adcValue2*oranValue*3;
  8376     02EC  3040               	movlw	64
  8377     02ED  1283               	bcf	3,5	;RP0=0, select bank0
  8378     02EE  1303               	bcf	3,6	;RP1=0, select bank0
  8379     02EF  00BD               	movwf	___flmul@b+3
  8380     02F0  3040               	movlw	64
  8381     02F1  00BC               	movwf	___flmul@b+2
  8382     02F2  3000               	movlw	0
  8383     02F3  00BB               	movwf	___flmul@b+1
  8384     02F4  3000               	movlw	0
  8385     02F5  00BA               	movwf	___flmul@b
  8386     02F6  1683               	bsf	3,5	;RP0=1, select bank1
  8387     02F7  1303               	bcf	3,6	;RP1=0, select bank1
  8388     02F8  085C               	movf	(_main$1038+3)^(0+128),w
  8389     02F9  1283               	bcf	3,5	;RP0=0, select bank0
  8390     02FA  1303               	bcf	3,6	;RP1=0, select bank0
  8391     02FB  00C1               	movwf	___flmul@a+3
  8392     02FC  1683               	bsf	3,5	;RP0=1, select bank1
  8393     02FD  1303               	bcf	3,6	;RP1=0, select bank1
  8394     02FE  085B               	movf	(_main$1038+2)^(0+128),w
  8395     02FF  1283               	bcf	3,5	;RP0=0, select bank0
  8396     0300  1303               	bcf	3,6	;RP1=0, select bank0
  8397     0301  00C0               	movwf	___flmul@a+2
  8398     0302  1683               	bsf	3,5	;RP0=1, select bank1
  8399     0303  1303               	bcf	3,6	;RP1=0, select bank1
  8400     0304  085A               	movf	(_main$1038+1)^(0+128),w
  8401     0305  1283               	bcf	3,5	;RP0=0, select bank0
  8402     0306  1303               	bcf	3,6	;RP1=0, select bank0
  8403     0307  00BF               	movwf	___flmul@a+1
  8404     0308  1683               	bsf	3,5	;RP0=1, select bank1
  8405     0309  1303               	bcf	3,6	;RP1=0, select bank1
  8406     030A  0859               	movf	_main$1038^(0+128),w
  8407     030B  1283               	bcf	3,5	;RP0=0, select bank0
  8408     030C  1303               	bcf	3,6	;RP1=0, select bank0
  8409     030D  00BE               	movwf	___flmul@a
  8410     030E  120A  158A  24BB  120A  118A  	fcall	___flmul
  8411     0313  1283               	bcf	3,5	;RP0=0, select bank0
  8412     0314  1303               	bcf	3,6	;RP1=0, select bank0
  8413     0315  083D               	movf	?___flmul+3,w
  8414     0316  1683               	bsf	3,5	;RP0=1, select bank3
  8415     0317  1703               	bsf	3,6	;RP1=1, select bank3
  8416     0318  00AB               	movwf	(main@integerPart+3)^(0+384)
  8417     0319  1283               	bcf	3,5	;RP0=0, select bank0
  8418     031A  1303               	bcf	3,6	;RP1=0, select bank0
  8419     031B  083C               	movf	?___flmul+2,w
  8420     031C  1683               	bsf	3,5	;RP0=1, select bank3
  8421     031D  1703               	bsf	3,6	;RP1=1, select bank3
  8422     031E  00AA               	movwf	(main@integerPart+2)^(0+384)
  8423     031F  1283               	bcf	3,5	;RP0=0, select bank0
  8424     0320  1303               	bcf	3,6	;RP1=0, select bank0
  8425     0321  083B               	movf	?___flmul+1,w
  8426     0322  1683               	bsf	3,5	;RP0=1, select bank3
  8427     0323  1703               	bsf	3,6	;RP1=1, select bank3
  8428     0324  00A9               	movwf	(main@integerPart+1)^(0+384)
  8429     0325  1283               	bcf	3,5	;RP0=0, select bank0
  8430     0326  1303               	bcf	3,6	;RP1=0, select bank0
  8431     0327  083A               	movf	?___flmul,w
  8432     0328  1683               	bsf	3,5	;RP0=1, select bank3
  8433     0329  1703               	bsf	3,6	;RP1=1, select bank3
  8434     032A  00A8               	movwf	main@integerPart^(0+384)
  8435     032B                     l4439:
  8436                           
  8437                           ;main.c: 346:     int binler = (int)integerPart/1000;
  8438     032B  30E8               	movlw	232
  8439     032C  1283               	bcf	3,5	;RP0=0, select bank0
  8440     032D  1303               	bcf	3,6	;RP1=0, select bank0
  8441     032E  00AA               	movwf	___awdiv@divisor
  8442     032F  3003               	movlw	3
  8443     0330  00AB               	movwf	___awdiv@divisor+1
  8444     0331  1683               	bsf	3,5	;RP0=1, select bank3
  8445     0332  1703               	bsf	3,6	;RP1=1, select bank3
  8446     0333  082B               	movf	(main@integerPart+3)^(0+384),w
  8447     0334  1283               	bcf	3,5	;RP0=0, select bank0
  8448     0335  1303               	bcf	3,6	;RP1=0, select bank0
  8449     0336  00A3               	movwf	___fltol@f1+3
  8450     0337  1683               	bsf	3,5	;RP0=1, select bank3
  8451     0338  1703               	bsf	3,6	;RP1=1, select bank3
  8452     0339  082A               	movf	(main@integerPart+2)^(0+384),w
  8453     033A  1283               	bcf	3,5	;RP0=0, select bank0
  8454     033B  1303               	bcf	3,6	;RP1=0, select bank0
  8455     033C  00A2               	movwf	___fltol@f1+2
  8456     033D  1683               	bsf	3,5	;RP0=1, select bank3
  8457     033E  1703               	bsf	3,6	;RP1=1, select bank3
  8458     033F  0829               	movf	(main@integerPart+1)^(0+384),w
  8459     0340  1283               	bcf	3,5	;RP0=0, select bank0
  8460     0341  1303               	bcf	3,6	;RP1=0, select bank0
  8461     0342  00A1               	movwf	___fltol@f1+1
  8462     0343  1683               	bsf	3,5	;RP0=1, select bank3
  8463     0344  1703               	bsf	3,6	;RP1=1, select bank3
  8464     0345  0828               	movf	main@integerPart^(0+384),w
  8465     0346  1283               	bcf	3,5	;RP0=0, select bank0
  8466     0347  1303               	bcf	3,6	;RP1=0, select bank0
  8467     0348  00A0               	movwf	___fltol@f1
  8468     0349  160A  118A  2425  120A  118A  	fcall	___fltol
  8469     034E  1283               	bcf	3,5	;RP0=0, select bank0
  8470     034F  1303               	bcf	3,6	;RP1=0, select bank0
  8471     0350  0821               	movf	?___fltol+1,w
  8472     0351  00AD               	movwf	___awdiv@dividend+1
  8473     0352  0820               	movf	?___fltol,w
  8474     0353  00AC               	movwf	___awdiv@dividend
  8475     0354  160A  118A  23BC  120A  118A  	fcall	___awdiv
  8476     0359  1283               	bcf	3,5	;RP0=0, select bank0
  8477     035A  1303               	bcf	3,6	;RP1=0, select bank0
  8478     035B  082B               	movf	?___awdiv+1,w
  8479     035C  1683               	bsf	3,5	;RP0=1, select bank3
  8480     035D  1703               	bsf	3,6	;RP1=1, select bank3
  8481     035E  00A7               	movwf	(main@binler+1)^(0+384)
  8482     035F  1283               	bcf	3,5	;RP0=0, select bank0
  8483     0360  1303               	bcf	3,6	;RP1=0, select bank0
  8484     0361  082A               	movf	?___awdiv,w
  8485     0362  1683               	bsf	3,5	;RP0=1, select bank3
  8486     0363  1703               	bsf	3,6	;RP1=1, select bank3
  8487     0364  00A6               	movwf	main@binler^(0+384)
  8488     0365                     l4441:
  8489                           
  8490                           ;main.c: 347:     int yuzler = ((int)integerPart-binler*1000)/100;
  8491     0365  3064               	movlw	100
  8492     0366  1283               	bcf	3,5	;RP0=0, select bank0
  8493     0367  1303               	bcf	3,6	;RP1=0, select bank0
  8494     0368  00AA               	movwf	___awdiv@divisor
  8495     0369  3000               	movlw	0
  8496     036A  00AB               	movwf	___awdiv@divisor+1
  8497     036B  1683               	bsf	3,5	;RP0=1, select bank3
  8498     036C  1703               	bsf	3,6	;RP1=1, select bank3
  8499     036D  082B               	movf	(main@integerPart+3)^(0+384),w
  8500     036E  1283               	bcf	3,5	;RP0=0, select bank0
  8501     036F  1303               	bcf	3,6	;RP1=0, select bank0
  8502     0370  00A3               	movwf	___fltol@f1+3
  8503     0371  1683               	bsf	3,5	;RP0=1, select bank3
  8504     0372  1703               	bsf	3,6	;RP1=1, select bank3
  8505     0373  082A               	movf	(main@integerPart+2)^(0+384),w
  8506     0374  1283               	bcf	3,5	;RP0=0, select bank0
  8507     0375  1303               	bcf	3,6	;RP1=0, select bank0
  8508     0376  00A2               	movwf	___fltol@f1+2
  8509     0377  1683               	bsf	3,5	;RP0=1, select bank3
  8510     0378  1703               	bsf	3,6	;RP1=1, select bank3
  8511     0379  0829               	movf	(main@integerPart+1)^(0+384),w
  8512     037A  1283               	bcf	3,5	;RP0=0, select bank0
  8513     037B  1303               	bcf	3,6	;RP1=0, select bank0
  8514     037C  00A1               	movwf	___fltol@f1+1
  8515     037D  1683               	bsf	3,5	;RP0=1, select bank3
  8516     037E  1703               	bsf	3,6	;RP1=1, select bank3
  8517     037F  0828               	movf	main@integerPart^(0+384),w
  8518     0380  1283               	bcf	3,5	;RP0=0, select bank0
  8519     0381  1303               	bcf	3,6	;RP1=0, select bank0
  8520     0382  00A0               	movwf	___fltol@f1
  8521     0383  160A  118A  2425  120A  118A  	fcall	___fltol
  8522     0388  1283               	bcf	3,5	;RP0=0, select bank0
  8523     0389  1303               	bcf	3,6	;RP1=0, select bank0
  8524     038A  0820               	movf	?___fltol,w
  8525     038B  00D4               	movwf	??_main
  8526     038C  0821               	movf	?___fltol+1,w
  8527     038D  00D5               	movwf	??_main+1
  8528     038E  0822               	movf	?___fltol+2,w
  8529     038F  00D6               	movwf	??_main+2
  8530     0390  0823               	movf	?___fltol+3,w
  8531     0391  00D7               	movwf	??_main+3
  8532     0392  1683               	bsf	3,5	;RP0=1, select bank3
  8533     0393  1703               	bsf	3,6	;RP1=1, select bank3
  8534     0394  0827               	movf	(main@binler+1)^(0+384),w
  8535     0395  1283               	bcf	3,5	;RP0=0, select bank0
  8536     0396  1303               	bcf	3,6	;RP1=0, select bank0
  8537     0397  00A1               	movwf	___wmul@multiplier+1
  8538     0398  1683               	bsf	3,5	;RP0=1, select bank3
  8539     0399  1703               	bsf	3,6	;RP1=1, select bank3
  8540     039A  0826               	movf	main@binler^(0+384),w
  8541     039B  1283               	bcf	3,5	;RP0=0, select bank0
  8542     039C  1303               	bcf	3,6	;RP1=0, select bank0
  8543     039D  00A0               	movwf	___wmul@multiplier
  8544     039E  3018               	movlw	24
  8545     039F  00A2               	movwf	___wmul@multiplicand
  8546     03A0  30FC               	movlw	252
  8547     03A1  00A3               	movwf	___wmul@multiplicand+1
  8548     03A2  160A  118A  2081  120A  118A  	fcall	___wmul
  8549     03A7  1283               	bcf	3,5	;RP0=0, select bank0
  8550     03A8  1303               	bcf	3,6	;RP1=0, select bank0
  8551     03A9  0820               	movf	?___wmul,w
  8552     03AA  0754               	addwf	??_main,w
  8553     03AB  00AC               	movwf	___awdiv@dividend
  8554     03AC  0821               	movf	?___wmul+1,w
  8555     03AD  1803               	skipnc
  8556     03AE  0A21               	incf	?___wmul+1,w
  8557     03AF  0755               	addwf	??_main+1,w
  8558     03B0  00AD               	movwf	___awdiv@dividend+1
  8559     03B1  160A  118A  23BC  120A  118A  	fcall	___awdiv
  8560     03B6  1283               	bcf	3,5	;RP0=0, select bank0
  8561     03B7  1303               	bcf	3,6	;RP1=0, select bank0
  8562     03B8  082B               	movf	?___awdiv+1,w
  8563     03B9  1683               	bsf	3,5	;RP0=1, select bank3
  8564     03BA  1703               	bsf	3,6	;RP1=1, select bank3
  8565     03BB  0099               	movwf	(main@yuzler+1)^(0+384)
  8566     03BC  1283               	bcf	3,5	;RP0=0, select bank0
  8567     03BD  1303               	bcf	3,6	;RP1=0, select bank0
  8568     03BE  082A               	movf	?___awdiv,w
  8569     03BF  1683               	bsf	3,5	;RP0=1, select bank3
  8570     03C0  1703               	bsf	3,6	;RP1=1, select bank3
  8571     03C1  0098               	movwf	main@yuzler^(0+384)
  8572     03C2                     l4443:
  8573                           
  8574                           ;main.c: 348:     int onlar = ((int)integerPart-binler*1000-yuzler*100)/10;
  8575     03C2  300A               	movlw	10
  8576     03C3  1283               	bcf	3,5	;RP0=0, select bank0
  8577     03C4  1303               	bcf	3,6	;RP1=0, select bank0
  8578     03C5  00AA               	movwf	___awdiv@divisor
  8579     03C6  3000               	movlw	0
  8580     03C7  00AB               	movwf	___awdiv@divisor+1
  8581     03C8  1683               	bsf	3,5	;RP0=1, select bank3
  8582     03C9  1703               	bsf	3,6	;RP1=1, select bank3
  8583     03CA  082B               	movf	(main@integerPart+3)^(0+384),w
  8584     03CB  1283               	bcf	3,5	;RP0=0, select bank0
  8585     03CC  1303               	bcf	3,6	;RP1=0, select bank0
  8586     03CD  00A3               	movwf	___fltol@f1+3
  8587     03CE  1683               	bsf	3,5	;RP0=1, select bank3
  8588     03CF  1703               	bsf	3,6	;RP1=1, select bank3
  8589     03D0  082A               	movf	(main@integerPart+2)^(0+384),w
  8590     03D1  1283               	bcf	3,5	;RP0=0, select bank0
  8591     03D2  1303               	bcf	3,6	;RP1=0, select bank0
  8592     03D3  00A2               	movwf	___fltol@f1+2
  8593     03D4  1683               	bsf	3,5	;RP0=1, select bank3
  8594     03D5  1703               	bsf	3,6	;RP1=1, select bank3
  8595     03D6  0829               	movf	(main@integerPart+1)^(0+384),w
  8596     03D7  1283               	bcf	3,5	;RP0=0, select bank0
  8597     03D8  1303               	bcf	3,6	;RP1=0, select bank0
  8598     03D9  00A1               	movwf	___fltol@f1+1
  8599     03DA  1683               	bsf	3,5	;RP0=1, select bank3
  8600     03DB  1703               	bsf	3,6	;RP1=1, select bank3
  8601     03DC  0828               	movf	main@integerPart^(0+384),w
  8602     03DD  1283               	bcf	3,5	;RP0=0, select bank0
  8603     03DE  1303               	bcf	3,6	;RP1=0, select bank0
  8604     03DF  00A0               	movwf	___fltol@f1
  8605     03E0  160A  118A  2425  120A  118A  	fcall	___fltol
  8606     03E5  1283               	bcf	3,5	;RP0=0, select bank0
  8607     03E6  1303               	bcf	3,6	;RP1=0, select bank0
  8608     03E7  0820               	movf	?___fltol,w
  8609     03E8  00D4               	movwf	??_main
  8610     03E9  0821               	movf	?___fltol+1,w
  8611     03EA  00D5               	movwf	??_main+1
  8612     03EB  0822               	movf	?___fltol+2,w
  8613     03EC  00D6               	movwf	??_main+2
  8614     03ED  0823               	movf	?___fltol+3,w
  8615     03EE  00D7               	movwf	??_main+3
  8616     03EF  1683               	bsf	3,5	;RP0=1, select bank3
  8617     03F0  1703               	bsf	3,6	;RP1=1, select bank3
  8618     03F1  0827               	movf	(main@binler+1)^(0+384),w
  8619     03F2  1283               	bcf	3,5	;RP0=0, select bank0
  8620     03F3  1303               	bcf	3,6	;RP1=0, select bank0
  8621     03F4  00A1               	movwf	___wmul@multiplier+1
  8622     03F5  1683               	bsf	3,5	;RP0=1, select bank3
  8623     03F6  1703               	bsf	3,6	;RP1=1, select bank3
  8624     03F7  0826               	movf	main@binler^(0+384),w
  8625     03F8  1283               	bcf	3,5	;RP0=0, select bank0
  8626     03F9  1303               	bcf	3,6	;RP1=0, select bank0
  8627     03FA  00A0               	movwf	___wmul@multiplier
  8628     03FB  3018               	movlw	24
  8629     03FC  00A2               	movwf	___wmul@multiplicand
  8630     03FD  30FC               	movlw	252
  8631     03FE  00A3               	movwf	___wmul@multiplicand+1
  8632     03FF  160A  118A  2081  120A  118A  	fcall	___wmul
  8633     0404  1283               	bcf	3,5	;RP0=0, select bank0
  8634     0405  1303               	bcf	3,6	;RP1=0, select bank0
  8635     0406  0820               	movf	?___wmul,w
  8636     0407  0754               	addwf	??_main,w
  8637     0408  00D8               	movwf	??_main+4
  8638     0409  0821               	movf	?___wmul+1,w
  8639     040A  1803               	skipnc
  8640     040B  0A21               	incf	?___wmul+1,w
  8641     040C  0755               	addwf	??_main+1,w
  8642     040D  00D9               	movwf	??_main+5
  8643     040E  1683               	bsf	3,5	;RP0=1, select bank3
  8644     040F  1703               	bsf	3,6	;RP1=1, select bank3
  8645     0410  0819               	movf	(main@yuzler+1)^(0+384),w
  8646     0411  1283               	bcf	3,5	;RP0=0, select bank0
  8647     0412  1303               	bcf	3,6	;RP1=0, select bank0
  8648     0413  00A1               	movwf	___wmul@multiplier+1
  8649     0414  1683               	bsf	3,5	;RP0=1, select bank3
  8650     0415  1703               	bsf	3,6	;RP1=1, select bank3
  8651     0416  0818               	movf	main@yuzler^(0+384),w
  8652     0417  1283               	bcf	3,5	;RP0=0, select bank0
  8653     0418  1303               	bcf	3,6	;RP1=0, select bank0
  8654     0419  00A0               	movwf	___wmul@multiplier
  8655     041A  309C               	movlw	156
  8656     041B  00A2               	movwf	___wmul@multiplicand
  8657     041C  30FF               	movlw	255
  8658     041D  00A3               	movwf	___wmul@multiplicand+1
  8659     041E  160A  118A  2081  120A  118A  	fcall	___wmul
  8660     0423  1283               	bcf	3,5	;RP0=0, select bank0
  8661     0424  1303               	bcf	3,6	;RP1=0, select bank0
  8662     0425  0820               	movf	?___wmul,w
  8663     0426  0758               	addwf	??_main+4,w
  8664     0427  00AC               	movwf	___awdiv@dividend
  8665     0428  0821               	movf	?___wmul+1,w
  8666     0429  1803               	skipnc
  8667     042A  0A21               	incf	?___wmul+1,w
  8668     042B  0759               	addwf	??_main+5,w
  8669     042C  00AD               	movwf	___awdiv@dividend+1
  8670     042D  160A  118A  23BC  120A  118A  	fcall	___awdiv
  8671     0432  1283               	bcf	3,5	;RP0=0, select bank0
  8672     0433  1303               	bcf	3,6	;RP1=0, select bank0
  8673     0434  082B               	movf	?___awdiv+1,w
  8674     0435  1683               	bsf	3,5	;RP0=1, select bank1
  8675     0436  1303               	bcf	3,6	;RP1=0, select bank1
  8676     0437  00E9               	movwf	(main@onlar+1)^(0+128)
  8677     0438  1283               	bcf	3,5	;RP0=0, select bank0
  8678     0439  1303               	bcf	3,6	;RP1=0, select bank0
  8679     043A  082A               	movf	?___awdiv,w
  8680     043B  1683               	bsf	3,5	;RP0=1, select bank1
  8681     043C  1303               	bcf	3,6	;RP1=0, select bank1
  8682     043D  00E8               	movwf	main@onlar^(0+128)
  8683     043E                     l4445:
  8684                           
  8685                           ;main.c: 349:     int birler = (int)integerPart%10;
  8686     043E  300A               	movlw	10
  8687     043F  1283               	bcf	3,5	;RP0=0, select bank0
  8688     0440  1303               	bcf	3,6	;RP1=0, select bank0
  8689     0441  00AA               	movwf	___awmod@divisor
  8690     0442  3000               	movlw	0
  8691     0443  00AB               	movwf	___awmod@divisor+1
  8692     0444  1683               	bsf	3,5	;RP0=1, select bank3
  8693     0445  1703               	bsf	3,6	;RP1=1, select bank3
  8694     0446  082B               	movf	(main@integerPart+3)^(0+384),w
  8695     0447  1283               	bcf	3,5	;RP0=0, select bank0
  8696     0448  1303               	bcf	3,6	;RP1=0, select bank0
  8697     0449  00A3               	movwf	___fltol@f1+3
  8698     044A  1683               	bsf	3,5	;RP0=1, select bank3
  8699     044B  1703               	bsf	3,6	;RP1=1, select bank3
  8700     044C  082A               	movf	(main@integerPart+2)^(0+384),w
  8701     044D  1283               	bcf	3,5	;RP0=0, select bank0
  8702     044E  1303               	bcf	3,6	;RP1=0, select bank0
  8703     044F  00A2               	movwf	___fltol@f1+2
  8704     0450  1683               	bsf	3,5	;RP0=1, select bank3
  8705     0451  1703               	bsf	3,6	;RP1=1, select bank3
  8706     0452  0829               	movf	(main@integerPart+1)^(0+384),w
  8707     0453  1283               	bcf	3,5	;RP0=0, select bank0
  8708     0454  1303               	bcf	3,6	;RP1=0, select bank0
  8709     0455  00A1               	movwf	___fltol@f1+1
  8710     0456  1683               	bsf	3,5	;RP0=1, select bank3
  8711     0457  1703               	bsf	3,6	;RP1=1, select bank3
  8712     0458  0828               	movf	main@integerPart^(0+384),w
  8713     0459  1283               	bcf	3,5	;RP0=0, select bank0
  8714     045A  1303               	bcf	3,6	;RP1=0, select bank0
  8715     045B  00A0               	movwf	___fltol@f1
  8716     045C  160A  118A  2425  120A  118A  	fcall	___fltol
  8717     0461  1283               	bcf	3,5	;RP0=0, select bank0
  8718     0462  1303               	bcf	3,6	;RP1=0, select bank0
  8719     0463  0821               	movf	?___fltol+1,w
  8720     0464  00AD               	movwf	___awmod@dividend+1
  8721     0465  0820               	movf	?___fltol,w
  8722     0466  00AC               	movwf	___awmod@dividend
  8723     0467  160A  118A  22FE  120A  118A  	fcall	___awmod
  8724     046C  1283               	bcf	3,5	;RP0=0, select bank0
  8725     046D  1303               	bcf	3,6	;RP1=0, select bank0
  8726     046E  082B               	movf	?___awmod+1,w
  8727     046F  1683               	bsf	3,5	;RP0=1, select bank1
  8728     0470  1303               	bcf	3,6	;RP1=0, select bank1
  8729     0471  00EB               	movwf	(main@birler+1)^(0+128)
  8730     0472  1283               	bcf	3,5	;RP0=0, select bank0
  8731     0473  1303               	bcf	3,6	;RP1=0, select bank0
  8732     0474  082A               	movf	?___awmod,w
  8733     0475  1683               	bsf	3,5	;RP0=1, select bank1
  8734     0476  1303               	bcf	3,6	;RP1=0, select bank1
  8735     0477  00EA               	movwf	main@birler^(0+128)
  8736     0478                     l4447:
  8737                           
  8738                           ;main.c: 355:         ADCON0bits.CHS = 0b0001;
  8739     0478  1283               	bcf	3,5	;RP0=0, select bank0
  8740     0479  1303               	bcf	3,6	;RP1=0, select bank0
  8741     047A  081F               	movf	31,w	;volatile
  8742     047B  39C7               	andlw	-57
  8743     047C  3808               	iorlw	8
  8744     047D  009F               	movwf	31	;volatile
  8745     047E                     l4449:
  8746                           
  8747                           ;main.c: 356:         _delay((unsigned long)((50)*(4000000/4000000.0)));
  8748     047E  300F               	movlw	15
  8749     047F  1283               	bcf	3,5	;RP0=0, select bank0
  8750     0480  1303               	bcf	3,6	;RP1=0, select bank0
  8751     0481  00D4               	movwf	??_main
  8752     0482                     u6337:
  8753     0482  0BD4               	decfsz	??_main,f
  8754     0483  2C82               	goto	u6337
  8755     0484  2C85               	nop2
  8756     0485                     l4451:
  8757                           
  8758                           ;main.c: 357:         ADCON0bits.GO = 1;
  8759     0485  1283               	bcf	3,5	;RP0=0, select bank0
  8760     0486  1303               	bcf	3,6	;RP1=0, select bank0
  8761     0487  151F               	bsf	31,2	;volatile
  8762     0488                     l220:	
  8763                           ;main.c: 358:         while (ADCON0bits.GO);
  8764                           
  8765     0488  191F               	btfsc	31,2	;volatile
  8766     0489  2C8B               	goto	u5971
  8767     048A  2C8C               	goto	u5970
  8768     048B                     u5971:
  8769     048B  2C88               	goto	l220
  8770     048C                     u5970:
  8771     048C                     l4453:
  8772                           
  8773                           ;main.c: 359:         adcValue1 = (ADRESH << 8) | ADRESL;
  8774     048C  1683               	bsf	3,5	;RP0=1, select bank1
  8775     048D  1303               	bcf	3,6	;RP1=0, select bank1
  8776     048E  081E               	movf	30,w	;volatile
  8777     048F  1283               	bcf	3,5	;RP0=0, select bank0
  8778     0490  1303               	bcf	3,6	;RP1=0, select bank0
  8779     0491  00D4               	movwf	??_main
  8780     0492  01D5               	clrf	??_main+1
  8781     0493  081E               	movf	30,w	;volatile
  8782     0494  00D6               	movwf	??_main+2
  8783     0495  01D7               	clrf	??_main+3
  8784     0496  0856               	movf	??_main+2,w
  8785     0497  00D7               	movwf	??_main+3
  8786     0498  01D6               	clrf	??_main+2
  8787     0499  0854               	movf	??_main,w
  8788     049A  0456               	iorwf	??_main+2,w
  8789     049B  00A0               	movwf	___xxtofl@val
  8790     049C  0855               	movf	??_main+1,w
  8791     049D  0457               	iorwf	??_main+3,w
  8792     049E  00A1               	movwf	___xxtofl@val+1
  8793     049F  01A2               	clrf	___xxtofl@val+2
  8794     04A0  1BA1               	btfsc	___xxtofl@val+1,7
  8795     04A1  03A2               	decf	___xxtofl@val+2,f
  8796     04A2  0822               	movf	___xxtofl@val+2,w
  8797     04A3  00A3               	movwf	___xxtofl@val+3
  8798     04A4  3001               	movlw	1
  8799     04A5  160A  118A  249D  120A  118A  	fcall	___xxtofl
  8800     04AA  1283               	bcf	3,5	;RP0=0, select bank0
  8801     04AB  1303               	bcf	3,6	;RP1=0, select bank0
  8802     04AC  0823               	movf	?___xxtofl+3,w
  8803     04AD  1683               	bsf	3,5	;RP0=1, select bank3
  8804     04AE  1703               	bsf	3,6	;RP1=1, select bank3
  8805     04AF  0097               	movwf	(main@adcValue1+3)^(0+384)
  8806     04B0  1283               	bcf	3,5	;RP0=0, select bank0
  8807     04B1  1303               	bcf	3,6	;RP1=0, select bank0
  8808     04B2  0822               	movf	?___xxtofl+2,w
  8809     04B3  1683               	bsf	3,5	;RP0=1, select bank3
  8810     04B4  1703               	bsf	3,6	;RP1=1, select bank3
  8811     04B5  0096               	movwf	(main@adcValue1+2)^(0+384)
  8812     04B6  1283               	bcf	3,5	;RP0=0, select bank0
  8813     04B7  1303               	bcf	3,6	;RP1=0, select bank0
  8814     04B8  0821               	movf	?___xxtofl+1,w
  8815     04B9  1683               	bsf	3,5	;RP0=1, select bank3
  8816     04BA  1703               	bsf	3,6	;RP1=1, select bank3
  8817     04BB  0095               	movwf	(main@adcValue1+1)^(0+384)
  8818     04BC  1283               	bcf	3,5	;RP0=0, select bank0
  8819     04BD  1303               	bcf	3,6	;RP1=0, select bank0
  8820     04BE  0820               	movf	?___xxtofl,w
  8821     04BF  1683               	bsf	3,5	;RP0=1, select bank3
  8822     04C0  1703               	bsf	3,6	;RP1=1, select bank3
  8823     04C1  0094               	movwf	main@adcValue1^(0+384)
  8824     04C2                     l4455:
  8825                           
  8826                           ;main.c: 360:         if (RE2==0 && RC0== 0 ){
  8827     04C2  1283               	bcf	3,5	;RP0=0, select bank0
  8828     04C3  1303               	bcf	3,6	;RP1=0, select bank0
  8829     04C4  1909               	btfsc	9,2	;volatile
  8830     04C5  2CC7               	goto	u5981
  8831     04C6  2CC8               	goto	u5980
  8832     04C7                     u5981:
  8833     04C7  2CF6               	goto	l223
  8834     04C8                     u5980:
  8835     04C8                     l4457:
  8836     04C8  1807               	btfsc	7,0	;volatile
  8837     04C9  2CCB               	goto	u5991
  8838     04CA  2CCC               	goto	u5990
  8839     04CB                     u5991:
  8840     04CB  2CF6               	goto	l223
  8841     04CC                     u5990:
  8842     04CC                     l4459:
  8843                           
  8844                           ;main.c: 361:         displayValue = (int)adcValue1 >> 1;
  8845     04CC  1683               	bsf	3,5	;RP0=1, select bank3
  8846     04CD  1703               	bsf	3,6	;RP1=1, select bank3
  8847     04CE  0817               	movf	(main@adcValue1+3)^(0+384),w
  8848     04CF  1283               	bcf	3,5	;RP0=0, select bank0
  8849     04D0  1303               	bcf	3,6	;RP1=0, select bank0
  8850     04D1  00A3               	movwf	___fltol@f1+3
  8851     04D2  1683               	bsf	3,5	;RP0=1, select bank3
  8852     04D3  1703               	bsf	3,6	;RP1=1, select bank3
  8853     04D4  0816               	movf	(main@adcValue1+2)^(0+384),w
  8854     04D5  1283               	bcf	3,5	;RP0=0, select bank0
  8855     04D6  1303               	bcf	3,6	;RP1=0, select bank0
  8856     04D7  00A2               	movwf	___fltol@f1+2
  8857     04D8  1683               	bsf	3,5	;RP0=1, select bank3
  8858     04D9  1703               	bsf	3,6	;RP1=1, select bank3
  8859     04DA  0815               	movf	(main@adcValue1+1)^(0+384),w
  8860     04DB  1283               	bcf	3,5	;RP0=0, select bank0
  8861     04DC  1303               	bcf	3,6	;RP1=0, select bank0
  8862     04DD  00A1               	movwf	___fltol@f1+1
  8863     04DE  1683               	bsf	3,5	;RP0=1, select bank3
  8864     04DF  1703               	bsf	3,6	;RP1=1, select bank3
  8865     04E0  0814               	movf	main@adcValue1^(0+384),w
  8866     04E1  1283               	bcf	3,5	;RP0=0, select bank0
  8867     04E2  1303               	bcf	3,6	;RP1=0, select bank0
  8868     04E3  00A0               	movwf	___fltol@f1
  8869     04E4  160A  118A  2425  120A  118A  	fcall	___fltol
  8870     04E9  1283               	bcf	3,5	;RP0=0, select bank0
  8871     04EA  1303               	bcf	3,6	;RP1=0, select bank0
  8872     04EB  0D21               	rlf	?___fltol+1,w
  8873     04EC  0C21               	rrf	?___fltol+1,w
  8874     04ED  1683               	bsf	3,5	;RP0=1, select bank3
  8875     04EE  1703               	bsf	3,6	;RP1=1, select bank3
  8876     04EF  00AF               	movwf	(main@displayValue+1)^(0+384)
  8877     04F0  1283               	bcf	3,5	;RP0=0, select bank0
  8878     04F1  1303               	bcf	3,6	;RP1=0, select bank0
  8879     04F2  0C20               	rrf	?___fltol,w
  8880     04F3  1683               	bsf	3,5	;RP0=1, select bank3
  8881     04F4  1703               	bsf	3,6	;RP1=1, select bank3
  8882     04F5  00AE               	movwf	main@displayValue^(0+384)
  8883     04F6                     l223:	
  8884                           ;main.c: 362:         }
  8885                           
  8886                           
  8887                           ;main.c: 363:         float gostermeliklcd = adcValue1 / 1024 * 1000;
  8888     04F6  3044               	movlw	68
  8889     04F7  1283               	bcf	3,5	;RP0=0, select bank0
  8890     04F8  1303               	bcf	3,6	;RP1=0, select bank0
  8891     04F9  00BD               	movwf	___flmul@b+3
  8892     04FA  307A               	movlw	122
  8893     04FB  00BC               	movwf	___flmul@b+2
  8894     04FC  3000               	movlw	0
  8895     04FD  00BB               	movwf	___flmul@b+1
  8896     04FE  3000               	movlw	0
  8897     04FF  00BA               	movwf	___flmul@b
  8898     0500  3044               	movlw	68
  8899     0501  00A3               	movwf	___fldiv@a+3
  8900     0502  3080               	movlw	128
  8901     0503  00A2               	movwf	___fldiv@a+2
  8902     0504  3000               	movlw	0
  8903     0505  00A1               	movwf	___fldiv@a+1
  8904     0506  3000               	movlw	0
  8905     0507  00A0               	movwf	___fldiv@a
  8906     0508  1683               	bsf	3,5	;RP0=1, select bank3
  8907     0509  1703               	bsf	3,6	;RP1=1, select bank3
  8908     050A  0817               	movf	(main@adcValue1+3)^(0+384),w
  8909     050B  1283               	bcf	3,5	;RP0=0, select bank0
  8910     050C  1303               	bcf	3,6	;RP1=0, select bank0
  8911     050D  00A7               	movwf	___fldiv@b+3
  8912     050E  1683               	bsf	3,5	;RP0=1, select bank3
  8913     050F  1703               	bsf	3,6	;RP1=1, select bank3
  8914     0510  0816               	movf	(main@adcValue1+2)^(0+384),w
  8915     0511  1283               	bcf	3,5	;RP0=0, select bank0
  8916     0512  1303               	bcf	3,6	;RP1=0, select bank0
  8917     0513  00A6               	movwf	___fldiv@b+2
  8918     0514  1683               	bsf	3,5	;RP0=1, select bank3
  8919     0515  1703               	bsf	3,6	;RP1=1, select bank3
  8920     0516  0815               	movf	(main@adcValue1+1)^(0+384),w
  8921     0517  1283               	bcf	3,5	;RP0=0, select bank0
  8922     0518  1303               	bcf	3,6	;RP1=0, select bank0
  8923     0519  00A5               	movwf	___fldiv@b+1
  8924     051A  1683               	bsf	3,5	;RP0=1, select bank3
  8925     051B  1703               	bsf	3,6	;RP1=1, select bank3
  8926     051C  0814               	movf	main@adcValue1^(0+384),w
  8927     051D  1283               	bcf	3,5	;RP0=0, select bank0
  8928     051E  1303               	bcf	3,6	;RP1=0, select bank0
  8929     051F  00A4               	movwf	___fldiv@b
  8930     0520  120A  118A  2615  120A  118A  	fcall	___fldiv
  8931     0525  1283               	bcf	3,5	;RP0=0, select bank0
  8932     0526  1303               	bcf	3,6	;RP1=0, select bank0
  8933     0527  0823               	movf	?___fldiv+3,w
  8934     0528  00C1               	movwf	___flmul@a+3
  8935     0529  0822               	movf	?___fldiv+2,w
  8936     052A  00C0               	movwf	___flmul@a+2
  8937     052B  0821               	movf	?___fldiv+1,w
  8938     052C  00BF               	movwf	___flmul@a+1
  8939     052D  0820               	movf	?___fldiv,w
  8940     052E  00BE               	movwf	___flmul@a
  8941     052F  120A  158A  24BB  120A  118A  	fcall	___flmul
  8942     0534  1283               	bcf	3,5	;RP0=0, select bank0
  8943     0535  1303               	bcf	3,6	;RP1=0, select bank0
  8944     0536  083D               	movf	?___flmul+3,w
  8945     0537  1683               	bsf	3,5	;RP0=1, select bank1
  8946     0538  1303               	bcf	3,6	;RP1=0, select bank1
  8947     0539  00D8               	movwf	(main@gostermeliklcd+3)^(0+128)
  8948     053A  1283               	bcf	3,5	;RP0=0, select bank0
  8949     053B  1303               	bcf	3,6	;RP1=0, select bank0
  8950     053C  083C               	movf	?___flmul+2,w
  8951     053D  1683               	bsf	3,5	;RP0=1, select bank1
  8952     053E  1303               	bcf	3,6	;RP1=0, select bank1
  8953     053F  00D7               	movwf	(main@gostermeliklcd+2)^(0+128)
  8954     0540  1283               	bcf	3,5	;RP0=0, select bank0
  8955     0541  1303               	bcf	3,6	;RP1=0, select bank0
  8956     0542  083B               	movf	?___flmul+1,w
  8957     0543  1683               	bsf	3,5	;RP0=1, select bank1
  8958     0544  1303               	bcf	3,6	;RP1=0, select bank1
  8959     0545  00D6               	movwf	(main@gostermeliklcd+1)^(0+128)
  8960     0546  1283               	bcf	3,5	;RP0=0, select bank0
  8961     0547  1303               	bcf	3,6	;RP1=0, select bank0
  8962     0548  083A               	movf	?___flmul,w
  8963     0549  1683               	bsf	3,5	;RP0=1, select bank1
  8964     054A  1303               	bcf	3,6	;RP1=0, select bank1
  8965     054B  00D5               	movwf	main@gostermeliklcd^(0+128)
  8966     054C                     l4461:
  8967                           
  8968                           ;main.c: 368:         Lcd_Set_Cursor(2, 1);
  8969     054C  1283               	bcf	3,5	;RP0=0, select bank0
  8970     054D  1303               	bcf	3,6	;RP1=0, select bank0
  8971     054E  01A4               	clrf	Lcd_Set_Cursor@b
  8972     054F  0AA4               	incf	Lcd_Set_Cursor@b,f
  8973     0550  3002               	movlw	2
  8974     0551  160A  118A  225F  120A  118A  	fcall	_Lcd_Set_Cursor
  8975     0556                     l4463:
  8976                           
  8977                           ;main.c: 369:         Lcd_Write_String("FeedRate:");
  8978     0556  301F               	movlw	low (STR_20| (0+32768))
  8979     0557  1283               	bcf	3,5	;RP0=0, select bank0
  8980     0558  1303               	bcf	3,6	;RP1=0, select bank0
  8981     0559  00A5               	movwf	Lcd_Write_String@a
  8982     055A  3099               	movlw	high (STR_20| (0+32768))
  8983     055B  00A6               	movwf	Lcd_Write_String@a+1
  8984     055C  160A  118A  2146  120A  118A  	fcall	_Lcd_Write_String
  8985     0561                     l4465:
  8986                           
  8987                           ;main.c: 370:         char adcString1[4];;main.c: 371:         sprintf(adcString1, "%003
      +                          u", (int)gostermeliklcd);
  8988     0561  305F               	movlw	low (STR_21| (0+32768))
  8989     0562  1283               	bcf	3,5	;RP0=0, select bank0
  8990     0563  1303               	bcf	3,6	;RP1=0, select bank0
  8991     0564  00AC               	movwf	sprintf@f
  8992     0565  3099               	movlw	high (STR_21| (0+32768))
  8993     0566  00AD               	movwf	sprintf@f+1
  8994     0567  1683               	bsf	3,5	;RP0=1, select bank1
  8995     0568  1303               	bcf	3,6	;RP1=0, select bank1
  8996     0569  0858               	movf	(main@gostermeliklcd+3)^(0+128),w
  8997     056A  1283               	bcf	3,5	;RP0=0, select bank0
  8998     056B  1303               	bcf	3,6	;RP1=0, select bank0
  8999     056C  00A3               	movwf	___fltol@f1+3
  9000     056D  1683               	bsf	3,5	;RP0=1, select bank1
  9001     056E  1303               	bcf	3,6	;RP1=0, select bank1
  9002     056F  0857               	movf	(main@gostermeliklcd+2)^(0+128),w
  9003     0570  1283               	bcf	3,5	;RP0=0, select bank0
  9004     0571  1303               	bcf	3,6	;RP1=0, select bank0
  9005     0572  00A2               	movwf	___fltol@f1+2
  9006     0573  1683               	bsf	3,5	;RP0=1, select bank1
  9007     0574  1303               	bcf	3,6	;RP1=0, select bank1
  9008     0575  0856               	movf	(main@gostermeliklcd+1)^(0+128),w
  9009     0576  1283               	bcf	3,5	;RP0=0, select bank0
  9010     0577  1303               	bcf	3,6	;RP1=0, select bank0
  9011     0578  00A1               	movwf	___fltol@f1+1
  9012     0579  1683               	bsf	3,5	;RP0=1, select bank1
  9013     057A  1303               	bcf	3,6	;RP1=0, select bank1
  9014     057B  0855               	movf	main@gostermeliklcd^(0+128),w
  9015     057C  1283               	bcf	3,5	;RP0=0, select bank0
  9016     057D  1303               	bcf	3,6	;RP1=0, select bank0
  9017     057E  00A0               	movwf	___fltol@f1
  9018     057F  160A  118A  2425  120A  118A  	fcall	___fltol
  9019     0584  1283               	bcf	3,5	;RP0=0, select bank0
  9020     0585  1303               	bcf	3,6	;RP1=0, select bank0
  9021     0586  0821               	movf	?___fltol+1,w
  9022     0587  00AF               	movwf	?_sprintf+3
  9023     0588  0820               	movf	?___fltol,w
  9024     0589  00AE               	movwf	?_sprintf+2
  9025     058A  30EC               	movlw	(low (main@adcString1| 0))& (0+255)
  9026     058B  120A  158A  2005  120A  118A  	fcall	_sprintf
  9027     0590                     l4467:
  9028                           
  9029                           ;main.c: 372:         Lcd_Set_Cursor(2, 10);
  9030     0590  300A               	movlw	10
  9031     0591  1283               	bcf	3,5	;RP0=0, select bank0
  9032     0592  1303               	bcf	3,6	;RP1=0, select bank0
  9033     0593  00A4               	movwf	Lcd_Set_Cursor@b
  9034     0594  3002               	movlw	2
  9035     0595  160A  118A  225F  120A  118A  	fcall	_Lcd_Set_Cursor
  9036     059A                     l4469:
  9037                           
  9038                           ;main.c: 373:         Lcd_Write_String(adcString1);
  9039     059A  30EC               	movlw	(low (main@adcString1| 0))& (0+255)
  9040     059B  1283               	bcf	3,5	;RP0=0, select bank0
  9041     059C  1303               	bcf	3,6	;RP1=0, select bank0
  9042     059D  00A5               	movwf	Lcd_Write_String@a
  9043     059E  3000               	movlw	0
  9044     059F  00A6               	movwf	Lcd_Write_String@a+1
  9045     05A0  160A  118A  2146  120A  118A  	fcall	_Lcd_Write_String
  9046     05A5                     l4471:
  9047                           
  9048                           ;main.c: 376:         Lcd_Set_Cursor(1, 1);
  9049     05A5  1283               	bcf	3,5	;RP0=0, select bank0
  9050     05A6  1303               	bcf	3,6	;RP1=0, select bank0
  9051     05A7  01A4               	clrf	Lcd_Set_Cursor@b
  9052     05A8  0AA4               	incf	Lcd_Set_Cursor@b,f
  9053     05A9  3001               	movlw	1
  9054     05AA  160A  118A  225F  120A  118A  	fcall	_Lcd_Set_Cursor
  9055     05AF                     l4473:
  9056                           
  9057                           ;main.c: 377:         Lcd_Write_String("RPM:");
  9058     05AF  306A               	movlw	low (STR_22| (0+32768))
  9059     05B0  1283               	bcf	3,5	;RP0=0, select bank0
  9060     05B1  1303               	bcf	3,6	;RP1=0, select bank0
  9061     05B2  00A5               	movwf	Lcd_Write_String@a
  9062     05B3  3099               	movlw	high (STR_22| (0+32768))
  9063     05B4  00A6               	movwf	Lcd_Write_String@a+1
  9064     05B5  160A  118A  2146  120A  118A  	fcall	_Lcd_Write_String
  9065     05BA                     l4475:
  9066                           
  9067                           ;main.c: 378:         char rpmString[5];;main.c: 379: sprintf(rpmString, "%u%u%u.%u", bi
      +                          nler,yuzler,onlar,birler);
  9068     05BA  303D               	movlw	low (STR_23| (0+32768))
  9069     05BB  1283               	bcf	3,5	;RP0=0, select bank0
  9070     05BC  1303               	bcf	3,6	;RP1=0, select bank0
  9071     05BD  00AC               	movwf	sprintf@f
  9072     05BE  3099               	movlw	high (STR_23| (0+32768))
  9073     05BF  00AD               	movwf	sprintf@f+1
  9074     05C0  1683               	bsf	3,5	;RP0=1, select bank3
  9075     05C1  1703               	bsf	3,6	;RP1=1, select bank3
  9076     05C2  0827               	movf	(main@binler+1)^(0+384),w
  9077     05C3  1283               	bcf	3,5	;RP0=0, select bank0
  9078     05C4  1303               	bcf	3,6	;RP1=0, select bank0
  9079     05C5  00AF               	movwf	?_sprintf+3
  9080     05C6  1683               	bsf	3,5	;RP0=1, select bank3
  9081     05C7  1703               	bsf	3,6	;RP1=1, select bank3
  9082     05C8  0826               	movf	main@binler^(0+384),w
  9083     05C9  1283               	bcf	3,5	;RP0=0, select bank0
  9084     05CA  1303               	bcf	3,6	;RP1=0, select bank0
  9085     05CB  00AE               	movwf	?_sprintf+2
  9086     05CC  1683               	bsf	3,5	;RP0=1, select bank3
  9087     05CD  1703               	bsf	3,6	;RP1=1, select bank3
  9088     05CE  0819               	movf	(main@yuzler+1)^(0+384),w
  9089     05CF  1283               	bcf	3,5	;RP0=0, select bank0
  9090     05D0  1303               	bcf	3,6	;RP1=0, select bank0
  9091     05D1  00B1               	movwf	?_sprintf+5
  9092     05D2  1683               	bsf	3,5	;RP0=1, select bank3
  9093     05D3  1703               	bsf	3,6	;RP1=1, select bank3
  9094     05D4  0818               	movf	main@yuzler^(0+384),w
  9095     05D5  1283               	bcf	3,5	;RP0=0, select bank0
  9096     05D6  1303               	bcf	3,6	;RP1=0, select bank0
  9097     05D7  00B0               	movwf	?_sprintf+4
  9098     05D8  1683               	bsf	3,5	;RP0=1, select bank1
  9099     05D9  1303               	bcf	3,6	;RP1=0, select bank1
  9100     05DA  0869               	movf	(main@onlar+1)^(0+128),w
  9101     05DB  1283               	bcf	3,5	;RP0=0, select bank0
  9102     05DC  1303               	bcf	3,6	;RP1=0, select bank0
  9103     05DD  00B3               	movwf	?_sprintf+7
  9104     05DE  1683               	bsf	3,5	;RP0=1, select bank1
  9105     05DF  1303               	bcf	3,6	;RP1=0, select bank1
  9106     05E0  0868               	movf	main@onlar^(0+128),w
  9107     05E1  1283               	bcf	3,5	;RP0=0, select bank0
  9108     05E2  1303               	bcf	3,6	;RP1=0, select bank0
  9109     05E3  00B2               	movwf	?_sprintf+6
  9110     05E4  1683               	bsf	3,5	;RP0=1, select bank1
  9111     05E5  1303               	bcf	3,6	;RP1=0, select bank1
  9112     05E6  086B               	movf	(main@birler+1)^(0+128),w
  9113     05E7  1283               	bcf	3,5	;RP0=0, select bank0
  9114     05E8  1303               	bcf	3,6	;RP1=0, select bank0
  9115     05E9  00B5               	movwf	?_sprintf+9
  9116     05EA  1683               	bsf	3,5	;RP0=1, select bank1
  9117     05EB  1303               	bcf	3,6	;RP1=0, select bank1
  9118     05EC  086A               	movf	main@birler^(0+128),w
  9119     05ED  1283               	bcf	3,5	;RP0=0, select bank0
  9120     05EE  1303               	bcf	3,6	;RP1=0, select bank0
  9121     05EF  00B4               	movwf	?_sprintf+8
  9122     05F0  30DD               	movlw	(low (main@rpmString| 0))& (0+255)
  9123     05F1  120A  158A  2005  120A  118A  	fcall	_sprintf
  9124     05F6                     l4477:
  9125                           
  9126                           ;main.c: 381: Lcd_Set_Cursor(1, 5);
  9127     05F6  3005               	movlw	5
  9128     05F7  1283               	bcf	3,5	;RP0=0, select bank0
  9129     05F8  1303               	bcf	3,6	;RP1=0, select bank0
  9130     05F9  00A4               	movwf	Lcd_Set_Cursor@b
  9131     05FA  3001               	movlw	1
  9132     05FB  160A  118A  225F  120A  118A  	fcall	_Lcd_Set_Cursor
  9133     0600                     l4479:
  9134                           
  9135                           ;main.c: 382: Lcd_Write_String(rpmString);
  9136     0600  30DD               	movlw	(low (main@rpmString| 0))& (0+255)
  9137     0601  1283               	bcf	3,5	;RP0=0, select bank0
  9138     0602  1303               	bcf	3,6	;RP1=0, select bank0
  9139     0603  00A5               	movwf	Lcd_Write_String@a
  9140     0604  3000               	movlw	0
  9141     0605  00A6               	movwf	Lcd_Write_String@a+1
  9142     0606  160A  118A  2146  120A  118A  	fcall	_Lcd_Write_String
  9143     060B                     l4481:
  9144                           
  9145                           ;main.c: 389:  if (RC1 == 1 && (RE0 == 1 || RE2 == 1)) {
  9146     060B  1283               	bcf	3,5	;RP0=0, select bank0
  9147     060C  1303               	bcf	3,6	;RP1=0, select bank0
  9148     060D  1C87               	btfss	7,1	;volatile
  9149     060E  2E12               	goto	u6001
  9150     060F  120A  158A  29FC   	goto	u6000
  9151     0612                     u6001:
  9152     0612  120A  158A  2A23   	goto	l224
  9153                           
  9154                           	psect	maintext_split_3
  9155     09FC                     u6000:
  9156     09FC                     l4483:
  9157     09FC  1809               	btfsc	9,0	;volatile
  9158     09FD  29FF               	goto	u6011
  9159     09FE  2A00               	goto	u6010
  9160     09FF                     u6011:
  9161     09FF  2A04               	goto	l4487
  9162     0A00                     u6010:
  9163     0A00                     l4485:
  9164     0A00  1D09               	btfss	9,2	;volatile
  9165     0A01  2A03               	goto	u6021
  9166     0A02  2A04               	goto	u6020
  9167     0A03                     u6021:
  9168     0A03  2A23               	goto	l224
  9169     0A04                     u6020:
  9170     0A04                     l4487:
  9171                           
  9172                           ;main.c: 390:             Lcd_Set_Cursor(2, 13);
  9173     0A04  300D               	movlw	13
  9174     0A05  00A4               	movwf	Lcd_Set_Cursor@b
  9175     0A06  3002               	movlw	2
  9176     0A07  160A  118A  225F  120A  158A  	fcall	_Lcd_Set_Cursor
  9177     0A0C                     l4489:
  9178                           
  9179                           ;main.c: 391:             Lcd_Write_String(" FWD LMT");
  9180     0A0C  3047               	movlw	low (STR_24| (0+32768))
  9181     0A0D  1283               	bcf	3,5	;RP0=0, select bank0
  9182     0A0E  1303               	bcf	3,6	;RP1=0, select bank0
  9183     0A0F  00A5               	movwf	Lcd_Write_String@a
  9184     0A10  3099               	movlw	high (STR_24| (0+32768))
  9185     0A11  00A6               	movwf	Lcd_Write_String@a+1
  9186     0A12  160A  118A  2146  120A  158A  	fcall	_Lcd_Write_String
  9187     0A17                     l4491:
  9188                           
  9189                           ;main.c: 392:             UART_Write_Text("s0\r\n");
  9190     0A17  3065               	movlw	low (STR_25| (0+32768))
  9191     0A18  1283               	bcf	3,5	;RP0=0, select bank0
  9192     0A19  1303               	bcf	3,6	;RP1=0, select bank0
  9193     0A1A  00A1               	movwf	UART_Write_Text@text
  9194     0A1B  3099               	movlw	high (STR_25| (0+32768))
  9195     0A1C  00A2               	movwf	UART_Write_Text@text+1
  9196     0A1D  160A  118A  218C  120A  158A  	fcall	_UART_Write_Text
  9197                           
  9198                           ;main.c: 394:         } else if ((RE2 == 1 && RE0 == 1) || (RE2 == 1 && RE1 == 0)) {
  9199     0A22  2C02               	goto	l4569
  9200     0A23                     l224:
  9201     0A23  1D09               	btfss	9,2	;volatile
  9202     0A24  2A26               	goto	u6031
  9203     0A25  2A27               	goto	u6030
  9204     0A26                     u6031:
  9205     0A26  2A2B               	goto	l232
  9206     0A27                     u6030:
  9207     0A27                     l4493:
  9208     0A27  1809               	btfsc	9,0	;volatile
  9209     0A28  2A2A               	goto	u6041
  9210     0A29  2A2B               	goto	u6040
  9211     0A2A                     u6041:
  9212     0A2A  2A33               	goto	l4497
  9213     0A2B                     u6040:
  9214     0A2B                     l232:
  9215     0A2B  1D09               	btfss	9,2	;volatile
  9216     0A2C  2A2E               	goto	u6051
  9217     0A2D  2A2F               	goto	u6050
  9218     0A2E                     u6051:
  9219     0A2E  2A89               	goto	l228
  9220     0A2F                     u6050:
  9221     0A2F                     l4495:
  9222     0A2F  1889               	btfsc	9,1	;volatile
  9223     0A30  2A32               	goto	u6061
  9224     0A31  2A33               	goto	u6060
  9225     0A32                     u6061:
  9226     0A32  2A89               	goto	l228
  9227     0A33                     u6060:
  9228     0A33                     l4497:
  9229                           
  9230                           ;main.c: 395:             Lcd_Set_Cursor(2, 13);
  9231     0A33  300D               	movlw	13
  9232     0A34  00A4               	movwf	Lcd_Set_Cursor@b
  9233     0A35  3002               	movlw	2
  9234     0A36  160A  118A  225F  120A  158A  	fcall	_Lcd_Set_Cursor
  9235     0A3B                     l4499:
  9236                           
  9237                           ;main.c: 396:             Lcd_Write_String(" FWD 1.6K");
  9238     0A3B  3029               	movlw	low (STR_26| (0+32768))
  9239     0A3C  1283               	bcf	3,5	;RP0=0, select bank0
  9240     0A3D  1303               	bcf	3,6	;RP1=0, select bank0
  9241     0A3E  00A5               	movwf	Lcd_Write_String@a
  9242     0A3F  3099               	movlw	high (STR_26| (0+32768))
  9243     0A40  00A6               	movwf	Lcd_Write_String@a+1
  9244     0A41  160A  118A  2146  120A  158A  	fcall	_Lcd_Write_String
  9245     0A46                     l4501:
  9246                           
  9247                           ;main.c: 397:             if (displayValue < 800) {
  9248     0A46  3003               	movlw	3
  9249     0A47  1683               	bsf	3,5	;RP0=1, select bank3
  9250     0A48  1703               	bsf	3,6	;RP1=1, select bank3
  9251     0A49  022F               	subwf	(main@displayValue+1)^(0+384),w
  9252     0A4A  3020               	movlw	32
  9253     0A4B  1903               	skipnz
  9254     0A4C  022E               	subwf	main@displayValue^(0+384),w
  9255     0A4D  1803               	skipnc
  9256     0A4E  2A50               	goto	u6071
  9257     0A4F  2A51               	goto	u6070
  9258     0A50                     u6071:
  9259     0A50  2C02               	goto	l4569
  9260     0A51                     u6070:
  9261     0A51                     l4503:
  9262                           
  9263                           ;main.c: 398:                 char uartMessage[8];;main.c: 399:                 displayV
      +                          alue += 80;
  9264     0A51  3050               	movlw	80
  9265     0A52  07AE               	addwf	main@displayValue^(0+384),f
  9266     0A53  1803               	skipnc
  9267     0A54  0AAF               	incf	(main@displayValue+1)^(0+384),f
  9268     0A55  3000               	movlw	0
  9269     0A56  07AF               	addwf	(main@displayValue+1)^(0+384),f
  9270                           
  9271                           ;main.c: 401:                 if (displayValue > 800) {
  9272     0A57  3003               	movlw	3
  9273     0A58  022F               	subwf	(main@displayValue+1)^(0+384),w
  9274     0A59  3021               	movlw	33
  9275     0A5A  1903               	skipnz
  9276     0A5B  022E               	subwf	main@displayValue^(0+384),w
  9277     0A5C  1C03               	skipc
  9278     0A5D  2A5F               	goto	u6081
  9279     0A5E  2A60               	goto	u6080
  9280     0A5F                     u6081:
  9281     0A5F  2A64               	goto	l4507
  9282     0A60                     u6080:
  9283     0A60                     l4505:
  9284                           
  9285                           ;main.c: 402:                     displayValue = 800;
  9286     0A60  3020               	movlw	32
  9287     0A61  00AE               	movwf	main@displayValue^(0+384)
  9288     0A62  3003               	movlw	3
  9289     0A63  00AF               	movwf	(main@displayValue^(0+384)+1)
  9290     0A64                     l4507:
  9291                           
  9292                           ;main.c: 404:                 sprintf(uartMessage, "s%d\r\n", displayValue);
  9293     0A64  3059               	movlw	low (STR_27| (0+32768))
  9294     0A65  1283               	bcf	3,5	;RP0=0, select bank0
  9295     0A66  1303               	bcf	3,6	;RP1=0, select bank0
  9296     0A67  00AC               	movwf	sprintf@f
  9297     0A68  3099               	movlw	high (STR_27| (0+32768))
  9298     0A69  00AD               	movwf	sprintf@f+1
  9299     0A6A  1683               	bsf	3,5	;RP0=1, select bank3
  9300     0A6B  1703               	bsf	3,6	;RP1=1, select bank3
  9301     0A6C  082F               	movf	(main@displayValue+1)^(0+384),w
  9302     0A6D  1283               	bcf	3,5	;RP0=0, select bank0
  9303     0A6E  1303               	bcf	3,6	;RP1=0, select bank0
  9304     0A6F  00AF               	movwf	?_sprintf+3
  9305     0A70  1683               	bsf	3,5	;RP0=1, select bank3
  9306     0A71  1703               	bsf	3,6	;RP1=1, select bank3
  9307     0A72  082E               	movf	main@displayValue^(0+384),w
  9308     0A73  1283               	bcf	3,5	;RP0=0, select bank0
  9309     0A74  1303               	bcf	3,6	;RP1=0, select bank0
  9310     0A75  00AE               	movwf	?_sprintf+2
  9311     0A76  30BD               	movlw	(low (main@uartMessage| 0))& (0+255)
  9312     0A77  120A  158A  2005  120A  158A  	fcall	_sprintf
  9313     0A7C                     l4509:
  9314                           
  9315                           ;main.c: 405:                 UART_Write_Text(uartMessage);
  9316     0A7C  30BD               	movlw	(low (main@uartMessage| 0))& (0+255)
  9317     0A7D  1283               	bcf	3,5	;RP0=0, select bank0
  9318     0A7E  1303               	bcf	3,6	;RP1=0, select bank0
  9319     0A7F  00A1               	movwf	UART_Write_Text@text
  9320     0A80  3000               	movlw	0
  9321     0A81  00A2               	movwf	UART_Write_Text@text+1
  9322     0A82  160A  118A  218C  120A  158A  	fcall	_UART_Write_Text
  9323     0A87  2C02               	goto	l4569
  9324     0A88                     l233:	
  9325                           ;main.c: 406:             }
  9326                           
  9327                           
  9328                           ;main.c: 408:         } else if (RE0 == 1) {
  9329     0A88  2C02               	goto	l4569
  9330     0A89                     l228:
  9331     0A89  1C09               	btfss	9,0	;volatile
  9332     0A8A  2A8C               	goto	u6091
  9333     0A8B  2A8D               	goto	u6090
  9334     0A8C                     u6091:
  9335     0A8C  2AC4               	goto	l236
  9336     0A8D                     u6090:
  9337     0A8D                     l4511:
  9338                           
  9339                           ;main.c: 409:             Lcd_Set_Cursor(2, 13);
  9340     0A8D  300D               	movlw	13
  9341     0A8E  00A4               	movwf	Lcd_Set_Cursor@b
  9342     0A8F  3002               	movlw	2
  9343     0A90  160A  118A  225F  120A  158A  	fcall	_Lcd_Set_Cursor
  9344     0A95                     l4513:
  9345                           
  9346                           ;main.c: 410:             Lcd_Write_String(" FWD          ");
  9347     0A95  30CD               	movlw	low (STR_28| (0+32768))
  9348     0A96  1283               	bcf	3,5	;RP0=0, select bank0
  9349     0A97  1303               	bcf	3,6	;RP1=0, select bank0
  9350     0A98  00A5               	movwf	Lcd_Write_String@a
  9351     0A99  3098               	movlw	high (STR_28| (0+32768))
  9352     0A9A  00A6               	movwf	Lcd_Write_String@a+1
  9353     0A9B  160A  118A  2146  120A  158A  	fcall	_Lcd_Write_String
  9354     0AA0                     l4515:
  9355                           
  9356                           ;main.c: 411:             char combinedText[20];;main.c: 412:             sprintf(combin
      +                          edText, "s%d\r\n", displayValue);
  9357     0AA0  3059               	movlw	low (STR_27| (0+32768))
  9358     0AA1  1283               	bcf	3,5	;RP0=0, select bank0
  9359     0AA2  1303               	bcf	3,6	;RP1=0, select bank0
  9360     0AA3  00AC               	movwf	sprintf@f
  9361     0AA4  3099               	movlw	high (STR_27| (0+32768))
  9362     0AA5  00AD               	movwf	sprintf@f+1
  9363     0AA6  1683               	bsf	3,5	;RP0=1, select bank3
  9364     0AA7  1703               	bsf	3,6	;RP1=1, select bank3
  9365     0AA8  082F               	movf	(main@displayValue+1)^(0+384),w
  9366     0AA9  1283               	bcf	3,5	;RP0=0, select bank0
  9367     0AAA  1303               	bcf	3,6	;RP1=0, select bank0
  9368     0AAB  00AF               	movwf	?_sprintf+3
  9369     0AAC  1683               	bsf	3,5	;RP0=1, select bank3
  9370     0AAD  1703               	bsf	3,6	;RP1=1, select bank3
  9371     0AAE  082E               	movf	main@displayValue^(0+384),w
  9372     0AAF  1283               	bcf	3,5	;RP0=0, select bank0
  9373     0AB0  1303               	bcf	3,6	;RP1=0, select bank0
  9374     0AB1  00AE               	movwf	?_sprintf+2
  9375     0AB2  305A               	movlw	(low (main@combinedText| 0))& (0+255)
  9376     0AB3  120A  158A  2005  120A  158A  	fcall	_sprintf
  9377     0AB8                     l4517:
  9378                           
  9379                           ;main.c: 413:             UART_Write_Text(combinedText);
  9380     0AB8  305A               	movlw	(low (main@combinedText| 0))& (0+255)
  9381     0AB9  1283               	bcf	3,5	;RP0=0, select bank0
  9382     0ABA  1303               	bcf	3,6	;RP1=0, select bank0
  9383     0ABB  00A1               	movwf	UART_Write_Text@text
  9384     0ABC  3000               	movlw	0
  9385     0ABD  00A2               	movwf	UART_Write_Text@text+1
  9386     0ABE  160A  118A  218C  120A  158A  	fcall	_UART_Write_Text
  9387                           
  9388                           ;main.c: 416:         } else if (RC2 == 1 && (RE1 == 1 || RC0 == 1)) {
  9389     0AC3  2C02               	goto	l4569
  9390     0AC4                     l236:
  9391     0AC4  1D07               	btfss	7,2	;volatile
  9392     0AC5  2AC7               	goto	u6101
  9393     0AC6  2AC8               	goto	u6100
  9394     0AC7                     u6101:
  9395     0AC7  2AEF               	goto	l238
  9396     0AC8                     u6100:
  9397     0AC8                     l4519:
  9398     0AC8  1889               	btfsc	9,1	;volatile
  9399     0AC9  2ACB               	goto	u6111
  9400     0ACA  2ACC               	goto	u6110
  9401     0ACB                     u6111:
  9402     0ACB  2AD0               	goto	l4523
  9403     0ACC                     u6110:
  9404     0ACC                     l4521:
  9405     0ACC  1C07               	btfss	7,0	;volatile
  9406     0ACD  2ACF               	goto	u6121
  9407     0ACE  2AD0               	goto	u6120
  9408     0ACF                     u6121:
  9409     0ACF  2AEF               	goto	l238
  9410     0AD0                     u6120:
  9411     0AD0                     l4523:
  9412                           
  9413                           ;main.c: 417:             Lcd_Set_Cursor(2, 13);
  9414     0AD0  300D               	movlw	13
  9415     0AD1  00A4               	movwf	Lcd_Set_Cursor@b
  9416     0AD2  3002               	movlw	2
  9417     0AD3  160A  118A  225F  120A  158A  	fcall	_Lcd_Set_Cursor
  9418     0AD8                     l4525:
  9419                           
  9420                           ;main.c: 418:             Lcd_Write_String(" REW LMT");
  9421     0AD8  3050               	movlw	low (STR_30| (0+32768))
  9422     0AD9  1283               	bcf	3,5	;RP0=0, select bank0
  9423     0ADA  1303               	bcf	3,6	;RP1=0, select bank0
  9424     0ADB  00A5               	movwf	Lcd_Write_String@a
  9425     0ADC  3099               	movlw	high (STR_30| (0+32768))
  9426     0ADD  00A6               	movwf	Lcd_Write_String@a+1
  9427     0ADE  160A  118A  2146  120A  158A  	fcall	_Lcd_Write_String
  9428     0AE3                     l4527:
  9429                           
  9430                           ;main.c: 419:             UART_Write_Text("s0\r\n");
  9431     0AE3  3065               	movlw	low (STR_25| (0+32768))
  9432     0AE4  1283               	bcf	3,5	;RP0=0, select bank0
  9433     0AE5  1303               	bcf	3,6	;RP1=0, select bank0
  9434     0AE6  00A1               	movwf	UART_Write_Text@text
  9435     0AE7  3099               	movlw	high (STR_25| (0+32768))
  9436     0AE8  00A2               	movwf	UART_Write_Text@text+1
  9437     0AE9  160A  118A  218C  120A  158A  	fcall	_UART_Write_Text
  9438                           
  9439                           ;main.c: 421:         } else if ((RC0 == 1 && RE1 == 1) || (RC0 == 1 && RE0 == 0)) {
  9440     0AEE  2C02               	goto	l4569
  9441     0AEF                     l238:
  9442     0AEF  1C07               	btfss	7,0	;volatile
  9443     0AF0  2AF2               	goto	u6131
  9444     0AF1  2AF3               	goto	u6130
  9445     0AF2                     u6131:
  9446     0AF2  2AF7               	goto	l246
  9447     0AF3                     u6130:
  9448     0AF3                     l4529:
  9449     0AF3  1889               	btfsc	9,1	;volatile
  9450     0AF4  2AF6               	goto	u6141
  9451     0AF5  2AF7               	goto	u6140
  9452     0AF6                     u6141:
  9453     0AF6  2AFF               	goto	l4533
  9454     0AF7                     u6140:
  9455     0AF7                     l246:
  9456     0AF7  1C07               	btfss	7,0	;volatile
  9457     0AF8  2AFA               	goto	u6151
  9458     0AF9  2AFB               	goto	u6150
  9459     0AFA                     u6151:
  9460     0AFA  2B90               	goto	l242
  9461     0AFB                     u6150:
  9462     0AFB                     l4531:
  9463     0AFB  1809               	btfsc	9,0	;volatile
  9464     0AFC  2AFE               	goto	u6161
  9465     0AFD  2AFF               	goto	u6160
  9466     0AFE                     u6161:
  9467     0AFE  2B90               	goto	l242
  9468     0AFF                     u6160:
  9469     0AFF                     l4533:
  9470                           
  9471                           ;main.c: 422:             Lcd_Set_Cursor(2, 13);
  9472     0AFF  300D               	movlw	13
  9473     0B00  00A4               	movwf	Lcd_Set_Cursor@b
  9474     0B01  3002               	movlw	2
  9475     0B02  160A  118A  225F  120A  158A  	fcall	_Lcd_Set_Cursor
  9476     0B07                     l4535:
  9477                           
  9478                           ;main.c: 423:             Lcd_Write_String(" REW 1.6K");
  9479     0B07  3033               	movlw	low (STR_32| (0+32768))
  9480     0B08  1283               	bcf	3,5	;RP0=0, select bank0
  9481     0B09  1303               	bcf	3,6	;RP1=0, select bank0
  9482     0B0A  00A5               	movwf	Lcd_Write_String@a
  9483     0B0B  3099               	movlw	high (STR_32| (0+32768))
  9484     0B0C  00A6               	movwf	Lcd_Write_String@a+1
  9485     0B0D  160A  118A  2146  120A  158A  	fcall	_Lcd_Write_String
  9486     0B12                     l4537:
  9487                           
  9488                           ;main.c: 424:             int negativeFeedValue = -displayValue;
  9489     0B12  1683               	bsf	3,5	;RP0=1, select bank3
  9490     0B13  1703               	bsf	3,6	;RP1=1, select bank3
  9491     0B14  092E               	comf	main@displayValue^(0+384),w
  9492     0B15  1283               	bcf	3,5	;RP0=0, select bank0
  9493     0B16  1303               	bcf	3,6	;RP1=0, select bank0
  9494     0B17  00D4               	movwf	??_main
  9495     0B18  1683               	bsf	3,5	;RP0=1, select bank3
  9496     0B19  1703               	bsf	3,6	;RP1=1, select bank3
  9497     0B1A  092F               	comf	(main@displayValue+1)^(0+384),w
  9498     0B1B  1283               	bcf	3,5	;RP0=0, select bank0
  9499     0B1C  1303               	bcf	3,6	;RP1=0, select bank0
  9500     0B1D  00D5               	movwf	??_main+1
  9501     0B1E  0AD4               	incf	??_main,f
  9502     0B1F  1903               	skipnz
  9503     0B20  0AD5               	incf	??_main+1,f
  9504     0B21  0854               	movf	??_main,w
  9505     0B22  1683               	bsf	3,5	;RP0=1, select bank3
  9506     0B23  1703               	bsf	3,6	;RP1=1, select bank3
  9507     0B24  00AC               	movwf	main@negativeFeedValue^(0+384)
  9508     0B25  1283               	bcf	3,5	;RP0=0, select bank0
  9509     0B26  1303               	bcf	3,6	;RP1=0, select bank0
  9510     0B27  0855               	movf	??_main+1,w
  9511     0B28  1683               	bsf	3,5	;RP0=1, select bank3
  9512     0B29  1703               	bsf	3,6	;RP1=1, select bank3
  9513     0B2A  00AD               	movwf	(main@negativeFeedValue+1)^(0+384)
  9514     0B2B                     l4539:
  9515                           
  9516                           ;main.c: 425:             if (negativeFeedValue > -800) {
  9517     0B2B  082D               	movf	(main@negativeFeedValue+1)^(0+384),w
  9518     0B2C  3A80               	xorlw	128
  9519     0B2D  00FF               	movwf	btemp+1
  9520     0B2E  307C               	movlw	124
  9521     0B2F  027F               	subwf	btemp+1,w
  9522     0B30  1D03               	skipz
  9523     0B31  2B34               	goto	u6175
  9524     0B32  30E1               	movlw	225
  9525     0B33  022C               	subwf	main@negativeFeedValue^(0+384),w
  9526     0B34                     u6175:
  9527     0B34  1C03               	skipc
  9528     0B35  2B37               	goto	u6171
  9529     0B36  2B38               	goto	u6170
  9530     0B37                     u6171:
  9531     0B37  2A88               	goto	l233
  9532     0B38                     u6170:
  9533     0B38                     l4541:
  9534                           
  9535                           ;main.c: 426:                 char uartMessage[8];;main.c: 427:                 negative
      +                          FeedValue -= 80;
  9536     0B38  30B0               	movlw	176
  9537     0B39  1683               	bsf	3,5	;RP0=1, select bank3
  9538     0B3A  1703               	bsf	3,6	;RP1=1, select bank3
  9539     0B3B  07AC               	addwf	main@negativeFeedValue^(0+384),f
  9540     0B3C  1803               	skipnc
  9541     0B3D  0AAD               	incf	(main@negativeFeedValue+1)^(0+384),f
  9542     0B3E  30FF               	movlw	255
  9543     0B3F  07AD               	addwf	(main@negativeFeedValue+1)^(0+384),f
  9544     0B40                     l4543:
  9545                           
  9546                           ;main.c: 428:                 if (negativeFeedValue < -800) {
  9547     0B40  082D               	movf	(main@negativeFeedValue+1)^(0+384),w
  9548     0B41  3A80               	xorlw	128
  9549     0B42  00FF               	movwf	btemp+1
  9550     0B43  307C               	movlw	124
  9551     0B44  027F               	subwf	btemp+1,w
  9552     0B45  1D03               	skipz
  9553     0B46  2B49               	goto	u6185
  9554     0B47  30E0               	movlw	224
  9555     0B48  022C               	subwf	main@negativeFeedValue^(0+384),w
  9556     0B49                     u6185:
  9557     0B49  1803               	skipnc
  9558     0B4A  2B4C               	goto	u6181
  9559     0B4B  2B4D               	goto	u6180
  9560     0B4C                     u6181:
  9561     0B4C  2B53               	goto	l4547
  9562     0B4D                     u6180:
  9563     0B4D                     l4545:
  9564                           
  9565                           ;main.c: 429:                     negativeFeedValue = -800;
  9566     0B4D  30E0               	movlw	224
  9567     0B4E  1683               	bsf	3,5	;RP0=1, select bank3
  9568     0B4F  1703               	bsf	3,6	;RP1=1, select bank3
  9569     0B50  00AC               	movwf	main@negativeFeedValue^(0+384)
  9570     0B51  30FC               	movlw	252
  9571     0B52  00AD               	movwf	(main@negativeFeedValue^(0+384)+1)
  9572     0B53                     l4547:
  9573                           
  9574                           ;main.c: 431:                 displayValue=-negativeFeedValue;
  9575     0B53  1683               	bsf	3,5	;RP0=1, select bank3
  9576     0B54  1703               	bsf	3,6	;RP1=1, select bank3
  9577     0B55  092C               	comf	main@negativeFeedValue^(0+384),w
  9578     0B56  1283               	bcf	3,5	;RP0=0, select bank0
  9579     0B57  1303               	bcf	3,6	;RP1=0, select bank0
  9580     0B58  00D4               	movwf	??_main
  9581     0B59  1683               	bsf	3,5	;RP0=1, select bank3
  9582     0B5A  1703               	bsf	3,6	;RP1=1, select bank3
  9583     0B5B  092D               	comf	(main@negativeFeedValue+1)^(0+384),w
  9584     0B5C  1283               	bcf	3,5	;RP0=0, select bank0
  9585     0B5D  1303               	bcf	3,6	;RP1=0, select bank0
  9586     0B5E  00D5               	movwf	??_main+1
  9587     0B5F  0AD4               	incf	??_main,f
  9588     0B60  1903               	skipnz
  9589     0B61  0AD5               	incf	??_main+1,f
  9590     0B62  0854               	movf	??_main,w
  9591     0B63  1683               	bsf	3,5	;RP0=1, select bank3
  9592     0B64  1703               	bsf	3,6	;RP1=1, select bank3
  9593     0B65  00AE               	movwf	main@displayValue^(0+384)
  9594     0B66  1283               	bcf	3,5	;RP0=0, select bank0
  9595     0B67  1303               	bcf	3,6	;RP1=0, select bank0
  9596     0B68  0855               	movf	??_main+1,w
  9597     0B69  1683               	bsf	3,5	;RP0=1, select bank3
  9598     0B6A  1703               	bsf	3,6	;RP1=1, select bank3
  9599     0B6B  00AF               	movwf	(main@displayValue+1)^(0+384)
  9600     0B6C                     l4549:
  9601                           
  9602                           ;main.c: 432:                 sprintf(uartMessage, "s%d\r\n", negativeFeedValue);
  9603     0B6C  3059               	movlw	low (STR_27| (0+32768))
  9604     0B6D  1283               	bcf	3,5	;RP0=0, select bank0
  9605     0B6E  1303               	bcf	3,6	;RP1=0, select bank0
  9606     0B6F  00AC               	movwf	sprintf@f
  9607     0B70  3099               	movlw	high (STR_27| (0+32768))
  9608     0B71  00AD               	movwf	sprintf@f+1
  9609     0B72  1683               	bsf	3,5	;RP0=1, select bank3
  9610     0B73  1703               	bsf	3,6	;RP1=1, select bank3
  9611     0B74  082D               	movf	(main@negativeFeedValue+1)^(0+384),w
  9612     0B75  1283               	bcf	3,5	;RP0=0, select bank0
  9613     0B76  1303               	bcf	3,6	;RP1=0, select bank0
  9614     0B77  00AF               	movwf	?_sprintf+3
  9615     0B78  1683               	bsf	3,5	;RP0=1, select bank3
  9616     0B79  1703               	bsf	3,6	;RP1=1, select bank3
  9617     0B7A  082C               	movf	main@negativeFeedValue^(0+384),w
  9618     0B7B  1283               	bcf	3,5	;RP0=0, select bank0
  9619     0B7C  1303               	bcf	3,6	;RP1=0, select bank0
  9620     0B7D  00AE               	movwf	?_sprintf+2
  9621     0B7E  30C5               	movlw	(low (main@uartMessage_374| 0))& (0+255)
  9622     0B7F  120A  158A  2005  120A  158A  	fcall	_sprintf
  9623     0B84                     l4551:
  9624                           
  9625                           ;main.c: 433:                 UART_Write_Text(uartMessage);
  9626     0B84  30C5               	movlw	(low (main@uartMessage_374| 0))& (0+255)
  9627     0B85  1283               	bcf	3,5	;RP0=0, select bank0
  9628     0B86  1303               	bcf	3,6	;RP1=0, select bank0
  9629     0B87  00A1               	movwf	UART_Write_Text@text
  9630     0B88  3000               	movlw	0
  9631     0B89  00A2               	movwf	UART_Write_Text@text+1
  9632     0B8A  160A  118A  218C  120A  158A  	fcall	_UART_Write_Text
  9633     0B8F  2C02               	goto	l4569
  9634     0B90                     l242:
  9635     0B90  1C89               	btfss	9,1	;volatile
  9636     0B91  2B93               	goto	u6191
  9637     0B92  2B94               	goto	u6190
  9638     0B93                     u6191:
  9639     0B93  2BE4               	goto	l4563
  9640     0B94                     u6190:
  9641     0B94                     l4553:
  9642                           
  9643                           ;main.c: 437:             Lcd_Set_Cursor(2, 13);
  9644     0B94  300D               	movlw	13
  9645     0B95  00A4               	movwf	Lcd_Set_Cursor@b
  9646     0B96  3002               	movlw	2
  9647     0B97  160A  118A  225F  120A  158A  	fcall	_Lcd_Set_Cursor
  9648     0B9C                     l4555:
  9649                           
  9650                           ;main.c: 438:             Lcd_Write_String(" REW         ");
  9651     0B9C  30EB               	movlw	low (STR_34| (0+32768))
  9652     0B9D  1283               	bcf	3,5	;RP0=0, select bank0
  9653     0B9E  1303               	bcf	3,6	;RP1=0, select bank0
  9654     0B9F  00A5               	movwf	Lcd_Write_String@a
  9655     0BA0  3098               	movlw	high (STR_34| (0+32768))
  9656     0BA1  00A6               	movwf	Lcd_Write_String@a+1
  9657     0BA2  160A  118A  2146  120A  158A  	fcall	_Lcd_Write_String
  9658     0BA7                     l4557:
  9659                           
  9660                           ;main.c: 439:             int negativeDisplayValue = -displayValue;
  9661     0BA7  1683               	bsf	3,5	;RP0=1, select bank3
  9662     0BA8  1703               	bsf	3,6	;RP1=1, select bank3
  9663     0BA9  092E               	comf	main@displayValue^(0+384),w
  9664     0BAA  1283               	bcf	3,5	;RP0=0, select bank0
  9665     0BAB  1303               	bcf	3,6	;RP1=0, select bank0
  9666     0BAC  00D4               	movwf	??_main
  9667     0BAD  1683               	bsf	3,5	;RP0=1, select bank3
  9668     0BAE  1703               	bsf	3,6	;RP1=1, select bank3
  9669     0BAF  092F               	comf	(main@displayValue+1)^(0+384),w
  9670     0BB0  1283               	bcf	3,5	;RP0=0, select bank0
  9671     0BB1  1303               	bcf	3,6	;RP1=0, select bank0
  9672     0BB2  00D5               	movwf	??_main+1
  9673     0BB3  0AD4               	incf	??_main,f
  9674     0BB4  1903               	skipnz
  9675     0BB5  0AD5               	incf	??_main+1,f
  9676     0BB6  0854               	movf	??_main,w
  9677     0BB7  1683               	bsf	3,5	;RP0=1, select bank3
  9678     0BB8  1703               	bsf	3,6	;RP1=1, select bank3
  9679     0BB9  0090               	movwf	main@negativeDisplayValue^(0+384)
  9680     0BBA  1283               	bcf	3,5	;RP0=0, select bank0
  9681     0BBB  1303               	bcf	3,6	;RP1=0, select bank0
  9682     0BBC  0855               	movf	??_main+1,w
  9683     0BBD  1683               	bsf	3,5	;RP0=1, select bank3
  9684     0BBE  1703               	bsf	3,6	;RP1=1, select bank3
  9685     0BBF  0091               	movwf	(main@negativeDisplayValue+1)^(0+384)
  9686     0BC0                     l4559:
  9687                           
  9688                           ;main.c: 440:             char combinedText[20];;main.c: 441:             sprintf(combin
      +                          edText, "s%d\r\n", negativeDisplayValue);
  9689     0BC0  3059               	movlw	low (STR_27| (0+32768))
  9690     0BC1  1283               	bcf	3,5	;RP0=0, select bank0
  9691     0BC2  1303               	bcf	3,6	;RP1=0, select bank0
  9692     0BC3  00AC               	movwf	sprintf@f
  9693     0BC4  3099               	movlw	high (STR_27| (0+32768))
  9694     0BC5  00AD               	movwf	sprintf@f+1
  9695     0BC6  1683               	bsf	3,5	;RP0=1, select bank3
  9696     0BC7  1703               	bsf	3,6	;RP1=1, select bank3
  9697     0BC8  0811               	movf	(main@negativeDisplayValue+1)^(0+384),w
  9698     0BC9  1283               	bcf	3,5	;RP0=0, select bank0
  9699     0BCA  1303               	bcf	3,6	;RP1=0, select bank0
  9700     0BCB  00AF               	movwf	?_sprintf+3
  9701     0BCC  1683               	bsf	3,5	;RP0=1, select bank3
  9702     0BCD  1703               	bsf	3,6	;RP1=1, select bank3
  9703     0BCE  0810               	movf	main@negativeDisplayValue^(0+384),w
  9704     0BCF  1283               	bcf	3,5	;RP0=0, select bank0
  9705     0BD0  1303               	bcf	3,6	;RP1=0, select bank0
  9706     0BD1  00AE               	movwf	?_sprintf+2
  9707     0BD2  30A0               	movlw	(low (main@combinedText_378| 0))& (0+255)
  9708     0BD3  120A  158A  2005  120A  158A  	fcall	_sprintf
  9709     0BD8                     l4561:
  9710                           
  9711                           ;main.c: 442:             UART_Write_Text(combinedText);
  9712     0BD8  30A0               	movlw	(low (main@combinedText_378| 0))& (0+255)
  9713     0BD9  1283               	bcf	3,5	;RP0=0, select bank0
  9714     0BDA  1303               	bcf	3,6	;RP1=0, select bank0
  9715     0BDB  00A1               	movwf	UART_Write_Text@text
  9716     0BDC  3000               	movlw	0
  9717     0BDD  00A2               	movwf	UART_Write_Text@text+1
  9718     0BDE  160A  118A  218C  120A  158A  	fcall	_UART_Write_Text
  9719                           
  9720                           ;main.c: 443:         } else {
  9721     0BE3  2C02               	goto	l4569
  9722     0BE4                     l4563:
  9723                           
  9724                           ;main.c: 445:             Lcd_Set_Cursor(2, 13);
  9725     0BE4  300D               	movlw	13
  9726     0BE5  00A4               	movwf	Lcd_Set_Cursor@b
  9727     0BE6  3002               	movlw	2
  9728     0BE7  160A  118A  225F  120A  158A  	fcall	_Lcd_Set_Cursor
  9729     0BEC                     l4565:
  9730                           
  9731                           ;main.c: 446:             Lcd_Write_String(" STOP       ");
  9732     0BEC  3007               	movlw	low (STR_36| (0+32768))
  9733     0BED  1283               	bcf	3,5	;RP0=0, select bank0
  9734     0BEE  1303               	bcf	3,6	;RP1=0, select bank0
  9735     0BEF  00A5               	movwf	Lcd_Write_String@a
  9736     0BF0  3099               	movlw	high (STR_36| (0+32768))
  9737     0BF1  00A6               	movwf	Lcd_Write_String@a+1
  9738     0BF2  160A  118A  2146  120A  158A  	fcall	_Lcd_Write_String
  9739     0BF7                     l4567:
  9740                           
  9741                           ;main.c: 447:             UART_Write_Text("s0\r\n");
  9742     0BF7  3065               	movlw	low (STR_25| (0+32768))
  9743     0BF8  1283               	bcf	3,5	;RP0=0, select bank0
  9744     0BF9  1303               	bcf	3,6	;RP1=0, select bank0
  9745     0BFA  00A1               	movwf	UART_Write_Text@text
  9746     0BFB  3099               	movlw	high (STR_25| (0+32768))
  9747     0BFC  00A2               	movwf	UART_Write_Text@text+1
  9748     0BFD  160A  118A  218C  120A  158A  	fcall	_UART_Write_Text
  9749     0C02                     l4569:
  9750                           
  9751                           ;main.c: 454:         if((RC1==1) &&( RE0==1 || RE2 )){
  9752     0C02  1283               	bcf	3,5	;RP0=0, select bank0
  9753     0C03  1303               	bcf	3,6	;RP1=0, select bank0
  9754     0C04  1C87               	btfss	7,1	;volatile
  9755     0C05  2C07               	goto	u6201
  9756     0C06  2C08               	goto	u6200
  9757     0C07                     u6201:
  9758     0C07  2C14               	goto	l252
  9759     0C08                     u6200:
  9760     0C08                     l4571:
  9761     0C08  1809               	btfsc	9,0	;volatile
  9762     0C09  2C0B               	goto	u6211
  9763     0C0A  2C0C               	goto	u6210
  9764     0C0B                     u6211:
  9765     0C0B  2C10               	goto	l254
  9766     0C0C                     u6210:
  9767     0C0C                     l4573:
  9768     0C0C  1D09               	btfss	9,2	;volatile
  9769     0C0D  2C0F               	goto	u6221
  9770     0C0E  2C10               	goto	u6220
  9771     0C0F                     u6221:
  9772     0C0F  2C14               	goto	l252
  9773     0C10                     u6220:
  9774     0C10                     l254:
  9775                           
  9776                           ;main.c: 456:             RA4=1;
  9777     0C10  1283               	bcf	3,5	;RP0=0, select bank0
  9778     0C11  1303               	bcf	3,6	;RP1=0, select bank0
  9779     0C12  1605               	bsf	5,4	;volatile
  9780                           
  9781                           ;main.c: 457:         }
  9782     0C13  2CB5               	goto	l260
  9783     0C14                     l252:	
  9784                           ;main.c: 458:         else if(( RC2==1) && (RE1==1 || RC0)){
  9785                           
  9786     0C14  1D07               	btfss	7,2	;volatile
  9787     0C15  2C17               	goto	u6231
  9788     0C16  2C18               	goto	u6230
  9789     0C17                     u6231:
  9790     0C17  2C21               	goto	l256
  9791     0C18                     u6230:
  9792     0C18                     l4575:
  9793     0C18  1889               	btfsc	9,1	;volatile
  9794     0C19  2C1B               	goto	u6241
  9795     0C1A  2C1C               	goto	u6240
  9796     0C1B                     u6241:
  9797     0C1B  2C10               	goto	l254
  9798     0C1C                     u6240:
  9799     0C1C                     l4577:
  9800     0C1C  1C07               	btfss	7,0	;volatile
  9801     0C1D  2C1F               	goto	u6251
  9802     0C1E  2C20               	goto	u6250
  9803     0C1F                     u6251:
  9804     0C1F  2C21               	goto	l256
  9805     0C20                     u6250:
  9806     0C20  2C10               	goto	l254
  9807     0C21                     l256:	
  9808                           ;main.c: 462:         else {
  9809                           
  9810                           
  9811                           ;main.c: 463:             RA4=0;
  9812     0C21  1205               	bcf	5,4	;volatile
  9813     0C22  2CB5               	goto	l260
  9814     0C23                     l183:	
  9815                           ;main.c: 468: else if( RC3==1) {
  9816                           
  9817     0C23  1D87               	btfss	7,3	;volatile
  9818     0C24  2C26               	goto	u6261
  9819     0C25  2C27               	goto	u6260
  9820     0C26                     u6261:
  9821     0C26  2C7D               	goto	l261
  9822     0C27                     u6260:
  9823     0C27                     l4579:
  9824                           
  9825                           ;main.c: 473:     Lcd_Set_Cursor(1,1);
  9826     0C27  01A4               	clrf	Lcd_Set_Cursor@b
  9827     0C28  0AA4               	incf	Lcd_Set_Cursor@b,f
  9828     0C29  3001               	movlw	1
  9829     0C2A  160A  118A  225F  120A  158A  	fcall	_Lcd_Set_Cursor
  9830     0C2F                     l4581:
  9831                           
  9832                           ;main.c: 474:             Lcd_Write_String("   FEED RATE ERROR       ");
  9833     0C2F  3037               	movlw	low (STR_38| (0+32768))
  9834     0C30  1283               	bcf	3,5	;RP0=0, select bank0
  9835     0C31  1303               	bcf	3,6	;RP1=0, select bank0
  9836     0C32  00A5               	movwf	Lcd_Write_String@a
  9837     0C33  3098               	movlw	high (STR_38| (0+32768))
  9838     0C34  00A6               	movwf	Lcd_Write_String@a+1
  9839     0C35  160A  118A  2146  120A  158A  	fcall	_Lcd_Write_String
  9840     0C3A                     l4583:
  9841                           
  9842                           ;main.c: 475:     Lcd_Set_Cursor(2,1);
  9843     0C3A  1283               	bcf	3,5	;RP0=0, select bank0
  9844     0C3B  1303               	bcf	3,6	;RP1=0, select bank0
  9845     0C3C  01A4               	clrf	Lcd_Set_Cursor@b
  9846     0C3D  0AA4               	incf	Lcd_Set_Cursor@b,f
  9847     0C3E  3002               	movlw	2
  9848     0C3F  160A  118A  225F  120A  158A  	fcall	_Lcd_Set_Cursor
  9849                           
  9850                           ;main.c: 476:             Lcd_Write_String("   ILERLEME HATASI        ");
  9851     0C44  301C               	movlw	low (STR_39| (0+32768))
  9852     0C45  1283               	bcf	3,5	;RP0=0, select bank0
  9853     0C46  1303               	bcf	3,6	;RP1=0, select bank0
  9854     0C47  00A5               	movwf	Lcd_Write_String@a
  9855     0C48  3098               	movlw	high (STR_39| (0+32768))
  9856     0C49  00A6               	movwf	Lcd_Write_String@a+1
  9857     0C4A  160A  118A  2146  120A  158A  	fcall	_Lcd_Write_String
  9858                           
  9859                           ;main.c: 477:      UART_Write_Text("s0\r\n");
  9860     0C4F  3065               	movlw	low (STR_25| (0+32768))
  9861     0C50  1283               	bcf	3,5	;RP0=0, select bank0
  9862     0C51  1303               	bcf	3,6	;RP1=0, select bank0
  9863     0C52  00A1               	movwf	UART_Write_Text@text
  9864     0C53  3099               	movlw	high (STR_25| (0+32768))
  9865     0C54  00A2               	movwf	UART_Write_Text@text+1
  9866     0C55  160A  118A  218C  120A  158A  	fcall	_UART_Write_Text
  9867     0C5A                     l4585:
  9868                           
  9869                           ;main.c: 478:       RA4=1;
  9870     0C5A  1283               	bcf	3,5	;RP0=0, select bank0
  9871     0C5B  1303               	bcf	3,6	;RP1=0, select bank0
  9872     0C5C  1605               	bsf	5,4	;volatile
  9873     0C5D                     l4587:
  9874                           
  9875                           ;main.c: 479:       _delay((unsigned long)((1000)*(4000000/4000.0)));
  9876     0C5D  3006               	movlw	6
  9877     0C5E  1283               	bcf	3,5	;RP0=0, select bank0
  9878     0C5F  1303               	bcf	3,6	;RP1=0, select bank0
  9879     0C60  00D6               	movwf	??_main+2
  9880     0C61  3013               	movlw	19
  9881     0C62  00D5               	movwf	??_main+1
  9882     0C63  30AD               	movlw	173
  9883     0C64  00D4               	movwf	??_main
  9884     0C65                     u6347:
  9885     0C65  0BD4               	decfsz	??_main,f
  9886     0C66  2C65               	goto	u6347
  9887     0C67  0BD5               	decfsz	??_main+1,f
  9888     0C68  2C65               	goto	u6347
  9889     0C69  0BD6               	decfsz	??_main+2,f
  9890     0C6A  2C65               	goto	u6347
  9891     0C6B                     l4589:
  9892                           
  9893                           ;main.c: 480:       RA4=0;
  9894     0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  9895     0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  9896     0C6D  1205               	bcf	5,4	;volatile
  9897     0C6E                     l4591:
  9898                           
  9899                           ;main.c: 481:       _delay((unsigned long)((3000)*(4000000/4000.0)));
  9900     0C6E  3010               	movlw	16
  9901     0C6F  1283               	bcf	3,5	;RP0=0, select bank0
  9902     0C70  1303               	bcf	3,6	;RP1=0, select bank0
  9903     0C71  00D6               	movwf	??_main+2
  9904     0C72  3039               	movlw	57
  9905     0C73  00D5               	movwf	??_main+1
  9906     0C74  300D               	movlw	13
  9907     0C75  00D4               	movwf	??_main
  9908     0C76                     u6357:
  9909     0C76  0BD4               	decfsz	??_main,f
  9910     0C77  2C76               	goto	u6357
  9911     0C78  0BD5               	decfsz	??_main+1,f
  9912     0C79  2C76               	goto	u6357
  9913     0C7A  0BD6               	decfsz	??_main+2,f
  9914     0C7B  2C76               	goto	u6357
  9915     0C7C  2C10               	goto	l254
  9916     0C7D                     l261:	
  9917                           ;main.c: 487:      else if (RD0 == 1 ){
  9918                           
  9919     0C7D  1C08               	btfss	8,0	;volatile
  9920     0C7E  2C80               	goto	u6271
  9921     0C7F  2C81               	goto	u6270
  9922     0C80                     u6271:
  9923     0C80  2CB5               	goto	l260
  9924     0C81                     u6270:
  9925     0C81                     l4595:
  9926                           
  9927                           ;main.c: 488:     UART_Write_Text("s0\r\n");
  9928     0C81  3065               	movlw	low (STR_25| (0+32768))
  9929     0C82  00A1               	movwf	UART_Write_Text@text
  9930     0C83  3099               	movlw	high (STR_25| (0+32768))
  9931     0C84  00A2               	movwf	UART_Write_Text@text+1
  9932     0C85  160A  118A  218C  120A  158A  	fcall	_UART_Write_Text
  9933     0C8A                     l4597:
  9934                           
  9935                           ;main.c: 489:     Lcd_Set_Cursor(1,1);
  9936     0C8A  1283               	bcf	3,5	;RP0=0, select bank0
  9937     0C8B  1303               	bcf	3,6	;RP1=0, select bank0
  9938     0C8C  01A4               	clrf	Lcd_Set_Cursor@b
  9939     0C8D  0AA4               	incf	Lcd_Set_Cursor@b,f
  9940     0C8E  3001               	movlw	1
  9941     0C8F  160A  118A  225F  120A  158A  	fcall	_Lcd_Set_Cursor
  9942     0C94                     l4599:
  9943                           
  9944                           ;main.c: 490:             Lcd_Write_String("   ROTATION ERROR      ");
  9945     0C94  3069               	movlw	low (STR_42| (0+32768))
  9946     0C95  1283               	bcf	3,5	;RP0=0, select bank0
  9947     0C96  1303               	bcf	3,6	;RP1=0, select bank0
  9948     0C97  00A5               	movwf	Lcd_Write_String@a
  9949     0C98  3098               	movlw	high (STR_42| (0+32768))
  9950     0C99  00A6               	movwf	Lcd_Write_String@a+1
  9951     0C9A  160A  118A  2146  120A  158A  	fcall	_Lcd_Write_String
  9952                           
  9953                           ;main.c: 491:     Lcd_Set_Cursor(2,1);
  9954     0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  9955     0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  9956     0CA1  01A4               	clrf	Lcd_Set_Cursor@b
  9957     0CA2  0AA4               	incf	Lcd_Set_Cursor@b,f
  9958     0CA3  3002               	movlw	2
  9959     0CA4  160A  118A  225F  120A  158A  	fcall	_Lcd_Set_Cursor
  9960     0CA9                     l4601:
  9961                           
  9962                           ;main.c: 492:             Lcd_Write_String("   DONME HATASI        ");
  9963     0CA9  3051               	movlw	low (STR_43| (0+32768))
  9964     0CAA  1283               	bcf	3,5	;RP0=0, select bank0
  9965     0CAB  1303               	bcf	3,6	;RP1=0, select bank0
  9966     0CAC  00A5               	movwf	Lcd_Write_String@a
  9967     0CAD  3098               	movlw	high (STR_43| (0+32768))
  9968     0CAE  00A6               	movwf	Lcd_Write_String@a+1
  9969     0CAF  160A  118A  2146  120A  158A  	fcall	_Lcd_Write_String
  9970     0CB4  2C5A               	goto	l4585
  9971     0CB5                     l260:
  9972     0CB5  160A  118A  2E27   	goto	l4193
  9973     0CB8                     l182:
  9974     0CB8  120A  118A  280E   	ljmp	start
  9975     0CBB                     __end_of_main:

Data Sizes:
    Strings     342
    Constant    10
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      13
    BANK0            80     78      80
    BANK1            80     80      80
    BANK3            96     32      34
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_35(CODE[6]), STR_33(CODE[6]), STR_29(CODE[6]), STR_27(CODE[6]), 
		 -> STR_23(CODE[10]), STR_21(CODE[6]), STR_18(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> main@combinedText_378(BANK1[20]), main@uartMessage_374(BANK1[8]), main@combinedText(BANK0[20]), main@uartMessage(BANK1[8]), 
		 -> main@rpmString(BANK1[5]), main@adcString1(BANK1[4]), main@lcdText(BANK1[9]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 20
		 -> STR_41(CODE[5]), STR_40(CODE[5]), STR_37(CODE[5]), main@combinedText_378(BANK1[20]), 
		 -> main@uartMessage_374(BANK1[8]), STR_31(CODE[5]), main@combinedText(BANK0[20]), main@uartMessage(BANK1[8]), 
		 -> STR_25(CODE[5]), 

    incrementTime@time	PTR struct Time size(1) Largest target is 6
		 -> currentTime(COMMON[6]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 27
		 -> STR_43(CODE[24]), STR_42(CODE[24]), STR_39(CODE[27]), STR_38(CODE[26]), 
		 -> STR_36(CODE[13]), STR_34(CODE[14]), STR_32(CODE[10]), STR_30(CODE[9]), 
		 -> STR_28(CODE[15]), STR_26(CODE[10]), STR_24(CODE[9]), main@rpmString(BANK1[5]), 
		 -> STR_22(CODE[5]), main@adcString1(BANK1[4]), STR_20(CODE[10]), STR_19(CODE[3]), 
		 -> main@lcdText(BANK1[9]), STR_17(CODE[14]), STR_16(CODE[19]), STR_15(CODE[14]), 
		 -> STR_14(CODE[19]), STR_13(CODE[14]), STR_12(CODE[19]), STR_11(CODE[14]), 
		 -> STR_10(CODE[19]), STR_9(CODE[14]), STR_8(CODE[19]), STR_7(CODE[14]), 
		 -> STR_6(CODE[19]), STR_5(CODE[21]), STR_4(CODE[20]), STR_3(CODE[3]), 
		 -> STR_2(CODE[15]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _timer_isr in COMMON

    _timer_isr->_writeEEPROM

Critical Paths under _main in BANK0

    _main->___flmul
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    ___flmul->___fldiv
    ___awmod->___fltol
    ___awdiv->___fltol
    _UART_Write_Text->_UART_Write
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _timer_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer_isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer_isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               144   144      0   22922
                                             52 BANK0     26    26      0
                                              0 BANK1     80    80      0
                                              0 BANK3     32    32      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                    _UART_Initialize
                    _UART_Write_Text
                            ___awdiv
                            ___awmod
                            ___fldiv
                            ___flmul
                            ___fltol
                             ___wmul
                           ___xxtofl
                         _readEEPROM
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             31    21     10    4065
                                             12 BANK0     23    13     10
                            ___fltol (ARG)
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     856
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     412
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     421
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _readEEPROM                                           4     2      2     326
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     550
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     685
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2721
                                             26 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1425
                                              0 BANK0     26    18      8
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     613
                                             10 BANK0      6     2      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     985
                                             10 BANK0      8     4      4
                            ___fltol (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      7     5      2     971
                                              1 BANK0      7     5      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2    3444
                                              5 BANK0      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     254
                                              1 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1    3605
                                              4 BANK0      6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                              4 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     155
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _timer_isr                                            3     3      0     535
                                              4 COMMON     3     3      0
                      _incrementTime
                        _writeEEPROM
 ---------------------------------------------------------------------------------
 (5) _writeEEPROM                                          4     0      4     348
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (5) _incrementTime                                        3     3      0     187
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _UART_Initialize
   _UART_Write_Text
     _UART_Write
   ___awdiv
     ___fltol (ARG)
     ___wmul (ARG)
   ___awmod
     ___fltol (ARG)
   ___fldiv
   ___flmul
     __Umul8_16
     ___fldiv (ARG)
     ___xxtofl (ARG)
   ___fltol
   ___wmul
   ___xxtofl
   _readEEPROM
   _sprintf
     ___fltol (ARG)
     ___lwdiv (ARG)
     ___lwmod (ARG)
       ___lwdiv (ARG)
     ___wmul (ARG)
     _isdigit (ARG)

 _timer_isr (ROOT)
   _incrementTime
   _writeEEPROM

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      CF       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60     20      22       9       35.4%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      CF      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Sep 20 23:16:34 2023

            ___fldiv@aexp 0039              ___fldiv@bexp 0038                         pc 0002  
            ___fldiv@sign 0031                        _RD 0C60                        _WR 0C61  
            ___awdiv@sign 002F                        fsr 0004       ___wmul@multiplicand 0022  
     __Umul8_16@word_mpld 0026                       l121 1080                       l113 106A  
                     l114 106B                       l115 1071                       l116 1072  
                     l124 07FF                       l220 0488                       l117 1078  
                     l133 12AA                       l118 1079                       l214 0205  
                     l119 107F                       l127 1FFF                       l223 04F6  
                     l136 13BB                       l160 104A                       l400 08BE  
                     l232 0A2B                       l224 0A23                       l145 118B  
                     l233 0A88                       l217 028E                       l402 0894  
                     l242 0B90                       l139 1109                       l260 0CB5  
                     l252 0C14                       l236 0AC4                       l228 0A89  
                     l261 0C7D                       l430 108F                       l254 0C10  
                     l246 0AF7                       l238 0AEF                       l182 0CB8  
                     l183 0C23                       l432 10A7                       l256 0C21  
                     l281 1007                       l409 0926                       l290 11D1  
                     l426 09FB                       l179 1685                       l284 1011  
                     l278 1021                       l702 1217                       l623 1487  
                     l616 149C                       l712 1145                       l801 07CF  
                     l626 149C                       l388 081F                       l583 1424  
                     l840 10D0                       l825 0F6F                       l819 0FFF  
                     l596 1358                       l781 07E3                       l838 10BE  
                     l863 14C1                       l865 1556                       l795 075D  
                     l779 066B                       l883 1035                       l876 1520  
                     l877 152C                       _GIE 005F                       _RB0 0030  
                     _RB1 0031                       _RB2 0032                       _RA4 002C  
                     _RC0 0038                       _RB3 0033                       _RC1 0039  
                     _RB4 0034                       _RC2 003A                       _RD0 0040  
                     _RB5 0035                       _RC3 003B                       _RE0 0048  
                     _RE1 0049                       _RE2 004A                       fsr0 0004  
                     indf 0000              ___awmod@sign 002F              ___flmul@aexp 004C  
            ___flmul@bexp 004D              ___flmul@sign 0047              ___flmul@temp 0052  
            ___flmul@prod 004E               main@lcdText 00B4              ___fltol@exp1 0029  
                    l3001 0EF3                      l3011 0F3F                      l3003 0F1B  
                    l3021 0F54                      l3013 0F40                      l3005 0F24  
                    l3101 1544                      l3031 0F79                      l3023 0F58  
                    l3015 0F49                      l3007 0F32                      l3103 1549  
                    l4001 13BF                      l3041 0FB7                      l3033 0F87  
                    l3025 0F6C                      l3009 0F3B                      l3017 0F4F  
                    l3105 154D                      l4011 13D3                      l4003 13C3  
                    l3051 0FE9                      l3043 0FC2                      l3035 0F8B  
                    l3019 0F53                      l3107 154E                      l4021 13E9  
                    l4013 13D7                      l4005 13C8                      l3053 0FED  
                    l3045 0FD1                      l3037 0FA4                      l3029 0F74  
                    l4101 1563                      l4031 1409                      l4023 13ED  
                    l4015 13D9                      l4007 13CA                      l3055 0FEE  
                    l3047 0FDB                      l3039 0FAA                      l3071 14C9  
                    l3063 14A0                      l4111 156E                      l4103 1564  
                    l4033 1410                      l4025 13F1                      l4017 13DF  
                    l4009 13CE                      l2441 10AB                      l3049 0FDD  
                    l3057 0FF3                      l3081 14E2                      l3065 14A5  
                    l4201 165B                      l4121 1573                      l4113 156F  
                    l4105 1565                      l4027 1402                      l4019 13E2  
                    l4035 1416                      l4051 130C                      l4043 12FE  
                    l2451 10CC                      l2443 10AD                      l3059 0FF7  
                    l3091 150B                      l3083 14E9                      l3075 14D2  
                    l3067 14A9                      l2507 1036                      l4211 1681  
                    l4203 1669                      l4131 159F                      l4123 1575  
                    l4115 1570                      l4107 1566                      l4037 141B  
                    l4029 1408                      l4061 1325                      l4053 1310  
                    l4045 1301                      l2445 10B4                      l3093 1516  
                    l3085 14ED                      l3077 14D5                      l3069 14B9  
                    l2509 103C                      l4301 17DF                      l4221 16AC  
                    l4213 168D                      l4205 1673                      l4141 15A6  
                    l4133 15A2                      l4125 157F                      l4117 1571  
                    l4109 156B                      l4039 1420                      l4071 1344  
                    l4063 1329                      l4055 1315                      l4047 1305  
                    l2447 10B8                      l3095 151A                      l3087 14FB  
                    l3079 14D9                      l4303 17E2                      l4311 17F3  
                    l4231 16C9                      l4223 16B2                      l4215 1691  
                    l4207 1679                      l4151 15B8                      l4143 15A7  
                    l4135 15A3                      l4127 1582                      l4119 1572  
                    l4065 132D                      l4057 131B                      l4073 134A  
                    l4049 130A                      l2801 064D                      l2449 10C7  
                    l3097 1524                      l3089 1504                      l4321 0040  
                    l4313 0023                      l4233 16D3                      l4225 16B7  
                    l4217 169A                      l4209 167D                      l4161 15ED  
                    l4153 15C3                      l4145 15A8                      l4137 15A4  
                    l4129 1590                      l4081 1557                      l4075 134F  
                    l4067 1337                      l4059 131E                      l2811 0661  
                    l2803 064E                      l3099 152E                      l4411 01A7  
                    l4403 0174                      l4331 0067                      l4323 0044  
                    l4315 002C                      l4307 17EB                      l4251 1719  
                    l4235 16DE                      l4243 16FF                      l4227 16BB  
                    l4219 16A3                      l4171 160D                      l4163 15FB  
                    l4155 15CD                      l4147 15A9                      l4139 15A5  
                    l4091 155E                      l4083 155A                      l4077 1354  
                    l4069 133D                      l2901 07C2                      l2805 0653  
                    l2813 0663                      l4501 0A46                      l4421 01FB  
                    l4413 01CB                      l4405 0179                      l4341 008D  
                    l4333 007C                      l4317 0035                      l4309 17F0  
                    l4253 1722                      l4245 1704                      l4237 16F3  
                    l4181 161C                      l4173 1610                      l4165 1600  
                    l4157 15D8                      l4149 15AE                      l4093 155F  
                    l4085 155B                      l3711 1076                      l2911 07D9  
                    l2903 07C6                      l2831 06AC                      l2815 0673  
                    l2823 068C                      l2807 0658                      l2751 1457  
                    l2743 1439                      l4511 0A8D                      l4503 0A51  
                    l4431 028B                      l4423 0202                      l4415 01E0  
                    l4407 017C                      l4351 00B1                      l4335 007F  
                    l4327 0052                      l4319 003B                      l4343 0090  
                    l4271 176C                      l4263 173F                      l4255 1728  
                    l4239 16F6                      l4247 1707                      l4191 1621  
                    l4183 161D                      l4175 1614                      l4167 1604  
                    l4159 15E2                      l4095 1560                      l4087 155C  
                    l3713 107D                      l3705 1064                      l3721 07F1  
                    l2913 07DD                      l2905 07CE                      l2841 06CB  
                    l2833 06B4                      l2825 0691                      l2817 067F  
                    l2809 0660                      l2921 0CBB                      l2761 146C  
                    l2753 145B                      l2745 144C                      l2737 1425  
                    l3801 110A                      l4601 0CA9                      l4521 0ACC  
                    l4513 0A95                      l4505 0A60                      l4441 0365  
                    l4433 0292                      l4425 0209                      l4417 01EA  
                    l4409 0190                      l4361 00D2                      l4353 00B6  
                    l4345 0099                      l4329 005C                      l4281 1786  
                    l4265 1749                      l4257 172D                      l4249 1710  
                    l4193 1627                      l4185 161E                      l4177 161A  
                    l4169 1609                      l4097 1561                      l4089 155D  
                    l3707 1068                      l3723 07FC                      l3715 07E7  
                    l3731 10E9                      l2907 07D3                      l2851 06FD  
                    l2843 06DD                      l2835 06BC                      l2819 0683  
                    l2931 0CCE                      l2923 0CC0                      l2771 148C  
                    l2763 1475                      l2747 144D                      l2739 1430  
                    l3811 1124                      l3803 1112                      l4531 0AFB  
                    l4523 0AD0                      l4515 0AA0                      l4507 0A64  
                    l4451 0485                      l4443 03C2                      l4435 0298  
                    l4427 027E                      l4419 01F5                      l4363 00DD  
                    l4371 00FE                      l4355 00BA                      l4347 00A2  
                    l4339 0088                      l4291 17A7                      l4283 178F  
                    l4267 1754                      l4275 1775                      l4259 1731  
                    l4195 1631                      l4187 161F                      l4179 161B  
                    l4099 1562                      l3709 106F                      l3717 07E8  
                    l3741 10FF                      l3733 10EC                      l3725 10D4  
                    l2909 07D7                      l2861 071E                      l2853 06FE  
                    l2845 06E1                      l2837 06C4                      l2829 069A  
                    l2781 0622                      l2941 0CEA                      l2933 0CD3  
                    l2925 0CC4                      l2773 1491                      l2749 1455  
                    l3813 112E                      l3805 1115                      l3901 08CA  
                    l4541 0B38                      l4533 0AFF                      l4525 0AD8  
                    l4517 0AB8                      l4509 0A7C                      l4461 054C  
                    l4453 048C                      l4445 043E                      l4437 02EC  
                    l4429 0284                      l4381 0121                      l4373 0103  
                    l4365 00F2                      l4349 00AB                      l4285 1798  
                    l4277 177A                      l4269 1769                      l4197 163B  
                    l4189 1620                      l3719 07EE                      l3823 1FF3  
                    l3831 1277                      l3743 1106                      l3735 10F3  
                    l3727 10DA                      l2871 0737                      l2863 0720  
                    l2855 070C                      l2847 06E2                      l2839 06C6  
                    l2791 0636                      l2783 0623                      l2775 0615  
                    l2951 0CFD                      l2943 0CEE                      l2935 0CDB  
                    l2927 0CC8                      l2759 1463                      l3815 1134  
                    l3807 111C                      l3751 1026                      l3911 08E4  
                    l3903 08CE                      l4551 0B84                      l4543 0B40  
                    l4535 0B07                      l4527 0AE3                      l4519 0AC8  
                    l4471 05A5                      l4463 0556                      l4455 04C2  
                    l4447 0478                      l4439 032B                      l4391 013E  
                    l4383 0127                      l4367 00F5                      l4359 00C8  
                    l4375 0106                      l4295 17B5                      l4287 179E  
                    l4279 177D                      l4199 1646                      l3841 129C  
                    l3833 127D                      l3825 1262                      l3737 10F6  
                    l3729 10DB                      l3745 1007                      l2881 075A  
                    l2865 0729                      l2873 073D                      l2849 06EB  
                    l2857 0710                      l2785 0628                      l2793 0638  
                    l2777 061A                      l2961 0D19                      l2953 0D05  
                    l2945 0CF2                      l2937 0CDD                      l2929 0CC9  
                    l2769 147C                      l3817 113B                      l3809 1120  
                    l3761 1081                      l3753 102C                      l3905 08D2  
                    l3913 08E8                      l4561 0BD8                      l4553 0B94  
                    l4545 0B4D                      l4537 0B12                      l4529 0AF3  
                    l4481 060B                      l4473 05AF                      l4465 0561  
                    l4457 04C8                      l4449 047E                      l4393 0148  
                    l4385 012C                      l4377 010F                      l4297 17BF  
                    l4289 17A3                      l3851 137B                      l3843 12A2  
                    l3827 1267                      l3835 1286                      l3739 10FC  
                    l3747 100D                      l2891 0779                      l2875 0741  
                    l2867 072D                      l2859 0716                      l2795 0640  
                    l2787 062D                      l2779 061E                      l2971 0D58  
                    l2955 0D07                      l2947 0CF3                      l2939 0CE5  
                    l3819 1141                      l3771 10A3                      l3763 1085  
                    l3755 1032                      l3931 0920                      l3923 090A  
                    l3907 08D6                      l4571 0C08                      l4555 0B9C  
                    l4563 0BE4                      l4547 0B53                      l4539 0B2B  
                    l4491 0A17                      l4483 09FC                      l4475 05BA  
                    l4467 0590                      l4459 04CC                      l4395 0153  
                    l4387 0130                      l4379 0118                      l4299 17CA  
                    l3853 1381                      l3845 1359                      l3837 128C  
                    l3829 1274                      l3861 116F                      l2893 0792  
                    l2885 0762                      l2877 0742                      l2869 072E  
                    l2797 0645                      l2789 0635                      l2981 0DDF  
                    l2973 0D74                      l2965 0D22                      l2957 0D0F  
                    l2949 0CF8                      l3781 11DF                      l3765 1089  
                    l3757 1034                      l3749 1025                      l3941 094B  
                    l3933 0931                      l3925 090E                      l3909 08DC  
                    l4653 0836                      l4581 0C2F                      l4573 0C0C  
                    l4565 0BEC                      l4557 0BA7                      l4549 0B6C  
                    l4493 0A27                      l4485 0A00                      l4477 05F6  
                    l4469 059A                      l4397 0168                      l3847 135F  
                    l3839 1299                      l3855 1146                      l3863 1012  
                    l2887 0767                      l2895 0798                      l2879 0746  
                    l2799 0649                      l2991 0E4C                      l2983 0DED  
                    l2975 0D9E                      l2967 0D30                      l2959 0D14  
                    l3791 1205                      l3783 11E6                      l3775 11D2  
                    l3767 1096                      l3951 0963                      l3943 0950  
                    l3935 093D                      l3927 0914                      l3919 08EA  
                    l4655 08B0                      l3871 0811                      l4591 0C6E  
                    l4583 0C3A                      l4575 0C18                      l4567 0BF7  
                    l4559 0BC0                      l4495 0A2F                      l4487 0A04  
                    l4479 0600                      l4399 016B                      l3849 136A  
                    l3857 114B                      l3865 101E                      l2897 07A5  
                    l2889 0775                      l2993 0E69                      l2985 0E0A  
                    l2977 0DBA                      l2969 0D3D                      l3793 1206  
                    l3785 11EA                      l3777 11D6                      l3769 109D  
                    l3961 098B                      l3945 0954                      l3953 0970  
                    l3937 0941                      l3929 091A                      l3881 0826  
                    l3873 0816                      l4585 0C5A                      l4577 0C1C  
                    l4497 0A33                      l4569 0C02                      l4489 0A0C  
                    l3859 1167                      l2899 07B3                      l2995 0E94  
                    l2987 0E18                      l2979 0DD6                      l3795 120D  
                    l3787 11EE                      l3779 11DC                      l3971 09CF  
                    l3963 0991                      l3955 0976                      l3947 095A  
                    l3939 0945                      l3891 087B                      l3883 083B  
                    l3875 081B                      l3867 0808                      l4595 0C81  
                    l4587 0C5D                      l4579 0C27                      l4499 0A3B  
                    l2997 0EA2                      l2989 0E35                      l3789 11FF  
                    l3797 1213                      l3973 09D4                      l3965 0996  
                    l3957 097B                      l3949 095F                      l3893 0881  
                    l3885 084D                      l3877 0820                      l3869 080B  
                    l4597 0C8A                      l4589 0C6B                      l3991 118C  
                    l2999 0ECD                      l3975 09D8                      l3959 097F  
                    l3967 099A                      l3887 0851                      l4599 0C94  
                    l3993 1191                      l3969 099D                      l3889 0866  
                    l3897 0896                      l3977 09E1                      l3995 11AD  
                    l3899 08C2                      l3979 09F7                      l3997 11B5  
                    l3999 13BC                      STR_1 18BD                      STR_2 18DC  
                    STR_3 196F                      STR_4 1896                      STR_5 1881  
                    STR_6 18AA                      STR_7 18F9                      STR_8 18AA  
                    STR_9 18F9                      _T0IF 005A                      u4000 14C9  
                    u4001 14C8                      u3300 148C                      u3220 1430  
                    u4100 1549                      u4020 14E8                      u3301 148B  
                    u3221 142F                      u4101 1548                      u4021 14E7  
                    u3310 1491                      u3230 1447                      u4110 154D  
                    u3311 1490                      u4111 154C                      u4015 14DA  
                    u3400 06CB                      u3320 0622                      u3240 145B  
                    u4040 150A                      u3401 06CA                      u3321 0621  
                    u3241 145A                      u4041 1509                      u3330 0628  
                    u3250 1462                      u5010 11FF                      u3331 0627  
                    u3251 1461                      u3235 1442                      u4035 14FC  
                    u5011 11FE                      u5100 1267                      u3340 062D  
                    u2700 10CC                      u4060 151A                      u5101 1266  
                    u3341 062C                      u2701 10CB                      u4061 1519  
                    u5005 11EF                      u3510 0741                      u3430 06E1  
                    u3350 064D                      u3270 1474                      u4070 1520  
                    u5030 1213                      u3511 0740                      u3431 06E0  
                    u3415 06CD                      u3351 064C                      u3271 1473  
                    u4071 151F                      u4055 150F                      u5031 1212  
                    u5015 11FB                      u5120 128C                      u3600 07D7  
                    u3520 0746                      u3360 0653                      u3280 147B  
                    u4080 1524                      u5040 1112                      u5200 08C2  
                    u6000 09FC                      u5121 128B                      u3601 07D6  
                    u3521 0745                      u3505 0730                      u3425 06D6  
                    u3361 0652                      u3281 147A                      u3265 1464  
                    u4081 1523                      u5025 1207                      u5041 1111  
                    u5201 08C1                      u6001 0612                      u3530 075A  
                    u3450 06FD                      u3370 0658                      u3610 0CC8  
                    u4090 1539                      u5210 08D2                      u6010 0A00  
                    u5115 126D                      u3531 0759                      u3451 06FC  
                    u3371 0657                      u3611 0CC7                      u5211 08D1  
                    u6011 09FF                      u5140 1155                      u3540 0761  
                    u3460 0716                      u3380 0673                      u3620 0CCE  
                    u5060 1124                      u5300 096F                      u5220 0909  
                    u6100 0AC8                      u6020 0A04                      u3541 0760  
                    u3461 0715                      u3445 06E4                      u3381 0672  
                    u3701 0D82                      u3621 0CCD                      u5061 1123  
                    u5301 096E                      u5221 0908                      u6101 0AC7  
                    u6021 0A03                      u5150 1179                      u3550 0767  
                    u3470 071E                      u3390 0691                      u3702 0D89  
                    u3630 0CD3                      u5070 112E                      u5310 0976  
                    u5230 0914                      u6110 0ACC                      u6030 0A27  
                    u5135 1292                      u3551 0766                      u3471 071D  
                    u3455 06F9                      u3391 0690                      u3711 0DAC  
                    u3703 0D90                      u3631 0CD2                      u3295 147E  
                    u4095 1534                      u5071 112D                      u5055 1116  
                    u5311 0975                      u5231 0913                      u6111 0ACB  
                    u6031 0A26                      u5160 118B                      u5400 13CE  
                    u3560 0779                      u2680 10B8                      u3800 0ED9  
                    u3712 0DB3                      u3640 0CF2                      u5320 098B  
                    u5240 091A                      u6200 0C08                      u6120 0AD0  
                    u6040 0A2B                      u5161 118A                      u5401 13CD  
                    u3561 0778                      u2681 10B7                      u3721 0DC8  
                    u3713 0DBA                      u3641 0CF1                      u5321 098A  
                    u5241 0919                      u5225 0905                      u6201 0C07  
                    u6121 0ACF                      u6041 0A2A                      u5410 13DF  
                    u3570 0788                      u3490 072D                      u3722 0DCF  
                    u3650 0CF8                      u5090 1141                      u5330 0991  
                    u5250 0920                      u5170 0811                      u6210 0C0C  
                    u6130 0AF3                      u6050 0A2F                      u5411 13DE  
                    u3491 072C                      u3811 0EE5                      u3723 0DD6  
                    u3651 0CF7                      u5091 1140                      u5075 112A  
                    u5331 0990                      u5251 091F                      u5171 0810  
                    u6211 0C0B                      u6131 0AF2                      u6051 0A2E  
                    u5500 1310                      u3580 07A5                      u3900 0F6C  
                    u3820 0F01                      u3812 0EEC                      u3660 0CFD  
                    u5340 09E1                      u5260 0931                      u5180 084D  
                    u6220 0C10                      u6140 0AF7                      u6060 0A33  
                    u5501 130F                      u3581 07A4                      u3485 0722  
                    u3901 0F6B                      u3813 0EF3                      u3805 0ED4  
                    u3741 0DFC                      u3661 0CFC                      u5085 1135  
                    u5341 09E0                      u5261 0930                      u5181 084C  
                    u6221 0C0F                      u6141 0AF6                      u6061 0A32  
                    u5430 13F1                      u5510 131B                      u3590 07C2  
                    u3910 0F73                      u3742 0E03                      u3670 0D14  
                    u5350 09F7                      u5270 0945                      u5190 0893  
                    u6230 0C18                      u6150 0AFB                      u6070 0A51  
                    u5431 13F0                      u5511 131A                      u3591 07C1  
                    u3575 0783                      u2695 10BF                      u3911 0F72  
                    u3831 0F0D                      u3751 0E27                      u3743 0E0A  
                    u3735 0DD8                      u3671 0D13                      u5351 09F6  
                    u5271 0944                      u5191 0892                      u6231 0C17  
                    u6151 0AFA                      u6071 0A50                      u5360 119B  
                    u3920 0F79                      u3832 0F14                      u3752 0E2E  
                    u3680 0D19                      u5280 094B                      u6240 0C1C  
                    u6160 0AFF                      u6080 0A60                      u5600 1679  
                    u5425 13E3                      u3585 07A1                      u3921 0F78  
                    u3833 0F1B                      u3825 0EFC                      u3753 0E35  
                    u3681 0D18                      u5281 094A                      u5265 092D  
                    u6241 0C1B                      u6161 0AFE                      u6081 0A5F  
                    u5601 1676                      u5370 11BF                      u5450 1402  
                    u5530 132D                      u3930 0F8B                      u5290 095A  
                    u6250 0C20                      u6170 0B38                      u6090 0A8D  
                    u5610 167D                      u5451 1401                      u5531 132C  
                    u3595 07BE                      u3931 0F8A                      u3771 0E5B  
                    u3691 0D66                      u5291 0959                      u6251 0C1F  
                    u6171 0B37                      u6091 0A8C                      u5611 167C  
                    u6307 1663                      u4900 100D                      u5380 11D1  
                    u5540 1337                      u3940 0F9A                      u3860 0F3F  
                    u3772 0E62                      u3692 0D6D                      u6260 0C27  
                    u6180 0B4D                      u5700 1710                      u5620 1681  
                    u4901 100C                      u5381 11D0                      u5445 13F2  
                    u5541 1336                      u5525 131F                      u3861 0F3E  
                    u3845 0F1D                      u3781 0E86                      u3773 0E69  
                    u3765 0E37                      u3693 0D74                      u6261 0C26  
                    u6181 0B4C                      u6317 01FF                      u5701 170F  
                    u5621 1680                      u5470 1416                      u5390 13C3  
                    u3950 0FB7                      u3782 0E8D                      u4910 102C  
                    u6270 0C81                      u6190 0B94                      u5710 1719  
                    u5630 168D                      u6407 1387                      u5471 1415  
                    u5455 13FE                      u5391 13C2                      u3951 0FB6  
                    u3855 0F34                      u3791 0EB1                      u3783 0E94  
                    u4911 102B                      u6271 0C80                      u6191 0B93  
                    u6175 0B34                      u6327 0288                      u5711 1718  
                    u5631 168A                      u5480 141B                      u5560 134A  
                    u3960 0FD1                      u3880 0F53                      u3792 0EB8  
                    u4920 1032                      u5800 0023                      u5720 1722  
                    u5640 1691                      u6417 07F7                      u5481 141A  
                    u5465 140A                      u5561 1349                      u5545 1333  
                    u3961 0FD0                      u3945 0F95                      u3881 0F52  
                    u3793 0EBF                      u4921 1031                      u6185 0B49  
                    u6337 0482                      u5801 17FD                      u5721 1721  
                    u5641 1690                      u4850 1068                      u5570 134F  
                    u5490 1305                      u3970 0FED                      u3890 0F58  
                    u4930 1089                      u5810 002C                      u5730 1728  
                    u5650 169A                      u4851 1067                      u5571 134E  
                    u5555 133E                      u5491 1304                      u3971 0FEC  
                    u3955 0FB3                      u3891 0F57                      u3875 0F42  
                    u4931 1088                      u6347 0C65                      u5811 002B  
                    u5731 1727                      u5651 1699                      u4860 106F  
                    u3980 14A5                      u5900 010F                      u5820 0035  
                    u5740 173E                      u5660 16A3                      u5580 1631  
                    u4861 106E                      u3965 0FCD                      u3981 14A4  
                    u6357 0C76                      u5901 010E                      u5821 0034  
                    u5741 173D                      u5661 16A2                      u5581 162E  
                    u4870 1076                      u3990 14A9                      u5910 0118  
                    u5830 003B                      u5750 1786                      u5670 16AC  
                    u5590 1673                      u4871 1075                      u6367 10F0  
                    u3991 14A8                      u5911 0117                      u5831 003A  
                    u5751 1785                      u5671 16AB                      u5591 1670  
                    u6287 157B                      u4880 107D                      u4960 10A3  
                    u5920 0121                      u5840 0051                      u5760 178F  
                    u5680 16B2                      u4881 107C                      u6377 1103  
                    u4961 10A2                      u4945 1090                      u5921 0120  
                    u5841 0050                      u5761 178E                      u5745 173A  
                    u5681 16B1                      u6297 15F5                      u4970 11DC  
                    u5930 0127                      u5850 0099                      u5770 1798  
                    u5690 16C8                      u6387 1365                      u4971 11DB  
                    u4955 1097                      u5931 0126                      u5851 0098  
                    u5771 1797                      u5691 16C7                      u5940 013D  
                    u5860 00A2                      u5780 179E                      u6397 1376  
                    u5941 013C                      u5861 00A1                      u5845 004D  
                    u5781 179D                      u4990 11EE                      u5950 0209  
                    u5870 00AB                      u5790 17B4                      u4895 10DE  
                    u4991 11ED                      u5951 0208                      u5871 00AA  
                    u5791 17B3                      u5695 16C4                      u5960 0292  
                    u5880 00B1                      u4985 11E0                      u5961 0291  
                    u5945 0139                      u5881 00B0                      u5970 048C  
                    u5890 00C7                      u5971 048B                      u5891 00C6  
                    u5795 17B0                      u5980 04C8                      u5981 04C7  
                    u5990 04CC                      u5991 04CB                      u5895 00C3  
                    _TMR0 0001                      _TRMT 04C1                      _WREN 0C62  
       ?_Lcd_Write_String 0025                      _main 1557                      btemp 007E  
                    start 000E        ??_Lcd_Write_String 0027           ___fldiv@new_exp 0032  
         __end_of_Lcd_Cmd 0800               _writeEEPROM 104B   __end_of_UART_Write_Text 11D2  
        ?_UART_Initialize 0070             ___fltol@sign1 0028        writeEEPROM@address 0070  
                   ?_main 0070           __end_of___fldiv 07E4           __end_of___awdiv 1425  
                   _EEADR 010D                     STR_10 18AA                     STR_11 18F9  
                   STR_12 18AA                     STR_20 191F                     STR_13 18F9  
                   STR_21 195F                     STR_14 18AA                     STR_22 196A  
                   STR_30 1950                     STR_31 1965                     STR_15 18F9  
                   STR_23 193D                     STR_40 1965                     STR_16 18AA  
                   STR_24 1947                     STR_32 1933                     STR_41 1965  
                   STR_33 1959                     STR_17 18F9                     STR_25 1965  
                   STR_26 1929                     STR_18 1914                     STR_34 18EB  
                   STR_42 1869                     STR_35 1959                     STR_19 18D9  
                   STR_27 1959                     STR_43 1851                     STR_36 1907  
                   STR_28 18CD           __end_of___awmod 1359                     STR_37 1965  
                   STR_29 1959                     STR_38 1837                     STR_39 181C  
         __end_of___flmul 1000           __end_of___fltol 149D           ___awdiv@divisor 002A  
         __end_of___lwdiv 1218                     i1l154 105C                     i1l165 125E  
                   i1l157 1060                     i1l173 12F5           __end_of___lwmod 1146  
         ___awdiv@counter 002E                     _RCSTA 0018                     _SPBRG 0099  
                   _TRISB 0086                     _TRISD 0088                     _TXREG 0019  
                   _TXSTA 0098               ?_UART_Write 0070           __end_of_dpowers 181C  
         __end_of_isdigit 1036                     main@i 019A             main@adcValue1 0194  
           main@adcValue2 00E2             main@adcValue3 00CD                     pclath 000A  
                   status 0003                     wtemp0 007E           __end_of_sprintf 09FC  
        __end_of_Lcd_Init 13BC          __end_of_Lcd_Port 1081           __initialization 0011  
            __end_of_main 0CBB                    ??_main 0054             main@ilkAcilis 0192  
                  _ADRESH 001E                    _ADRESL 009E                    _EEDATA 010C  
                  _EECON2 018D          ___awdiv@dividend 002C                    i1l3111 12AB  
                  i1l3121 12C5                    i1l3113 12AF                    i1l3131 12EF  
                  i1l3123 12D1                    i1l3115 12B0                    i1l2501 1059  
                  i1l3125 12DE                    i1l3117 12BA                    i1l2503 105A  
                  i1l3127 12E6                    i1l3119 12C3                    i1l2513 1219  
                  i1l2505 105B                    i1l3129 12ED                    i1l2515 1232  
                  i1l2517 1251                    i1l2495 104B                    i1l2497 1051  
                  i1l2499 1054                    u412_20 12AF                    u412_21 12AE  
                  u413_20 12C3                    u413_21 12C2                    u414_20 12ED  
                  u414_21 12EC                    u280_20 1251                    u280_21 1250  
                  u278_20 1060                    u278_21 105F                    u279_20 1232  
                  u279_21 1231                 ??_Lcd_Cmd 0021                    _TRISA0 0428  
                  _TRISA1 0429                    _TRISA2 042A                    _TRISA3 042B  
                  _TRISA4 042C                    _TRISC0 0438                    _TRISC1 0439  
                  _TRISA5 042D                    _TRISC2 043A                    _TRISD0 0440  
                  _TRISC3 043B                    _TRISE0 0448                    _TRISC4 043C  
                  _TRISE1 0449                    _TRISC5 043D                    _TRISE2 044A  
                  _TRISC6 043E                    _TRISC7 043F          __end_of___xxtofl 1557  
                  ___wmul 1081                 ??___fldiv 0028                 ??___awdiv 002E  
               ??___awmod 002E                 ??___flmul 0042          ?_UART_Write_Text 0021  
               ??___fltol 0024             main@oranValue 00D1                 ??___lwdiv 0024  
               ??___lwmod 002B          ___awdiv@quotient 0030           ___awmod@divisor 002A  
         ___awmod@counter 002E             _incrementTime 1218             main@rpmString 00DD  
               ??_isdigit 0020                    saved_w 007E            main@adcString1 00EC  
               ??_sprintf 0036           Lcd_Set_Cursor@a 0026           Lcd_Set_Cursor@b 0024  
         Lcd_Set_Cursor@y 0028           Lcd_Set_Cursor@z 0027              ___xxtofl@arg 002A  
            ___xxtofl@exp 0029              ___xxtofl@val 0020   __end_of__initialization 001F  
       __end_of_Lcd_Clear 2000                ___fltol@f1 0020           writeEEPROM@data 0072  
          __pcstackCOMMON 0070            ?_incrementTime 0070            _Lcd_Set_Cursor 125F  
       incrementTime@time 0072            _OPTION_REGbits 0081        main@gostermeliklcd 00D5  
               ?_Lcd_Init 0070                 ?_Lcd_Port 0070              sprintf@width 003F  
        main@combinedText 005A                __pbssBANK0 006E                __pbssBANK3 01B0  
       __end_of__Umul8_16 10D1                __pmaintext 1557              ?_writeEEPROM 0070  
                 ?___wmul 0020                __pintentry 0004    __end_of_Lcd_Set_Cursor 12AB  
        main@displayValue 01AE                 ?___xxtofl 0020              ??_UART_Write 0020  
              ??_Lcd_Init 0024                ??_Lcd_Port 0020                __stringtab 1800  
          _Lcd_Write_Char 10D1                   _Lcd_Cmd 07E4                _readEEPROM 1036  
                 ___fldiv 0615                   ___awdiv 13BC           ??_incrementTime 0070  
                 ___awmod 12FE                   ___flmul 0CBB                   ___fltol 1425  
      __end_of_UART_Write 1012                   ___lwdiv 11D2                   ___lwmod 110A  
         ?_Lcd_Set_Cursor 0024                   __ptext1 0805                   __ptext2 1022  
                 __ptext3 1081                   __ptext4 110A                   __ptext5 11D2  
                 __ptext6 1036                   __ptext7 149D                   __ptext8 1425  
                 __ptext9 0CBB                   _dpowers 1812                   _isdigit 1022  
              ??___xxtofl 0024          ___awmod@dividend 002C     main@negativeFeedValue 01AC  
                 _sprintf 0805    __end_of_Lcd_Write_Char 110A      end_of_initialization 001F  
       __end_of_timer_isr 12FE                   psplit$0 B0028                   psplit$1 280029  
                 psplit$2 29002A                 Lcd_Port@a 0020              __pstringtext 1800  
          UART_Write@data 0020             ___xxtofl@sign 0028               ___fldiv@grs 0034  
             ___fldiv@rem 002D      pnum$maintext_split_1 0028      pnum$maintext_split_2 0029  
    pnum$maintext_split_3 002A         readEEPROM@address 0020           ?_Lcd_Write_Char 0070  
       Lcd_Write_String@a 0025         Lcd_Write_String@i 002A               ___flmul@grs 0048  
              main@dakika 00E6                main@binler 01A6                main@birler 00EA  
             ?_readEEPROM 0020                main@yuzler 0198                 _Lcd_Clear 1FF3  
          __end_of___wmul 10A8          _Lcd_Write_String 1146       start_initialization 0011  
       ??_UART_Initialize 0020                ?_Lcd_Clear 0070                  ??___wmul 0024  
               __Umul8_16 10A8           Lcd_Write_Char@a 0024           Lcd_Write_Char@y 0023  
               ___fldiv@a 0020                 ___fldiv@b 0024                 ___flmul@a 003E  
               ___flmul@b 003A               __pbssCOMMON 0077                 ___latbits 0002  
           __pcstackBANK0 0020             __pcstackBANK1 00A0             __pcstackBANK3 0190  
                ?_Lcd_Cmd 0070               sprintf@flag 003E               sprintf@prec 003A  
               _main$1038 00D9          ___lwdiv@dividend 0022  main@negativeDisplayValue 0190  
        ??_Lcd_Set_Cursor 0025                  ?___fldiv 0020                  ?___awdiv 002A  
                ?___awmod 002A                  ?___flmul 003A                  ?___fltol 0020  
              ?__Umul8_16 0020                  ?___lwdiv 0020                  ?___lwmod 0027  
                ?_isdigit 0070                 _epromayaz 006E          ___lwdiv@quotient 0025  
                ?_sprintf 002C         ??_UART_Write_Text 0023         interrupt_function 0004  
          ___wmul@product 0024                  Lcd_Cmd@a 0023               ??_Lcd_Clear 0024  
               _timer_isr 12AB     __end_of_incrementTime 125F                _ADCON0bits 001F  
             __stringbase 1812                _ADCON1bits 009F                 main@i_323 019C  
               main@i_332 01A2                 main@i_326 019E                 main@i_335 01A4  
               main@i_329 01A0         ___wmul@multiplier 0020          ??_Lcd_Write_Char 0021  
               main@onlar 00E8                  _Lcd_Init 1359                  _Lcd_Port 1061  
         main@integerPart 01A8  __end_of_Lcd_Write_String 118C              ??_readEEPROM 0022  
             _kesmeSayaci 01B0               ??__Umul8_16 0022                ?_timer_isr 0070  
            pnum$maintext 000B        __end_of__stringtab 1812               _isdigit$853 0020  
         _UART_Initialize 1012               _currentTime 0077                sprintf@val 003C  
                ___xxtofl 149D        __end_of_readEEPROM 104B           ___lwdiv@divisor 0020  
         ___lwdiv@counter 0024                  __ptext10 10A8                  __ptext11 0615  
                __ptext20 1359                  __ptext12 12FE                  __ptext21 1FF3  
                __ptext13 13BC                  __ptext22 07E4                  __ptext14 118C  
                __ptext23 1061                  __ptext15 1004                  __ptext24 12AB  
                __ptext16 1012                  __ptext25 104B                  __ptext17 1146  
                __ptext26 1218                  __ptext18 10D1                  __ptext19 125F  
     UART_Write_Text@text 0021             ??_writeEEPROM 0074           main@uartMessage 00BD  
                main@saat 00E4                _INTCONbits 000B                  isdigit@c 0021  
      Lcd_Write_Char@temp 0022                  intlevel1 0000                 sprintf@ap 003B  
               sprintf@sp 0042          ___lwmod@dividend 0029                 stringcode 180A  
             ??_timer_isr 0074   __end_of_UART_Initialize 1022       main@uartMessage_374 00C5  
      Lcd_Set_Cursor@temp 0029      main@combinedText_378 00A0       __end_of_writeEEPROM 1061  
  __Umul8_16@multiplicand 0020           _UART_Write_Text 118C                  sprintf@c 0041  
                sprintf@f 002C           ___lwmod@divisor 0027           ___lwmod@counter 002B  
                stringtab 1800                _UART_Write 1004          UART_Write_Text@i 0026  
    __Umul8_16@multiplier 0028         __Umul8_16@product 0024  
