

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Sep 28 11:04:00 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     8                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    42                           	psect	maintext_split_1,global,class=CODE,split=1,delta=2
    43                           	psect	maintext_split_2,global,class=CODE,split=1,delta=2
    44                           	dabs	1,0x7E,2
    45     0000                     
    46                           ; Generated 22/03/2023 GMT
    47                           ; 
    48                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution. Publication is not required when
    62                           ;        this file is used in an embedded application.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F877A Definitions
    78                           ; 
    79                           ; SFR Addresses
    80     0000                     	;# 
    81     0001                     	;# 
    82     0002                     	;# 
    83     0003                     	;# 
    84     0004                     	;# 
    85     0005                     	;# 
    86     0006                     	;# 
    87     0007                     	;# 
    88     0008                     	;# 
    89     0009                     	;# 
    90     000A                     	;# 
    91     000B                     	;# 
    92     000C                     	;# 
    93     000D                     	;# 
    94     000E                     	;# 
    95     000E                     	;# 
    96     000F                     	;# 
    97     0010                     	;# 
    98     0011                     	;# 
    99     0012                     	;# 
   100     0013                     	;# 
   101     0014                     	;# 
   102     0015                     	;# 
   103     0015                     	;# 
   104     0016                     	;# 
   105     0017                     	;# 
   106     0018                     	;# 
   107     0019                     	;# 
   108     001A                     	;# 
   109     001B                     	;# 
   110     001B                     	;# 
   111     001C                     	;# 
   112     001D                     	;# 
   113     001E                     	;# 
   114     001F                     	;# 
   115     0081                     	;# 
   116     0085                     	;# 
   117     0086                     	;# 
   118     0087                     	;# 
   119     0088                     	;# 
   120     0089                     	;# 
   121     008C                     	;# 
   122     008D                     	;# 
   123     008E                     	;# 
   124     0091                     	;# 
   125     0092                     	;# 
   126     0093                     	;# 
   127     0094                     	;# 
   128     0098                     	;# 
   129     0099                     	;# 
   130     009C                     	;# 
   131     009D                     	;# 
   132     009E                     	;# 
   133     009F                     	;# 
   134     010C                     	;# 
   135     010D                     	;# 
   136     010E                     	;# 
   137     010F                     	;# 
   138     018C                     	;# 
   139     018D                     	;# 
   140     0000                     	;# 
   141     0001                     	;# 
   142     0002                     	;# 
   143     0003                     	;# 
   144     0004                     	;# 
   145     0005                     	;# 
   146     0006                     	;# 
   147     0007                     	;# 
   148     0008                     	;# 
   149     0009                     	;# 
   150     000A                     	;# 
   151     000B                     	;# 
   152     000C                     	;# 
   153     000D                     	;# 
   154     000E                     	;# 
   155     000E                     	;# 
   156     000F                     	;# 
   157     0010                     	;# 
   158     0011                     	;# 
   159     0012                     	;# 
   160     0013                     	;# 
   161     0014                     	;# 
   162     0015                     	;# 
   163     0015                     	;# 
   164     0016                     	;# 
   165     0017                     	;# 
   166     0018                     	;# 
   167     0019                     	;# 
   168     001A                     	;# 
   169     001B                     	;# 
   170     001B                     	;# 
   171     001C                     	;# 
   172     001D                     	;# 
   173     001E                     	;# 
   174     001F                     	;# 
   175     0081                     	;# 
   176     0085                     	;# 
   177     0086                     	;# 
   178     0087                     	;# 
   179     0088                     	;# 
   180     0089                     	;# 
   181     008C                     	;# 
   182     008D                     	;# 
   183     008E                     	;# 
   184     0091                     	;# 
   185     0092                     	;# 
   186     0093                     	;# 
   187     0094                     	;# 
   188     0098                     	;# 
   189     0099                     	;# 
   190     009C                     	;# 
   191     009D                     	;# 
   192     009E                     	;# 
   193     009F                     	;# 
   194     010C                     	;# 
   195     010D                     	;# 
   196     010E                     	;# 
   197     010F                     	;# 
   198     018C                     	;# 
   199     018D                     	;# 
   200     0000                     	;# 
   201     0001                     	;# 
   202     0002                     	;# 
   203     0003                     	;# 
   204     0004                     	;# 
   205     0005                     	;# 
   206     0006                     	;# 
   207     0007                     	;# 
   208     0008                     	;# 
   209     0009                     	;# 
   210     000A                     	;# 
   211     000B                     	;# 
   212     000C                     	;# 
   213     000D                     	;# 
   214     000E                     	;# 
   215     000E                     	;# 
   216     000F                     	;# 
   217     0010                     	;# 
   218     0011                     	;# 
   219     0012                     	;# 
   220     0013                     	;# 
   221     0014                     	;# 
   222     0015                     	;# 
   223     0015                     	;# 
   224     0016                     	;# 
   225     0017                     	;# 
   226     0018                     	;# 
   227     0019                     	;# 
   228     001A                     	;# 
   229     001B                     	;# 
   230     001B                     	;# 
   231     001C                     	;# 
   232     001D                     	;# 
   233     001E                     	;# 
   234     001F                     	;# 
   235     0081                     	;# 
   236     0085                     	;# 
   237     0086                     	;# 
   238     0087                     	;# 
   239     0088                     	;# 
   240     0089                     	;# 
   241     008C                     	;# 
   242     008D                     	;# 
   243     008E                     	;# 
   244     0091                     	;# 
   245     0092                     	;# 
   246     0093                     	;# 
   247     0094                     	;# 
   248     0098                     	;# 
   249     0099                     	;# 
   250     009C                     	;# 
   251     009D                     	;# 
   252     009E                     	;# 
   253     009F                     	;# 
   254     010C                     	;# 
   255     010D                     	;# 
   256     010E                     	;# 
   257     010F                     	;# 
   258     018C                     	;# 
   259     018D                     	;# 
   260                           
   261                           	psect	stringtext
   262     1000                     __pstringtext:
   263     1000                     stringtab:
   264     1000                     __stringtab:
   265                           
   266                           ;	String table - string pointers are 2 bytes each
   267     1000  1BFF               	btfsc	btemp+1,7
   268     1001  280A               	ljmp	stringcode
   269     1002  1383               	bcf	3,7
   270     1003  187F               	btfsc	btemp+1,0
   271     1004  1783               	bsf	3,7
   272     1005  0800               	movf	0,w
   273     1006  0A84               	incf	4,f
   274     1007  1903               	skipnz
   275     1008  0AFF               	incf	btemp+1,f
   276     1009  0008               	return
   277     100A                     stringcode:
   278     100A  087F               	movf	btemp+1,w
   279     100B  397F               	andlw	127
   280     100C  008A               	movwf	10
   281     100D  0804               	movf	4,w
   282     100E  0A84               	incf	4,f
   283     100F  1903               	skipnz
   284     1010  0AFF               	incf	btemp+1,f
   285     1011  0082               	movwf	2
   286     1012                     __stringbase:
   287     1012                     __end_of__stringtab:
   288     1012                     _dpowers:
   289     1012  3401               	retlw	1
   290     1013  3400               	retlw	0
   291     1014  340A               	retlw	10
   292     1015  3400               	retlw	0
   293     1016  3464               	retlw	100
   294     1017  3400               	retlw	0
   295     1018  34E8               	retlw	232
   296     1019  3403               	retlw	3
   297     101A  3410               	retlw	16
   298     101B  3427               	retlw	39
   299     101C                     __end_of_dpowers:
   300     001E                     _ADRESH	set	30
   301     001F                     _ADCON0bits	set	31
   302     000B                     _INTCONbits	set	11
   303     0001                     _TMR0	set	1
   304     0019                     _TXREG	set	25
   305     0018                     _RCSTA	set	24
   306     0040                     _RD0	set	64
   307     003B                     _RC3	set	59
   308     0049                     _RE1	set	73
   309     0038                     _RC0	set	56
   310     003A                     _RC2	set	58
   311     0048                     _RE0	set	72
   312     004A                     _RE2	set	74
   313     0039                     _RC1	set	57
   314     005A                     _T0IF	set	90
   315     005F                     _GIE	set	95
   316     002C                     _RA4	set	44
   317     0034                     _RB4	set	52
   318     0035                     _RB5	set	53
   319     0030                     _RB0	set	48
   320     0031                     _RB1	set	49
   321     0032                     _RB2	set	50
   322     0033                     _RB3	set	51
   323     009E                     _ADRESL	set	158
   324     009F                     _ADCON1bits	set	159
   325     0081                     _OPTION_REGbits	set	129
   326     0088                     _TRISD	set	136
   327     0086                     _TRISB	set	134
   328     0099                     _SPBRG	set	153
   329     0098                     _TXSTA	set	152
   330     043D                     _TRISC5	set	1085
   331     043C                     _TRISC4	set	1084
   332     042D                     _TRISA5	set	1069
   333     0428                     _TRISA0	set	1064
   334     043F                     _TRISC7	set	1087
   335     043E                     _TRISC6	set	1086
   336     042B                     _TRISA3	set	1067
   337     042A                     _TRISA2	set	1066
   338     0429                     _TRISA1	set	1065
   339     0440                     _TRISD0	set	1088
   340     043B                     _TRISC3	set	1083
   341     0438                     _TRISC0	set	1080
   342     044A                     _TRISE2	set	1098
   343     043A                     _TRISC2	set	1082
   344     0439                     _TRISC1	set	1081
   345     0449                     _TRISE1	set	1097
   346     0448                     _TRISE0	set	1096
   347     042C                     _TRISA4	set	1068
   348     04C1                     _TRMT	set	1217
   349     010C                     _EEDATA	set	268
   350     010D                     _EEADR	set	269
   351     018D                     _EECON2	set	397
   352     0C60                     _RD	set	3168
   353     0C61                     _WR	set	3169
   354     0C62                     _WREN	set	3170
   355     101C                     STR_29:
   356     101C  3420               	retlw	32	;' '
   357     101D  3420               	retlw	32	;' '
   358     101E  3420               	retlw	32	;' '
   359     101F  3449               	retlw	73	;'I'
   360     1020  344C               	retlw	76	;'L'
   361     1021  3445               	retlw	69	;'E'
   362     1022  3452               	retlw	82	;'R'
   363     1023  344C               	retlw	76	;'L'
   364     1024  3445               	retlw	69	;'E'
   365     1025  344D               	retlw	77	;'M'
   366     1026  3445               	retlw	69	;'E'
   367     1027  3420               	retlw	32	;' '
   368     1028  3448               	retlw	72	;'H'
   369     1029  3441               	retlw	65	;'A'
   370     102A  3454               	retlw	84	;'T'
   371     102B  3441               	retlw	65	;'A'
   372     102C  3453               	retlw	83	;'S'
   373     102D  3449               	retlw	73	;'I'
   374     102E  3420               	retlw	32	;' '
   375     102F  3420               	retlw	32	;' '
   376     1030  3420               	retlw	32	;' '
   377     1031  3420               	retlw	32	;' '
   378     1032  3420               	retlw	32	;' '
   379     1033  3420               	retlw	32	;' '
   380     1034  3420               	retlw	32	;' '
   381     1035  3420               	retlw	32	;' '
   382     1036  3400               	retlw	0
   383     1037                     STR_28:
   384     1037  3420               	retlw	32	;' '
   385     1038  3420               	retlw	32	;' '
   386     1039  3420               	retlw	32	;' '
   387     103A  3446               	retlw	70	;'F'
   388     103B  3445               	retlw	69	;'E'
   389     103C  3445               	retlw	69	;'E'
   390     103D  3444               	retlw	68	;'D'
   391     103E  3420               	retlw	32	;' '
   392     103F  3452               	retlw	82	;'R'
   393     1040  3441               	retlw	65	;'A'
   394     1041  3454               	retlw	84	;'T'
   395     1042  3445               	retlw	69	;'E'
   396     1043  3420               	retlw	32	;' '
   397     1044  3445               	retlw	69	;'E'
   398     1045  3452               	retlw	82	;'R'
   399     1046  3452               	retlw	82	;'R'
   400     1047  344F               	retlw	79	;'O'
   401     1048  3452               	retlw	82	;'R'
   402     1049  3420               	retlw	32	;' '
   403     104A  3420               	retlw	32	;' '
   404     104B  3420               	retlw	32	;' '
   405     104C  3420               	retlw	32	;' '
   406     104D  3420               	retlw	32	;' '
   407     104E  3420               	retlw	32	;' '
   408     104F  3420               	retlw	32	;' '
   409     1050  3400               	retlw	0
   410     1051                     STR_33:
   411     1051  3420               	retlw	32	;' '
   412     1052  3420               	retlw	32	;' '
   413     1053  3420               	retlw	32	;' '
   414     1054  3444               	retlw	68	;'D'
   415     1055  344F               	retlw	79	;'O'
   416     1056  344E               	retlw	78	;'N'
   417     1057  344D               	retlw	77	;'M'
   418     1058  3445               	retlw	69	;'E'
   419     1059  3420               	retlw	32	;' '
   420     105A  3448               	retlw	72	;'H'
   421     105B  3441               	retlw	65	;'A'
   422     105C  3454               	retlw	84	;'T'
   423     105D  3441               	retlw	65	;'A'
   424     105E  3453               	retlw	83	;'S'
   425     105F  3449               	retlw	73	;'I'
   426     1060  3420               	retlw	32	;' '
   427     1061  3420               	retlw	32	;' '
   428     1062  3420               	retlw	32	;' '
   429     1063  3420               	retlw	32	;' '
   430     1064  3420               	retlw	32	;' '
   431     1065  3420               	retlw	32	;' '
   432     1066  3420               	retlw	32	;' '
   433     1067  3420               	retlw	32	;' '
   434     1068  3400               	retlw	0
   435     1069                     STR_32:
   436     1069  3420               	retlw	32	;' '
   437     106A  3420               	retlw	32	;' '
   438     106B  3420               	retlw	32	;' '
   439     106C  3452               	retlw	82	;'R'
   440     106D  344F               	retlw	79	;'O'
   441     106E  3454               	retlw	84	;'T'
   442     106F  3441               	retlw	65	;'A'
   443     1070  3454               	retlw	84	;'T'
   444     1071  3449               	retlw	73	;'I'
   445     1072  344F               	retlw	79	;'O'
   446     1073  344E               	retlw	78	;'N'
   447     1074  3420               	retlw	32	;' '
   448     1075  3445               	retlw	69	;'E'
   449     1076  3452               	retlw	82	;'R'
   450     1077  3452               	retlw	82	;'R'
   451     1078  344F               	retlw	79	;'O'
   452     1079  3452               	retlw	82	;'R'
   453     107A  3420               	retlw	32	;' '
   454     107B  3420               	retlw	32	;' '
   455     107C  3420               	retlw	32	;' '
   456     107D  3420               	retlw	32	;' '
   457     107E  3420               	retlw	32	;' '
   458     107F  3420               	retlw	32	;' '
   459     1080  3400               	retlw	0
   460     1081                     STR_7:
   461     1081  3450               	retlw	80	;'P'
   462     1082  3455               	retlw	85	;'U'
   463     1083  3454               	retlw	84	;'T'
   464     1084  3420               	retlw	32	;' '
   465     1085  3449               	retlw	73	;'I'
   466     1086  3454               	retlw	84	;'T'
   467     1087  3420               	retlw	32	;' '
   468     1088  3449               	retlw	73	;'I'
   469     1089  344E               	retlw	78	;'N'
   470     108A  3420               	retlw	32	;' '
   471     108B  3453               	retlw	83	;'S'
   472     108C  3454               	retlw	84	;'T'
   473     108D  344F               	retlw	79	;'O'
   474     108E  3450               	retlw	80	;'P'
   475     108F  3420               	retlw	32	;' '
   476     1090  3453               	retlw	83	;'S'
   477     1091  3454               	retlw	84	;'T'
   478     1092  3441               	retlw	65	;'A'
   479     1093  3454               	retlw	84	;'T'
   480     1094  3445               	retlw	69	;'E'
   481     1095  3400               	retlw	0
   482     1096                     STR_6:
   483     1096  3453               	retlw	83	;'S'
   484     1097  3454               	retlw	84	;'T'
   485     1098  344F               	retlw	79	;'O'
   486     1099  3450               	retlw	80	;'P'
   487     109A  3420               	retlw	32	;' '
   488     109B  3444               	retlw	68	;'D'
   489     109C  3455               	retlw	85	;'U'
   490     109D  3452               	retlw	82	;'R'
   491     109E  3455               	retlw	85	;'U'
   492     109F  344D               	retlw	77	;'M'
   493     10A0  3455               	retlw	85	;'U'
   494     10A1  344E               	retlw	78	;'N'
   495     10A2  3441               	retlw	65	;'A'
   496     10A3  3420               	retlw	32	;' '
   497     10A4  3447               	retlw	71	;'G'
   498     10A5  3445               	retlw	69	;'E'
   499     10A6  3454               	retlw	84	;'T'
   500     10A7  3449               	retlw	73	;'I'
   501     10A8  3452               	retlw	82	;'R'
   502     10A9  3400               	retlw	0
   503     10AA                     STR_1:
   504     10AA  3459               	retlw	89	;'Y'
   505     10AB  3441               	retlw	65	;'A'
   506     10AC  3447               	retlw	71	;'G'
   507     10AD  3420               	retlw	32	;' '
   508     10AE  3442               	retlw	66	;'B'
   509     10AF  3441               	retlw	65	;'A'
   510     10B0  344B               	retlw	75	;'K'
   511     10B1  3449               	retlw	73	;'I'
   512     10B2  344D               	retlw	77	;'M'
   513     10B3  3449               	retlw	73	;'I'
   514     10B4  3420               	retlw	32	;' '
   515     10B5  3459               	retlw	89	;'Y'
   516     10B6  3441               	retlw	65	;'A'
   517     10B7  3450               	retlw	80	;'P'
   518     10B8  3449               	retlw	73	;'I'
   519     10B9  344E               	retlw	78	;'N'
   520     10BA  3449               	retlw	73	;'I'
   521     10BB  345A               	retlw	90	;'Z'
   522     10BC  3400               	retlw	0
   523     10BD                     STR_3:
   524     10BD  3455               	retlw	85	;'U'
   525     10BE  345A               	retlw	90	;'Z'
   526     10BF  344D               	retlw	77	;'M'
   527     10C0  3441               	retlw	65	;'A'
   528     10C1  344E               	retlw	78	;'N'
   529     10C2  344C               	retlw	76	;'L'
   530     10C3  3441               	retlw	65	;'A'
   531     10C4  3452               	retlw	82	;'R'
   532     10C5  3420               	retlw	32	;' '
   533     10C6  344D               	retlw	77	;'M'
   534     10C7  3441               	retlw	65	;'A'
   535     10C8  344B               	retlw	75	;'K'
   536     10C9  3449               	retlw	73	;'I'
   537     10CA  344E               	retlw	78	;'N'
   538     10CB  3441               	retlw	65	;'A'
   539     10CC  3400               	retlw	0
   540     10CD                     STR_18:
   541     10CD  3420               	retlw	32	;' '
   542     10CE  3446               	retlw	70	;'F'
   543     10CF  3457               	retlw	87	;'W'
   544     10D0  3444               	retlw	68	;'D'
   545     10D1  3420               	retlw	32	;' '
   546     10D2  3420               	retlw	32	;' '
   547     10D3  3420               	retlw	32	;' '
   548     10D4  3420               	retlw	32	;' '
   549     10D5  3420               	retlw	32	;' '
   550     10D6  3420               	retlw	32	;' '
   551     10D7  3420               	retlw	32	;' '
   552     10D8  3420               	retlw	32	;' '
   553     10D9  3420               	retlw	32	;' '
   554     10DA  3420               	retlw	32	;' '
   555     10DB  3400               	retlw	0
   556     10DC                     STR_4:
   557     10DC  3477               	retlw	119	;'w'
   558     10DD  3477               	retlw	119	;'w'
   559     10DE  3477               	retlw	119	;'w'
   560     10DF  342E               	retlw	46	;'.'
   561     10E0  3462               	retlw	98	;'b'
   562     10E1  346F               	retlw	111	;'o'
   563     10E2  3472               	retlw	114	;'r'
   564     10E3  3476               	retlw	118	;'v'
   565     10E4  3465               	retlw	101	;'e'
   566     10E5  346B               	retlw	107	;'k'
   567     10E6  342E               	retlw	46	;'.'
   568     10E7  3463               	retlw	99	;'c'
   569     10E8  346F               	retlw	111	;'o'
   570     10E9  346D               	retlw	109	;'m'
   571     10EA  3400               	retlw	0
   572     10EB                     STR_24:
   573     10EB  3420               	retlw	32	;' '
   574     10EC  3452               	retlw	82	;'R'
   575     10ED  3445               	retlw	69	;'E'
   576     10EE  3457               	retlw	87	;'W'
   577     10EF  3420               	retlw	32	;' '
   578     10F0  3420               	retlw	32	;' '
   579     10F1  3420               	retlw	32	;' '
   580     10F2  3420               	retlw	32	;' '
   581     10F3  3420               	retlw	32	;' '
   582     10F4  3420               	retlw	32	;' '
   583     10F5  3420               	retlw	32	;' '
   584     10F6  3420               	retlw	32	;' '
   585     10F7  3420               	retlw	32	;' '
   586     10F8  3400               	retlw	0
   587     10F9                     STR_2:
   588     10F9  344F               	retlw	79	;'O'
   589     10FA  3449               	retlw	73	;'I'
   590     10FB  344C               	retlw	76	;'L'
   591     10FC  3420               	retlw	32	;' '
   592     10FD  3454               	retlw	84	;'T'
   593     10FE  3448               	retlw	72	;'H'
   594     10FF  3445               	retlw	69	;'E'
   595     1100  3420               	retlw	32	;' '
   596     1101  3447               	retlw	71	;'G'
   597     1102  3445               	retlw	69	;'E'
   598     1103  3441               	retlw	65	;'A'
   599     1104  3452               	retlw	82	;'R'
   600     1105  3453               	retlw	83	;'S'
   601     1106  3400               	retlw	0
   602     1107                     STR_26:
   603     1107  3420               	retlw	32	;' '
   604     1108  3453               	retlw	83	;'S'
   605     1109  3454               	retlw	84	;'T'
   606     110A  344F               	retlw	79	;'O'
   607     110B  3450               	retlw	80	;'P'
   608     110C  3420               	retlw	32	;' '
   609     110D  3420               	retlw	32	;' '
   610     110E  3420               	retlw	32	;' '
   611     110F  3420               	retlw	32	;' '
   612     1110  3420               	retlw	32	;' '
   613     1111  3420               	retlw	32	;' '
   614     1112  3420               	retlw	32	;' '
   615     1113  3400               	retlw	0
   616     1114                     STR_8:
   617     1114  3425               	retlw	37	;'%'
   618     1115  3435               	retlw	53	;'5'
   619     1116  3475               	retlw	117	;'u'
   620     1117  3468               	retlw	104	;'h'
   621     1118  3420               	retlw	32	;' '
   622     1119  3425               	retlw	37	;'%'
   623     111A  3430               	retlw	48	;'0'
   624     111B  3432               	retlw	50	;'2'
   625     111C  3475               	retlw	117	;'u'
   626     111D  346D               	retlw	109	;'m'
   627     111E  3400               	retlw	0
   628     111F                     STR_10:
   629     111F  3446               	retlw	70	;'F'
   630     1120  3465               	retlw	101	;'e'
   631     1121  3465               	retlw	101	;'e'
   632     1122  3464               	retlw	100	;'d'
   633     1123  3452               	retlw	82	;'R'
   634     1124  3461               	retlw	97	;'a'
   635     1125  3474               	retlw	116	;'t'
   636     1126  3465               	retlw	101	;'e'
   637     1127  343A               	retlw	58	;':'
   638     1128  3400               	retlw	0
   639     1129                     STR_16:
   640     1129  3420               	retlw	32	;' '
   641     112A  3446               	retlw	70	;'F'
   642     112B  3457               	retlw	87	;'W'
   643     112C  3444               	retlw	68	;'D'
   644     112D  3420               	retlw	32	;' '
   645     112E  3431               	retlw	49	;'1'
   646     112F  342E               	retlw	46	;'.'
   647     1130  3436               	retlw	54	;'6'
   648     1131  344B               	retlw	75	;'K'
   649     1132  3400               	retlw	0
   650     1133                     STR_22:
   651     1133  3420               	retlw	32	;' '
   652     1134  3452               	retlw	82	;'R'
   653     1135  3445               	retlw	69	;'E'
   654     1136  3457               	retlw	87	;'W'
   655     1137  3420               	retlw	32	;' '
   656     1138  3431               	retlw	49	;'1'
   657     1139  342E               	retlw	46	;'.'
   658     113A  3436               	retlw	54	;'6'
   659     113B  344B               	retlw	75	;'K'
   660     113C  3400               	retlw	0
   661     113D                     STR_13:
   662     113D  3425               	retlw	37	;'%'
   663     113E  3475               	retlw	117	;'u'
   664     113F  3425               	retlw	37	;'%'
   665     1140  3475               	retlw	117	;'u'
   666     1141  3425               	retlw	37	;'%'
   667     1142  3475               	retlw	117	;'u'
   668     1143  342E               	retlw	46	;'.'
   669     1144  3425               	retlw	37	;'%'
   670     1145  3475               	retlw	117	;'u'
   671     1146  3400               	retlw	0
   672     1147                     STR_14:
   673     1147  3420               	retlw	32	;' '
   674     1148  3446               	retlw	70	;'F'
   675     1149  3457               	retlw	87	;'W'
   676     114A  3444               	retlw	68	;'D'
   677     114B  3420               	retlw	32	;' '
   678     114C  344C               	retlw	76	;'L'
   679     114D  344D               	retlw	77	;'M'
   680     114E  3454               	retlw	84	;'T'
   681     114F  3400               	retlw	0
   682     1150                     STR_20:
   683     1150  3420               	retlw	32	;' '
   684     1151  3452               	retlw	82	;'R'
   685     1152  3445               	retlw	69	;'E'
   686     1153  3457               	retlw	87	;'W'
   687     1154  3420               	retlw	32	;' '
   688     1155  344C               	retlw	76	;'L'
   689     1156  344D               	retlw	77	;'M'
   690     1157  3454               	retlw	84	;'T'
   691     1158  3400               	retlw	0
   692     1159                     STR_17:
   693     1159  3473               	retlw	115	;'s'
   694     115A  3425               	retlw	37	;'%'
   695     115B  3464               	retlw	100	;'d'
   696     115C  340D               	retlw	13
   697     115D  340A               	retlw	10
   698     115E  3400               	retlw	0
   699     115F                     STR_11:
   700     115F  3425               	retlw	37	;'%'
   701     1160  3430               	retlw	48	;'0'
   702     1161  3430               	retlw	48	;'0'
   703     1162  3433               	retlw	51	;'3'
   704     1163  3475               	retlw	117	;'u'
   705     1164  3400               	retlw	0
   706     1165                     STR_15:
   707     1165  3473               	retlw	115	;'s'
   708     1166  3430               	retlw	48	;'0'
   709     1167  340D               	retlw	13
   710     1168  340A               	retlw	10
   711     1169  3400               	retlw	0
   712     116A                     STR_12:
   713     116A  3452               	retlw	82	;'R'
   714     116B  3450               	retlw	80	;'P'
   715     116C  344D               	retlw	77	;'M'
   716     116D  343A               	retlw	58	;':'
   717     116E  3400               	retlw	0
   718     116F                     STR_5:
   719     116F  3456               	retlw	86	;'V'
   720     1170  3433               	retlw	51	;'3'
   721     1171  3400               	retlw	0
   722     1165                     
   723                           	psect	cinit
   724     0011                     start_initialization:	
   725                           ; #config settings
   726                           
   727     0011                     __initialization:
   728                           
   729                           ; Clear objects allocated to COMMON
   730     0011  01F7               	clrf	__pbssCOMMON& (0+127)
   731     0012  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   732                           
   733                           ; Clear objects allocated to BANK3
   734     0013  1683               	bsf	3,5	;RP0=1, select bank3
   735     0014  1703               	bsf	3,6	;RP1=1, select bank3
   736     0015  01A4               	clrf	__pbssBANK3& (0+127)
   737     0016  01A5               	clrf	(__pbssBANK3+1)& (0+127)
   738     0017  01A6               	clrf	(__pbssBANK3+2)& (0+127)
   739     0018  01A7               	clrf	(__pbssBANK3+3)& (0+127)
   740     0019  01A8               	clrf	(__pbssBANK3+4)& (0+127)
   741     001A  01A9               	clrf	(__pbssBANK3+5)& (0+127)
   742     001B  01AA               	clrf	(__pbssBANK3+6)& (0+127)
   743     001C  01AB               	clrf	(__pbssBANK3+7)& (0+127)
   744     001D                     end_of_initialization:	
   745                           ;End of C runtime variable initialization code
   746                           
   747     001D                     __end_of__initialization:
   748     001D  0183               	clrf	3
   749     001E  160A  118A  2EE2   	ljmp	_main	;jump to C main() function
   750                           
   751                           	psect	bssCOMMON
   752     0077                     __pbssCOMMON:
   753     0077                     _kesmeSayaci:
   754     0077                     	ds	2
   755                           
   756                           	psect	bssBANK3
   757     01A4                     __pbssBANK3:
   758     01A4                     _currentTime:
   759     01A4                     	ds	8
   760                           
   761                           	psect	cstackBANK3
   762     0190                     __pcstackBANK3:
   763     0190                     main@ilkAcilis:
   764                           
   765                           ; 2 bytes @ 0x0
   766     0190                     	ds	2
   767     0192                     main@adcValue1:
   768                           
   769                           ; 4 bytes @ 0x2
   770     0192                     	ds	4
   771     0196                     main@yuzler:
   772                           
   773                           ; 2 bytes @ 0x6
   774     0196                     	ds	2
   775     0198                     main@binler:
   776                           
   777                           ; 2 bytes @ 0x8
   778     0198                     	ds	2
   779     019A                     main@integerPart:
   780                           
   781                           ; 4 bytes @ 0xA
   782     019A                     	ds	4
   783     019E                     main@negativeFeedValue:
   784                           
   785                           ; 2 bytes @ 0xE
   786     019E                     	ds	2
   787     01A0                     main@realSaat:
   788                           
   789                           ; 2 bytes @ 0x10
   790     01A0                     	ds	2
   791     01A2                     main@displayValue:
   792                           
   793                           ; 2 bytes @ 0x12
   794     01A2                     	ds	2
   795                           
   796                           	psect	cstackBANK1
   797     00A0                     __pcstackBANK1:
   798     00A0                     main@combinedText_373:
   799                           
   800                           ; 20 bytes @ 0x0
   801     00A0                     	ds	20
   802     00B4                     main@lcdText:
   803                           
   804                           ; 9 bytes @ 0x14
   805     00B4                     	ds	9
   806     00BD                     main@uartMessage:
   807                           
   808                           ; 8 bytes @ 0x1D
   809     00BD                     	ds	8
   810     00C5                     main@uartMessage_369:
   811                           
   812                           ; 8 bytes @ 0x25
   813     00C5                     	ds	8
   814     00CD                     main@adcValue3:
   815                           
   816                           ; 4 bytes @ 0x2D
   817     00CD                     	ds	4
   818     00D1                     main@oranValue:
   819                           
   820                           ; 4 bytes @ 0x31
   821     00D1                     	ds	4
   822     00D5                     main@gostermeliklcd:
   823                           
   824                           ; 4 bytes @ 0x35
   825     00D5                     	ds	4
   826     00D9                     _main$1027:
   827                           
   828                           ; 4 bytes @ 0x39
   829     00D9                     	ds	4
   830     00DD                     main@rpmString:
   831                           
   832                           ; 5 bytes @ 0x3D
   833     00DD                     	ds	5
   834     00E2                     main@adcValue2:
   835                           
   836                           ; 2 bytes @ 0x42
   837     00E2                     	ds	2
   838     00E4                     main@dakika:
   839                           
   840                           ; 2 bytes @ 0x44
   841     00E4                     	ds	2
   842     00E6                     main@onlar:
   843                           
   844                           ; 2 bytes @ 0x46
   845     00E6                     	ds	2
   846     00E8                     main@birler:
   847                           
   848                           ; 2 bytes @ 0x48
   849     00E8                     	ds	2
   850     00EA                     main@negativeDisplayValue:
   851                           
   852                           ; 2 bytes @ 0x4A
   853     00EA                     	ds	2
   854     00EC                     main@adcString1:
   855                           
   856                           ; 4 bytes @ 0x4C
   857     00EC                     	ds	4
   858                           
   859                           	psect	cstackCOMMON
   860     0070                     __pcstackCOMMON:
   861     0070                     ?_isdigit:
   862     0070                     ?_UART_Initialize:	
   863                           ; 1 bit 
   864                           
   865     0070                     ?_UART_Write:	
   866                           ; 1 bytes @ 0x0
   867                           
   868     0070                     ?_Lcd_Port:	
   869                           ; 1 bytes @ 0x0
   870                           
   871     0070                     ?_Lcd_Cmd:	
   872                           ; 1 bytes @ 0x0
   873                           
   874     0070                     ?_Lcd_Clear:	
   875                           ; 1 bytes @ 0x0
   876                           
   877     0070                     ?_Lcd_Init:	
   878                           ; 1 bytes @ 0x0
   879                           
   880     0070                     ?_Lcd_Write_Char:	
   881                           ; 1 bytes @ 0x0
   882                           
   883     0070                     ?_yagBakim:	
   884                           ; 1 bytes @ 0x0
   885                           
   886     0070                     ?_writeEEPROM:	
   887                           ; 1 bytes @ 0x0
   888                           
   889     0070                     ?_incrementTime:	
   890                           ; 1 bytes @ 0x0
   891                           
   892     0070                     ??_incrementTime:	
   893                           ; 1 bytes @ 0x0
   894                           
   895     0070                     ?_timer_isr:	
   896                           ; 1 bytes @ 0x0
   897                           
   898     0070                     ?_main:	
   899                           ; 1 bytes @ 0x0
   900                           
   901     0070                     writeEEPROM@address:	
   902                           ; 2 bytes @ 0x0
   903                           
   904                           
   905                           ; 2 bytes @ 0x0
   906     0070                     	ds	2
   907     0072                     incrementTime@time:
   908     0072                     writeEEPROM@data:	
   909                           ; 1 bytes @ 0x2
   910                           
   911                           
   912                           ; 2 bytes @ 0x2
   913     0072                     	ds	2
   914     0074                     ??_writeEEPROM:
   915     0074                     ??_timer_isr:	
   916                           ; 1 bytes @ 0x4
   917                           
   918                           
   919                           ; 1 bytes @ 0x4
   920     0074                     	ds	3
   921                           
   922                           	psect	cstackBANK0
   923     0020                     __pcstackBANK0:
   924     0020                     ??_isdigit:
   925     0020                     ??_UART_Initialize:	
   926                           ; 1 bytes @ 0x0
   927                           
   928     0020                     ??_UART_Write:	
   929                           ; 1 bytes @ 0x0
   930                           
   931     0020                     ??_Lcd_Port:	
   932                           ; 1 bytes @ 0x0
   933                           
   934     0020                     ?__Umul8_16:	
   935                           ; 1 bytes @ 0x0
   936                           
   937     0020                     ?_readEEPROM:	
   938                           ; 2 bytes @ 0x0
   939                           
   940     0020                     ?___lwdiv:	
   941                           ; 2 bytes @ 0x0
   942                           
   943     0020                     ?___fltol:	
   944                           ; 2 bytes @ 0x0
   945                           
   946     0020                     ?___fldiv:	
   947                           ; 4 bytes @ 0x0
   948                           
   949     0020                     ?___xxtofl:	
   950                           ; 4 bytes @ 0x0
   951                           
   952     0020                     UART_Write@data:	
   953                           ; 4 bytes @ 0x0
   954                           
   955     0020                     Lcd_Port@a:	
   956                           ; 1 bytes @ 0x0
   957                           
   958     0020                     __Umul8_16@multiplicand:	
   959                           ; 1 bytes @ 0x0
   960                           
   961     0020                     _isdigit$836:	
   962                           ; 1 bytes @ 0x0
   963                           
   964     0020                     readEEPROM@address:	
   965                           ; 1 bytes @ 0x0
   966                           
   967     0020                     ___lwdiv@divisor:	
   968                           ; 2 bytes @ 0x0
   969                           
   970     0020                     ___fltol@f1:	
   971                           ; 2 bytes @ 0x0
   972                           
   973     0020                     ___fldiv@a:	
   974                           ; 4 bytes @ 0x0
   975                           
   976     0020                     ___xxtofl@val:	
   977                           ; 4 bytes @ 0x0
   978                           
   979                           
   980                           ; 4 bytes @ 0x0
   981     0020                     	ds	1
   982     0021                     ?_UART_Write_Text:
   983     0021                     ??_Lcd_Cmd:	
   984                           ; 1 bytes @ 0x1
   985                           
   986     0021                     ??_Lcd_Write_Char:	
   987                           ; 1 bytes @ 0x1
   988                           
   989     0021                     isdigit@c:	
   990                           ; 1 bytes @ 0x1
   991                           
   992     0021                     UART_Write_Text@text:	
   993                           ; 1 bytes @ 0x1
   994                           
   995                           
   996                           ; 2 bytes @ 0x1
   997     0021                     	ds	1
   998     0022                     ??__Umul8_16:
   999     0022                     ??_readEEPROM:	
  1000                           ; 1 bytes @ 0x2
  1001                           
  1002     0022                     Lcd_Write_Char@temp:	
  1003                           ; 1 bytes @ 0x2
  1004                           
  1005     0022                     ___lwdiv@dividend:	
  1006                           ; 1 bytes @ 0x2
  1007                           
  1008                           
  1009                           ; 2 bytes @ 0x2
  1010     0022                     	ds	1
  1011     0023                     ??_UART_Write_Text:
  1012     0023                     Lcd_Cmd@a:	
  1013                           ; 1 bytes @ 0x3
  1014                           
  1015     0023                     Lcd_Write_Char@y:	
  1016                           ; 1 bytes @ 0x3
  1017                           
  1018                           
  1019                           ; 1 bytes @ 0x3
  1020     0023                     	ds	1
  1021     0024                     ??_Lcd_Clear:
  1022     0024                     ?_Lcd_Set_Cursor:	
  1023                           ; 1 bytes @ 0x4
  1024                           
  1025     0024                     ??_Lcd_Init:	
  1026                           ; 1 bytes @ 0x4
  1027                           
  1028     0024                     ??___fltol:	
  1029                           ; 1 bytes @ 0x4
  1030                           
  1031     0024                     ??___lwdiv:	
  1032                           ; 1 bytes @ 0x4
  1033                           
  1034     0024                     ??___xxtofl:	
  1035                           ; 1 bytes @ 0x4
  1036                           
  1037     0024                     ?___wmul:	
  1038                           ; 1 bytes @ 0x4
  1039                           
  1040     0024                     Lcd_Set_Cursor@b:	
  1041                           ; 2 bytes @ 0x4
  1042                           
  1043     0024                     Lcd_Write_Char@a:	
  1044                           ; 1 bytes @ 0x4
  1045                           
  1046     0024                     ___lwdiv@counter:	
  1047                           ; 1 bytes @ 0x4
  1048                           
  1049     0024                     ___wmul@multiplier:	
  1050                           ; 1 bytes @ 0x4
  1051                           
  1052     0024                     __Umul8_16@product:	
  1053                           ; 2 bytes @ 0x4
  1054                           
  1055     0024                     ___fldiv@b:	
  1056                           ; 2 bytes @ 0x4
  1057                           
  1058                           
  1059                           ; 4 bytes @ 0x4
  1060     0024                     	ds	1
  1061     0025                     ??_Lcd_Set_Cursor:
  1062     0025                     ?_Lcd_Write_String:	
  1063                           ; 1 bytes @ 0x5
  1064                           
  1065     0025                     Lcd_Write_String@a:	
  1066                           ; 1 bytes @ 0x5
  1067                           
  1068     0025                     ___lwdiv@quotient:	
  1069                           ; 2 bytes @ 0x5
  1070                           
  1071                           
  1072                           ; 2 bytes @ 0x5
  1073     0025                     	ds	1
  1074     0026                     Lcd_Set_Cursor@a:
  1075     0026                     UART_Write_Text@i:	
  1076                           ; 1 bytes @ 0x6
  1077                           
  1078     0026                     ___wmul@multiplicand:	
  1079                           ; 2 bytes @ 0x6
  1080                           
  1081     0026                     __Umul8_16@word_mpld:	
  1082                           ; 2 bytes @ 0x6
  1083                           
  1084                           
  1085                           ; 2 bytes @ 0x6
  1086     0026                     	ds	1
  1087     0027                     ??_Lcd_Write_String:
  1088     0027                     ?___lwmod:	
  1089                           ; 1 bytes @ 0x7
  1090                           
  1091     0027                     Lcd_Set_Cursor@z:	
  1092                           ; 2 bytes @ 0x7
  1093                           
  1094     0027                     ___lwmod@divisor:	
  1095                           ; 1 bytes @ 0x7
  1096                           
  1097                           
  1098                           ; 2 bytes @ 0x7
  1099     0027                     	ds	1
  1100     0028                     ??___wmul:
  1101     0028                     ??___fldiv:	
  1102                           ; 1 bytes @ 0x8
  1103                           
  1104     0028                     Lcd_Set_Cursor@y:	
  1105                           ; 1 bytes @ 0x8
  1106                           
  1107     0028                     ___fltol@sign1:	
  1108                           ; 1 bytes @ 0x8
  1109                           
  1110     0028                     __Umul8_16@multiplier:	
  1111                           ; 1 bytes @ 0x8
  1112                           
  1113     0028                     ___xxtofl@sign:	
  1114                           ; 1 bytes @ 0x8
  1115                           
  1116     0028                     ___wmul@product:	
  1117                           ; 1 bytes @ 0x8
  1118                           
  1119                           
  1120                           ; 2 bytes @ 0x8
  1121     0028                     	ds	1
  1122     0029                     Lcd_Set_Cursor@temp:
  1123     0029                     ___fltol@exp1:	
  1124                           ; 1 bytes @ 0x9
  1125                           
  1126     0029                     ___xxtofl@exp:	
  1127                           ; 1 bytes @ 0x9
  1128                           
  1129     0029                     ___lwmod@dividend:	
  1130                           ; 1 bytes @ 0x9
  1131                           
  1132                           
  1133                           ; 2 bytes @ 0x9
  1134     0029                     	ds	1
  1135     002A                     ?___awdiv:
  1136     002A                     ?___awmod:	
  1137                           ; 2 bytes @ 0xA
  1138                           
  1139     002A                     Lcd_Write_String@i:	
  1140                           ; 2 bytes @ 0xA
  1141                           
  1142     002A                     ___awdiv@divisor:	
  1143                           ; 2 bytes @ 0xA
  1144                           
  1145     002A                     ___awmod@divisor:	
  1146                           ; 2 bytes @ 0xA
  1147                           
  1148     002A                     ___xxtofl@arg:	
  1149                           ; 2 bytes @ 0xA
  1150                           
  1151                           
  1152                           ; 4 bytes @ 0xA
  1153     002A                     	ds	1
  1154     002B                     ??___lwmod:
  1155     002B                     ___lwmod@counter:	
  1156                           ; 1 bytes @ 0xB
  1157                           
  1158                           
  1159                           ; 1 bytes @ 0xB
  1160     002B                     	ds	1
  1161     002C                     ??_yagBakim:
  1162     002C                     ?_sprintf:	
  1163                           ; 1 bytes @ 0xC
  1164                           
  1165     002C                     yagBakim@i:	
  1166                           ; 2 bytes @ 0xC
  1167                           
  1168     002C                     sprintf@f:	
  1169                           ; 2 bytes @ 0xC
  1170                           
  1171     002C                     ___awdiv@dividend:	
  1172                           ; 2 bytes @ 0xC
  1173                           
  1174     002C                     ___awmod@dividend:	
  1175                           ; 2 bytes @ 0xC
  1176                           
  1177                           
  1178                           ; 2 bytes @ 0xC
  1179     002C                     	ds	1
  1180     002D                     ___fldiv@rem:
  1181                           
  1182                           ; 4 bytes @ 0xD
  1183     002D                     	ds	1
  1184     002E                     ??___awdiv:
  1185     002E                     ??___awmod:	
  1186                           ; 1 bytes @ 0xE
  1187                           
  1188     002E                     ___awdiv@counter:	
  1189                           ; 1 bytes @ 0xE
  1190                           
  1191     002E                     ___awmod@counter:	
  1192                           ; 1 bytes @ 0xE
  1193                           
  1194                           
  1195                           ; 1 bytes @ 0xE
  1196     002E                     	ds	1
  1197     002F                     ___awdiv@sign:
  1198     002F                     ___awmod@sign:	
  1199                           ; 1 bytes @ 0xF
  1200                           
  1201                           
  1202                           ; 1 bytes @ 0xF
  1203     002F                     	ds	1
  1204     0030                     ___awdiv@quotient:
  1205                           
  1206                           ; 2 bytes @ 0x10
  1207     0030                     	ds	1
  1208     0031                     ___fldiv@sign:
  1209                           
  1210                           ; 1 bytes @ 0x11
  1211     0031                     	ds	1
  1212     0032                     ___fldiv@new_exp:
  1213                           
  1214                           ; 2 bytes @ 0x12
  1215     0032                     	ds	2
  1216     0034                     ___fldiv@grs:
  1217                           
  1218                           ; 4 bytes @ 0x14
  1219     0034                     	ds	2
  1220     0036                     ??_sprintf:
  1221                           
  1222                           ; 1 bytes @ 0x16
  1223     0036                     	ds	2
  1224     0038                     ___fldiv@bexp:
  1225                           
  1226                           ; 1 bytes @ 0x18
  1227     0038                     	ds	1
  1228     0039                     ___fldiv@aexp:
  1229                           
  1230                           ; 1 bytes @ 0x19
  1231     0039                     	ds	1
  1232     003A                     ?___flmul:
  1233     003A                     sprintf@prec:	
  1234                           ; 4 bytes @ 0x1A
  1235                           
  1236     003A                     ___flmul@b:	
  1237                           ; 1 bytes @ 0x1A
  1238                           
  1239                           
  1240                           ; 4 bytes @ 0x1A
  1241     003A                     	ds	1
  1242     003B                     sprintf@ap:
  1243                           
  1244                           ; 1 bytes @ 0x1B
  1245     003B                     	ds	1
  1246     003C                     sprintf@val:
  1247                           
  1248                           ; 2 bytes @ 0x1C
  1249     003C                     	ds	2
  1250     003E                     sprintf@flag:
  1251     003E                     ___flmul@a:	
  1252                           ; 1 bytes @ 0x1E
  1253                           
  1254                           
  1255                           ; 4 bytes @ 0x1E
  1256     003E                     	ds	1
  1257     003F                     sprintf@width:
  1258                           
  1259                           ; 2 bytes @ 0x1F
  1260     003F                     	ds	2
  1261     0041                     sprintf@c:
  1262                           
  1263                           ; 1 bytes @ 0x21
  1264     0041                     	ds	1
  1265     0042                     ??___flmul:
  1266     0042                     sprintf@sp:	
  1267                           ; 1 bytes @ 0x22
  1268                           
  1269                           
  1270                           ; 1 bytes @ 0x22
  1271     0042                     	ds	5
  1272     0047                     ___flmul@sign:
  1273                           
  1274                           ; 1 bytes @ 0x27
  1275     0047                     	ds	1
  1276     0048                     ___flmul@grs:
  1277                           
  1278                           ; 4 bytes @ 0x28
  1279     0048                     	ds	4
  1280     004C                     ___flmul@aexp:
  1281                           
  1282                           ; 1 bytes @ 0x2C
  1283     004C                     	ds	1
  1284     004D                     ___flmul@bexp:
  1285                           
  1286                           ; 1 bytes @ 0x2D
  1287     004D                     	ds	1
  1288     004E                     ___flmul@prod:
  1289                           
  1290                           ; 4 bytes @ 0x2E
  1291     004E                     	ds	4
  1292     0052                     ___flmul@temp:
  1293                           
  1294                           ; 2 bytes @ 0x32
  1295     0052                     	ds	2
  1296     0054                     ??_main:
  1297                           
  1298                           ; 1 bytes @ 0x34
  1299     0054                     	ds	6
  1300     005A                     main@combinedText:
  1301                           
  1302                           ; 20 bytes @ 0x3A
  1303     005A                     	ds	20
  1304                           
  1305                           	psect	maintext
  1306     16E2                     __pmaintext:	
  1307 ;;
  1308 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
  1309 ;;
  1310 ;; *************** function _main *****************
  1311 ;; Defined at:
  1312 ;;		line 114 in file "main1.c"
  1313 ;; Parameters:    Size  Location     Type
  1314 ;;		None
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;  uartMessage     8   37[BANK1 ] unsigned char [8]
  1317 ;;  uartMessage     8   29[BANK1 ] unsigned char [8]
  1318 ;;  combinedText   20    0[BANK1 ] unsigned char [20]
  1319 ;;  negativeDisp    2   74[BANK1 ] int 
  1320 ;;  negativeFeed    2   14[BANK3 ] int 
  1321 ;;  combinedText   20   58[BANK0 ] unsigned char [20]
  1322 ;;  rpmString       5   61[BANK1 ] unsigned char [5]
  1323 ;;  adcString1      4   76[BANK1 ] unsigned char [4]
  1324 ;;  integerPart     4   10[BANK3 ] float 
  1325 ;;  gostermelikl    4   53[BANK1 ] float 
  1326 ;;  oranValue       4   49[BANK1 ] float 
  1327 ;;  realSaat        2   16[BANK3 ] int 
  1328 ;;  binler          2    8[BANK3 ] int 
  1329 ;;  yuzler          2    6[BANK3 ] int 
  1330 ;;  birler          2   72[BANK1 ] int 
  1331 ;;  onlar           2   70[BANK1 ] int 
  1332 ;;  dakika          2   68[BANK1 ] int 
  1333 ;;  lcdText         9   20[BANK1 ] unsigned char [9]
  1334 ;;  adcValue1       4    2[BANK3 ] float 
  1335 ;;  adcValue3       4   45[BANK1 ] float 
  1336 ;;  displayValue    2   18[BANK3 ] unsigned int 
  1337 ;;  ilkAcilis       2    0[BANK3 ] int 
  1338 ;;  adcValue2       2   66[BANK1 ] int 
  1339 ;;  a               2    0        unsigned int 
  1340 ;; Return value:  Size  Location     Type
  1341 ;;                  2  205[None  ] int 
  1342 ;; Registers used:
  1343 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1344 ;; Tracked objects:
  1345 ;;		On entry : B00/0
  1346 ;;		On exit  : 0/0
  1347 ;;		Unchanged: 0/0
  1348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1349 ;;      Params:         0       0       0       0       0
  1350 ;;      Locals:         0      20      80      20       0
  1351 ;;      Temps:          0       6       0       0       0
  1352 ;;      Totals:         0      26      80      20       0
  1353 ;;Total ram usage:      126 bytes
  1354 ;; Hardware stack levels required when called: 6
  1355 ;; This function calls:
  1356 ;;		_Lcd_Clear
  1357 ;;		_Lcd_Init
  1358 ;;		_Lcd_Set_Cursor
  1359 ;;		_Lcd_Write_String
  1360 ;;		_UART_Initialize
  1361 ;;		_UART_Write_Text
  1362 ;;		___awdiv
  1363 ;;		___awmod
  1364 ;;		___fldiv
  1365 ;;		___flmul
  1366 ;;		___fltol
  1367 ;;		___wmul
  1368 ;;		___xxtofl
  1369 ;;		_readEEPROM
  1370 ;;		_sprintf
  1371 ;;		_yagBakim
  1372 ;; This function is called by:
  1373 ;;		Startup code after reset
  1374 ;; This function uses a non-reentrant model
  1375 ;;
  1376                           
  1377     16E2                     _main:	
  1378                           ;psect for function _main
  1379                           
  1380     16E2                     l3797:	
  1381                           ;incstack = 0
  1382                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1383                           
  1384                           
  1385                           ;main1.c: 116:   unsigned int a;;main1.c: 119: TRISB = 0b00000000;
  1386     16E2  1683               	bsf	3,5	;RP0=1, select bank1
  1387     16E3  1303               	bcf	3,6	;RP1=0, select bank1
  1388     16E4  0186               	clrf	6	;volatile
  1389     16E5                     l3799:
  1390                           
  1391                           ;main1.c: 120: TRISA4 = 0;
  1392     16E5  1205               	bcf	5,4	;volatile
  1393     16E6                     l3801:
  1394                           
  1395                           ;main1.c: 121: TRISE0 = 1;
  1396     16E6  1409               	bsf	9,0	;volatile
  1397     16E7                     l3803:
  1398                           
  1399                           ;main1.c: 122: TRISE1 = 1;
  1400     16E7  1489               	bsf	9,1	;volatile
  1401     16E8                     l3805:
  1402                           
  1403                           ;main1.c: 123: TRISC1 = 1;
  1404     16E8  1487               	bsf	7,1	;volatile
  1405     16E9                     l3807:
  1406                           
  1407                           ;main1.c: 124: TRISC2 = 1;
  1408     16E9  1507               	bsf	7,2	;volatile
  1409     16EA                     l3809:
  1410                           
  1411                           ;main1.c: 125: TRISE2 = 1;
  1412     16EA  1509               	bsf	9,2	;volatile
  1413     16EB                     l3811:
  1414                           
  1415                           ;main1.c: 126: TRISC0 = 1;
  1416     16EB  1407               	bsf	7,0	;volatile
  1417     16EC                     l3813:
  1418                           
  1419                           ;main1.c: 127: TRISC3 = 1;
  1420     16EC  1587               	bsf	7,3	;volatile
  1421     16ED                     l3815:
  1422                           
  1423                           ;main1.c: 128: TRISD0 = 1;
  1424     16ED  1408               	bsf	8,0	;volatile
  1425     16EE                     l3817:
  1426                           
  1427                           ;main1.c: 130: TRISA1 = 1;
  1428     16EE  1485               	bsf	5,1	;volatile
  1429     16EF                     l3819:
  1430                           
  1431                           ;main1.c: 131: TRISA2 = 1;
  1432     16EF  1505               	bsf	5,2	;volatile
  1433     16F0                     l3821:
  1434                           
  1435                           ;main1.c: 132: TRISA3 = 1;
  1436     16F0  1585               	bsf	5,3	;volatile
  1437     16F1                     l3823:
  1438                           
  1439                           ;main1.c: 133: Lcd_Init();
  1440     16F1  160A  118A  247D  160A  118A  	fcall	_Lcd_Init
  1441     16F6                     l3825:
  1442                           
  1443                           ;main1.c: 135: TRISC6 = 0;
  1444     16F6  1683               	bsf	3,5	;RP0=1, select bank1
  1445     16F7  1303               	bcf	3,6	;RP1=0, select bank1
  1446     16F8  1307               	bcf	7,6	;volatile
  1447     16F9                     l3827:
  1448                           
  1449                           ;main1.c: 136: TRISC7 = 1;
  1450     16F9  1787               	bsf	7,7	;volatile
  1451     16FA                     l3829:
  1452                           
  1453                           ;main1.c: 139: TRISA0 = 0;
  1454     16FA  1005               	bcf	5,0	;volatile
  1455     16FB                     l3831:
  1456                           
  1457                           ;main1.c: 140: TRISA5 = 0;
  1458     16FB  1285               	bcf	5,5	;volatile
  1459     16FC                     l3833:
  1460                           
  1461                           ;main1.c: 141: TRISC4 = 0;
  1462     16FC  1207               	bcf	7,4	;volatile
  1463     16FD                     l3835:
  1464                           
  1465                           ;main1.c: 142: TRISC5 = 0;
  1466     16FD  1287               	bcf	7,5	;volatile
  1467     16FE                     l3837:
  1468                           
  1469                           ;main1.c: 143: TRISD = 0b00000001;
  1470     16FE  3001               	movlw	1
  1471     16FF  0088               	movwf	8	;volatile
  1472     1700                     l3839:
  1473                           
  1474                           ;main1.c: 146:   _delay((unsigned long)((200)*(4000000/4000.0)));
  1475     1700  3002               	movlw	2
  1476     1701  1283               	bcf	3,5	;RP0=0, select bank0
  1477     1702  1303               	bcf	3,6	;RP1=0, select bank0
  1478     1703  00D6               	movwf	??_main+2
  1479     1704  3004               	movlw	4
  1480     1705  00D5               	movwf	??_main+1
  1481     1706  30B9               	movlw	185
  1482     1707  00D4               	movwf	??_main
  1483     1708                     u5627:
  1484     1708  0BD4               	decfsz	??_main,f
  1485     1709  2F08               	goto	u5627
  1486     170A  0BD5               	decfsz	??_main+1,f
  1487     170B  2F08               	goto	u5627
  1488     170C  0BD6               	decfsz	??_main+2,f
  1489     170D  2F08               	goto	u5627
  1490     170E  2F0F               	nop2
  1491     170F                     l3841:
  1492                           
  1493                           ;main1.c: 147:   RA4 = 0;
  1494     170F  1283               	bcf	3,5	;RP0=0, select bank0
  1495     1710  1303               	bcf	3,6	;RP1=0, select bank0
  1496     1711  1205               	bcf	5,4	;volatile
  1497     1712                     l3843:
  1498                           
  1499                           ;main1.c: 153:     currentTime.hours = readEEPROM(0x01);
  1500     1712  3001               	movlw	1
  1501     1713  00A0               	movwf	readEEPROM@address
  1502     1714  3000               	movlw	0
  1503     1715  00A1               	movwf	readEEPROM@address+1
  1504     1716  160A  118A  219C  160A  118A  	fcall	_readEEPROM
  1505     171B  1283               	bcf	3,5	;RP0=0, select bank0
  1506     171C  1303               	bcf	3,6	;RP1=0, select bank0
  1507     171D  0821               	movf	?_readEEPROM+1,w
  1508     171E  1683               	bsf	3,5	;RP0=1, select bank3
  1509     171F  1703               	bsf	3,6	;RP1=1, select bank3
  1510     1720  00A7               	movwf	((_currentTime+1)^(0+384)+2)
  1511     1721  1283               	bcf	3,5	;RP0=0, select bank0
  1512     1722  1303               	bcf	3,6	;RP1=0, select bank0
  1513     1723  0820               	movf	?_readEEPROM,w
  1514     1724  1683               	bsf	3,5	;RP0=1, select bank3
  1515     1725  1703               	bsf	3,6	;RP1=1, select bank3
  1516     1726  00A6               	movwf	(_currentTime^(0+384)+2)
  1517     1727                     l3845:
  1518                           
  1519                           ;main1.c: 154:     currentTime.minutes = readEEPROM(0x02);
  1520     1727  3002               	movlw	2
  1521     1728  1283               	bcf	3,5	;RP0=0, select bank0
  1522     1729  1303               	bcf	3,6	;RP1=0, select bank0
  1523     172A  00A0               	movwf	readEEPROM@address
  1524     172B  3000               	movlw	0
  1525     172C  00A1               	movwf	readEEPROM@address+1
  1526     172D  160A  118A  219C  160A  118A  	fcall	_readEEPROM
  1527     1732  1283               	bcf	3,5	;RP0=0, select bank0
  1528     1733  1303               	bcf	3,6	;RP1=0, select bank0
  1529     1734  0821               	movf	?_readEEPROM+1,w
  1530     1735  1683               	bsf	3,5	;RP0=1, select bank3
  1531     1736  1703               	bsf	3,6	;RP1=1, select bank3
  1532     1737  00A9               	movwf	((_currentTime+1)^(0+384)+4)
  1533     1738  1283               	bcf	3,5	;RP0=0, select bank0
  1534     1739  1303               	bcf	3,6	;RP1=0, select bank0
  1535     173A  0820               	movf	?_readEEPROM,w
  1536     173B  1683               	bsf	3,5	;RP0=1, select bank3
  1537     173C  1703               	bsf	3,6	;RP1=1, select bank3
  1538     173D  00A8               	movwf	(_currentTime^(0+384)+4)
  1539     173E                     l3847:
  1540                           
  1541                           ;main1.c: 155:     currentTime.seconds = readEEPROM(0x03);
  1542     173E  3003               	movlw	3
  1543     173F  1283               	bcf	3,5	;RP0=0, select bank0
  1544     1740  1303               	bcf	3,6	;RP1=0, select bank0
  1545     1741  00A0               	movwf	readEEPROM@address
  1546     1742  3000               	movlw	0
  1547     1743  00A1               	movwf	readEEPROM@address+1
  1548     1744  160A  118A  219C  160A  118A  	fcall	_readEEPROM
  1549     1749  1283               	bcf	3,5	;RP0=0, select bank0
  1550     174A  1303               	bcf	3,6	;RP1=0, select bank0
  1551     174B  0821               	movf	?_readEEPROM+1,w
  1552     174C  1683               	bsf	3,5	;RP0=1, select bank3
  1553     174D  1703               	bsf	3,6	;RP1=1, select bank3
  1554     174E  00AB               	movwf	((_currentTime+1)^(0+384)+6)
  1555     174F  1283               	bcf	3,5	;RP0=0, select bank0
  1556     1750  1303               	bcf	3,6	;RP1=0, select bank0
  1557     1751  0820               	movf	?_readEEPROM,w
  1558     1752  1683               	bsf	3,5	;RP0=1, select bank3
  1559     1753  1703               	bsf	3,6	;RP1=1, select bank3
  1560     1754  00AA               	movwf	(_currentTime^(0+384)+6)
  1561     1755                     l3849:
  1562                           
  1563                           ;main1.c: 156:     currentTime.carpan = readEEPROM(0x04);
  1564     1755  3004               	movlw	4
  1565     1756  1283               	bcf	3,5	;RP0=0, select bank0
  1566     1757  1303               	bcf	3,6	;RP1=0, select bank0
  1567     1758  00A0               	movwf	readEEPROM@address
  1568     1759  3000               	movlw	0
  1569     175A  00A1               	movwf	readEEPROM@address+1
  1570     175B  160A  118A  219C  160A  118A  	fcall	_readEEPROM
  1571     1760  1283               	bcf	3,5	;RP0=0, select bank0
  1572     1761  1303               	bcf	3,6	;RP1=0, select bank0
  1573     1762  0821               	movf	?_readEEPROM+1,w
  1574     1763  1683               	bsf	3,5	;RP0=1, select bank3
  1575     1764  1703               	bsf	3,6	;RP1=1, select bank3
  1576     1765  00A5               	movwf	(_currentTime+1)^(0+384)
  1577     1766  1283               	bcf	3,5	;RP0=0, select bank0
  1578     1767  1303               	bcf	3,6	;RP1=0, select bank0
  1579     1768  0820               	movf	?_readEEPROM,w
  1580     1769  1683               	bsf	3,5	;RP0=1, select bank3
  1581     176A  1703               	bsf	3,6	;RP1=1, select bank3
  1582     176B  00A4               	movwf	_currentTime^(0+384)
  1583     176C                     l3851:
  1584                           
  1585                           ;main1.c: 159:     char lcdText[9];;main1.c: 161:     OPTION_REGbits.T0CS = 0;
  1586     176C  1683               	bsf	3,5	;RP0=1, select bank1
  1587     176D  1303               	bcf	3,6	;RP1=0, select bank1
  1588     176E  1281               	bcf	1,5	;volatile
  1589     176F                     l3853:
  1590                           
  1591                           ;main1.c: 162:     OPTION_REGbits.PSA = 0;
  1592     176F  1181               	bcf	1,3	;volatile
  1593     1770                     l3855:
  1594                           
  1595                           ;main1.c: 163:     OPTION_REGbits.PS2 = 1;
  1596     1770  1501               	bsf	1,2	;volatile
  1597     1771                     l3857:
  1598                           
  1599                           ;main1.c: 164:     OPTION_REGbits.PS1 = 1;
  1600     1771  1481               	bsf	1,1	;volatile
  1601     1772                     l3859:
  1602                           
  1603                           ;main1.c: 165:     OPTION_REGbits.PS0 = 1;
  1604     1772  1401               	bsf	1,0	;volatile
  1605     1773                     l3861:
  1606                           
  1607                           ;main1.c: 168:     INTCONbits.GIE = 1;
  1608     1773  178B               	bsf	11,7	;volatile
  1609     1774                     l3863:
  1610                           
  1611                           ;main1.c: 169:     INTCONbits.PEIE = 1;
  1612     1774  170B               	bsf	11,6	;volatile
  1613     1775                     l3865:
  1614                           
  1615                           ;main1.c: 170:     INTCONbits.T0IE = 1;
  1616     1775  168B               	bsf	11,5	;volatile
  1617     1776                     l3867:
  1618                           
  1619                           ;main1.c: 173:     Lcd_Clear();
  1620     1776  160A  158A  27E5  160A  118A  	fcall	_Lcd_Clear
  1621     177B                     l3869:
  1622                           
  1623                           ;main1.c: 174:     Lcd_Set_Cursor(1,1);
  1624     177B  1283               	bcf	3,5	;RP0=0, select bank0
  1625     177C  1303               	bcf	3,6	;RP1=0, select bank0
  1626     177D  01A4               	clrf	Lcd_Set_Cursor@b
  1627     177E  0AA4               	incf	Lcd_Set_Cursor@b,f
  1628     177F  3001               	movlw	1
  1629     1780  160A  118A  2373  160A  118A  	fcall	_Lcd_Set_Cursor
  1630     1785                     l3871:
  1631                           
  1632                           ;main1.c: 175:     Lcd_Write_String("UZMANLAR MAKINA");
  1633     1785  30BD               	movlw	low (STR_3| (0+32768))
  1634     1786  1283               	bcf	3,5	;RP0=0, select bank0
  1635     1787  1303               	bcf	3,6	;RP1=0, select bank0
  1636     1788  00A5               	movwf	Lcd_Write_String@a
  1637     1789  3090               	movlw	high (STR_3| (0+32768))
  1638     178A  00A6               	movwf	Lcd_Write_String@a+1
  1639     178B  160A  118A  232D  160A  118A  	fcall	_Lcd_Write_String
  1640     1790                     l3873:
  1641                           
  1642                           ;main1.c: 176:     Lcd_Set_Cursor(2,1);
  1643     1790  1283               	bcf	3,5	;RP0=0, select bank0
  1644     1791  1303               	bcf	3,6	;RP1=0, select bank0
  1645     1792  01A4               	clrf	Lcd_Set_Cursor@b
  1646     1793  0AA4               	incf	Lcd_Set_Cursor@b,f
  1647     1794  3002               	movlw	2
  1648     1795  160A  118A  2373  160A  118A  	fcall	_Lcd_Set_Cursor
  1649     179A                     l3875:
  1650                           
  1651                           ;main1.c: 177:     Lcd_Write_String("www.borvek.com");
  1652     179A  30DC               	movlw	low (STR_4| (0+32768))
  1653     179B  1283               	bcf	3,5	;RP0=0, select bank0
  1654     179C  1303               	bcf	3,6	;RP1=0, select bank0
  1655     179D  00A5               	movwf	Lcd_Write_String@a
  1656     179E  3090               	movlw	high (STR_4| (0+32768))
  1657     179F  00A6               	movwf	Lcd_Write_String@a+1
  1658     17A0  160A  118A  232D  160A  118A  	fcall	_Lcd_Write_String
  1659     17A5                     l3877:
  1660                           
  1661                           ;main1.c: 178:     Lcd_Set_Cursor(2,17);
  1662     17A5  3011               	movlw	17
  1663     17A6  1283               	bcf	3,5	;RP0=0, select bank0
  1664     17A7  1303               	bcf	3,6	;RP1=0, select bank0
  1665     17A8  00A4               	movwf	Lcd_Set_Cursor@b
  1666     17A9  3002               	movlw	2
  1667     17AA  160A  118A  2373  160A  118A  	fcall	_Lcd_Set_Cursor
  1668     17AF                     l3879:
  1669                           
  1670                           ;main1.c: 179:     Lcd_Write_String("V3");
  1671     17AF  306F               	movlw	low (STR_5| (0+32768))
  1672     17B0  1283               	bcf	3,5	;RP0=0, select bank0
  1673     17B1  1303               	bcf	3,6	;RP1=0, select bank0
  1674     17B2  00A5               	movwf	Lcd_Write_String@a
  1675     17B3  3091               	movlw	high (STR_5| (0+32768))
  1676     17B4  00A6               	movwf	Lcd_Write_String@a+1
  1677     17B5  160A  118A  232D  160A  118A  	fcall	_Lcd_Write_String
  1678     17BA                     l3881:
  1679                           
  1680                           ;main1.c: 181:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1681     17BA  3006               	movlw	6
  1682     17BB  1283               	bcf	3,5	;RP0=0, select bank0
  1683     17BC  1303               	bcf	3,6	;RP1=0, select bank0
  1684     17BD  00D6               	movwf	??_main+2
  1685     17BE  3013               	movlw	19
  1686     17BF  00D5               	movwf	??_main+1
  1687     17C0  30AD               	movlw	173
  1688     17C1  00D4               	movwf	??_main
  1689     17C2                     u5637:
  1690     17C2  0BD4               	decfsz	??_main,f
  1691     17C3  2FC2               	goto	u5637
  1692     17C4  0BD5               	decfsz	??_main+1,f
  1693     17C5  2FC2               	goto	u5637
  1694     17C6  0BD6               	decfsz	??_main+2,f
  1695     17C7  2FC2               	goto	u5637
  1696     17C8                     l3883:
  1697                           
  1698                           ;main1.c: 182:     Lcd_Clear();
  1699     17C8  160A  158A  27E5  160A  118A  	fcall	_Lcd_Clear
  1700     17CD                     l3885:
  1701                           
  1702                           ;main1.c: 187:     SPBRG = ((4000000/16)/19200) - 1;
  1703     17CD  300C               	movlw	12
  1704     17CE  1683               	bsf	3,5	;RP0=1, select bank1
  1705     17CF  1303               	bcf	3,6	;RP1=0, select bank1
  1706     17D0  0099               	movwf	25	;volatile
  1707     17D1                     l3887:
  1708                           
  1709                           ;main1.c: 188:     UART_Initialize();
  1710     17D1  160A  118A  2178  160A  118A  	fcall	_UART_Initialize
  1711     17D6                     l3889:
  1712                           
  1713                           ;main1.c: 189: unsigned int displayValue = 0;
  1714     17D6  1683               	bsf	3,5	;RP0=1, select bank3
  1715     17D7  1703               	bsf	3,6	;RP1=1, select bank3
  1716     17D8  01A2               	clrf	main@displayValue^(0+384)
  1717     17D9  01A3               	clrf	(main@displayValue+1)^(0+384)
  1718     17DA                     l3891:
  1719                           
  1720                           ;main1.c: 194:     ADCON1bits.ADFM = 1;
  1721     17DA  1683               	bsf	3,5	;RP0=1, select bank1
  1722     17DB  1303               	bcf	3,6	;RP1=0, select bank1
  1723     17DC  179F               	bsf	31,7	;volatile
  1724     17DD                     l3893:
  1725                           
  1726                           ;main1.c: 195:     ADCON1bits.PCFG = 0b100;
  1727     17DD  081F               	movf	31,w	;volatile
  1728     17DE  39F0               	andlw	-16
  1729     17DF  3804               	iorlw	4
  1730     17E0  009F               	movwf	31	;volatile
  1731     17E1                     l3895:
  1732                           
  1733                           ;main1.c: 196:     ADCON0bits.ADCS = 0b10;
  1734     17E1  1283               	bcf	3,5	;RP0=0, select bank0
  1735     17E2  1303               	bcf	3,6	;RP1=0, select bank0
  1736     17E3  081F               	movf	31,w	;volatile
  1737     17E4  393F               	andlw	-193
  1738     17E5  3880               	iorlw	128
  1739     17E6  009F               	movwf	31	;volatile
  1740     17E7                     l3897:
  1741                           
  1742                           ;main1.c: 197:     ADCON0bits.ADON = 1;
  1743     17E7  141F               	bsf	31,0	;volatile
  1744     17E8                     l3899:
  1745                           
  1746                           ;main1.c: 199:     float adcValue1;;main1.c: 200:     int adcValue2;;main1.c: 201:     f
      +                          loat adcValue3;;main1.c: 207:     RC1 = 0;
  1747     17E8  1087               	bcf	7,1	;volatile
  1748     17E9                     l3901:
  1749                           
  1750                           ;main1.c: 208:     RE2 = 0;
  1751     17E9  1109               	bcf	9,2	;volatile
  1752     17EA                     l3903:
  1753                           
  1754                           ;main1.c: 209:     RE0 = 0;
  1755     17EA  1009               	bcf	9,0	;volatile
  1756     17EB                     l3905:
  1757                           
  1758                           ;main1.c: 210:     RC2 = 0;
  1759     17EB  1107               	bcf	7,2	;volatile
  1760     17EC                     l3907:
  1761                           
  1762                           ;main1.c: 211:     RC0 = 0;
  1763     17EC  1007               	bcf	7,0	;volatile
  1764     17ED                     l3909:
  1765                           
  1766                           ;main1.c: 212:     RE1 = 0;
  1767     17ED  1089               	bcf	9,1	;volatile
  1768     17EE                     l3911:
  1769                           
  1770                           ;main1.c: 214: int ilkAcilis = 1;
  1771     17EE  3001               	movlw	1
  1772     17EF  1683               	bsf	3,5	;RP0=1, select bank3
  1773     17F0  1703               	bsf	3,6	;RP1=1, select bank3
  1774     17F1  0090               	movwf	main@ilkAcilis^(0+384)
  1775     17F2  3000               	movlw	0
  1776     17F3  0091               	movwf	(main@ilkAcilis^(0+384)+1)
  1777     17F4                     l3913:
  1778                           
  1779                           ;main1.c: 218: if (ilkAcilis) {
  1780     17F4  1683               	bsf	3,5	;RP0=1, select bank3
  1781     17F5  1703               	bsf	3,6	;RP1=1, select bank3
  1782     17F6  0810               	movf	main@ilkAcilis^(0+384),w
  1783     17F7  0411               	iorwf	(main@ilkAcilis+1)^(0+384),w
  1784     17F8  1903               	btfsc	3,2
  1785     17F9  2FFD               	goto	u5151
  1786     17FA  120A  158A  2BED   	goto	u5150
  1787     17FD                     u5151:
  1788     17FD  120A  158A  2C3D   	goto	l207
  1789                           
  1790                           	psect	text1
  1791     07AA                     __ptext1:	
  1792 ;; *************** function _yagBakim *****************
  1793 ;; Defined at:
  1794 ;;		line 27 in file "main1.c"
  1795 ;; Parameters:    Size  Location     Type
  1796 ;;		None
  1797 ;; Auto vars:     Size  Location     Type
  1798 ;;  i               2   12[BANK0 ] int 
  1799 ;; Return value:  Size  Location     Type
  1800 ;;                  1    wreg      void 
  1801 ;; Registers used:
  1802 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1803 ;; Tracked objects:
  1804 ;;		On entry : 0/0
  1805 ;;		On exit  : 0/0
  1806 ;;		Unchanged: 0/0
  1807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1808 ;;      Params:         0       0       0       0       0
  1809 ;;      Locals:         0       2       0       0       0
  1810 ;;      Temps:          0       0       0       0       0
  1811 ;;      Totals:         0       2       0       0       0
  1812 ;;Total ram usage:        2 bytes
  1813 ;; Hardware stack levels used: 1
  1814 ;; Hardware stack levels required when called: 5
  1815 ;; This function calls:
  1816 ;;		_Lcd_Clear
  1817 ;;		_Lcd_Set_Cursor
  1818 ;;		_Lcd_Write_String
  1819 ;; This function is called by:
  1820 ;;		_main
  1821 ;; This function uses a non-reentrant model
  1822 ;;
  1823                           
  1824     07AA                     _yagBakim:	
  1825                           ;psect for function _yagBakim
  1826                           
  1827     07AA                     l3567:	
  1828                           ;incstack = 0
  1829                           ; Regs used in _yagBakim: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1830                           
  1831                           
  1832                           ;main1.c: 28:     Lcd_Clear();
  1833     07AA  160A  158A  27E5  120A  118A  	fcall	_Lcd_Clear
  1834     07AF                     l3569:
  1835                           
  1836                           ;main1.c: 29:     for (int i = 0; i < 10; i++) {
  1837     07AF  1283               	bcf	3,5	;RP0=0, select bank0
  1838     07B0  1303               	bcf	3,6	;RP1=0, select bank0
  1839     07B1  01AC               	clrf	yagBakim@i
  1840     07B2  01AD               	clrf	yagBakim@i+1
  1841     07B3                     l3575:
  1842                           
  1843                           ;main1.c: 30:         Lcd_Set_Cursor(1, 1);
  1844     07B3  1283               	bcf	3,5	;RP0=0, select bank0
  1845     07B4  1303               	bcf	3,6	;RP1=0, select bank0
  1846     07B5  01A4               	clrf	Lcd_Set_Cursor@b
  1847     07B6  0AA4               	incf	Lcd_Set_Cursor@b,f
  1848     07B7  3001               	movlw	1
  1849     07B8  160A  118A  2373  120A  118A  	fcall	_Lcd_Set_Cursor
  1850     07BD                     l3577:
  1851                           
  1852                           ;main1.c: 31:         Lcd_Write_String("YAG BAKIMI YAPINIZ");
  1853     07BD  30AA               	movlw	low (STR_1| (0+32768))
  1854     07BE  1283               	bcf	3,5	;RP0=0, select bank0
  1855     07BF  1303               	bcf	3,6	;RP1=0, select bank0
  1856     07C0  00A5               	movwf	Lcd_Write_String@a
  1857     07C1  3090               	movlw	high (STR_1| (0+32768))
  1858     07C2  00A6               	movwf	Lcd_Write_String@a+1
  1859     07C3  160A  118A  232D  120A  118A  	fcall	_Lcd_Write_String
  1860     07C8                     l3579:
  1861                           
  1862                           ;main1.c: 32:         Lcd_Set_Cursor(2, 1);
  1863     07C8  1283               	bcf	3,5	;RP0=0, select bank0
  1864     07C9  1303               	bcf	3,6	;RP1=0, select bank0
  1865     07CA  01A4               	clrf	Lcd_Set_Cursor@b
  1866     07CB  0AA4               	incf	Lcd_Set_Cursor@b,f
  1867     07CC  3002               	movlw	2
  1868     07CD  160A  118A  2373  120A  118A  	fcall	_Lcd_Set_Cursor
  1869                           
  1870                           ;main1.c: 33:         Lcd_Write_String("OIL THE GEARS");
  1871     07D2  30F9               	movlw	low (STR_2| (0+32768))
  1872     07D3  1283               	bcf	3,5	;RP0=0, select bank0
  1873     07D4  1303               	bcf	3,6	;RP1=0, select bank0
  1874     07D5  00A5               	movwf	Lcd_Write_String@a
  1875     07D6  3090               	movlw	high (STR_2| (0+32768))
  1876     07D7  00A6               	movwf	Lcd_Write_String@a+1
  1877     07D8  160A  118A  232D  120A  118A  	fcall	_Lcd_Write_String
  1878     07DD                     l3581:
  1879                           
  1880                           ;main1.c: 34:         RA4 = 1;
  1881     07DD  1283               	bcf	3,5	;RP0=0, select bank0
  1882     07DE  1303               	bcf	3,6	;RP1=0, select bank0
  1883     07DF  1605               	bsf	5,4	;volatile
  1884     07E0                     l3583:
  1885                           
  1886                           ;main1.c: 35:     }
  1887     07E0  3001               	movlw	1
  1888     07E1  07AC               	addwf	yagBakim@i,f
  1889     07E2  1803               	skipnc
  1890     07E3  0AAD               	incf	yagBakim@i+1,f
  1891     07E4  3000               	movlw	0
  1892     07E5  07AD               	addwf	yagBakim@i+1,f
  1893     07E6                     l3585:
  1894     07E6  082D               	movf	yagBakim@i+1,w
  1895     07E7  3A80               	xorlw	128
  1896     07E8  00FF               	movwf	btemp+1
  1897     07E9  3080               	movlw	128
  1898     07EA  027F               	subwf	btemp+1,w
  1899     07EB  1D03               	skipz
  1900     07EC  2FEF               	goto	u4765
  1901     07ED  300A               	movlw	10
  1902     07EE  022C               	subwf	yagBakim@i,w
  1903     07EF                     u4765:
  1904     07EF  1C03               	skipc
  1905     07F0  2FF2               	goto	u4761
  1906     07F1  2FF3               	goto	u4760
  1907     07F2                     u4761:
  1908     07F2  2FB3               	goto	l3575
  1909     07F3                     u4760:
  1910     07F3                     l3587:
  1911                           
  1912                           ;main1.c: 36:     Lcd_Clear();
  1913     07F3  160A  158A  27E5  120A  118A  	fcall	_Lcd_Clear
  1914     07F8                     l3589:
  1915                           
  1916                           ;main1.c: 37:     RA4 = 0;
  1917     07F8  1283               	bcf	3,5	;RP0=0, select bank0
  1918     07F9  1303               	bcf	3,6	;RP1=0, select bank0
  1919     07FA  1205               	bcf	5,4	;volatile
  1920     07FB                     l175:
  1921     07FB  0008               	return
  1922     07FC                     __end_of_yagBakim:
  1923                           
  1924                           	psect	text2
  1925     132D                     __ptext2:	
  1926 ;; *************** function _Lcd_Write_String *****************
  1927 ;; Defined at:
  1928 ;;		line 96 in file "./lcd.h"
  1929 ;; Parameters:    Size  Location     Type
  1930 ;;  a               2    5[BANK0 ] PTR unsigned char 
  1931 ;;		 -> STR_33(24), STR_32(24), STR_29(27), STR_28(26), 
  1932 ;;		 -> STR_26(13), STR_24(14), STR_22(10), STR_20(9), 
  1933 ;;		 -> STR_18(15), STR_16(10), STR_14(9), main@rpmString(5), 
  1934 ;;		 -> STR_12(5), main@adcString1(4), STR_10(10), STR_9(3), 
  1935 ;;		 -> main@lcdText(9), STR_7(21), STR_6(20), STR_5(3), 
  1936 ;;		 -> STR_4(15), STR_3(16), STR_2(14), STR_1(19), 
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;  i               2   10[BANK0 ] int 
  1939 ;; Return value:  Size  Location     Type
  1940 ;;                  1    wreg      void 
  1941 ;; Registers used:
  1942 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1943 ;; Tracked objects:
  1944 ;;		On entry : 0/0
  1945 ;;		On exit  : 0/0
  1946 ;;		Unchanged: 0/0
  1947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1948 ;;      Params:         0       2       0       0       0
  1949 ;;      Locals:         0       2       0       0       0
  1950 ;;      Temps:          0       3       0       0       0
  1951 ;;      Totals:         0       7       0       0       0
  1952 ;;Total ram usage:        7 bytes
  1953 ;; Hardware stack levels used: 1
  1954 ;; Hardware stack levels required when called: 4
  1955 ;; This function calls:
  1956 ;;		_Lcd_Write_Char
  1957 ;; This function is called by:
  1958 ;;		_yagBakim
  1959 ;;		_main
  1960 ;; This function uses a non-reentrant model
  1961 ;;
  1962                           
  1963     132D                     _Lcd_Write_String:	
  1964                           ;psect for function _Lcd_Write_String
  1965                           
  1966     132D                     l3463:	
  1967                           ;incstack = 0
  1968                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1969                           
  1970                           
  1971                           ;./lcd.h: 96: void Lcd_Write_String(char *a);./lcd.h: 97: {;./lcd.h: 98:  int i;;./lcd.h
      +                          : 99:  for(i=0;a[i]!='\0';i++)
  1972     132D  1283               	bcf	3,5	;RP0=0, select bank0
  1973     132E  1303               	bcf	3,6	;RP1=0, select bank0
  1974     132F  01AA               	clrf	Lcd_Write_String@i
  1975     1330  01AB               	clrf	Lcd_Write_String@i+1
  1976     1331  2B56               	goto	l3469
  1977     1332                     l3465:
  1978                           
  1979                           ;./lcd.h: 100:     Lcd_Write_Char(a[i]);
  1980     1332  082A               	movf	Lcd_Write_String@i,w
  1981     1333  0725               	addwf	Lcd_Write_String@a,w
  1982     1334  00A8               	movwf	??_Lcd_Write_String+1
  1983     1335  0826               	movf	Lcd_Write_String@a+1,w
  1984     1336  00A7               	movwf	??_Lcd_Write_String
  1985     1337  1803               	skipnc
  1986     1338  0AA7               	incf	??_Lcd_Write_String,f
  1987     1339  1FAA               	btfss	Lcd_Write_String@i,7
  1988     133A  2B3C               	goto	u4510
  1989     133B  03A7               	decf	??_Lcd_Write_String,f
  1990     133C                     u4510:
  1991     133C  1283               	bcf	3,5	;RP0=0, select bank0
  1992     133D  1303               	bcf	3,6	;RP1=0, select bank0
  1993     133E  0827               	movf	??_Lcd_Write_String,w
  1994     133F  00A9               	movwf	??_Lcd_Write_String+2
  1995     1340  0829               	movf	??_Lcd_Write_String+2,w
  1996     1341  00FF               	movwf	btemp+1
  1997     1342  0828               	movf	??_Lcd_Write_String+1,w
  1998     1343  0084               	movwf	4
  1999     1344  160A  118A  2000  160A  118A  	fcall	stringtab
  2000     1349  160A  118A  222C  160A  118A  	fcall	_Lcd_Write_Char
  2001     134E                     l3467:
  2002     134E  3001               	movlw	1
  2003     134F  1283               	bcf	3,5	;RP0=0, select bank0
  2004     1350  1303               	bcf	3,6	;RP1=0, select bank0
  2005     1351  07AA               	addwf	Lcd_Write_String@i,f
  2006     1352  1803               	skipnc
  2007     1353  0AAB               	incf	Lcd_Write_String@i+1,f
  2008     1354  3000               	movlw	0
  2009     1355  07AB               	addwf	Lcd_Write_String@i+1,f
  2010     1356                     l3469:
  2011     1356  082A               	movf	Lcd_Write_String@i,w
  2012     1357  0725               	addwf	Lcd_Write_String@a,w
  2013     1358  00A8               	movwf	??_Lcd_Write_String+1
  2014     1359  0826               	movf	Lcd_Write_String@a+1,w
  2015     135A  00A7               	movwf	??_Lcd_Write_String
  2016     135B  1803               	skipnc
  2017     135C  0AA7               	incf	??_Lcd_Write_String,f
  2018     135D  1FAA               	btfss	Lcd_Write_String@i,7
  2019     135E  2B60               	goto	u4520
  2020     135F  03A7               	decf	??_Lcd_Write_String,f
  2021     1360                     u4520:
  2022     1360  1283               	bcf	3,5	;RP0=0, select bank0
  2023     1361  1303               	bcf	3,6	;RP1=0, select bank0
  2024     1362  0827               	movf	??_Lcd_Write_String,w
  2025     1363  00A9               	movwf	??_Lcd_Write_String+2
  2026     1364  0829               	movf	??_Lcd_Write_String+2,w
  2027     1365  00FF               	movwf	btemp+1
  2028     1366  0828               	movf	??_Lcd_Write_String+1,w
  2029     1367  0084               	movwf	4
  2030     1368  160A  118A  2000  160A  118A  	fcall	stringtab
  2031     136D  3A00               	xorlw	0
  2032     136E  1D03               	skipz
  2033     136F  2B71               	goto	u4531
  2034     1370  2B72               	goto	u4530
  2035     1371                     u4531:
  2036     1371  2B32               	goto	l3465
  2037     1372                     u4530:
  2038     1372                     l170:
  2039     1372  0008               	return
  2040     1373                     __end_of_Lcd_Write_String:
  2041                           
  2042                           	psect	text3
  2043     122C                     __ptext3:	
  2044 ;; *************** function _Lcd_Write_Char *****************
  2045 ;; Defined at:
  2046 ;;		line 80 in file "./lcd.h"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;  a               1    wreg     unsigned char 
  2049 ;; Auto vars:     Size  Location     Type
  2050 ;;  a               1    4[BANK0 ] unsigned char 
  2051 ;;  y               1    3[BANK0 ] unsigned char 
  2052 ;;  temp            1    2[BANK0 ] unsigned char 
  2053 ;; Return value:  Size  Location     Type
  2054 ;;                  1    wreg      void 
  2055 ;; Registers used:
  2056 ;;		wreg, status,2, status,0, pclath, cstack
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2062 ;;      Params:         0       0       0       0       0
  2063 ;;      Locals:         0       3       0       0       0
  2064 ;;      Temps:          0       1       0       0       0
  2065 ;;      Totals:         0       4       0       0       0
  2066 ;;Total ram usage:        4 bytes
  2067 ;; Hardware stack levels used: 1
  2068 ;; Hardware stack levels required when called: 3
  2069 ;; This function calls:
  2070 ;;		_Lcd_Port
  2071 ;; This function is called by:
  2072 ;;		_Lcd_Write_String
  2073 ;; This function uses a non-reentrant model
  2074 ;;
  2075                           
  2076     122C                     _Lcd_Write_Char:	
  2077                           ;psect for function _Lcd_Write_Char
  2078                           
  2079                           
  2080                           ;incstack = 0
  2081                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2082                           ;Lcd_Write_Char@a stored from wreg
  2083     122C  1283               	bcf	3,5	;RP0=0, select bank0
  2084     122D  1303               	bcf	3,6	;RP1=0, select bank0
  2085     122E  00A4               	movwf	Lcd_Write_Char@a
  2086     122F                     l3417:
  2087                           
  2088                           ;./lcd.h: 80: void Lcd_Write_Char(char a);./lcd.h: 81: {;./lcd.h: 82:    char temp,y;;./
      +                          lcd.h: 83:    temp = a&0x0F;
  2089     122F  0824               	movf	Lcd_Write_Char@a,w
  2090     1230  390F               	andlw	15
  2091     1231  00A2               	movwf	Lcd_Write_Char@temp
  2092                           
  2093                           ;./lcd.h: 84:    y = a&0xF0;
  2094     1232  0824               	movf	Lcd_Write_Char@a,w
  2095     1233  39F0               	andlw	240
  2096     1234  00A3               	movwf	Lcd_Write_Char@y
  2097     1235                     l3419:
  2098                           
  2099                           ;./lcd.h: 85:    RB5 = 1;
  2100     1235  1686               	bsf	6,5	;volatile
  2101     1236                     l3421:
  2102                           
  2103                           ;./lcd.h: 86:    Lcd_Port(y>>4);
  2104     1236  0823               	movf	Lcd_Write_Char@y,w
  2105     1237  00A1               	movwf	??_Lcd_Write_Char
  2106     1238  3004               	movlw	4
  2107     1239                     u4455:
  2108     1239  1003               	clrc
  2109     123A  0CA1               	rrf	??_Lcd_Write_Char,f
  2110     123B  3EFF               	addlw	-1
  2111     123C  1D03               	skipz
  2112     123D  2A39               	goto	u4455
  2113     123E  0821               	movf	??_Lcd_Write_Char,w
  2114     123F  160A  118A  21E3  160A  118A  	fcall	_Lcd_Port
  2115     1244                     l3423:
  2116                           
  2117                           ;./lcd.h: 87:    RB4 = 1;
  2118     1244  1283               	bcf	3,5	;RP0=0, select bank0
  2119     1245  1303               	bcf	3,6	;RP1=0, select bank0
  2120     1246  1606               	bsf	6,4	;volatile
  2121     1247                     l3425:
  2122                           
  2123                           ;./lcd.h: 88:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  2124     1247  300C               	movlw	12
  2125     1248  1283               	bcf	3,5	;RP0=0, select bank0
  2126     1249  1303               	bcf	3,6	;RP1=0, select bank0
  2127     124A  00A1               	movwf	??_Lcd_Write_Char
  2128     124B                     u5707:
  2129     124B  0BA1               	decfsz	??_Lcd_Write_Char,f
  2130     124C  2A4B               	goto	u5707
  2131     124D  0000               	nop
  2132     124E                     l3427:
  2133                           
  2134                           ;./lcd.h: 89:    RB4 = 0;
  2135     124E  1283               	bcf	3,5	;RP0=0, select bank0
  2136     124F  1303               	bcf	3,6	;RP1=0, select bank0
  2137     1250  1206               	bcf	6,4	;volatile
  2138     1251                     l3429:
  2139                           
  2140                           ;./lcd.h: 90:    Lcd_Port(temp);
  2141     1251  0822               	movf	Lcd_Write_Char@temp,w
  2142     1252  160A  118A  21E3  160A  118A  	fcall	_Lcd_Port
  2143     1257                     l3431:
  2144                           
  2145                           ;./lcd.h: 91:    RB4 = 1;
  2146     1257  1283               	bcf	3,5	;RP0=0, select bank0
  2147     1258  1303               	bcf	3,6	;RP1=0, select bank0
  2148     1259  1606               	bsf	6,4	;volatile
  2149     125A                     l3433:
  2150                           
  2151                           ;./lcd.h: 92:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  2152     125A  300C               	movlw	12
  2153     125B  1283               	bcf	3,5	;RP0=0, select bank0
  2154     125C  1303               	bcf	3,6	;RP1=0, select bank0
  2155     125D  00A1               	movwf	??_Lcd_Write_Char
  2156     125E                     u5717:
  2157     125E  0BA1               	decfsz	??_Lcd_Write_Char,f
  2158     125F  2A5E               	goto	u5717
  2159     1260  0000               	nop
  2160     1261                     l3435:
  2161                           
  2162                           ;./lcd.h: 93:    RB4 = 0;
  2163     1261  1283               	bcf	3,5	;RP0=0, select bank0
  2164     1262  1303               	bcf	3,6	;RP1=0, select bank0
  2165     1263  1206               	bcf	6,4	;volatile
  2166     1264                     l164:
  2167     1264  0008               	return
  2168     1265                     __end_of_Lcd_Write_Char:
  2169                           
  2170                           	psect	text4
  2171     1373                     __ptext4:	
  2172 ;; *************** function _Lcd_Set_Cursor *****************
  2173 ;; Defined at:
  2174 ;;		line 40 in file "./lcd.h"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;  a               1    wreg     unsigned char 
  2177 ;;  b               1    4[BANK0 ] unsigned char 
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;  a               1    6[BANK0 ] unsigned char 
  2180 ;;  temp            1    9[BANK0 ] unsigned char 
  2181 ;;  y               1    8[BANK0 ] unsigned char 
  2182 ;;  z               1    7[BANK0 ] unsigned char 
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  1    wreg      void 
  2185 ;; Registers used:
  2186 ;;		wreg, status,2, status,0, pclath, cstack
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2192 ;;      Params:         0       1       0       0       0
  2193 ;;      Locals:         0       4       0       0       0
  2194 ;;      Temps:          0       1       0       0       0
  2195 ;;      Totals:         0       6       0       0       0
  2196 ;;Total ram usage:        6 bytes
  2197 ;; Hardware stack levels used: 1
  2198 ;; Hardware stack levels required when called: 4
  2199 ;; This function calls:
  2200 ;;		_Lcd_Cmd
  2201 ;; This function is called by:
  2202 ;;		_yagBakim
  2203 ;;		_main
  2204 ;; This function uses a non-reentrant model
  2205 ;;
  2206                           
  2207     1373                     _Lcd_Set_Cursor:	
  2208                           ;psect for function _Lcd_Set_Cursor
  2209                           
  2210                           
  2211                           ;incstack = 0
  2212                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2213                           ;Lcd_Set_Cursor@a stored from wreg
  2214     1373  1283               	bcf	3,5	;RP0=0, select bank0
  2215     1374  1303               	bcf	3,6	;RP1=0, select bank0
  2216     1375  00A6               	movwf	Lcd_Set_Cursor@a
  2217     1376                     l3443:
  2218                           
  2219                           ;./lcd.h: 40: void Lcd_Set_Cursor(char a, char b);./lcd.h: 41: {;./lcd.h: 42:  char temp
      +                          ,z,y;;./lcd.h: 43:  if(a == 1)
  2220     1376  0326               	decf	Lcd_Set_Cursor@a,w
  2221     1377  1D03               	btfss	3,2
  2222     1378  2B7A               	goto	u4471
  2223     1379  2B7B               	goto	u4470
  2224     137A                     u4471:
  2225     137A  2B9A               	goto	l3453
  2226     137B                     u4470:
  2227     137B                     l3445:
  2228                           
  2229                           ;./lcd.h: 44:  {;./lcd.h: 45:    temp = 0x80 + b - 1;
  2230     137B  0824               	movf	Lcd_Set_Cursor@b,w
  2231     137C  3E7F               	addlw	127
  2232     137D  00A9               	movwf	Lcd_Set_Cursor@temp
  2233                           
  2234                           ;./lcd.h: 46:   z = temp>>4;
  2235     137E  0829               	movf	Lcd_Set_Cursor@temp,w
  2236     137F  00A5               	movwf	??_Lcd_Set_Cursor
  2237     1380  3004               	movlw	4
  2238     1381                     u4485:
  2239     1381  1003               	clrc
  2240     1382  0CA5               	rrf	??_Lcd_Set_Cursor,f
  2241     1383  3EFF               	addlw	-1
  2242     1384  1D03               	skipz
  2243     1385  2B81               	goto	u4485
  2244     1386  0825               	movf	??_Lcd_Set_Cursor,w
  2245     1387  00A7               	movwf	Lcd_Set_Cursor@z
  2246     1388                     l3447:
  2247                           
  2248                           ;./lcd.h: 47:   y = temp & 0x0F;
  2249     1388  0829               	movf	Lcd_Set_Cursor@temp,w
  2250     1389  390F               	andlw	15
  2251     138A  00A8               	movwf	Lcd_Set_Cursor@y
  2252     138B                     l3449:
  2253                           
  2254                           ;./lcd.h: 48:   Lcd_Cmd(z);
  2255     138B  0827               	movf	Lcd_Set_Cursor@z,w
  2256     138C  160A  118A  21C7  160A  118A  	fcall	_Lcd_Cmd
  2257     1391                     l3451:
  2258                           
  2259                           ;./lcd.h: 49:   Lcd_Cmd(y);
  2260     1391  1283               	bcf	3,5	;RP0=0, select bank0
  2261     1392  1303               	bcf	3,6	;RP1=0, select bank0
  2262     1393  0828               	movf	Lcd_Set_Cursor@y,w
  2263     1394  160A  118A  21C7  160A  118A  	fcall	_Lcd_Cmd
  2264                           
  2265                           ;./lcd.h: 50:  }
  2266     1399  2BBE               	goto	l158
  2267     139A                     l3453:
  2268     139A  3002               	movlw	2
  2269     139B  0626               	xorwf	Lcd_Set_Cursor@a,w
  2270     139C  1D03               	btfss	3,2
  2271     139D  2B9F               	goto	u4491
  2272     139E  2BA0               	goto	u4490
  2273     139F                     u4491:
  2274     139F  2BBE               	goto	l158
  2275     13A0                     u4490:
  2276     13A0                     l3455:
  2277                           
  2278                           ;./lcd.h: 52:  {;./lcd.h: 53:   temp = 0xC0 + b - 1;
  2279     13A0  0824               	movf	Lcd_Set_Cursor@b,w
  2280     13A1  3EBF               	addlw	191
  2281     13A2  00A9               	movwf	Lcd_Set_Cursor@temp
  2282                           
  2283                           ;./lcd.h: 54:   z = temp>>4;
  2284     13A3  0829               	movf	Lcd_Set_Cursor@temp,w
  2285     13A4  00A5               	movwf	??_Lcd_Set_Cursor
  2286     13A5  3004               	movlw	4
  2287     13A6                     u4505:
  2288     13A6  1003               	clrc
  2289     13A7  0CA5               	rrf	??_Lcd_Set_Cursor,f
  2290     13A8  3EFF               	addlw	-1
  2291     13A9  1D03               	skipz
  2292     13AA  2BA6               	goto	u4505
  2293     13AB  0825               	movf	??_Lcd_Set_Cursor,w
  2294     13AC  00A7               	movwf	Lcd_Set_Cursor@z
  2295     13AD                     l3457:
  2296                           
  2297                           ;./lcd.h: 55:   y = temp & 0x0F;
  2298     13AD  0829               	movf	Lcd_Set_Cursor@temp,w
  2299     13AE  390F               	andlw	15
  2300     13AF  00A8               	movwf	Lcd_Set_Cursor@y
  2301     13B0                     l3459:
  2302                           
  2303                           ;./lcd.h: 56:   Lcd_Cmd(z);
  2304     13B0  0827               	movf	Lcd_Set_Cursor@z,w
  2305     13B1  160A  118A  21C7  160A  118A  	fcall	_Lcd_Cmd
  2306     13B6                     l3461:
  2307                           
  2308                           ;./lcd.h: 57:   Lcd_Cmd(y);
  2309     13B6  1283               	bcf	3,5	;RP0=0, select bank0
  2310     13B7  1303               	bcf	3,6	;RP1=0, select bank0
  2311     13B8  0828               	movf	Lcd_Set_Cursor@y,w
  2312     13B9  160A  118A  21C7  160A  118A  	fcall	_Lcd_Cmd
  2313     13BE                     l158:
  2314     13BE  0008               	return
  2315     13BF                     __end_of_Lcd_Set_Cursor:
  2316                           
  2317                           	psect	text5
  2318     1FE5                     __ptext5:	
  2319 ;; *************** function _Lcd_Clear *****************
  2320 ;; Defined at:
  2321 ;;		line 34 in file "./lcd.h"
  2322 ;; Parameters:    Size  Location     Type
  2323 ;;		None
  2324 ;; Auto vars:     Size  Location     Type
  2325 ;;		None
  2326 ;; Return value:  Size  Location     Type
  2327 ;;                  1    wreg      void 
  2328 ;; Registers used:
  2329 ;;		wreg, status,2, status,0, pclath, cstack
  2330 ;; Tracked objects:
  2331 ;;		On entry : 0/0
  2332 ;;		On exit  : 0/0
  2333 ;;		Unchanged: 0/0
  2334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2335 ;;      Params:         0       0       0       0       0
  2336 ;;      Locals:         0       0       0       0       0
  2337 ;;      Temps:          0       0       0       0       0
  2338 ;;      Totals:         0       0       0       0       0
  2339 ;;Total ram usage:        0 bytes
  2340 ;; Hardware stack levels used: 1
  2341 ;; Hardware stack levels required when called: 4
  2342 ;; This function calls:
  2343 ;;		_Lcd_Cmd
  2344 ;; This function is called by:
  2345 ;;		_yagBakim
  2346 ;;		_main
  2347 ;; This function uses a non-reentrant model
  2348 ;;
  2349                           
  2350     1FE5                     _Lcd_Clear:	
  2351                           ;psect for function _Lcd_Clear
  2352                           
  2353     1FE5                     l3441:	
  2354                           ;incstack = 0
  2355                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2356                           
  2357                           
  2358                           ;./lcd.h: 36:  Lcd_Cmd(0);
  2359     1FE5  3000               	movlw	0
  2360     1FE6  160A  118A  21C7  160A  158A  	fcall	_Lcd_Cmd
  2361                           
  2362                           ;./lcd.h: 37:  Lcd_Cmd(1);
  2363     1FEB  3001               	movlw	1
  2364     1FEC  160A  118A  21C7  160A  158A  	fcall	_Lcd_Cmd
  2365     1FF1                     l152:
  2366     1FF1  0008               	return
  2367     1FF2                     __end_of_Lcd_Clear:
  2368                           
  2369                           	psect	text6
  2370     09F6                     __ptext6:	
  2371 ;; *************** function _sprintf *****************
  2372 ;; Defined at:
  2373 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  2374 ;; Parameters:    Size  Location     Type
  2375 ;;  sp              1    wreg     PTR unsigned char 
  2376 ;;		 -> main@combinedText_373(20), main@uartMessage_369(8), main@combinedText(20), main@uartMessage(8), 
  2377 ;;		 -> main@rpmString(5), main@adcString1(4), main@lcdText(9), 
  2378 ;;  f               2   12[BANK0 ] PTR const unsigned char 
  2379 ;;		 -> STR_25(6), STR_23(6), STR_19(6), STR_17(6), 
  2380 ;;		 -> STR_13(10), STR_11(6), STR_8(11), 
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;  sp              1   34[BANK0 ] PTR unsigned char 
  2383 ;;		 -> main@combinedText_373(20), main@uartMessage_369(8), main@combinedText(20), main@uartMessage(8), 
  2384 ;;		 -> main@rpmString(5), main@adcString1(4), main@lcdText(9), 
  2385 ;;  tmpval          4    0        struct .
  2386 ;;  width           2   31[BANK0 ] int 
  2387 ;;  val             2   28[BANK0 ] unsigned int 
  2388 ;;  cp              2    0        PTR const unsigned char 
  2389 ;;  len             2    0        unsigned int 
  2390 ;;  c               1   33[BANK0 ] unsigned char 
  2391 ;;  flag            1   30[BANK0 ] unsigned char 
  2392 ;;  ap              1   27[BANK0 ] PTR void [1]
  2393 ;;		 -> ?_sprintf(2), 
  2394 ;;  prec            1   26[BANK0 ] char 
  2395 ;; Return value:  Size  Location     Type
  2396 ;;                  2   12[BANK0 ] int 
  2397 ;; Registers used:
  2398 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2399 ;; Tracked objects:
  2400 ;;		On entry : 0/0
  2401 ;;		On exit  : 0/0
  2402 ;;		Unchanged: 0/0
  2403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2404 ;;      Params:         0      10       0       0       0
  2405 ;;      Locals:         0       9       0       0       0
  2406 ;;      Temps:          0       4       0       0       0
  2407 ;;      Totals:         0      23       0       0       0
  2408 ;;Total ram usage:       23 bytes
  2409 ;; Hardware stack levels used: 1
  2410 ;; Hardware stack levels required when called: 3
  2411 ;; This function calls:
  2412 ;;		___lwdiv
  2413 ;;		___lwmod
  2414 ;;		___wmul
  2415 ;;		_isdigit
  2416 ;; This function is called by:
  2417 ;;		_main
  2418 ;; This function uses a non-reentrant model
  2419 ;;
  2420                           
  2421     09F6                     _sprintf:	
  2422                           ;psect for function _sprintf
  2423                           
  2424                           
  2425                           ;incstack = 0
  2426                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2427                           ;sprintf@sp stored from wreg
  2428     09F6  1283               	bcf	3,5	;RP0=0, select bank0
  2429     09F7  1303               	bcf	3,6	;RP1=0, select bank0
  2430     09F8  00C2               	movwf	sprintf@sp
  2431     09F9                     l3591:
  2432                           
  2433                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  2434     09F9  302E               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  2435     09FA  00BB               	movwf	sprintf@ap
  2436                           
  2437                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2438     09FB  2BD2               	goto	l3701
  2439     09FC                     l3593:
  2440                           
  2441                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2442     09FC  3025               	movlw	37
  2443     09FD  0641               	xorwf	sprintf@c,w
  2444     09FE  1903               	btfsc	3,2
  2445     09FF  2A01               	goto	u4771
  2446     0A00  2A02               	goto	u4770
  2447     0A01                     u4771:
  2448     0A01  2A0C               	goto	l3599
  2449     0A02                     u4770:
  2450     0A02                     l3595:
  2451                           
  2452                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2453     0A02  0842               	movf	sprintf@sp,w
  2454     0A03  0084               	movwf	4
  2455     0A04  0841               	movf	sprintf@c,w
  2456     0A05  1383               	bcf	3,7	;select IRP bank0
  2457     0A06  0080               	movwf	0
  2458     0A07                     l3597:
  2459     0A07  3001               	movlw	1
  2460     0A08  00FF               	movwf	btemp+1
  2461     0A09  087F               	movf	btemp+1,w
  2462     0A0A  07C2               	addwf	sprintf@sp,f
  2463                           
  2464                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 559:    continue;
  2465     0A0B  2BD2               	goto	l3701
  2466     0A0C                     l3599:
  2467                           
  2468                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2469     0A0C  01BF               	clrf	sprintf@width
  2470     0A0D  01C0               	clrf	sprintf@width+1
  2471                           
  2472                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2473     0A0E  01BE               	clrf	sprintf@flag
  2474     0A0F  2A17               	goto	l3605
  2475     0A10                     l368:	
  2476                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 596:    case '0':
  2477                           
  2478                           
  2479                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  2480     0A10  153E               	bsf	sprintf@flag,2
  2481     0A11                     l3601:
  2482                           
  2483                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 598:     f++;
  2484     0A11  3001               	movlw	1
  2485     0A12  07AC               	addwf	sprintf@f,f
  2486     0A13  1803               	skipnc
  2487     0A14  0AAD               	incf	sprintf@f+1,f
  2488     0A15  3000               	movlw	0
  2489     0A16  07AD               	addwf	sprintf@f+1,f
  2490     0A17                     l3605:	
  2491                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  2492                           
  2493     0A17  082D               	movf	sprintf@f+1,w
  2494     0A18  00FF               	movwf	btemp+1
  2495     0A19  082C               	movf	sprintf@f,w
  2496     0A1A  0084               	movwf	4
  2497     0A1B  160A  118A  2000  120A  158A  	fcall	stringtab
  2498     0A20  00B6               	movwf	??_sprintf
  2499     0A21  01B7               	clrf	??_sprintf+1
  2500                           
  2501                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2502                           ; Switch size 1, requested type "simple"
  2503                           ; Number of cases is 1, Range of values is 0 to 0
  2504                           ; switch strategies available:
  2505                           ; Name         Instructions Cycles
  2506                           ; simple_byte            4     3 (average)
  2507                           ; direct_byte           11     8 (fixed)
  2508                           ; jumptable            260     6 (fixed)
  2509                           ;	Chosen strategy is simple_byte
  2510     0A22  0837               	movf	??_sprintf+1,w
  2511     0A23  3A00               	xorlw	0	; case 0
  2512     0A24  1903               	skipnz
  2513     0A25  2A27               	goto	l4201
  2514     0A26  2A2C               	goto	l3607
  2515     0A27                     l4201:
  2516                           
  2517                           ; Switch size 1, requested type "simple"
  2518                           ; Number of cases is 1, Range of values is 48 to 48
  2519                           ; switch strategies available:
  2520                           ; Name         Instructions Cycles
  2521                           ; simple_byte            4     3 (average)
  2522                           ; direct_byte           14    11 (fixed)
  2523                           ; jumptable            263     9 (fixed)
  2524                           ;	Chosen strategy is simple_byte
  2525     0A27  0836               	movf	??_sprintf,w
  2526     0A28  3A30               	xorlw	48	; case 48
  2527     0A29  1903               	skipnz
  2528     0A2A  2A10               	goto	l368
  2529     0A2B  2A2C               	goto	l3607
  2530     0A2C                     l3607:
  2531                           
  2532                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  2533     0A2C  082D               	movf	sprintf@f+1,w
  2534     0A2D  00FF               	movwf	btemp+1
  2535     0A2E  082C               	movf	sprintf@f,w
  2536     0A2F  0084               	movwf	4
  2537     0A30  160A  118A  2000  120A  158A  	fcall	stringtab
  2538     0A35  160A  118A  2188  120A  158A  	fcall	_isdigit
  2539     0A3A  1C03               	btfss	3,0
  2540     0A3B  2A3D               	goto	u4781
  2541     0A3C  2A3E               	goto	u4780
  2542     0A3D                     u4781:
  2543     0A3D  2A87               	goto	l3621
  2544     0A3E                     u4780:
  2545     0A3E                     l3609:
  2546                           
  2547                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2548     0A3E  1283               	bcf	3,5	;RP0=0, select bank0
  2549     0A3F  1303               	bcf	3,6	;RP1=0, select bank0
  2550     0A40  01BF               	clrf	sprintf@width
  2551     0A41  01C0               	clrf	sprintf@width+1
  2552     0A42                     l3611:
  2553                           
  2554                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2555     0A42  300A               	movlw	10
  2556     0A43  1283               	bcf	3,5	;RP0=0, select bank0
  2557     0A44  1303               	bcf	3,6	;RP1=0, select bank0
  2558     0A45  00A4               	movwf	___wmul@multiplier
  2559     0A46  3000               	movlw	0
  2560     0A47  00A5               	movwf	___wmul@multiplier+1
  2561     0A48  0840               	movf	sprintf@width+1,w
  2562     0A49  00A7               	movwf	___wmul@multiplicand+1
  2563     0A4A  083F               	movf	sprintf@width,w
  2564     0A4B  00A6               	movwf	___wmul@multiplicand
  2565     0A4C  120A  158A  2000  120A  158A  	fcall	___wmul
  2566     0A51  1283               	bcf	3,5	;RP0=0, select bank0
  2567     0A52  1303               	bcf	3,6	;RP1=0, select bank0
  2568     0A53  0825               	movf	?___wmul+1,w
  2569     0A54  00C0               	movwf	sprintf@width+1
  2570     0A55  0824               	movf	?___wmul,w
  2571     0A56  00BF               	movwf	sprintf@width
  2572     0A57                     l3613:
  2573                           
  2574                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2575     0A57  082D               	movf	sprintf@f+1,w
  2576     0A58  00FF               	movwf	btemp+1
  2577     0A59  082C               	movf	sprintf@f,w
  2578     0A5A  0084               	movwf	4
  2579     0A5B  160A  118A  2000  120A  158A  	fcall	stringtab
  2580     0A60  3ED0               	addlw	208
  2581     0A61  00B6               	movwf	??_sprintf
  2582     0A62  30FF               	movlw	255
  2583     0A63  1803               	skipnc
  2584     0A64  3000               	movlw	0
  2585     0A65  00B7               	movwf	??_sprintf+1
  2586     0A66  0836               	movf	??_sprintf,w
  2587     0A67  07BF               	addwf	sprintf@width,f
  2588     0A68  1803               	skipnc
  2589     0A69  0AC0               	incf	sprintf@width+1,f
  2590     0A6A  0837               	movf	??_sprintf+1,w
  2591     0A6B  07C0               	addwf	sprintf@width+1,f
  2592     0A6C                     l3615:
  2593     0A6C  3001               	movlw	1
  2594     0A6D  07AC               	addwf	sprintf@f,f
  2595     0A6E  1803               	skipnc
  2596     0A6F  0AAD               	incf	sprintf@f+1,f
  2597     0A70  3000               	movlw	0
  2598     0A71  07AD               	addwf	sprintf@f+1,f
  2599     0A72                     l3617:
  2600                           
  2601                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2602     0A72  082D               	movf	sprintf@f+1,w
  2603     0A73  00FF               	movwf	btemp+1
  2604     0A74  082C               	movf	sprintf@f,w
  2605     0A75  0084               	movwf	4
  2606     0A76  160A  118A  2000  120A  158A  	fcall	stringtab
  2607     0A7B  160A  118A  2188  120A  158A  	fcall	_isdigit
  2608     0A80  1803               	btfsc	3,0
  2609     0A81  2A83               	goto	u4791
  2610     0A82  2A84               	goto	u4790
  2611     0A83                     u4791:
  2612     0A83  2A42               	goto	l3611
  2613     0A84                     u4790:
  2614     0A84  2A87               	goto	l3621
  2615     0A85                     l382:	
  2616                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 843:   case 'u':
  2617                           
  2618                           
  2619                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          x40;
  2620     0A85  173E               	bsf	sprintf@flag,6
  2621                           
  2622                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 845:    break;
  2623     0A86  2AAF               	goto	l380
  2624     0A87                     l3621:
  2625     0A87  1283               	bcf	3,5	;RP0=0, select bank0
  2626     0A88  1303               	bcf	3,6	;RP1=0, select bank0
  2627     0A89  082D               	movf	sprintf@f+1,w
  2628     0A8A  00B7               	movwf	??_sprintf+1
  2629     0A8B  082C               	movf	sprintf@f,w
  2630     0A8C  00B6               	movwf	??_sprintf
  2631     0A8D  0AAC               	incf	sprintf@f,f
  2632     0A8E  1903               	skipnz
  2633     0A8F  0AAD               	incf	sprintf@f+1,f
  2634     0A90  0837               	movf	??_sprintf+1,w
  2635     0A91  00FF               	movwf	btemp+1
  2636     0A92  0836               	movf	??_sprintf,w
  2637     0A93  0084               	movwf	4
  2638     0A94  160A  118A  2000  120A  158A  	fcall	stringtab
  2639     0A99  00C1               	movwf	sprintf@c
  2640     0A9A  00B8               	movwf	??_sprintf+2
  2641     0A9B  01B9               	clrf	??_sprintf+3
  2642                           
  2643                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2644                           ; Switch size 1, requested type "simple"
  2645                           ; Number of cases is 1, Range of values is 0 to 0
  2646                           ; switch strategies available:
  2647                           ; Name         Instructions Cycles
  2648                           ; simple_byte            4     3 (average)
  2649                           ; direct_byte           11     8 (fixed)
  2650                           ; jumptable            260     6 (fixed)
  2651                           ;	Chosen strategy is simple_byte
  2652     0A9C  0839               	movf	??_sprintf+3,w
  2653     0A9D  3A00               	xorlw	0	; case 0
  2654     0A9E  1903               	skipnz
  2655     0A9F  2AA1               	goto	l4203
  2656     0AA0  2BD2               	goto	l3701
  2657     0AA1                     l4203:
  2658                           
  2659                           ; Switch size 1, requested type "simple"
  2660                           ; Number of cases is 4, Range of values is 0 to 117
  2661                           ; switch strategies available:
  2662                           ; Name         Instructions Cycles
  2663                           ; simple_byte           13     7 (average)
  2664                           ; jumptable            260     6 (fixed)
  2665                           ;	Chosen strategy is simple_byte
  2666     0AA1  0838               	movf	??_sprintf+2,w
  2667     0AA2  3A00               	xorlw	0	; case 0
  2668     0AA3  1903               	skipnz
  2669     0AA4  2BE8               	goto	l3703
  2670     0AA5  3A64               	xorlw	100	; case 100
  2671     0AA6  1903               	skipnz
  2672     0AA7  2AAF               	goto	l380
  2673     0AA8  3A0D               	xorlw	13	; case 105
  2674     0AA9  1903               	skipnz
  2675     0AAA  2AAF               	goto	l380
  2676     0AAB  3A1C               	xorlw	28	; case 117
  2677     0AAC  1903               	skipnz
  2678     0AAD  2A85               	goto	l382
  2679     0AAE  2BD2               	goto	l3701
  2680     0AAF                     l380:
  2681                           
  2682                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1277:   if((flag 
      +                          & 0x40) == 0x00)
  2683     0AAF  1B3E               	btfsc	sprintf@flag,6
  2684     0AB0  2AB2               	goto	u4801
  2685     0AB1  2AB3               	goto	u4800
  2686     0AB2                     u4801:
  2687     0AB2  2ACD               	goto	l3633
  2688     0AB3                     u4800:
  2689     0AB3                     l3623:
  2690                           
  2691                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2692     0AB3  083B               	movf	sprintf@ap,w
  2693     0AB4  0084               	movwf	4
  2694     0AB5  1383               	bcf	3,7	;select IRP bank0
  2695     0AB6  0800               	movf	0,w
  2696     0AB7  00BC               	movwf	sprintf@val
  2697     0AB8  0A84               	incf	4,f
  2698     0AB9  0800               	movf	0,w
  2699     0ABA  00BD               	movwf	sprintf@val+1
  2700     0ABB                     l3625:
  2701     0ABB  3002               	movlw	2
  2702     0ABC  00FF               	movwf	btemp+1
  2703     0ABD  087F               	movf	btemp+1,w
  2704     0ABE  07BB               	addwf	sprintf@ap,f
  2705     0ABF                     l3627:
  2706                           
  2707                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2708     0ABF  1FBD               	btfss	sprintf@val+1,7
  2709     0AC0  2AC2               	goto	u4811
  2710     0AC1  2AC3               	goto	u4810
  2711     0AC2                     u4811:
  2712     0AC2  2AD9               	goto	l3637
  2713     0AC3                     u4810:
  2714     0AC3                     l3629:
  2715                           
  2716                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2717     0AC3  3003               	movlw	3
  2718     0AC4  00FF               	movwf	btemp+1
  2719     0AC5  087F               	movf	btemp+1,w
  2720     0AC6  04BE               	iorwf	sprintf@flag,f
  2721     0AC7                     l3631:
  2722                           
  2723                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2724     0AC7  09BC               	comf	sprintf@val,f
  2725     0AC8  09BD               	comf	sprintf@val+1,f
  2726     0AC9  0ABC               	incf	sprintf@val,f
  2727     0ACA  1903               	skipnz
  2728     0ACB  0ABD               	incf	sprintf@val+1,f
  2729     0ACC  2AD9               	goto	l3637
  2730     0ACD                     l3633:
  2731                           
  2732                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2733     0ACD  083B               	movf	sprintf@ap,w
  2734     0ACE  0084               	movwf	4
  2735     0ACF  1383               	bcf	3,7	;select IRP bank0
  2736     0AD0  0800               	movf	0,w
  2737     0AD1  00BC               	movwf	sprintf@val
  2738     0AD2  0A84               	incf	4,f
  2739     0AD3  0800               	movf	0,w
  2740     0AD4  00BD               	movwf	sprintf@val+1
  2741     0AD5                     l3635:
  2742     0AD5  3002               	movlw	2
  2743     0AD6  00FF               	movwf	btemp+1
  2744     0AD7  087F               	movf	btemp+1,w
  2745     0AD8  07BB               	addwf	sprintf@ap,f
  2746     0AD9                     l3637:
  2747                           
  2748                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2749     0AD9  01C1               	clrf	sprintf@c
  2750     0ADA  0AC1               	incf	sprintf@c,f
  2751     0ADB                     l3643:
  2752                           
  2753                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2754     0ADB  0841               	movf	sprintf@c,w
  2755     0ADC  00B6               	movwf	??_sprintf
  2756     0ADD  0736               	addwf	??_sprintf,w
  2757     0ADE  3E12               	addlw	low (_dpowers| (0+32768))
  2758     0ADF  0084               	movwf	4
  2759     0AE0  3090               	movlw	high (_dpowers| (0+32768))
  2760     0AE1  1803               	skipnc
  2761     0AE2  3E01               	addlw	1
  2762     0AE3  00FF               	movwf	btemp+1
  2763     0AE4  160A  118A  2000  120A  158A  	fcall	stringtab
  2764     0AE9  00B7               	movwf	??_sprintf+1
  2765     0AEA  160A  118A  2000  120A  158A  	fcall	stringtab
  2766     0AEF  00B8               	movwf	??_sprintf+2
  2767     0AF0  0838               	movf	??_sprintf+2,w
  2768     0AF1  023D               	subwf	sprintf@val+1,w
  2769     0AF2  1D03               	skipz
  2770     0AF3  2AF6               	goto	u4825
  2771     0AF4  0837               	movf	??_sprintf+1,w
  2772     0AF5  023C               	subwf	sprintf@val,w
  2773     0AF6                     u4825:
  2774     0AF6  1803               	skipnc
  2775     0AF7  2AF9               	goto	u4821
  2776     0AF8  2AFA               	goto	u4820
  2777     0AF9                     u4821:
  2778     0AF9  2AFB               	goto	l3647
  2779     0AFA                     u4820:
  2780     0AFA  2B05               	goto	l3651
  2781     0AFB                     l3647:
  2782     0AFB  3001               	movlw	1
  2783     0AFC  00FF               	movwf	btemp+1
  2784     0AFD  087F               	movf	btemp+1,w
  2785     0AFE  07C1               	addwf	sprintf@c,f
  2786     0AFF                     l3649:
  2787     0AFF  3005               	movlw	5
  2788     0B00  0641               	xorwf	sprintf@c,w
  2789     0B01  1D03               	btfss	3,2
  2790     0B02  2B04               	goto	u4831
  2791     0B03  2B05               	goto	u4830
  2792     0B04                     u4831:
  2793     0B04  2ADB               	goto	l3643
  2794     0B05                     u4830:
  2795     0B05                     l3651:
  2796                           
  2797                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  2798     0B05  083F               	movf	sprintf@width,w
  2799     0B06  0440               	iorwf	sprintf@width+1,w
  2800     0B07  1903               	btfsc	3,2
  2801     0B08  2B0A               	goto	u4841
  2802     0B09  2B0B               	goto	u4840
  2803     0B0A                     u4841:
  2804     0B0A  2B17               	goto	l389
  2805     0B0B                     u4840:
  2806     0B0B                     l3653:
  2807     0B0B  083E               	movf	sprintf@flag,w
  2808     0B0C  3903               	andlw	3
  2809     0B0D  1903               	btfsc	3,2
  2810     0B0E  2B10               	goto	u4851
  2811     0B0F  2B11               	goto	u4850
  2812     0B10                     u4851:
  2813     0B10  2B17               	goto	l389
  2814     0B11                     u4850:
  2815     0B11                     l3655:
  2816                           
  2817                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1372:    width--;
  2818     0B11  30FF               	movlw	255
  2819     0B12  07BF               	addwf	sprintf@width,f
  2820     0B13  1803               	skipnc
  2821     0B14  0AC0               	incf	sprintf@width+1,f
  2822     0B15  30FF               	movlw	255
  2823     0B16  07C0               	addwf	sprintf@width+1,f
  2824     0B17                     l389:
  2825                           
  2826                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  2827     0B17  0840               	movf	sprintf@width+1,w
  2828     0B18  3A80               	xorlw	128
  2829     0B19  3C80               	sublw	128
  2830     0B1A  1D03               	skipz
  2831     0B1B  2B1E               	goto	u4865
  2832     0B1C  083F               	movf	sprintf@width,w
  2833     0B1D  0241               	subwf	sprintf@c,w
  2834     0B1E                     u4865:
  2835     0B1E  1803               	skipnc
  2836     0B1F  2B21               	goto	u4861
  2837     0B20  2B22               	goto	u4860
  2838     0B21                     u4861:
  2839     0B21  2B2E               	goto	l3659
  2840     0B22                     u4860:
  2841     0B22                     l3657:
  2842                           
  2843                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  2844     0B22  1283               	bcf	3,5	;RP0=0, select bank0
  2845     0B23  1303               	bcf	3,6	;RP1=0, select bank0
  2846     0B24  0841               	movf	sprintf@c,w
  2847     0B25  00B6               	movwf	??_sprintf
  2848     0B26  01B7               	clrf	??_sprintf+1
  2849     0B27  0836               	movf	??_sprintf,w
  2850     0B28  02BF               	subwf	sprintf@width,f
  2851     0B29  0837               	movf	??_sprintf+1,w
  2852     0B2A  1C03               	skipc
  2853     0B2B  03C0               	decf	sprintf@width+1,f
  2854     0B2C  02C0               	subwf	sprintf@width+1,f
  2855     0B2D  2B32               	goto	l3661
  2856     0B2E                     l3659:
  2857                           
  2858                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  2859     0B2E  1283               	bcf	3,5	;RP0=0, select bank0
  2860     0B2F  1303               	bcf	3,6	;RP1=0, select bank0
  2861     0B30  01BF               	clrf	sprintf@width
  2862     0B31  01C0               	clrf	sprintf@width+1
  2863     0B32                     l3661:
  2864                           
  2865                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  2866     0B32  1D3E               	btfss	sprintf@flag,2
  2867     0B33  2B35               	goto	u4871
  2868     0B34  2B36               	goto	u4870
  2869     0B35                     u4871:
  2870     0B35  2B61               	goto	l3677
  2871     0B36                     u4870:
  2872     0B36                     l3663:
  2873                           
  2874                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1418:    if(flag 
      +                          & 0x03)
  2875     0B36  083E               	movf	sprintf@flag,w
  2876     0B37  3903               	andlw	3
  2877     0B38  1903               	btfsc	3,2
  2878     0B39  2B3B               	goto	u4881
  2879     0B3A  2B3C               	goto	u4880
  2880     0B3B                     u4881:
  2881     0B3B  2B45               	goto	l3669
  2882     0B3C                     u4880:
  2883     0B3C                     l3665:
  2884                           
  2885                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1419:     ((*sp++
      +                           = ('-')));
  2886     0B3C  0842               	movf	sprintf@sp,w
  2887     0B3D  0084               	movwf	4
  2888     0B3E  302D               	movlw	45
  2889     0B3F  1383               	bcf	3,7	;select IRP bank0
  2890     0B40  0080               	movwf	0
  2891     0B41                     l3667:
  2892     0B41  3001               	movlw	1
  2893     0B42  00FF               	movwf	btemp+1
  2894     0B43  087F               	movf	btemp+1,w
  2895     0B44  07C2               	addwf	sprintf@sp,f
  2896     0B45                     l3669:
  2897                           
  2898                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  2899     0B45  083F               	movf	sprintf@width,w
  2900     0B46  0440               	iorwf	sprintf@width+1,w
  2901     0B47  1903               	btfsc	3,2
  2902     0B48  2B4A               	goto	u4891
  2903     0B49  2B4B               	goto	u4890
  2904     0B4A                     u4891:
  2905     0B4A  2B8B               	goto	l3691
  2906     0B4B                     u4890:
  2907     0B4B                     l3671:
  2908                           
  2909                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
  2910     0B4B  0842               	movf	sprintf@sp,w
  2911     0B4C  0084               	movwf	4
  2912     0B4D  3030               	movlw	48
  2913     0B4E  1383               	bcf	3,7	;select IRP bank0
  2914     0B4F  0080               	movwf	0
  2915     0B50                     l3673:
  2916     0B50  3001               	movlw	1
  2917     0B51  00FF               	movwf	btemp+1
  2918     0B52  087F               	movf	btemp+1,w
  2919     0B53  07C2               	addwf	sprintf@sp,f
  2920     0B54                     l3675:
  2921     0B54  30FF               	movlw	255
  2922     0B55  07BF               	addwf	sprintf@width,f
  2923     0B56  1803               	skipnc
  2924     0B57  0AC0               	incf	sprintf@width+1,f
  2925     0B58  30FF               	movlw	255
  2926     0B59  07C0               	addwf	sprintf@width+1,f
  2927     0B5A  083F               	movf	sprintf@width,w
  2928     0B5B  0440               	iorwf	sprintf@width+1,w
  2929     0B5C  1D03               	btfss	3,2
  2930     0B5D  2B5F               	goto	u4901
  2931     0B5E  2B60               	goto	u4900
  2932     0B5F                     u4901:
  2933     0B5F  2B4B               	goto	l3671
  2934     0B60                     u4900:
  2935     0B60  2B8B               	goto	l3691
  2936     0B61                     l3677:
  2937                           
  2938                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1450:    if(width
  2939     0B61  083F               	movf	sprintf@width,w
  2940     0B62  0440               	iorwf	sprintf@width+1,w
  2941     0B63  1903               	btfsc	3,2
  2942     0B64  2B66               	goto	u4911
  2943     0B65  2B67               	goto	u4910
  2944     0B66                     u4911:
  2945     0B66  2B7C               	goto	l3685
  2946     0B67                     u4910:
  2947     0B67                     l3679:
  2948                           
  2949                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  2950     0B67  0842               	movf	sprintf@sp,w
  2951     0B68  0084               	movwf	4
  2952     0B69  3020               	movlw	32
  2953     0B6A  1383               	bcf	3,7	;select IRP bank0
  2954     0B6B  0080               	movwf	0
  2955     0B6C                     l3681:
  2956     0B6C  3001               	movlw	1
  2957     0B6D  00FF               	movwf	btemp+1
  2958     0B6E  087F               	movf	btemp+1,w
  2959     0B6F  07C2               	addwf	sprintf@sp,f
  2960     0B70                     l3683:
  2961     0B70  30FF               	movlw	255
  2962     0B71  07BF               	addwf	sprintf@width,f
  2963     0B72  1803               	skipnc
  2964     0B73  0AC0               	incf	sprintf@width+1,f
  2965     0B74  30FF               	movlw	255
  2966     0B75  07C0               	addwf	sprintf@width+1,f
  2967     0B76  083F               	movf	sprintf@width,w
  2968     0B77  0440               	iorwf	sprintf@width+1,w
  2969     0B78  1D03               	btfss	3,2
  2970     0B79  2B7B               	goto	u4921
  2971     0B7A  2B7C               	goto	u4920
  2972     0B7B                     u4921:
  2973     0B7B  2B67               	goto	l3679
  2974     0B7C                     u4920:
  2975     0B7C                     l3685:
  2976                           
  2977                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  2978     0B7C  083E               	movf	sprintf@flag,w
  2979     0B7D  3903               	andlw	3
  2980     0B7E  1903               	btfsc	3,2
  2981     0B7F  2B81               	goto	u4931
  2982     0B80  2B82               	goto	u4930
  2983     0B81                     u4931:
  2984     0B81  2B8B               	goto	l3691
  2985     0B82                     u4930:
  2986     0B82                     l3687:
  2987                           
  2988                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2989     0B82  0842               	movf	sprintf@sp,w
  2990     0B83  0084               	movwf	4
  2991     0B84  302D               	movlw	45
  2992     0B85  1383               	bcf	3,7	;select IRP bank0
  2993     0B86  0080               	movwf	0
  2994     0B87                     l3689:
  2995     0B87  3001               	movlw	1
  2996     0B88  00FF               	movwf	btemp+1
  2997     0B89  087F               	movf	btemp+1,w
  2998     0B8A  07C2               	addwf	sprintf@sp,f
  2999     0B8B                     l3691:
  3000                           
  3001                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  3002     0B8B  0841               	movf	sprintf@c,w
  3003     0B8C  00BA               	movwf	sprintf@prec
  3004                           
  3005                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3006     0B8D  2BC9               	goto	l3699
  3007     0B8E                     l3693:
  3008                           
  3009                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  3010     0B8E  300A               	movlw	10
  3011     0B8F  00A7               	movwf	___lwmod@divisor
  3012     0B90  3000               	movlw	0
  3013     0B91  00A8               	movwf	___lwmod@divisor+1
  3014     0B92  083A               	movf	sprintf@prec,w
  3015     0B93  00B6               	movwf	??_sprintf
  3016     0B94  0736               	addwf	??_sprintf,w
  3017     0B95  3E12               	addlw	low (_dpowers| (0+32768))
  3018     0B96  0084               	movwf	4
  3019     0B97  3090               	movlw	high (_dpowers| (0+32768))
  3020     0B98  1803               	skipnc
  3021     0B99  3E01               	addlw	1
  3022     0B9A  00FF               	movwf	btemp+1
  3023     0B9B  160A  118A  2000  120A  158A  	fcall	stringtab
  3024     0BA0  00A0               	movwf	___lwdiv@divisor
  3025     0BA1  160A  118A  2000  120A  158A  	fcall	stringtab
  3026     0BA6  00A1               	movwf	___lwdiv@divisor+1
  3027     0BA7  083D               	movf	sprintf@val+1,w
  3028     0BA8  00A3               	movwf	___lwdiv@dividend+1
  3029     0BA9  083C               	movf	sprintf@val,w
  3030     0BAA  00A2               	movwf	___lwdiv@dividend
  3031     0BAB  160A  118A  22E7  120A  158A  	fcall	___lwdiv
  3032     0BB0  1283               	bcf	3,5	;RP0=0, select bank0
  3033     0BB1  1303               	bcf	3,6	;RP1=0, select bank0
  3034     0BB2  0821               	movf	?___lwdiv+1,w
  3035     0BB3  00AA               	movwf	___lwmod@dividend+1
  3036     0BB4  0820               	movf	?___lwdiv,w
  3037     0BB5  00A9               	movwf	___lwmod@dividend
  3038     0BB6  160A  118A  2265  120A  158A  	fcall	___lwmod
  3039     0BBB  1283               	bcf	3,5	;RP0=0, select bank0
  3040     0BBC  1303               	bcf	3,6	;RP1=0, select bank0
  3041     0BBD  0827               	movf	?___lwmod,w
  3042     0BBE  3E30               	addlw	48
  3043     0BBF  00C1               	movwf	sprintf@c
  3044     0BC0                     l3695:
  3045                           
  3046                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  3047     0BC0  0842               	movf	sprintf@sp,w
  3048     0BC1  0084               	movwf	4
  3049     0BC2  0841               	movf	sprintf@c,w
  3050     0BC3  1383               	bcf	3,7	;select IRP bank0
  3051     0BC4  0080               	movwf	0
  3052     0BC5                     l3697:
  3053     0BC5  3001               	movlw	1
  3054     0BC6  00FF               	movwf	btemp+1
  3055     0BC7  087F               	movf	btemp+1,w
  3056     0BC8  07C2               	addwf	sprintf@sp,f
  3057     0BC9                     l3699:
  3058                           
  3059                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3060     0BC9  30FF               	movlw	255
  3061     0BCA  00FF               	movwf	btemp+1
  3062     0BCB  087F               	movf	btemp+1,w
  3063     0BCC  07BA               	addwf	sprintf@prec,f
  3064     0BCD  0A3A               	incf	sprintf@prec,w
  3065     0BCE  1D03               	btfss	3,2
  3066     0BCF  2BD1               	goto	u4941
  3067     0BD0  2BD2               	goto	u4940
  3068     0BD1                     u4941:
  3069     0BD1  2B8E               	goto	l3693
  3070     0BD2                     u4940:
  3071     0BD2                     l3701:
  3072                           
  3073                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3074     0BD2  082D               	movf	sprintf@f+1,w
  3075     0BD3  00B7               	movwf	??_sprintf+1
  3076     0BD4  082C               	movf	sprintf@f,w
  3077     0BD5  00B6               	movwf	??_sprintf
  3078     0BD6  0AAC               	incf	sprintf@f,f
  3079     0BD7  1903               	skipnz
  3080     0BD8  0AAD               	incf	sprintf@f+1,f
  3081     0BD9  0837               	movf	??_sprintf+1,w
  3082     0BDA  00FF               	movwf	btemp+1
  3083     0BDB  0836               	movf	??_sprintf,w
  3084     0BDC  0084               	movwf	4
  3085     0BDD  160A  118A  2000  120A  158A  	fcall	stringtab
  3086     0BE2  00C1               	movwf	sprintf@c
  3087     0BE3  0841               	movf	sprintf@c,w
  3088     0BE4  1D03               	btfss	3,2
  3089     0BE5  2BE7               	goto	u4951
  3090     0BE6  2BE8               	goto	u4950
  3091     0BE7                     u4951:
  3092     0BE7  29FC               	goto	l3593
  3093     0BE8                     u4950:
  3094     0BE8                     l3703:
  3095                           
  3096                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3097     0BE8  0842               	movf	sprintf@sp,w
  3098     0BE9  0084               	movwf	4
  3099     0BEA  1383               	bcf	3,7	;select IRP bank0
  3100     0BEB  0180               	clrf	0
  3101     0BEC                     l406:
  3102     0BEC  0008               	return
  3103     0BED                     __end_of_sprintf:
  3104                           
  3105                           	psect	text7
  3106     1188                     __ptext7:	
  3107 ;; *************** function _isdigit *****************
  3108 ;; Defined at:
  3109 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\isdigit.c"
  3110 ;; Parameters:    Size  Location     Type
  3111 ;;  c               1    wreg     unsigned char 
  3112 ;; Auto vars:     Size  Location     Type
  3113 ;;  c               1    1[BANK0 ] unsigned char 
  3114 ;; Return value:  Size  Location     Type
  3115 ;;		None               void
  3116 ;; Registers used:
  3117 ;;		wreg, status,2, status,0
  3118 ;; Tracked objects:
  3119 ;;		On entry : 0/0
  3120 ;;		On exit  : 0/0
  3121 ;;		Unchanged: 0/0
  3122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3123 ;;      Params:         0       0       0       0       0
  3124 ;;      Locals:         0       2       0       0       0
  3125 ;;      Temps:          0       0       0       0       0
  3126 ;;      Totals:         0       2       0       0       0
  3127 ;;Total ram usage:        2 bytes
  3128 ;; Hardware stack levels used: 1
  3129 ;; Hardware stack levels required when called: 2
  3130 ;; This function calls:
  3131 ;;		Nothing
  3132 ;; This function is called by:
  3133 ;;		_sprintf
  3134 ;; This function uses a non-reentrant model
  3135 ;;
  3136                           
  3137     1188                     _isdigit:	
  3138                           ;psect for function _isdigit
  3139                           
  3140                           
  3141                           ;incstack = 0
  3142                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3143                           ;isdigit@c stored from wreg
  3144     1188  1283               	bcf	3,5	;RP0=0, select bank0
  3145     1189  1303               	bcf	3,6	;RP1=0, select bank0
  3146     118A  00A1               	movwf	isdigit@c
  3147     118B                     l3471:
  3148     118B  01A0               	clrf	_isdigit$836
  3149     118C                     l3473:
  3150     118C  303A               	movlw	58
  3151     118D  0221               	subwf	isdigit@c,w
  3152     118E  1803               	skipnc
  3153     118F  2991               	goto	u4541
  3154     1190  2992               	goto	u4540
  3155     1191                     u4541:
  3156     1191  299A               	goto	l3479
  3157     1192                     u4540:
  3158     1192                     l3475:
  3159     1192  3030               	movlw	48
  3160     1193  0221               	subwf	isdigit@c,w
  3161     1194  1C03               	skipc
  3162     1195  2997               	goto	u4551
  3163     1196  2998               	goto	u4550
  3164     1197                     u4551:
  3165     1197  299A               	goto	l3479
  3166     1198                     u4550:
  3167     1198                     l3477:
  3168     1198  01A0               	clrf	_isdigit$836
  3169     1199  0AA0               	incf	_isdigit$836,f
  3170     119A                     l3479:
  3171     119A  0C20               	rrf	_isdigit$836,w
  3172     119B                     l863:
  3173     119B  0008               	return
  3174     119C                     __end_of_isdigit:
  3175                           
  3176                           	psect	text8
  3177     0800                     __ptext8:	
  3178 ;; *************** function ___wmul *****************
  3179 ;; Defined at:
  3180 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  3181 ;; Parameters:    Size  Location     Type
  3182 ;;  multiplier      2    4[BANK0 ] unsigned int 
  3183 ;;  multiplicand    2    6[BANK0 ] unsigned int 
  3184 ;; Auto vars:     Size  Location     Type
  3185 ;;  product         2    8[BANK0 ] unsigned int 
  3186 ;; Return value:  Size  Location     Type
  3187 ;;                  2    4[BANK0 ] unsigned int 
  3188 ;; Registers used:
  3189 ;;		wreg, status,2, status,0
  3190 ;; Tracked objects:
  3191 ;;		On entry : 0/0
  3192 ;;		On exit  : 0/0
  3193 ;;		Unchanged: 0/0
  3194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3195 ;;      Params:         0       4       0       0       0
  3196 ;;      Locals:         0       2       0       0       0
  3197 ;;      Temps:          0       0       0       0       0
  3198 ;;      Totals:         0       6       0       0       0
  3199 ;;Total ram usage:        6 bytes
  3200 ;; Hardware stack levels used: 1
  3201 ;; Hardware stack levels required when called: 2
  3202 ;; This function calls:
  3203 ;;		Nothing
  3204 ;; This function is called by:
  3205 ;;		_main
  3206 ;;		_sprintf
  3207 ;; This function uses a non-reentrant model
  3208 ;;
  3209                           
  3210     0800                     ___wmul:	
  3211                           ;psect for function ___wmul
  3212                           
  3213     0800                     l3483:	
  3214                           ;incstack = 0
  3215                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3216                           
  3217     0800  1283               	bcf	3,5	;RP0=0, select bank0
  3218     0801  1303               	bcf	3,6	;RP1=0, select bank0
  3219     0802  01A8               	clrf	___wmul@product
  3220     0803  01A9               	clrf	___wmul@product+1
  3221     0804                     l3485:
  3222     0804  1C24               	btfss	___wmul@multiplier,0
  3223     0805  2807               	goto	u4561
  3224     0806  2808               	goto	u4560
  3225     0807                     u4561:
  3226     0807  280E               	goto	l410
  3227     0808                     u4560:
  3228     0808                     l3487:
  3229     0808  0826               	movf	___wmul@multiplicand,w
  3230     0809  07A8               	addwf	___wmul@product,f
  3231     080A  1803               	skipnc
  3232     080B  0AA9               	incf	___wmul@product+1,f
  3233     080C  0827               	movf	___wmul@multiplicand+1,w
  3234     080D  07A9               	addwf	___wmul@product+1,f
  3235     080E                     l410:
  3236     080E  3001               	movlw	1
  3237     080F                     u4575:
  3238     080F  1003               	clrc
  3239     0810  0DA6               	rlf	___wmul@multiplicand,f
  3240     0811  0DA7               	rlf	___wmul@multiplicand+1,f
  3241     0812  3EFF               	addlw	-1
  3242     0813  1D03               	skipz
  3243     0814  280F               	goto	u4575
  3244     0815                     l3489:
  3245     0815  3001               	movlw	1
  3246     0816                     u4585:
  3247     0816  1003               	clrc
  3248     0817  0CA5               	rrf	___wmul@multiplier+1,f
  3249     0818  0CA4               	rrf	___wmul@multiplier,f
  3250     0819  3EFF               	addlw	-1
  3251     081A  1D03               	skipz
  3252     081B  2816               	goto	u4585
  3253     081C                     l3491:
  3254     081C  0824               	movf	___wmul@multiplier,w
  3255     081D  0425               	iorwf	___wmul@multiplier+1,w
  3256     081E  1D03               	btfss	3,2
  3257     081F  2821               	goto	u4591
  3258     0820  2822               	goto	u4590
  3259     0821                     u4591:
  3260     0821  2804               	goto	l3485
  3261     0822                     u4590:
  3262     0822                     l3493:
  3263     0822  0829               	movf	___wmul@product+1,w
  3264     0823  00A5               	movwf	?___wmul+1
  3265     0824  0828               	movf	___wmul@product,w
  3266     0825  00A4               	movwf	?___wmul
  3267     0826                     l412:
  3268     0826  0008               	return
  3269     0827                     __end_of___wmul:
  3270                           
  3271                           	psect	text9
  3272     1265                     __ptext9:	
  3273 ;; *************** function ___lwmod *****************
  3274 ;; Defined at:
  3275 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  3276 ;; Parameters:    Size  Location     Type
  3277 ;;  divisor         2    7[BANK0 ] unsigned int 
  3278 ;;  dividend        2    9[BANK0 ] unsigned int 
  3279 ;; Auto vars:     Size  Location     Type
  3280 ;;  counter         1   11[BANK0 ] unsigned char 
  3281 ;; Return value:  Size  Location     Type
  3282 ;;                  2    7[BANK0 ] unsigned int 
  3283 ;; Registers used:
  3284 ;;		wreg, status,2, status,0, btemp+1
  3285 ;; Tracked objects:
  3286 ;;		On entry : 0/0
  3287 ;;		On exit  : 0/0
  3288 ;;		Unchanged: 0/0
  3289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3290 ;;      Params:         0       4       0       0       0
  3291 ;;      Locals:         0       1       0       0       0
  3292 ;;      Temps:          0       0       0       0       0
  3293 ;;      Totals:         0       5       0       0       0
  3294 ;;Total ram usage:        5 bytes
  3295 ;; Hardware stack levels used: 1
  3296 ;; Hardware stack levels required when called: 2
  3297 ;; This function calls:
  3298 ;;		Nothing
  3299 ;; This function is called by:
  3300 ;;		_sprintf
  3301 ;; This function uses a non-reentrant model
  3302 ;;
  3303                           
  3304     1265                     ___lwmod:	
  3305                           ;psect for function ___lwmod
  3306                           
  3307     1265                     l3523:	
  3308                           ;incstack = 0
  3309                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  3310                           
  3311     1265  1283               	bcf	3,5	;RP0=0, select bank0
  3312     1266  1303               	bcf	3,6	;RP1=0, select bank0
  3313     1267  0827               	movf	___lwmod@divisor,w
  3314     1268  0428               	iorwf	___lwmod@divisor+1,w
  3315     1269  1903               	btfsc	3,2
  3316     126A  2A6C               	goto	u4671
  3317     126B  2A6D               	goto	u4670
  3318     126C                     u4671:
  3319     126C  2A9C               	goto	l3541
  3320     126D                     u4670:
  3321     126D                     l3525:
  3322     126D  01AB               	clrf	___lwmod@counter
  3323     126E  0AAB               	incf	___lwmod@counter,f
  3324     126F  2A7B               	goto	l3531
  3325     1270                     l3527:
  3326     1270  3001               	movlw	1
  3327     1271                     u4685:
  3328     1271  1003               	clrc
  3329     1272  0DA7               	rlf	___lwmod@divisor,f
  3330     1273  0DA8               	rlf	___lwmod@divisor+1,f
  3331     1274  3EFF               	addlw	-1
  3332     1275  1D03               	skipz
  3333     1276  2A71               	goto	u4685
  3334     1277                     l3529:
  3335     1277  3001               	movlw	1
  3336     1278  00FF               	movwf	btemp+1
  3337     1279  087F               	movf	btemp+1,w
  3338     127A  07AB               	addwf	___lwmod@counter,f
  3339     127B                     l3531:
  3340     127B  1FA8               	btfss	___lwmod@divisor+1,7
  3341     127C  2A7E               	goto	u4691
  3342     127D  2A7F               	goto	u4690
  3343     127E                     u4691:
  3344     127E  2A70               	goto	l3527
  3345     127F                     u4690:
  3346     127F                     l3533:
  3347     127F  0828               	movf	___lwmod@divisor+1,w
  3348     1280  022A               	subwf	___lwmod@dividend+1,w
  3349     1281  1D03               	skipz
  3350     1282  2A85               	goto	u4705
  3351     1283  0827               	movf	___lwmod@divisor,w
  3352     1284  0229               	subwf	___lwmod@dividend,w
  3353     1285                     u4705:
  3354     1285  1C03               	skipc
  3355     1286  2A88               	goto	u4701
  3356     1287  2A89               	goto	u4700
  3357     1288                     u4701:
  3358     1288  2A8F               	goto	l3537
  3359     1289                     u4700:
  3360     1289                     l3535:
  3361     1289  0827               	movf	___lwmod@divisor,w
  3362     128A  02A9               	subwf	___lwmod@dividend,f
  3363     128B  0828               	movf	___lwmod@divisor+1,w
  3364     128C  1C03               	skipc
  3365     128D  03AA               	decf	___lwmod@dividend+1,f
  3366     128E  02AA               	subwf	___lwmod@dividend+1,f
  3367     128F                     l3537:
  3368     128F  3001               	movlw	1
  3369     1290                     u4715:
  3370     1290  1003               	clrc
  3371     1291  0CA8               	rrf	___lwmod@divisor+1,f
  3372     1292  0CA7               	rrf	___lwmod@divisor,f
  3373     1293  3EFF               	addlw	-1
  3374     1294  1D03               	skipz
  3375     1295  2A90               	goto	u4715
  3376     1296                     l3539:
  3377     1296  3001               	movlw	1
  3378     1297  02AB               	subwf	___lwmod@counter,f
  3379     1298  1D03               	btfss	3,2
  3380     1299  2A9B               	goto	u4721
  3381     129A  2A9C               	goto	u4720
  3382     129B                     u4721:
  3383     129B  2A7F               	goto	l3533
  3384     129C                     u4720:
  3385     129C                     l3541:
  3386     129C  082A               	movf	___lwmod@dividend+1,w
  3387     129D  00A8               	movwf	?___lwmod+1
  3388     129E  0829               	movf	___lwmod@dividend,w
  3389     129F  00A7               	movwf	?___lwmod
  3390     12A0                     l692:
  3391     12A0  0008               	return
  3392     12A1                     __end_of___lwmod:
  3393                           
  3394                           	psect	text10
  3395     12E7                     __ptext10:	
  3396 ;; *************** function ___lwdiv *****************
  3397 ;; Defined at:
  3398 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  3399 ;; Parameters:    Size  Location     Type
  3400 ;;  divisor         2    0[BANK0 ] unsigned int 
  3401 ;;  dividend        2    2[BANK0 ] unsigned int 
  3402 ;; Auto vars:     Size  Location     Type
  3403 ;;  quotient        2    5[BANK0 ] unsigned int 
  3404 ;;  counter         1    4[BANK0 ] unsigned char 
  3405 ;; Return value:  Size  Location     Type
  3406 ;;                  2    0[BANK0 ] unsigned int 
  3407 ;; Registers used:
  3408 ;;		wreg, status,2, status,0, btemp+1
  3409 ;; Tracked objects:
  3410 ;;		On entry : 0/0
  3411 ;;		On exit  : 0/0
  3412 ;;		Unchanged: 0/0
  3413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3414 ;;      Params:         0       4       0       0       0
  3415 ;;      Locals:         0       3       0       0       0
  3416 ;;      Temps:          0       0       0       0       0
  3417 ;;      Totals:         0       7       0       0       0
  3418 ;;Total ram usage:        7 bytes
  3419 ;; Hardware stack levels used: 1
  3420 ;; Hardware stack levels required when called: 2
  3421 ;; This function calls:
  3422 ;;		Nothing
  3423 ;; This function is called by:
  3424 ;;		_sprintf
  3425 ;; This function uses a non-reentrant model
  3426 ;;
  3427                           
  3428     12E7                     ___lwdiv:	
  3429                           ;psect for function ___lwdiv
  3430                           
  3431     12E7                     l3497:	
  3432                           ;incstack = 0
  3433                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  3434                           
  3435     12E7  1283               	bcf	3,5	;RP0=0, select bank0
  3436     12E8  1303               	bcf	3,6	;RP1=0, select bank0
  3437     12E9  01A5               	clrf	___lwdiv@quotient
  3438     12EA  01A6               	clrf	___lwdiv@quotient+1
  3439     12EB                     l3499:
  3440     12EB  0820               	movf	___lwdiv@divisor,w
  3441     12EC  0421               	iorwf	___lwdiv@divisor+1,w
  3442     12ED  1903               	btfsc	3,2
  3443     12EE  2AF0               	goto	u4601
  3444     12EF  2AF1               	goto	u4600
  3445     12F0                     u4601:
  3446     12F0  2B28               	goto	l3519
  3447     12F1                     u4600:
  3448     12F1                     l3501:
  3449     12F1  01A4               	clrf	___lwdiv@counter
  3450     12F2  0AA4               	incf	___lwdiv@counter,f
  3451     12F3  2AFF               	goto	l3507
  3452     12F4                     l3503:
  3453     12F4  3001               	movlw	1
  3454     12F5                     u4615:
  3455     12F5  1003               	clrc
  3456     12F6  0DA0               	rlf	___lwdiv@divisor,f
  3457     12F7  0DA1               	rlf	___lwdiv@divisor+1,f
  3458     12F8  3EFF               	addlw	-1
  3459     12F9  1D03               	skipz
  3460     12FA  2AF5               	goto	u4615
  3461     12FB                     l3505:
  3462     12FB  3001               	movlw	1
  3463     12FC  00FF               	movwf	btemp+1
  3464     12FD  087F               	movf	btemp+1,w
  3465     12FE  07A4               	addwf	___lwdiv@counter,f
  3466     12FF                     l3507:
  3467     12FF  1FA1               	btfss	___lwdiv@divisor+1,7
  3468     1300  2B02               	goto	u4621
  3469     1301  2B03               	goto	u4620
  3470     1302                     u4621:
  3471     1302  2AF4               	goto	l3503
  3472     1303                     u4620:
  3473     1303                     l3509:
  3474     1303  3001               	movlw	1
  3475     1304                     u4635:
  3476     1304  1003               	clrc
  3477     1305  0DA5               	rlf	___lwdiv@quotient,f
  3478     1306  0DA6               	rlf	___lwdiv@quotient+1,f
  3479     1307  3EFF               	addlw	-1
  3480     1308  1D03               	skipz
  3481     1309  2B04               	goto	u4635
  3482     130A  0821               	movf	___lwdiv@divisor+1,w
  3483     130B  0223               	subwf	___lwdiv@dividend+1,w
  3484     130C  1D03               	skipz
  3485     130D  2B10               	goto	u4645
  3486     130E  0820               	movf	___lwdiv@divisor,w
  3487     130F  0222               	subwf	___lwdiv@dividend,w
  3488     1310                     u4645:
  3489     1310  1C03               	skipc
  3490     1311  2B13               	goto	u4641
  3491     1312  2B14               	goto	u4640
  3492     1313                     u4641:
  3493     1313  2B1B               	goto	l3515
  3494     1314                     u4640:
  3495     1314                     l3511:
  3496     1314  0820               	movf	___lwdiv@divisor,w
  3497     1315  02A2               	subwf	___lwdiv@dividend,f
  3498     1316  0821               	movf	___lwdiv@divisor+1,w
  3499     1317  1C03               	skipc
  3500     1318  03A3               	decf	___lwdiv@dividend+1,f
  3501     1319  02A3               	subwf	___lwdiv@dividend+1,f
  3502     131A                     l3513:
  3503     131A  1425               	bsf	___lwdiv@quotient,0
  3504     131B                     l3515:
  3505     131B  3001               	movlw	1
  3506     131C                     u4655:
  3507     131C  1003               	clrc
  3508     131D  0CA1               	rrf	___lwdiv@divisor+1,f
  3509     131E  0CA0               	rrf	___lwdiv@divisor,f
  3510     131F  3EFF               	addlw	-1
  3511     1320  1D03               	skipz
  3512     1321  2B1C               	goto	u4655
  3513     1322                     l3517:
  3514     1322  3001               	movlw	1
  3515     1323  02A4               	subwf	___lwdiv@counter,f
  3516     1324  1D03               	btfss	3,2
  3517     1325  2B27               	goto	u4661
  3518     1326  2B28               	goto	u4660
  3519     1327                     u4661:
  3520     1327  2B03               	goto	l3509
  3521     1328                     u4660:
  3522     1328                     l3519:
  3523     1328  0826               	movf	___lwdiv@quotient+1,w
  3524     1329  00A1               	movwf	?___lwdiv+1
  3525     132A  0825               	movf	___lwdiv@quotient,w
  3526     132B  00A0               	movwf	?___lwdiv
  3527     132C                     l682:
  3528     132C  0008               	return
  3529     132D                     __end_of___lwdiv:
  3530                           
  3531                           	psect	text11
  3532     119C                     __ptext11:	
  3533 ;; *************** function _readEEPROM *****************
  3534 ;; Defined at:
  3535 ;;		line 65 in file "main1.c"
  3536 ;; Parameters:    Size  Location     Type
  3537 ;;  address         2    0[BANK0 ] unsigned int 
  3538 ;; Auto vars:     Size  Location     Type
  3539 ;;		None
  3540 ;; Return value:  Size  Location     Type
  3541 ;;                  2    0[BANK0 ] unsigned int 
  3542 ;; Registers used:
  3543 ;;		wreg
  3544 ;; Tracked objects:
  3545 ;;		On entry : 0/0
  3546 ;;		On exit  : 0/0
  3547 ;;		Unchanged: 0/0
  3548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3549 ;;      Params:         0       2       0       0       0
  3550 ;;      Locals:         0       0       0       0       0
  3551 ;;      Temps:          0       2       0       0       0
  3552 ;;      Totals:         0       4       0       0       0
  3553 ;;Total ram usage:        4 bytes
  3554 ;; Hardware stack levels used: 1
  3555 ;; Hardware stack levels required when called: 2
  3556 ;; This function calls:
  3557 ;;		Nothing
  3558 ;; This function is called by:
  3559 ;;		_main
  3560 ;; This function uses a non-reentrant model
  3561 ;;
  3562                           
  3563     119C                     _readEEPROM:	
  3564                           ;psect for function _readEEPROM
  3565                           
  3566     119C                     l2379:	
  3567                           ;incstack = 0
  3568                           ; Regs used in _readEEPROM: [wreg]
  3569                           
  3570                           
  3571                           ;main1.c: 67:     EEADR = address;
  3572     119C  1283               	bcf	3,5	;RP0=0, select bank0
  3573     119D  1303               	bcf	3,6	;RP1=0, select bank0
  3574     119E  0820               	movf	readEEPROM@address,w
  3575     119F  1283               	bcf	3,5	;RP0=0, select bank2
  3576     11A0  1703               	bsf	3,6	;RP1=1, select bank2
  3577     11A1  008D               	movwf	13	;volatile
  3578     11A2                     l2381:
  3579                           
  3580                           ;main1.c: 68:     RD = 1;
  3581     11A2  1683               	bsf	3,5	;RP0=1, select bank3
  3582     11A3  1703               	bsf	3,6	;RP1=1, select bank3
  3583     11A4  140C               	bsf	12,0	;volsfr
  3584                           
  3585                           ;main1.c: 69:     return EEDATA;
  3586     11A5  1283               	bcf	3,5	;RP0=0, select bank2
  3587     11A6  1703               	bsf	3,6	;RP1=1, select bank2
  3588     11A7  080C               	movf	12,w	;volatile
  3589     11A8  1283               	bcf	3,5	;RP0=0, select bank0
  3590     11A9  1303               	bcf	3,6	;RP1=0, select bank0
  3591     11AA  00A2               	movwf	??_readEEPROM
  3592     11AB  01A3               	clrf	??_readEEPROM+1
  3593     11AC  0822               	movf	??_readEEPROM,w
  3594     11AD  00A0               	movwf	?_readEEPROM
  3595     11AE  0823               	movf	??_readEEPROM+1,w
  3596     11AF  00A1               	movwf	?_readEEPROM+1
  3597     11B0                     l188:
  3598     11B0  0008               	return
  3599     11B1                     __end_of_readEEPROM:
  3600                           
  3601                           	psect	text12
  3602     1628                     __ptext12:	
  3603 ;; *************** function ___xxtofl *****************
  3604 ;; Defined at:
  3605 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\xxtofl.c"
  3606 ;; Parameters:    Size  Location     Type
  3607 ;;  sign            1    wreg     unsigned char 
  3608 ;;  val             4    0[BANK0 ] long 
  3609 ;; Auto vars:     Size  Location     Type
  3610 ;;  sign            1    8[BANK0 ] unsigned char 
  3611 ;;  arg             4   10[BANK0 ] unsigned long 
  3612 ;;  exp             1    9[BANK0 ] unsigned char 
  3613 ;; Return value:  Size  Location     Type
  3614 ;;                  4    0[BANK0 ] unsigned char 
  3615 ;; Registers used:
  3616 ;;		wreg, status,2, status,0, btemp+1
  3617 ;; Tracked objects:
  3618 ;;		On entry : 0/0
  3619 ;;		On exit  : 0/0
  3620 ;;		Unchanged: 0/0
  3621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3622 ;;      Params:         0       4       0       0       0
  3623 ;;      Locals:         0       6       0       0       0
  3624 ;;      Temps:          0       4       0       0       0
  3625 ;;      Totals:         0      14       0       0       0
  3626 ;;Total ram usage:       14 bytes
  3627 ;; Hardware stack levels used: 1
  3628 ;; Hardware stack levels required when called: 2
  3629 ;; This function calls:
  3630 ;;		Nothing
  3631 ;; This function is called by:
  3632 ;;		_main
  3633 ;; This function uses a non-reentrant model
  3634 ;;
  3635                           
  3636     1628                     ___xxtofl:	
  3637                           ;psect for function ___xxtofl
  3638                           
  3639                           
  3640                           ;incstack = 0
  3641                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  3642                           ;___xxtofl@sign stored from wreg
  3643     1628  1283               	bcf	3,5	;RP0=0, select bank0
  3644     1629  1303               	bcf	3,6	;RP1=0, select bank0
  3645     162A  00A8               	movwf	___xxtofl@sign
  3646     162B                     l2925:
  3647     162B  0828               	movf	___xxtofl@sign,w
  3648     162C  1903               	btfsc	3,2
  3649     162D  2E2F               	goto	u3781
  3650     162E  2E30               	goto	u3780
  3651     162F                     u3781:
  3652     162F  2E44               	goto	l2931
  3653     1630                     u3780:
  3654     1630                     l2927:
  3655     1630  1FA3               	btfss	___xxtofl@val+3,7
  3656     1631  2E33               	goto	u3791
  3657     1632  2E34               	goto	u3790
  3658     1633                     u3791:
  3659     1633  2E44               	goto	l2931
  3660     1634                     u3790:
  3661     1634                     l2929:
  3662     1634  0920               	comf	___xxtofl@val,w
  3663     1635  00AA               	movwf	___xxtofl@arg
  3664     1636  0921               	comf	___xxtofl@val+1,w
  3665     1637  00AB               	movwf	___xxtofl@arg+1
  3666     1638  0922               	comf	___xxtofl@val+2,w
  3667     1639  00AC               	movwf	___xxtofl@arg+2
  3668     163A  0923               	comf	___xxtofl@val+3,w
  3669     163B  00AD               	movwf	___xxtofl@arg+3
  3670     163C  0AAA               	incf	___xxtofl@arg,f
  3671     163D  1903               	skipnz
  3672     163E  0AAB               	incf	___xxtofl@arg+1,f
  3673     163F  1903               	skipnz
  3674     1640  0AAC               	incf	___xxtofl@arg+2,f
  3675     1641  1903               	skipnz
  3676     1642  0AAD               	incf	___xxtofl@arg+3,f
  3677     1643  2E4C               	goto	l843
  3678     1644                     l2931:
  3679     1644  0823               	movf	___xxtofl@val+3,w
  3680     1645  00AD               	movwf	___xxtofl@arg+3
  3681     1646  0822               	movf	___xxtofl@val+2,w
  3682     1647  00AC               	movwf	___xxtofl@arg+2
  3683     1648  0821               	movf	___xxtofl@val+1,w
  3684     1649  00AB               	movwf	___xxtofl@arg+1
  3685     164A  0820               	movf	___xxtofl@val,w
  3686     164B  00AA               	movwf	___xxtofl@arg
  3687     164C                     l843:
  3688     164C  0823               	movf	___xxtofl@val+3,w
  3689     164D  0422               	iorwf	___xxtofl@val+2,w
  3690     164E  0421               	iorwf	___xxtofl@val+1,w
  3691     164F  0420               	iorwf	___xxtofl@val,w
  3692     1650  1D03               	skipz
  3693     1651  2E53               	goto	u3801
  3694     1652  2E54               	goto	u3800
  3695     1653                     u3801:
  3696     1653  2E5D               	goto	l2937
  3697     1654                     u3800:
  3698     1654                     l2933:
  3699     1654  3000               	movlw	0
  3700     1655  00A3               	movwf	?___xxtofl+3
  3701     1656  3000               	movlw	0
  3702     1657  00A2               	movwf	?___xxtofl+2
  3703     1658  3000               	movlw	0
  3704     1659  00A1               	movwf	?___xxtofl+1
  3705     165A  3000               	movlw	0
  3706     165B  00A0               	movwf	?___xxtofl
  3707     165C  2EE1               	goto	l845
  3708     165D                     l2937:
  3709     165D  3096               	movlw	150
  3710     165E  00A9               	movwf	___xxtofl@exp
  3711     165F  2E6D               	goto	l2943
  3712     1660                     l2939:
  3713     1660  3001               	movlw	1
  3714     1661  00FF               	movwf	btemp+1
  3715     1662  087F               	movf	btemp+1,w
  3716     1663  07A9               	addwf	___xxtofl@exp,f
  3717     1664                     l2941:
  3718     1664  3001               	movlw	1
  3719     1665                     u3815:
  3720     1665  1003               	clrc
  3721     1666  0CAD               	rrf	___xxtofl@arg+3,f
  3722     1667  0CAC               	rrf	___xxtofl@arg+2,f
  3723     1668  0CAB               	rrf	___xxtofl@arg+1,f
  3724     1669  0CAA               	rrf	___xxtofl@arg,f
  3725     166A  3EFF               	addlw	-1
  3726     166B  1D03               	skipz
  3727     166C  2E65               	goto	u3815
  3728     166D                     l2943:
  3729     166D  30FE               	movlw	254
  3730     166E  052D               	andwf	___xxtofl@arg+3,w
  3731     166F  1D03               	btfss	3,2
  3732     1670  2E72               	goto	u3821
  3733     1671  2E73               	goto	u3820
  3734     1672                     u3821:
  3735     1672  2E60               	goto	l2939
  3736     1673                     u3820:
  3737     1673  2E8F               	goto	l2951
  3738     1674                     l2945:
  3739     1674  3001               	movlw	1
  3740     1675  00FF               	movwf	btemp+1
  3741     1676  087F               	movf	btemp+1,w
  3742     1677  07A9               	addwf	___xxtofl@exp,f
  3743     1678                     l2947:
  3744     1678  3001               	movlw	1
  3745     1679  07AA               	addwf	___xxtofl@arg,f
  3746     167A  3000               	movlw	0
  3747     167B  1803               	skipnc
  3748     167C  3001               	movlw	1
  3749     167D  07AB               	addwf	___xxtofl@arg+1,f
  3750     167E  3000               	movlw	0
  3751     167F  1803               	skipnc
  3752     1680  3001               	movlw	1
  3753     1681  07AC               	addwf	___xxtofl@arg+2,f
  3754     1682  3000               	movlw	0
  3755     1683  1803               	skipnc
  3756     1684  3001               	movlw	1
  3757     1685  07AD               	addwf	___xxtofl@arg+3,f
  3758     1686                     l2949:
  3759     1686  3001               	movlw	1
  3760     1687                     u3835:
  3761     1687  1003               	clrc
  3762     1688  0CAD               	rrf	___xxtofl@arg+3,f
  3763     1689  0CAC               	rrf	___xxtofl@arg+2,f
  3764     168A  0CAB               	rrf	___xxtofl@arg+1,f
  3765     168B  0CAA               	rrf	___xxtofl@arg,f
  3766     168C  3EFF               	addlw	-1
  3767     168D  1D03               	skipz
  3768     168E  2E87               	goto	u3835
  3769     168F                     l2951:
  3770     168F  30FF               	movlw	255
  3771     1690  052D               	andwf	___xxtofl@arg+3,w
  3772     1691  1D03               	btfss	3,2
  3773     1692  2E94               	goto	u3841
  3774     1693  2E95               	goto	u3840
  3775     1694                     u3841:
  3776     1694  2E74               	goto	l2945
  3777     1695                     u3840:
  3778     1695  2EA1               	goto	l2955
  3779     1696                     l2953:
  3780     1696  3001               	movlw	1
  3781     1697  02A9               	subwf	___xxtofl@exp,f
  3782     1698  3001               	movlw	1
  3783     1699  00A4               	movwf	??___xxtofl
  3784     169A                     u3855:
  3785     169A  1003               	clrc
  3786     169B  0DAA               	rlf	___xxtofl@arg,f
  3787     169C  0DAB               	rlf	___xxtofl@arg+1,f
  3788     169D  0DAC               	rlf	___xxtofl@arg+2,f
  3789     169E  0DAD               	rlf	___xxtofl@arg+3,f
  3790     169F  0BA4               	decfsz	??___xxtofl,f
  3791     16A0  2E9A               	goto	u3855
  3792     16A1                     l2955:
  3793     16A1  1BAC               	btfsc	___xxtofl@arg+2,7
  3794     16A2  2EA4               	goto	u3861
  3795     16A3  2EA5               	goto	u3860
  3796     16A4                     u3861:
  3797     16A4  2EAB               	goto	l856
  3798     16A5                     u3860:
  3799     16A5                     l2957:
  3800     16A5  3002               	movlw	2
  3801     16A6  0229               	subwf	___xxtofl@exp,w
  3802     16A7  1803               	skipnc
  3803     16A8  2EAA               	goto	u3871
  3804     16A9  2EAB               	goto	u3870
  3805     16AA                     u3871:
  3806     16AA  2E96               	goto	l2953
  3807     16AB                     u3870:
  3808     16AB                     l856:
  3809     16AB  1829               	btfsc	___xxtofl@exp,0
  3810     16AC  2EAE               	goto	u3881
  3811     16AD  2EAF               	goto	u3880
  3812     16AE                     u3881:
  3813     16AE  2EB7               	goto	l857
  3814     16AF                     u3880:
  3815     16AF                     l2959:
  3816     16AF  30FF               	movlw	255
  3817     16B0  05AA               	andwf	___xxtofl@arg,f
  3818     16B1  30FF               	movlw	255
  3819     16B2  05AB               	andwf	___xxtofl@arg+1,f
  3820     16B3  307F               	movlw	127
  3821     16B4  05AC               	andwf	___xxtofl@arg+2,f
  3822     16B5  30FF               	movlw	255
  3823     16B6  05AD               	andwf	___xxtofl@arg+3,f
  3824     16B7                     l857:
  3825     16B7  1003               	clrc
  3826     16B8  0CA9               	rrf	___xxtofl@exp,f
  3827     16B9                     l2961:
  3828     16B9  0829               	movf	___xxtofl@exp,w
  3829     16BA  00A4               	movwf	??___xxtofl
  3830     16BB  01A5               	clrf	??___xxtofl+1
  3831     16BC  01A6               	clrf	??___xxtofl+2
  3832     16BD  01A7               	clrf	??___xxtofl+3
  3833     16BE  3018               	movlw	24
  3834     16BF                     u3895:
  3835     16BF  1003               	clrc
  3836     16C0  0DA4               	rlf	??___xxtofl,f
  3837     16C1  0DA5               	rlf	??___xxtofl+1,f
  3838     16C2  0DA6               	rlf	??___xxtofl+2,f
  3839     16C3  0DA7               	rlf	??___xxtofl+3,f
  3840     16C4                     u3890:
  3841     16C4  3EFF               	addlw	-1
  3842     16C5  1D03               	skipz
  3843     16C6  2EBF               	goto	u3895
  3844     16C7  0824               	movf	??___xxtofl,w
  3845     16C8  04AA               	iorwf	___xxtofl@arg,f
  3846     16C9  0825               	movf	??___xxtofl+1,w
  3847     16CA  04AB               	iorwf	___xxtofl@arg+1,f
  3848     16CB  0826               	movf	??___xxtofl+2,w
  3849     16CC  04AC               	iorwf	___xxtofl@arg+2,f
  3850     16CD  0827               	movf	??___xxtofl+3,w
  3851     16CE  04AD               	iorwf	___xxtofl@arg+3,f
  3852     16CF                     l2963:
  3853     16CF  0828               	movf	___xxtofl@sign,w
  3854     16D0  1903               	btfsc	3,2
  3855     16D1  2ED3               	goto	u3901
  3856     16D2  2ED4               	goto	u3900
  3857     16D3                     u3901:
  3858     16D3  2ED9               	goto	l2969
  3859     16D4                     u3900:
  3860     16D4                     l2965:
  3861     16D4  1FA3               	btfss	___xxtofl@val+3,7
  3862     16D5  2ED7               	goto	u3911
  3863     16D6  2ED8               	goto	u3910
  3864     16D7                     u3911:
  3865     16D7  2ED9               	goto	l2969
  3866     16D8                     u3910:
  3867     16D8                     l2967:
  3868     16D8  17AD               	bsf	___xxtofl@arg+3,7
  3869     16D9                     l2969:
  3870     16D9  082D               	movf	___xxtofl@arg+3,w
  3871     16DA  00A3               	movwf	?___xxtofl+3
  3872     16DB  082C               	movf	___xxtofl@arg+2,w
  3873     16DC  00A2               	movwf	?___xxtofl+2
  3874     16DD  082B               	movf	___xxtofl@arg+1,w
  3875     16DE  00A1               	movwf	?___xxtofl+1
  3876     16DF  082A               	movf	___xxtofl@arg,w
  3877     16E0  00A0               	movwf	?___xxtofl
  3878     16E1                     l845:
  3879     16E1  0008               	return
  3880     16E2                     __end_of___xxtofl:
  3881                           
  3882                           	psect	text13
  3883     15B0                     __ptext13:	
  3884 ;; *************** function ___fltol *****************
  3885 ;; Defined at:
  3886 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fltol.c"
  3887 ;; Parameters:    Size  Location     Type
  3888 ;;  f1              4    0[BANK0 ] unsigned char 
  3889 ;; Auto vars:     Size  Location     Type
  3890 ;;  exp1            1    9[BANK0 ] unsigned char 
  3891 ;;  sign1           1    8[BANK0 ] unsigned char 
  3892 ;; Return value:  Size  Location     Type
  3893 ;;                  4    0[BANK0 ] long 
  3894 ;; Registers used:
  3895 ;;		wreg, status,2, status,0, btemp+1
  3896 ;; Tracked objects:
  3897 ;;		On entry : 0/0
  3898 ;;		On exit  : 0/0
  3899 ;;		Unchanged: 0/0
  3900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3901 ;;      Params:         0       4       0       0       0
  3902 ;;      Locals:         0       2       0       0       0
  3903 ;;      Temps:          0       4       0       0       0
  3904 ;;      Totals:         0      10       0       0       0
  3905 ;;Total ram usage:       10 bytes
  3906 ;; Hardware stack levels used: 1
  3907 ;; Hardware stack levels required when called: 2
  3908 ;; This function calls:
  3909 ;;		Nothing
  3910 ;; This function is called by:
  3911 ;;		_main
  3912 ;; This function uses a non-reentrant model
  3913 ;;
  3914                           
  3915     15B0                     ___fltol:	
  3916                           ;psect for function ___fltol
  3917                           
  3918     15B0                     l2599:	
  3919                           ;incstack = 0
  3920                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  3921                           
  3922     15B0  1003               	clrc
  3923     15B1  1283               	bcf	3,5	;RP0=0, select bank0
  3924     15B2  1303               	bcf	3,6	;RP1=0, select bank0
  3925     15B3  0D22               	rlf	___fltol@f1+2,w
  3926     15B4  0D23               	rlf	___fltol@f1+3,w
  3927     15B5  00A9               	movwf	___fltol@exp1
  3928     15B6  0829               	movf	___fltol@exp1,w
  3929     15B7  1D03               	btfss	3,2
  3930     15B8  2DBA               	goto	u3021
  3931     15B9  2DBB               	goto	u3020
  3932     15BA                     u3021:
  3933     15BA  2DC4               	goto	l2605
  3934     15BB                     u3020:
  3935     15BB                     l2601:
  3936     15BB  3000               	movlw	0
  3937     15BC  00A3               	movwf	?___fltol+3
  3938     15BD  3000               	movlw	0
  3939     15BE  00A2               	movwf	?___fltol+2
  3940     15BF  3000               	movlw	0
  3941     15C0  00A1               	movwf	?___fltol+1
  3942     15C1  3000               	movlw	0
  3943     15C2  00A0               	movwf	?___fltol
  3944     15C3  2E27               	goto	l596
  3945     15C4                     l2605:
  3946     15C4  0820               	movf	___fltol@f1,w
  3947     15C5  00A4               	movwf	??___fltol
  3948     15C6  0821               	movf	___fltol@f1+1,w
  3949     15C7  00A5               	movwf	??___fltol+1
  3950     15C8  0822               	movf	___fltol@f1+2,w
  3951     15C9  00A6               	movwf	??___fltol+2
  3952     15CA  0823               	movf	___fltol@f1+3,w
  3953     15CB  00A7               	movwf	??___fltol+3
  3954     15CC  301F               	movlw	31
  3955     15CD                     u3035:
  3956     15CD  1003               	clrc
  3957     15CE  0CA7               	rrf	??___fltol+3,f
  3958     15CF  0CA6               	rrf	??___fltol+2,f
  3959     15D0  0CA5               	rrf	??___fltol+1,f
  3960     15D1  0CA4               	rrf	??___fltol,f
  3961     15D2                     u3030:
  3962     15D2  3EFF               	addlw	-1
  3963     15D3  1D03               	skipz
  3964     15D4  2DCD               	goto	u3035
  3965     15D5  0824               	movf	??___fltol,w
  3966     15D6  00A8               	movwf	___fltol@sign1
  3967     15D7                     l2607:
  3968     15D7  17A2               	bsf	___fltol@f1+2,7
  3969     15D8                     l2609:
  3970     15D8  30FF               	movlw	255
  3971     15D9  05A0               	andwf	___fltol@f1,f
  3972     15DA  30FF               	movlw	255
  3973     15DB  05A1               	andwf	___fltol@f1+1,f
  3974     15DC  30FF               	movlw	255
  3975     15DD  05A2               	andwf	___fltol@f1+2,f
  3976     15DE  3000               	movlw	0
  3977     15DF  05A3               	andwf	___fltol@f1+3,f
  3978     15E0                     l2611:
  3979     15E0  3096               	movlw	150
  3980     15E1  02A9               	subwf	___fltol@exp1,f
  3981     15E2                     l2613:
  3982     15E2  1FA9               	btfss	___fltol@exp1,7
  3983     15E3  2DE5               	goto	u3041
  3984     15E4  2DE6               	goto	u3040
  3985     15E5                     u3041:
  3986     15E5  2E00               	goto	l2625
  3987     15E6                     u3040:
  3988     15E6                     l2615:
  3989     15E6  0829               	movf	___fltol@exp1,w
  3990     15E7  3A80               	xorlw	128
  3991     15E8  3E97               	addlw	151
  3992     15E9  1803               	skipnc
  3993     15EA  2DEC               	goto	u3051
  3994     15EB  2DED               	goto	u3050
  3995     15EC                     u3051:
  3996     15EC  2DEE               	goto	l2621
  3997     15ED                     u3050:
  3998     15ED  2DBB               	goto	l2601
  3999     15EE                     l2621:
  4000     15EE  3001               	movlw	1
  4001     15EF                     u3065:
  4002     15EF  1003               	clrc
  4003     15F0  0CA3               	rrf	___fltol@f1+3,f
  4004     15F1  0CA2               	rrf	___fltol@f1+2,f
  4005     15F2  0CA1               	rrf	___fltol@f1+1,f
  4006     15F3  0CA0               	rrf	___fltol@f1,f
  4007     15F4  3EFF               	addlw	-1
  4008     15F5  1D03               	skipz
  4009     15F6  2DEF               	goto	u3065
  4010     15F7                     l2623:
  4011     15F7  3001               	movlw	1
  4012     15F8  00FF               	movwf	btemp+1
  4013     15F9  087F               	movf	btemp+1,w
  4014     15FA  07A9               	addwf	___fltol@exp1,f
  4015     15FB  1D03               	btfss	3,2
  4016     15FC  2DFE               	goto	u3071
  4017     15FD  2DFF               	goto	u3070
  4018     15FE                     u3071:
  4019     15FE  2DEE               	goto	l2621
  4020     15FF                     u3070:
  4021     15FF  2E17               	goto	l2633
  4022     1600                     l2625:
  4023     1600  3020               	movlw	32
  4024     1601  0229               	subwf	___fltol@exp1,w
  4025     1602  1C03               	skipc
  4026     1603  2E05               	goto	u3081
  4027     1604  2E06               	goto	u3080
  4028     1605                     u3081:
  4029     1605  2E12               	goto	l603
  4030     1606                     u3080:
  4031     1606  2DBB               	goto	l2601
  4032     1607                     l2631:
  4033     1607  3001               	movlw	1
  4034     1608  00A4               	movwf	??___fltol
  4035     1609                     u3095:
  4036     1609  1003               	clrc
  4037     160A  0DA0               	rlf	___fltol@f1,f
  4038     160B  0DA1               	rlf	___fltol@f1+1,f
  4039     160C  0DA2               	rlf	___fltol@f1+2,f
  4040     160D  0DA3               	rlf	___fltol@f1+3,f
  4041     160E  0BA4               	decfsz	??___fltol,f
  4042     160F  2E09               	goto	u3095
  4043     1610  3001               	movlw	1
  4044     1611  02A9               	subwf	___fltol@exp1,f
  4045     1612                     l603:
  4046     1612  0829               	movf	___fltol@exp1,w
  4047     1613  1D03               	btfss	3,2
  4048     1614  2E16               	goto	u3101
  4049     1615  2E17               	goto	u3100
  4050     1616                     u3101:
  4051     1616  2E07               	goto	l2631
  4052     1617                     u3100:
  4053     1617                     l2633:
  4054     1617  0828               	movf	___fltol@sign1,w
  4055     1618  1903               	btfsc	3,2
  4056     1619  2E1B               	goto	u3111
  4057     161A  2E1C               	goto	u3110
  4058     161B                     u3111:
  4059     161B  2E27               	goto	l606
  4060     161C                     u3110:
  4061     161C                     l2635:
  4062     161C  09A0               	comf	___fltol@f1,f
  4063     161D  09A1               	comf	___fltol@f1+1,f
  4064     161E  09A2               	comf	___fltol@f1+2,f
  4065     161F  09A3               	comf	___fltol@f1+3,f
  4066     1620  0AA0               	incf	___fltol@f1,f
  4067     1621  1903               	skipnz
  4068     1622  0AA1               	incf	___fltol@f1+1,f
  4069     1623  1903               	skipnz
  4070     1624  0AA2               	incf	___fltol@f1+2,f
  4071     1625  1903               	skipnz
  4072     1626  0AA3               	incf	___fltol@f1+3,f
  4073     1627                     l606:
  4074     1627                     l596:
  4075     1627  0008               	return
  4076     1628                     __end_of___fltol:
  4077                           
  4078                           	psect	text14
  4079     0465                     __ptext14:	
  4080 ;; *************** function ___flmul *****************
  4081 ;; Defined at:
  4082 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcmul.c"
  4083 ;; Parameters:    Size  Location     Type
  4084 ;;  b               4   26[BANK0 ] long 
  4085 ;;  a               4   30[BANK0 ] long 
  4086 ;; Auto vars:     Size  Location     Type
  4087 ;;  prod            4   46[BANK0 ] struct .
  4088 ;;  grs             4   40[BANK0 ] unsigned long 
  4089 ;;  temp            2   50[BANK0 ] struct .
  4090 ;;  bexp            1   45[BANK0 ] unsigned char 
  4091 ;;  aexp            1   44[BANK0 ] unsigned char 
  4092 ;;  sign            1   39[BANK0 ] unsigned char 
  4093 ;; Return value:  Size  Location     Type
  4094 ;;                  4   26[BANK0 ] unsigned char 
  4095 ;; Registers used:
  4096 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4097 ;; Tracked objects:
  4098 ;;		On entry : 0/0
  4099 ;;		On exit  : 0/0
  4100 ;;		Unchanged: 0/0
  4101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4102 ;;      Params:         0       8       0       0       0
  4103 ;;      Locals:         0      13       0       0       0
  4104 ;;      Temps:          0       5       0       0       0
  4105 ;;      Totals:         0      26       0       0       0
  4106 ;;Total ram usage:       26 bytes
  4107 ;; Hardware stack levels used: 1
  4108 ;; Hardware stack levels required when called: 3
  4109 ;; This function calls:
  4110 ;;		__Umul8_16
  4111 ;; This function is called by:
  4112 ;;		_main
  4113 ;; This function uses a non-reentrant model
  4114 ;;
  4115                           
  4116     0465                     ___flmul:	
  4117                           ;psect for function ___flmul
  4118                           
  4119     0465                     l2783:	
  4120                           ;incstack = 0
  4121                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4122                           
  4123     0465  1283               	bcf	3,5	;RP0=0, select bank0
  4124     0466  1303               	bcf	3,6	;RP1=0, select bank0
  4125     0467  083D               	movf	___flmul@b+3,w
  4126     0468  3980               	andlw	128
  4127     0469  00C7               	movwf	___flmul@sign
  4128     046A                     l2785:
  4129     046A  083D               	movf	___flmul@b+3,w
  4130     046B  00C2               	movwf	??___flmul
  4131     046C  0742               	addwf	??___flmul,w
  4132     046D  00CD               	movwf	___flmul@bexp
  4133     046E                     l2787:
  4134     046E  1FBC               	btfss	___flmul@b+2,7
  4135     046F  2C71               	goto	u3411
  4136     0470  2C72               	goto	u3410
  4137     0471                     u3411:
  4138     0471  2C73               	goto	l2791
  4139     0472                     u3410:
  4140     0472                     l2789:
  4141     0472  144D               	bsf	___flmul@bexp,0
  4142     0473                     l2791:
  4143     0473  084D               	movf	___flmul@bexp,w
  4144     0474  1903               	btfsc	3,2
  4145     0475  2C77               	goto	u3421
  4146     0476  2C78               	goto	u3420
  4147     0477                     u3421:
  4148     0477  2C87               	goto	l2799
  4149     0478                     u3420:
  4150     0478                     l2793:
  4151     0478  0A4D               	incf	___flmul@bexp,w
  4152     0479  1D03               	btfss	3,2
  4153     047A  2C7C               	goto	u3431
  4154     047B  2C7D               	goto	u3430
  4155     047C                     u3431:
  4156     047C  2C85               	goto	l2797
  4157     047D                     u3430:
  4158     047D                     l2795:
  4159     047D  3000               	movlw	0
  4160     047E  00BD               	movwf	___flmul@b+3
  4161     047F  3000               	movlw	0
  4162     0480  00BC               	movwf	___flmul@b+2
  4163     0481  3000               	movlw	0
  4164     0482  00BB               	movwf	___flmul@b+1
  4165     0483  3000               	movlw	0
  4166     0484  00BA               	movwf	___flmul@b
  4167     0485                     l2797:
  4168     0485  17BC               	bsf	___flmul@b+2,7
  4169     0486  2C8F               	goto	l2801
  4170     0487                     l2799:
  4171     0487  3000               	movlw	0
  4172     0488  00BD               	movwf	___flmul@b+3
  4173     0489  3000               	movlw	0
  4174     048A  00BC               	movwf	___flmul@b+2
  4175     048B  3000               	movlw	0
  4176     048C  00BB               	movwf	___flmul@b+1
  4177     048D  3000               	movlw	0
  4178     048E  00BA               	movwf	___flmul@b
  4179     048F                     l2801:
  4180     048F  0841               	movf	___flmul@a+3,w
  4181     0490  3980               	andlw	128
  4182     0491  00FF               	movwf	btemp+1
  4183     0492  087F               	movf	btemp+1,w
  4184     0493  06C7               	xorwf	___flmul@sign,f
  4185     0494                     l2803:
  4186     0494  0841               	movf	___flmul@a+3,w
  4187     0495  00C2               	movwf	??___flmul
  4188     0496  0742               	addwf	??___flmul,w
  4189     0497  00CC               	movwf	___flmul@aexp
  4190     0498                     l2805:
  4191     0498  1FC0               	btfss	___flmul@a+2,7
  4192     0499  2C9B               	goto	u3441
  4193     049A  2C9C               	goto	u3440
  4194     049B                     u3441:
  4195     049B  2C9D               	goto	l2809
  4196     049C                     u3440:
  4197     049C                     l2807:
  4198     049C  144C               	bsf	___flmul@aexp,0
  4199     049D                     l2809:
  4200     049D  084C               	movf	___flmul@aexp,w
  4201     049E  1903               	btfsc	3,2
  4202     049F  2CA1               	goto	u3451
  4203     04A0  2CA2               	goto	u3450
  4204     04A1                     u3451:
  4205     04A1  2CB1               	goto	l2817
  4206     04A2                     u3450:
  4207     04A2                     l2811:
  4208     04A2  0A4C               	incf	___flmul@aexp,w
  4209     04A3  1D03               	btfss	3,2
  4210     04A4  2CA6               	goto	u3461
  4211     04A5  2CA7               	goto	u3460
  4212     04A6                     u3461:
  4213     04A6  2CAF               	goto	l2815
  4214     04A7                     u3460:
  4215     04A7                     l2813:
  4216     04A7  3000               	movlw	0
  4217     04A8  00C1               	movwf	___flmul@a+3
  4218     04A9  3000               	movlw	0
  4219     04AA  00C0               	movwf	___flmul@a+2
  4220     04AB  3000               	movlw	0
  4221     04AC  00BF               	movwf	___flmul@a+1
  4222     04AD  3000               	movlw	0
  4223     04AE  00BE               	movwf	___flmul@a
  4224     04AF                     l2815:
  4225     04AF  17C0               	bsf	___flmul@a+2,7
  4226     04B0  2CB9               	goto	l2819
  4227     04B1                     l2817:
  4228     04B1  3000               	movlw	0
  4229     04B2  00C1               	movwf	___flmul@a+3
  4230     04B3  3000               	movlw	0
  4231     04B4  00C0               	movwf	___flmul@a+2
  4232     04B5  3000               	movlw	0
  4233     04B6  00BF               	movwf	___flmul@a+1
  4234     04B7  3000               	movlw	0
  4235     04B8  00BE               	movwf	___flmul@a
  4236     04B9                     l2819:
  4237     04B9  084C               	movf	___flmul@aexp,w
  4238     04BA  1903               	btfsc	3,2
  4239     04BB  2CBD               	goto	u3471
  4240     04BC  2CBE               	goto	u3470
  4241     04BD                     u3471:
  4242     04BD  2CC3               	goto	l2823
  4243     04BE                     u3470:
  4244     04BE                     l2821:
  4245     04BE  084D               	movf	___flmul@bexp,w
  4246     04BF  1D03               	btfss	3,2
  4247     04C0  2CC2               	goto	u3481
  4248     04C1  2CC3               	goto	u3480
  4249     04C2                     u3481:
  4250     04C2  2CCC               	goto	l2827
  4251     04C3                     u3480:
  4252     04C3                     l2823:
  4253     04C3  3000               	movlw	0
  4254     04C4  00BD               	movwf	?___flmul+3
  4255     04C5  3000               	movlw	0
  4256     04C6  00BC               	movwf	?___flmul+2
  4257     04C7  3000               	movlw	0
  4258     04C8  00BB               	movwf	?___flmul+1
  4259     04C9  3000               	movlw	0
  4260     04CA  00BA               	movwf	?___flmul
  4261     04CB  2FA9               	goto	l799
  4262     04CC                     l2827:
  4263     04CC  083A               	movf	___flmul@b,w
  4264     04CD  00A0               	movwf	__Umul8_16@multiplicand
  4265     04CE  0840               	movf	___flmul@a+2,w
  4266     04CF  160A  118A  2203  120A  118A  	fcall	__Umul8_16
  4267     04D4  1283               	bcf	3,5	;RP0=0, select bank0
  4268     04D5  1303               	bcf	3,6	;RP1=0, select bank0
  4269     04D6  0821               	movf	?__Umul8_16+1,w
  4270     04D7  00D3               	movwf	___flmul@temp+1
  4271     04D8  0820               	movf	?__Umul8_16,w
  4272     04D9  00D2               	movwf	___flmul@temp
  4273     04DA                     l2829:
  4274     04DA  0852               	movf	___flmul@temp,w
  4275     04DB  00C2               	movwf	??___flmul
  4276     04DC  01C3               	clrf	??___flmul+1
  4277     04DD  01C4               	clrf	??___flmul+2
  4278     04DE  01C5               	clrf	??___flmul+3
  4279     04DF  0845               	movf	??___flmul+3,w
  4280     04E0  00CB               	movwf	___flmul@grs+3
  4281     04E1  0844               	movf	??___flmul+2,w
  4282     04E2  00CA               	movwf	___flmul@grs+2
  4283     04E3  0843               	movf	??___flmul+1,w
  4284     04E4  00C9               	movwf	___flmul@grs+1
  4285     04E5  0842               	movf	??___flmul,w
  4286     04E6  00C8               	movwf	___flmul@grs
  4287     04E7                     l2831:
  4288     04E7  0853               	movf	___flmul@temp+1,w
  4289     04E8  00C2               	movwf	??___flmul
  4290     04E9  01C3               	clrf	??___flmul+1
  4291     04EA  01C4               	clrf	??___flmul+2
  4292     04EB  01C5               	clrf	??___flmul+3
  4293     04EC  0845               	movf	??___flmul+3,w
  4294     04ED  00D1               	movwf	___flmul@prod+3
  4295     04EE  0844               	movf	??___flmul+2,w
  4296     04EF  00D0               	movwf	___flmul@prod+2
  4297     04F0  0843               	movf	??___flmul+1,w
  4298     04F1  00CF               	movwf	___flmul@prod+1
  4299     04F2  0842               	movf	??___flmul,w
  4300     04F3  00CE               	movwf	___flmul@prod
  4301     04F4  083B               	movf	___flmul@b+1,w
  4302     04F5  00A0               	movwf	__Umul8_16@multiplicand
  4303     04F6  083F               	movf	___flmul@a+1,w
  4304     04F7  160A  118A  2203  120A  118A  	fcall	__Umul8_16
  4305     04FC  1283               	bcf	3,5	;RP0=0, select bank0
  4306     04FD  1303               	bcf	3,6	;RP1=0, select bank0
  4307     04FE  0821               	movf	?__Umul8_16+1,w
  4308     04FF  00D3               	movwf	___flmul@temp+1
  4309     0500  0820               	movf	?__Umul8_16,w
  4310     0501  00D2               	movwf	___flmul@temp
  4311     0502                     l2833:
  4312     0502  0852               	movf	___flmul@temp,w
  4313     0503  00C2               	movwf	??___flmul
  4314     0504  01C3               	clrf	??___flmul+1
  4315     0505  01C4               	clrf	??___flmul+2
  4316     0506  01C5               	clrf	??___flmul+3
  4317     0507  0842               	movf	??___flmul,w
  4318     0508  07C8               	addwf	___flmul@grs,f
  4319     0509  0843               	movf	??___flmul+1,w
  4320     050A  1103               	clrz
  4321     050B  1803               	skipnc
  4322     050C  3E01               	addlw	1
  4323     050D  1903               	skipnz
  4324     050E  2D10               	goto	u3491
  4325     050F  07C9               	addwf	___flmul@grs+1,f
  4326     0510                     u3491:
  4327     0510  0844               	movf	??___flmul+2,w
  4328     0511  1103               	clrz
  4329     0512  1803               	skipnc
  4330     0513  3E01               	addlw	1
  4331     0514  1903               	skipnz
  4332     0515  2D17               	goto	u3492
  4333     0516  07CA               	addwf	___flmul@grs+2,f
  4334     0517                     u3492:
  4335     0517  0845               	movf	??___flmul+3,w
  4336     0518  1103               	clrz
  4337     0519  1803               	skipnc
  4338     051A  3E01               	addlw	1
  4339     051B  1903               	skipnz
  4340     051C  2D1E               	goto	u3493
  4341     051D  07CB               	addwf	___flmul@grs+3,f
  4342     051E                     u3493:
  4343     051E                     l2835:
  4344     051E  0853               	movf	___flmul@temp+1,w
  4345     051F  00C2               	movwf	??___flmul
  4346     0520  01C3               	clrf	??___flmul+1
  4347     0521  01C4               	clrf	??___flmul+2
  4348     0522  01C5               	clrf	??___flmul+3
  4349     0523  0842               	movf	??___flmul,w
  4350     0524  07CE               	addwf	___flmul@prod,f
  4351     0525  0843               	movf	??___flmul+1,w
  4352     0526  1103               	clrz
  4353     0527  1803               	skipnc
  4354     0528  3E01               	addlw	1
  4355     0529  1903               	skipnz
  4356     052A  2D2C               	goto	u3501
  4357     052B  07CF               	addwf	___flmul@prod+1,f
  4358     052C                     u3501:
  4359     052C  0844               	movf	??___flmul+2,w
  4360     052D  1103               	clrz
  4361     052E  1803               	skipnc
  4362     052F  3E01               	addlw	1
  4363     0530  1903               	skipnz
  4364     0531  2D33               	goto	u3502
  4365     0532  07D0               	addwf	___flmul@prod+2,f
  4366     0533                     u3502:
  4367     0533  0845               	movf	??___flmul+3,w
  4368     0534  1103               	clrz
  4369     0535  1803               	skipnc
  4370     0536  3E01               	addlw	1
  4371     0537  1903               	skipnz
  4372     0538  2D3A               	goto	u3503
  4373     0539  07D1               	addwf	___flmul@prod+3,f
  4374     053A                     u3503:
  4375     053A  083C               	movf	___flmul@b+2,w
  4376     053B  00A0               	movwf	__Umul8_16@multiplicand
  4377     053C  083E               	movf	___flmul@a,w
  4378     053D  160A  118A  2203  120A  118A  	fcall	__Umul8_16
  4379     0542  1283               	bcf	3,5	;RP0=0, select bank0
  4380     0543  1303               	bcf	3,6	;RP1=0, select bank0
  4381     0544  0821               	movf	?__Umul8_16+1,w
  4382     0545  00D3               	movwf	___flmul@temp+1
  4383     0546  0820               	movf	?__Umul8_16,w
  4384     0547  00D2               	movwf	___flmul@temp
  4385     0548                     l2837:
  4386     0548  0852               	movf	___flmul@temp,w
  4387     0549  00C2               	movwf	??___flmul
  4388     054A  01C3               	clrf	??___flmul+1
  4389     054B  01C4               	clrf	??___flmul+2
  4390     054C  01C5               	clrf	??___flmul+3
  4391     054D  0842               	movf	??___flmul,w
  4392     054E  07C8               	addwf	___flmul@grs,f
  4393     054F  0843               	movf	??___flmul+1,w
  4394     0550  1103               	clrz
  4395     0551  1803               	skipnc
  4396     0552  3E01               	addlw	1
  4397     0553  1903               	skipnz
  4398     0554  2D56               	goto	u3511
  4399     0555  07C9               	addwf	___flmul@grs+1,f
  4400     0556                     u3511:
  4401     0556  0844               	movf	??___flmul+2,w
  4402     0557  1103               	clrz
  4403     0558  1803               	skipnc
  4404     0559  3E01               	addlw	1
  4405     055A  1903               	skipnz
  4406     055B  2D5D               	goto	u3512
  4407     055C  07CA               	addwf	___flmul@grs+2,f
  4408     055D                     u3512:
  4409     055D  0845               	movf	??___flmul+3,w
  4410     055E  1103               	clrz
  4411     055F  1803               	skipnc
  4412     0560  3E01               	addlw	1
  4413     0561  1903               	skipnz
  4414     0562  2D64               	goto	u3513
  4415     0563  07CB               	addwf	___flmul@grs+3,f
  4416     0564                     u3513:
  4417     0564                     l2839:
  4418     0564  0853               	movf	___flmul@temp+1,w
  4419     0565  00C2               	movwf	??___flmul
  4420     0566  01C3               	clrf	??___flmul+1
  4421     0567  01C4               	clrf	??___flmul+2
  4422     0568  01C5               	clrf	??___flmul+3
  4423     0569  0842               	movf	??___flmul,w
  4424     056A  07CE               	addwf	___flmul@prod,f
  4425     056B  0843               	movf	??___flmul+1,w
  4426     056C  1103               	clrz
  4427     056D  1803               	skipnc
  4428     056E  3E01               	addlw	1
  4429     056F  1903               	skipnz
  4430     0570  2D72               	goto	u3521
  4431     0571  07CF               	addwf	___flmul@prod+1,f
  4432     0572                     u3521:
  4433     0572  0844               	movf	??___flmul+2,w
  4434     0573  1103               	clrz
  4435     0574  1803               	skipnc
  4436     0575  3E01               	addlw	1
  4437     0576  1903               	skipnz
  4438     0577  2D79               	goto	u3522
  4439     0578  07D0               	addwf	___flmul@prod+2,f
  4440     0579                     u3522:
  4441     0579  0845               	movf	??___flmul+3,w
  4442     057A  1103               	clrz
  4443     057B  1803               	skipnc
  4444     057C  3E01               	addlw	1
  4445     057D  1903               	skipnz
  4446     057E  2D80               	goto	u3523
  4447     057F  07D1               	addwf	___flmul@prod+3,f
  4448     0580                     u3523:
  4449     0580                     l2841:
  4450     0580  3008               	movlw	8
  4451     0581  00C2               	movwf	??___flmul
  4452     0582                     u3535:
  4453     0582  1003               	clrc
  4454     0583  0DC8               	rlf	___flmul@grs,f
  4455     0584  0DC9               	rlf	___flmul@grs+1,f
  4456     0585  0DCA               	rlf	___flmul@grs+2,f
  4457     0586  0DCB               	rlf	___flmul@grs+3,f
  4458     0587  0BC2               	decfsz	??___flmul,f
  4459     0588  2D82               	goto	u3535
  4460     0589                     l2843:
  4461     0589  083B               	movf	___flmul@b+1,w
  4462     058A  00A0               	movwf	__Umul8_16@multiplicand
  4463     058B  083E               	movf	___flmul@a,w
  4464     058C  160A  118A  2203  120A  118A  	fcall	__Umul8_16
  4465     0591  1283               	bcf	3,5	;RP0=0, select bank0
  4466     0592  1303               	bcf	3,6	;RP1=0, select bank0
  4467     0593  0821               	movf	?__Umul8_16+1,w
  4468     0594  00D3               	movwf	___flmul@temp+1
  4469     0595  0820               	movf	?__Umul8_16,w
  4470     0596  00D2               	movwf	___flmul@temp
  4471     0597                     l2845:
  4472     0597  0852               	movf	___flmul@temp,w
  4473     0598  00C2               	movwf	??___flmul
  4474     0599  0853               	movf	___flmul@temp+1,w
  4475     059A  00C3               	movwf	??___flmul+1
  4476     059B  01C4               	clrf	??___flmul+2
  4477     059C  01C5               	clrf	??___flmul+3
  4478     059D  0842               	movf	??___flmul,w
  4479     059E  07C8               	addwf	___flmul@grs,f
  4480     059F  0843               	movf	??___flmul+1,w
  4481     05A0  1103               	clrz
  4482     05A1  1803               	skipnc
  4483     05A2  3E01               	addlw	1
  4484     05A3  1903               	skipnz
  4485     05A4  2DA6               	goto	u3541
  4486     05A5  07C9               	addwf	___flmul@grs+1,f
  4487     05A6                     u3541:
  4488     05A6  0844               	movf	??___flmul+2,w
  4489     05A7  1103               	clrz
  4490     05A8  1803               	skipnc
  4491     05A9  3E01               	addlw	1
  4492     05AA  1903               	skipnz
  4493     05AB  2DAD               	goto	u3542
  4494     05AC  07CA               	addwf	___flmul@grs+2,f
  4495     05AD                     u3542:
  4496     05AD  0845               	movf	??___flmul+3,w
  4497     05AE  1103               	clrz
  4498     05AF  1803               	skipnc
  4499     05B0  3E01               	addlw	1
  4500     05B1  1903               	skipnz
  4501     05B2  2DB4               	goto	u3543
  4502     05B3  07CB               	addwf	___flmul@grs+3,f
  4503     05B4                     u3543:
  4504     05B4                     l2847:
  4505     05B4  083A               	movf	___flmul@b,w
  4506     05B5  00A0               	movwf	__Umul8_16@multiplicand
  4507     05B6  083F               	movf	___flmul@a+1,w
  4508     05B7  160A  118A  2203  120A  118A  	fcall	__Umul8_16
  4509     05BC  1283               	bcf	3,5	;RP0=0, select bank0
  4510     05BD  1303               	bcf	3,6	;RP1=0, select bank0
  4511     05BE  0821               	movf	?__Umul8_16+1,w
  4512     05BF  00D3               	movwf	___flmul@temp+1
  4513     05C0  0820               	movf	?__Umul8_16,w
  4514     05C1  00D2               	movwf	___flmul@temp
  4515     05C2                     l2849:
  4516     05C2  0852               	movf	___flmul@temp,w
  4517     05C3  00C2               	movwf	??___flmul
  4518     05C4  0853               	movf	___flmul@temp+1,w
  4519     05C5  00C3               	movwf	??___flmul+1
  4520     05C6  01C4               	clrf	??___flmul+2
  4521     05C7  01C5               	clrf	??___flmul+3
  4522     05C8  0842               	movf	??___flmul,w
  4523     05C9  07C8               	addwf	___flmul@grs,f
  4524     05CA  0843               	movf	??___flmul+1,w
  4525     05CB  1103               	clrz
  4526     05CC  1803               	skipnc
  4527     05CD  3E01               	addlw	1
  4528     05CE  1903               	skipnz
  4529     05CF  2DD1               	goto	u3551
  4530     05D0  07C9               	addwf	___flmul@grs+1,f
  4531     05D1                     u3551:
  4532     05D1  0844               	movf	??___flmul+2,w
  4533     05D2  1103               	clrz
  4534     05D3  1803               	skipnc
  4535     05D4  3E01               	addlw	1
  4536     05D5  1903               	skipnz
  4537     05D6  2DD8               	goto	u3552
  4538     05D7  07CA               	addwf	___flmul@grs+2,f
  4539     05D8                     u3552:
  4540     05D8  0845               	movf	??___flmul+3,w
  4541     05D9  1103               	clrz
  4542     05DA  1803               	skipnc
  4543     05DB  3E01               	addlw	1
  4544     05DC  1903               	skipnz
  4545     05DD  2DDF               	goto	u3553
  4546     05DE  07CB               	addwf	___flmul@grs+3,f
  4547     05DF                     u3553:
  4548     05DF                     l2851:
  4549     05DF  3008               	movlw	8
  4550     05E0  00C2               	movwf	??___flmul
  4551     05E1                     u3565:
  4552     05E1  1003               	clrc
  4553     05E2  0DC8               	rlf	___flmul@grs,f
  4554     05E3  0DC9               	rlf	___flmul@grs+1,f
  4555     05E4  0DCA               	rlf	___flmul@grs+2,f
  4556     05E5  0DCB               	rlf	___flmul@grs+3,f
  4557     05E6  0BC2               	decfsz	??___flmul,f
  4558     05E7  2DE1               	goto	u3565
  4559     05E8  083A               	movf	___flmul@b,w
  4560     05E9  00A0               	movwf	__Umul8_16@multiplicand
  4561     05EA  083E               	movf	___flmul@a,w
  4562     05EB  160A  118A  2203  120A  118A  	fcall	__Umul8_16
  4563     05F0  1283               	bcf	3,5	;RP0=0, select bank0
  4564     05F1  1303               	bcf	3,6	;RP1=0, select bank0
  4565     05F2  0821               	movf	?__Umul8_16+1,w
  4566     05F3  00D3               	movwf	___flmul@temp+1
  4567     05F4  0820               	movf	?__Umul8_16,w
  4568     05F5  00D2               	movwf	___flmul@temp
  4569     05F6                     l2853:
  4570     05F6  0852               	movf	___flmul@temp,w
  4571     05F7  00C2               	movwf	??___flmul
  4572     05F8  0853               	movf	___flmul@temp+1,w
  4573     05F9  00C3               	movwf	??___flmul+1
  4574     05FA  01C4               	clrf	??___flmul+2
  4575     05FB  01C5               	clrf	??___flmul+3
  4576     05FC  0842               	movf	??___flmul,w
  4577     05FD  07C8               	addwf	___flmul@grs,f
  4578     05FE  0843               	movf	??___flmul+1,w
  4579     05FF  1103               	clrz
  4580     0600  1803               	skipnc
  4581     0601  3E01               	addlw	1
  4582     0602  1903               	skipnz
  4583     0603  2E05               	goto	u3571
  4584     0604  07C9               	addwf	___flmul@grs+1,f
  4585     0605                     u3571:
  4586     0605  0844               	movf	??___flmul+2,w
  4587     0606  1103               	clrz
  4588     0607  1803               	skipnc
  4589     0608  3E01               	addlw	1
  4590     0609  1903               	skipnz
  4591     060A  2E0C               	goto	u3572
  4592     060B  07CA               	addwf	___flmul@grs+2,f
  4593     060C                     u3572:
  4594     060C  0845               	movf	??___flmul+3,w
  4595     060D  1103               	clrz
  4596     060E  1803               	skipnc
  4597     060F  3E01               	addlw	1
  4598     0610  1903               	skipnz
  4599     0611  2E13               	goto	u3573
  4600     0612  07CB               	addwf	___flmul@grs+3,f
  4601     0613                     u3573:
  4602     0613                     l2855:
  4603     0613  083B               	movf	___flmul@b+1,w
  4604     0614  00A0               	movwf	__Umul8_16@multiplicand
  4605     0615  0840               	movf	___flmul@a+2,w
  4606     0616  160A  118A  2203  120A  118A  	fcall	__Umul8_16
  4607     061B  1283               	bcf	3,5	;RP0=0, select bank0
  4608     061C  1303               	bcf	3,6	;RP1=0, select bank0
  4609     061D  0821               	movf	?__Umul8_16+1,w
  4610     061E  00D3               	movwf	___flmul@temp+1
  4611     061F  0820               	movf	?__Umul8_16,w
  4612     0620  00D2               	movwf	___flmul@temp
  4613     0621  0852               	movf	___flmul@temp,w
  4614     0622  00C2               	movwf	??___flmul
  4615     0623  0853               	movf	___flmul@temp+1,w
  4616     0624  00C3               	movwf	??___flmul+1
  4617     0625  01C4               	clrf	??___flmul+2
  4618     0626  01C5               	clrf	??___flmul+3
  4619     0627  0842               	movf	??___flmul,w
  4620     0628  07CE               	addwf	___flmul@prod,f
  4621     0629  0843               	movf	??___flmul+1,w
  4622     062A  1103               	clrz
  4623     062B  1803               	skipnc
  4624     062C  3E01               	addlw	1
  4625     062D  1903               	skipnz
  4626     062E  2E30               	goto	u3581
  4627     062F  07CF               	addwf	___flmul@prod+1,f
  4628     0630                     u3581:
  4629     0630  0844               	movf	??___flmul+2,w
  4630     0631  1103               	clrz
  4631     0632  1803               	skipnc
  4632     0633  3E01               	addlw	1
  4633     0634  1903               	skipnz
  4634     0635  2E37               	goto	u3582
  4635     0636  07D0               	addwf	___flmul@prod+2,f
  4636     0637                     u3582:
  4637     0637  0845               	movf	??___flmul+3,w
  4638     0638  1103               	clrz
  4639     0639  1803               	skipnc
  4640     063A  3E01               	addlw	1
  4641     063B  1903               	skipnz
  4642     063C  2E3E               	goto	u3583
  4643     063D  07D1               	addwf	___flmul@prod+3,f
  4644     063E                     u3583:
  4645     063E                     l2857:
  4646     063E  083C               	movf	___flmul@b+2,w
  4647     063F  00A0               	movwf	__Umul8_16@multiplicand
  4648     0640  083F               	movf	___flmul@a+1,w
  4649     0641  160A  118A  2203  120A  118A  	fcall	__Umul8_16
  4650     0646  1283               	bcf	3,5	;RP0=0, select bank0
  4651     0647  1303               	bcf	3,6	;RP1=0, select bank0
  4652     0648  0821               	movf	?__Umul8_16+1,w
  4653     0649  00D3               	movwf	___flmul@temp+1
  4654     064A  0820               	movf	?__Umul8_16,w
  4655     064B  00D2               	movwf	___flmul@temp
  4656     064C                     l2859:
  4657     064C  0852               	movf	___flmul@temp,w
  4658     064D  00C2               	movwf	??___flmul
  4659     064E  0853               	movf	___flmul@temp+1,w
  4660     064F  00C3               	movwf	??___flmul+1
  4661     0650  01C4               	clrf	??___flmul+2
  4662     0651  01C5               	clrf	??___flmul+3
  4663     0652  0842               	movf	??___flmul,w
  4664     0653  07CE               	addwf	___flmul@prod,f
  4665     0654  0843               	movf	??___flmul+1,w
  4666     0655  1103               	clrz
  4667     0656  1803               	skipnc
  4668     0657  3E01               	addlw	1
  4669     0658  1903               	skipnz
  4670     0659  2E5B               	goto	u3591
  4671     065A  07CF               	addwf	___flmul@prod+1,f
  4672     065B                     u3591:
  4673     065B  0844               	movf	??___flmul+2,w
  4674     065C  1103               	clrz
  4675     065D  1803               	skipnc
  4676     065E  3E01               	addlw	1
  4677     065F  1903               	skipnz
  4678     0660  2E62               	goto	u3592
  4679     0661  07D0               	addwf	___flmul@prod+2,f
  4680     0662                     u3592:
  4681     0662  0845               	movf	??___flmul+3,w
  4682     0663  1103               	clrz
  4683     0664  1803               	skipnc
  4684     0665  3E01               	addlw	1
  4685     0666  1903               	skipnz
  4686     0667  2E69               	goto	u3593
  4687     0668  07D1               	addwf	___flmul@prod+3,f
  4688     0669                     u3593:
  4689     0669  083C               	movf	___flmul@b+2,w
  4690     066A  00A0               	movwf	__Umul8_16@multiplicand
  4691     066B  0840               	movf	___flmul@a+2,w
  4692     066C  160A  118A  2203  120A  118A  	fcall	__Umul8_16
  4693     0671  1283               	bcf	3,5	;RP0=0, select bank0
  4694     0672  1303               	bcf	3,6	;RP1=0, select bank0
  4695     0673  0821               	movf	?__Umul8_16+1,w
  4696     0674  00D3               	movwf	___flmul@temp+1
  4697     0675  0820               	movf	?__Umul8_16,w
  4698     0676  00D2               	movwf	___flmul@temp
  4699     0677                     l2861:
  4700     0677  0852               	movf	___flmul@temp,w
  4701     0678  00C2               	movwf	??___flmul
  4702     0679  0853               	movf	___flmul@temp+1,w
  4703     067A  00C3               	movwf	??___flmul+1
  4704     067B  01C4               	clrf	??___flmul+2
  4705     067C  01C5               	clrf	??___flmul+3
  4706     067D  3008               	movlw	8
  4707     067E                     u3605:
  4708     067E  1003               	clrc
  4709     067F  0DC2               	rlf	??___flmul,f
  4710     0680  0DC3               	rlf	??___flmul+1,f
  4711     0681  0DC4               	rlf	??___flmul+2,f
  4712     0682  0DC5               	rlf	??___flmul+3,f
  4713     0683                     u3600:
  4714     0683  3EFF               	addlw	-1
  4715     0684  1D03               	skipz
  4716     0685  2E7E               	goto	u3605
  4717     0686  0842               	movf	??___flmul,w
  4718     0687  07CE               	addwf	___flmul@prod,f
  4719     0688  0843               	movf	??___flmul+1,w
  4720     0689  1103               	clrz
  4721     068A  1803               	skipnc
  4722     068B  3E01               	addlw	1
  4723     068C  1903               	skipnz
  4724     068D  2E8F               	goto	u3611
  4725     068E  07CF               	addwf	___flmul@prod+1,f
  4726     068F                     u3611:
  4727     068F  0844               	movf	??___flmul+2,w
  4728     0690  1103               	clrz
  4729     0691  1803               	skipnc
  4730     0692  3E01               	addlw	1
  4731     0693  1903               	skipnz
  4732     0694  2E96               	goto	u3612
  4733     0695  07D0               	addwf	___flmul@prod+2,f
  4734     0696                     u3612:
  4735     0696  0845               	movf	??___flmul+3,w
  4736     0697  1103               	clrz
  4737     0698  1803               	skipnc
  4738     0699  3E01               	addlw	1
  4739     069A  1903               	skipnz
  4740     069B  2E9D               	goto	u3613
  4741     069C  07D1               	addwf	___flmul@prod+3,f
  4742     069D                     u3613:
  4743     069D                     l2863:
  4744     069D  0848               	movf	___flmul@grs,w
  4745     069E  00C2               	movwf	??___flmul
  4746     069F  0849               	movf	___flmul@grs+1,w
  4747     06A0  00C3               	movwf	??___flmul+1
  4748     06A1  084A               	movf	___flmul@grs+2,w
  4749     06A2  00C4               	movwf	??___flmul+2
  4750     06A3  084B               	movf	___flmul@grs+3,w
  4751     06A4  00C5               	movwf	??___flmul+3
  4752     06A5  3018               	movlw	24
  4753     06A6                     u3625:
  4754     06A6  1003               	clrc
  4755     06A7  0CC5               	rrf	??___flmul+3,f
  4756     06A8  0CC4               	rrf	??___flmul+2,f
  4757     06A9  0CC3               	rrf	??___flmul+1,f
  4758     06AA  0CC2               	rrf	??___flmul,f
  4759     06AB                     u3620:
  4760     06AB  3EFF               	addlw	-1
  4761     06AC  1D03               	skipz
  4762     06AD  2EA6               	goto	u3625
  4763     06AE  0842               	movf	??___flmul,w
  4764     06AF  07CE               	addwf	___flmul@prod,f
  4765     06B0  0843               	movf	??___flmul+1,w
  4766     06B1  1103               	clrz
  4767     06B2  1803               	skipnc
  4768     06B3  3E01               	addlw	1
  4769     06B4  1903               	skipnz
  4770     06B5  2EB7               	goto	u3631
  4771     06B6  07CF               	addwf	___flmul@prod+1,f
  4772     06B7                     u3631:
  4773     06B7  0844               	movf	??___flmul+2,w
  4774     06B8  1103               	clrz
  4775     06B9  1803               	skipnc
  4776     06BA  3E01               	addlw	1
  4777     06BB  1903               	skipnz
  4778     06BC  2EBE               	goto	u3632
  4779     06BD  07D0               	addwf	___flmul@prod+2,f
  4780     06BE                     u3632:
  4781     06BE  0845               	movf	??___flmul+3,w
  4782     06BF  1103               	clrz
  4783     06C0  1803               	skipnc
  4784     06C1  3E01               	addlw	1
  4785     06C2  1903               	skipnz
  4786     06C3  2EC5               	goto	u3633
  4787     06C4  07D1               	addwf	___flmul@prod+3,f
  4788     06C5                     u3633:
  4789     06C5                     l2865:
  4790     06C5  3008               	movlw	8
  4791     06C6  00C2               	movwf	??___flmul
  4792     06C7                     u3645:
  4793     06C7  1003               	clrc
  4794     06C8  0DC8               	rlf	___flmul@grs,f
  4795     06C9  0DC9               	rlf	___flmul@grs+1,f
  4796     06CA  0DCA               	rlf	___flmul@grs+2,f
  4797     06CB  0DCB               	rlf	___flmul@grs+3,f
  4798     06CC  0BC2               	decfsz	??___flmul,f
  4799     06CD  2EC7               	goto	u3645
  4800     06CE                     l2867:
  4801     06CE  084D               	movf	___flmul@bexp,w
  4802     06CF  074C               	addwf	___flmul@aexp,w
  4803     06D0  00C2               	movwf	??___flmul
  4804     06D1  01C3               	clrf	??___flmul+1
  4805     06D2  0DC3               	rlf	??___flmul+1,f
  4806     06D3  0842               	movf	??___flmul,w
  4807     06D4  3E82               	addlw	130
  4808     06D5  00D2               	movwf	___flmul@temp
  4809     06D6  0843               	movf	??___flmul+1,w
  4810     06D7  1803               	skipnc
  4811     06D8  3E01               	addlw	1
  4812     06D9  3EFF               	addlw	255
  4813     06DA  00D3               	movwf	___flmul@temp+1
  4814     06DB  2EF9               	goto	l2879
  4815     06DC                     l2869:
  4816     06DC  3001               	movlw	1
  4817     06DD  00C2               	movwf	??___flmul
  4818     06DE                     u3655:
  4819     06DE  1003               	clrc
  4820     06DF  0DCE               	rlf	___flmul@prod,f
  4821     06E0  0DCF               	rlf	___flmul@prod+1,f
  4822     06E1  0DD0               	rlf	___flmul@prod+2,f
  4823     06E2  0DD1               	rlf	___flmul@prod+3,f
  4824     06E3  0BC2               	decfsz	??___flmul,f
  4825     06E4  2EDE               	goto	u3655
  4826     06E5                     l2871:
  4827     06E5  1FCB               	btfss	___flmul@grs+3,7
  4828     06E6  2EE8               	goto	u3661
  4829     06E7  2EE9               	goto	u3660
  4830     06E8                     u3661:
  4831     06E8  2EEA               	goto	l2875
  4832     06E9                     u3660:
  4833     06E9                     l2873:
  4834     06E9  144E               	bsf	___flmul@prod,0
  4835     06EA                     l2875:
  4836     06EA  3001               	movlw	1
  4837     06EB  00C2               	movwf	??___flmul
  4838     06EC                     u3675:
  4839     06EC  1003               	clrc
  4840     06ED  0DC8               	rlf	___flmul@grs,f
  4841     06EE  0DC9               	rlf	___flmul@grs+1,f
  4842     06EF  0DCA               	rlf	___flmul@grs+2,f
  4843     06F0  0DCB               	rlf	___flmul@grs+3,f
  4844     06F1  0BC2               	decfsz	??___flmul,f
  4845     06F2  2EEC               	goto	u3675
  4846     06F3                     l2877:
  4847     06F3  30FF               	movlw	255
  4848     06F4  07D2               	addwf	___flmul@temp,f
  4849     06F5  1803               	skipnc
  4850     06F6  0AD3               	incf	___flmul@temp+1,f
  4851     06F7  30FF               	movlw	255
  4852     06F8  07D3               	addwf	___flmul@temp+1,f
  4853     06F9                     l2879:
  4854     06F9  1FD0               	btfss	___flmul@prod+2,7
  4855     06FA  2EFC               	goto	u3681
  4856     06FB  2EFD               	goto	u3680
  4857     06FC                     u3681:
  4858     06FC  2EDC               	goto	l2869
  4859     06FD                     u3680:
  4860     06FD                     l2881:
  4861     06FD  01CC               	clrf	___flmul@aexp
  4862     06FE                     l2883:
  4863     06FE  1FCB               	btfss	___flmul@grs+3,7
  4864     06FF  2F01               	goto	u3691
  4865     0700  2F02               	goto	u3690
  4866     0701                     u3691:
  4867     0701  2F1E               	goto	l2891
  4868     0702                     u3690:
  4869     0702                     l2885:
  4870     0702  30FF               	movlw	255
  4871     0703  0548               	andwf	___flmul@grs,w
  4872     0704  00C2               	movwf	??___flmul
  4873     0705  30FF               	movlw	255
  4874     0706  0549               	andwf	___flmul@grs+1,w
  4875     0707  00C3               	movwf	??___flmul+1
  4876     0708  30FF               	movlw	255
  4877     0709  054A               	andwf	___flmul@grs+2,w
  4878     070A  00C4               	movwf	??___flmul+2
  4879     070B  307F               	movlw	127
  4880     070C  054B               	andwf	___flmul@grs+3,w
  4881     070D  00C5               	movwf	??___flmul+3
  4882     070E  0845               	movf	??___flmul+3,w
  4883     070F  0444               	iorwf	??___flmul+2,w
  4884     0710  0443               	iorwf	??___flmul+1,w
  4885     0711  0442               	iorwf	??___flmul,w
  4886     0712  1903               	skipnz
  4887     0713  2F15               	goto	u3701
  4888     0714  2F16               	goto	u3700
  4889     0715                     u3701:
  4890     0715  2F19               	goto	l805
  4891     0716                     u3700:
  4892     0716                     l2887:
  4893     0716  01CC               	clrf	___flmul@aexp
  4894     0717  0ACC               	incf	___flmul@aexp,f
  4895     0718  2F1E               	goto	l2891
  4896     0719                     l805:
  4897     0719  1C4E               	btfss	___flmul@prod,0
  4898     071A  2F1C               	goto	u3711
  4899     071B  2F1D               	goto	u3710
  4900     071C                     u3711:
  4901     071C  2F1E               	goto	l2891
  4902     071D                     u3710:
  4903     071D  2F16               	goto	l2887
  4904     071E                     l2891:
  4905     071E  084C               	movf	___flmul@aexp,w
  4906     071F  1903               	btfsc	3,2
  4907     0720  2F22               	goto	u3721
  4908     0721  2F23               	goto	u3720
  4909     0722                     u3721:
  4910     0722  2F54               	goto	l2901
  4911     0723                     u3720:
  4912     0723                     l2893:
  4913     0723  3001               	movlw	1
  4914     0724  07CE               	addwf	___flmul@prod,f
  4915     0725  3000               	movlw	0
  4916     0726  1803               	skipnc
  4917     0727  3001               	movlw	1
  4918     0728  07CF               	addwf	___flmul@prod+1,f
  4919     0729  3000               	movlw	0
  4920     072A  1803               	skipnc
  4921     072B  3001               	movlw	1
  4922     072C  07D0               	addwf	___flmul@prod+2,f
  4923     072D  3000               	movlw	0
  4924     072E  1803               	skipnc
  4925     072F  3001               	movlw	1
  4926     0730  07D1               	addwf	___flmul@prod+3,f
  4927     0731                     l2895:
  4928     0731  1C51               	btfss	___flmul@prod+3,0
  4929     0732  2F34               	goto	u3731
  4930     0733  2F35               	goto	u3730
  4931     0734                     u3731:
  4932     0734  2F54               	goto	l2901
  4933     0735                     u3730:
  4934     0735                     l2897:
  4935     0735  084E               	movf	___flmul@prod,w
  4936     0736  00C2               	movwf	??___flmul
  4937     0737  084F               	movf	___flmul@prod+1,w
  4938     0738  00C3               	movwf	??___flmul+1
  4939     0739  0850               	movf	___flmul@prod+2,w
  4940     073A  00C4               	movwf	??___flmul+2
  4941     073B  0851               	movf	___flmul@prod+3,w
  4942     073C  00C5               	movwf	??___flmul+3
  4943     073D  3001               	movlw	1
  4944     073E  00C6               	movwf	??___flmul+4
  4945     073F                     u3745:
  4946     073F  0D45               	rlf	??___flmul+3,w
  4947     0740  0CC5               	rrf	??___flmul+3,f
  4948     0741  0CC4               	rrf	??___flmul+2,f
  4949     0742  0CC3               	rrf	??___flmul+1,f
  4950     0743  0CC2               	rrf	??___flmul,f
  4951     0744                     u3740:
  4952     0744  0BC6               	decfsz	??___flmul+4,f
  4953     0745  2F3F               	goto	u3745
  4954     0746  0845               	movf	??___flmul+3,w
  4955     0747  00D1               	movwf	___flmul@prod+3
  4956     0748  0844               	movf	??___flmul+2,w
  4957     0749  00D0               	movwf	___flmul@prod+2
  4958     074A  0843               	movf	??___flmul+1,w
  4959     074B  00CF               	movwf	___flmul@prod+1
  4960     074C  0842               	movf	??___flmul,w
  4961     074D  00CE               	movwf	___flmul@prod
  4962     074E                     l2899:
  4963     074E  3001               	movlw	1
  4964     074F  07D2               	addwf	___flmul@temp,f
  4965     0750  1803               	skipnc
  4966     0751  0AD3               	incf	___flmul@temp+1,f
  4967     0752  3000               	movlw	0
  4968     0753  07D3               	addwf	___flmul@temp+1,f
  4969     0754                     l2901:
  4970     0754  0853               	movf	___flmul@temp+1,w
  4971     0755  3A80               	xorlw	128
  4972     0756  00FF               	movwf	btemp+1
  4973     0757  3080               	movlw	128
  4974     0758  027F               	subwf	btemp+1,w
  4975     0759  1D03               	skipz
  4976     075A  2F5D               	goto	u3755
  4977     075B  30FF               	movlw	255
  4978     075C  0252               	subwf	___flmul@temp,w
  4979     075D                     u3755:
  4980     075D  1C03               	skipc
  4981     075E  2F60               	goto	u3751
  4982     075F  2F61               	goto	u3750
  4983     0760                     u3751:
  4984     0760  2F6C               	goto	l2905
  4985     0761                     u3750:
  4986     0761                     l2903:
  4987     0761  307F               	movlw	127
  4988     0762  1283               	bcf	3,5	;RP0=0, select bank0
  4989     0763  1303               	bcf	3,6	;RP1=0, select bank0
  4990     0764  00D1               	movwf	___flmul@prod+3
  4991     0765  3080               	movlw	128
  4992     0766  00D0               	movwf	___flmul@prod+2
  4993     0767  3000               	movlw	0
  4994     0768  00CF               	movwf	___flmul@prod+1
  4995     0769  3000               	movlw	0
  4996     076A  00CE               	movwf	___flmul@prod
  4997     076B  2F9D               	goto	l2919
  4998     076C                     l2905:
  4999     076C  1283               	bcf	3,5	;RP0=0, select bank0
  5000     076D  1303               	bcf	3,6	;RP1=0, select bank0
  5001     076E  0853               	movf	___flmul@temp+1,w
  5002     076F  3A80               	xorlw	128
  5003     0770  00FF               	movwf	btemp+1
  5004     0771  3080               	movlw	128
  5005     0772  027F               	subwf	btemp+1,w
  5006     0773  1D03               	skipz
  5007     0774  2F77               	goto	u3765
  5008     0775  3001               	movlw	1
  5009     0776  0252               	subwf	___flmul@temp,w
  5010     0777                     u3765:
  5011     0777  1803               	skipnc
  5012     0778  2F7A               	goto	u3761
  5013     0779  2F7B               	goto	u3760
  5014     077A                     u3761:
  5015     077A  2F87               	goto	l2911
  5016     077B                     u3760:
  5017     077B                     l2907:
  5018     077B  3000               	movlw	0
  5019     077C  1283               	bcf	3,5	;RP0=0, select bank0
  5020     077D  1303               	bcf	3,6	;RP1=0, select bank0
  5021     077E  00D1               	movwf	___flmul@prod+3
  5022     077F  3000               	movlw	0
  5023     0780  00D0               	movwf	___flmul@prod+2
  5024     0781  3000               	movlw	0
  5025     0782  00CF               	movwf	___flmul@prod+1
  5026     0783  3000               	movlw	0
  5027     0784  00CE               	movwf	___flmul@prod
  5028     0785                     l2909:
  5029     0785  01C7               	clrf	___flmul@sign
  5030     0786  2F9D               	goto	l2919
  5031     0787                     l2911:
  5032     0787  1283               	bcf	3,5	;RP0=0, select bank0
  5033     0788  1303               	bcf	3,6	;RP1=0, select bank0
  5034     0789  0852               	movf	___flmul@temp,w
  5035     078A  00CD               	movwf	___flmul@bexp
  5036     078B  30FF               	movlw	255
  5037     078C  05CE               	andwf	___flmul@prod,f
  5038     078D  30FF               	movlw	255
  5039     078E  05CF               	andwf	___flmul@prod+1,f
  5040     078F  307F               	movlw	127
  5041     0790  05D0               	andwf	___flmul@prod+2,f
  5042     0791  3000               	movlw	0
  5043     0792  05D1               	andwf	___flmul@prod+3,f
  5044     0793                     l2913:
  5045     0793  1C4D               	btfss	___flmul@bexp,0
  5046     0794  2F96               	goto	u3771
  5047     0795  2F97               	goto	u3770
  5048     0796                     u3771:
  5049     0796  2F98               	goto	l2917
  5050     0797                     u3770:
  5051     0797                     l2915:
  5052     0797  17D0               	bsf	___flmul@prod+2,7
  5053     0798                     l2917:
  5054     0798  084D               	movf	___flmul@bexp,w
  5055     0799  00C2               	movwf	??___flmul
  5056     079A  1003               	clrc
  5057     079B  0C42               	rrf	??___flmul,w
  5058     079C  00D1               	movwf	___flmul@prod+3
  5059     079D                     l2919:
  5060     079D  0847               	movf	___flmul@sign,w
  5061     079E  00FF               	movwf	btemp+1
  5062     079F  087F               	movf	btemp+1,w
  5063     07A0  04D1               	iorwf	___flmul@prod+3,f
  5064     07A1                     l2921:
  5065     07A1  0851               	movf	___flmul@prod+3,w
  5066     07A2  00BD               	movwf	?___flmul+3
  5067     07A3  0850               	movf	___flmul@prod+2,w
  5068     07A4  00BC               	movwf	?___flmul+2
  5069     07A5  084F               	movf	___flmul@prod+1,w
  5070     07A6  00BB               	movwf	?___flmul+1
  5071     07A7  084E               	movf	___flmul@prod,w
  5072     07A8  00BA               	movwf	?___flmul
  5073     07A9                     l799:
  5074     07A9  0008               	return
  5075     07AA                     __end_of___flmul:
  5076                           
  5077                           	psect	text15
  5078     1203                     __ptext15:	
  5079 ;; *************** function __Umul8_16 *****************
  5080 ;; Defined at:
  5081 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul8_16.c"
  5082 ;; Parameters:    Size  Location     Type
  5083 ;;  multiplier      1    wreg     unsigned char 
  5084 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  5085 ;; Auto vars:     Size  Location     Type
  5086 ;;  multiplier      1    8[BANK0 ] unsigned char 
  5087 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  5088 ;;  product         2    4[BANK0 ] unsigned int 
  5089 ;; Return value:  Size  Location     Type
  5090 ;;                  2    0[BANK0 ] unsigned int 
  5091 ;; Registers used:
  5092 ;;		wreg, status,2, status,0
  5093 ;; Tracked objects:
  5094 ;;		On entry : 0/0
  5095 ;;		On exit  : 0/0
  5096 ;;		Unchanged: 0/0
  5097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5098 ;;      Params:         0       2       0       0       0
  5099 ;;      Locals:         0       5       0       0       0
  5100 ;;      Temps:          0       2       0       0       0
  5101 ;;      Totals:         0       9       0       0       0
  5102 ;;Total ram usage:        9 bytes
  5103 ;; Hardware stack levels used: 1
  5104 ;; Hardware stack levels required when called: 2
  5105 ;; This function calls:
  5106 ;;		Nothing
  5107 ;; This function is called by:
  5108 ;;		___flmul
  5109 ;; This function uses a non-reentrant model
  5110 ;;
  5111                           
  5112     1203                     __Umul8_16:	
  5113                           ;psect for function __Umul8_16
  5114                           
  5115                           
  5116                           ;incstack = 0
  5117                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5118                           ;__Umul8_16@multiplier stored from wreg
  5119     1203  1283               	bcf	3,5	;RP0=0, select bank0
  5120     1204  1303               	bcf	3,6	;RP1=0, select bank0
  5121     1205  00A8               	movwf	__Umul8_16@multiplier
  5122     1206                     l2307:
  5123     1206  01A4               	clrf	__Umul8_16@product
  5124     1207  01A5               	clrf	__Umul8_16@product+1
  5125     1208                     l2309:
  5126     1208  0820               	movf	__Umul8_16@multiplicand,w
  5127     1209  00A2               	movwf	??__Umul8_16
  5128     120A  01A3               	clrf	??__Umul8_16+1
  5129     120B  0822               	movf	??__Umul8_16,w
  5130     120C  00A6               	movwf	__Umul8_16@word_mpld
  5131     120D  0823               	movf	??__Umul8_16+1,w
  5132     120E  00A7               	movwf	__Umul8_16@word_mpld+1
  5133     120F                     l2311:
  5134     120F  1C28               	btfss	__Umul8_16@multiplier,0
  5135     1210  2A12               	goto	u2531
  5136     1211  2A13               	goto	u2530
  5137     1212                     u2531:
  5138     1212  2A19               	goto	l818
  5139     1213                     u2530:
  5140     1213                     l2313:
  5141     1213  0826               	movf	__Umul8_16@word_mpld,w
  5142     1214  07A4               	addwf	__Umul8_16@product,f
  5143     1215  1803               	skipnc
  5144     1216  0AA5               	incf	__Umul8_16@product+1,f
  5145     1217  0827               	movf	__Umul8_16@word_mpld+1,w
  5146     1218  07A5               	addwf	__Umul8_16@product+1,f
  5147     1219                     l818:
  5148     1219  3001               	movlw	1
  5149     121A                     u2545:
  5150     121A  1003               	clrc
  5151     121B  0DA6               	rlf	__Umul8_16@word_mpld,f
  5152     121C  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  5153     121D  3EFF               	addlw	-1
  5154     121E  1D03               	skipz
  5155     121F  2A1A               	goto	u2545
  5156     1220  1003               	clrc
  5157     1221  0CA8               	rrf	__Umul8_16@multiplier,f
  5158     1222                     l2315:
  5159     1222  0828               	movf	__Umul8_16@multiplier,w
  5160     1223  1D03               	btfss	3,2
  5161     1224  2A26               	goto	u2551
  5162     1225  2A27               	goto	u2550
  5163     1226                     u2551:
  5164     1226  2A0F               	goto	l2311
  5165     1227                     u2550:
  5166     1227                     l2317:
  5167     1227  0825               	movf	__Umul8_16@product+1,w
  5168     1228  00A1               	movwf	?__Umul8_16+1
  5169     1229  0824               	movf	__Umul8_16@product,w
  5170     122A  00A0               	movwf	?__Umul8_16
  5171     122B                     l820:
  5172     122B  0008               	return
  5173     122C                     __end_of__Umul8_16:
  5174                           
  5175                           	psect	text16
  5176     0827                     __ptext16:	
  5177 ;; *************** function ___fldiv *****************
  5178 ;; Defined at:
  5179 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcdiv.c"
  5180 ;; Parameters:    Size  Location     Type
  5181 ;;  a               4    0[BANK0 ] unsigned int 
  5182 ;;  b               4    4[BANK0 ] unsigned int 
  5183 ;; Auto vars:     Size  Location     Type
  5184 ;;  grs             4   20[BANK0 ] unsigned long 
  5185 ;;  rem             4   13[BANK0 ] unsigned long 
  5186 ;;  new_exp         2   18[BANK0 ] int 
  5187 ;;  aexp            1   25[BANK0 ] unsigned char 
  5188 ;;  bexp            1   24[BANK0 ] unsigned char 
  5189 ;;  sign            1   17[BANK0 ] unsigned char 
  5190 ;; Return value:  Size  Location     Type
  5191 ;;                  4    0[BANK0 ] unsigned char 
  5192 ;; Registers used:
  5193 ;;		wreg, status,2, status,0, btemp+1
  5194 ;; Tracked objects:
  5195 ;;		On entry : 0/0
  5196 ;;		On exit  : 0/0
  5197 ;;		Unchanged: 0/0
  5198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5199 ;;      Params:         0       8       0       0       0
  5200 ;;      Locals:         0      13       0       0       0
  5201 ;;      Temps:          0       5       0       0       0
  5202 ;;      Totals:         0      26       0       0       0
  5203 ;;Total ram usage:       26 bytes
  5204 ;; Hardware stack levels used: 1
  5205 ;; Hardware stack levels required when called: 2
  5206 ;; This function calls:
  5207 ;;		Nothing
  5208 ;; This function is called by:
  5209 ;;		_main
  5210 ;; This function uses a non-reentrant model
  5211 ;;
  5212                           
  5213     0827                     ___fldiv:	
  5214                           ;psect for function ___fldiv
  5215                           
  5216     0827                     l2637:	
  5217                           ;incstack = 0
  5218                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  5219                           
  5220     0827  1283               	bcf	3,5	;RP0=0, select bank0
  5221     0828  1303               	bcf	3,6	;RP1=0, select bank0
  5222     0829  0827               	movf	___fldiv@b+3,w
  5223     082A  3980               	andlw	128
  5224     082B  00B1               	movwf	___fldiv@sign
  5225     082C                     l2639:
  5226     082C  0827               	movf	___fldiv@b+3,w
  5227     082D  00A8               	movwf	??___fldiv
  5228     082E  0728               	addwf	??___fldiv,w
  5229     082F  00B8               	movwf	___fldiv@bexp
  5230     0830                     l2641:
  5231     0830  1FA6               	btfss	___fldiv@b+2,7
  5232     0831  2833               	goto	u3121
  5233     0832  2834               	goto	u3120
  5234     0833                     u3121:
  5235     0833  2835               	goto	l2645
  5236     0834                     u3120:
  5237     0834                     l2643:
  5238     0834  1438               	bsf	___fldiv@bexp,0
  5239     0835                     l2645:
  5240     0835  0838               	movf	___fldiv@bexp,w
  5241     0836  1903               	btfsc	3,2
  5242     0837  2839               	goto	u3131
  5243     0838  283A               	goto	u3130
  5244     0839                     u3131:
  5245     0839  284A               	goto	l2655
  5246     083A                     u3130:
  5247     083A                     l2647:
  5248     083A  0A38               	incf	___fldiv@bexp,w
  5249     083B  1D03               	btfss	3,2
  5250     083C  283E               	goto	u3141
  5251     083D  283F               	goto	u3140
  5252     083E                     u3141:
  5253     083E  2847               	goto	l2651
  5254     083F                     u3140:
  5255     083F                     l2649:
  5256     083F  3000               	movlw	0
  5257     0840  00A7               	movwf	___fldiv@b+3
  5258     0841  3000               	movlw	0
  5259     0842  00A6               	movwf	___fldiv@b+2
  5260     0843  3000               	movlw	0
  5261     0844  00A5               	movwf	___fldiv@b+1
  5262     0845  3000               	movlw	0
  5263     0846  00A4               	movwf	___fldiv@b
  5264     0847                     l2651:
  5265     0847  17A6               	bsf	___fldiv@b+2,7
  5266     0848                     l2653:
  5267     0848  01A7               	clrf	___fldiv@b+3
  5268     0849  2852               	goto	l2657
  5269     084A                     l2655:
  5270     084A  3000               	movlw	0
  5271     084B  00A7               	movwf	___fldiv@b+3
  5272     084C  3000               	movlw	0
  5273     084D  00A6               	movwf	___fldiv@b+2
  5274     084E  3000               	movlw	0
  5275     084F  00A5               	movwf	___fldiv@b+1
  5276     0850  3000               	movlw	0
  5277     0851  00A4               	movwf	___fldiv@b
  5278     0852                     l2657:
  5279     0852  0823               	movf	___fldiv@a+3,w
  5280     0853  3980               	andlw	128
  5281     0854  00FF               	movwf	btemp+1
  5282     0855  087F               	movf	btemp+1,w
  5283     0856  06B1               	xorwf	___fldiv@sign,f
  5284     0857                     l2659:
  5285     0857  0823               	movf	___fldiv@a+3,w
  5286     0858  00A8               	movwf	??___fldiv
  5287     0859  0728               	addwf	??___fldiv,w
  5288     085A  00B9               	movwf	___fldiv@aexp
  5289     085B                     l2661:
  5290     085B  1FA2               	btfss	___fldiv@a+2,7
  5291     085C  285E               	goto	u3151
  5292     085D  285F               	goto	u3150
  5293     085E                     u3151:
  5294     085E  2860               	goto	l2665
  5295     085F                     u3150:
  5296     085F                     l2663:
  5297     085F  1439               	bsf	___fldiv@aexp,0
  5298     0860                     l2665:
  5299     0860  0839               	movf	___fldiv@aexp,w
  5300     0861  1903               	btfsc	3,2
  5301     0862  2864               	goto	u3161
  5302     0863  2865               	goto	u3160
  5303     0864                     u3161:
  5304     0864  2875               	goto	l2675
  5305     0865                     u3160:
  5306     0865                     l2667:
  5307     0865  0A39               	incf	___fldiv@aexp,w
  5308     0866  1D03               	btfss	3,2
  5309     0867  2869               	goto	u3171
  5310     0868  286A               	goto	u3170
  5311     0869                     u3171:
  5312     0869  2872               	goto	l2671
  5313     086A                     u3170:
  5314     086A                     l2669:
  5315     086A  3000               	movlw	0
  5316     086B  00A3               	movwf	___fldiv@a+3
  5317     086C  3000               	movlw	0
  5318     086D  00A2               	movwf	___fldiv@a+2
  5319     086E  3000               	movlw	0
  5320     086F  00A1               	movwf	___fldiv@a+1
  5321     0870  3000               	movlw	0
  5322     0871  00A0               	movwf	___fldiv@a
  5323     0872                     l2671:
  5324     0872  17A2               	bsf	___fldiv@a+2,7
  5325     0873                     l2673:
  5326     0873  01A3               	clrf	___fldiv@a+3
  5327     0874  287D               	goto	l759
  5328     0875                     l2675:
  5329     0875  3000               	movlw	0
  5330     0876  00A3               	movwf	___fldiv@a+3
  5331     0877  3000               	movlw	0
  5332     0878  00A2               	movwf	___fldiv@a+2
  5333     0879  3000               	movlw	0
  5334     087A  00A1               	movwf	___fldiv@a+1
  5335     087B  3000               	movlw	0
  5336     087C  00A0               	movwf	___fldiv@a
  5337     087D                     l759:
  5338     087D  0823               	movf	___fldiv@a+3,w
  5339     087E  0422               	iorwf	___fldiv@a+2,w
  5340     087F  0421               	iorwf	___fldiv@a+1,w
  5341     0880  0420               	iorwf	___fldiv@a,w
  5342     0881  1D03               	skipz
  5343     0882  2884               	goto	u3181
  5344     0883  2885               	goto	u3180
  5345     0884                     u3181:
  5346     0884  289E               	goto	l2685
  5347     0885                     u3180:
  5348     0885                     l2677:
  5349     0885  3000               	movlw	0
  5350     0886  00A7               	movwf	___fldiv@b+3
  5351     0887  3000               	movlw	0
  5352     0888  00A6               	movwf	___fldiv@b+2
  5353     0889  3000               	movlw	0
  5354     088A  00A5               	movwf	___fldiv@b+1
  5355     088B  3000               	movlw	0
  5356     088C  00A4               	movwf	___fldiv@b
  5357     088D  3080               	movlw	128
  5358     088E  04A6               	iorwf	___fldiv@b+2,f
  5359     088F  307F               	movlw	127
  5360     0890  04A7               	iorwf	___fldiv@b+3,f
  5361     0891                     l2679:
  5362     0891  0831               	movf	___fldiv@sign,w
  5363     0892  00FF               	movwf	btemp+1
  5364     0893  087F               	movf	btemp+1,w
  5365     0894  04A7               	iorwf	___fldiv@b+3,f
  5366     0895                     l2681:
  5367     0895  0827               	movf	___fldiv@b+3,w
  5368     0896  00A3               	movwf	?___fldiv+3
  5369     0897  0826               	movf	___fldiv@b+2,w
  5370     0898  00A2               	movwf	?___fldiv+2
  5371     0899  0825               	movf	___fldiv@b+1,w
  5372     089A  00A1               	movwf	?___fldiv+1
  5373     089B  0824               	movf	___fldiv@b,w
  5374     089C  00A0               	movwf	?___fldiv
  5375     089D  29F5               	goto	l761
  5376     089E                     l2685:
  5377     089E  0838               	movf	___fldiv@bexp,w
  5378     089F  1D03               	btfss	3,2
  5379     08A0  28A2               	goto	u3191
  5380     08A1  28A3               	goto	u3190
  5381     08A2                     u3191:
  5382     08A2  28AC               	goto	l2691
  5383     08A3                     u3190:
  5384     08A3                     l2687:
  5385     08A3  3000               	movlw	0
  5386     08A4  00A3               	movwf	?___fldiv+3
  5387     08A5  3000               	movlw	0
  5388     08A6  00A2               	movwf	?___fldiv+2
  5389     08A7  3000               	movlw	0
  5390     08A8  00A1               	movwf	?___fldiv+1
  5391     08A9  3000               	movlw	0
  5392     08AA  00A0               	movwf	?___fldiv
  5393     08AB  29F5               	goto	l761
  5394     08AC                     l2691:
  5395     08AC  0838               	movf	___fldiv@bexp,w
  5396     08AD  00A8               	movwf	??___fldiv
  5397     08AE  01A9               	clrf	??___fldiv+1
  5398     08AF  0829               	movf	??___fldiv+1,w
  5399     08B0  00AB               	movwf	??___fldiv+3
  5400     08B1  0839               	movf	___fldiv@aexp,w
  5401     08B2  0228               	subwf	??___fldiv,w
  5402     08B3  00AA               	movwf	??___fldiv+2
  5403     08B4  1C03               	skipc
  5404     08B5  03AB               	decf	??___fldiv+3,f
  5405     08B6  082A               	movf	??___fldiv+2,w
  5406     08B7  3E7F               	addlw	127
  5407     08B8  00B2               	movwf	___fldiv@new_exp
  5408     08B9  082B               	movf	??___fldiv+3,w
  5409     08BA  1803               	skipnc
  5410     08BB  3E01               	addlw	1
  5411     08BC  3E00               	addlw	0
  5412     08BD  00B3               	movwf	___fldiv@new_exp+1
  5413     08BE                     l2693:
  5414     08BE  0827               	movf	___fldiv@b+3,w
  5415     08BF  00B0               	movwf	___fldiv@rem+3
  5416     08C0  0826               	movf	___fldiv@b+2,w
  5417     08C1  00AF               	movwf	___fldiv@rem+2
  5418     08C2  0825               	movf	___fldiv@b+1,w
  5419     08C3  00AE               	movwf	___fldiv@rem+1
  5420     08C4  0824               	movf	___fldiv@b,w
  5421     08C5  00AD               	movwf	___fldiv@rem
  5422     08C6                     l2695:
  5423     08C6  3000               	movlw	0
  5424     08C7  00A7               	movwf	___fldiv@b+3
  5425     08C8  3000               	movlw	0
  5426     08C9  00A6               	movwf	___fldiv@b+2
  5427     08CA  3000               	movlw	0
  5428     08CB  00A5               	movwf	___fldiv@b+1
  5429     08CC  3000               	movlw	0
  5430     08CD  00A4               	movwf	___fldiv@b
  5431     08CE                     l2697:
  5432     08CE  3000               	movlw	0
  5433     08CF  00B7               	movwf	___fldiv@grs+3
  5434     08D0  3000               	movlw	0
  5435     08D1  00B6               	movwf	___fldiv@grs+2
  5436     08D2  3000               	movlw	0
  5437     08D3  00B5               	movwf	___fldiv@grs+1
  5438     08D4  3000               	movlw	0
  5439     08D5  00B4               	movwf	___fldiv@grs
  5440     08D6                     l2699:
  5441     08D6  01B9               	clrf	___fldiv@aexp
  5442     08D7  2922               	goto	l2719
  5443     08D8                     l2701:
  5444     08D8  0839               	movf	___fldiv@aexp,w
  5445     08D9  1903               	btfsc	3,2
  5446     08DA  28DC               	goto	u3201
  5447     08DB  28DD               	goto	u3200
  5448     08DC                     u3201:
  5449     08DC  28FD               	goto	l2711
  5450     08DD                     u3200:
  5451     08DD                     l2703:
  5452     08DD  3001               	movlw	1
  5453     08DE  00A8               	movwf	??___fldiv
  5454     08DF                     u3215:
  5455     08DF  1003               	clrc
  5456     08E0  0DAD               	rlf	___fldiv@rem,f
  5457     08E1  0DAE               	rlf	___fldiv@rem+1,f
  5458     08E2  0DAF               	rlf	___fldiv@rem+2,f
  5459     08E3  0DB0               	rlf	___fldiv@rem+3,f
  5460     08E4  0BA8               	decfsz	??___fldiv,f
  5461     08E5  28DF               	goto	u3215
  5462     08E6  3001               	movlw	1
  5463     08E7  00A8               	movwf	??___fldiv
  5464     08E8                     u3225:
  5465     08E8  1003               	clrc
  5466     08E9  0DA4               	rlf	___fldiv@b,f
  5467     08EA  0DA5               	rlf	___fldiv@b+1,f
  5468     08EB  0DA6               	rlf	___fldiv@b+2,f
  5469     08EC  0DA7               	rlf	___fldiv@b+3,f
  5470     08ED  0BA8               	decfsz	??___fldiv,f
  5471     08EE  28E8               	goto	u3225
  5472     08EF                     l2705:
  5473     08EF  1FB7               	btfss	___fldiv@grs+3,7
  5474     08F0  28F2               	goto	u3231
  5475     08F1  28F3               	goto	u3230
  5476     08F2                     u3231:
  5477     08F2  28F4               	goto	l2709
  5478     08F3                     u3230:
  5479     08F3                     l2707:
  5480     08F3  1424               	bsf	___fldiv@b,0
  5481     08F4                     l2709:
  5482     08F4  3001               	movlw	1
  5483     08F5  00A8               	movwf	??___fldiv
  5484     08F6                     u3245:
  5485     08F6  1003               	clrc
  5486     08F7  0DB4               	rlf	___fldiv@grs,f
  5487     08F8  0DB5               	rlf	___fldiv@grs+1,f
  5488     08F9  0DB6               	rlf	___fldiv@grs+2,f
  5489     08FA  0DB7               	rlf	___fldiv@grs+3,f
  5490     08FB  0BA8               	decfsz	??___fldiv,f
  5491     08FC  28F6               	goto	u3245
  5492     08FD                     l2711:
  5493     08FD  0823               	movf	___fldiv@a+3,w
  5494     08FE  0230               	subwf	___fldiv@rem+3,w
  5495     08FF  1D03               	skipz
  5496     0900  290B               	goto	u3255
  5497     0901  0822               	movf	___fldiv@a+2,w
  5498     0902  022F               	subwf	___fldiv@rem+2,w
  5499     0903  1D03               	skipz
  5500     0904  290B               	goto	u3255
  5501     0905  0821               	movf	___fldiv@a+1,w
  5502     0906  022E               	subwf	___fldiv@rem+1,w
  5503     0907  1D03               	skipz
  5504     0908  290B               	goto	u3255
  5505     0909  0820               	movf	___fldiv@a,w
  5506     090A  022D               	subwf	___fldiv@rem,w
  5507     090B                     u3255:
  5508     090B  1C03               	skipc
  5509     090C  290E               	goto	u3251
  5510     090D  290F               	goto	u3250
  5511     090E                     u3251:
  5512     090E  291E               	goto	l2717
  5513     090F                     u3250:
  5514     090F                     l2713:
  5515     090F  1737               	bsf	___fldiv@grs+3,6
  5516     0910                     l2715:
  5517     0910  0820               	movf	___fldiv@a,w
  5518     0911  02AD               	subwf	___fldiv@rem,f
  5519     0912  0821               	movf	___fldiv@a+1,w
  5520     0913  1C03               	skipc
  5521     0914  0F21               	incfsz	___fldiv@a+1,w
  5522     0915  02AE               	subwf	___fldiv@rem+1,f
  5523     0916  0822               	movf	___fldiv@a+2,w
  5524     0917  1C03               	skipc
  5525     0918  0F22               	incfsz	___fldiv@a+2,w
  5526     0919  02AF               	subwf	___fldiv@rem+2,f
  5527     091A  0823               	movf	___fldiv@a+3,w
  5528     091B  1C03               	skipc
  5529     091C  0F23               	incfsz	___fldiv@a+3,w
  5530     091D  02B0               	subwf	___fldiv@rem+3,f
  5531     091E                     l2717:
  5532     091E  3001               	movlw	1
  5533     091F  00FF               	movwf	btemp+1
  5534     0920  087F               	movf	btemp+1,w
  5535     0921  07B9               	addwf	___fldiv@aexp,f
  5536     0922                     l2719:
  5537     0922  301A               	movlw	26
  5538     0923  0239               	subwf	___fldiv@aexp,w
  5539     0924  1C03               	skipc
  5540     0925  2927               	goto	u3261
  5541     0926  2928               	goto	u3260
  5542     0927                     u3261:
  5543     0927  28D8               	goto	l2701
  5544     0928                     u3260:
  5545     0928                     l2721:
  5546     0928  0830               	movf	___fldiv@rem+3,w
  5547     0929  042F               	iorwf	___fldiv@rem+2,w
  5548     092A  042E               	iorwf	___fldiv@rem+1,w
  5549     092B  042D               	iorwf	___fldiv@rem,w
  5550     092C  1903               	skipnz
  5551     092D  292F               	goto	u3271
  5552     092E  2930               	goto	u3270
  5553     092F                     u3271:
  5554     092F  294F               	goto	l2735
  5555     0930                     u3270:
  5556     0930                     l2723:
  5557     0930  1434               	bsf	___fldiv@grs,0
  5558     0931  294F               	goto	l2735
  5559     0932                     l2725:
  5560     0932  3001               	movlw	1
  5561     0933  00A8               	movwf	??___fldiv
  5562     0934                     u3285:
  5563     0934  1003               	clrc
  5564     0935  0DA4               	rlf	___fldiv@b,f
  5565     0936  0DA5               	rlf	___fldiv@b+1,f
  5566     0937  0DA6               	rlf	___fldiv@b+2,f
  5567     0938  0DA7               	rlf	___fldiv@b+3,f
  5568     0939  0BA8               	decfsz	??___fldiv,f
  5569     093A  2934               	goto	u3285
  5570     093B                     l2727:
  5571     093B  1FB7               	btfss	___fldiv@grs+3,7
  5572     093C  293E               	goto	u3291
  5573     093D  293F               	goto	u3290
  5574     093E                     u3291:
  5575     093E  2940               	goto	l2731
  5576     093F                     u3290:
  5577     093F                     l2729:
  5578     093F  1424               	bsf	___fldiv@b,0
  5579     0940                     l2731:
  5580     0940  3001               	movlw	1
  5581     0941  00A8               	movwf	??___fldiv
  5582     0942                     u3305:
  5583     0942  1003               	clrc
  5584     0943  0DB4               	rlf	___fldiv@grs,f
  5585     0944  0DB5               	rlf	___fldiv@grs+1,f
  5586     0945  0DB6               	rlf	___fldiv@grs+2,f
  5587     0946  0DB7               	rlf	___fldiv@grs+3,f
  5588     0947  0BA8               	decfsz	??___fldiv,f
  5589     0948  2942               	goto	u3305
  5590     0949                     l2733:
  5591     0949  30FF               	movlw	255
  5592     094A  07B2               	addwf	___fldiv@new_exp,f
  5593     094B  1803               	skipnc
  5594     094C  0AB3               	incf	___fldiv@new_exp+1,f
  5595     094D  30FF               	movlw	255
  5596     094E  07B3               	addwf	___fldiv@new_exp+1,f
  5597     094F                     l2735:
  5598     094F  1FA6               	btfss	___fldiv@b+2,7
  5599     0950  2952               	goto	u3311
  5600     0951  2953               	goto	u3310
  5601     0952                     u3311:
  5602     0952  2932               	goto	l2725
  5603     0953                     u3310:
  5604     0953                     l2737:
  5605     0953  01B9               	clrf	___fldiv@aexp
  5606     0954                     l2739:
  5607     0954  1FB7               	btfss	___fldiv@grs+3,7
  5608     0955  2957               	goto	u3321
  5609     0956  2958               	goto	u3320
  5610     0957                     u3321:
  5611     0957  2974               	goto	l2747
  5612     0958                     u3320:
  5613     0958                     l2741:
  5614     0958  30FF               	movlw	255
  5615     0959  0534               	andwf	___fldiv@grs,w
  5616     095A  00A8               	movwf	??___fldiv
  5617     095B  30FF               	movlw	255
  5618     095C  0535               	andwf	___fldiv@grs+1,w
  5619     095D  00A9               	movwf	??___fldiv+1
  5620     095E  30FF               	movlw	255
  5621     095F  0536               	andwf	___fldiv@grs+2,w
  5622     0960  00AA               	movwf	??___fldiv+2
  5623     0961  307F               	movlw	127
  5624     0962  0537               	andwf	___fldiv@grs+3,w
  5625     0963  00AB               	movwf	??___fldiv+3
  5626     0964  082B               	movf	??___fldiv+3,w
  5627     0965  042A               	iorwf	??___fldiv+2,w
  5628     0966  0429               	iorwf	??___fldiv+1,w
  5629     0967  0428               	iorwf	??___fldiv,w
  5630     0968  1903               	skipnz
  5631     0969  296B               	goto	u3331
  5632     096A  296C               	goto	u3330
  5633     096B                     u3331:
  5634     096B  296F               	goto	l775
  5635     096C                     u3330:
  5636     096C                     l2743:
  5637     096C  01B9               	clrf	___fldiv@aexp
  5638     096D  0AB9               	incf	___fldiv@aexp,f
  5639     096E  2974               	goto	l2747
  5640     096F                     l775:
  5641     096F  1C24               	btfss	___fldiv@b,0
  5642     0970  2972               	goto	u3341
  5643     0971  2973               	goto	u3340
  5644     0972                     u3341:
  5645     0972  2974               	goto	l2747
  5646     0973                     u3340:
  5647     0973  296C               	goto	l2743
  5648     0974                     l2747:
  5649     0974  0839               	movf	___fldiv@aexp,w
  5650     0975  1903               	btfsc	3,2
  5651     0976  2978               	goto	u3351
  5652     0977  2979               	goto	u3350
  5653     0978                     u3351:
  5654     0978  29AA               	goto	l2757
  5655     0979                     u3350:
  5656     0979                     l2749:
  5657     0979  3001               	movlw	1
  5658     097A  07A4               	addwf	___fldiv@b,f
  5659     097B  3000               	movlw	0
  5660     097C  1803               	skipnc
  5661     097D  3001               	movlw	1
  5662     097E  07A5               	addwf	___fldiv@b+1,f
  5663     097F  3000               	movlw	0
  5664     0980  1803               	skipnc
  5665     0981  3001               	movlw	1
  5666     0982  07A6               	addwf	___fldiv@b+2,f
  5667     0983  3000               	movlw	0
  5668     0984  1803               	skipnc
  5669     0985  3001               	movlw	1
  5670     0986  07A7               	addwf	___fldiv@b+3,f
  5671     0987                     l2751:
  5672     0987  1C27               	btfss	___fldiv@b+3,0
  5673     0988  298A               	goto	u3361
  5674     0989  298B               	goto	u3360
  5675     098A                     u3361:
  5676     098A  29AA               	goto	l2757
  5677     098B                     u3360:
  5678     098B                     l2753:
  5679     098B  0824               	movf	___fldiv@b,w
  5680     098C  00A8               	movwf	??___fldiv
  5681     098D  0825               	movf	___fldiv@b+1,w
  5682     098E  00A9               	movwf	??___fldiv+1
  5683     098F  0826               	movf	___fldiv@b+2,w
  5684     0990  00AA               	movwf	??___fldiv+2
  5685     0991  0827               	movf	___fldiv@b+3,w
  5686     0992  00AB               	movwf	??___fldiv+3
  5687     0993  3001               	movlw	1
  5688     0994  00AC               	movwf	??___fldiv+4
  5689     0995                     u3375:
  5690     0995  0D2B               	rlf	??___fldiv+3,w
  5691     0996  0CAB               	rrf	??___fldiv+3,f
  5692     0997  0CAA               	rrf	??___fldiv+2,f
  5693     0998  0CA9               	rrf	??___fldiv+1,f
  5694     0999  0CA8               	rrf	??___fldiv,f
  5695     099A                     u3370:
  5696     099A  0BAC               	decfsz	??___fldiv+4,f
  5697     099B  2995               	goto	u3375
  5698     099C  082B               	movf	??___fldiv+3,w
  5699     099D  00A7               	movwf	___fldiv@b+3
  5700     099E  082A               	movf	??___fldiv+2,w
  5701     099F  00A6               	movwf	___fldiv@b+2
  5702     09A0  0829               	movf	??___fldiv+1,w
  5703     09A1  00A5               	movwf	___fldiv@b+1
  5704     09A2  0828               	movf	??___fldiv,w
  5705     09A3  00A4               	movwf	___fldiv@b
  5706     09A4                     l2755:
  5707     09A4  3001               	movlw	1
  5708     09A5  07B2               	addwf	___fldiv@new_exp,f
  5709     09A6  1803               	skipnc
  5710     09A7  0AB3               	incf	___fldiv@new_exp+1,f
  5711     09A8  3000               	movlw	0
  5712     09A9  07B3               	addwf	___fldiv@new_exp+1,f
  5713     09AA                     l2757:
  5714     09AA  0833               	movf	___fldiv@new_exp+1,w
  5715     09AB  3A80               	xorlw	128
  5716     09AC  00FF               	movwf	btemp+1
  5717     09AD  3080               	movlw	128
  5718     09AE  027F               	subwf	btemp+1,w
  5719     09AF  1D03               	skipz
  5720     09B0  29B3               	goto	u3385
  5721     09B1  30FF               	movlw	255
  5722     09B2  0232               	subwf	___fldiv@new_exp,w
  5723     09B3                     u3385:
  5724     09B3  1C03               	skipc
  5725     09B4  29B6               	goto	u3381
  5726     09B5  29B7               	goto	u3380
  5727     09B6                     u3381:
  5728     09B6  29C5               	goto	l2761
  5729     09B7                     u3380:
  5730     09B7                     l2759:
  5731     09B7  30FF               	movlw	255
  5732     09B8  1283               	bcf	3,5	;RP0=0, select bank0
  5733     09B9  1303               	bcf	3,6	;RP1=0, select bank0
  5734     09BA  00B2               	movwf	___fldiv@new_exp
  5735     09BB  3000               	movlw	0
  5736     09BC  00B3               	movwf	___fldiv@new_exp+1
  5737     09BD  3000               	movlw	0
  5738     09BE  00A7               	movwf	___fldiv@b+3
  5739     09BF  3000               	movlw	0
  5740     09C0  00A6               	movwf	___fldiv@b+2
  5741     09C1  3000               	movlw	0
  5742     09C2  00A5               	movwf	___fldiv@b+1
  5743     09C3  3000               	movlw	0
  5744     09C4  00A4               	movwf	___fldiv@b
  5745     09C5                     l2761:
  5746     09C5  1283               	bcf	3,5	;RP0=0, select bank0
  5747     09C6  1303               	bcf	3,6	;RP1=0, select bank0
  5748     09C7  0833               	movf	___fldiv@new_exp+1,w
  5749     09C8  3A80               	xorlw	128
  5750     09C9  00FF               	movwf	btemp+1
  5751     09CA  3080               	movlw	128
  5752     09CB  027F               	subwf	btemp+1,w
  5753     09CC  1D03               	skipz
  5754     09CD  29D0               	goto	u3395
  5755     09CE  3001               	movlw	1
  5756     09CF  0232               	subwf	___fldiv@new_exp,w
  5757     09D0                     u3395:
  5758     09D0  1803               	skipnc
  5759     09D1  29D3               	goto	u3391
  5760     09D2  29D4               	goto	u3390
  5761     09D3                     u3391:
  5762     09D3  29E1               	goto	l781
  5763     09D4                     u3390:
  5764     09D4                     l2763:
  5765     09D4  1283               	bcf	3,5	;RP0=0, select bank0
  5766     09D5  1303               	bcf	3,6	;RP1=0, select bank0
  5767     09D6  01B2               	clrf	___fldiv@new_exp
  5768     09D7  01B3               	clrf	___fldiv@new_exp+1
  5769     09D8                     l2765:
  5770     09D8  3000               	movlw	0
  5771     09D9  00A7               	movwf	___fldiv@b+3
  5772     09DA  3000               	movlw	0
  5773     09DB  00A6               	movwf	___fldiv@b+2
  5774     09DC  3000               	movlw	0
  5775     09DD  00A5               	movwf	___fldiv@b+1
  5776     09DE  3000               	movlw	0
  5777     09DF  00A4               	movwf	___fldiv@b
  5778     09E0                     l2767:
  5779     09E0  01B1               	clrf	___fldiv@sign
  5780     09E1                     l781:
  5781     09E1  1283               	bcf	3,5	;RP0=0, select bank0
  5782     09E2  1303               	bcf	3,6	;RP1=0, select bank0
  5783     09E3  0832               	movf	___fldiv@new_exp,w
  5784     09E4  00B8               	movwf	___fldiv@bexp
  5785     09E5                     l2769:
  5786     09E5  1C38               	btfss	___fldiv@bexp,0
  5787     09E6  29E8               	goto	u3401
  5788     09E7  29E9               	goto	u3400
  5789     09E8                     u3401:
  5790     09E8  29EB               	goto	l2773
  5791     09E9                     u3400:
  5792     09E9                     l2771:
  5793     09E9  17A6               	bsf	___fldiv@b+2,7
  5794     09EA  29EF               	goto	l2775
  5795     09EB                     l2773:
  5796     09EB  307F               	movlw	127
  5797     09EC  00FF               	movwf	btemp+1
  5798     09ED  087F               	movf	btemp+1,w
  5799     09EE  05A6               	andwf	___fldiv@b+2,f
  5800     09EF                     l2775:
  5801     09EF  0838               	movf	___fldiv@bexp,w
  5802     09F0  00A8               	movwf	??___fldiv
  5803     09F1  1003               	clrc
  5804     09F2  0C28               	rrf	??___fldiv,w
  5805     09F3  00A7               	movwf	___fldiv@b+3
  5806     09F4  2891               	goto	l2679
  5807     09F5                     l761:
  5808     09F5  0008               	return
  5809     09F6                     __end_of___fldiv:
  5810                           
  5811                           	psect	text17
  5812     13BF                     __ptext17:	
  5813 ;; *************** function ___awmod *****************
  5814 ;; Defined at:
  5815 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
  5816 ;; Parameters:    Size  Location     Type
  5817 ;;  divisor         2   10[BANK0 ] int 
  5818 ;;  dividend        2   12[BANK0 ] int 
  5819 ;; Auto vars:     Size  Location     Type
  5820 ;;  sign            1   15[BANK0 ] unsigned char 
  5821 ;;  counter         1   14[BANK0 ] unsigned char 
  5822 ;; Return value:  Size  Location     Type
  5823 ;;                  2   10[BANK0 ] int 
  5824 ;; Registers used:
  5825 ;;		wreg, status,2, status,0, btemp+1
  5826 ;; Tracked objects:
  5827 ;;		On entry : 0/0
  5828 ;;		On exit  : 0/0
  5829 ;;		Unchanged: 0/0
  5830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5831 ;;      Params:         0       4       0       0       0
  5832 ;;      Locals:         0       2       0       0       0
  5833 ;;      Temps:          0       0       0       0       0
  5834 ;;      Totals:         0       6       0       0       0
  5835 ;;Total ram usage:        6 bytes
  5836 ;; Hardware stack levels used: 1
  5837 ;; Hardware stack levels required when called: 2
  5838 ;; This function calls:
  5839 ;;		Nothing
  5840 ;; This function is called by:
  5841 ;;		_main
  5842 ;; This function uses a non-reentrant model
  5843 ;;
  5844                           
  5845     13BF                     ___awmod:	
  5846                           ;psect for function ___awmod
  5847                           
  5848     13BF                     l3759:	
  5849                           ;incstack = 0
  5850                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  5851                           
  5852     13BF  1283               	bcf	3,5	;RP0=0, select bank0
  5853     13C0  1303               	bcf	3,6	;RP1=0, select bank0
  5854     13C1  01AF               	clrf	___awmod@sign
  5855     13C2                     l3761:
  5856     13C2  1FAD               	btfss	___awmod@dividend+1,7
  5857     13C3  2BC5               	goto	u5061
  5858     13C4  2BC6               	goto	u5060
  5859     13C5                     u5061:
  5860     13C5  2BCD               	goto	l3767
  5861     13C6                     u5060:
  5862     13C6                     l3763:
  5863     13C6  09AC               	comf	___awmod@dividend,f
  5864     13C7  09AD               	comf	___awmod@dividend+1,f
  5865     13C8  0AAC               	incf	___awmod@dividend,f
  5866     13C9  1903               	skipnz
  5867     13CA  0AAD               	incf	___awmod@dividend+1,f
  5868     13CB                     l3765:
  5869     13CB  01AF               	clrf	___awmod@sign
  5870     13CC  0AAF               	incf	___awmod@sign,f
  5871     13CD                     l3767:
  5872     13CD  1FAB               	btfss	___awmod@divisor+1,7
  5873     13CE  2BD0               	goto	u5071
  5874     13CF  2BD1               	goto	u5070
  5875     13D0                     u5071:
  5876     13D0  2BD6               	goto	l3771
  5877     13D1                     u5070:
  5878     13D1                     l3769:
  5879     13D1  09AA               	comf	___awmod@divisor,f
  5880     13D2  09AB               	comf	___awmod@divisor+1,f
  5881     13D3  0AAA               	incf	___awmod@divisor,f
  5882     13D4  1903               	skipnz
  5883     13D5  0AAB               	incf	___awmod@divisor+1,f
  5884     13D6                     l3771:
  5885     13D6  082A               	movf	___awmod@divisor,w
  5886     13D7  042B               	iorwf	___awmod@divisor+1,w
  5887     13D8  1903               	btfsc	3,2
  5888     13D9  2BDB               	goto	u5081
  5889     13DA  2BDC               	goto	u5080
  5890     13DB                     u5081:
  5891     13DB  2C0B               	goto	l3789
  5892     13DC                     u5080:
  5893     13DC                     l3773:
  5894     13DC  01AE               	clrf	___awmod@counter
  5895     13DD  0AAE               	incf	___awmod@counter,f
  5896     13DE  2BEA               	goto	l3779
  5897     13DF                     l3775:
  5898     13DF  3001               	movlw	1
  5899     13E0                     u5095:
  5900     13E0  1003               	clrc
  5901     13E1  0DAA               	rlf	___awmod@divisor,f
  5902     13E2  0DAB               	rlf	___awmod@divisor+1,f
  5903     13E3  3EFF               	addlw	-1
  5904     13E4  1D03               	skipz
  5905     13E5  2BE0               	goto	u5095
  5906     13E6                     l3777:
  5907     13E6  3001               	movlw	1
  5908     13E7  00FF               	movwf	btemp+1
  5909     13E8  087F               	movf	btemp+1,w
  5910     13E9  07AE               	addwf	___awmod@counter,f
  5911     13EA                     l3779:
  5912     13EA  1FAB               	btfss	___awmod@divisor+1,7
  5913     13EB  2BED               	goto	u5101
  5914     13EC  2BEE               	goto	u5100
  5915     13ED                     u5101:
  5916     13ED  2BDF               	goto	l3775
  5917     13EE                     u5100:
  5918     13EE                     l3781:
  5919     13EE  082B               	movf	___awmod@divisor+1,w
  5920     13EF  022D               	subwf	___awmod@dividend+1,w
  5921     13F0  1D03               	skipz
  5922     13F1  2BF4               	goto	u5115
  5923     13F2  082A               	movf	___awmod@divisor,w
  5924     13F3  022C               	subwf	___awmod@dividend,w
  5925     13F4                     u5115:
  5926     13F4  1C03               	skipc
  5927     13F5  2BF7               	goto	u5111
  5928     13F6  2BF8               	goto	u5110
  5929     13F7                     u5111:
  5930     13F7  2BFE               	goto	l3785
  5931     13F8                     u5110:
  5932     13F8                     l3783:
  5933     13F8  082A               	movf	___awmod@divisor,w
  5934     13F9  02AC               	subwf	___awmod@dividend,f
  5935     13FA  082B               	movf	___awmod@divisor+1,w
  5936     13FB  1C03               	skipc
  5937     13FC  03AD               	decf	___awmod@dividend+1,f
  5938     13FD  02AD               	subwf	___awmod@dividend+1,f
  5939     13FE                     l3785:
  5940     13FE  3001               	movlw	1
  5941     13FF                     u5125:
  5942     13FF  1003               	clrc
  5943     1400  0CAB               	rrf	___awmod@divisor+1,f
  5944     1401  0CAA               	rrf	___awmod@divisor,f
  5945     1402  3EFF               	addlw	-1
  5946     1403  1D03               	skipz
  5947     1404  2BFF               	goto	u5125
  5948     1405                     l3787:
  5949     1405  3001               	movlw	1
  5950     1406  02AE               	subwf	___awmod@counter,f
  5951     1407  1D03               	btfss	3,2
  5952     1408  2C0A               	goto	u5131
  5953     1409  2C0B               	goto	u5130
  5954     140A                     u5131:
  5955     140A  2BEE               	goto	l3781
  5956     140B                     u5130:
  5957     140B                     l3789:
  5958     140B  082F               	movf	___awmod@sign,w
  5959     140C  1903               	btfsc	3,2
  5960     140D  2C0F               	goto	u5141
  5961     140E  2C10               	goto	u5140
  5962     140F                     u5141:
  5963     140F  2C15               	goto	l3793
  5964     1410                     u5140:
  5965     1410                     l3791:
  5966     1410  09AC               	comf	___awmod@dividend,f
  5967     1411  09AD               	comf	___awmod@dividend+1,f
  5968     1412  0AAC               	incf	___awmod@dividend,f
  5969     1413  1903               	skipnz
  5970     1414  0AAD               	incf	___awmod@dividend+1,f
  5971     1415                     l3793:
  5972     1415  082D               	movf	___awmod@dividend+1,w
  5973     1416  00AB               	movwf	?___awmod+1
  5974     1417  082C               	movf	___awmod@dividend,w
  5975     1418  00AA               	movwf	?___awmod
  5976     1419                     l576:
  5977     1419  0008               	return
  5978     141A                     __end_of___awmod:
  5979                           
  5980                           	psect	text18
  5981     1547                     __ptext18:	
  5982 ;; *************** function ___awdiv *****************
  5983 ;; Defined at:
  5984 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  5985 ;; Parameters:    Size  Location     Type
  5986 ;;  divisor         2   10[BANK0 ] int 
  5987 ;;  dividend        2   12[BANK0 ] int 
  5988 ;; Auto vars:     Size  Location     Type
  5989 ;;  quotient        2   16[BANK0 ] int 
  5990 ;;  sign            1   15[BANK0 ] unsigned char 
  5991 ;;  counter         1   14[BANK0 ] unsigned char 
  5992 ;; Return value:  Size  Location     Type
  5993 ;;                  2   10[BANK0 ] int 
  5994 ;; Registers used:
  5995 ;;		wreg, status,2, status,0, btemp+1
  5996 ;; Tracked objects:
  5997 ;;		On entry : 0/0
  5998 ;;		On exit  : 0/0
  5999 ;;		Unchanged: 0/0
  6000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6001 ;;      Params:         0       4       0       0       0
  6002 ;;      Locals:         0       4       0       0       0
  6003 ;;      Temps:          0       0       0       0       0
  6004 ;;      Totals:         0       8       0       0       0
  6005 ;;Total ram usage:        8 bytes
  6006 ;; Hardware stack levels used: 1
  6007 ;; Hardware stack levels required when called: 2
  6008 ;; This function calls:
  6009 ;;		Nothing
  6010 ;; This function is called by:
  6011 ;;		_main
  6012 ;; This function uses a non-reentrant model
  6013 ;;
  6014                           
  6015     1547                     ___awdiv:	
  6016                           ;psect for function ___awdiv
  6017                           
  6018     1547                     l3715:	
  6019                           ;incstack = 0
  6020                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  6021                           
  6022     1547  1283               	bcf	3,5	;RP0=0, select bank0
  6023     1548  1303               	bcf	3,6	;RP1=0, select bank0
  6024     1549  01AF               	clrf	___awdiv@sign
  6025     154A                     l3717:
  6026     154A  1FAB               	btfss	___awdiv@divisor+1,7
  6027     154B  2D4D               	goto	u4961
  6028     154C  2D4E               	goto	u4960
  6029     154D                     u4961:
  6030     154D  2D55               	goto	l3723
  6031     154E                     u4960:
  6032     154E                     l3719:
  6033     154E  09AA               	comf	___awdiv@divisor,f
  6034     154F  09AB               	comf	___awdiv@divisor+1,f
  6035     1550  0AAA               	incf	___awdiv@divisor,f
  6036     1551  1903               	skipnz
  6037     1552  0AAB               	incf	___awdiv@divisor+1,f
  6038     1553                     l3721:
  6039     1553  01AF               	clrf	___awdiv@sign
  6040     1554  0AAF               	incf	___awdiv@sign,f
  6041     1555                     l3723:
  6042     1555  1FAD               	btfss	___awdiv@dividend+1,7
  6043     1556  2D58               	goto	u4971
  6044     1557  2D59               	goto	u4970
  6045     1558                     u4971:
  6046     1558  2D62               	goto	l3729
  6047     1559                     u4970:
  6048     1559                     l3725:
  6049     1559  09AC               	comf	___awdiv@dividend,f
  6050     155A  09AD               	comf	___awdiv@dividend+1,f
  6051     155B  0AAC               	incf	___awdiv@dividend,f
  6052     155C  1903               	skipnz
  6053     155D  0AAD               	incf	___awdiv@dividend+1,f
  6054     155E                     l3727:
  6055     155E  3001               	movlw	1
  6056     155F  00FF               	movwf	btemp+1
  6057     1560  087F               	movf	btemp+1,w
  6058     1561  06AF               	xorwf	___awdiv@sign,f
  6059     1562                     l3729:
  6060     1562  01B0               	clrf	___awdiv@quotient
  6061     1563  01B1               	clrf	___awdiv@quotient+1
  6062     1564                     l3731:
  6063     1564  082A               	movf	___awdiv@divisor,w
  6064     1565  042B               	iorwf	___awdiv@divisor+1,w
  6065     1566  1903               	btfsc	3,2
  6066     1567  2D69               	goto	u4981
  6067     1568  2D6A               	goto	u4980
  6068     1569                     u4981:
  6069     1569  2DA1               	goto	l3751
  6070     156A                     u4980:
  6071     156A                     l3733:
  6072     156A  01AE               	clrf	___awdiv@counter
  6073     156B  0AAE               	incf	___awdiv@counter,f
  6074     156C  2D78               	goto	l3739
  6075     156D                     l3735:
  6076     156D  3001               	movlw	1
  6077     156E                     u4995:
  6078     156E  1003               	clrc
  6079     156F  0DAA               	rlf	___awdiv@divisor,f
  6080     1570  0DAB               	rlf	___awdiv@divisor+1,f
  6081     1571  3EFF               	addlw	-1
  6082     1572  1D03               	skipz
  6083     1573  2D6E               	goto	u4995
  6084     1574                     l3737:
  6085     1574  3001               	movlw	1
  6086     1575  00FF               	movwf	btemp+1
  6087     1576  087F               	movf	btemp+1,w
  6088     1577  07AE               	addwf	___awdiv@counter,f
  6089     1578                     l3739:
  6090     1578  1FAB               	btfss	___awdiv@divisor+1,7
  6091     1579  2D7B               	goto	u5001
  6092     157A  2D7C               	goto	u5000
  6093     157B                     u5001:
  6094     157B  2D6D               	goto	l3735
  6095     157C                     u5000:
  6096     157C                     l3741:
  6097     157C  3001               	movlw	1
  6098     157D                     u5015:
  6099     157D  1003               	clrc
  6100     157E  0DB0               	rlf	___awdiv@quotient,f
  6101     157F  0DB1               	rlf	___awdiv@quotient+1,f
  6102     1580  3EFF               	addlw	-1
  6103     1581  1D03               	skipz
  6104     1582  2D7D               	goto	u5015
  6105     1583  082B               	movf	___awdiv@divisor+1,w
  6106     1584  022D               	subwf	___awdiv@dividend+1,w
  6107     1585  1D03               	skipz
  6108     1586  2D89               	goto	u5025
  6109     1587  082A               	movf	___awdiv@divisor,w
  6110     1588  022C               	subwf	___awdiv@dividend,w
  6111     1589                     u5025:
  6112     1589  1C03               	skipc
  6113     158A  2D8C               	goto	u5021
  6114     158B  2D8D               	goto	u5020
  6115     158C                     u5021:
  6116     158C  2D94               	goto	l3747
  6117     158D                     u5020:
  6118     158D                     l3743:
  6119     158D  082A               	movf	___awdiv@divisor,w
  6120     158E  02AC               	subwf	___awdiv@dividend,f
  6121     158F  082B               	movf	___awdiv@divisor+1,w
  6122     1590  1C03               	skipc
  6123     1591  03AD               	decf	___awdiv@dividend+1,f
  6124     1592  02AD               	subwf	___awdiv@dividend+1,f
  6125     1593                     l3745:
  6126     1593  1430               	bsf	___awdiv@quotient,0
  6127     1594                     l3747:
  6128     1594  3001               	movlw	1
  6129     1595                     u5035:
  6130     1595  1003               	clrc
  6131     1596  0CAB               	rrf	___awdiv@divisor+1,f
  6132     1597  0CAA               	rrf	___awdiv@divisor,f
  6133     1598  3EFF               	addlw	-1
  6134     1599  1D03               	skipz
  6135     159A  2D95               	goto	u5035
  6136     159B                     l3749:
  6137     159B  3001               	movlw	1
  6138     159C  02AE               	subwf	___awdiv@counter,f
  6139     159D  1D03               	btfss	3,2
  6140     159E  2DA0               	goto	u5041
  6141     159F  2DA1               	goto	u5040
  6142     15A0                     u5041:
  6143     15A0  2D7C               	goto	l3741
  6144     15A1                     u5040:
  6145     15A1                     l3751:
  6146     15A1  082F               	movf	___awdiv@sign,w
  6147     15A2  1903               	btfsc	3,2
  6148     15A3  2DA5               	goto	u5051
  6149     15A4  2DA6               	goto	u5050
  6150     15A5                     u5051:
  6151     15A5  2DAB               	goto	l3755
  6152     15A6                     u5050:
  6153     15A6                     l3753:
  6154     15A6  09B0               	comf	___awdiv@quotient,f
  6155     15A7  09B1               	comf	___awdiv@quotient+1,f
  6156     15A8  0AB0               	incf	___awdiv@quotient,f
  6157     15A9  1903               	skipnz
  6158     15AA  0AB1               	incf	___awdiv@quotient+1,f
  6159     15AB                     l3755:
  6160     15AB  0831               	movf	___awdiv@quotient+1,w
  6161     15AC  00AB               	movwf	?___awdiv+1
  6162     15AD  0830               	movf	___awdiv@quotient,w
  6163     15AE  00AA               	movwf	?___awdiv
  6164     15AF                     l563:
  6165     15AF  0008               	return
  6166     15B0                     __end_of___awdiv:
  6167                           
  6168                           	psect	text19
  6169     12A1                     __ptext19:	
  6170 ;; *************** function _UART_Write_Text *****************
  6171 ;; Defined at:
  6172 ;;		line 18 in file "uart_lib.c"
  6173 ;; Parameters:    Size  Location     Type
  6174 ;;  text            2    1[BANK0 ] PTR unsigned char 
  6175 ;;		 -> STR_31(5), STR_30(5), STR_27(5), main@combinedText_373(20), 
  6176 ;;		 -> main@uartMessage_369(8), STR_21(5), main@combinedText(20), main@uartMessage(8), 
  6177 ;;		 -> STR_15(5), 
  6178 ;; Auto vars:     Size  Location     Type
  6179 ;;  i               2    6[BANK0 ] int 
  6180 ;; Return value:  Size  Location     Type
  6181 ;;                  1    wreg      void 
  6182 ;; Registers used:
  6183 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6184 ;; Tracked objects:
  6185 ;;		On entry : 0/0
  6186 ;;		On exit  : 0/0
  6187 ;;		Unchanged: 0/0
  6188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6189 ;;      Params:         0       2       0       0       0
  6190 ;;      Locals:         0       2       0       0       0
  6191 ;;      Temps:          0       3       0       0       0
  6192 ;;      Totals:         0       7       0       0       0
  6193 ;;Total ram usage:        7 bytes
  6194 ;; Hardware stack levels used: 1
  6195 ;; Hardware stack levels required when called: 3
  6196 ;; This function calls:
  6197 ;;		_UART_Write
  6198 ;; This function is called by:
  6199 ;;		_main
  6200 ;; This function uses a non-reentrant model
  6201 ;;
  6202                           
  6203     12A1                     _UART_Write_Text:	
  6204                           ;psect for function _UART_Write_Text
  6205                           
  6206     12A1                     l3549:	
  6207                           ;incstack = 0
  6208                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6209                           
  6210                           
  6211                           ;uart_lib.c: 18: void UART_Write_Text(char *text);uart_lib.c: 19: {;uart_lib.c: 20:   in
      +                          t i;;uart_lib.c: 21:   for(i=0;text[i]!='\0';i++)
  6212     12A1  1283               	bcf	3,5	;RP0=0, select bank0
  6213     12A2  1303               	bcf	3,6	;RP1=0, select bank0
  6214     12A3  01A6               	clrf	UART_Write_Text@i
  6215     12A4  01A7               	clrf	UART_Write_Text@i+1
  6216     12A5  2ACA               	goto	l3555
  6217     12A6                     l3551:
  6218                           
  6219                           ;uart_lib.c: 22:     UART_Write(text[i]);
  6220     12A6  0826               	movf	UART_Write_Text@i,w
  6221     12A7  0721               	addwf	UART_Write_Text@text,w
  6222     12A8  00A4               	movwf	??_UART_Write_Text+1
  6223     12A9  0822               	movf	UART_Write_Text@text+1,w
  6224     12AA  00A3               	movwf	??_UART_Write_Text
  6225     12AB  1803               	skipnc
  6226     12AC  0AA3               	incf	??_UART_Write_Text,f
  6227     12AD  1FA6               	btfss	UART_Write_Text@i,7
  6228     12AE  2AB0               	goto	u4730
  6229     12AF  03A3               	decf	??_UART_Write_Text,f
  6230     12B0                     u4730:
  6231     12B0  1283               	bcf	3,5	;RP0=0, select bank0
  6232     12B1  1303               	bcf	3,6	;RP1=0, select bank0
  6233     12B2  0823               	movf	??_UART_Write_Text,w
  6234     12B3  00A5               	movwf	??_UART_Write_Text+2
  6235     12B4  0825               	movf	??_UART_Write_Text+2,w
  6236     12B5  00FF               	movwf	btemp+1
  6237     12B6  0824               	movf	??_UART_Write_Text+1,w
  6238     12B7  0084               	movwf	4
  6239     12B8  160A  118A  2000  160A  118A  	fcall	stringtab
  6240     12BD  160A  158A  27F2  160A  118A  	fcall	_UART_Write
  6241     12C2                     l3553:
  6242     12C2  3001               	movlw	1
  6243     12C3  1283               	bcf	3,5	;RP0=0, select bank0
  6244     12C4  1303               	bcf	3,6	;RP1=0, select bank0
  6245     12C5  07A6               	addwf	UART_Write_Text@i,f
  6246     12C6  1803               	skipnc
  6247     12C7  0AA7               	incf	UART_Write_Text@i+1,f
  6248     12C8  3000               	movlw	0
  6249     12C9  07A7               	addwf	UART_Write_Text@i+1,f
  6250     12CA                     l3555:
  6251     12CA  0826               	movf	UART_Write_Text@i,w
  6252     12CB  0721               	addwf	UART_Write_Text@text,w
  6253     12CC  00A4               	movwf	??_UART_Write_Text+1
  6254     12CD  0822               	movf	UART_Write_Text@text+1,w
  6255     12CE  00A3               	movwf	??_UART_Write_Text
  6256     12CF  1803               	skipnc
  6257     12D0  0AA3               	incf	??_UART_Write_Text,f
  6258     12D1  1FA6               	btfss	UART_Write_Text@i,7
  6259     12D2  2AD4               	goto	u4740
  6260     12D3  03A3               	decf	??_UART_Write_Text,f
  6261     12D4                     u4740:
  6262     12D4  1283               	bcf	3,5	;RP0=0, select bank0
  6263     12D5  1303               	bcf	3,6	;RP1=0, select bank0
  6264     12D6  0823               	movf	??_UART_Write_Text,w
  6265     12D7  00A5               	movwf	??_UART_Write_Text+2
  6266     12D8  0825               	movf	??_UART_Write_Text+2,w
  6267     12D9  00FF               	movwf	btemp+1
  6268     12DA  0824               	movf	??_UART_Write_Text+1,w
  6269     12DB  0084               	movwf	4
  6270     12DC  160A  118A  2000  160A  118A  	fcall	stringtab
  6271     12E1  3A00               	xorlw	0
  6272     12E2  1D03               	skipz
  6273     12E3  2AE5               	goto	u4751
  6274     12E4  2AE6               	goto	u4750
  6275     12E5                     u4751:
  6276     12E5  2AA6               	goto	l3551
  6277     12E6                     u4750:
  6278     12E6                     l25:
  6279     12E6  0008               	return
  6280     12E7                     __end_of_UART_Write_Text:
  6281                           
  6282                           	psect	text20
  6283     1FF2                     __ptext20:	
  6284 ;; *************** function _UART_Write *****************
  6285 ;; Defined at:
  6286 ;;		line 12 in file "uart_lib.c"
  6287 ;; Parameters:    Size  Location     Type
  6288 ;;  data            1    wreg     unsigned char 
  6289 ;; Auto vars:     Size  Location     Type
  6290 ;;  data            1    0[BANK0 ] unsigned char 
  6291 ;; Return value:  Size  Location     Type
  6292 ;;                  1    wreg      void 
  6293 ;; Registers used:
  6294 ;;		wreg
  6295 ;; Tracked objects:
  6296 ;;		On entry : 0/0
  6297 ;;		On exit  : 0/0
  6298 ;;		Unchanged: 0/0
  6299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6300 ;;      Params:         0       0       0       0       0
  6301 ;;      Locals:         0       1       0       0       0
  6302 ;;      Temps:          0       0       0       0       0
  6303 ;;      Totals:         0       1       0       0       0
  6304 ;;Total ram usage:        1 bytes
  6305 ;; Hardware stack levels used: 1
  6306 ;; Hardware stack levels required when called: 2
  6307 ;; This function calls:
  6308 ;;		Nothing
  6309 ;; This function is called by:
  6310 ;;		_UART_Write_Text
  6311 ;; This function uses a non-reentrant model
  6312 ;;
  6313                           
  6314     1FF2                     _UART_Write:	
  6315                           ;psect for function _UART_Write
  6316                           
  6317                           
  6318                           ;incstack = 0
  6319                           ; Regs used in _UART_Write: [wreg]
  6320                           ;UART_Write@data stored from wreg
  6321     1FF2  1283               	bcf	3,5	;RP0=0, select bank0
  6322     1FF3  1303               	bcf	3,6	;RP1=0, select bank0
  6323     1FF4  00A0               	movwf	UART_Write@data
  6324     1FF5                     l3437:
  6325     1FF5                     l16:	
  6326                           ;uart_lib.c: 12: void UART_Write(char data);uart_lib.c: 13: {;uart_lib.c: 14:   while(!T
      +                          RMT);
  6327                           
  6328     1FF5  1683               	bsf	3,5	;RP0=1, select bank1
  6329     1FF6  1303               	bcf	3,6	;RP1=0, select bank1
  6330     1FF7  1C98               	btfss	24,1	;volatile
  6331     1FF8  2FFA               	goto	u4461
  6332     1FF9  2FFB               	goto	u4460
  6333     1FFA                     u4461:
  6334     1FFA  2FF5               	goto	l16
  6335     1FFB                     u4460:
  6336     1FFB                     l3439:
  6337                           
  6338                           ;uart_lib.c: 15:   TXREG = data;
  6339     1FFB  1283               	bcf	3,5	;RP0=0, select bank0
  6340     1FFC  1303               	bcf	3,6	;RP1=0, select bank0
  6341     1FFD  0820               	movf	UART_Write@data,w
  6342     1FFE  0099               	movwf	25	;volatile
  6343     1FFF                     l19:
  6344     1FFF  0008               	return
  6345     2000                     __end_of_UART_Write:
  6346                           
  6347                           	psect	text21
  6348     1178                     __ptext21:	
  6349 ;; *************** function _UART_Initialize *****************
  6350 ;; Defined at:
  6351 ;;		line 4 in file "uart_lib.c"
  6352 ;; Parameters:    Size  Location     Type
  6353 ;;		None
  6354 ;; Auto vars:     Size  Location     Type
  6355 ;;		None
  6356 ;; Return value:  Size  Location     Type
  6357 ;;                  1    wreg      void 
  6358 ;; Registers used:
  6359 ;;		wreg, status,2
  6360 ;; Tracked objects:
  6361 ;;		On entry : 0/0
  6362 ;;		On exit  : 0/0
  6363 ;;		Unchanged: 0/0
  6364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6365 ;;      Params:         0       0       0       0       0
  6366 ;;      Locals:         0       0       0       0       0
  6367 ;;      Temps:          0       0       0       0       0
  6368 ;;      Totals:         0       0       0       0       0
  6369 ;;Total ram usage:        0 bytes
  6370 ;; Hardware stack levels used: 1
  6371 ;; Hardware stack levels required when called: 2
  6372 ;; This function calls:
  6373 ;;		Nothing
  6374 ;; This function is called by:
  6375 ;;		_main
  6376 ;; This function uses a non-reentrant model
  6377 ;;
  6378                           
  6379     1178                     _UART_Initialize:	
  6380                           ;psect for function _UART_Initialize
  6381                           
  6382     1178                     l3545:	
  6383                           ;incstack = 0
  6384                           ; Regs used in _UART_Initialize: [wreg+status,2]
  6385                           
  6386                           
  6387                           ;uart_lib.c: 6:     TXSTA=0b00100100;
  6388     1178  3024               	movlw	36
  6389     1179  1683               	bsf	3,5	;RP0=1, select bank1
  6390     117A  1303               	bcf	3,6	;RP1=0, select bank1
  6391     117B  0098               	movwf	24	;volatile
  6392                           
  6393                           ;uart_lib.c: 7:     RCSTA=0b10010000;
  6394     117C  3090               	movlw	144
  6395     117D  1283               	bcf	3,5	;RP0=0, select bank0
  6396     117E  1303               	bcf	3,6	;RP1=0, select bank0
  6397     117F  0098               	movwf	24	;volatile
  6398                           
  6399                           ;uart_lib.c: 8:     SPBRG=12;
  6400     1180  300C               	movlw	12
  6401     1181  1683               	bsf	3,5	;RP0=1, select bank1
  6402     1182  1303               	bcf	3,6	;RP1=0, select bank1
  6403     1183  0099               	movwf	25	;volatile
  6404     1184                     l3547:
  6405                           
  6406                           ;uart_lib.c: 9:     TXREG=0x00;
  6407     1184  1283               	bcf	3,5	;RP0=0, select bank0
  6408     1185  1303               	bcf	3,6	;RP1=0, select bank0
  6409     1186  0199               	clrf	25	;volatile
  6410     1187                     l13:
  6411     1187  0008               	return
  6412     1188                     __end_of_UART_Initialize:
  6413                           
  6414                           	psect	text22
  6415     147D                     __ptext22:	
  6416 ;; *************** function _Lcd_Init *****************
  6417 ;; Defined at:
  6418 ;;		line 61 in file "./lcd.h"
  6419 ;; Parameters:    Size  Location     Type
  6420 ;;		None
  6421 ;; Auto vars:     Size  Location     Type
  6422 ;;		None
  6423 ;; Return value:  Size  Location     Type
  6424 ;;                  1    wreg      void 
  6425 ;; Registers used:
  6426 ;;		wreg, status,2, status,0, pclath, cstack
  6427 ;; Tracked objects:
  6428 ;;		On entry : 0/0
  6429 ;;		On exit  : 0/0
  6430 ;;		Unchanged: 0/0
  6431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6432 ;;      Params:         0       0       0       0       0
  6433 ;;      Locals:         0       0       0       0       0
  6434 ;;      Temps:          0       2       0       0       0
  6435 ;;      Totals:         0       2       0       0       0
  6436 ;;Total ram usage:        2 bytes
  6437 ;; Hardware stack levels used: 1
  6438 ;; Hardware stack levels required when called: 4
  6439 ;; This function calls:
  6440 ;;		_Lcd_Cmd
  6441 ;;		_Lcd_Port
  6442 ;; This function is called by:
  6443 ;;		_main
  6444 ;; This function uses a non-reentrant model
  6445 ;;
  6446                           
  6447     147D                     _Lcd_Init:	
  6448                           ;psect for function _Lcd_Init
  6449                           
  6450     147D                     l3557:	
  6451                           ;incstack = 0
  6452                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  6453                           
  6454                           
  6455                           ;./lcd.h: 63:   Lcd_Port(0x00);
  6456     147D  3000               	movlw	0
  6457     147E  160A  118A  21E3  160A  118A  	fcall	_Lcd_Port
  6458     1483                     l3559:
  6459                           
  6460                           ;./lcd.h: 64:    _delay((unsigned long)((20)*(4000000/4000.0)));
  6461     1483  301A               	movlw	26
  6462     1484  1283               	bcf	3,5	;RP0=0, select bank0
  6463     1485  1303               	bcf	3,6	;RP1=0, select bank0
  6464     1486  00A5               	movwf	??_Lcd_Init+1
  6465     1487  30F7               	movlw	247
  6466     1488  00A4               	movwf	??_Lcd_Init
  6467     1489                     u5727:
  6468     1489  0BA4               	decfsz	??_Lcd_Init,f
  6469     148A  2C89               	goto	u5727
  6470     148B  0BA5               	decfsz	??_Lcd_Init+1,f
  6471     148C  2C89               	goto	u5727
  6472     148D  2C8E               	nop2
  6473     148E                     l3561:
  6474                           
  6475                           ;./lcd.h: 65:   Lcd_Cmd(0x03);
  6476     148E  3003               	movlw	3
  6477     148F  160A  118A  21C7  160A  118A  	fcall	_Lcd_Cmd
  6478                           
  6479                           ;./lcd.h: 66:  _delay((unsigned long)((5)*(4000000/4000.0)));
  6480     1494  3007               	movlw	7
  6481     1495  1283               	bcf	3,5	;RP0=0, select bank0
  6482     1496  1303               	bcf	3,6	;RP1=0, select bank0
  6483     1497  00A5               	movwf	??_Lcd_Init+1
  6484     1498  307C               	movlw	124
  6485     1499  00A4               	movwf	??_Lcd_Init
  6486     149A                     u5737:
  6487     149A  0BA4               	decfsz	??_Lcd_Init,f
  6488     149B  2C9A               	goto	u5737
  6489     149C  0BA5               	decfsz	??_Lcd_Init+1,f
  6490     149D  2C9A               	goto	u5737
  6491     149E  0000               	nop
  6492     149F                     l3563:
  6493                           
  6494                           ;./lcd.h: 67:   Lcd_Cmd(0x03);
  6495     149F  3003               	movlw	3
  6496     14A0  160A  118A  21C7  160A  118A  	fcall	_Lcd_Cmd
  6497     14A5                     l3565:
  6498                           
  6499                           ;./lcd.h: 68:  _delay((unsigned long)((11)*(4000000/4000.0)));
  6500     14A5  300F               	movlw	15
  6501     14A6  1283               	bcf	3,5	;RP0=0, select bank0
  6502     14A7  1303               	bcf	3,6	;RP1=0, select bank0
  6503     14A8  00A5               	movwf	??_Lcd_Init+1
  6504     14A9  3047               	movlw	71
  6505     14AA  00A4               	movwf	??_Lcd_Init
  6506     14AB                     u5747:
  6507     14AB  0BA4               	decfsz	??_Lcd_Init,f
  6508     14AC  2CAB               	goto	u5747
  6509     14AD  0BA5               	decfsz	??_Lcd_Init+1,f
  6510     14AE  2CAB               	goto	u5747
  6511                           
  6512                           ;./lcd.h: 69:   Lcd_Cmd(0x03);
  6513     14AF  3003               	movlw	3
  6514     14B0  160A  118A  21C7  160A  118A  	fcall	_Lcd_Cmd
  6515                           
  6516                           ;./lcd.h: 71:   Lcd_Cmd(0x02);
  6517     14B5  3002               	movlw	2
  6518     14B6  160A  118A  21C7  160A  118A  	fcall	_Lcd_Cmd
  6519                           
  6520                           ;./lcd.h: 72:   Lcd_Cmd(0x02);
  6521     14BB  3002               	movlw	2
  6522     14BC  160A  118A  21C7  160A  118A  	fcall	_Lcd_Cmd
  6523                           
  6524                           ;./lcd.h: 73:   Lcd_Cmd(0x08);
  6525     14C1  3008               	movlw	8
  6526     14C2  160A  118A  21C7  160A  118A  	fcall	_Lcd_Cmd
  6527                           
  6528                           ;./lcd.h: 74:   Lcd_Cmd(0x00);
  6529     14C7  3000               	movlw	0
  6530     14C8  160A  118A  21C7  160A  118A  	fcall	_Lcd_Cmd
  6531                           
  6532                           ;./lcd.h: 75:   Lcd_Cmd(0x0C);
  6533     14CD  300C               	movlw	12
  6534     14CE  160A  118A  21C7  160A  118A  	fcall	_Lcd_Cmd
  6535                           
  6536                           ;./lcd.h: 76:   Lcd_Cmd(0x00);
  6537     14D3  3000               	movlw	0
  6538     14D4  160A  118A  21C7  160A  118A  	fcall	_Lcd_Cmd
  6539                           
  6540                           ;./lcd.h: 77:   Lcd_Cmd(0x06);
  6541     14D9  3006               	movlw	6
  6542     14DA  160A  118A  21C7  160A  118A  	fcall	_Lcd_Cmd
  6543     14DF                     l161:
  6544     14DF  0008               	return
  6545     14E0                     __end_of_Lcd_Init:
  6546                           
  6547                           	psect	text23
  6548     11C7                     __ptext23:	
  6549 ;; *************** function _Lcd_Cmd *****************
  6550 ;; Defined at:
  6551 ;;		line 25 in file "./lcd.h"
  6552 ;; Parameters:    Size  Location     Type
  6553 ;;  a               1    wreg     unsigned char 
  6554 ;; Auto vars:     Size  Location     Type
  6555 ;;  a               1    3[BANK0 ] unsigned char 
  6556 ;; Return value:  Size  Location     Type
  6557 ;;                  1    wreg      void 
  6558 ;; Registers used:
  6559 ;;		wreg, status,2, status,0, pclath, cstack
  6560 ;; Tracked objects:
  6561 ;;		On entry : 0/0
  6562 ;;		On exit  : 0/0
  6563 ;;		Unchanged: 0/0
  6564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6565 ;;      Params:         0       0       0       0       0
  6566 ;;      Locals:         0       1       0       0       0
  6567 ;;      Temps:          0       2       0       0       0
  6568 ;;      Totals:         0       3       0       0       0
  6569 ;;Total ram usage:        3 bytes
  6570 ;; Hardware stack levels used: 1
  6571 ;; Hardware stack levels required when called: 3
  6572 ;; This function calls:
  6573 ;;		_Lcd_Port
  6574 ;; This function is called by:
  6575 ;;		_Lcd_Clear
  6576 ;;		_Lcd_Set_Cursor
  6577 ;;		_Lcd_Init
  6578 ;; This function uses a non-reentrant model
  6579 ;;
  6580                           
  6581     11C7                     _Lcd_Cmd:	
  6582                           ;psect for function _Lcd_Cmd
  6583                           
  6584                           
  6585                           ;incstack = 0
  6586                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  6587                           ;Lcd_Cmd@a stored from wreg
  6588     11C7  1283               	bcf	3,5	;RP0=0, select bank0
  6589     11C8  1303               	bcf	3,6	;RP1=0, select bank0
  6590     11C9  00A3               	movwf	Lcd_Cmd@a
  6591     11CA                     l3407:
  6592                           
  6593                           ;./lcd.h: 25: void Lcd_Cmd(char a);./lcd.h: 26: {;./lcd.h: 27:  RB5 = 0;
  6594     11CA  1286               	bcf	6,5	;volatile
  6595     11CB                     l3409:
  6596                           
  6597                           ;./lcd.h: 28:  Lcd_Port(a);
  6598     11CB  0823               	movf	Lcd_Cmd@a,w
  6599     11CC  160A  118A  21E3  160A  118A  	fcall	_Lcd_Port
  6600     11D1                     l3411:
  6601                           
  6602                           ;./lcd.h: 29:  RB4 = 1;
  6603     11D1  1283               	bcf	3,5	;RP0=0, select bank0
  6604     11D2  1303               	bcf	3,6	;RP1=0, select bank0
  6605     11D3  1606               	bsf	6,4	;volatile
  6606     11D4                     l3413:
  6607                           
  6608                           ;./lcd.h: 30:         _delay((unsigned long)((4)*(4000000/4000.0)));
  6609     11D4  3006               	movlw	6
  6610     11D5  1283               	bcf	3,5	;RP0=0, select bank0
  6611     11D6  1303               	bcf	3,6	;RP1=0, select bank0
  6612     11D7  00A2               	movwf	??_Lcd_Cmd+1
  6613     11D8  302F               	movlw	47
  6614     11D9  00A1               	movwf	??_Lcd_Cmd
  6615     11DA                     u5757:
  6616     11DA  0BA1               	decfsz	??_Lcd_Cmd,f
  6617     11DB  29DA               	goto	u5757
  6618     11DC  0BA2               	decfsz	??_Lcd_Cmd+1,f
  6619     11DD  29DA               	goto	u5757
  6620     11DE  29DF               	nop2
  6621     11DF                     l3415:
  6622                           
  6623                           ;./lcd.h: 31:         RB4 = 0;
  6624     11DF  1283               	bcf	3,5	;RP0=0, select bank0
  6625     11E0  1303               	bcf	3,6	;RP1=0, select bank0
  6626     11E1  1206               	bcf	6,4	;volatile
  6627     11E2                     l149:
  6628     11E2  0008               	return
  6629     11E3                     __end_of_Lcd_Cmd:
  6630                           
  6631                           	psect	text24
  6632     11E3                     __ptext24:	
  6633 ;; *************** function _Lcd_Port *****************
  6634 ;; Defined at:
  6635 ;;		line 3 in file "./lcd.h"
  6636 ;; Parameters:    Size  Location     Type
  6637 ;;  a               1    wreg     unsigned char 
  6638 ;; Auto vars:     Size  Location     Type
  6639 ;;  a               1    0[BANK0 ] unsigned char 
  6640 ;; Return value:  Size  Location     Type
  6641 ;;                  1    wreg      void 
  6642 ;; Registers used:
  6643 ;;		wreg
  6644 ;; Tracked objects:
  6645 ;;		On entry : 0/0
  6646 ;;		On exit  : 0/0
  6647 ;;		Unchanged: 0/0
  6648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6649 ;;      Params:         0       0       0       0       0
  6650 ;;      Locals:         0       1       0       0       0
  6651 ;;      Temps:          0       0       0       0       0
  6652 ;;      Totals:         0       1       0       0       0
  6653 ;;Total ram usage:        1 bytes
  6654 ;; Hardware stack levels used: 1
  6655 ;; Hardware stack levels required when called: 2
  6656 ;; This function calls:
  6657 ;;		Nothing
  6658 ;; This function is called by:
  6659 ;;		_Lcd_Cmd
  6660 ;;		_Lcd_Init
  6661 ;;		_Lcd_Write_Char
  6662 ;; This function uses a non-reentrant model
  6663 ;;
  6664                           
  6665     11E3                     _Lcd_Port:	
  6666                           ;psect for function _Lcd_Port
  6667                           
  6668                           
  6669                           ;incstack = 0
  6670                           ; Regs used in _Lcd_Port: [wreg]
  6671                           ;Lcd_Port@a stored from wreg
  6672     11E3  1283               	bcf	3,5	;RP0=0, select bank0
  6673     11E4  1303               	bcf	3,6	;RP1=0, select bank0
  6674     11E5  00A0               	movwf	Lcd_Port@a
  6675     11E6                     l3397:
  6676                           
  6677                           ;./lcd.h: 3: void Lcd_Port(char a);./lcd.h: 4: {;./lcd.h: 5:  if(a & 1)
  6678     11E6  1C20               	btfss	Lcd_Port@a,0
  6679     11E7  29E9               	goto	u4411
  6680     11E8  29EA               	goto	u4410
  6681     11E9                     u4411:
  6682     11E9  29EC               	goto	l138
  6683     11EA                     u4410:
  6684     11EA                     l3399:
  6685                           
  6686                           ;./lcd.h: 6:   RB3 = 1;
  6687     11EA  1586               	bsf	6,3	;volatile
  6688     11EB  29ED               	goto	l139
  6689     11EC                     l138:	
  6690                           ;./lcd.h: 7:  else
  6691                           
  6692                           
  6693                           ;./lcd.h: 8:   RB3 = 0;
  6694     11EC  1186               	bcf	6,3	;volatile
  6695     11ED                     l139:
  6696                           
  6697                           ;./lcd.h: 10:  if(a & 2)
  6698     11ED  1CA0               	btfss	Lcd_Port@a,1
  6699     11EE  29F0               	goto	u4421
  6700     11EF  29F1               	goto	u4420
  6701     11F0                     u4421:
  6702     11F0  29F3               	goto	l140
  6703     11F1                     u4420:
  6704     11F1                     l3401:
  6705                           
  6706                           ;./lcd.h: 11:   RB2 = 1;
  6707     11F1  1506               	bsf	6,2	;volatile
  6708     11F2  29F4               	goto	l141
  6709     11F3                     l140:	
  6710                           ;./lcd.h: 12:  else
  6711                           
  6712                           
  6713                           ;./lcd.h: 13:   RB2 = 0;
  6714     11F3  1106               	bcf	6,2	;volatile
  6715     11F4                     l141:
  6716                           
  6717                           ;./lcd.h: 15:  if(a & 4)
  6718     11F4  1D20               	btfss	Lcd_Port@a,2
  6719     11F5  29F7               	goto	u4431
  6720     11F6  29F8               	goto	u4430
  6721     11F7                     u4431:
  6722     11F7  29FA               	goto	l142
  6723     11F8                     u4430:
  6724     11F8                     l3403:
  6725                           
  6726                           ;./lcd.h: 16:   RB1 = 1;
  6727     11F8  1486               	bsf	6,1	;volatile
  6728     11F9  29FB               	goto	l143
  6729     11FA                     l142:	
  6730                           ;./lcd.h: 17:  else
  6731                           
  6732                           
  6733                           ;./lcd.h: 18:   RB1 = 0;
  6734     11FA  1086               	bcf	6,1	;volatile
  6735     11FB                     l143:
  6736                           
  6737                           ;./lcd.h: 20:  if(a & 8)
  6738     11FB  1DA0               	btfss	Lcd_Port@a,3
  6739     11FC  29FE               	goto	u4441
  6740     11FD  29FF               	goto	u4440
  6741     11FE                     u4441:
  6742     11FE  2A01               	goto	l144
  6743     11FF                     u4440:
  6744     11FF                     l3405:
  6745                           
  6746                           ;./lcd.h: 21:   RB0 = 1;
  6747     11FF  1406               	bsf	6,0	;volatile
  6748     1200  2A02               	goto	l146
  6749     1201                     l144:	
  6750                           ;./lcd.h: 22:  else
  6751                           
  6752                           
  6753                           ;./lcd.h: 23:   RB0 = 0;
  6754     1201  1006               	bcf	6,0	;volatile
  6755     1202                     l146:
  6756     1202  0008               	return
  6757     1203                     __end_of_Lcd_Port:
  6758                           
  6759                           	psect	text25
  6760     141A                     __ptext25:	
  6761 ;; *************** function _timer_isr *****************
  6762 ;; Defined at:
  6763 ;;		line 92 in file "main1.c"
  6764 ;; Parameters:    Size  Location     Type
  6765 ;;		None
  6766 ;; Auto vars:     Size  Location     Type
  6767 ;;		None
  6768 ;; Return value:  Size  Location     Type
  6769 ;;                  1    wreg      void 
  6770 ;; Registers used:
  6771 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6772 ;; Tracked objects:
  6773 ;;		On entry : 0/0
  6774 ;;		On exit  : 0/0
  6775 ;;		Unchanged: 0/0
  6776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6777 ;;      Params:         0       0       0       0       0
  6778 ;;      Locals:         0       0       0       0       0
  6779 ;;      Temps:          3       0       0       0       0
  6780 ;;      Totals:         3       0       0       0       0
  6781 ;;Total ram usage:        3 bytes
  6782 ;; Hardware stack levels used: 1
  6783 ;; Hardware stack levels required when called: 1
  6784 ;; This function calls:
  6785 ;;		_incrementTime
  6786 ;;		_writeEEPROM
  6787 ;; This function is called by:
  6788 ;;		Interrupt level 1
  6789 ;; This function uses a non-reentrant model
  6790 ;;
  6791                           
  6792     141A                     _timer_isr:	
  6793                           ;psect for function _timer_isr
  6794                           
  6795     141A                     i1l2973:
  6796                           
  6797                           ;main1.c: 93:     if (T0IF) {
  6798     141A  1D0B               	btfss	11,2	;volatile
  6799     141B  2C1D               	goto	u392_21
  6800     141C  2C1E               	goto	u392_20
  6801     141D                     u392_21:
  6802     141D  2C74               	goto	i1l201
  6803     141E                     u392_20:
  6804     141E                     i1l2975:
  6805                           
  6806                           ;main1.c: 94:         T0IF = 0;
  6807     141E  110B               	bcf	11,2	;volatile
  6808     141F                     i1l2977:
  6809                           
  6810                           ;main1.c: 95:         TMR0 =61;
  6811     141F  303D               	movlw	61
  6812     1420  1283               	bcf	3,5	;RP0=0, select bank0
  6813     1421  1303               	bcf	3,6	;RP1=0, select bank0
  6814     1422  0081               	movwf	1	;volatile
  6815                           
  6816                           ;main1.c: 98:         kesmeSayaci++;
  6817     1423  3001               	movlw	1
  6818     1424  07F7               	addwf	_kesmeSayaci,f
  6819     1425  1803               	skipnc
  6820     1426  0AF8               	incf	_kesmeSayaci+1,f
  6821     1427  3000               	movlw	0
  6822     1428  07F8               	addwf	_kesmeSayaci+1,f
  6823     1429                     i1l2979:
  6824                           
  6825                           ;main1.c: 99:         if (kesmeSayaci==20){
  6826     1429  3014               	movlw	20
  6827     142A  0677               	xorwf	_kesmeSayaci,w
  6828     142B  0478               	iorwf	_kesmeSayaci+1,w
  6829     142C  1D03               	btfss	3,2
  6830     142D  2C2F               	goto	u393_21
  6831     142E  2C30               	goto	u393_20
  6832     142F                     u393_21:
  6833     142F  2C74               	goto	i1l201
  6834     1430                     u393_20:
  6835     1430                     i1l2981:
  6836                           
  6837                           ;main1.c: 100:             kesmeSayaci = 0 ;
  6838     1430  01F7               	clrf	_kesmeSayaci
  6839     1431  01F8               	clrf	_kesmeSayaci+1
  6840     1432                     i1l2983:
  6841                           
  6842                           ;main1.c: 101:             incrementTime(&currentTime);
  6843     1432  30A4               	movlw	(low (_currentTime| (0+256)))& (0+255)
  6844     1433  160A  118A  24E0  160A  118A  	fcall	_incrementTime
  6845     1438                     i1l2985:
  6846                           
  6847                           ;main1.c: 104:         writeEEPROM(0x01, currentTime.hours);
  6848     1438  3001               	movlw	1
  6849     1439  00F0               	movwf	writeEEPROM@address
  6850     143A  3000               	movlw	0
  6851     143B  00F1               	movwf	writeEEPROM@address+1
  6852     143C  1683               	bsf	3,5	;RP0=1, select bank3
  6853     143D  1703               	bsf	3,6	;RP1=1, select bank3
  6854     143E  0827               	movf	((_currentTime+1)^(0+384)+2),w
  6855     143F  00F3               	movwf	writeEEPROM@data+1
  6856     1440  0826               	movf	(_currentTime^(0+384)+2),w
  6857     1441  00F2               	movwf	writeEEPROM@data
  6858     1442  160A  118A  21B1  160A  118A  	fcall	_writeEEPROM
  6859     1447                     i1l2987:
  6860                           
  6861                           ;main1.c: 105:         writeEEPROM(0x02, currentTime.minutes);
  6862     1447  3002               	movlw	2
  6863     1448  00F0               	movwf	writeEEPROM@address
  6864     1449  3000               	movlw	0
  6865     144A  00F1               	movwf	writeEEPROM@address+1
  6866     144B  1683               	bsf	3,5	;RP0=1, select bank3
  6867     144C  1703               	bsf	3,6	;RP1=1, select bank3
  6868     144D  0829               	movf	((_currentTime+1)^(0+384)+4),w
  6869     144E  00F3               	movwf	writeEEPROM@data+1
  6870     144F  0828               	movf	(_currentTime^(0+384)+4),w
  6871     1450  00F2               	movwf	writeEEPROM@data
  6872     1451  160A  118A  21B1  160A  118A  	fcall	_writeEEPROM
  6873     1456                     i1l2989:
  6874                           
  6875                           ;main1.c: 106:         writeEEPROM(0x03, currentTime.seconds);
  6876     1456  3003               	movlw	3
  6877     1457  00F0               	movwf	writeEEPROM@address
  6878     1458  3000               	movlw	0
  6879     1459  00F1               	movwf	writeEEPROM@address+1
  6880     145A  1683               	bsf	3,5	;RP0=1, select bank3
  6881     145B  1703               	bsf	3,6	;RP1=1, select bank3
  6882     145C  082B               	movf	((_currentTime+1)^(0+384)+6),w
  6883     145D  00F3               	movwf	writeEEPROM@data+1
  6884     145E  082A               	movf	(_currentTime^(0+384)+6),w
  6885     145F  00F2               	movwf	writeEEPROM@data
  6886     1460  160A  118A  21B1  160A  118A  	fcall	_writeEEPROM
  6887     1465                     i1l2991:
  6888                           
  6889                           ;main1.c: 107:         writeEEPROM(0x04, currentTime.carpan);
  6890     1465  3004               	movlw	4
  6891     1466  00F0               	movwf	writeEEPROM@address
  6892     1467  3000               	movlw	0
  6893     1468  00F1               	movwf	writeEEPROM@address+1
  6894     1469  1683               	bsf	3,5	;RP0=1, select bank3
  6895     146A  1703               	bsf	3,6	;RP1=1, select bank3
  6896     146B  0825               	movf	(_currentTime+1)^(0+384),w
  6897     146C  00F3               	movwf	writeEEPROM@data+1
  6898     146D  0824               	movf	_currentTime^(0+384),w
  6899     146E  00F2               	movwf	writeEEPROM@data
  6900     146F  160A  118A  21B1  160A  118A  	fcall	_writeEEPROM
  6901     1474                     i1l201:
  6902     1474  0876               	movf	??_timer_isr+2,w
  6903     1475  008A               	movwf	10
  6904     1476  0875               	movf	??_timer_isr+1,w
  6905     1477  0084               	movwf	4
  6906     1478  0E74               	swapf	??_timer_isr,w
  6907     1479  0083               	movwf	3
  6908     147A  0EFE               	swapf	btemp,f
  6909     147B  0E7E               	swapf	btemp,w
  6910     147C  0009               	retfie
  6911     147D                     __end_of_timer_isr:
  6912                           
  6913                           	psect	intentry
  6914     0004                     __pintentry:	
  6915                           ;incstack = 0
  6916                           ; Regs used in _timer_isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6917                           
  6918     0004                     interrupt_function:
  6919     007E                     saved_w	set	btemp
  6920     0004  00FE               	movwf	btemp
  6921     0005  0E03               	swapf	3,w
  6922     0006  00F4               	movwf	??_timer_isr
  6923     0007  0804               	movf	4,w
  6924     0008  00F5               	movwf	??_timer_isr+1
  6925     0009  080A               	movf	10,w
  6926     000A  00F6               	movwf	??_timer_isr+2
  6927     000B  160A  118A  2C1A   	ljmp	_timer_isr
  6928                           
  6929                           	psect	text26
  6930     11B1                     __ptext26:	
  6931 ;; *************** function _writeEEPROM *****************
  6932 ;; Defined at:
  6933 ;;		line 51 in file "main1.c"
  6934 ;; Parameters:    Size  Location     Type
  6935 ;;  address         2    0[COMMON] unsigned int 
  6936 ;;  data            2    2[COMMON] unsigned int 
  6937 ;; Auto vars:     Size  Location     Type
  6938 ;;		None
  6939 ;; Return value:  Size  Location     Type
  6940 ;;                  1    wreg      void 
  6941 ;; Registers used:
  6942 ;;		wreg
  6943 ;; Tracked objects:
  6944 ;;		On entry : 0/0
  6945 ;;		On exit  : 0/0
  6946 ;;		Unchanged: 0/0
  6947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6948 ;;      Params:         4       0       0       0       0
  6949 ;;      Locals:         0       0       0       0       0
  6950 ;;      Temps:          0       0       0       0       0
  6951 ;;      Totals:         4       0       0       0       0
  6952 ;;Total ram usage:        4 bytes
  6953 ;; Hardware stack levels used: 1
  6954 ;; This function calls:
  6955 ;;		Nothing
  6956 ;; This function is called by:
  6957 ;;		_timer_isr
  6958 ;; This function uses a non-reentrant model
  6959 ;;
  6960                           
  6961     11B1                     _writeEEPROM:	
  6962                           ;psect for function _writeEEPROM
  6963                           
  6964     11B1                     i1l2367:	
  6965                           ;incstack = 0
  6966                           ; Regs used in _writeEEPROM: [wreg]
  6967                           
  6968                           
  6969                           ;main1.c: 53:     EEADR = address;
  6970     11B1  0870               	movf	writeEEPROM@address,w
  6971     11B2  1283               	bcf	3,5	;RP0=0, select bank2
  6972     11B3  1703               	bsf	3,6	;RP1=1, select bank2
  6973     11B4  008D               	movwf	13	;volatile
  6974                           
  6975                           ;main1.c: 54:     EEDATA = data;
  6976     11B5  0872               	movf	writeEEPROM@data,w
  6977     11B6  008C               	movwf	12	;volatile
  6978     11B7                     i1l2369:
  6979                           
  6980                           ;main1.c: 55:     WREN = 1;
  6981     11B7  1683               	bsf	3,5	;RP0=1, select bank3
  6982     11B8  1703               	bsf	3,6	;RP1=1, select bank3
  6983     11B9  150C               	bsf	12,2	;volsfr
  6984     11BA                     i1l2371:
  6985                           
  6986                           ;main1.c: 56:     GIE = 0;
  6987     11BA  138B               	bcf	11,7	;volatile
  6988                           
  6989                           ;main1.c: 57:     EECON2 = 0x55;
  6990     11BB  3055               	movlw	85
  6991     11BC  008D               	movwf	13	;volsfr
  6992                           
  6993                           ;main1.c: 58:     EECON2 = 0xAA;
  6994     11BD  30AA               	movlw	170
  6995     11BE  008D               	movwf	13	;volsfr
  6996     11BF                     i1l2373:
  6997                           
  6998                           ;main1.c: 59:     WR = 1;
  6999     11BF  148C               	bsf	12,1	;volsfr
  7000     11C0                     i1l2375:
  7001                           
  7002                           ;main1.c: 60:     GIE = 1;
  7003     11C0  178B               	bsf	11,7	;volatile
  7004     11C1                     i1l2377:
  7005                           
  7006                           ;main1.c: 61:     WREN = 0;
  7007     11C1  110C               	bcf	12,2	;volsfr
  7008     11C2                     i1l182:	
  7009                           ;main1.c: 62:     while (WR == 1);
  7010                           
  7011     11C2  188C               	btfsc	12,1	;volsfr
  7012     11C3  29C5               	goto	u260_21
  7013     11C4  29C6               	goto	u260_20
  7014     11C5                     u260_21:
  7015     11C5  29C2               	goto	i1l182
  7016     11C6                     u260_20:
  7017     11C6                     i1l185:
  7018     11C6  0008               	return
  7019     11C7                     __end_of_writeEEPROM:
  7020                           
  7021                           	psect	text27
  7022     14E0                     __ptext27:	
  7023 ;; *************** function _incrementTime *****************
  7024 ;; Defined at:
  7025 ;;		line 72 in file "main1.c"
  7026 ;; Parameters:    Size  Location     Type
  7027 ;;  time            1    wreg     PTR struct Time
  7028 ;;		 -> currentTime(8), 
  7029 ;; Auto vars:     Size  Location     Type
  7030 ;;  time            1    2[COMMON] PTR struct Time
  7031 ;;		 -> currentTime(8), 
  7032 ;; Return value:  Size  Location     Type
  7033 ;;                  1    wreg      void 
  7034 ;; Registers used:
  7035 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7036 ;; Tracked objects:
  7037 ;;		On entry : 0/0
  7038 ;;		On exit  : 0/0
  7039 ;;		Unchanged: 0/0
  7040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7041 ;;      Params:         0       0       0       0       0
  7042 ;;      Locals:         1       0       0       0       0
  7043 ;;      Temps:          2       0       0       0       0
  7044 ;;      Totals:         3       0       0       0       0
  7045 ;;Total ram usage:        3 bytes
  7046 ;; Hardware stack levels used: 1
  7047 ;; This function calls:
  7048 ;;		Nothing
  7049 ;; This function is called by:
  7050 ;;		_timer_isr
  7051 ;; This function uses a non-reentrant model
  7052 ;;
  7053                           
  7054     14E0                     _incrementTime:	
  7055                           ;psect for function _incrementTime
  7056                           
  7057                           
  7058                           ;incstack = 0
  7059                           ; Regs used in _incrementTime: [wreg-fsr0h+status,2+status,0]
  7060                           ;incrementTime@time stored from wreg
  7061     14E0  00F2               	movwf	incrementTime@time
  7062     14E1                     i1l2385:
  7063                           
  7064                           ;main1.c: 73:     time->seconds++;
  7065     14E1  0872               	movf	incrementTime@time,w
  7066     14E2  3E06               	addlw	6
  7067     14E3  0084               	movwf	4
  7068     14E4  3001               	movlw	1
  7069     14E5  1783               	bsf	3,7	;select IRP bank2
  7070     14E6  0780               	addwf	0,f
  7071     14E7  0A84               	incf	4,f
  7072     14E8  1803               	skipnc
  7073     14E9  0A80               	incf	0,f
  7074                           
  7075                           ;main1.c: 74:     if (time->seconds >= 60) {
  7076     14EA  0872               	movf	incrementTime@time,w
  7077     14EB  3E06               	addlw	6
  7078     14EC  0084               	movwf	4
  7079     14ED  0800               	movf	0,w
  7080     14EE  00F0               	movwf	??_incrementTime
  7081     14EF  0A84               	incf	4,f
  7082     14F0  0800               	movf	0,w
  7083     14F1  00F1               	movwf	??_incrementTime+1
  7084     14F2  3000               	movlw	0
  7085     14F3  0271               	subwf	??_incrementTime+1,w
  7086     14F4  303C               	movlw	60
  7087     14F5  1903               	skipnz
  7088     14F6  0270               	subwf	??_incrementTime,w
  7089     14F7  1C03               	skipc
  7090     14F8  2CFA               	goto	u261_21
  7091     14F9  2CFB               	goto	u261_20
  7092     14FA                     u261_21:
  7093     14FA  2D46               	goto	i1l194
  7094     14FB                     u261_20:
  7095     14FB                     i1l2387:
  7096                           
  7097                           ;main1.c: 75:         time->seconds = 0;
  7098     14FB  0872               	movf	incrementTime@time,w
  7099     14FC  3E06               	addlw	6
  7100     14FD  0084               	movwf	4
  7101     14FE  0180               	clrf	0
  7102     14FF  0A84               	incf	4,f
  7103     1500  0180               	clrf	0
  7104                           
  7105                           ;main1.c: 77:         time->minutes++;
  7106     1501  0872               	movf	incrementTime@time,w
  7107     1502  3E04               	addlw	4
  7108     1503  0084               	movwf	4
  7109     1504  3001               	movlw	1
  7110     1505  0780               	addwf	0,f
  7111     1506  0A84               	incf	4,f
  7112     1507  1803               	skipnc
  7113     1508  0A80               	incf	0,f
  7114                           
  7115                           ;main1.c: 78:         if (time->minutes >= 60) {
  7116     1509  0872               	movf	incrementTime@time,w
  7117     150A  3E04               	addlw	4
  7118     150B  0084               	movwf	4
  7119     150C  0800               	movf	0,w
  7120     150D  00F0               	movwf	??_incrementTime
  7121     150E  0A84               	incf	4,f
  7122     150F  0800               	movf	0,w
  7123     1510  00F1               	movwf	??_incrementTime+1
  7124     1511  3000               	movlw	0
  7125     1512  0271               	subwf	??_incrementTime+1,w
  7126     1513  303C               	movlw	60
  7127     1514  1903               	skipnz
  7128     1515  0270               	subwf	??_incrementTime,w
  7129     1516  1C03               	skipc
  7130     1517  2D19               	goto	u262_21
  7131     1518  2D1A               	goto	u262_20
  7132     1519                     u262_21:
  7133     1519  2D46               	goto	i1l194
  7134     151A                     u262_20:
  7135     151A                     i1l2389:
  7136                           
  7137                           ;main1.c: 79:             time->minutes = 0;
  7138     151A  0872               	movf	incrementTime@time,w
  7139     151B  3E04               	addlw	4
  7140     151C  0084               	movwf	4
  7141     151D  0180               	clrf	0
  7142     151E  0A84               	incf	4,f
  7143     151F  0180               	clrf	0
  7144                           
  7145                           ;main1.c: 81:             time->hours++;
  7146     1520  0872               	movf	incrementTime@time,w
  7147     1521  3E02               	addlw	2
  7148     1522  0084               	movwf	4
  7149     1523  3001               	movlw	1
  7150     1524  0780               	addwf	0,f
  7151     1525  0A84               	incf	4,f
  7152     1526  1803               	skipnc
  7153     1527  0A80               	incf	0,f
  7154                           
  7155                           ;main1.c: 82:             if (time-> hours >= 255){
  7156     1528  0872               	movf	incrementTime@time,w
  7157     1529  3E02               	addlw	2
  7158     152A  0084               	movwf	4
  7159     152B  0800               	movf	0,w
  7160     152C  00F0               	movwf	??_incrementTime
  7161     152D  0A84               	incf	4,f
  7162     152E  0800               	movf	0,w
  7163     152F  00F1               	movwf	??_incrementTime+1
  7164     1530  3000               	movlw	0
  7165     1531  0271               	subwf	??_incrementTime+1,w
  7166     1532  30FF               	movlw	255
  7167     1533  1903               	skipnz
  7168     1534  0270               	subwf	??_incrementTime,w
  7169     1535  1C03               	skipc
  7170     1536  2D38               	goto	u263_21
  7171     1537  2D39               	goto	u263_20
  7172     1538                     u263_21:
  7173     1538  2D46               	goto	i1l194
  7174     1539                     u263_20:
  7175     1539                     i1l2391:
  7176                           
  7177                           ;main1.c: 83:                 time-> hours = 0;
  7178     1539  0872               	movf	incrementTime@time,w
  7179     153A  3E02               	addlw	2
  7180     153B  0084               	movwf	4
  7181     153C  0180               	clrf	0
  7182     153D  0A84               	incf	4,f
  7183     153E  0180               	clrf	0
  7184                           
  7185                           ;main1.c: 84:                 time->carpan++;
  7186     153F  0872               	movf	incrementTime@time,w
  7187     1540  0084               	movwf	4
  7188     1541  3001               	movlw	1
  7189     1542  0780               	addwf	0,f
  7190     1543  0A84               	incf	4,f
  7191     1544  1803               	skipnc
  7192     1545  0A80               	incf	0,f
  7193     1546                     i1l194:
  7194     1546  0008               	return
  7195     1547                     __end_of_incrementTime:
  7196     007E                     btemp	set	126	;btemp
  7197     007E                     wtemp0	set	126
  7198                           
  7199                           	psect	config
  7200                           
  7201                           ;Config register CONFIG @ 0x2007
  7202                           ;	Oscillator Selection bits
  7203                           ;	FOSC = XT, XT oscillator
  7204                           ;	Watchdog Timer Enable bit
  7205                           ;	WDTE = OFF, WDT disabled
  7206                           ;	Power-up Timer Enable bit
  7207                           ;	PWRTE = OFF, PWRT disabled
  7208                           ;	Brown-out Reset Enable bit
  7209                           ;	BOREN = ON, BOR enabled
  7210                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  7211                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  7212                           ;	Data EEPROM Memory Code Protection bit
  7213                           ;	CPD = OFF, Data EEPROM code protection off
  7214                           ;	Flash Program Memory Write Enable bits
  7215                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  7216                           ;	In-Circuit Debugger Mode bit
  7217                           ;	DEBUG = 0x1, unprogrammed default
  7218                           ;	Flash Program Memory Code Protection bit
  7219                           ;	CP = OFF, Code protection off
  7220     2007                     	org	8199
  7221     2007  3F79               	dw	16249
  7222                           
  7223                           	psect	maintext_split_1
  7224     0BED                     u5150:
  7225     0BED                     l3915:
  7226                           
  7227                           ;main1.c: 221:         if ( RE2 == 0 && RE0 == 0 && RC0 == 0 && RE1 == 0) {
  7228     0BED  1283               	bcf	3,5	;RP0=0, select bank0
  7229     0BEE  1303               	bcf	3,6	;RP1=0, select bank0
  7230     0BEF  1909               	btfsc	9,2	;volatile
  7231     0BF0  2BF2               	goto	u5161
  7232     0BF1  2BF3               	goto	u5160
  7233     0BF2                     u5161:
  7234     0BF2  2C04               	goto	l3925
  7235     0BF3                     u5160:
  7236     0BF3                     l3917:
  7237     0BF3  1809               	btfsc	9,0	;volatile
  7238     0BF4  2BF6               	goto	u5171
  7239     0BF5  2BF7               	goto	u5170
  7240     0BF6                     u5171:
  7241     0BF6  2C04               	goto	l3925
  7242     0BF7                     u5170:
  7243     0BF7                     l3919:
  7244     0BF7  1807               	btfsc	7,0	;volatile
  7245     0BF8  2BFA               	goto	u5181
  7246     0BF9  2BFB               	goto	u5180
  7247     0BFA                     u5181:
  7248     0BFA  2C04               	goto	l3925
  7249     0BFB                     u5180:
  7250     0BFB                     l3921:
  7251     0BFB  1889               	btfsc	9,1	;volatile
  7252     0BFC  2BFE               	goto	u5191
  7253     0BFD  2BFF               	goto	u5190
  7254     0BFE                     u5191:
  7255     0BFE  2C04               	goto	l3925
  7256     0BFF                     u5190:
  7257     0BFF                     l3923:
  7258                           
  7259                           ;main1.c: 222:             ilkAcilis = 0;
  7260     0BFF  1683               	bsf	3,5	;RP0=1, select bank3
  7261     0C00  1703               	bsf	3,6	;RP1=1, select bank3
  7262     0C01  0190               	clrf	main@ilkAcilis^(0+384)
  7263     0C02  0191               	clrf	(main@ilkAcilis+1)^(0+384)
  7264                           
  7265                           ;main1.c: 223:         } else {
  7266     0C03  2C3D               	goto	l207
  7267     0C04                     l3925:
  7268                           
  7269                           ;main1.c: 225:              Lcd_Set_Cursor(1,1);
  7270     0C04  01A4               	clrf	Lcd_Set_Cursor@b
  7271     0C05  0AA4               	incf	Lcd_Set_Cursor@b,f
  7272     0C06  3001               	movlw	1
  7273     0C07  160A  118A  2373  120A  158A  	fcall	_Lcd_Set_Cursor
  7274     0C0C                     l3927:
  7275                           
  7276                           ;main1.c: 226:     Lcd_Write_String("STOP DURUMUNA GETIR");
  7277     0C0C  3096               	movlw	low (STR_6| (0+32768))
  7278     0C0D  1283               	bcf	3,5	;RP0=0, select bank0
  7279     0C0E  1303               	bcf	3,6	;RP1=0, select bank0
  7280     0C0F  00A5               	movwf	Lcd_Write_String@a
  7281     0C10  3090               	movlw	high (STR_6| (0+32768))
  7282     0C11  00A6               	movwf	Lcd_Write_String@a+1
  7283     0C12  160A  118A  232D  120A  158A  	fcall	_Lcd_Write_String
  7284     0C17                     l3929:
  7285                           
  7286                           ;main1.c: 227:     Lcd_Set_Cursor(2,1);
  7287     0C17  1283               	bcf	3,5	;RP0=0, select bank0
  7288     0C18  1303               	bcf	3,6	;RP1=0, select bank0
  7289     0C19  01A4               	clrf	Lcd_Set_Cursor@b
  7290     0C1A  0AA4               	incf	Lcd_Set_Cursor@b,f
  7291     0C1B  3002               	movlw	2
  7292     0C1C  160A  118A  2373  120A  158A  	fcall	_Lcd_Set_Cursor
  7293                           
  7294                           ;main1.c: 228:     Lcd_Write_String("PUT IT IN STOP STATE");
  7295     0C21  3081               	movlw	low (STR_7| (0+32768))
  7296     0C22  1283               	bcf	3,5	;RP0=0, select bank0
  7297     0C23  1303               	bcf	3,6	;RP1=0, select bank0
  7298     0C24  00A5               	movwf	Lcd_Write_String@a
  7299     0C25  3090               	movlw	high (STR_7| (0+32768))
  7300     0C26  00A6               	movwf	Lcd_Write_String@a+1
  7301     0C27  160A  118A  232D  120A  158A  	fcall	_Lcd_Write_String
  7302     0C2C                     l3931:
  7303                           
  7304                           ;main1.c: 229:     _delay((unsigned long)((500)*(4000000/4000.0)));
  7305     0C2C  3003               	movlw	3
  7306     0C2D  1283               	bcf	3,5	;RP0=0, select bank0
  7307     0C2E  1303               	bcf	3,6	;RP1=0, select bank0
  7308     0C2F  00D6               	movwf	??_main+2
  7309     0C30  308A               	movlw	138
  7310     0C31  00D5               	movwf	??_main+1
  7311     0C32  3055               	movlw	85
  7312     0C33  00D4               	movwf	??_main
  7313     0C34                     u5647:
  7314     0C34  0BD4               	decfsz	??_main,f
  7315     0C35  2C34               	goto	u5647
  7316     0C36  0BD5               	decfsz	??_main+1,f
  7317     0C37  2C34               	goto	u5647
  7318     0C38  0BD6               	decfsz	??_main+2,f
  7319     0C39  2C34               	goto	u5647
  7320     0C3A  120A  118A  2C62   	goto	l210
  7321     0C3D                     l207:	
  7322                           ;main1.c: 232:     }
  7323                           
  7324                           
  7325                           ;main1.c: 234: if( !RC3 && !RD0){
  7326     0C3D  1283               	bcf	3,5	;RP0=0, select bank0
  7327     0C3E  1303               	bcf	3,6	;RP1=0, select bank0
  7328     0C3F  1987               	btfsc	7,3	;volatile
  7329     0C40  2C42               	goto	u5201
  7330     0C41  2C45               	goto	u5200
  7331     0C42                     u5201:
  7332     0C42  120A  118A  2BCD   	goto	l211
  7333     0C45                     u5200:
  7334     0C45                     l3935:
  7335     0C45  1808               	btfsc	8,0	;volatile
  7336     0C46  2C48               	goto	u5211
  7337     0C47  2C49               	goto	u5210
  7338     0C48                     u5211:
  7339     0C48  2C42               	goto	u5201
  7340     0C49                     u5210:
  7341     0C49                     l3937:
  7342                           
  7343                           ;main1.c: 237:    int dakika = readEEPROM(0x02);
  7344     0C49  3002               	movlw	2
  7345     0C4A  00A0               	movwf	readEEPROM@address
  7346     0C4B  3000               	movlw	0
  7347     0C4C  00A1               	movwf	readEEPROM@address+1
  7348     0C4D  160A  118A  219C  120A  158A  	fcall	_readEEPROM
  7349     0C52  1283               	bcf	3,5	;RP0=0, select bank0
  7350     0C53  1303               	bcf	3,6	;RP1=0, select bank0
  7351     0C54  0821               	movf	?_readEEPROM+1,w
  7352     0C55  1683               	bsf	3,5	;RP0=1, select bank1
  7353     0C56  1303               	bcf	3,6	;RP1=0, select bank1
  7354     0C57  00E5               	movwf	(main@dakika+1)^(0+128)
  7355     0C58  1283               	bcf	3,5	;RP0=0, select bank0
  7356     0C59  1303               	bcf	3,6	;RP1=0, select bank0
  7357     0C5A  0820               	movf	?_readEEPROM,w
  7358     0C5B  1683               	bsf	3,5	;RP0=1, select bank1
  7359     0C5C  1303               	bcf	3,6	;RP1=0, select bank1
  7360     0C5D  00E4               	movwf	main@dakika^(0+128)
  7361     0C5E                     l3939:
  7362                           
  7363                           ;main1.c: 238:    int realSaat = readEEPROM(0x04)*255+readEEPROM(0x01);
  7364     0C5E  3004               	movlw	4
  7365     0C5F  1283               	bcf	3,5	;RP0=0, select bank0
  7366     0C60  1303               	bcf	3,6	;RP1=0, select bank0
  7367     0C61  00A0               	movwf	readEEPROM@address
  7368     0C62  3000               	movlw	0
  7369     0C63  00A1               	movwf	readEEPROM@address+1
  7370     0C64  160A  118A  219C  120A  158A  	fcall	_readEEPROM
  7371     0C69  1283               	bcf	3,5	;RP0=0, select bank0
  7372     0C6A  1303               	bcf	3,6	;RP1=0, select bank0
  7373     0C6B  0821               	movf	?_readEEPROM+1,w
  7374     0C6C  00A5               	movwf	___wmul@multiplier+1
  7375     0C6D  0820               	movf	?_readEEPROM,w
  7376     0C6E  00A4               	movwf	___wmul@multiplier
  7377     0C6F  30FF               	movlw	255
  7378     0C70  00A6               	movwf	___wmul@multiplicand
  7379     0C71  3000               	movlw	0
  7380     0C72  00A7               	movwf	___wmul@multiplicand+1
  7381     0C73  120A  158A  2000  120A  158A  	fcall	___wmul
  7382     0C78  1283               	bcf	3,5	;RP0=0, select bank0
  7383     0C79  1303               	bcf	3,6	;RP1=0, select bank0
  7384     0C7A  0824               	movf	?___wmul,w
  7385     0C7B  00D4               	movwf	??_main
  7386     0C7C  0825               	movf	?___wmul+1,w
  7387     0C7D  00D5               	movwf	??_main+1
  7388     0C7E  3001               	movlw	1
  7389     0C7F  00A0               	movwf	readEEPROM@address
  7390     0C80  3000               	movlw	0
  7391     0C81  00A1               	movwf	readEEPROM@address+1
  7392     0C82  160A  118A  219C  120A  158A  	fcall	_readEEPROM
  7393     0C87  1283               	bcf	3,5	;RP0=0, select bank0
  7394     0C88  1303               	bcf	3,6	;RP1=0, select bank0
  7395     0C89  0820               	movf	?_readEEPROM,w
  7396     0C8A  0754               	addwf	??_main,w
  7397     0C8B  1683               	bsf	3,5	;RP0=1, select bank3
  7398     0C8C  1703               	bsf	3,6	;RP1=1, select bank3
  7399     0C8D  00A0               	movwf	main@realSaat^(0+384)
  7400     0C8E  1283               	bcf	3,5	;RP0=0, select bank0
  7401     0C8F  1303               	bcf	3,6	;RP1=0, select bank0
  7402     0C90  0821               	movf	?_readEEPROM+1,w
  7403     0C91  1803               	skipnc
  7404     0C92  0A21               	incf	?_readEEPROM+1,w
  7405     0C93  0755               	addwf	??_main+1,w
  7406     0C94  1683               	bsf	3,5	;RP0=1, select bank3
  7407     0C95  1703               	bsf	3,6	;RP1=1, select bank3
  7408     0C96  00A1               	movwf	(main@realSaat+1)^(0+384)
  7409     0C97                     l3941:
  7410                           
  7411                           ;main1.c: 240:         sprintf(lcdText, "%5uh %02um", realSaat, dakika);
  7412     0C97  3014               	movlw	low (STR_8| (0+32768))
  7413     0C98  1283               	bcf	3,5	;RP0=0, select bank0
  7414     0C99  1303               	bcf	3,6	;RP1=0, select bank0
  7415     0C9A  00AC               	movwf	sprintf@f
  7416     0C9B  3091               	movlw	high (STR_8| (0+32768))
  7417     0C9C  00AD               	movwf	sprintf@f+1
  7418     0C9D  1683               	bsf	3,5	;RP0=1, select bank3
  7419     0C9E  1703               	bsf	3,6	;RP1=1, select bank3
  7420     0C9F  0821               	movf	(main@realSaat+1)^(0+384),w
  7421     0CA0  1283               	bcf	3,5	;RP0=0, select bank0
  7422     0CA1  1303               	bcf	3,6	;RP1=0, select bank0
  7423     0CA2  00AF               	movwf	?_sprintf+3
  7424     0CA3  1683               	bsf	3,5	;RP0=1, select bank3
  7425     0CA4  1703               	bsf	3,6	;RP1=1, select bank3
  7426     0CA5  0820               	movf	main@realSaat^(0+384),w
  7427     0CA6  1283               	bcf	3,5	;RP0=0, select bank0
  7428     0CA7  1303               	bcf	3,6	;RP1=0, select bank0
  7429     0CA8  00AE               	movwf	?_sprintf+2
  7430     0CA9  1683               	bsf	3,5	;RP0=1, select bank1
  7431     0CAA  1303               	bcf	3,6	;RP1=0, select bank1
  7432     0CAB  0865               	movf	(main@dakika+1)^(0+128),w
  7433     0CAC  1283               	bcf	3,5	;RP0=0, select bank0
  7434     0CAD  1303               	bcf	3,6	;RP1=0, select bank0
  7435     0CAE  00B1               	movwf	?_sprintf+5
  7436     0CAF  1683               	bsf	3,5	;RP0=1, select bank1
  7437     0CB0  1303               	bcf	3,6	;RP1=0, select bank1
  7438     0CB1  0864               	movf	main@dakika^(0+128),w
  7439     0CB2  1283               	bcf	3,5	;RP0=0, select bank0
  7440     0CB3  1303               	bcf	3,6	;RP1=0, select bank0
  7441     0CB4  00B0               	movwf	?_sprintf+4
  7442     0CB5  30B4               	movlw	(low (main@lcdText| 0))& (0+255)
  7443     0CB6  120A  158A  21F6  120A  158A  	fcall	_sprintf
  7444     0CBB                     l3943:
  7445                           
  7446                           ;main1.c: 243:      Lcd_Set_Cursor(1, 10);
  7447     0CBB  300A               	movlw	10
  7448     0CBC  1283               	bcf	3,5	;RP0=0, select bank0
  7449     0CBD  1303               	bcf	3,6	;RP1=0, select bank0
  7450     0CBE  00A4               	movwf	Lcd_Set_Cursor@b
  7451     0CBF  3001               	movlw	1
  7452     0CC0  160A  118A  2373  120A  158A  	fcall	_Lcd_Set_Cursor
  7453     0CC5                     l3945:
  7454                           
  7455                           ;main1.c: 244:      Lcd_Write_String("  ");
  7456     0CC5  30D9               	movlw	low ((STR_18+12)| (0+32768))
  7457     0CC6  1283               	bcf	3,5	;RP0=0, select bank0
  7458     0CC7  1303               	bcf	3,6	;RP1=0, select bank0
  7459     0CC8  00A5               	movwf	Lcd_Write_String@a
  7460     0CC9  3090               	movlw	high ((STR_18+12)| (0+32768))
  7461     0CCA  00A6               	movwf	Lcd_Write_String@a+1
  7462     0CCB  160A  118A  232D  120A  158A  	fcall	_Lcd_Write_String
  7463     0CD0                     l3947:
  7464                           
  7465                           ;main1.c: 245:      Lcd_Set_Cursor(1, 11);
  7466     0CD0  300B               	movlw	11
  7467     0CD1  1283               	bcf	3,5	;RP0=0, select bank0
  7468     0CD2  1303               	bcf	3,6	;RP1=0, select bank0
  7469     0CD3  00A4               	movwf	Lcd_Set_Cursor@b
  7470     0CD4  3001               	movlw	1
  7471     0CD5  160A  118A  2373  120A  158A  	fcall	_Lcd_Set_Cursor
  7472     0CDA                     l3949:
  7473                           
  7474                           ;main1.c: 246:      Lcd_Write_String(lcdText);
  7475     0CDA  30B4               	movlw	(low (main@lcdText| 0))& (0+255)
  7476     0CDB  1283               	bcf	3,5	;RP0=0, select bank0
  7477     0CDC  1303               	bcf	3,6	;RP1=0, select bank0
  7478     0CDD  00A5               	movwf	Lcd_Write_String@a
  7479     0CDE  3000               	movlw	0
  7480     0CDF  00A6               	movwf	Lcd_Write_String@a+1
  7481     0CE0  160A  118A  232D  120A  158A  	fcall	_Lcd_Write_String
  7482     0CE5                     l3951:
  7483                           
  7484                           ;main1.c: 250:     if ( ( realSaat % 500 == 0 && realSaat != 0
  7485     0CE5  30F4               	movlw	244
  7486     0CE6  1283               	bcf	3,5	;RP0=0, select bank0
  7487     0CE7  1303               	bcf	3,6	;RP1=0, select bank0
  7488     0CE8  00AA               	movwf	___awmod@divisor
  7489     0CE9  3001               	movlw	1
  7490     0CEA  00AB               	movwf	___awmod@divisor+1
  7491     0CEB  1683               	bsf	3,5	;RP0=1, select bank3
  7492     0CEC  1703               	bsf	3,6	;RP1=1, select bank3
  7493     0CED  0821               	movf	(main@realSaat+1)^(0+384),w
  7494     0CEE  1283               	bcf	3,5	;RP0=0, select bank0
  7495     0CEF  1303               	bcf	3,6	;RP1=0, select bank0
  7496     0CF0  00AD               	movwf	___awmod@dividend+1
  7497     0CF1  1683               	bsf	3,5	;RP0=1, select bank3
  7498     0CF2  1703               	bsf	3,6	;RP1=1, select bank3
  7499     0CF3  0820               	movf	main@realSaat^(0+384),w
  7500     0CF4  1283               	bcf	3,5	;RP0=0, select bank0
  7501     0CF5  1303               	bcf	3,6	;RP1=0, select bank0
  7502     0CF6  00AC               	movwf	___awmod@dividend
  7503     0CF7  160A  118A  23BF  120A  158A  	fcall	___awmod
  7504     0CFC  1283               	bcf	3,5	;RP0=0, select bank0
  7505     0CFD  1303               	bcf	3,6	;RP1=0, select bank0
  7506     0CFE  082A               	movf	?___awmod,w
  7507     0CFF  042B               	iorwf	?___awmod+1,w
  7508     0D00  1D03               	btfss	3,2
  7509     0D01  2D03               	goto	u5221
  7510     0D02  2D04               	goto	u5220
  7511     0D03                     u5221:
  7512     0D03  2D0C               	goto	l3955
  7513     0D04                     u5220:
  7514     0D04                     l3953:
  7515     0D04  1683               	bsf	3,5	;RP0=1, select bank3
  7516     0D05  1703               	bsf	3,6	;RP1=1, select bank3
  7517     0D06  0820               	movf	main@realSaat^(0+384),w
  7518     0D07  0421               	iorwf	(main@realSaat+1)^(0+384),w
  7519     0D08  1D03               	btfss	3,2
  7520     0D09  2D0B               	goto	u5231
  7521     0D0A  2D0C               	goto	u5230
  7522     0D0B                     u5231:
  7523     0D0B  2D5C               	goto	l3963
  7524     0D0C                     u5230:
  7525     0D0C                     l3955:
  7526     0D0C  30F4               	movlw	244
  7527     0D0D  1283               	bcf	3,5	;RP0=0, select bank0
  7528     0D0E  1303               	bcf	3,6	;RP1=0, select bank0
  7529     0D0F  00AA               	movwf	___awmod@divisor
  7530     0D10  3001               	movlw	1
  7531     0D11  00AB               	movwf	___awmod@divisor+1
  7532     0D12  1683               	bsf	3,5	;RP0=1, select bank3
  7533     0D13  1703               	bsf	3,6	;RP1=1, select bank3
  7534     0D14  0821               	movf	(main@realSaat+1)^(0+384),w
  7535     0D15  1283               	bcf	3,5	;RP0=0, select bank0
  7536     0D16  1303               	bcf	3,6	;RP1=0, select bank0
  7537     0D17  00AD               	movwf	___awmod@dividend+1
  7538     0D18  1683               	bsf	3,5	;RP0=1, select bank3
  7539     0D19  1703               	bsf	3,6	;RP1=1, select bank3
  7540     0D1A  0820               	movf	main@realSaat^(0+384),w
  7541     0D1B  1283               	bcf	3,5	;RP0=0, select bank0
  7542     0D1C  1303               	bcf	3,6	;RP1=0, select bank0
  7543     0D1D  00AC               	movwf	___awmod@dividend
  7544     0D1E  160A  118A  23BF  120A  158A  	fcall	___awmod
  7545     0D23  1283               	bcf	3,5	;RP0=0, select bank0
  7546     0D24  1303               	bcf	3,6	;RP1=0, select bank0
  7547     0D25  032A               	decf	?___awmod,w
  7548     0D26  042B               	iorwf	?___awmod+1,w
  7549     0D27  1D03               	btfss	3,2
  7550     0D28  2D2A               	goto	u5241
  7551     0D29  2D2B               	goto	u5240
  7552     0D2A                     u5241:
  7553     0D2A  2D33               	goto	l3959
  7554     0D2B                     u5240:
  7555     0D2B                     l3957:
  7556     0D2B  1683               	bsf	3,5	;RP0=1, select bank3
  7557     0D2C  1703               	bsf	3,6	;RP1=1, select bank3
  7558     0D2D  0320               	decf	main@realSaat^(0+384),w
  7559     0D2E  0421               	iorwf	(main@realSaat+1)^(0+384),w
  7560     0D2F  1D03               	btfss	3,2
  7561     0D30  2D32               	goto	u5251
  7562     0D31  2D33               	goto	u5250
  7563     0D32                     u5251:
  7564     0D32  2D5C               	goto	l3963
  7565     0D33                     u5250:
  7566     0D33                     l3959:
  7567     0D33  30F4               	movlw	244
  7568     0D34  1283               	bcf	3,5	;RP0=0, select bank0
  7569     0D35  1303               	bcf	3,6	;RP1=0, select bank0
  7570     0D36  00AA               	movwf	___awmod@divisor
  7571     0D37  3001               	movlw	1
  7572     0D38  00AB               	movwf	___awmod@divisor+1
  7573     0D39  1683               	bsf	3,5	;RP0=1, select bank3
  7574     0D3A  1703               	bsf	3,6	;RP1=1, select bank3
  7575     0D3B  0821               	movf	(main@realSaat+1)^(0+384),w
  7576     0D3C  1283               	bcf	3,5	;RP0=0, select bank0
  7577     0D3D  1303               	bcf	3,6	;RP1=0, select bank0
  7578     0D3E  00AD               	movwf	___awmod@dividend+1
  7579     0D3F  1683               	bsf	3,5	;RP0=1, select bank3
  7580     0D40  1703               	bsf	3,6	;RP1=1, select bank3
  7581     0D41  0820               	movf	main@realSaat^(0+384),w
  7582     0D42  1283               	bcf	3,5	;RP0=0, select bank0
  7583     0D43  1303               	bcf	3,6	;RP1=0, select bank0
  7584     0D44  00AC               	movwf	___awmod@dividend
  7585     0D45  160A  118A  23BF  120A  158A  	fcall	___awmod
  7586     0D4A  3002               	movlw	2
  7587     0D4B  1283               	bcf	3,5	;RP0=0, select bank0
  7588     0D4C  1303               	bcf	3,6	;RP1=0, select bank0
  7589     0D4D  062A               	xorwf	?___awmod,w
  7590     0D4E  042B               	iorwf	?___awmod+1,w
  7591     0D4F  1D03               	btfss	3,2
  7592     0D50  2D52               	goto	u5261
  7593     0D51  2D53               	goto	u5260
  7594     0D52                     u5261:
  7595     0D52  2D67               	goto	l3967
  7596     0D53                     u5260:
  7597     0D53                     l3961:
  7598     0D53  3002               	movlw	2
  7599     0D54  1683               	bsf	3,5	;RP0=1, select bank3
  7600     0D55  1703               	bsf	3,6	;RP1=1, select bank3
  7601     0D56  0620               	xorwf	main@realSaat^(0+384),w
  7602     0D57  0421               	iorwf	(main@realSaat+1)^(0+384),w
  7603     0D58  1903               	btfsc	3,2
  7604     0D59  2D5B               	goto	u5271
  7605     0D5A  2D5C               	goto	u5270
  7606     0D5B                     u5271:
  7607     0D5B  2D67               	goto	l3967
  7608     0D5C                     u5270:
  7609     0D5C                     l3963:
  7610     0D5C  0828               	movf	(_currentTime^(0+384)+4),w
  7611     0D5D  0429               	iorwf	((_currentTime+1)^(0+384)+4),w
  7612     0D5E  1D03               	btfss	3,2
  7613     0D5F  2D61               	goto	u5281
  7614     0D60  2D62               	goto	u5280
  7615     0D61                     u5281:
  7616     0D61  2D67               	goto	l3967
  7617     0D62                     u5280:
  7618     0D62                     l3965:
  7619                           
  7620                           ;main1.c: 253:      ) && currentTime.minutes == 0 ) {;main1.c: 254:     yagBakim();
  7621     0D62  120A  118A  27AA  120A  158A  	fcall	_yagBakim
  7622     0D67                     l3967:
  7623                           
  7624                           ;main1.c: 261:     ADCON0bits.CHS = 0b0010;
  7625     0D67  1283               	bcf	3,5	;RP0=0, select bank0
  7626     0D68  1303               	bcf	3,6	;RP1=0, select bank0
  7627     0D69  081F               	movf	31,w	;volatile
  7628     0D6A  39C7               	andlw	-57
  7629     0D6B  3810               	iorlw	16
  7630     0D6C  009F               	movwf	31	;volatile
  7631     0D6D                     l3969:
  7632                           
  7633                           ;main1.c: 262:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  7634     0D6D  300F               	movlw	15
  7635     0D6E  1283               	bcf	3,5	;RP0=0, select bank0
  7636     0D6F  1303               	bcf	3,6	;RP1=0, select bank0
  7637     0D70  00D4               	movwf	??_main
  7638     0D71                     u5657:
  7639     0D71  0BD4               	decfsz	??_main,f
  7640     0D72  2D71               	goto	u5657
  7641     0D73  2D74               	nop2
  7642     0D74                     l3971:
  7643                           
  7644                           ;main1.c: 263:     ADCON0bits.GO = 1;
  7645     0D74  1283               	bcf	3,5	;RP0=0, select bank0
  7646     0D75  1303               	bcf	3,6	;RP1=0, select bank0
  7647     0D76  151F               	bsf	31,2	;volatile
  7648     0D77                     l219:	
  7649                           ;main1.c: 264:     while (ADCON0bits.GO);
  7650                           
  7651     0D77  191F               	btfsc	31,2	;volatile
  7652     0D78  2D7A               	goto	u5291
  7653     0D79  2D7B               	goto	u5290
  7654     0D7A                     u5291:
  7655     0D7A  2D77               	goto	l219
  7656     0D7B                     u5290:
  7657     0D7B                     l3973:
  7658                           
  7659                           ;main1.c: 265:     adcValue3 = (ADRESH << 8) | ADRESL;
  7660     0D7B  1683               	bsf	3,5	;RP0=1, select bank1
  7661     0D7C  1303               	bcf	3,6	;RP1=0, select bank1
  7662     0D7D  081E               	movf	30,w	;volatile
  7663     0D7E  1283               	bcf	3,5	;RP0=0, select bank0
  7664     0D7F  1303               	bcf	3,6	;RP1=0, select bank0
  7665     0D80  00D4               	movwf	??_main
  7666     0D81  01D5               	clrf	??_main+1
  7667     0D82  081E               	movf	30,w	;volatile
  7668     0D83  00D6               	movwf	??_main+2
  7669     0D84  01D7               	clrf	??_main+3
  7670     0D85  0856               	movf	??_main+2,w
  7671     0D86  00D7               	movwf	??_main+3
  7672     0D87  01D6               	clrf	??_main+2
  7673     0D88  0854               	movf	??_main,w
  7674     0D89  0456               	iorwf	??_main+2,w
  7675     0D8A  00A0               	movwf	___xxtofl@val
  7676     0D8B  0855               	movf	??_main+1,w
  7677     0D8C  0457               	iorwf	??_main+3,w
  7678     0D8D  00A1               	movwf	___xxtofl@val+1
  7679     0D8E  01A2               	clrf	___xxtofl@val+2
  7680     0D8F  1BA1               	btfsc	___xxtofl@val+1,7
  7681     0D90  03A2               	decf	___xxtofl@val+2,f
  7682     0D91  0822               	movf	___xxtofl@val+2,w
  7683     0D92  00A3               	movwf	___xxtofl@val+3
  7684     0D93  3001               	movlw	1
  7685     0D94  160A  118A  2628  120A  158A  	fcall	___xxtofl
  7686     0D99  1283               	bcf	3,5	;RP0=0, select bank0
  7687     0D9A  1303               	bcf	3,6	;RP1=0, select bank0
  7688     0D9B  0823               	movf	?___xxtofl+3,w
  7689     0D9C  1683               	bsf	3,5	;RP0=1, select bank1
  7690     0D9D  1303               	bcf	3,6	;RP1=0, select bank1
  7691     0D9E  00D0               	movwf	(main@adcValue3+3)^(0+128)
  7692     0D9F  1283               	bcf	3,5	;RP0=0, select bank0
  7693     0DA0  1303               	bcf	3,6	;RP1=0, select bank0
  7694     0DA1  0822               	movf	?___xxtofl+2,w
  7695     0DA2  1683               	bsf	3,5	;RP0=1, select bank1
  7696     0DA3  1303               	bcf	3,6	;RP1=0, select bank1
  7697     0DA4  00CF               	movwf	(main@adcValue3+2)^(0+128)
  7698     0DA5  1283               	bcf	3,5	;RP0=0, select bank0
  7699     0DA6  1303               	bcf	3,6	;RP1=0, select bank0
  7700     0DA7  0821               	movf	?___xxtofl+1,w
  7701     0DA8  1683               	bsf	3,5	;RP0=1, select bank1
  7702     0DA9  1303               	bcf	3,6	;RP1=0, select bank1
  7703     0DAA  00CE               	movwf	(main@adcValue3+1)^(0+128)
  7704     0DAB  1283               	bcf	3,5	;RP0=0, select bank0
  7705     0DAC  1303               	bcf	3,6	;RP1=0, select bank0
  7706     0DAD  0820               	movf	?___xxtofl,w
  7707     0DAE  1683               	bsf	3,5	;RP0=1, select bank1
  7708     0DAF  1303               	bcf	3,6	;RP1=0, select bank1
  7709     0DB0  00CD               	movwf	main@adcValue3^(0+128)
  7710                           
  7711                           ;main1.c: 266:     float oranValue = adcValue3/1024.0;
  7712     0DB1  3044               	movlw	68
  7713     0DB2  1283               	bcf	3,5	;RP0=0, select bank0
  7714     0DB3  1303               	bcf	3,6	;RP1=0, select bank0
  7715     0DB4  00A3               	movwf	___fldiv@a+3
  7716     0DB5  3080               	movlw	128
  7717     0DB6  00A2               	movwf	___fldiv@a+2
  7718     0DB7  3000               	movlw	0
  7719     0DB8  00A1               	movwf	___fldiv@a+1
  7720     0DB9  3000               	movlw	0
  7721     0DBA  00A0               	movwf	___fldiv@a
  7722     0DBB  1683               	bsf	3,5	;RP0=1, select bank1
  7723     0DBC  1303               	bcf	3,6	;RP1=0, select bank1
  7724     0DBD  0850               	movf	(main@adcValue3+3)^(0+128),w
  7725     0DBE  1283               	bcf	3,5	;RP0=0, select bank0
  7726     0DBF  1303               	bcf	3,6	;RP1=0, select bank0
  7727     0DC0  00A7               	movwf	___fldiv@b+3
  7728     0DC1  1683               	bsf	3,5	;RP0=1, select bank1
  7729     0DC2  1303               	bcf	3,6	;RP1=0, select bank1
  7730     0DC3  084F               	movf	(main@adcValue3+2)^(0+128),w
  7731     0DC4  1283               	bcf	3,5	;RP0=0, select bank0
  7732     0DC5  1303               	bcf	3,6	;RP1=0, select bank0
  7733     0DC6  00A6               	movwf	___fldiv@b+2
  7734     0DC7  1683               	bsf	3,5	;RP0=1, select bank1
  7735     0DC8  1303               	bcf	3,6	;RP1=0, select bank1
  7736     0DC9  084E               	movf	(main@adcValue3+1)^(0+128),w
  7737     0DCA  1283               	bcf	3,5	;RP0=0, select bank0
  7738     0DCB  1303               	bcf	3,6	;RP1=0, select bank0
  7739     0DCC  00A5               	movwf	___fldiv@b+1
  7740     0DCD  1683               	bsf	3,5	;RP0=1, select bank1
  7741     0DCE  1303               	bcf	3,6	;RP1=0, select bank1
  7742     0DCF  084D               	movf	main@adcValue3^(0+128),w
  7743     0DD0  1283               	bcf	3,5	;RP0=0, select bank0
  7744     0DD1  1303               	bcf	3,6	;RP1=0, select bank0
  7745     0DD2  00A4               	movwf	___fldiv@b
  7746     0DD3  120A  158A  2027  120A  158A  	fcall	___fldiv
  7747     0DD8  1283               	bcf	3,5	;RP0=0, select bank0
  7748     0DD9  1303               	bcf	3,6	;RP1=0, select bank0
  7749     0DDA  0823               	movf	?___fldiv+3,w
  7750     0DDB  1683               	bsf	3,5	;RP0=1, select bank1
  7751     0DDC  1303               	bcf	3,6	;RP1=0, select bank1
  7752     0DDD  00D4               	movwf	(main@oranValue+3)^(0+128)
  7753     0DDE  1283               	bcf	3,5	;RP0=0, select bank0
  7754     0DDF  1303               	bcf	3,6	;RP1=0, select bank0
  7755     0DE0  0822               	movf	?___fldiv+2,w
  7756     0DE1  1683               	bsf	3,5	;RP0=1, select bank1
  7757     0DE2  1303               	bcf	3,6	;RP1=0, select bank1
  7758     0DE3  00D3               	movwf	(main@oranValue+2)^(0+128)
  7759     0DE4  1283               	bcf	3,5	;RP0=0, select bank0
  7760     0DE5  1303               	bcf	3,6	;RP1=0, select bank0
  7761     0DE6  0821               	movf	?___fldiv+1,w
  7762     0DE7  1683               	bsf	3,5	;RP0=1, select bank1
  7763     0DE8  1303               	bcf	3,6	;RP1=0, select bank1
  7764     0DE9  00D2               	movwf	(main@oranValue+1)^(0+128)
  7765     0DEA  1283               	bcf	3,5	;RP0=0, select bank0
  7766     0DEB  1303               	bcf	3,6	;RP1=0, select bank0
  7767     0DEC  0820               	movf	?___fldiv,w
  7768     0DED  1683               	bsf	3,5	;RP0=1, select bank1
  7769     0DEE  1303               	bcf	3,6	;RP1=0, select bank1
  7770     0DEF  00D1               	movwf	main@oranValue^(0+128)
  7771     0DF0                     l3975:
  7772                           
  7773                           ;main1.c: 269:     ADCON0bits.CHS = 0b0011;
  7774     0DF0  1283               	bcf	3,5	;RP0=0, select bank0
  7775     0DF1  1303               	bcf	3,6	;RP1=0, select bank0
  7776     0DF2  081F               	movf	31,w	;volatile
  7777     0DF3  39C7               	andlw	-57
  7778     0DF4  3818               	iorlw	24
  7779     0DF5  009F               	movwf	31	;volatile
  7780     0DF6                     l3977:
  7781                           
  7782                           ;main1.c: 270:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  7783     0DF6  300F               	movlw	15
  7784     0DF7  1283               	bcf	3,5	;RP0=0, select bank0
  7785     0DF8  1303               	bcf	3,6	;RP1=0, select bank0
  7786     0DF9  00D4               	movwf	??_main
  7787     0DFA                     u5667:
  7788     0DFA  0BD4               	decfsz	??_main,f
  7789     0DFB  2DFA               	goto	u5667
  7790     0DFC  2DFD               	nop2
  7791     0DFD                     l3979:
  7792                           
  7793                           ;main1.c: 271:     ADCON0bits.GO = 1;
  7794     0DFD  1283               	bcf	3,5	;RP0=0, select bank0
  7795     0DFE  1303               	bcf	3,6	;RP1=0, select bank0
  7796     0DFF  151F               	bsf	31,2	;volatile
  7797     0E00                     l222:	
  7798                           ;main1.c: 272:     while (ADCON0bits.GO);
  7799                           
  7800     0E00  191F               	btfsc	31,2	;volatile
  7801     0E01  2E03               	goto	u5301
  7802     0E02  2E04               	goto	u5300
  7803     0E03                     u5301:
  7804     0E03  2E00               	goto	l222
  7805     0E04                     u5300:
  7806     0E04                     l3981:
  7807                           
  7808                           ;main1.c: 273:     adcValue2 = (ADRESH << 8) | ADRESL;
  7809     0E04  081E               	movf	30,w	;volatile
  7810     0E05  1683               	bsf	3,5	;RP0=1, select bank1
  7811     0E06  1303               	bcf	3,6	;RP1=0, select bank1
  7812     0E07  00E3               	movwf	(main@adcValue2+1)^(0+128)
  7813     0E08  081E               	movf	30,w	;volatile
  7814     0E09  00E2               	movwf	main@adcValue2^(0+128)
  7815     0E0A                     l3983:
  7816                           
  7817                           ;main1.c: 275:     float integerPart = adcValue2*oranValue*3;
  7818     0E0A  0854               	movf	(main@oranValue+3)^(0+128),w
  7819     0E0B  1283               	bcf	3,5	;RP0=0, select bank0
  7820     0E0C  1303               	bcf	3,6	;RP1=0, select bank0
  7821     0E0D  00BD               	movwf	___flmul@b+3
  7822     0E0E  1683               	bsf	3,5	;RP0=1, select bank1
  7823     0E0F  1303               	bcf	3,6	;RP1=0, select bank1
  7824     0E10  0853               	movf	(main@oranValue+2)^(0+128),w
  7825     0E11  1283               	bcf	3,5	;RP0=0, select bank0
  7826     0E12  1303               	bcf	3,6	;RP1=0, select bank0
  7827     0E13  00BC               	movwf	___flmul@b+2
  7828     0E14  1683               	bsf	3,5	;RP0=1, select bank1
  7829     0E15  1303               	bcf	3,6	;RP1=0, select bank1
  7830     0E16  0852               	movf	(main@oranValue+1)^(0+128),w
  7831     0E17  1283               	bcf	3,5	;RP0=0, select bank0
  7832     0E18  1303               	bcf	3,6	;RP1=0, select bank0
  7833     0E19  00BB               	movwf	___flmul@b+1
  7834     0E1A  1683               	bsf	3,5	;RP0=1, select bank1
  7835     0E1B  1303               	bcf	3,6	;RP1=0, select bank1
  7836     0E1C  0851               	movf	main@oranValue^(0+128),w
  7837     0E1D  1283               	bcf	3,5	;RP0=0, select bank0
  7838     0E1E  1303               	bcf	3,6	;RP1=0, select bank0
  7839     0E1F  00BA               	movwf	___flmul@b
  7840     0E20  1683               	bsf	3,5	;RP0=1, select bank1
  7841     0E21  1303               	bcf	3,6	;RP1=0, select bank1
  7842     0E22  0862               	movf	main@adcValue2^(0+128),w
  7843     0E23  1283               	bcf	3,5	;RP0=0, select bank0
  7844     0E24  1303               	bcf	3,6	;RP1=0, select bank0
  7845     0E25  00A0               	movwf	___xxtofl@val
  7846     0E26  1683               	bsf	3,5	;RP0=1, select bank1
  7847     0E27  1303               	bcf	3,6	;RP1=0, select bank1
  7848     0E28  0863               	movf	(main@adcValue2+1)^(0+128),w
  7849     0E29  1283               	bcf	3,5	;RP0=0, select bank0
  7850     0E2A  1303               	bcf	3,6	;RP1=0, select bank0
  7851     0E2B  00A1               	movwf	___xxtofl@val+1
  7852     0E2C  3000               	movlw	0
  7853     0E2D  1BA1               	btfsc	___xxtofl@val+1,7
  7854     0E2E  30FF               	movlw	255
  7855     0E2F  00A2               	movwf	___xxtofl@val+2
  7856     0E30  00A3               	movwf	___xxtofl@val+3
  7857     0E31  3001               	movlw	1
  7858     0E32  160A  118A  2628  120A  158A  	fcall	___xxtofl
  7859     0E37  1283               	bcf	3,5	;RP0=0, select bank0
  7860     0E38  1303               	bcf	3,6	;RP1=0, select bank0
  7861     0E39  0823               	movf	?___xxtofl+3,w
  7862     0E3A  00C1               	movwf	___flmul@a+3
  7863     0E3B  0822               	movf	?___xxtofl+2,w
  7864     0E3C  00C0               	movwf	___flmul@a+2
  7865     0E3D  0821               	movf	?___xxtofl+1,w
  7866     0E3E  00BF               	movwf	___flmul@a+1
  7867     0E3F  0820               	movf	?___xxtofl,w
  7868     0E40  00BE               	movwf	___flmul@a
  7869     0E41  120A  118A  2465  120A  158A  	fcall	___flmul
  7870     0E46  1283               	bcf	3,5	;RP0=0, select bank0
  7871     0E47  1303               	bcf	3,6	;RP1=0, select bank0
  7872     0E48  083D               	movf	?___flmul+3,w
  7873     0E49  1683               	bsf	3,5	;RP0=1, select bank1
  7874     0E4A  1303               	bcf	3,6	;RP1=0, select bank1
  7875     0E4B  00DC               	movwf	(_main$1027+3)^(0+128)
  7876     0E4C  1283               	bcf	3,5	;RP0=0, select bank0
  7877     0E4D  1303               	bcf	3,6	;RP1=0, select bank0
  7878     0E4E  083C               	movf	?___flmul+2,w
  7879     0E4F  1683               	bsf	3,5	;RP0=1, select bank1
  7880     0E50  1303               	bcf	3,6	;RP1=0, select bank1
  7881     0E51  00DB               	movwf	(_main$1027+2)^(0+128)
  7882     0E52  1283               	bcf	3,5	;RP0=0, select bank0
  7883     0E53  1303               	bcf	3,6	;RP1=0, select bank0
  7884     0E54  083B               	movf	?___flmul+1,w
  7885     0E55  1683               	bsf	3,5	;RP0=1, select bank1
  7886     0E56  1303               	bcf	3,6	;RP1=0, select bank1
  7887     0E57  00DA               	movwf	(_main$1027+1)^(0+128)
  7888     0E58  1283               	bcf	3,5	;RP0=0, select bank0
  7889     0E59  1303               	bcf	3,6	;RP1=0, select bank0
  7890     0E5A  083A               	movf	?___flmul,w
  7891     0E5B  1683               	bsf	3,5	;RP0=1, select bank1
  7892     0E5C  1303               	bcf	3,6	;RP1=0, select bank1
  7893     0E5D  00D9               	movwf	_main$1027^(0+128)
  7894     0E5E                     l3985:
  7895                           
  7896                           ;main1.c: 275:     float integerPart = adcValue2*oranValue*3;
  7897     0E5E  3040               	movlw	64
  7898     0E5F  1283               	bcf	3,5	;RP0=0, select bank0
  7899     0E60  1303               	bcf	3,6	;RP1=0, select bank0
  7900     0E61  00BD               	movwf	___flmul@b+3
  7901     0E62  3040               	movlw	64
  7902     0E63  00BC               	movwf	___flmul@b+2
  7903     0E64  3000               	movlw	0
  7904     0E65  00BB               	movwf	___flmul@b+1
  7905     0E66  3000               	movlw	0
  7906     0E67  00BA               	movwf	___flmul@b
  7907     0E68  1683               	bsf	3,5	;RP0=1, select bank1
  7908     0E69  1303               	bcf	3,6	;RP1=0, select bank1
  7909     0E6A  085C               	movf	(_main$1027+3)^(0+128),w
  7910     0E6B  1283               	bcf	3,5	;RP0=0, select bank0
  7911     0E6C  1303               	bcf	3,6	;RP1=0, select bank0
  7912     0E6D  00C1               	movwf	___flmul@a+3
  7913     0E6E  1683               	bsf	3,5	;RP0=1, select bank1
  7914     0E6F  1303               	bcf	3,6	;RP1=0, select bank1
  7915     0E70  085B               	movf	(_main$1027+2)^(0+128),w
  7916     0E71  1283               	bcf	3,5	;RP0=0, select bank0
  7917     0E72  1303               	bcf	3,6	;RP1=0, select bank0
  7918     0E73  00C0               	movwf	___flmul@a+2
  7919     0E74  1683               	bsf	3,5	;RP0=1, select bank1
  7920     0E75  1303               	bcf	3,6	;RP1=0, select bank1
  7921     0E76  085A               	movf	(_main$1027+1)^(0+128),w
  7922     0E77  1283               	bcf	3,5	;RP0=0, select bank0
  7923     0E78  1303               	bcf	3,6	;RP1=0, select bank0
  7924     0E79  00BF               	movwf	___flmul@a+1
  7925     0E7A  1683               	bsf	3,5	;RP0=1, select bank1
  7926     0E7B  1303               	bcf	3,6	;RP1=0, select bank1
  7927     0E7C  0859               	movf	_main$1027^(0+128),w
  7928     0E7D  1283               	bcf	3,5	;RP0=0, select bank0
  7929     0E7E  1303               	bcf	3,6	;RP1=0, select bank0
  7930     0E7F  00BE               	movwf	___flmul@a
  7931     0E80  120A  118A  2465  120A  158A  	fcall	___flmul
  7932     0E85  1283               	bcf	3,5	;RP0=0, select bank0
  7933     0E86  1303               	bcf	3,6	;RP1=0, select bank0
  7934     0E87  083D               	movf	?___flmul+3,w
  7935     0E88  1683               	bsf	3,5	;RP0=1, select bank3
  7936     0E89  1703               	bsf	3,6	;RP1=1, select bank3
  7937     0E8A  009D               	movwf	(main@integerPart+3)^(0+384)
  7938     0E8B  1283               	bcf	3,5	;RP0=0, select bank0
  7939     0E8C  1303               	bcf	3,6	;RP1=0, select bank0
  7940     0E8D  083C               	movf	?___flmul+2,w
  7941     0E8E  1683               	bsf	3,5	;RP0=1, select bank3
  7942     0E8F  1703               	bsf	3,6	;RP1=1, select bank3
  7943     0E90  009C               	movwf	(main@integerPart+2)^(0+384)
  7944     0E91  1283               	bcf	3,5	;RP0=0, select bank0
  7945     0E92  1303               	bcf	3,6	;RP1=0, select bank0
  7946     0E93  083B               	movf	?___flmul+1,w
  7947     0E94  1683               	bsf	3,5	;RP0=1, select bank3
  7948     0E95  1703               	bsf	3,6	;RP1=1, select bank3
  7949     0E96  009B               	movwf	(main@integerPart+1)^(0+384)
  7950     0E97  1283               	bcf	3,5	;RP0=0, select bank0
  7951     0E98  1303               	bcf	3,6	;RP1=0, select bank0
  7952     0E99  083A               	movf	?___flmul,w
  7953     0E9A  1683               	bsf	3,5	;RP0=1, select bank3
  7954     0E9B  1703               	bsf	3,6	;RP1=1, select bank3
  7955     0E9C  009A               	movwf	main@integerPart^(0+384)
  7956     0E9D                     l3987:
  7957                           
  7958                           ;main1.c: 277:     int binler = (int)integerPart/1000;
  7959     0E9D  30E8               	movlw	232
  7960     0E9E  1283               	bcf	3,5	;RP0=0, select bank0
  7961     0E9F  1303               	bcf	3,6	;RP1=0, select bank0
  7962     0EA0  00AA               	movwf	___awdiv@divisor
  7963     0EA1  3003               	movlw	3
  7964     0EA2  00AB               	movwf	___awdiv@divisor+1
  7965     0EA3  1683               	bsf	3,5	;RP0=1, select bank3
  7966     0EA4  1703               	bsf	3,6	;RP1=1, select bank3
  7967     0EA5  081D               	movf	(main@integerPart+3)^(0+384),w
  7968     0EA6  1283               	bcf	3,5	;RP0=0, select bank0
  7969     0EA7  1303               	bcf	3,6	;RP1=0, select bank0
  7970     0EA8  00A3               	movwf	___fltol@f1+3
  7971     0EA9  1683               	bsf	3,5	;RP0=1, select bank3
  7972     0EAA  1703               	bsf	3,6	;RP1=1, select bank3
  7973     0EAB  081C               	movf	(main@integerPart+2)^(0+384),w
  7974     0EAC  1283               	bcf	3,5	;RP0=0, select bank0
  7975     0EAD  1303               	bcf	3,6	;RP1=0, select bank0
  7976     0EAE  00A2               	movwf	___fltol@f1+2
  7977     0EAF  1683               	bsf	3,5	;RP0=1, select bank3
  7978     0EB0  1703               	bsf	3,6	;RP1=1, select bank3
  7979     0EB1  081B               	movf	(main@integerPart+1)^(0+384),w
  7980     0EB2  1283               	bcf	3,5	;RP0=0, select bank0
  7981     0EB3  1303               	bcf	3,6	;RP1=0, select bank0
  7982     0EB4  00A1               	movwf	___fltol@f1+1
  7983     0EB5  1683               	bsf	3,5	;RP0=1, select bank3
  7984     0EB6  1703               	bsf	3,6	;RP1=1, select bank3
  7985     0EB7  081A               	movf	main@integerPart^(0+384),w
  7986     0EB8  1283               	bcf	3,5	;RP0=0, select bank0
  7987     0EB9  1303               	bcf	3,6	;RP1=0, select bank0
  7988     0EBA  00A0               	movwf	___fltol@f1
  7989     0EBB  160A  118A  25B0  120A  158A  	fcall	___fltol
  7990     0EC0  1283               	bcf	3,5	;RP0=0, select bank0
  7991     0EC1  1303               	bcf	3,6	;RP1=0, select bank0
  7992     0EC2  0821               	movf	?___fltol+1,w
  7993     0EC3  00AD               	movwf	___awdiv@dividend+1
  7994     0EC4  0820               	movf	?___fltol,w
  7995     0EC5  00AC               	movwf	___awdiv@dividend
  7996     0EC6  160A  118A  2547  120A  158A  	fcall	___awdiv
  7997     0ECB  1283               	bcf	3,5	;RP0=0, select bank0
  7998     0ECC  1303               	bcf	3,6	;RP1=0, select bank0
  7999     0ECD  082B               	movf	?___awdiv+1,w
  8000     0ECE  1683               	bsf	3,5	;RP0=1, select bank3
  8001     0ECF  1703               	bsf	3,6	;RP1=1, select bank3
  8002     0ED0  0099               	movwf	(main@binler+1)^(0+384)
  8003     0ED1  1283               	bcf	3,5	;RP0=0, select bank0
  8004     0ED2  1303               	bcf	3,6	;RP1=0, select bank0
  8005     0ED3  082A               	movf	?___awdiv,w
  8006     0ED4  1683               	bsf	3,5	;RP0=1, select bank3
  8007     0ED5  1703               	bsf	3,6	;RP1=1, select bank3
  8008     0ED6  0098               	movwf	main@binler^(0+384)
  8009     0ED7                     l3989:
  8010                           
  8011                           ;main1.c: 278:     int yuzler = ((int)integerPart-binler*1000)/100;
  8012     0ED7  3064               	movlw	100
  8013     0ED8  1283               	bcf	3,5	;RP0=0, select bank0
  8014     0ED9  1303               	bcf	3,6	;RP1=0, select bank0
  8015     0EDA  00AA               	movwf	___awdiv@divisor
  8016     0EDB  3000               	movlw	0
  8017     0EDC  00AB               	movwf	___awdiv@divisor+1
  8018     0EDD  1683               	bsf	3,5	;RP0=1, select bank3
  8019     0EDE  1703               	bsf	3,6	;RP1=1, select bank3
  8020     0EDF  081D               	movf	(main@integerPart+3)^(0+384),w
  8021     0EE0  1283               	bcf	3,5	;RP0=0, select bank0
  8022     0EE1  1303               	bcf	3,6	;RP1=0, select bank0
  8023     0EE2  00A3               	movwf	___fltol@f1+3
  8024     0EE3  1683               	bsf	3,5	;RP0=1, select bank3
  8025     0EE4  1703               	bsf	3,6	;RP1=1, select bank3
  8026     0EE5  081C               	movf	(main@integerPart+2)^(0+384),w
  8027     0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  8028     0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  8029     0EE8  00A2               	movwf	___fltol@f1+2
  8030     0EE9  1683               	bsf	3,5	;RP0=1, select bank3
  8031     0EEA  1703               	bsf	3,6	;RP1=1, select bank3
  8032     0EEB  081B               	movf	(main@integerPart+1)^(0+384),w
  8033     0EEC  1283               	bcf	3,5	;RP0=0, select bank0
  8034     0EED  1303               	bcf	3,6	;RP1=0, select bank0
  8035     0EEE  00A1               	movwf	___fltol@f1+1
  8036     0EEF  1683               	bsf	3,5	;RP0=1, select bank3
  8037     0EF0  1703               	bsf	3,6	;RP1=1, select bank3
  8038     0EF1  081A               	movf	main@integerPart^(0+384),w
  8039     0EF2  1283               	bcf	3,5	;RP0=0, select bank0
  8040     0EF3  1303               	bcf	3,6	;RP1=0, select bank0
  8041     0EF4  00A0               	movwf	___fltol@f1
  8042     0EF5  160A  118A  25B0  120A  158A  	fcall	___fltol
  8043     0EFA  1283               	bcf	3,5	;RP0=0, select bank0
  8044     0EFB  1303               	bcf	3,6	;RP1=0, select bank0
  8045     0EFC  0820               	movf	?___fltol,w
  8046     0EFD  00D4               	movwf	??_main
  8047     0EFE  0821               	movf	?___fltol+1,w
  8048     0EFF  00D5               	movwf	??_main+1
  8049     0F00  0822               	movf	?___fltol+2,w
  8050     0F01  00D6               	movwf	??_main+2
  8051     0F02  0823               	movf	?___fltol+3,w
  8052     0F03  00D7               	movwf	??_main+3
  8053     0F04  1683               	bsf	3,5	;RP0=1, select bank3
  8054     0F05  1703               	bsf	3,6	;RP1=1, select bank3
  8055     0F06  0819               	movf	(main@binler+1)^(0+384),w
  8056     0F07  1283               	bcf	3,5	;RP0=0, select bank0
  8057     0F08  1303               	bcf	3,6	;RP1=0, select bank0
  8058     0F09  00A5               	movwf	___wmul@multiplier+1
  8059     0F0A  1683               	bsf	3,5	;RP0=1, select bank3
  8060     0F0B  1703               	bsf	3,6	;RP1=1, select bank3
  8061     0F0C  0818               	movf	main@binler^(0+384),w
  8062     0F0D  1283               	bcf	3,5	;RP0=0, select bank0
  8063     0F0E  1303               	bcf	3,6	;RP1=0, select bank0
  8064     0F0F  00A4               	movwf	___wmul@multiplier
  8065     0F10  3018               	movlw	24
  8066     0F11  00A6               	movwf	___wmul@multiplicand
  8067     0F12  30FC               	movlw	252
  8068     0F13  00A7               	movwf	___wmul@multiplicand+1
  8069     0F14  120A  158A  2000  120A  158A  	fcall	___wmul
  8070     0F19  1283               	bcf	3,5	;RP0=0, select bank0
  8071     0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  8072     0F1B  0824               	movf	?___wmul,w
  8073     0F1C  0754               	addwf	??_main,w
  8074     0F1D  00AC               	movwf	___awdiv@dividend
  8075     0F1E  0825               	movf	?___wmul+1,w
  8076     0F1F  1803               	skipnc
  8077     0F20  0A25               	incf	?___wmul+1,w
  8078     0F21  0755               	addwf	??_main+1,w
  8079     0F22  00AD               	movwf	___awdiv@dividend+1
  8080     0F23  160A  118A  2547  120A  158A  	fcall	___awdiv
  8081     0F28  1283               	bcf	3,5	;RP0=0, select bank0
  8082     0F29  1303               	bcf	3,6	;RP1=0, select bank0
  8083     0F2A  082B               	movf	?___awdiv+1,w
  8084     0F2B  1683               	bsf	3,5	;RP0=1, select bank3
  8085     0F2C  1703               	bsf	3,6	;RP1=1, select bank3
  8086     0F2D  0097               	movwf	(main@yuzler+1)^(0+384)
  8087     0F2E  1283               	bcf	3,5	;RP0=0, select bank0
  8088     0F2F  1303               	bcf	3,6	;RP1=0, select bank0
  8089     0F30  082A               	movf	?___awdiv,w
  8090     0F31  1683               	bsf	3,5	;RP0=1, select bank3
  8091     0F32  1703               	bsf	3,6	;RP1=1, select bank3
  8092     0F33  0096               	movwf	main@yuzler^(0+384)
  8093     0F34                     l3991:
  8094                           
  8095                           ;main1.c: 279:     int onlar = ((int)integerPart-binler*1000-yuzler*100)/10;
  8096     0F34  300A               	movlw	10
  8097     0F35  1283               	bcf	3,5	;RP0=0, select bank0
  8098     0F36  1303               	bcf	3,6	;RP1=0, select bank0
  8099     0F37  00AA               	movwf	___awdiv@divisor
  8100     0F38  3000               	movlw	0
  8101     0F39  00AB               	movwf	___awdiv@divisor+1
  8102     0F3A  1683               	bsf	3,5	;RP0=1, select bank3
  8103     0F3B  1703               	bsf	3,6	;RP1=1, select bank3
  8104     0F3C  081D               	movf	(main@integerPart+3)^(0+384),w
  8105     0F3D  1283               	bcf	3,5	;RP0=0, select bank0
  8106     0F3E  1303               	bcf	3,6	;RP1=0, select bank0
  8107     0F3F  00A3               	movwf	___fltol@f1+3
  8108     0F40  1683               	bsf	3,5	;RP0=1, select bank3
  8109     0F41  1703               	bsf	3,6	;RP1=1, select bank3
  8110     0F42  081C               	movf	(main@integerPart+2)^(0+384),w
  8111     0F43  1283               	bcf	3,5	;RP0=0, select bank0
  8112     0F44  1303               	bcf	3,6	;RP1=0, select bank0
  8113     0F45  00A2               	movwf	___fltol@f1+2
  8114     0F46  1683               	bsf	3,5	;RP0=1, select bank3
  8115     0F47  1703               	bsf	3,6	;RP1=1, select bank3
  8116     0F48  081B               	movf	(main@integerPart+1)^(0+384),w
  8117     0F49  1283               	bcf	3,5	;RP0=0, select bank0
  8118     0F4A  1303               	bcf	3,6	;RP1=0, select bank0
  8119     0F4B  00A1               	movwf	___fltol@f1+1
  8120     0F4C  1683               	bsf	3,5	;RP0=1, select bank3
  8121     0F4D  1703               	bsf	3,6	;RP1=1, select bank3
  8122     0F4E  081A               	movf	main@integerPart^(0+384),w
  8123     0F4F  1283               	bcf	3,5	;RP0=0, select bank0
  8124     0F50  1303               	bcf	3,6	;RP1=0, select bank0
  8125     0F51  00A0               	movwf	___fltol@f1
  8126     0F52  160A  118A  25B0  120A  158A  	fcall	___fltol
  8127     0F57  1283               	bcf	3,5	;RP0=0, select bank0
  8128     0F58  1303               	bcf	3,6	;RP1=0, select bank0
  8129     0F59  0820               	movf	?___fltol,w
  8130     0F5A  00D4               	movwf	??_main
  8131     0F5B  0821               	movf	?___fltol+1,w
  8132     0F5C  00D5               	movwf	??_main+1
  8133     0F5D  0822               	movf	?___fltol+2,w
  8134     0F5E  00D6               	movwf	??_main+2
  8135     0F5F  0823               	movf	?___fltol+3,w
  8136     0F60  00D7               	movwf	??_main+3
  8137     0F61  1683               	bsf	3,5	;RP0=1, select bank3
  8138     0F62  1703               	bsf	3,6	;RP1=1, select bank3
  8139     0F63  0819               	movf	(main@binler+1)^(0+384),w
  8140     0F64  1283               	bcf	3,5	;RP0=0, select bank0
  8141     0F65  1303               	bcf	3,6	;RP1=0, select bank0
  8142     0F66  00A5               	movwf	___wmul@multiplier+1
  8143     0F67  1683               	bsf	3,5	;RP0=1, select bank3
  8144     0F68  1703               	bsf	3,6	;RP1=1, select bank3
  8145     0F69  0818               	movf	main@binler^(0+384),w
  8146     0F6A  1283               	bcf	3,5	;RP0=0, select bank0
  8147     0F6B  1303               	bcf	3,6	;RP1=0, select bank0
  8148     0F6C  00A4               	movwf	___wmul@multiplier
  8149     0F6D  3018               	movlw	24
  8150     0F6E  00A6               	movwf	___wmul@multiplicand
  8151     0F6F  30FC               	movlw	252
  8152     0F70  00A7               	movwf	___wmul@multiplicand+1
  8153     0F71  120A  158A  2000  120A  158A  	fcall	___wmul
  8154     0F76  1283               	bcf	3,5	;RP0=0, select bank0
  8155     0F77  1303               	bcf	3,6	;RP1=0, select bank0
  8156     0F78  0824               	movf	?___wmul,w
  8157     0F79  0754               	addwf	??_main,w
  8158     0F7A  00D8               	movwf	??_main+4
  8159     0F7B  0825               	movf	?___wmul+1,w
  8160     0F7C  1803               	skipnc
  8161     0F7D  0A25               	incf	?___wmul+1,w
  8162     0F7E  0755               	addwf	??_main+1,w
  8163     0F7F  00D9               	movwf	??_main+5
  8164     0F80  1683               	bsf	3,5	;RP0=1, select bank3
  8165     0F81  1703               	bsf	3,6	;RP1=1, select bank3
  8166     0F82  0817               	movf	(main@yuzler+1)^(0+384),w
  8167     0F83  1283               	bcf	3,5	;RP0=0, select bank0
  8168     0F84  1303               	bcf	3,6	;RP1=0, select bank0
  8169     0F85  00A5               	movwf	___wmul@multiplier+1
  8170     0F86  1683               	bsf	3,5	;RP0=1, select bank3
  8171     0F87  1703               	bsf	3,6	;RP1=1, select bank3
  8172     0F88  0816               	movf	main@yuzler^(0+384),w
  8173     0F89  1283               	bcf	3,5	;RP0=0, select bank0
  8174     0F8A  1303               	bcf	3,6	;RP1=0, select bank0
  8175     0F8B  00A4               	movwf	___wmul@multiplier
  8176     0F8C  309C               	movlw	156
  8177     0F8D  00A6               	movwf	___wmul@multiplicand
  8178     0F8E  30FF               	movlw	255
  8179     0F8F  00A7               	movwf	___wmul@multiplicand+1
  8180     0F90  120A  158A  2000  120A  158A  	fcall	___wmul
  8181     0F95  1283               	bcf	3,5	;RP0=0, select bank0
  8182     0F96  1303               	bcf	3,6	;RP1=0, select bank0
  8183     0F97  0824               	movf	?___wmul,w
  8184     0F98  0758               	addwf	??_main+4,w
  8185     0F99  00AC               	movwf	___awdiv@dividend
  8186     0F9A  0825               	movf	?___wmul+1,w
  8187     0F9B  1803               	skipnc
  8188     0F9C  0A25               	incf	?___wmul+1,w
  8189     0F9D  0759               	addwf	??_main+5,w
  8190     0F9E  00AD               	movwf	___awdiv@dividend+1
  8191     0F9F  160A  118A  2547  120A  158A  	fcall	___awdiv
  8192     0FA4  1283               	bcf	3,5	;RP0=0, select bank0
  8193     0FA5  1303               	bcf	3,6	;RP1=0, select bank0
  8194     0FA6  082B               	movf	?___awdiv+1,w
  8195     0FA7  1683               	bsf	3,5	;RP0=1, select bank1
  8196     0FA8  1303               	bcf	3,6	;RP1=0, select bank1
  8197     0FA9  00E7               	movwf	(main@onlar+1)^(0+128)
  8198     0FAA  1283               	bcf	3,5	;RP0=0, select bank0
  8199     0FAB  1303               	bcf	3,6	;RP1=0, select bank0
  8200     0FAC  082A               	movf	?___awdiv,w
  8201     0FAD  1683               	bsf	3,5	;RP0=1, select bank1
  8202     0FAE  1303               	bcf	3,6	;RP1=0, select bank1
  8203     0FAF  00E6               	movwf	main@onlar^(0+128)
  8204     0FB0                     l3993:
  8205                           
  8206                           ;main1.c: 280:     int birler = (int)integerPart%10;
  8207     0FB0  300A               	movlw	10
  8208     0FB1  1283               	bcf	3,5	;RP0=0, select bank0
  8209     0FB2  1303               	bcf	3,6	;RP1=0, select bank0
  8210     0FB3  00AA               	movwf	___awmod@divisor
  8211     0FB4  3000               	movlw	0
  8212     0FB5  00AB               	movwf	___awmod@divisor+1
  8213     0FB6  1683               	bsf	3,5	;RP0=1, select bank3
  8214     0FB7  1703               	bsf	3,6	;RP1=1, select bank3
  8215     0FB8  081D               	movf	(main@integerPart+3)^(0+384),w
  8216     0FB9  1283               	bcf	3,5	;RP0=0, select bank0
  8217     0FBA  1303               	bcf	3,6	;RP1=0, select bank0
  8218     0FBB  00A3               	movwf	___fltol@f1+3
  8219     0FBC  1683               	bsf	3,5	;RP0=1, select bank3
  8220     0FBD  1703               	bsf	3,6	;RP1=1, select bank3
  8221     0FBE  081C               	movf	(main@integerPart+2)^(0+384),w
  8222     0FBF  1283               	bcf	3,5	;RP0=0, select bank0
  8223     0FC0  1303               	bcf	3,6	;RP1=0, select bank0
  8224     0FC1  00A2               	movwf	___fltol@f1+2
  8225     0FC2  1683               	bsf	3,5	;RP0=1, select bank3
  8226     0FC3  1703               	bsf	3,6	;RP1=1, select bank3
  8227     0FC4  081B               	movf	(main@integerPart+1)^(0+384),w
  8228     0FC5  1283               	bcf	3,5	;RP0=0, select bank0
  8229     0FC6  1303               	bcf	3,6	;RP1=0, select bank0
  8230     0FC7  00A1               	movwf	___fltol@f1+1
  8231     0FC8  1683               	bsf	3,5	;RP0=1, select bank3
  8232     0FC9  1703               	bsf	3,6	;RP1=1, select bank3
  8233     0FCA  081A               	movf	main@integerPart^(0+384),w
  8234     0FCB  1283               	bcf	3,5	;RP0=0, select bank0
  8235     0FCC  1303               	bcf	3,6	;RP1=0, select bank0
  8236     0FCD  00A0               	movwf	___fltol@f1
  8237     0FCE  160A  118A  25B0  120A  158A  	fcall	___fltol
  8238     0FD3  1283               	bcf	3,5	;RP0=0, select bank0
  8239     0FD4  1303               	bcf	3,6	;RP1=0, select bank0
  8240     0FD5  0821               	movf	?___fltol+1,w
  8241     0FD6  00AD               	movwf	___awmod@dividend+1
  8242     0FD7  0820               	movf	?___fltol,w
  8243     0FD8  00AC               	movwf	___awmod@dividend
  8244     0FD9  160A  118A  23BF  120A  158A  	fcall	___awmod
  8245     0FDE  1283               	bcf	3,5	;RP0=0, select bank0
  8246     0FDF  1303               	bcf	3,6	;RP1=0, select bank0
  8247     0FE0  082B               	movf	?___awmod+1,w
  8248     0FE1  1683               	bsf	3,5	;RP0=1, select bank1
  8249     0FE2  1303               	bcf	3,6	;RP1=0, select bank1
  8250     0FE3  00E9               	movwf	(main@birler+1)^(0+128)
  8251     0FE4  1283               	bcf	3,5	;RP0=0, select bank0
  8252     0FE5  1303               	bcf	3,6	;RP1=0, select bank0
  8253     0FE6  082A               	movf	?___awmod,w
  8254     0FE7  1683               	bsf	3,5	;RP0=1, select bank1
  8255     0FE8  1303               	bcf	3,6	;RP1=0, select bank1
  8256     0FE9  00E8               	movwf	main@birler^(0+128)
  8257     0FEA                     l3995:
  8258                           
  8259                           ;main1.c: 286:         ADCON0bits.CHS = 0b0001;
  8260     0FEA  1283               	bcf	3,5	;RP0=0, select bank0
  8261     0FEB  1303               	bcf	3,6	;RP1=0, select bank0
  8262     0FEC  081F               	movf	31,w	;volatile
  8263     0FED  39C7               	andlw	-57
  8264     0FEE  3808               	iorlw	8
  8265     0FEF  009F               	movwf	31	;volatile
  8266     0FF0                     l3997:
  8267                           
  8268                           ;main1.c: 287:         _delay((unsigned long)((50)*(4000000/4000000.0)));
  8269     0FF0  300F               	movlw	15
  8270     0FF1  1283               	bcf	3,5	;RP0=0, select bank0
  8271     0FF2  1303               	bcf	3,6	;RP1=0, select bank0
  8272     0FF3  00D4               	movwf	??_main
  8273     0FF4                     u5677:
  8274     0FF4  0BD4               	decfsz	??_main,f
  8275     0FF5  2FF4               	goto	u5677
  8276     0FF6  2FF7               	nop2
  8277     0FF7                     l3999:
  8278                           
  8279                           ;main1.c: 288:         ADCON0bits.GO = 1;
  8280     0FF7  1283               	bcf	3,5	;RP0=0, select bank0
  8281     0FF8  1303               	bcf	3,6	;RP1=0, select bank0
  8282     0FF9  151F               	bsf	31,2	;volatile
  8283     0FFA                     l225:	
  8284                           ;main1.c: 289:         while (ADCON0bits.GO);
  8285                           
  8286     0FFA  191F               	btfsc	31,2	;volatile
  8287     0FFB  2FFF               	goto	u5311
  8288     0FFC  120A  118A  2821   	goto	u5310
  8289     0FFF                     u5311:
  8290     0FFF  2FFA               	goto	l225
  8291                           
  8292                           	psect	maintext_split_2
  8293     0021                     u5310:
  8294     0021                     l4001:
  8295                           
  8296                           ;main1.c: 290:         adcValue1 = (ADRESH << 8) | ADRESL;
  8297     0021  1683               	bsf	3,5	;RP0=1, select bank1
  8298     0022  1303               	bcf	3,6	;RP1=0, select bank1
  8299     0023  081E               	movf	30,w	;volatile
  8300     0024  1283               	bcf	3,5	;RP0=0, select bank0
  8301     0025  1303               	bcf	3,6	;RP1=0, select bank0
  8302     0026  00D4               	movwf	??_main
  8303     0027  01D5               	clrf	??_main+1
  8304     0028  081E               	movf	30,w	;volatile
  8305     0029  00D6               	movwf	??_main+2
  8306     002A  01D7               	clrf	??_main+3
  8307     002B  0856               	movf	??_main+2,w
  8308     002C  00D7               	movwf	??_main+3
  8309     002D  01D6               	clrf	??_main+2
  8310     002E  0854               	movf	??_main,w
  8311     002F  0456               	iorwf	??_main+2,w
  8312     0030  00A0               	movwf	___xxtofl@val
  8313     0031  0855               	movf	??_main+1,w
  8314     0032  0457               	iorwf	??_main+3,w
  8315     0033  00A1               	movwf	___xxtofl@val+1
  8316     0034  01A2               	clrf	___xxtofl@val+2
  8317     0035  1BA1               	btfsc	___xxtofl@val+1,7
  8318     0036  03A2               	decf	___xxtofl@val+2,f
  8319     0037  0822               	movf	___xxtofl@val+2,w
  8320     0038  00A3               	movwf	___xxtofl@val+3
  8321     0039  3001               	movlw	1
  8322     003A  160A  118A  2628  120A  118A  	fcall	___xxtofl
  8323     003F  1283               	bcf	3,5	;RP0=0, select bank0
  8324     0040  1303               	bcf	3,6	;RP1=0, select bank0
  8325     0041  0823               	movf	?___xxtofl+3,w
  8326     0042  1683               	bsf	3,5	;RP0=1, select bank3
  8327     0043  1703               	bsf	3,6	;RP1=1, select bank3
  8328     0044  0095               	movwf	(main@adcValue1+3)^(0+384)
  8329     0045  1283               	bcf	3,5	;RP0=0, select bank0
  8330     0046  1303               	bcf	3,6	;RP1=0, select bank0
  8331     0047  0822               	movf	?___xxtofl+2,w
  8332     0048  1683               	bsf	3,5	;RP0=1, select bank3
  8333     0049  1703               	bsf	3,6	;RP1=1, select bank3
  8334     004A  0094               	movwf	(main@adcValue1+2)^(0+384)
  8335     004B  1283               	bcf	3,5	;RP0=0, select bank0
  8336     004C  1303               	bcf	3,6	;RP1=0, select bank0
  8337     004D  0821               	movf	?___xxtofl+1,w
  8338     004E  1683               	bsf	3,5	;RP0=1, select bank3
  8339     004F  1703               	bsf	3,6	;RP1=1, select bank3
  8340     0050  0093               	movwf	(main@adcValue1+1)^(0+384)
  8341     0051  1283               	bcf	3,5	;RP0=0, select bank0
  8342     0052  1303               	bcf	3,6	;RP1=0, select bank0
  8343     0053  0820               	movf	?___xxtofl,w
  8344     0054  1683               	bsf	3,5	;RP0=1, select bank3
  8345     0055  1703               	bsf	3,6	;RP1=1, select bank3
  8346     0056  0092               	movwf	main@adcValue1^(0+384)
  8347     0057                     l4003:
  8348                           
  8349                           ;main1.c: 291:         if (RE2==0 && RC0== 0 ){
  8350     0057  1283               	bcf	3,5	;RP0=0, select bank0
  8351     0058  1303               	bcf	3,6	;RP1=0, select bank0
  8352     0059  1909               	btfsc	9,2	;volatile
  8353     005A  285C               	goto	u5321
  8354     005B  285D               	goto	u5320
  8355     005C                     u5321:
  8356     005C  288B               	goto	l228
  8357     005D                     u5320:
  8358     005D                     l4005:
  8359     005D  1807               	btfsc	7,0	;volatile
  8360     005E  2860               	goto	u5331
  8361     005F  2861               	goto	u5330
  8362     0060                     u5331:
  8363     0060  288B               	goto	l228
  8364     0061                     u5330:
  8365     0061                     l4007:
  8366                           
  8367                           ;main1.c: 292:         displayValue = (int)adcValue1 >> 1;
  8368     0061  1683               	bsf	3,5	;RP0=1, select bank3
  8369     0062  1703               	bsf	3,6	;RP1=1, select bank3
  8370     0063  0815               	movf	(main@adcValue1+3)^(0+384),w
  8371     0064  1283               	bcf	3,5	;RP0=0, select bank0
  8372     0065  1303               	bcf	3,6	;RP1=0, select bank0
  8373     0066  00A3               	movwf	___fltol@f1+3
  8374     0067  1683               	bsf	3,5	;RP0=1, select bank3
  8375     0068  1703               	bsf	3,6	;RP1=1, select bank3
  8376     0069  0814               	movf	(main@adcValue1+2)^(0+384),w
  8377     006A  1283               	bcf	3,5	;RP0=0, select bank0
  8378     006B  1303               	bcf	3,6	;RP1=0, select bank0
  8379     006C  00A2               	movwf	___fltol@f1+2
  8380     006D  1683               	bsf	3,5	;RP0=1, select bank3
  8381     006E  1703               	bsf	3,6	;RP1=1, select bank3
  8382     006F  0813               	movf	(main@adcValue1+1)^(0+384),w
  8383     0070  1283               	bcf	3,5	;RP0=0, select bank0
  8384     0071  1303               	bcf	3,6	;RP1=0, select bank0
  8385     0072  00A1               	movwf	___fltol@f1+1
  8386     0073  1683               	bsf	3,5	;RP0=1, select bank3
  8387     0074  1703               	bsf	3,6	;RP1=1, select bank3
  8388     0075  0812               	movf	main@adcValue1^(0+384),w
  8389     0076  1283               	bcf	3,5	;RP0=0, select bank0
  8390     0077  1303               	bcf	3,6	;RP1=0, select bank0
  8391     0078  00A0               	movwf	___fltol@f1
  8392     0079  160A  118A  25B0  120A  118A  	fcall	___fltol
  8393     007E  1283               	bcf	3,5	;RP0=0, select bank0
  8394     007F  1303               	bcf	3,6	;RP1=0, select bank0
  8395     0080  0D21               	rlf	?___fltol+1,w
  8396     0081  0C21               	rrf	?___fltol+1,w
  8397     0082  1683               	bsf	3,5	;RP0=1, select bank3
  8398     0083  1703               	bsf	3,6	;RP1=1, select bank3
  8399     0084  00A3               	movwf	(main@displayValue+1)^(0+384)
  8400     0085  1283               	bcf	3,5	;RP0=0, select bank0
  8401     0086  1303               	bcf	3,6	;RP1=0, select bank0
  8402     0087  0C20               	rrf	?___fltol,w
  8403     0088  1683               	bsf	3,5	;RP0=1, select bank3
  8404     0089  1703               	bsf	3,6	;RP1=1, select bank3
  8405     008A  00A2               	movwf	main@displayValue^(0+384)
  8406     008B                     l228:	
  8407                           ;main1.c: 293:         }
  8408                           
  8409                           
  8410                           ;main1.c: 294:         float gostermeliklcd = adcValue1 / 1024 * 1000;
  8411     008B  3044               	movlw	68
  8412     008C  1283               	bcf	3,5	;RP0=0, select bank0
  8413     008D  1303               	bcf	3,6	;RP1=0, select bank0
  8414     008E  00BD               	movwf	___flmul@b+3
  8415     008F  307A               	movlw	122
  8416     0090  00BC               	movwf	___flmul@b+2
  8417     0091  3000               	movlw	0
  8418     0092  00BB               	movwf	___flmul@b+1
  8419     0093  3000               	movlw	0
  8420     0094  00BA               	movwf	___flmul@b
  8421     0095  3044               	movlw	68
  8422     0096  00A3               	movwf	___fldiv@a+3
  8423     0097  3080               	movlw	128
  8424     0098  00A2               	movwf	___fldiv@a+2
  8425     0099  3000               	movlw	0
  8426     009A  00A1               	movwf	___fldiv@a+1
  8427     009B  3000               	movlw	0
  8428     009C  00A0               	movwf	___fldiv@a
  8429     009D  1683               	bsf	3,5	;RP0=1, select bank3
  8430     009E  1703               	bsf	3,6	;RP1=1, select bank3
  8431     009F  0815               	movf	(main@adcValue1+3)^(0+384),w
  8432     00A0  1283               	bcf	3,5	;RP0=0, select bank0
  8433     00A1  1303               	bcf	3,6	;RP1=0, select bank0
  8434     00A2  00A7               	movwf	___fldiv@b+3
  8435     00A3  1683               	bsf	3,5	;RP0=1, select bank3
  8436     00A4  1703               	bsf	3,6	;RP1=1, select bank3
  8437     00A5  0814               	movf	(main@adcValue1+2)^(0+384),w
  8438     00A6  1283               	bcf	3,5	;RP0=0, select bank0
  8439     00A7  1303               	bcf	3,6	;RP1=0, select bank0
  8440     00A8  00A6               	movwf	___fldiv@b+2
  8441     00A9  1683               	bsf	3,5	;RP0=1, select bank3
  8442     00AA  1703               	bsf	3,6	;RP1=1, select bank3
  8443     00AB  0813               	movf	(main@adcValue1+1)^(0+384),w
  8444     00AC  1283               	bcf	3,5	;RP0=0, select bank0
  8445     00AD  1303               	bcf	3,6	;RP1=0, select bank0
  8446     00AE  00A5               	movwf	___fldiv@b+1
  8447     00AF  1683               	bsf	3,5	;RP0=1, select bank3
  8448     00B0  1703               	bsf	3,6	;RP1=1, select bank3
  8449     00B1  0812               	movf	main@adcValue1^(0+384),w
  8450     00B2  1283               	bcf	3,5	;RP0=0, select bank0
  8451     00B3  1303               	bcf	3,6	;RP1=0, select bank0
  8452     00B4  00A4               	movwf	___fldiv@b
  8453     00B5  120A  158A  2027  120A  118A  	fcall	___fldiv
  8454     00BA  1283               	bcf	3,5	;RP0=0, select bank0
  8455     00BB  1303               	bcf	3,6	;RP1=0, select bank0
  8456     00BC  0823               	movf	?___fldiv+3,w
  8457     00BD  00C1               	movwf	___flmul@a+3
  8458     00BE  0822               	movf	?___fldiv+2,w
  8459     00BF  00C0               	movwf	___flmul@a+2
  8460     00C0  0821               	movf	?___fldiv+1,w
  8461     00C1  00BF               	movwf	___flmul@a+1
  8462     00C2  0820               	movf	?___fldiv,w
  8463     00C3  00BE               	movwf	___flmul@a
  8464     00C4  120A  118A  2465  120A  118A  	fcall	___flmul
  8465     00C9  1283               	bcf	3,5	;RP0=0, select bank0
  8466     00CA  1303               	bcf	3,6	;RP1=0, select bank0
  8467     00CB  083D               	movf	?___flmul+3,w
  8468     00CC  1683               	bsf	3,5	;RP0=1, select bank1
  8469     00CD  1303               	bcf	3,6	;RP1=0, select bank1
  8470     00CE  00D8               	movwf	(main@gostermeliklcd+3)^(0+128)
  8471     00CF  1283               	bcf	3,5	;RP0=0, select bank0
  8472     00D0  1303               	bcf	3,6	;RP1=0, select bank0
  8473     00D1  083C               	movf	?___flmul+2,w
  8474     00D2  1683               	bsf	3,5	;RP0=1, select bank1
  8475     00D3  1303               	bcf	3,6	;RP1=0, select bank1
  8476     00D4  00D7               	movwf	(main@gostermeliklcd+2)^(0+128)
  8477     00D5  1283               	bcf	3,5	;RP0=0, select bank0
  8478     00D6  1303               	bcf	3,6	;RP1=0, select bank0
  8479     00D7  083B               	movf	?___flmul+1,w
  8480     00D8  1683               	bsf	3,5	;RP0=1, select bank1
  8481     00D9  1303               	bcf	3,6	;RP1=0, select bank1
  8482     00DA  00D6               	movwf	(main@gostermeliklcd+1)^(0+128)
  8483     00DB  1283               	bcf	3,5	;RP0=0, select bank0
  8484     00DC  1303               	bcf	3,6	;RP1=0, select bank0
  8485     00DD  083A               	movf	?___flmul,w
  8486     00DE  1683               	bsf	3,5	;RP0=1, select bank1
  8487     00DF  1303               	bcf	3,6	;RP1=0, select bank1
  8488     00E0  00D5               	movwf	main@gostermeliklcd^(0+128)
  8489     00E1                     l4009:
  8490                           
  8491                           ;main1.c: 299:         Lcd_Set_Cursor(2, 1);
  8492     00E1  1283               	bcf	3,5	;RP0=0, select bank0
  8493     00E2  1303               	bcf	3,6	;RP1=0, select bank0
  8494     00E3  01A4               	clrf	Lcd_Set_Cursor@b
  8495     00E4  0AA4               	incf	Lcd_Set_Cursor@b,f
  8496     00E5  3002               	movlw	2
  8497     00E6  160A  118A  2373  120A  118A  	fcall	_Lcd_Set_Cursor
  8498     00EB                     l4011:
  8499                           
  8500                           ;main1.c: 300:         Lcd_Write_String("FeedRate:");
  8501     00EB  301F               	movlw	low (STR_10| (0+32768))
  8502     00EC  1283               	bcf	3,5	;RP0=0, select bank0
  8503     00ED  1303               	bcf	3,6	;RP1=0, select bank0
  8504     00EE  00A5               	movwf	Lcd_Write_String@a
  8505     00EF  3091               	movlw	high (STR_10| (0+32768))
  8506     00F0  00A6               	movwf	Lcd_Write_String@a+1
  8507     00F1  160A  118A  232D  120A  118A  	fcall	_Lcd_Write_String
  8508     00F6                     l4013:
  8509                           
  8510                           ;main1.c: 301:         char adcString1[4];;main1.c: 302:         sprintf(adcString1, "%0
      +                          03u", (int)gostermeliklcd);
  8511     00F6  305F               	movlw	low (STR_11| (0+32768))
  8512     00F7  1283               	bcf	3,5	;RP0=0, select bank0
  8513     00F8  1303               	bcf	3,6	;RP1=0, select bank0
  8514     00F9  00AC               	movwf	sprintf@f
  8515     00FA  3091               	movlw	high (STR_11| (0+32768))
  8516     00FB  00AD               	movwf	sprintf@f+1
  8517     00FC  1683               	bsf	3,5	;RP0=1, select bank1
  8518     00FD  1303               	bcf	3,6	;RP1=0, select bank1
  8519     00FE  0858               	movf	(main@gostermeliklcd+3)^(0+128),w
  8520     00FF  1283               	bcf	3,5	;RP0=0, select bank0
  8521     0100  1303               	bcf	3,6	;RP1=0, select bank0
  8522     0101  00A3               	movwf	___fltol@f1+3
  8523     0102  1683               	bsf	3,5	;RP0=1, select bank1
  8524     0103  1303               	bcf	3,6	;RP1=0, select bank1
  8525     0104  0857               	movf	(main@gostermeliklcd+2)^(0+128),w
  8526     0105  1283               	bcf	3,5	;RP0=0, select bank0
  8527     0106  1303               	bcf	3,6	;RP1=0, select bank0
  8528     0107  00A2               	movwf	___fltol@f1+2
  8529     0108  1683               	bsf	3,5	;RP0=1, select bank1
  8530     0109  1303               	bcf	3,6	;RP1=0, select bank1
  8531     010A  0856               	movf	(main@gostermeliklcd+1)^(0+128),w
  8532     010B  1283               	bcf	3,5	;RP0=0, select bank0
  8533     010C  1303               	bcf	3,6	;RP1=0, select bank0
  8534     010D  00A1               	movwf	___fltol@f1+1
  8535     010E  1683               	bsf	3,5	;RP0=1, select bank1
  8536     010F  1303               	bcf	3,6	;RP1=0, select bank1
  8537     0110  0855               	movf	main@gostermeliklcd^(0+128),w
  8538     0111  1283               	bcf	3,5	;RP0=0, select bank0
  8539     0112  1303               	bcf	3,6	;RP1=0, select bank0
  8540     0113  00A0               	movwf	___fltol@f1
  8541     0114  160A  118A  25B0  120A  118A  	fcall	___fltol
  8542     0119  1283               	bcf	3,5	;RP0=0, select bank0
  8543     011A  1303               	bcf	3,6	;RP1=0, select bank0
  8544     011B  0821               	movf	?___fltol+1,w
  8545     011C  00AF               	movwf	?_sprintf+3
  8546     011D  0820               	movf	?___fltol,w
  8547     011E  00AE               	movwf	?_sprintf+2
  8548     011F  30EC               	movlw	(low (main@adcString1| 0))& (0+255)
  8549     0120  120A  158A  21F6  120A  118A  	fcall	_sprintf
  8550     0125                     l4015:
  8551                           
  8552                           ;main1.c: 303:         Lcd_Set_Cursor(2, 10);
  8553     0125  300A               	movlw	10
  8554     0126  1283               	bcf	3,5	;RP0=0, select bank0
  8555     0127  1303               	bcf	3,6	;RP1=0, select bank0
  8556     0128  00A4               	movwf	Lcd_Set_Cursor@b
  8557     0129  3002               	movlw	2
  8558     012A  160A  118A  2373  120A  118A  	fcall	_Lcd_Set_Cursor
  8559     012F                     l4017:
  8560                           
  8561                           ;main1.c: 304:         Lcd_Write_String(adcString1);
  8562     012F  30EC               	movlw	(low (main@adcString1| 0))& (0+255)
  8563     0130  1283               	bcf	3,5	;RP0=0, select bank0
  8564     0131  1303               	bcf	3,6	;RP1=0, select bank0
  8565     0132  00A5               	movwf	Lcd_Write_String@a
  8566     0133  3000               	movlw	0
  8567     0134  00A6               	movwf	Lcd_Write_String@a+1
  8568     0135  160A  118A  232D  120A  118A  	fcall	_Lcd_Write_String
  8569     013A                     l4019:
  8570                           
  8571                           ;main1.c: 307:         Lcd_Set_Cursor(1, 1);
  8572     013A  1283               	bcf	3,5	;RP0=0, select bank0
  8573     013B  1303               	bcf	3,6	;RP1=0, select bank0
  8574     013C  01A4               	clrf	Lcd_Set_Cursor@b
  8575     013D  0AA4               	incf	Lcd_Set_Cursor@b,f
  8576     013E  3001               	movlw	1
  8577     013F  160A  118A  2373  120A  118A  	fcall	_Lcd_Set_Cursor
  8578     0144                     l4021:
  8579                           
  8580                           ;main1.c: 308:         Lcd_Write_String("RPM:");
  8581     0144  306A               	movlw	low (STR_12| (0+32768))
  8582     0145  1283               	bcf	3,5	;RP0=0, select bank0
  8583     0146  1303               	bcf	3,6	;RP1=0, select bank0
  8584     0147  00A5               	movwf	Lcd_Write_String@a
  8585     0148  3091               	movlw	high (STR_12| (0+32768))
  8586     0149  00A6               	movwf	Lcd_Write_String@a+1
  8587     014A  160A  118A  232D  120A  118A  	fcall	_Lcd_Write_String
  8588     014F                     l4023:
  8589                           
  8590                           ;main1.c: 309:         char rpmString[5];;main1.c: 310: sprintf(rpmString, "%u%u%u.%u", 
      +                          binler,yuzler,onlar,birler);
  8591     014F  303D               	movlw	low (STR_13| (0+32768))
  8592     0150  1283               	bcf	3,5	;RP0=0, select bank0
  8593     0151  1303               	bcf	3,6	;RP1=0, select bank0
  8594     0152  00AC               	movwf	sprintf@f
  8595     0153  3091               	movlw	high (STR_13| (0+32768))
  8596     0154  00AD               	movwf	sprintf@f+1
  8597     0155  1683               	bsf	3,5	;RP0=1, select bank3
  8598     0156  1703               	bsf	3,6	;RP1=1, select bank3
  8599     0157  0819               	movf	(main@binler+1)^(0+384),w
  8600     0158  1283               	bcf	3,5	;RP0=0, select bank0
  8601     0159  1303               	bcf	3,6	;RP1=0, select bank0
  8602     015A  00AF               	movwf	?_sprintf+3
  8603     015B  1683               	bsf	3,5	;RP0=1, select bank3
  8604     015C  1703               	bsf	3,6	;RP1=1, select bank3
  8605     015D  0818               	movf	main@binler^(0+384),w
  8606     015E  1283               	bcf	3,5	;RP0=0, select bank0
  8607     015F  1303               	bcf	3,6	;RP1=0, select bank0
  8608     0160  00AE               	movwf	?_sprintf+2
  8609     0161  1683               	bsf	3,5	;RP0=1, select bank3
  8610     0162  1703               	bsf	3,6	;RP1=1, select bank3
  8611     0163  0817               	movf	(main@yuzler+1)^(0+384),w
  8612     0164  1283               	bcf	3,5	;RP0=0, select bank0
  8613     0165  1303               	bcf	3,6	;RP1=0, select bank0
  8614     0166  00B1               	movwf	?_sprintf+5
  8615     0167  1683               	bsf	3,5	;RP0=1, select bank3
  8616     0168  1703               	bsf	3,6	;RP1=1, select bank3
  8617     0169  0816               	movf	main@yuzler^(0+384),w
  8618     016A  1283               	bcf	3,5	;RP0=0, select bank0
  8619     016B  1303               	bcf	3,6	;RP1=0, select bank0
  8620     016C  00B0               	movwf	?_sprintf+4
  8621     016D  1683               	bsf	3,5	;RP0=1, select bank1
  8622     016E  1303               	bcf	3,6	;RP1=0, select bank1
  8623     016F  0867               	movf	(main@onlar+1)^(0+128),w
  8624     0170  1283               	bcf	3,5	;RP0=0, select bank0
  8625     0171  1303               	bcf	3,6	;RP1=0, select bank0
  8626     0172  00B3               	movwf	?_sprintf+7
  8627     0173  1683               	bsf	3,5	;RP0=1, select bank1
  8628     0174  1303               	bcf	3,6	;RP1=0, select bank1
  8629     0175  0866               	movf	main@onlar^(0+128),w
  8630     0176  1283               	bcf	3,5	;RP0=0, select bank0
  8631     0177  1303               	bcf	3,6	;RP1=0, select bank0
  8632     0178  00B2               	movwf	?_sprintf+6
  8633     0179  1683               	bsf	3,5	;RP0=1, select bank1
  8634     017A  1303               	bcf	3,6	;RP1=0, select bank1
  8635     017B  0869               	movf	(main@birler+1)^(0+128),w
  8636     017C  1283               	bcf	3,5	;RP0=0, select bank0
  8637     017D  1303               	bcf	3,6	;RP1=0, select bank0
  8638     017E  00B5               	movwf	?_sprintf+9
  8639     017F  1683               	bsf	3,5	;RP0=1, select bank1
  8640     0180  1303               	bcf	3,6	;RP1=0, select bank1
  8641     0181  0868               	movf	main@birler^(0+128),w
  8642     0182  1283               	bcf	3,5	;RP0=0, select bank0
  8643     0183  1303               	bcf	3,6	;RP1=0, select bank0
  8644     0184  00B4               	movwf	?_sprintf+8
  8645     0185  30DD               	movlw	(low (main@rpmString| 0))& (0+255)
  8646     0186  120A  158A  21F6  120A  118A  	fcall	_sprintf
  8647     018B                     l4025:
  8648                           
  8649                           ;main1.c: 312: Lcd_Set_Cursor(1, 5);
  8650     018B  3005               	movlw	5
  8651     018C  1283               	bcf	3,5	;RP0=0, select bank0
  8652     018D  1303               	bcf	3,6	;RP1=0, select bank0
  8653     018E  00A4               	movwf	Lcd_Set_Cursor@b
  8654     018F  3001               	movlw	1
  8655     0190  160A  118A  2373  120A  118A  	fcall	_Lcd_Set_Cursor
  8656     0195                     l4027:
  8657                           
  8658                           ;main1.c: 313: Lcd_Write_String(rpmString);
  8659     0195  30DD               	movlw	(low (main@rpmString| 0))& (0+255)
  8660     0196  1283               	bcf	3,5	;RP0=0, select bank0
  8661     0197  1303               	bcf	3,6	;RP1=0, select bank0
  8662     0198  00A5               	movwf	Lcd_Write_String@a
  8663     0199  3000               	movlw	0
  8664     019A  00A6               	movwf	Lcd_Write_String@a+1
  8665     019B  160A  118A  232D  120A  118A  	fcall	_Lcd_Write_String
  8666     01A0                     l4029:
  8667                           
  8668                           ;main1.c: 320:  if (RC1 == 1 && (RE0 == 1 || RE2 == 1)) {
  8669     01A0  1283               	bcf	3,5	;RP0=0, select bank0
  8670     01A1  1303               	bcf	3,6	;RP1=0, select bank0
  8671     01A2  1C87               	btfss	7,1	;volatile
  8672     01A3  29A5               	goto	u5341
  8673     01A4  29A6               	goto	u5340
  8674     01A5                     u5341:
  8675     01A5  29CD               	goto	l229
  8676     01A6                     u5340:
  8677     01A6                     l4031:
  8678     01A6  1809               	btfsc	9,0	;volatile
  8679     01A7  29A9               	goto	u5351
  8680     01A8  29AA               	goto	u5350
  8681     01A9                     u5351:
  8682     01A9  29AE               	goto	l4035
  8683     01AA                     u5350:
  8684     01AA                     l4033:
  8685     01AA  1D09               	btfss	9,2	;volatile
  8686     01AB  29AD               	goto	u5361
  8687     01AC  29AE               	goto	u5360
  8688     01AD                     u5361:
  8689     01AD  29CD               	goto	l229
  8690     01AE                     u5360:
  8691     01AE                     l4035:
  8692                           
  8693                           ;main1.c: 321:             Lcd_Set_Cursor(2, 13);
  8694     01AE  300D               	movlw	13
  8695     01AF  00A4               	movwf	Lcd_Set_Cursor@b
  8696     01B0  3002               	movlw	2
  8697     01B1  160A  118A  2373  120A  118A  	fcall	_Lcd_Set_Cursor
  8698     01B6                     l4037:
  8699                           
  8700                           ;main1.c: 322:             Lcd_Write_String(" FWD LMT");
  8701     01B6  3047               	movlw	low (STR_14| (0+32768))
  8702     01B7  1283               	bcf	3,5	;RP0=0, select bank0
  8703     01B8  1303               	bcf	3,6	;RP1=0, select bank0
  8704     01B9  00A5               	movwf	Lcd_Write_String@a
  8705     01BA  3091               	movlw	high (STR_14| (0+32768))
  8706     01BB  00A6               	movwf	Lcd_Write_String@a+1
  8707     01BC  160A  118A  232D  120A  118A  	fcall	_Lcd_Write_String
  8708     01C1                     l4039:
  8709                           
  8710                           ;main1.c: 323:             UART_Write_Text("s0\r\n");
  8711     01C1  3065               	movlw	low (STR_15| (0+32768))
  8712     01C2  1283               	bcf	3,5	;RP0=0, select bank0
  8713     01C3  1303               	bcf	3,6	;RP1=0, select bank0
  8714     01C4  00A1               	movwf	UART_Write_Text@text
  8715     01C5  3091               	movlw	high (STR_15| (0+32768))
  8716     01C6  00A2               	movwf	UART_Write_Text@text+1
  8717     01C7  160A  118A  22A1  120A  118A  	fcall	_UART_Write_Text
  8718                           
  8719                           ;main1.c: 325:         } else if ((RE2 == 1 && RE0 == 1) || (RE2 == 1 && RE1 == 0)) {
  8720     01CC  2BAC               	goto	l4117
  8721     01CD                     l229:
  8722     01CD  1D09               	btfss	9,2	;volatile
  8723     01CE  29D0               	goto	u5371
  8724     01CF  29D1               	goto	u5370
  8725     01D0                     u5371:
  8726     01D0  29D5               	goto	l237
  8727     01D1                     u5370:
  8728     01D1                     l4041:
  8729     01D1  1809               	btfsc	9,0	;volatile
  8730     01D2  29D4               	goto	u5381
  8731     01D3  29D5               	goto	u5380
  8732     01D4                     u5381:
  8733     01D4  29DD               	goto	l4045
  8734     01D5                     u5380:
  8735     01D5                     l237:
  8736     01D5  1D09               	btfss	9,2	;volatile
  8737     01D6  29D8               	goto	u5391
  8738     01D7  29D9               	goto	u5390
  8739     01D8                     u5391:
  8740     01D8  2A33               	goto	l233
  8741     01D9                     u5390:
  8742     01D9                     l4043:
  8743     01D9  1889               	btfsc	9,1	;volatile
  8744     01DA  29DC               	goto	u5401
  8745     01DB  29DD               	goto	u5400
  8746     01DC                     u5401:
  8747     01DC  2A33               	goto	l233
  8748     01DD                     u5400:
  8749     01DD                     l4045:
  8750                           
  8751                           ;main1.c: 326:             Lcd_Set_Cursor(2, 13);
  8752     01DD  300D               	movlw	13
  8753     01DE  00A4               	movwf	Lcd_Set_Cursor@b
  8754     01DF  3002               	movlw	2
  8755     01E0  160A  118A  2373  120A  118A  	fcall	_Lcd_Set_Cursor
  8756     01E5                     l4047:
  8757                           
  8758                           ;main1.c: 327:             Lcd_Write_String(" FWD 1.6K");
  8759     01E5  3029               	movlw	low (STR_16| (0+32768))
  8760     01E6  1283               	bcf	3,5	;RP0=0, select bank0
  8761     01E7  1303               	bcf	3,6	;RP1=0, select bank0
  8762     01E8  00A5               	movwf	Lcd_Write_String@a
  8763     01E9  3091               	movlw	high (STR_16| (0+32768))
  8764     01EA  00A6               	movwf	Lcd_Write_String@a+1
  8765     01EB  160A  118A  232D  120A  118A  	fcall	_Lcd_Write_String
  8766     01F0                     l4049:
  8767                           
  8768                           ;main1.c: 328:             if (displayValue < 800) {
  8769     01F0  3003               	movlw	3
  8770     01F1  1683               	bsf	3,5	;RP0=1, select bank3
  8771     01F2  1703               	bsf	3,6	;RP1=1, select bank3
  8772     01F3  0223               	subwf	(main@displayValue+1)^(0+384),w
  8773     01F4  3020               	movlw	32
  8774     01F5  1903               	skipnz
  8775     01F6  0222               	subwf	main@displayValue^(0+384),w
  8776     01F7  1803               	skipnc
  8777     01F8  29FA               	goto	u5411
  8778     01F9  29FB               	goto	u5410
  8779     01FA                     u5411:
  8780     01FA  2BAC               	goto	l4117
  8781     01FB                     u5410:
  8782     01FB                     l4051:
  8783                           
  8784                           ;main1.c: 329:                 char uartMessage[8];;main1.c: 330:                 displa
      +                          yValue += 80;
  8785     01FB  3050               	movlw	80
  8786     01FC  07A2               	addwf	main@displayValue^(0+384),f
  8787     01FD  1803               	skipnc
  8788     01FE  0AA3               	incf	(main@displayValue+1)^(0+384),f
  8789     01FF  3000               	movlw	0
  8790     0200  07A3               	addwf	(main@displayValue+1)^(0+384),f
  8791                           
  8792                           ;main1.c: 332:                 if (displayValue > 800) {
  8793     0201  3003               	movlw	3
  8794     0202  0223               	subwf	(main@displayValue+1)^(0+384),w
  8795     0203  3021               	movlw	33
  8796     0204  1903               	skipnz
  8797     0205  0222               	subwf	main@displayValue^(0+384),w
  8798     0206  1C03               	skipc
  8799     0207  2A09               	goto	u5421
  8800     0208  2A0A               	goto	u5420
  8801     0209                     u5421:
  8802     0209  2A0E               	goto	l4055
  8803     020A                     u5420:
  8804     020A                     l4053:
  8805                           
  8806                           ;main1.c: 333:                     displayValue = 800;
  8807     020A  3020               	movlw	32
  8808     020B  00A2               	movwf	main@displayValue^(0+384)
  8809     020C  3003               	movlw	3
  8810     020D  00A3               	movwf	(main@displayValue^(0+384)+1)
  8811     020E                     l4055:
  8812                           
  8813                           ;main1.c: 335:                 sprintf(uartMessage, "s%d\r\n", displayValue);
  8814     020E  3059               	movlw	low (STR_17| (0+32768))
  8815     020F  1283               	bcf	3,5	;RP0=0, select bank0
  8816     0210  1303               	bcf	3,6	;RP1=0, select bank0
  8817     0211  00AC               	movwf	sprintf@f
  8818     0212  3091               	movlw	high (STR_17| (0+32768))
  8819     0213  00AD               	movwf	sprintf@f+1
  8820     0214  1683               	bsf	3,5	;RP0=1, select bank3
  8821     0215  1703               	bsf	3,6	;RP1=1, select bank3
  8822     0216  0823               	movf	(main@displayValue+1)^(0+384),w
  8823     0217  1283               	bcf	3,5	;RP0=0, select bank0
  8824     0218  1303               	bcf	3,6	;RP1=0, select bank0
  8825     0219  00AF               	movwf	?_sprintf+3
  8826     021A  1683               	bsf	3,5	;RP0=1, select bank3
  8827     021B  1703               	bsf	3,6	;RP1=1, select bank3
  8828     021C  0822               	movf	main@displayValue^(0+384),w
  8829     021D  1283               	bcf	3,5	;RP0=0, select bank0
  8830     021E  1303               	bcf	3,6	;RP1=0, select bank0
  8831     021F  00AE               	movwf	?_sprintf+2
  8832     0220  30BD               	movlw	(low (main@uartMessage| 0))& (0+255)
  8833     0221  120A  158A  21F6  120A  118A  	fcall	_sprintf
  8834     0226                     l4057:
  8835                           
  8836                           ;main1.c: 336:                 UART_Write_Text(uartMessage);
  8837     0226  30BD               	movlw	(low (main@uartMessage| 0))& (0+255)
  8838     0227  1283               	bcf	3,5	;RP0=0, select bank0
  8839     0228  1303               	bcf	3,6	;RP1=0, select bank0
  8840     0229  00A1               	movwf	UART_Write_Text@text
  8841     022A  3000               	movlw	0
  8842     022B  00A2               	movwf	UART_Write_Text@text+1
  8843     022C  160A  118A  22A1  120A  118A  	fcall	_UART_Write_Text
  8844     0231  2BAC               	goto	l4117
  8845     0232                     l238:	
  8846                           ;main1.c: 337:             }
  8847                           
  8848                           
  8849                           ;main1.c: 339:         } else if (RE0 == 1) {
  8850     0232  2BAC               	goto	l4117
  8851     0233                     l233:
  8852     0233  1C09               	btfss	9,0	;volatile
  8853     0234  2A36               	goto	u5431
  8854     0235  2A37               	goto	u5430
  8855     0236                     u5431:
  8856     0236  2A6E               	goto	l241
  8857     0237                     u5430:
  8858     0237                     l4059:
  8859                           
  8860                           ;main1.c: 340:             Lcd_Set_Cursor(2, 13);
  8861     0237  300D               	movlw	13
  8862     0238  00A4               	movwf	Lcd_Set_Cursor@b
  8863     0239  3002               	movlw	2
  8864     023A  160A  118A  2373  120A  118A  	fcall	_Lcd_Set_Cursor
  8865     023F                     l4061:
  8866                           
  8867                           ;main1.c: 341:             Lcd_Write_String(" FWD          ");
  8868     023F  30CD               	movlw	low (STR_18| (0+32768))
  8869     0240  1283               	bcf	3,5	;RP0=0, select bank0
  8870     0241  1303               	bcf	3,6	;RP1=0, select bank0
  8871     0242  00A5               	movwf	Lcd_Write_String@a
  8872     0243  3090               	movlw	high (STR_18| (0+32768))
  8873     0244  00A6               	movwf	Lcd_Write_String@a+1
  8874     0245  160A  118A  232D  120A  118A  	fcall	_Lcd_Write_String
  8875     024A                     l4063:
  8876                           
  8877                           ;main1.c: 342:             char combinedText[20];;main1.c: 343:             sprintf(comb
      +                          inedText, "s%d\r\n", displayValue);
  8878     024A  3059               	movlw	low (STR_17| (0+32768))
  8879     024B  1283               	bcf	3,5	;RP0=0, select bank0
  8880     024C  1303               	bcf	3,6	;RP1=0, select bank0
  8881     024D  00AC               	movwf	sprintf@f
  8882     024E  3091               	movlw	high (STR_17| (0+32768))
  8883     024F  00AD               	movwf	sprintf@f+1
  8884     0250  1683               	bsf	3,5	;RP0=1, select bank3
  8885     0251  1703               	bsf	3,6	;RP1=1, select bank3
  8886     0252  0823               	movf	(main@displayValue+1)^(0+384),w
  8887     0253  1283               	bcf	3,5	;RP0=0, select bank0
  8888     0254  1303               	bcf	3,6	;RP1=0, select bank0
  8889     0255  00AF               	movwf	?_sprintf+3
  8890     0256  1683               	bsf	3,5	;RP0=1, select bank3
  8891     0257  1703               	bsf	3,6	;RP1=1, select bank3
  8892     0258  0822               	movf	main@displayValue^(0+384),w
  8893     0259  1283               	bcf	3,5	;RP0=0, select bank0
  8894     025A  1303               	bcf	3,6	;RP1=0, select bank0
  8895     025B  00AE               	movwf	?_sprintf+2
  8896     025C  305A               	movlw	(low (main@combinedText| 0))& (0+255)
  8897     025D  120A  158A  21F6  120A  118A  	fcall	_sprintf
  8898     0262                     l4065:
  8899                           
  8900                           ;main1.c: 344:             UART_Write_Text(combinedText);
  8901     0262  305A               	movlw	(low (main@combinedText| 0))& (0+255)
  8902     0263  1283               	bcf	3,5	;RP0=0, select bank0
  8903     0264  1303               	bcf	3,6	;RP1=0, select bank0
  8904     0265  00A1               	movwf	UART_Write_Text@text
  8905     0266  3000               	movlw	0
  8906     0267  00A2               	movwf	UART_Write_Text@text+1
  8907     0268  160A  118A  22A1  120A  118A  	fcall	_UART_Write_Text
  8908                           
  8909                           ;main1.c: 347:         } else if (RC2 == 1 && (RE1 == 1 || RC0 == 1)) {
  8910     026D  2BAC               	goto	l4117
  8911     026E                     l241:
  8912     026E  1D07               	btfss	7,2	;volatile
  8913     026F  2A71               	goto	u5441
  8914     0270  2A72               	goto	u5440
  8915     0271                     u5441:
  8916     0271  2A99               	goto	l243
  8917     0272                     u5440:
  8918     0272                     l4067:
  8919     0272  1889               	btfsc	9,1	;volatile
  8920     0273  2A75               	goto	u5451
  8921     0274  2A76               	goto	u5450
  8922     0275                     u5451:
  8923     0275  2A7A               	goto	l4071
  8924     0276                     u5450:
  8925     0276                     l4069:
  8926     0276  1C07               	btfss	7,0	;volatile
  8927     0277  2A79               	goto	u5461
  8928     0278  2A7A               	goto	u5460
  8929     0279                     u5461:
  8930     0279  2A99               	goto	l243
  8931     027A                     u5460:
  8932     027A                     l4071:
  8933                           
  8934                           ;main1.c: 348:             Lcd_Set_Cursor(2, 13);
  8935     027A  300D               	movlw	13
  8936     027B  00A4               	movwf	Lcd_Set_Cursor@b
  8937     027C  3002               	movlw	2
  8938     027D  160A  118A  2373  120A  118A  	fcall	_Lcd_Set_Cursor
  8939     0282                     l4073:
  8940                           
  8941                           ;main1.c: 349:             Lcd_Write_String(" REW LMT");
  8942     0282  3050               	movlw	low (STR_20| (0+32768))
  8943     0283  1283               	bcf	3,5	;RP0=0, select bank0
  8944     0284  1303               	bcf	3,6	;RP1=0, select bank0
  8945     0285  00A5               	movwf	Lcd_Write_String@a
  8946     0286  3091               	movlw	high (STR_20| (0+32768))
  8947     0287  00A6               	movwf	Lcd_Write_String@a+1
  8948     0288  160A  118A  232D  120A  118A  	fcall	_Lcd_Write_String
  8949     028D                     l4075:
  8950                           
  8951                           ;main1.c: 350:             UART_Write_Text("s0\r\n");
  8952     028D  3065               	movlw	low (STR_15| (0+32768))
  8953     028E  1283               	bcf	3,5	;RP0=0, select bank0
  8954     028F  1303               	bcf	3,6	;RP1=0, select bank0
  8955     0290  00A1               	movwf	UART_Write_Text@text
  8956     0291  3091               	movlw	high (STR_15| (0+32768))
  8957     0292  00A2               	movwf	UART_Write_Text@text+1
  8958     0293  160A  118A  22A1  120A  118A  	fcall	_UART_Write_Text
  8959                           
  8960                           ;main1.c: 352:         } else if ((RC0 == 1 && RE1 == 1) || (RC0 == 1 && RE0 == 0)) {
  8961     0298  2BAC               	goto	l4117
  8962     0299                     l243:
  8963     0299  1C07               	btfss	7,0	;volatile
  8964     029A  2A9C               	goto	u5471
  8965     029B  2A9D               	goto	u5470
  8966     029C                     u5471:
  8967     029C  2AA1               	goto	l251
  8968     029D                     u5470:
  8969     029D                     l4077:
  8970     029D  1889               	btfsc	9,1	;volatile
  8971     029E  2AA0               	goto	u5481
  8972     029F  2AA1               	goto	u5480
  8973     02A0                     u5481:
  8974     02A0  2AA9               	goto	l4081
  8975     02A1                     u5480:
  8976     02A1                     l251:
  8977     02A1  1C07               	btfss	7,0	;volatile
  8978     02A2  2AA4               	goto	u5491
  8979     02A3  2AA5               	goto	u5490
  8980     02A4                     u5491:
  8981     02A4  2B3A               	goto	l247
  8982     02A5                     u5490:
  8983     02A5                     l4079:
  8984     02A5  1809               	btfsc	9,0	;volatile
  8985     02A6  2AA8               	goto	u5501
  8986     02A7  2AA9               	goto	u5500
  8987     02A8                     u5501:
  8988     02A8  2B3A               	goto	l247
  8989     02A9                     u5500:
  8990     02A9                     l4081:
  8991                           
  8992                           ;main1.c: 353:             Lcd_Set_Cursor(2, 13);
  8993     02A9  300D               	movlw	13
  8994     02AA  00A4               	movwf	Lcd_Set_Cursor@b
  8995     02AB  3002               	movlw	2
  8996     02AC  160A  118A  2373  120A  118A  	fcall	_Lcd_Set_Cursor
  8997     02B1                     l4083:
  8998                           
  8999                           ;main1.c: 354:             Lcd_Write_String(" REW 1.6K");
  9000     02B1  3033               	movlw	low (STR_22| (0+32768))
  9001     02B2  1283               	bcf	3,5	;RP0=0, select bank0
  9002     02B3  1303               	bcf	3,6	;RP1=0, select bank0
  9003     02B4  00A5               	movwf	Lcd_Write_String@a
  9004     02B5  3091               	movlw	high (STR_22| (0+32768))
  9005     02B6  00A6               	movwf	Lcd_Write_String@a+1
  9006     02B7  160A  118A  232D  120A  118A  	fcall	_Lcd_Write_String
  9007     02BC                     l4085:
  9008                           
  9009                           ;main1.c: 355:             int negativeFeedValue = -displayValue;
  9010     02BC  1683               	bsf	3,5	;RP0=1, select bank3
  9011     02BD  1703               	bsf	3,6	;RP1=1, select bank3
  9012     02BE  0922               	comf	main@displayValue^(0+384),w
  9013     02BF  1283               	bcf	3,5	;RP0=0, select bank0
  9014     02C0  1303               	bcf	3,6	;RP1=0, select bank0
  9015     02C1  00D4               	movwf	??_main
  9016     02C2  1683               	bsf	3,5	;RP0=1, select bank3
  9017     02C3  1703               	bsf	3,6	;RP1=1, select bank3
  9018     02C4  0923               	comf	(main@displayValue+1)^(0+384),w
  9019     02C5  1283               	bcf	3,5	;RP0=0, select bank0
  9020     02C6  1303               	bcf	3,6	;RP1=0, select bank0
  9021     02C7  00D5               	movwf	??_main+1
  9022     02C8  0AD4               	incf	??_main,f
  9023     02C9  1903               	skipnz
  9024     02CA  0AD5               	incf	??_main+1,f
  9025     02CB  0854               	movf	??_main,w
  9026     02CC  1683               	bsf	3,5	;RP0=1, select bank3
  9027     02CD  1703               	bsf	3,6	;RP1=1, select bank3
  9028     02CE  009E               	movwf	main@negativeFeedValue^(0+384)
  9029     02CF  1283               	bcf	3,5	;RP0=0, select bank0
  9030     02D0  1303               	bcf	3,6	;RP1=0, select bank0
  9031     02D1  0855               	movf	??_main+1,w
  9032     02D2  1683               	bsf	3,5	;RP0=1, select bank3
  9033     02D3  1703               	bsf	3,6	;RP1=1, select bank3
  9034     02D4  009F               	movwf	(main@negativeFeedValue+1)^(0+384)
  9035     02D5                     l4087:
  9036                           
  9037                           ;main1.c: 356:             if (negativeFeedValue > -800) {
  9038     02D5  081F               	movf	(main@negativeFeedValue+1)^(0+384),w
  9039     02D6  3A80               	xorlw	128
  9040     02D7  00FF               	movwf	btemp+1
  9041     02D8  307C               	movlw	124
  9042     02D9  027F               	subwf	btemp+1,w
  9043     02DA  1D03               	skipz
  9044     02DB  2ADE               	goto	u5515
  9045     02DC  30E1               	movlw	225
  9046     02DD  021E               	subwf	main@negativeFeedValue^(0+384),w
  9047     02DE                     u5515:
  9048     02DE  1C03               	skipc
  9049     02DF  2AE1               	goto	u5511
  9050     02E0  2AE2               	goto	u5510
  9051     02E1                     u5511:
  9052     02E1  2A32               	goto	l238
  9053     02E2                     u5510:
  9054     02E2                     l4089:
  9055                           
  9056                           ;main1.c: 357:                 char uartMessage[8];;main1.c: 358:                 negati
      +                          veFeedValue -= 80;
  9057     02E2  30B0               	movlw	176
  9058     02E3  1683               	bsf	3,5	;RP0=1, select bank3
  9059     02E4  1703               	bsf	3,6	;RP1=1, select bank3
  9060     02E5  079E               	addwf	main@negativeFeedValue^(0+384),f
  9061     02E6  1803               	skipnc
  9062     02E7  0A9F               	incf	(main@negativeFeedValue+1)^(0+384),f
  9063     02E8  30FF               	movlw	255
  9064     02E9  079F               	addwf	(main@negativeFeedValue+1)^(0+384),f
  9065     02EA                     l4091:
  9066                           
  9067                           ;main1.c: 359:                 if (negativeFeedValue < -800) {
  9068     02EA  081F               	movf	(main@negativeFeedValue+1)^(0+384),w
  9069     02EB  3A80               	xorlw	128
  9070     02EC  00FF               	movwf	btemp+1
  9071     02ED  307C               	movlw	124
  9072     02EE  027F               	subwf	btemp+1,w
  9073     02EF  1D03               	skipz
  9074     02F0  2AF3               	goto	u5525
  9075     02F1  30E0               	movlw	224
  9076     02F2  021E               	subwf	main@negativeFeedValue^(0+384),w
  9077     02F3                     u5525:
  9078     02F3  1803               	skipnc
  9079     02F4  2AF6               	goto	u5521
  9080     02F5  2AF7               	goto	u5520
  9081     02F6                     u5521:
  9082     02F6  2AFD               	goto	l4095
  9083     02F7                     u5520:
  9084     02F7                     l4093:
  9085                           
  9086                           ;main1.c: 360:                     negativeFeedValue = -800;
  9087     02F7  30E0               	movlw	224
  9088     02F8  1683               	bsf	3,5	;RP0=1, select bank3
  9089     02F9  1703               	bsf	3,6	;RP1=1, select bank3
  9090     02FA  009E               	movwf	main@negativeFeedValue^(0+384)
  9091     02FB  30FC               	movlw	252
  9092     02FC  009F               	movwf	(main@negativeFeedValue^(0+384)+1)
  9093     02FD                     l4095:
  9094                           
  9095                           ;main1.c: 362:                 displayValue=-negativeFeedValue;
  9096     02FD  1683               	bsf	3,5	;RP0=1, select bank3
  9097     02FE  1703               	bsf	3,6	;RP1=1, select bank3
  9098     02FF  091E               	comf	main@negativeFeedValue^(0+384),w
  9099     0300  1283               	bcf	3,5	;RP0=0, select bank0
  9100     0301  1303               	bcf	3,6	;RP1=0, select bank0
  9101     0302  00D4               	movwf	??_main
  9102     0303  1683               	bsf	3,5	;RP0=1, select bank3
  9103     0304  1703               	bsf	3,6	;RP1=1, select bank3
  9104     0305  091F               	comf	(main@negativeFeedValue+1)^(0+384),w
  9105     0306  1283               	bcf	3,5	;RP0=0, select bank0
  9106     0307  1303               	bcf	3,6	;RP1=0, select bank0
  9107     0308  00D5               	movwf	??_main+1
  9108     0309  0AD4               	incf	??_main,f
  9109     030A  1903               	skipnz
  9110     030B  0AD5               	incf	??_main+1,f
  9111     030C  0854               	movf	??_main,w
  9112     030D  1683               	bsf	3,5	;RP0=1, select bank3
  9113     030E  1703               	bsf	3,6	;RP1=1, select bank3
  9114     030F  00A2               	movwf	main@displayValue^(0+384)
  9115     0310  1283               	bcf	3,5	;RP0=0, select bank0
  9116     0311  1303               	bcf	3,6	;RP1=0, select bank0
  9117     0312  0855               	movf	??_main+1,w
  9118     0313  1683               	bsf	3,5	;RP0=1, select bank3
  9119     0314  1703               	bsf	3,6	;RP1=1, select bank3
  9120     0315  00A3               	movwf	(main@displayValue+1)^(0+384)
  9121     0316                     l4097:
  9122                           
  9123                           ;main1.c: 363:                 sprintf(uartMessage, "s%d\r\n", negativeFeedValue);
  9124     0316  3059               	movlw	low (STR_17| (0+32768))
  9125     0317  1283               	bcf	3,5	;RP0=0, select bank0
  9126     0318  1303               	bcf	3,6	;RP1=0, select bank0
  9127     0319  00AC               	movwf	sprintf@f
  9128     031A  3091               	movlw	high (STR_17| (0+32768))
  9129     031B  00AD               	movwf	sprintf@f+1
  9130     031C  1683               	bsf	3,5	;RP0=1, select bank3
  9131     031D  1703               	bsf	3,6	;RP1=1, select bank3
  9132     031E  081F               	movf	(main@negativeFeedValue+1)^(0+384),w
  9133     031F  1283               	bcf	3,5	;RP0=0, select bank0
  9134     0320  1303               	bcf	3,6	;RP1=0, select bank0
  9135     0321  00AF               	movwf	?_sprintf+3
  9136     0322  1683               	bsf	3,5	;RP0=1, select bank3
  9137     0323  1703               	bsf	3,6	;RP1=1, select bank3
  9138     0324  081E               	movf	main@negativeFeedValue^(0+384),w
  9139     0325  1283               	bcf	3,5	;RP0=0, select bank0
  9140     0326  1303               	bcf	3,6	;RP1=0, select bank0
  9141     0327  00AE               	movwf	?_sprintf+2
  9142     0328  30C5               	movlw	(low (main@uartMessage_369| 0))& (0+255)
  9143     0329  120A  158A  21F6  120A  118A  	fcall	_sprintf
  9144     032E                     l4099:
  9145                           
  9146                           ;main1.c: 364:                 UART_Write_Text(uartMessage);
  9147     032E  30C5               	movlw	(low (main@uartMessage_369| 0))& (0+255)
  9148     032F  1283               	bcf	3,5	;RP0=0, select bank0
  9149     0330  1303               	bcf	3,6	;RP1=0, select bank0
  9150     0331  00A1               	movwf	UART_Write_Text@text
  9151     0332  3000               	movlw	0
  9152     0333  00A2               	movwf	UART_Write_Text@text+1
  9153     0334  160A  118A  22A1  120A  118A  	fcall	_UART_Write_Text
  9154     0339  2BAC               	goto	l4117
  9155     033A                     l247:
  9156     033A  1C89               	btfss	9,1	;volatile
  9157     033B  2B3D               	goto	u5531
  9158     033C  2B3E               	goto	u5530
  9159     033D                     u5531:
  9160     033D  2B8E               	goto	l4111
  9161     033E                     u5530:
  9162     033E                     l4101:
  9163                           
  9164                           ;main1.c: 368:             Lcd_Set_Cursor(2, 13);
  9165     033E  300D               	movlw	13
  9166     033F  00A4               	movwf	Lcd_Set_Cursor@b
  9167     0340  3002               	movlw	2
  9168     0341  160A  118A  2373  120A  118A  	fcall	_Lcd_Set_Cursor
  9169     0346                     l4103:
  9170                           
  9171                           ;main1.c: 369:             Lcd_Write_String(" REW         ");
  9172     0346  30EB               	movlw	low (STR_24| (0+32768))
  9173     0347  1283               	bcf	3,5	;RP0=0, select bank0
  9174     0348  1303               	bcf	3,6	;RP1=0, select bank0
  9175     0349  00A5               	movwf	Lcd_Write_String@a
  9176     034A  3090               	movlw	high (STR_24| (0+32768))
  9177     034B  00A6               	movwf	Lcd_Write_String@a+1
  9178     034C  160A  118A  232D  120A  118A  	fcall	_Lcd_Write_String
  9179     0351                     l4105:
  9180                           
  9181                           ;main1.c: 370:             int negativeDisplayValue = -displayValue;
  9182     0351  1683               	bsf	3,5	;RP0=1, select bank3
  9183     0352  1703               	bsf	3,6	;RP1=1, select bank3
  9184     0353  0922               	comf	main@displayValue^(0+384),w
  9185     0354  1283               	bcf	3,5	;RP0=0, select bank0
  9186     0355  1303               	bcf	3,6	;RP1=0, select bank0
  9187     0356  00D4               	movwf	??_main
  9188     0357  1683               	bsf	3,5	;RP0=1, select bank3
  9189     0358  1703               	bsf	3,6	;RP1=1, select bank3
  9190     0359  0923               	comf	(main@displayValue+1)^(0+384),w
  9191     035A  1283               	bcf	3,5	;RP0=0, select bank0
  9192     035B  1303               	bcf	3,6	;RP1=0, select bank0
  9193     035C  00D5               	movwf	??_main+1
  9194     035D  0AD4               	incf	??_main,f
  9195     035E  1903               	skipnz
  9196     035F  0AD5               	incf	??_main+1,f
  9197     0360  0854               	movf	??_main,w
  9198     0361  1683               	bsf	3,5	;RP0=1, select bank1
  9199     0362  1303               	bcf	3,6	;RP1=0, select bank1
  9200     0363  00EA               	movwf	main@negativeDisplayValue^(0+128)
  9201     0364  1283               	bcf	3,5	;RP0=0, select bank0
  9202     0365  1303               	bcf	3,6	;RP1=0, select bank0
  9203     0366  0855               	movf	??_main+1,w
  9204     0367  1683               	bsf	3,5	;RP0=1, select bank1
  9205     0368  1303               	bcf	3,6	;RP1=0, select bank1
  9206     0369  00EB               	movwf	(main@negativeDisplayValue+1)^(0+128)
  9207     036A                     l4107:
  9208                           
  9209                           ;main1.c: 371:             char combinedText[20];;main1.c: 372:             sprintf(comb
      +                          inedText, "s%d\r\n", negativeDisplayValue);
  9210     036A  3059               	movlw	low (STR_17| (0+32768))
  9211     036B  1283               	bcf	3,5	;RP0=0, select bank0
  9212     036C  1303               	bcf	3,6	;RP1=0, select bank0
  9213     036D  00AC               	movwf	sprintf@f
  9214     036E  3091               	movlw	high (STR_17| (0+32768))
  9215     036F  00AD               	movwf	sprintf@f+1
  9216     0370  1683               	bsf	3,5	;RP0=1, select bank1
  9217     0371  1303               	bcf	3,6	;RP1=0, select bank1
  9218     0372  086B               	movf	(main@negativeDisplayValue+1)^(0+128),w
  9219     0373  1283               	bcf	3,5	;RP0=0, select bank0
  9220     0374  1303               	bcf	3,6	;RP1=0, select bank0
  9221     0375  00AF               	movwf	?_sprintf+3
  9222     0376  1683               	bsf	3,5	;RP0=1, select bank1
  9223     0377  1303               	bcf	3,6	;RP1=0, select bank1
  9224     0378  086A               	movf	main@negativeDisplayValue^(0+128),w
  9225     0379  1283               	bcf	3,5	;RP0=0, select bank0
  9226     037A  1303               	bcf	3,6	;RP1=0, select bank0
  9227     037B  00AE               	movwf	?_sprintf+2
  9228     037C  30A0               	movlw	(low (main@combinedText_373| 0))& (0+255)
  9229     037D  120A  158A  21F6  120A  118A  	fcall	_sprintf
  9230     0382                     l4109:
  9231                           
  9232                           ;main1.c: 373:             UART_Write_Text(combinedText);
  9233     0382  30A0               	movlw	(low (main@combinedText_373| 0))& (0+255)
  9234     0383  1283               	bcf	3,5	;RP0=0, select bank0
  9235     0384  1303               	bcf	3,6	;RP1=0, select bank0
  9236     0385  00A1               	movwf	UART_Write_Text@text
  9237     0386  3000               	movlw	0
  9238     0387  00A2               	movwf	UART_Write_Text@text+1
  9239     0388  160A  118A  22A1  120A  118A  	fcall	_UART_Write_Text
  9240                           
  9241                           ;main1.c: 374:         } else {
  9242     038D  2BAC               	goto	l4117
  9243     038E                     l4111:
  9244                           
  9245                           ;main1.c: 376:             Lcd_Set_Cursor(2, 13);
  9246     038E  300D               	movlw	13
  9247     038F  00A4               	movwf	Lcd_Set_Cursor@b
  9248     0390  3002               	movlw	2
  9249     0391  160A  118A  2373  120A  118A  	fcall	_Lcd_Set_Cursor
  9250     0396                     l4113:
  9251                           
  9252                           ;main1.c: 377:             Lcd_Write_String(" STOP       ");
  9253     0396  3007               	movlw	low (STR_26| (0+32768))
  9254     0397  1283               	bcf	3,5	;RP0=0, select bank0
  9255     0398  1303               	bcf	3,6	;RP1=0, select bank0
  9256     0399  00A5               	movwf	Lcd_Write_String@a
  9257     039A  3091               	movlw	high (STR_26| (0+32768))
  9258     039B  00A6               	movwf	Lcd_Write_String@a+1
  9259     039C  160A  118A  232D  120A  118A  	fcall	_Lcd_Write_String
  9260     03A1                     l4115:
  9261                           
  9262                           ;main1.c: 378:             UART_Write_Text("s0\r\n");
  9263     03A1  3065               	movlw	low (STR_15| (0+32768))
  9264     03A2  1283               	bcf	3,5	;RP0=0, select bank0
  9265     03A3  1303               	bcf	3,6	;RP1=0, select bank0
  9266     03A4  00A1               	movwf	UART_Write_Text@text
  9267     03A5  3091               	movlw	high (STR_15| (0+32768))
  9268     03A6  00A2               	movwf	UART_Write_Text@text+1
  9269     03A7  160A  118A  22A1  120A  118A  	fcall	_UART_Write_Text
  9270     03AC                     l4117:
  9271                           
  9272                           ;main1.c: 385:         if((RC1==1) &&( RE0==1 || RE2 )){
  9273     03AC  1283               	bcf	3,5	;RP0=0, select bank0
  9274     03AD  1303               	bcf	3,6	;RP1=0, select bank0
  9275     03AE  1C87               	btfss	7,1	;volatile
  9276     03AF  2BB1               	goto	u5541
  9277     03B0  2BB2               	goto	u5540
  9278     03B1                     u5541:
  9279     03B1  2BBE               	goto	l257
  9280     03B2                     u5540:
  9281     03B2                     l4119:
  9282     03B2  1809               	btfsc	9,0	;volatile
  9283     03B3  2BB5               	goto	u5551
  9284     03B4  2BB6               	goto	u5550
  9285     03B5                     u5551:
  9286     03B5  2BBA               	goto	l259
  9287     03B6                     u5550:
  9288     03B6                     l4121:
  9289     03B6  1D09               	btfss	9,2	;volatile
  9290     03B7  2BB9               	goto	u5561
  9291     03B8  2BBA               	goto	u5560
  9292     03B9                     u5561:
  9293     03B9  2BBE               	goto	l257
  9294     03BA                     u5560:
  9295     03BA                     l259:
  9296                           
  9297                           ;main1.c: 387:             RA4=1;
  9298     03BA  1283               	bcf	3,5	;RP0=0, select bank0
  9299     03BB  1303               	bcf	3,6	;RP1=0, select bank0
  9300     03BC  1605               	bsf	5,4	;volatile
  9301                           
  9302                           ;main1.c: 388:         }
  9303     03BD  2C5F               	goto	l265
  9304     03BE                     l257:	
  9305                           ;main1.c: 389:         else if(( RC2==1) && (RE1==1 || RC0)){
  9306                           
  9307     03BE  1D07               	btfss	7,2	;volatile
  9308     03BF  2BC1               	goto	u5571
  9309     03C0  2BC2               	goto	u5570
  9310     03C1                     u5571:
  9311     03C1  2BCB               	goto	l261
  9312     03C2                     u5570:
  9313     03C2                     l4123:
  9314     03C2  1889               	btfsc	9,1	;volatile
  9315     03C3  2BC5               	goto	u5581
  9316     03C4  2BC6               	goto	u5580
  9317     03C5                     u5581:
  9318     03C5  2BBA               	goto	l259
  9319     03C6                     u5580:
  9320     03C6                     l4125:
  9321     03C6  1C07               	btfss	7,0	;volatile
  9322     03C7  2BC9               	goto	u5591
  9323     03C8  2BCA               	goto	u5590
  9324     03C9                     u5591:
  9325     03C9  2BCB               	goto	l261
  9326     03CA                     u5590:
  9327     03CA  2BBA               	goto	l259
  9328     03CB                     l261:	
  9329                           ;main1.c: 393:         else {
  9330                           
  9331                           
  9332                           ;main1.c: 394:             RA4=0;
  9333     03CB  1205               	bcf	5,4	;volatile
  9334     03CC  2C5F               	goto	l265
  9335     03CD                     l211:	
  9336                           ;main1.c: 399: else if( RC3==1) {
  9337                           
  9338     03CD  1D87               	btfss	7,3	;volatile
  9339     03CE  2BD0               	goto	u5601
  9340     03CF  2BD1               	goto	u5600
  9341     03D0                     u5601:
  9342     03D0  2C27               	goto	l266
  9343     03D1                     u5600:
  9344     03D1                     l4127:
  9345                           
  9346                           ;main1.c: 404:     Lcd_Set_Cursor(1,1);
  9347     03D1  01A4               	clrf	Lcd_Set_Cursor@b
  9348     03D2  0AA4               	incf	Lcd_Set_Cursor@b,f
  9349     03D3  3001               	movlw	1
  9350     03D4  160A  118A  2373  120A  118A  	fcall	_Lcd_Set_Cursor
  9351     03D9                     l4129:
  9352                           
  9353                           ;main1.c: 405:             Lcd_Write_String("   FEED RATE ERROR       ");
  9354     03D9  3037               	movlw	low (STR_28| (0+32768))
  9355     03DA  1283               	bcf	3,5	;RP0=0, select bank0
  9356     03DB  1303               	bcf	3,6	;RP1=0, select bank0
  9357     03DC  00A5               	movwf	Lcd_Write_String@a
  9358     03DD  3090               	movlw	high (STR_28| (0+32768))
  9359     03DE  00A6               	movwf	Lcd_Write_String@a+1
  9360     03DF  160A  118A  232D  120A  118A  	fcall	_Lcd_Write_String
  9361     03E4                     l4131:
  9362                           
  9363                           ;main1.c: 406:     Lcd_Set_Cursor(2,1);
  9364     03E4  1283               	bcf	3,5	;RP0=0, select bank0
  9365     03E5  1303               	bcf	3,6	;RP1=0, select bank0
  9366     03E6  01A4               	clrf	Lcd_Set_Cursor@b
  9367     03E7  0AA4               	incf	Lcd_Set_Cursor@b,f
  9368     03E8  3002               	movlw	2
  9369     03E9  160A  118A  2373  120A  118A  	fcall	_Lcd_Set_Cursor
  9370                           
  9371                           ;main1.c: 407:             Lcd_Write_String("   ILERLEME HATASI        ");
  9372     03EE  301C               	movlw	low (STR_29| (0+32768))
  9373     03EF  1283               	bcf	3,5	;RP0=0, select bank0
  9374     03F0  1303               	bcf	3,6	;RP1=0, select bank0
  9375     03F1  00A5               	movwf	Lcd_Write_String@a
  9376     03F2  3090               	movlw	high (STR_29| (0+32768))
  9377     03F3  00A6               	movwf	Lcd_Write_String@a+1
  9378     03F4  160A  118A  232D  120A  118A  	fcall	_Lcd_Write_String
  9379                           
  9380                           ;main1.c: 408:      UART_Write_Text("s0\r\n");
  9381     03F9  3065               	movlw	low (STR_15| (0+32768))
  9382     03FA  1283               	bcf	3,5	;RP0=0, select bank0
  9383     03FB  1303               	bcf	3,6	;RP1=0, select bank0
  9384     03FC  00A1               	movwf	UART_Write_Text@text
  9385     03FD  3091               	movlw	high (STR_15| (0+32768))
  9386     03FE  00A2               	movwf	UART_Write_Text@text+1
  9387     03FF  160A  118A  22A1  120A  118A  	fcall	_UART_Write_Text
  9388     0404                     l4133:
  9389                           
  9390                           ;main1.c: 409:       RA4=1;
  9391     0404  1283               	bcf	3,5	;RP0=0, select bank0
  9392     0405  1303               	bcf	3,6	;RP1=0, select bank0
  9393     0406  1605               	bsf	5,4	;volatile
  9394     0407                     l4135:
  9395                           
  9396                           ;main1.c: 410:       _delay((unsigned long)((1000)*(4000000/4000.0)));
  9397     0407  3006               	movlw	6
  9398     0408  1283               	bcf	3,5	;RP0=0, select bank0
  9399     0409  1303               	bcf	3,6	;RP1=0, select bank0
  9400     040A  00D6               	movwf	??_main+2
  9401     040B  3013               	movlw	19
  9402     040C  00D5               	movwf	??_main+1
  9403     040D  30AD               	movlw	173
  9404     040E  00D4               	movwf	??_main
  9405     040F                     u5687:
  9406     040F  0BD4               	decfsz	??_main,f
  9407     0410  2C0F               	goto	u5687
  9408     0411  0BD5               	decfsz	??_main+1,f
  9409     0412  2C0F               	goto	u5687
  9410     0413  0BD6               	decfsz	??_main+2,f
  9411     0414  2C0F               	goto	u5687
  9412     0415                     l4137:
  9413                           
  9414                           ;main1.c: 411:       RA4=0;
  9415     0415  1283               	bcf	3,5	;RP0=0, select bank0
  9416     0416  1303               	bcf	3,6	;RP1=0, select bank0
  9417     0417  1205               	bcf	5,4	;volatile
  9418     0418                     l4139:
  9419                           
  9420                           ;main1.c: 412:       _delay((unsigned long)((3000)*(4000000/4000.0)));
  9421     0418  3010               	movlw	16
  9422     0419  1283               	bcf	3,5	;RP0=0, select bank0
  9423     041A  1303               	bcf	3,6	;RP1=0, select bank0
  9424     041B  00D6               	movwf	??_main+2
  9425     041C  3039               	movlw	57
  9426     041D  00D5               	movwf	??_main+1
  9427     041E  300D               	movlw	13
  9428     041F  00D4               	movwf	??_main
  9429     0420                     u5697:
  9430     0420  0BD4               	decfsz	??_main,f
  9431     0421  2C20               	goto	u5697
  9432     0422  0BD5               	decfsz	??_main+1,f
  9433     0423  2C20               	goto	u5697
  9434     0424  0BD6               	decfsz	??_main+2,f
  9435     0425  2C20               	goto	u5697
  9436     0426  2BBA               	goto	l259
  9437     0427                     l266:	
  9438                           ;main1.c: 418:      else if (RD0 == 1 ){
  9439                           
  9440     0427  1C08               	btfss	8,0	;volatile
  9441     0428  2C2A               	goto	u5611
  9442     0429  2C2B               	goto	u5610
  9443     042A                     u5611:
  9444     042A  2C5F               	goto	l265
  9445     042B                     u5610:
  9446     042B                     l4143:
  9447                           
  9448                           ;main1.c: 419:     UART_Write_Text("s0\r\n");
  9449     042B  3065               	movlw	low (STR_15| (0+32768))
  9450     042C  00A1               	movwf	UART_Write_Text@text
  9451     042D  3091               	movlw	high (STR_15| (0+32768))
  9452     042E  00A2               	movwf	UART_Write_Text@text+1
  9453     042F  160A  118A  22A1  120A  118A  	fcall	_UART_Write_Text
  9454     0434                     l4145:
  9455                           
  9456                           ;main1.c: 420:     Lcd_Set_Cursor(1,1);
  9457     0434  1283               	bcf	3,5	;RP0=0, select bank0
  9458     0435  1303               	bcf	3,6	;RP1=0, select bank0
  9459     0436  01A4               	clrf	Lcd_Set_Cursor@b
  9460     0437  0AA4               	incf	Lcd_Set_Cursor@b,f
  9461     0438  3001               	movlw	1
  9462     0439  160A  118A  2373  120A  118A  	fcall	_Lcd_Set_Cursor
  9463     043E                     l4147:
  9464                           
  9465                           ;main1.c: 421:             Lcd_Write_String("   ROTATION ERROR      ");
  9466     043E  3069               	movlw	low (STR_32| (0+32768))
  9467     043F  1283               	bcf	3,5	;RP0=0, select bank0
  9468     0440  1303               	bcf	3,6	;RP1=0, select bank0
  9469     0441  00A5               	movwf	Lcd_Write_String@a
  9470     0442  3090               	movlw	high (STR_32| (0+32768))
  9471     0443  00A6               	movwf	Lcd_Write_String@a+1
  9472     0444  160A  118A  232D  120A  118A  	fcall	_Lcd_Write_String
  9473                           
  9474                           ;main1.c: 422:     Lcd_Set_Cursor(2,1);
  9475     0449  1283               	bcf	3,5	;RP0=0, select bank0
  9476     044A  1303               	bcf	3,6	;RP1=0, select bank0
  9477     044B  01A4               	clrf	Lcd_Set_Cursor@b
  9478     044C  0AA4               	incf	Lcd_Set_Cursor@b,f
  9479     044D  3002               	movlw	2
  9480     044E  160A  118A  2373  120A  118A  	fcall	_Lcd_Set_Cursor
  9481     0453                     l4149:
  9482                           
  9483                           ;main1.c: 423:             Lcd_Write_String("   DONME HATASI        ");
  9484     0453  3051               	movlw	low (STR_33| (0+32768))
  9485     0454  1283               	bcf	3,5	;RP0=0, select bank0
  9486     0455  1303               	bcf	3,6	;RP1=0, select bank0
  9487     0456  00A5               	movwf	Lcd_Write_String@a
  9488     0457  3090               	movlw	high (STR_33| (0+32768))
  9489     0458  00A6               	movwf	Lcd_Write_String@a+1
  9490     0459  160A  118A  232D  120A  118A  	fcall	_Lcd_Write_String
  9491     045E  2C04               	goto	l4133
  9492     045F                     l265:
  9493     045F  160A  118A  2FF4   	goto	l3913
  9494     0462                     l210:
  9495     0462  120A  118A  280E   	ljmp	start
  9496     0465                     __end_of_main:

Data Sizes:
    Strings     342
    Constant    10
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80     78      78
    BANK1            80     80      80
    BANK3            96     20      28
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_25(CODE[6]), STR_23(CODE[6]), STR_19(CODE[6]), STR_17(CODE[6]), 
		 -> STR_13(CODE[10]), STR_11(CODE[6]), STR_8(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> main@combinedText_373(BANK1[20]), main@uartMessage_369(BANK1[8]), main@combinedText(BANK0[20]), main@uartMessage(BANK1[8]), 
		 -> main@rpmString(BANK1[5]), main@adcString1(BANK1[4]), main@lcdText(BANK1[9]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    incrementTime@time	PTR struct Time size(1) Largest target is 8
		 -> currentTime(BANK3[8]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 27
		 -> STR_33(CODE[24]), STR_32(CODE[24]), STR_29(CODE[27]), STR_28(CODE[26]), 
		 -> STR_26(CODE[13]), STR_24(CODE[14]), STR_22(CODE[10]), STR_20(CODE[9]), 
		 -> STR_18(CODE[15]), STR_16(CODE[10]), STR_14(CODE[9]), main@rpmString(BANK1[5]), 
		 -> STR_12(CODE[5]), main@adcString1(BANK1[4]), STR_10(CODE[10]), STR_9(CODE[3]), 
		 -> main@lcdText(BANK1[9]), STR_7(CODE[21]), STR_6(CODE[20]), STR_5(CODE[3]), 
		 -> STR_4(CODE[15]), STR_3(CODE[16]), STR_2(CODE[14]), STR_1(CODE[19]), 

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 20
		 -> STR_31(CODE[5]), STR_30(CODE[5]), STR_27(CODE[5]), main@combinedText_373(BANK1[20]), 
		 -> main@uartMessage_369(BANK1[8]), STR_21(CODE[5]), main@combinedText(BANK0[20]), main@uartMessage(BANK1[8]), 
		 -> STR_15(CODE[5]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _timer_isr in COMMON

    _timer_isr->_writeEEPROM

Critical Paths under _main in BANK0

    _main->___flmul
    _yagBakim->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _sprintf->___lwmod
    ___wmul->_readEEPROM
    ___lwmod->___lwdiv
    ___flmul->___fldiv
    ___awmod->___fltol
    ___awdiv->___fltol
    ___awdiv->___wmul
    _UART_Write_Text->_UART_Write
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _timer_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer_isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer_isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               128   128      0   27500
                                             52 BANK0     26    26      0
                                              0 BANK1     80    80      0
                                              0 BANK3     20    20      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                    _UART_Initialize
                    _UART_Write_Text
                            ___awdiv
                            ___awmod
                            ___fldiv
                            ___flmul
                            ___fltol
                             ___wmul
                           ___xxtofl
                         _readEEPROM
                            _sprintf
                           _yagBakim
 ---------------------------------------------------------------------------------
 (1) _yagBakim                                             2     2      0    5472
                                             12 BANK0      2     2      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2    2544
                                              5 BANK0      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     254
                                              1 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1    2705
                                              4 BANK0      6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             31    21     10    4245
                                             12 BANK0     23    13     10
                            ___fltol (ARG)
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1036
                                              4 BANK0      6     2      4
                         _readEEPROM (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     412
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     421
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _readEEPROM                                           4     2      2     554
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     550
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     685
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2721
                                             26 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1425
                                              0 BANK0     26    18      8
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4    1153
                                             10 BANK0      6     2      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     985
                                             10 BANK0      8     4      4
                            ___fltol (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      7     5      2     971
                                              1 BANK0      7     5      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                              4 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     155
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0     124
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _timer_isr                                            3     3      0     905
                                              4 COMMON     3     3      0
                      _incrementTime
                        _writeEEPROM
 ---------------------------------------------------------------------------------
 (6) _writeEEPROM                                          4     0      4     652
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (6) _incrementTime                                        3     3      0     253
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _UART_Initialize
   _UART_Write_Text
     _UART_Write
   ___awdiv
     ___fltol (ARG)
     ___wmul (ARG)
       _readEEPROM (ARG)
   ___awmod
     ___fltol (ARG)
   ___fldiv
   ___flmul
     __Umul8_16
     ___fldiv (ARG)
     ___xxtofl (ARG)
   ___fltol
   ___wmul
   ___xxtofl
   _readEEPROM
   _sprintf
     ___fltol (ARG)
     ___lwdiv (ARG)
     ___lwmod (ARG)
       ___lwdiv (ARG)
     ___wmul (ARG)
     _isdigit (ARG)
   _yagBakim
     _Lcd_Clear
     _Lcd_Set_Cursor
     _Lcd_Write_String

 _timer_isr (ROOT)
   _incrementTime
   _writeEEPROM

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      C3       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60     14      1C       9       29.2%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      C3      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Sep 28 11:04:00 2023

            ___fldiv@aexp 0039              ___fldiv@bexp 0038                         pc 0002  
            ___fldiv@sign 0031                        l13 1187                        l16 1FF5  
                      l25 12E6                        l19 1FFF                        _RD 0C60  
                      _WR 0C61              ___awdiv@sign 002F                        fsr 0004  
     ___wmul@multiplicand 0026       __Umul8_16@word_mpld 0026                       l210 0462  
                     l211 03CD                       l140 11F3                       l141 11F4  
                     l142 11FA                       l222 0E00                       l143 11FB  
                     l207 0C3D                       l144 1201                       l152 1FF1  
                     l161 14DF                       l241 026E                       l233 0233  
                     l225 0FFA                       l146 1202                       l138 11EC  
                     l410 080E                       l170 1372                       l139 11ED  
                     l251 02A1                       l243 0299                       l219 0D77  
                     l412 0826                       l164 1264                       l228 008B  
                     l149 11E2                       l261 03CB                       l237 01D5  
                     l229 01CD                       l406 0BEC                       l158 13BE  
                     l238 0232                       l175 07FB                       l247 033A  
                     l265 045F                       l257 03BE                       l266 0427  
                     l603 1612                       l259 03BA                       l188 11B0  
                     l380 0AAF                       l606 1627                       l382 0A85  
                     l368 0A10                       l563 15AF                       l820 122B  
                     l805 0719                       l389 0B17                       l576 1419  
                     l761 09F5                       l818 1219                       l682 132C  
                     l843 164C                       l596 1627                       l692 12A0  
                     l781 09E1                       l845 16E1                       l775 096F  
                     l759 087D                       l863 119B                       l856 16AB  
                     l857 16B7                       l799 07A9                       _GIE 005F  
                     _RB0 0030                       _RB1 0031                       _RB2 0032  
                     _RA4 002C                       _RC0 0038                       _RB3 0033  
                     _RC1 0039                       _RB4 0034                       _RC2 003A  
                     _RD0 0040                       _RB5 0035                       _RC3 003B  
                     _RE0 0048                       _RE1 0049                       _RE2 004A  
                     fsr0 0004                       indf 0000              ___awmod@sign 002F  
            ___flmul@aexp 004C              ___flmul@bexp 004D              ___flmul@sign 0047  
            ___flmul@temp 0052              ___flmul@prod 004E               main@lcdText 00B4  
            ___fltol@exp1 0029                      l2311 120F                      l2313 1213  
                    l4001 0021                      l2315 1222                      l2307 1206  
                    l4011 00EB                      l4003 0057                      l2317 1227  
                    l2309 1208                      l4101 033E                      l4021 0144  
                    l4013 00F6                      l4005 005D                      l4103 0346  
                    l4111 038E                      l4031 01A6                      l4023 014F  
                    l4015 0125                      l4007 0061                      l3401 11F1  
                    l2601 15BB                      l4201 0A27                      l4121 03B6  
                    l4113 0396                      l4105 0351                      l4041 01D1  
                    l4033 01AA                      l4025 018B                      l4017 012F  
                    l4009 00E1                      l3403 11F8                      l3411 11D1  
                    l2611 15E0                      l4203 0AA1                      l4131 03E4  
                    l4123 03C2                      l4115 03A1                      l4107 036A  
                    l4051 01FB                      l4043 01D9                      l4035 01AE  
                    l4027 0195                      l4019 013A                      l3405 11FF  
                    l3413 11D4                      l2701 08D8                      l2621 15EE  
                    l2613 15E2                      l2605 15C4                      l2381 11A2  
                    l3501 12F1                      l3421 1236                      l4133 0404  
                    l4125 03C6                      l4109 0382                      l4061 023F  
                    l4053 020A                      l4045 01DD                      l4117 03AC  
                    l4037 01B6                      l4029 01A0                      l3415 11DF  
                    l3407 11CA                      l2703 08DD                      l2711 08FD  
                    l2631 1607                      l2623 15F7                      l2615 15E6  
                    l2607 15D7                      l3511 1314                      l3503 12F4  
                    l3431 1257                      l3423 1244                      l4143 042B  
                    l4135 0407                      l4127 03D1                      l4119 03B2  
                    l4071 027A                      l4063 024A                      l4055 020E  
                    l4047 01E5                      l4039 01C1                      l3409 11CB  
                    l2721 0928                      l2713 090F                      l2705 08EF  
                    l2641 0830                      l2801 048F                      l2633 1617  
                    l2625 1600                      l2609 15D8                      l3513 131A  
                    l3505 12FB                      l3601 0A11                      l3441 1FE5  
                    l3433 125A                      l3425 1247                      l3417 122F  
                    l4145 0434                      l4137 0415                      l4129 03D9  
                    l4081 02A9                      l4073 0282                      l4065 0262  
                    l4057 0226                      l4049 01F0                      l2731 0940  
                    l2723 0930                      l2715 0910                      l2707 08F3  
                    l2651 0847                      l2643 0834                      l2811 04A2  
                    l2803 0494                      l2635 161C                      l2379 119C  
                    l3515 131B                      l3507 12FF                      l3531 127B  
                    l3523 1265                      l3611 0A42                      l3451 1391  
                    l3443 1376                      l3435 1261                      l3427 124E  
                    l3419 1235                      l4147 043E                      l4139 0418  
                    l4091 02EA                      l4083 02B1                      l4075 028D  
                    l4067 0272                      l4059 0237                      l3437 1FF5  
                    l2741 0958                      l2733 0949                      l2725 0932  
                    l2717 091E                      l2709 08F4                      l2661 085B  
                    l2653 0848                      l2645 0835                      l2637 0827  
                    l2901 0754                      l2821 04BE                      l2813 04A7  
                    l2805 0498                      l3517 1322                      l3509 1303  
                    l3533 127F                      l3525 126D                      l3541 129C  
                    l3613 0A57                      l3621 0A87                      l3605 0A17  
                    l3701 0BD2                      l3461 13B6                      l3445 137B  
                    l3453 139A                      l3429 1251                      l4149 0453  
                    l4093 02F7                      l4085 02BC                      l4077 029D  
                    l4069 0276                      l3439 1FFB                      l3551 12A6  
                    l2751 0987                      l2743 096C                      l2727 093B  
                    l2735 094F                      l2719 0922                      l2671 0872  
                    l2663 085F                      l2647 083A                      l2655 084A  
                    l2639 082C                      l2911 0787                      l2903 0761  
                    l2831 04E7                      l2823 04C3                      l2815 04AF  
                    l2807 049C                      l3519 1328                      l3535 1289  
                    l3527 1270                      l3471 118B                      l3631 0AC7  
                    l3623 0AB3                      l3703 0BE8                      l3615 0A6C  
                    l3607 0A2C                      l3455 13A0                      l3447 1388  
                    l3463 132D                      l4095 02FD                      l4087 02D5  
                    l4079 02A5                      l3561 148E                      l3545 1178  
                    l3553 12C2                      l3721 1553                      l2761 09C5  
                    l2753 098B                      l2737 0953                      l2729 093F  
                    l2681 0895                      l2673 0873                      l2665 0860  
                    l2657 0852                      l2649 083F                      l2921 07A1  
                    l2913 0793                      l2905 076C                      l2841 0580  
                    l2833 0502                      l2817 04B1                      l2809 049D  
                    l3537 128F                      l3529 1277                      l3473 118C  
                    l3625 0ABB                      l3633 0ACD                      l3617 0A72  
                    l3609 0A3E                      l3457 13AD                      l3449 138B  
                    l3465 1332                      l4097 0316                      l4089 02E2  
                    l3801 16E6                      l3563 149F                      l3547 1184  
                    l3555 12CA                      l3731 1564                      l3723 1555  
                    l3715 1547                      l2771 09E9                      l2763 09D4  
                    l2755 09A4                      l2747 0974                      l2739 0954  
                    l2691 08AC                      l2667 0865                      l2675 0875  
                    l2659 0857                      l2915 0797                      l2907 077B  
                    l2851 05DF                      l2843 0589                      l2835 051E  
                    l2827 04CC                      l2819 04B9                      l2931 1644  
                    l3539 1296                      l3491 081C                      l3483 0800  
                    l3475 1192                      l3651 0B05                      l3643 0ADB  
                    l3635 0AD5                      l3627 0ABF                      l3459 13B0  
                    l3467 134E                      l4099 032E                      l3811 16EB  
                    l3803 16E7                      l3397 11E6                      l3565 14A5  
                    l3557 147D                      l3549 12A1                      l3741 157C  
                    l3733 156A                      l3725 1559                      l3717 154A  
                    l2773 09EB                      l2765 09D8                      l2749 0979  
                    l2757 09AA                      l2693 08BE                      l2677 0885  
                    l2685 089E                      l2669 086A                      l2917 0798  
                    l2909 0785                      l2861 0677                      l2853 05F6  
                    l2845 0597                      l2837 0548                      l2829 04DA  
                    l2941 1664                      l2933 1654                      l2925 162B  
                    l3493 0822                      l3485 0804                      l3477 1198  
                    l3661 0B32                      l3653 0B0B                      l3629 0AC3  
                    l3637 0AD9                      l3469 1356                      l3581 07DD  
                    l3901 17E9                      l3821 16F0                      l3813 16EC  
                    l3805 16E8                      l3399 11EA                      l3559 1483  
                    l3743 158D                      l3735 156D                      l3751 15A1  
                    l3727 155E                      l3719 154E                      l2775 09EF  
                    l2767 09E0                      l2759 09B7                      l2695 08C6  
                    l2687 08A3                      l2679 0891                      l2919 079D  
                    l2871 06E5                      l2863 069D                      l2855 0613  
                    l2847 05B4                      l2839 0564                      l2791 0473  
                    l2783 0465                      l2599 15B0                      l2951 168F  
                    l2943 166D                      l2927 1630                      l3487 0808  
                    l3479 119A                      l3671 0B4B                      l3663 0B36  
                    l3655 0B11                      l3647 0AFB                      l3591 09F9  
                    l3583 07E0                      l3575 07B3                      l3567 07AA  
                    l3911 17EE                      l3903 17EA                      l3831 16FB  
                    l3823 16F1                      l3815 16ED                      l3807 16E9  
                    l3753 15A6                      l3745 1593                      l3737 1574  
                    l3729 1562                      l3761 13C2                      l2769 09E5  
                    l2697 08CE                      l2881 06FD                      l2873 06E9  
                    l2865 06C5                      l2857 063E                      l2849 05C2  
                    l2793 0478                      l2785 046A                      l2961 16B9  
                    l2953 1696                      l2945 1674                      l2937 165D  
                    l2929 1634                      l3497 12E7                      l3489 0815  
                    l3681 0B6C                      l3673 0B50                      l3665 0B3C  
                    l3657 0B22                      l3649 0AFF                      l3593 09FC  
                    l3585 07E6                      l3577 07BD                      l3569 07AF  
                    l3921 0BFB                      l3913 17F4                      l3905 17EB  
                    l3841 170F                      l3833 16FC                      l3825 16F6  
                    l3817 16EE                      l3809 16EA                      l3755 15AB  
                    l3747 1594                      l3739 1578                      l3771 13D6  
                    l3763 13C6                      l2699 08D6                      l2891 071E  
                    l2883 06FE                      l2875 06EA                      l2867 06CE  
                    l2859 064C                      l2795 047D                      l2787 046E  
                    l2963 16CF                      l2955 16A1                      l2947 1678  
                    l2939 1660                      l3499 12EB                      l3683 0B70  
                    l3675 0B54                      l3691 0B8B                      l3667 0B41  
                    l3659 0B2E                      l3595 0A02                      l3587 07F3  
                    l3579 07C8                      l3931 0C2C                      l3923 0BFF  
                    l3915 0BED                      l3907 17EC                      l3851 176C  
                    l3843 1712                      l3835 16FD                      l3827 16F9  
                    l3819 16EF                      l3749 159B                      l3781 13EE  
                    l3773 13DC                      l3765 13CB                      l2893 0723  
                    l2885 0702                      l2877 06F3                      l2869 06DC  
                    l2797 0485                      l2789 0472                      l2965 16D4  
                    l2957 16A5                      l2949 1686                      l3693 0B8E  
                    l3685 0B7C                      l3669 0B45                      l3677 0B61  
                    l3597 0A07                      l3589 07F8                      l3941 0C97  
                    l3917 0BF3                      l3925 0C04                      l3909 17ED  
                    l3861 1773                      l3853 176F                      l3845 1727  
                    l3837 16FE                      l3829 16FA                      l3791 1410  
                    l3783 13F8                      l3775 13DF                      l3767 13CD  
                    l3759 13BF                      l2895 0731                      l2887 0716  
                    l2879 06F9                      l2799 0487                      l2967 16D8  
                    l2959 16AF                      l3695 0BC0                      l3687 0B82  
                    l3679 0B67                      l3599 0A0C                      l3951 0CE5  
                    l3943 0CBB                      l3935 0C45                      l3927 0C0C  
                    l3919 0BF7                      l3871 1785                      l3863 1774  
                    l3855 1770                      l3847 173E                      l3839 1700  
                    l3793 1415                      l3785 13FE                      l3777 13E6  
                    l3769 13D1                      l2897 0735                      l2969 16D9  
                    l3697 0BC5                      l3689 0B87                      l3961 0D53  
                    l3953 0D04                      l3945 0CC5                      l3937 0C49  
                    l3929 0C17                      l3881 17BA                      l3873 1790  
                    l3865 1775                      l3857 1771                      l3849 1755  
                    l3787 1405                      l3779 13EA                      l2899 074E  
                    l3699 0BC9                      l3971 0D74                      l3963 0D5C  
                    l3955 0D0C                      l3947 0CD0                      l3939 0C5E  
                    l3891 17DA                      l3883 17C8                      l3875 179A  
                    l3867 1776                      l3859 1772                      l3789 140B  
                    l3981 0E04                      l3973 0D7B                      l3965 0D62  
                    l3957 0D2B                      l3949 0CDA                      l3893 17DD  
                    l3885 17CD                      l3877 17A5                      l3869 177B  
                    l3797 16E2                      l3991 0F34                      l3983 0E0A  
                    l3975 0DF0                      l3967 0D67                      l3959 0D33  
                    l3895 17E1                      l3887 17D1                      l3879 17AF  
                    l3799 16E5                      l3993 0FB0                      l3985 0E5E  
                    l3977 0DF6                      l3969 0D6D                      l3897 17E7  
                    l3889 17D6                      l3995 0FEA                      l3987 0E9D  
                    l3979 0DFD                      l3899 17E8                      l3997 0FF0  
                    l3989 0ED7                      l3999 0FF7                      STR_1 10AA  
                    STR_2 10F9                      STR_3 10BD                      STR_4 10DC  
                    STR_5 116F                      STR_6 1096                      STR_7 1081  
                    STR_8 1114                      STR_9 10D9                      _T0IF 005A  
                    u3100 1617                      u3020 15BB                      u3101 1616  
                    u3021 15BA                      u3110 161C                      u3030 15D2  
                    u3111 161B                      u3200 08DD                      u3120 0834  
                    u3040 15E6                      u3201 08DC                      u3121 0833  
                    u3041 15E5                      u3130 083A                      u3050 15ED  
                    u3131 0839                      u3051 15EC                      u3035 15CD  
                    u3140 083F                      u3141 083E                      u3310 0953  
                    u3230 08F3                      u3150 085F                      u3070 15FF  
                    u3311 0952                      u3231 08F2                      u3215 08DF  
                    u3151 085E                      u3071 15FE                      u5000 157C  
                    u3400 09E9                      u3320 0958                      u3160 0865  
                    u3080 1606                      u5001 157B                      u3401 09E8  
                    u3321 0957                      u3305 0942                      u3225 08E8  
                    u3161 0864                      u3081 1605                      u3065 15EF  
                    u3330 096C                      u3250 090F                      u3170 086A  
                    u2530 1213                      u3410 0472                      u3331 096B  
                    u3251 090E                      u3171 0869                      u2531 1212  
                    u3411 0471                      u5020 158D                      u5100 13EE  
                    u3340 0973                      u3260 0928                      u3180 0885  
                    u3420 0478                      u5021 158C                      u5101 13ED  
                    u3341 0972                      u3261 0927                      u3245 08F6  
                    u3181 0884                      u3501 052C                      u3421 0477  
                    u5110 13F8                      u3350 0979                      u3270 0930  
                    u3190 08A3                      u2550 1227                      u3502 0533  
                    u3430 047D                      u5015 157D                      u5111 13F7  
                    u3351 0978                      u3271 092F                      u3255 090B  
                    u3191 08A2                      u2551 1226                      u3511 0556  
                    u3503 053A                      u3431 047C                      u3095 1609  
                    u5040 15A1                      u3360 098B                      u3600 0683  
                    u3512 055D                      u3440 049C                      u5200 0C45  
                    u5041 15A0                      u5025 1589                      u3361 098A  
                    u2545 121A                      u3521 0572                      u3513 0564  
                    u3441 049B                      u5201 0C42                      u4410 11EA  
                    u5050 15A6                      u5130 140B                      u3370 099A  
                    u3290 093F                      u3522 0579                      u3450 04A2  
                    u5210 0C49                      u4411 11E9                      u5051 15A5  
                    u5035 1595                      u5131 140A                      u5115 13F4  
                    u3291 093E                      u3611 068F                      u3523 0580  
                    u3451 04A1                      u5211 0C48                      u4420 11F1  
                    u5140 1410                      u5060 13C6                      u3380 09B7  
                    u3700 0716                      u3620 06AB                      u3612 0696  
                    u3460 04A7                      u5300 0E04                      u5220 0D04  
                    u4421 11F0                      u5141 140F                      u5125 13FF  
                    u5061 13C5                      u3381 09B6                      u3285 0934  
                    u3701 0715                      u3613 069D                      u3605 067E  
                    u3541 05A6                      u3461 04A6                      u5301 0E03  
                    u5221 0D03                      u4430 11F8                      u5070 13D1  
                    u3390 09D4                      u3710 071D                      u3542 05AD  
                    u3470 04BE                      u4510 133C                      u5310 0021  
                    u5230 0D0C                      u5150 0BED                      u4431 11F7  
                    u5071 13D0                      u3391 09D3                      u3375 0995  
                    u3711 071C                      u3631 06B7                      u3551 05D1  
                    u3543 05B4                      u3535 0582                      u3471 04BD  
                    u5311 0FFF                      u5231 0D0B                      u5151 17FD  
                    u4440 11FF                      u5080 13DC                      u3720 0723  
                    u3632 06BE                      u3552 05D8                      u3480 04C3  
                    u3800 1654                      u4600 12F1                      u4520 1360  
                    u5400 01DD                      u5320 005D                      u5240 0D2B  
                    u5160 0BF3                      u4441 11FE                      u5081 13DB  
                    u3385 09B3                      u3721 0722                      u3633 06C5  
                    u3625 06A6                      u3553 05DF                      u3481 04C2  
                    u3801 1653                      u4601 12F0                      u4505 13A6  
                    u5401 01DC                      u5321 005C                      u5241 0D2A  
                    u5161 0BF2                      u3730 0735                      u4530 1372  
                    u5410 01FB                      u5330 0061                      u5250 0D33  
                    u5170 0BF7                      u3395 09D0                      u3731 0734  
                    u3571 0605                      u3491 0510                      u4531 1371  
                    u5411 01FA                      u5331 0060                      u5251 0D32  
                    u5171 0BF6                      u4460 1FFB                      u3740 0744  
                    u3660 06E9                      u3572 060C                      u3492 0517  
                    u3900 16D4                      u3820 1673                      u4620 1303  
                    u4700 1289                      u4540 1192                      u5500 02A9  
                    u5420 020A                      u5340 01A6                      u5260 0D53  
                    u5180 0BFB                      u4461 1FFA                      u3661 06E8  
                    u3645 06C7                      u3581 0630                      u3573 0613  
                    u3565 05E1                      u3493 051E                      u3901 16D3  
                    u3821 1672                      u4621 1302                      u4701 1288  
                    u4541 1191                      u5501 02A8                      u5421 0209  
                    u5341 01A5                      u5261 0D52                      u5181 0BFA  
                    u3750 0761                      u3582 0637                      u3910 16D8  
                    u4550 1198                      u4470 137B                      u5510 02E2  
                    u5430 0237                      u5350 01AA                      u5270 0D5C  
                    u5190 0BFF                      u5095 13E0                      u3751 0760  
                    u3655 06DE                      u3591 065B                      u3583 063E  
                    u3911 16D7                      u3815 1665                      u4615 12F5  
                    u4551 1197                      u4471 137A                      u4455 1239  
                    u5511 02E1                      u5431 0236                      u5351 01A9  
                    u5271 0D5B                      u5191 0BFE                      u3760 077B  
                    u3680 06FD                      u3592 0662                      u3840 1695  
                    u4640 1314                      u4720 129C                      u4560 0808  
                    u4800 0AB3                      u5600 03D1                      u5520 02F7  
                    u5440 0272                      u5360 01AE                      u5280 0D62  
                    u3761 077A                      u3745 073F                      u3681 06FC  
                    u3593 0669                      u3841 1694                      u4641 1313  
                    u4721 129B                      u4705 1285                      u4561 0807  
                    u4801 0AB2                      u5601 03D0                      u5521 02F6  
                    u5441 0271                      u5361 01AD                      u5281 0D61  
                    u4730 12B0                      u3770 0797                      u3690 0702  
                    u4810 0AC3                      u4490 13A0                      u5610 042B  
                    u5530 033E                      u5450 0276                      u5370 01D1  
                    u5290 0D7B                      u3771 0796                      u3755 075D  
                    u3691 0701                      u3675 06EC                      u3835 1687  
                    u4635 1304                      u4715 1290                      u4811 0AC2  
                    u4491 139F                      u5611 042A                      u5531 033D  
                    u5515 02DE                      u5451 0275                      u5371 01D0  
                    u5291 0D7A                      u4740 12D4                      u3860 16A5  
                    u3780 1630                      u4660 1328                      u4900 0B60  
                    u4820 0AFA                      u5540 03B2                      u5460 027A  
                    u5380 01D5                      u3765 0777                      u3861 16A4  
                    u3781 162F                      u4661 1327                      u4645 1310  
                    u4901 0B5F                      u4821 0AF9                      u4485 1381  
                    u5541 03B1                      u5525 02F3                      u5461 0279  
                    u5381 01D4                      u4750 12E6                      u3870 16AB  
                    u3790 1634                      u4670 126D                      u4590 0822  
                    u4910 0B67                      u4830 0B05                      u5550 03B6  
                    u5470 029D                      u5390 01D9                      u4751 12E5  
                    u3871 16AA                      u3855 169A                      u3791 1633  
                    u4655 131C                      u4671 126C                      u4591 0821  
                    u4575 080F                      u4911 0B66                      u4831 0B04  
                    u5551 03B5                      u5471 029C                      u5391 01D8  
                    u3880 16AF                      u4920 0B7C                      u4840 0B0B  
                    u4760 07F3                      u5560 03BA                      u5480 02A1  
                    u3881 16AE                      u4585 0816                      u4921 0B7B  
                    u4841 0B0A                      u4825 0AF6                      u4761 07F2  
                    u5561 03B9                      u5481 02A0                      u3890 16C4  
                    u4690 127F                      u4930 0B82                      u4850 0B11  
                    u4770 0A02                      u5570 03C2                      u5490 02A5  
                    u4691 127E                      u4931 0B81                      u4851 0B10  
                    u4771 0A01                      u5707 124B                      u5571 03C1  
                    u5491 02A4                      u5627 1708                      u4940 0BD2  
                    u4860 0B22                      u4780 0A3E                      u5580 03C6  
                    u4685 1271                      u4941 0BD1                      u4861 0B21  
                    u4781 0A3D                      u5717 125E                      u4765 07EF  
                    u5581 03C5                      u5637 17C2                      u4950 0BE8  
                    u4870 0B36                      u4790 0A84                      u5590 03CA  
                    u5727 1489                      u3895 16BF                      u4951 0BE7  
                    u4871 0B35                      u4791 0A83                      u5591 03C9  
                    u5647 0C34                      u4960 154E                      u4880 0B3C  
                    u5737 149A                      u4961 154D                      u4881 0B3B  
                    u4865 0B1E                      u5657 0D71                      u4970 1559  
                    u4890 0B4B                      u5747 14AB                      u4971 1558  
                    u4891 0B4A                      u5667 0DFA                      u4980 156A  
                    u5757 11DA                      u4981 1569                      u5677 0FF4  
                    u5687 040F                      u5697 0420                      u4995 156E  
                    _TMR0 0001                      _TRMT 04C1                      _WREN 0C62  
       ?_Lcd_Write_String 0025                      _main 16E2                      btemp 007E  
                    start 000E        ??_Lcd_Write_String 0027           ___fldiv@new_exp 0032  
         __end_of_Lcd_Cmd 11E3               _writeEEPROM 11B1   __end_of_UART_Write_Text 12E7  
        ?_UART_Initialize 0070             ___fltol@sign1 0028        writeEEPROM@address 0070  
                   ?_main 0070           __end_of___fldiv 09F6           __end_of___awdiv 15B0  
                   _EEADR 010D                     STR_10 111F                     STR_11 115F  
                   STR_12 116A                     STR_20 1150                     STR_21 1165  
                   STR_13 113D                     STR_30 1165                     STR_14 1147  
                   STR_22 1133                     STR_31 1165                     STR_23 1159  
                   STR_15 1165                     STR_16 1129                     STR_24 10EB  
                   STR_32 1069                     STR_25 1159                     STR_17 1159  
                   STR_33 1051                     STR_26 1107                     STR_18 10CD  
                   STR_27 1165                     STR_19 1159                     STR_28 1037  
         __end_of___awmod 141A                     STR_29 101C           __end_of___flmul 07AA  
         __end_of___fltol 1628           ___awdiv@divisor 002A           __end_of___lwdiv 132D  
                   i1l201 1474                     i1l182 11C2                     i1l185 11C6  
         __end_of___lwmod 12A1                     i1l194 1546           ___awdiv@counter 002E  
                   _RCSTA 0018                     _SPBRG 0099                     _TRISB 0086  
                   _TRISD 0088                     _TXREG 0019                     _TXSTA 0098  
            main@realSaat 01A0               ?_UART_Write 0070           __end_of_dpowers 101C  
         __end_of_isdigit 119C             main@adcValue1 0192             main@adcValue2 00E2  
           main@adcValue3 00CD                     pclath 000A                     status 0003  
                   wtemp0 007E           __end_of_sprintf 0BED          __end_of_Lcd_Init 14E0  
        __end_of_Lcd_Port 1203           __initialization 0011              __end_of_main 0465  
                  ??_main 0054             main@ilkAcilis 0190                    _ADRESH 001E  
                  _ADRESL 009E                    _EEDATA 010C                    _EECON2 018D  
        ___awdiv@dividend 002C                    i1l2371 11BA                    i1l2373 11BF  
                  i1l2391 1539                    i1l2375 11C0                    i1l2367 11B1  
                  i1l2385 14E1                    i1l2377 11C1                    i1l2369 11B7  
                  i1l2387 14FB                    i1l2389 151A                    i1l2981 1430  
                  i1l2973 141A                    i1l2991 1465                    i1l2983 1432  
                  i1l2975 141E                    i1l2985 1438                    i1l2977 141F  
                  i1l2987 1447                    i1l2979 1429                    i1l2989 1456  
                  u260_20 11C6                    u260_21 11C5                    u261_20 14FB  
                  u261_21 14FA                    u262_20 151A                    u262_21 1519  
                  u263_20 1539                    u263_21 1538                    u392_20 141E  
                  u392_21 141D                    u393_20 1430                    u393_21 142F  
               ??_Lcd_Cmd 0021                    _TRISA0 0428                    _TRISA1 0429  
                  _TRISA2 042A                    _TRISA3 042B                    _TRISA4 042C  
                  _TRISC0 0438                    _TRISC1 0439                    _TRISA5 042D  
                  _TRISC2 043A                    _TRISD0 0440                    _TRISC3 043B  
                  _TRISE0 0448                    _TRISC4 043C                    _TRISE1 0449  
                  _TRISC5 043D                    _TRISE2 044A                    _TRISC6 043E  
                  _TRISC7 043F          __end_of___xxtofl 16E2                    ___wmul 0800  
               ??___fldiv 0028                 ??___awdiv 002E                 ??___awmod 002E  
               ??___flmul 0042          ?_UART_Write_Text 0021                 ??___fltol 0024  
           main@oranValue 00D1                 ??___lwdiv 0024                 ??___lwmod 002B  
        ___awdiv@quotient 0030           ___awmod@divisor 002A           ___awmod@counter 002E  
           _incrementTime 14E0          __end_of_yagBakim 07FC             main@rpmString 00DD  
               ??_isdigit 0020                    saved_w 007E            main@adcString1 00EC  
               ??_sprintf 0036           Lcd_Set_Cursor@a 0026           Lcd_Set_Cursor@b 0024  
         Lcd_Set_Cursor@y 0028           Lcd_Set_Cursor@z 0027              ___xxtofl@arg 002A  
            ___xxtofl@exp 0029              ___xxtofl@val 0020   __end_of__initialization 001D  
       __end_of_Lcd_Clear 1FF2                ___fltol@f1 0020           writeEEPROM@data 0072  
          __pcstackCOMMON 0070            ?_incrementTime 0070            _Lcd_Set_Cursor 1373  
       incrementTime@time 0072            _OPTION_REGbits 0081        main@gostermeliklcd 00D5  
               ?_Lcd_Init 0070                 ?_Lcd_Port 0070              sprintf@width 003F  
        main@combinedText 005A                __pbssBANK3 01A4         __end_of__Umul8_16 122C  
              __pmaintext 16E2              ?_writeEEPROM 0070                   ?___wmul 0024  
              __pintentry 0004    __end_of_Lcd_Set_Cursor 13BF          main@displayValue 01A2  
               ?___xxtofl 0020              ??_UART_Write 0020                ??_Lcd_Init 0024  
              ??_Lcd_Port 0020                __stringtab 1000            _Lcd_Write_Char 122C  
                 _Lcd_Cmd 11C7                _readEEPROM 119C                 ?_yagBakim 0070  
                 ___fldiv 0827                   ___awdiv 1547           ??_incrementTime 0070  
                 ___awmod 13BF                   ___flmul 0465                   ___fltol 15B0  
      __end_of_UART_Write 2000                   ___lwdiv 12E7                   ___lwmod 1265  
         ?_Lcd_Set_Cursor 0024                   __ptext1 07AA                   __ptext2 132D  
                 __ptext3 122C                   __ptext4 1373                   __ptext5 1FE5  
                 __ptext6 09F6                   __ptext7 1188                   __ptext8 0800  
                 __ptext9 1265                   _dpowers 1012                   _isdigit 1188  
              ??___xxtofl 0024          ___awmod@dividend 002C     main@negativeFeedValue 019E  
                 _sprintf 09F6    __end_of_Lcd_Write_Char 1265      end_of_initialization 001D  
              ??_yagBakim 002C         __end_of_timer_isr 147D                   psplit$0 A0028  
                 psplit$1 280029                 Lcd_Port@a 0020              __pstringtext 1000  
          UART_Write@data 0020             ___xxtofl@sign 0028               ___fldiv@grs 0034  
             ___fldiv@rem 002D      pnum$maintext_split_1 0028      pnum$maintext_split_2 0029  
       readEEPROM@address 0020           ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0025  
       Lcd_Write_String@i 002A               ___flmul@grs 0048                main@dakika 00E4  
              main@binler 0198                main@birler 00E8               ?_readEEPROM 0020  
              main@yuzler 0196                 _Lcd_Clear 1FE5            __end_of___wmul 0827  
        _Lcd_Write_String 132D       start_initialization 0011         ??_UART_Initialize 0020  
              ?_Lcd_Clear 0070                  ??___wmul 0028                 __Umul8_16 1203  
         Lcd_Write_Char@a 0024           Lcd_Write_Char@y 0023                 ___fldiv@a 0020  
               ___fldiv@b 0024                 ___flmul@a 003E                 ___flmul@b 003A  
             __pbssCOMMON 0077                 ___latbits 0002             __pcstackBANK0 0020  
           __pcstackBANK1 00A0             __pcstackBANK3 0190                  ?_Lcd_Cmd 0070  
             sprintf@flag 003E               sprintf@prec 003A                 _main$1027 00D9  
        ___lwdiv@dividend 0022  main@negativeDisplayValue 00EA          ??_Lcd_Set_Cursor 0025  
                ?___fldiv 0020                  ?___awdiv 002A                  ?___awmod 002A  
                ?___flmul 003A                  ?___fltol 0020                ?__Umul8_16 0020  
                ?___lwdiv 0020                  ?___lwmod 0027                  ?_isdigit 0070  
        ___lwdiv@quotient 0025                  ?_sprintf 002C         ??_UART_Write_Text 0023  
       interrupt_function 0004            ___wmul@product 0028                  Lcd_Cmd@a 0023  
             ??_Lcd_Clear 0024                 _timer_isr 141A     __end_of_incrementTime 1547  
              _ADCON0bits 001F               __stringbase 1012                _ADCON1bits 009F  
       ___wmul@multiplier 0024          ??_Lcd_Write_Char 0021                 main@onlar 00E6  
                _Lcd_Init 147D                  _Lcd_Port 11E3           main@integerPart 019A  
__end_of_Lcd_Write_String 1373              ??_readEEPROM 0022               _kesmeSayaci 0077  
             ??__Umul8_16 0022                ?_timer_isr 0070              pnum$maintext 000A  
      __end_of__stringtab 1012               _isdigit$836 0020           _UART_Initialize 1178  
             _currentTime 01A4                sprintf@val 003C                  ___xxtofl 1628  
               yagBakim@i 002C        __end_of_readEEPROM 11B1           ___lwdiv@divisor 0020  
         ___lwdiv@counter 0024                  __ptext10 12E7                  __ptext11 119C  
                __ptext20 1FF2                  __ptext12 1628                  __ptext21 1178  
                __ptext13 15B0                  __ptext22 147D                  __ptext14 0465  
                __ptext23 11C7                  __ptext15 1203                  __ptext24 11E3  
                __ptext16 0827                  __ptext25 141A                  __ptext17 13BF  
                __ptext26 11B1                  __ptext18 1547                  __ptext27 14E0  
                __ptext19 12A1       UART_Write_Text@text 0021                  _yagBakim 07AA  
           ??_writeEEPROM 0074           main@uartMessage 00BD                _INTCONbits 000B  
                isdigit@c 0021        Lcd_Write_Char@temp 0022                  intlevel1 0000  
               sprintf@ap 003B                 sprintf@sp 0042          ___lwmod@dividend 0029  
               stringcode 100A               ??_timer_isr 0074   __end_of_UART_Initialize 1188  
     main@uartMessage_369 00C5        Lcd_Set_Cursor@temp 0029      main@combinedText_373 00A0  
     __end_of_writeEEPROM 11C7    __Umul8_16@multiplicand 0020           _UART_Write_Text 12A1  
                sprintf@c 0041                  sprintf@f 002C           ___lwmod@divisor 0027  
         ___lwmod@counter 002B                  stringtab 1000                _UART_Write 1FF2  
        UART_Write_Text@i 0026      __Umul8_16@multiplier 0028         __Umul8_16@product 0024  
