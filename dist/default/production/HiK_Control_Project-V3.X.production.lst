

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Oct 10 12:00:10 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    47                           	psect	maintext_split_1,global,class=CODE,split=1,delta=2
    48                           	psect	maintext_split_2,global,class=CODE,split=1,delta=2
    49                           	dabs	1,0x7E,2
    50     0000                     
    51                           ; Generated 22/03/2023 GMT
    52                           ; 
    53                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution. Publication is not required when
    67                           ;        this file is used in an embedded application.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC16F877A Definitions
    83                           ; 
    84                           ; SFR Addresses
    85     0000                     	;# 
    86     0001                     	;# 
    87     0002                     	;# 
    88     0003                     	;# 
    89     0004                     	;# 
    90     0005                     	;# 
    91     0006                     	;# 
    92     0007                     	;# 
    93     0008                     	;# 
    94     0009                     	;# 
    95     000A                     	;# 
    96     000B                     	;# 
    97     000C                     	;# 
    98     000D                     	;# 
    99     000E                     	;# 
   100     000E                     	;# 
   101     000F                     	;# 
   102     0010                     	;# 
   103     0011                     	;# 
   104     0012                     	;# 
   105     0013                     	;# 
   106     0014                     	;# 
   107     0015                     	;# 
   108     0015                     	;# 
   109     0016                     	;# 
   110     0017                     	;# 
   111     0018                     	;# 
   112     0019                     	;# 
   113     001A                     	;# 
   114     001B                     	;# 
   115     001B                     	;# 
   116     001C                     	;# 
   117     001D                     	;# 
   118     001E                     	;# 
   119     001F                     	;# 
   120     0081                     	;# 
   121     0085                     	;# 
   122     0086                     	;# 
   123     0087                     	;# 
   124     0088                     	;# 
   125     0089                     	;# 
   126     008C                     	;# 
   127     008D                     	;# 
   128     008E                     	;# 
   129     0091                     	;# 
   130     0092                     	;# 
   131     0093                     	;# 
   132     0094                     	;# 
   133     0098                     	;# 
   134     0099                     	;# 
   135     009C                     	;# 
   136     009D                     	;# 
   137     009E                     	;# 
   138     009F                     	;# 
   139     010C                     	;# 
   140     010D                     	;# 
   141     010E                     	;# 
   142     010F                     	;# 
   143     018C                     	;# 
   144     018D                     	;# 
   145     0000                     	;# 
   146     0001                     	;# 
   147     0002                     	;# 
   148     0003                     	;# 
   149     0004                     	;# 
   150     0005                     	;# 
   151     0006                     	;# 
   152     0007                     	;# 
   153     0008                     	;# 
   154     0009                     	;# 
   155     000A                     	;# 
   156     000B                     	;# 
   157     000C                     	;# 
   158     000D                     	;# 
   159     000E                     	;# 
   160     000E                     	;# 
   161     000F                     	;# 
   162     0010                     	;# 
   163     0011                     	;# 
   164     0012                     	;# 
   165     0013                     	;# 
   166     0014                     	;# 
   167     0015                     	;# 
   168     0015                     	;# 
   169     0016                     	;# 
   170     0017                     	;# 
   171     0018                     	;# 
   172     0019                     	;# 
   173     001A                     	;# 
   174     001B                     	;# 
   175     001B                     	;# 
   176     001C                     	;# 
   177     001D                     	;# 
   178     001E                     	;# 
   179     001F                     	;# 
   180     0081                     	;# 
   181     0085                     	;# 
   182     0086                     	;# 
   183     0087                     	;# 
   184     0088                     	;# 
   185     0089                     	;# 
   186     008C                     	;# 
   187     008D                     	;# 
   188     008E                     	;# 
   189     0091                     	;# 
   190     0092                     	;# 
   191     0093                     	;# 
   192     0094                     	;# 
   193     0098                     	;# 
   194     0099                     	;# 
   195     009C                     	;# 
   196     009D                     	;# 
   197     009E                     	;# 
   198     009F                     	;# 
   199     010C                     	;# 
   200     010D                     	;# 
   201     010E                     	;# 
   202     010F                     	;# 
   203     018C                     	;# 
   204     018D                     	;# 
   205     0000                     	;# 
   206     0001                     	;# 
   207     0002                     	;# 
   208     0003                     	;# 
   209     0004                     	;# 
   210     0005                     	;# 
   211     0006                     	;# 
   212     0007                     	;# 
   213     0008                     	;# 
   214     0009                     	;# 
   215     000A                     	;# 
   216     000B                     	;# 
   217     000C                     	;# 
   218     000D                     	;# 
   219     000E                     	;# 
   220     000E                     	;# 
   221     000F                     	;# 
   222     0010                     	;# 
   223     0011                     	;# 
   224     0012                     	;# 
   225     0013                     	;# 
   226     0014                     	;# 
   227     0015                     	;# 
   228     0015                     	;# 
   229     0016                     	;# 
   230     0017                     	;# 
   231     0018                     	;# 
   232     0019                     	;# 
   233     001A                     	;# 
   234     001B                     	;# 
   235     001B                     	;# 
   236     001C                     	;# 
   237     001D                     	;# 
   238     001E                     	;# 
   239     001F                     	;# 
   240     0081                     	;# 
   241     0085                     	;# 
   242     0086                     	;# 
   243     0087                     	;# 
   244     0088                     	;# 
   245     0089                     	;# 
   246     008C                     	;# 
   247     008D                     	;# 
   248     008E                     	;# 
   249     0091                     	;# 
   250     0092                     	;# 
   251     0093                     	;# 
   252     0094                     	;# 
   253     0098                     	;# 
   254     0099                     	;# 
   255     009C                     	;# 
   256     009D                     	;# 
   257     009E                     	;# 
   258     009F                     	;# 
   259     010C                     	;# 
   260     010D                     	;# 
   261     010E                     	;# 
   262     010F                     	;# 
   263     018C                     	;# 
   264     018D                     	;# 
   265                           
   266                           	psect	idataCOMMON
   267     0807                     __pidataCOMMON:
   268                           
   269                           ;initializer for _epromBaslaAdress
   270     0807  3401               	retlw	1
   271     0808  3400               	retlw	0
   272                           
   273                           	psect	stringtext
   274     1000                     __pstringtext:
   275     1000                     stringtab:
   276     1000                     __stringtab:
   277                           
   278                           ;	String table - string pointers are 2 bytes each
   279     1000  1BFF               	btfsc	btemp+1,7
   280     1001  280A               	ljmp	stringcode
   281     1002  1383               	bcf	3,7
   282     1003  187F               	btfsc	btemp+1,0
   283     1004  1783               	bsf	3,7
   284     1005  0800               	movf	0,w
   285     1006  0A84               	incf	4,f
   286     1007  1903               	skipnz
   287     1008  0AFF               	incf	btemp+1,f
   288     1009  0008               	return
   289     100A                     stringcode:
   290     100A  087F               	movf	btemp+1,w
   291     100B  397F               	andlw	127
   292     100C  008A               	movwf	10
   293     100D  0804               	movf	4,w
   294     100E  0A84               	incf	4,f
   295     100F  1903               	skipnz
   296     1010  0AFF               	incf	btemp+1,f
   297     1011  0082               	movwf	2
   298     1012                     __stringbase:
   299     1012                     __end_of__stringtab:
   300     1012                     _dpowers:
   301     1012  3401               	retlw	1
   302     1013  3400               	retlw	0
   303     1014  340A               	retlw	10
   304     1015  3400               	retlw	0
   305     1016  3464               	retlw	100
   306     1017  3400               	retlw	0
   307     1018  34E8               	retlw	232
   308     1019  3403               	retlw	3
   309     101A  3410               	retlw	16
   310     101B  3427               	retlw	39
   311     101C                     __end_of_dpowers:
   312     001E                     _ADRESH	set	30
   313     001F                     _ADCON0bits	set	31
   314     000B                     _INTCONbits	set	11
   315     0001                     _TMR0	set	1
   316     0019                     _TXREG	set	25
   317     0018                     _RCSTA	set	24
   318     0040                     _RD0	set	64
   319     003B                     _RC3	set	59
   320     0049                     _RE1	set	73
   321     0038                     _RC0	set	56
   322     003A                     _RC2	set	58
   323     0048                     _RE0	set	72
   324     004A                     _RE2	set	74
   325     0039                     _RC1	set	57
   326     005A                     _T0IF	set	90
   327     005F                     _GIE	set	95
   328     002C                     _RA4	set	44
   329     0034                     _RB4	set	52
   330     0035                     _RB5	set	53
   331     0030                     _RB0	set	48
   332     0031                     _RB1	set	49
   333     0032                     _RB2	set	50
   334     0033                     _RB3	set	51
   335     009E                     _ADRESL	set	158
   336     009F                     _ADCON1bits	set	159
   337     0081                     _OPTION_REGbits	set	129
   338     0088                     _TRISD	set	136
   339     0086                     _TRISB	set	134
   340     0099                     _SPBRG	set	153
   341     0098                     _TXSTA	set	152
   342     043D                     _TRISC5	set	1085
   343     043C                     _TRISC4	set	1084
   344     042D                     _TRISA5	set	1069
   345     0428                     _TRISA0	set	1064
   346     043F                     _TRISC7	set	1087
   347     043E                     _TRISC6	set	1086
   348     042B                     _TRISA3	set	1067
   349     042A                     _TRISA2	set	1066
   350     0429                     _TRISA1	set	1065
   351     0440                     _TRISD0	set	1088
   352     043B                     _TRISC3	set	1083
   353     0438                     _TRISC0	set	1080
   354     044A                     _TRISE2	set	1098
   355     043A                     _TRISC2	set	1082
   356     0439                     _TRISC1	set	1081
   357     0449                     _TRISE1	set	1097
   358     0448                     _TRISE0	set	1096
   359     042C                     _TRISA4	set	1068
   360     04C1                     _TRMT	set	1217
   361     010C                     _EEDATA	set	268
   362     010D                     _EEADR	set	269
   363     018D                     _EECON2	set	397
   364     0C60                     _RD	set	3168
   365     0C61                     _WR	set	3169
   366     0C62                     _WREN	set	3170
   367     101C                     STR_29:
   368     101C  3420               	retlw	32	;' '
   369     101D  3420               	retlw	32	;' '
   370     101E  3420               	retlw	32	;' '
   371     101F  3449               	retlw	73	;'I'
   372     1020  344C               	retlw	76	;'L'
   373     1021  3445               	retlw	69	;'E'
   374     1022  3452               	retlw	82	;'R'
   375     1023  344C               	retlw	76	;'L'
   376     1024  3445               	retlw	69	;'E'
   377     1025  344D               	retlw	77	;'M'
   378     1026  3445               	retlw	69	;'E'
   379     1027  3420               	retlw	32	;' '
   380     1028  3448               	retlw	72	;'H'
   381     1029  3441               	retlw	65	;'A'
   382     102A  3454               	retlw	84	;'T'
   383     102B  3441               	retlw	65	;'A'
   384     102C  3453               	retlw	83	;'S'
   385     102D  3449               	retlw	73	;'I'
   386     102E  3420               	retlw	32	;' '
   387     102F  3420               	retlw	32	;' '
   388     1030  3420               	retlw	32	;' '
   389     1031  3420               	retlw	32	;' '
   390     1032  3420               	retlw	32	;' '
   391     1033  3420               	retlw	32	;' '
   392     1034  3420               	retlw	32	;' '
   393     1035  3420               	retlw	32	;' '
   394     1036  3400               	retlw	0
   395     1037                     STR_28:
   396     1037  3420               	retlw	32	;' '
   397     1038  3420               	retlw	32	;' '
   398     1039  3420               	retlw	32	;' '
   399     103A  3446               	retlw	70	;'F'
   400     103B  3445               	retlw	69	;'E'
   401     103C  3445               	retlw	69	;'E'
   402     103D  3444               	retlw	68	;'D'
   403     103E  3420               	retlw	32	;' '
   404     103F  3452               	retlw	82	;'R'
   405     1040  3441               	retlw	65	;'A'
   406     1041  3454               	retlw	84	;'T'
   407     1042  3445               	retlw	69	;'E'
   408     1043  3420               	retlw	32	;' '
   409     1044  3445               	retlw	69	;'E'
   410     1045  3452               	retlw	82	;'R'
   411     1046  3452               	retlw	82	;'R'
   412     1047  344F               	retlw	79	;'O'
   413     1048  3452               	retlw	82	;'R'
   414     1049  3420               	retlw	32	;' '
   415     104A  3420               	retlw	32	;' '
   416     104B  3420               	retlw	32	;' '
   417     104C  3420               	retlw	32	;' '
   418     104D  3420               	retlw	32	;' '
   419     104E  3420               	retlw	32	;' '
   420     104F  3420               	retlw	32	;' '
   421     1050  3400               	retlw	0
   422     1051                     STR_33:
   423     1051  3420               	retlw	32	;' '
   424     1052  3420               	retlw	32	;' '
   425     1053  3420               	retlw	32	;' '
   426     1054  3444               	retlw	68	;'D'
   427     1055  344F               	retlw	79	;'O'
   428     1056  344E               	retlw	78	;'N'
   429     1057  344D               	retlw	77	;'M'
   430     1058  3445               	retlw	69	;'E'
   431     1059  3420               	retlw	32	;' '
   432     105A  3448               	retlw	72	;'H'
   433     105B  3441               	retlw	65	;'A'
   434     105C  3454               	retlw	84	;'T'
   435     105D  3441               	retlw	65	;'A'
   436     105E  3453               	retlw	83	;'S'
   437     105F  3449               	retlw	73	;'I'
   438     1060  3420               	retlw	32	;' '
   439     1061  3420               	retlw	32	;' '
   440     1062  3420               	retlw	32	;' '
   441     1063  3420               	retlw	32	;' '
   442     1064  3420               	retlw	32	;' '
   443     1065  3420               	retlw	32	;' '
   444     1066  3420               	retlw	32	;' '
   445     1067  3420               	retlw	32	;' '
   446     1068  3400               	retlw	0
   447     1069                     STR_32:
   448     1069  3420               	retlw	32	;' '
   449     106A  3420               	retlw	32	;' '
   450     106B  3420               	retlw	32	;' '
   451     106C  3452               	retlw	82	;'R'
   452     106D  344F               	retlw	79	;'O'
   453     106E  3454               	retlw	84	;'T'
   454     106F  3441               	retlw	65	;'A'
   455     1070  3454               	retlw	84	;'T'
   456     1071  3449               	retlw	73	;'I'
   457     1072  344F               	retlw	79	;'O'
   458     1073  344E               	retlw	78	;'N'
   459     1074  3420               	retlw	32	;' '
   460     1075  3445               	retlw	69	;'E'
   461     1076  3452               	retlw	82	;'R'
   462     1077  3452               	retlw	82	;'R'
   463     1078  344F               	retlw	79	;'O'
   464     1079  3452               	retlw	82	;'R'
   465     107A  3420               	retlw	32	;' '
   466     107B  3420               	retlw	32	;' '
   467     107C  3420               	retlw	32	;' '
   468     107D  3420               	retlw	32	;' '
   469     107E  3420               	retlw	32	;' '
   470     107F  3420               	retlw	32	;' '
   471     1080  3400               	retlw	0
   472     1081                     STR_7:
   473     1081  3450               	retlw	80	;'P'
   474     1082  3455               	retlw	85	;'U'
   475     1083  3454               	retlw	84	;'T'
   476     1084  3420               	retlw	32	;' '
   477     1085  3449               	retlw	73	;'I'
   478     1086  3454               	retlw	84	;'T'
   479     1087  3420               	retlw	32	;' '
   480     1088  3449               	retlw	73	;'I'
   481     1089  344E               	retlw	78	;'N'
   482     108A  3420               	retlw	32	;' '
   483     108B  3453               	retlw	83	;'S'
   484     108C  3454               	retlw	84	;'T'
   485     108D  344F               	retlw	79	;'O'
   486     108E  3450               	retlw	80	;'P'
   487     108F  3420               	retlw	32	;' '
   488     1090  3453               	retlw	83	;'S'
   489     1091  3454               	retlw	84	;'T'
   490     1092  3441               	retlw	65	;'A'
   491     1093  3454               	retlw	84	;'T'
   492     1094  3445               	retlw	69	;'E'
   493     1095  3400               	retlw	0
   494     1096                     STR_6:
   495     1096  3453               	retlw	83	;'S'
   496     1097  3454               	retlw	84	;'T'
   497     1098  344F               	retlw	79	;'O'
   498     1099  3450               	retlw	80	;'P'
   499     109A  3420               	retlw	32	;' '
   500     109B  3444               	retlw	68	;'D'
   501     109C  3455               	retlw	85	;'U'
   502     109D  3452               	retlw	82	;'R'
   503     109E  3455               	retlw	85	;'U'
   504     109F  344D               	retlw	77	;'M'
   505     10A0  3455               	retlw	85	;'U'
   506     10A1  344E               	retlw	78	;'N'
   507     10A2  3441               	retlw	65	;'A'
   508     10A3  3420               	retlw	32	;' '
   509     10A4  3447               	retlw	71	;'G'
   510     10A5  3445               	retlw	69	;'E'
   511     10A6  3454               	retlw	84	;'T'
   512     10A7  3449               	retlw	73	;'I'
   513     10A8  3452               	retlw	82	;'R'
   514     10A9  3400               	retlw	0
   515     10AA                     STR_1:
   516     10AA  3459               	retlw	89	;'Y'
   517     10AB  3441               	retlw	65	;'A'
   518     10AC  3447               	retlw	71	;'G'
   519     10AD  3420               	retlw	32	;' '
   520     10AE  3442               	retlw	66	;'B'
   521     10AF  3441               	retlw	65	;'A'
   522     10B0  344B               	retlw	75	;'K'
   523     10B1  3449               	retlw	73	;'I'
   524     10B2  344D               	retlw	77	;'M'
   525     10B3  3449               	retlw	73	;'I'
   526     10B4  3420               	retlw	32	;' '
   527     10B5  3459               	retlw	89	;'Y'
   528     10B6  3441               	retlw	65	;'A'
   529     10B7  3450               	retlw	80	;'P'
   530     10B8  3449               	retlw	73	;'I'
   531     10B9  344E               	retlw	78	;'N'
   532     10BA  3449               	retlw	73	;'I'
   533     10BB  345A               	retlw	90	;'Z'
   534     10BC  3400               	retlw	0
   535     10BD                     STR_3:
   536     10BD  3455               	retlw	85	;'U'
   537     10BE  345A               	retlw	90	;'Z'
   538     10BF  344D               	retlw	77	;'M'
   539     10C0  3441               	retlw	65	;'A'
   540     10C1  344E               	retlw	78	;'N'
   541     10C2  344C               	retlw	76	;'L'
   542     10C3  3441               	retlw	65	;'A'
   543     10C4  3452               	retlw	82	;'R'
   544     10C5  3420               	retlw	32	;' '
   545     10C6  344D               	retlw	77	;'M'
   546     10C7  3441               	retlw	65	;'A'
   547     10C8  344B               	retlw	75	;'K'
   548     10C9  3449               	retlw	73	;'I'
   549     10CA  344E               	retlw	78	;'N'
   550     10CB  3441               	retlw	65	;'A'
   551     10CC  3400               	retlw	0
   552     10CD                     STR_18:
   553     10CD  3420               	retlw	32	;' '
   554     10CE  3446               	retlw	70	;'F'
   555     10CF  3457               	retlw	87	;'W'
   556     10D0  3444               	retlw	68	;'D'
   557     10D1  3420               	retlw	32	;' '
   558     10D2  3420               	retlw	32	;' '
   559     10D3  3420               	retlw	32	;' '
   560     10D4  3420               	retlw	32	;' '
   561     10D5  3420               	retlw	32	;' '
   562     10D6  3420               	retlw	32	;' '
   563     10D7  3420               	retlw	32	;' '
   564     10D8  3420               	retlw	32	;' '
   565     10D9  3420               	retlw	32	;' '
   566     10DA  3420               	retlw	32	;' '
   567     10DB  3400               	retlw	0
   568     10DC                     STR_4:
   569     10DC  3477               	retlw	119	;'w'
   570     10DD  3477               	retlw	119	;'w'
   571     10DE  3477               	retlw	119	;'w'
   572     10DF  342E               	retlw	46	;'.'
   573     10E0  3462               	retlw	98	;'b'
   574     10E1  346F               	retlw	111	;'o'
   575     10E2  3472               	retlw	114	;'r'
   576     10E3  3476               	retlw	118	;'v'
   577     10E4  3465               	retlw	101	;'e'
   578     10E5  346B               	retlw	107	;'k'
   579     10E6  342E               	retlw	46	;'.'
   580     10E7  3463               	retlw	99	;'c'
   581     10E8  346F               	retlw	111	;'o'
   582     10E9  346D               	retlw	109	;'m'
   583     10EA  3400               	retlw	0
   584     10EB                     STR_24:
   585     10EB  3420               	retlw	32	;' '
   586     10EC  3452               	retlw	82	;'R'
   587     10ED  3445               	retlw	69	;'E'
   588     10EE  3457               	retlw	87	;'W'
   589     10EF  3420               	retlw	32	;' '
   590     10F0  3420               	retlw	32	;' '
   591     10F1  3420               	retlw	32	;' '
   592     10F2  3420               	retlw	32	;' '
   593     10F3  3420               	retlw	32	;' '
   594     10F4  3420               	retlw	32	;' '
   595     10F5  3420               	retlw	32	;' '
   596     10F6  3420               	retlw	32	;' '
   597     10F7  3420               	retlw	32	;' '
   598     10F8  3400               	retlw	0
   599     10F9                     STR_2:
   600     10F9  344F               	retlw	79	;'O'
   601     10FA  3449               	retlw	73	;'I'
   602     10FB  344C               	retlw	76	;'L'
   603     10FC  3420               	retlw	32	;' '
   604     10FD  3454               	retlw	84	;'T'
   605     10FE  3448               	retlw	72	;'H'
   606     10FF  3445               	retlw	69	;'E'
   607     1100  3420               	retlw	32	;' '
   608     1101  3447               	retlw	71	;'G'
   609     1102  3445               	retlw	69	;'E'
   610     1103  3441               	retlw	65	;'A'
   611     1104  3452               	retlw	82	;'R'
   612     1105  3453               	retlw	83	;'S'
   613     1106  3400               	retlw	0
   614     1107                     STR_26:
   615     1107  3420               	retlw	32	;' '
   616     1108  3453               	retlw	83	;'S'
   617     1109  3454               	retlw	84	;'T'
   618     110A  344F               	retlw	79	;'O'
   619     110B  3450               	retlw	80	;'P'
   620     110C  3420               	retlw	32	;' '
   621     110D  3420               	retlw	32	;' '
   622     110E  3420               	retlw	32	;' '
   623     110F  3420               	retlw	32	;' '
   624     1110  3420               	retlw	32	;' '
   625     1111  3420               	retlw	32	;' '
   626     1112  3420               	retlw	32	;' '
   627     1113  3400               	retlw	0
   628     1114                     STR_8:
   629     1114  3425               	retlw	37	;'%'
   630     1115  3435               	retlw	53	;'5'
   631     1116  3475               	retlw	117	;'u'
   632     1117  3468               	retlw	104	;'h'
   633     1118  3420               	retlw	32	;' '
   634     1119  3425               	retlw	37	;'%'
   635     111A  3430               	retlw	48	;'0'
   636     111B  3432               	retlw	50	;'2'
   637     111C  3475               	retlw	117	;'u'
   638     111D  346D               	retlw	109	;'m'
   639     111E  3400               	retlw	0
   640     111F                     STR_10:
   641     111F  3446               	retlw	70	;'F'
   642     1120  3465               	retlw	101	;'e'
   643     1121  3465               	retlw	101	;'e'
   644     1122  3464               	retlw	100	;'d'
   645     1123  3452               	retlw	82	;'R'
   646     1124  3461               	retlw	97	;'a'
   647     1125  3474               	retlw	116	;'t'
   648     1126  3465               	retlw	101	;'e'
   649     1127  343A               	retlw	58	;':'
   650     1128  3400               	retlw	0
   651     1129                     STR_16:
   652     1129  3420               	retlw	32	;' '
   653     112A  3446               	retlw	70	;'F'
   654     112B  3457               	retlw	87	;'W'
   655     112C  3444               	retlw	68	;'D'
   656     112D  3420               	retlw	32	;' '
   657     112E  3431               	retlw	49	;'1'
   658     112F  342E               	retlw	46	;'.'
   659     1130  3436               	retlw	54	;'6'
   660     1131  344B               	retlw	75	;'K'
   661     1132  3400               	retlw	0
   662     1133                     STR_22:
   663     1133  3420               	retlw	32	;' '
   664     1134  3452               	retlw	82	;'R'
   665     1135  3445               	retlw	69	;'E'
   666     1136  3457               	retlw	87	;'W'
   667     1137  3420               	retlw	32	;' '
   668     1138  3431               	retlw	49	;'1'
   669     1139  342E               	retlw	46	;'.'
   670     113A  3436               	retlw	54	;'6'
   671     113B  344B               	retlw	75	;'K'
   672     113C  3400               	retlw	0
   673     113D                     STR_13:
   674     113D  3425               	retlw	37	;'%'
   675     113E  3475               	retlw	117	;'u'
   676     113F  3425               	retlw	37	;'%'
   677     1140  3475               	retlw	117	;'u'
   678     1141  3425               	retlw	37	;'%'
   679     1142  3475               	retlw	117	;'u'
   680     1143  342E               	retlw	46	;'.'
   681     1144  3425               	retlw	37	;'%'
   682     1145  3475               	retlw	117	;'u'
   683     1146  3400               	retlw	0
   684     1147                     STR_14:
   685     1147  3420               	retlw	32	;' '
   686     1148  3446               	retlw	70	;'F'
   687     1149  3457               	retlw	87	;'W'
   688     114A  3444               	retlw	68	;'D'
   689     114B  3420               	retlw	32	;' '
   690     114C  344C               	retlw	76	;'L'
   691     114D  344D               	retlw	77	;'M'
   692     114E  3454               	retlw	84	;'T'
   693     114F  3400               	retlw	0
   694     1150                     STR_20:
   695     1150  3420               	retlw	32	;' '
   696     1151  3452               	retlw	82	;'R'
   697     1152  3445               	retlw	69	;'E'
   698     1153  3457               	retlw	87	;'W'
   699     1154  3420               	retlw	32	;' '
   700     1155  344C               	retlw	76	;'L'
   701     1156  344D               	retlw	77	;'M'
   702     1157  3454               	retlw	84	;'T'
   703     1158  3400               	retlw	0
   704     1159                     STR_17:
   705     1159  3473               	retlw	115	;'s'
   706     115A  3425               	retlw	37	;'%'
   707     115B  3464               	retlw	100	;'d'
   708     115C  340D               	retlw	13
   709     115D  340A               	retlw	10
   710     115E  3400               	retlw	0
   711     115F                     STR_11:
   712     115F  3425               	retlw	37	;'%'
   713     1160  3430               	retlw	48	;'0'
   714     1161  3430               	retlw	48	;'0'
   715     1162  3433               	retlw	51	;'3'
   716     1163  3475               	retlw	117	;'u'
   717     1164  3400               	retlw	0
   718     1165                     STR_15:
   719     1165  3473               	retlw	115	;'s'
   720     1166  3430               	retlw	48	;'0'
   721     1167  340D               	retlw	13
   722     1168  340A               	retlw	10
   723     1169  3400               	retlw	0
   724     116A                     STR_12:
   725     116A  3452               	retlw	82	;'R'
   726     116B  3450               	retlw	80	;'P'
   727     116C  344D               	retlw	77	;'M'
   728     116D  343A               	retlw	58	;':'
   729     116E  3400               	retlw	0
   730     116F                     STR_5:
   731     116F  3456               	retlw	86	;'V'
   732     1170  3433               	retlw	51	;'3'
   733     1171  3400               	retlw	0
   734     1165                     
   735                           	psect	cinit
   736     0011                     start_initialization:	
   737                           ; #config settings
   738                           
   739     0011                     __initialization:
   740                           
   741                           ; Initialize objects allocated to COMMON
   742     0011  120A  158A  2007  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   743     0016  00FB               	movwf	__pdataCOMMON& (0+127)
   744     0017  120A  158A  2008  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   745     001C  00FC               	movwf	(__pdataCOMMON+1)& (0+127)
   746                           
   747                           ; Clear objects allocated to BANK3
   748     001D  1683               	bsf	3,5	;RP0=1, select bank3
   749     001E  1703               	bsf	3,6	;RP1=1, select bank3
   750     001F  01AA               	clrf	__pbssBANK3& (0+127)
   751     0020  01AB               	clrf	(__pbssBANK3+1)& (0+127)
   752     0021  01AC               	clrf	(__pbssBANK3+2)& (0+127)
   753     0022  01AD               	clrf	(__pbssBANK3+3)& (0+127)
   754     0023  01AE               	clrf	(__pbssBANK3+4)& (0+127)
   755     0024  01AF               	clrf	(__pbssBANK3+5)& (0+127)
   756     0025  01B0               	clrf	(__pbssBANK3+6)& (0+127)
   757     0026  01B1               	clrf	(__pbssBANK3+7)& (0+127)
   758                           
   759                           ; Clear objects allocated to BANK0
   760     0027  1283               	bcf	3,5	;RP0=0, select bank0
   761     0028  1303               	bcf	3,6	;RP1=0, select bank0
   762     0029  01EE               	clrf	__pbssBANK0& (0+127)
   763     002A  01EF               	clrf	(__pbssBANK0+1)& (0+127)
   764                           
   765                           ; Clear objects allocated to COMMON
   766     002B  01F9               	clrf	__pbssCOMMON& (0+127)
   767     002C  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   768     002D                     end_of_initialization:	
   769                           ;End of C runtime variable initialization code
   770                           
   771     002D                     __end_of__initialization:
   772     002D  0183               	clrf	3
   773     002E  160A  118A  2E9C   	ljmp	_main	;jump to C main() function
   774                           
   775                           	psect	bssCOMMON
   776     0079                     __pbssCOMMON:
   777     0079                     _eepromWRclc:
   778     0079                     	ds	2
   779                           
   780                           	psect	dataCOMMON
   781     007B                     __pdataCOMMON:
   782     007B                     _epromBaslaAdress:
   783     007B                     	ds	2
   784                           
   785                           	psect	bssBANK0
   786     006E                     __pbssBANK0:
   787     006E                     _kesmeSayaci:
   788     006E                     	ds	2
   789                           
   790                           	psect	bssBANK3
   791     01AA                     __pbssBANK3:
   792     01AA                     _currentTime:
   793     01AA                     	ds	8
   794                           
   795                           	psect	cstackBANK3
   796     0190                     __pcstackBANK3:
   797     0190                     main@negativeDisplayValue:
   798                           
   799                           ; 2 bytes @ 0x0
   800     0190                     	ds	2
   801     0192                     _main$1031:
   802                           
   803                           ; 2 bytes @ 0x2
   804     0192                     	ds	2
   805     0194                     main@ilkAcilis:
   806                           
   807                           ; 2 bytes @ 0x4
   808     0194                     	ds	2
   809     0196                     main@adcValue1:
   810                           
   811                           ; 4 bytes @ 0x6
   812     0196                     	ds	4
   813     019A                     main@yuzler:
   814                           
   815                           ; 2 bytes @ 0xA
   816     019A                     	ds	2
   817     019C                     main@binler:
   818                           
   819                           ; 2 bytes @ 0xC
   820     019C                     	ds	2
   821     019E                     main@integerPart:
   822                           
   823                           ; 4 bytes @ 0xE
   824     019E                     	ds	4
   825     01A2                     main@epromAdresi:
   826                           
   827                           ; 2 bytes @ 0x12
   828     01A2                     	ds	2
   829     01A4                     main@negativeFeedValue:
   830                           
   831                           ; 2 bytes @ 0x14
   832     01A4                     	ds	2
   833     01A6                     main@displayValue:
   834                           
   835                           ; 2 bytes @ 0x16
   836     01A6                     	ds	2
   837     01A8                     main@realSaat:
   838                           
   839                           ; 2 bytes @ 0x18
   840     01A8                     	ds	2
   841                           
   842                           	psect	cstackBANK1
   843     00A0                     __pcstackBANK1:
   844     00A0                     main@combinedText_377:
   845                           
   846                           ; 20 bytes @ 0x0
   847     00A0                     	ds	20
   848     00B4                     main@lcdText:
   849                           
   850                           ; 9 bytes @ 0x14
   851     00B4                     	ds	9
   852     00BD                     main@uartMessage:
   853                           
   854                           ; 8 bytes @ 0x1D
   855     00BD                     	ds	8
   856     00C5                     main@uartMessage_373:
   857                           
   858                           ; 8 bytes @ 0x25
   859     00C5                     	ds	8
   860     00CD                     main@rpmString:
   861                           
   862                           ; 5 bytes @ 0x2D
   863     00CD                     	ds	5
   864     00D2                     main@adcValue3:
   865                           
   866                           ; 4 bytes @ 0x32
   867     00D2                     	ds	4
   868     00D6                     main@oranValue:
   869                           
   870                           ; 4 bytes @ 0x36
   871     00D6                     	ds	4
   872     00DA                     main@gostermeliklcd:
   873                           
   874                           ; 4 bytes @ 0x3A
   875     00DA                     	ds	4
   876     00DE                     _main$1032:
   877                           
   878                           ; 4 bytes @ 0x3E
   879     00DE                     	ds	4
   880     00E2                     main@adcValue2:
   881                           
   882                           ; 2 bytes @ 0x42
   883     00E2                     	ds	2
   884     00E4                     main@olmazlar:
   885                           
   886                           ; 2 bytes @ 0x44
   887     00E4                     	ds	2
   888     00E6                     main@dakika:
   889                           
   890                           ; 2 bytes @ 0x46
   891     00E6                     	ds	2
   892     00E8                     main@onlar:
   893                           
   894                           ; 2 bytes @ 0x48
   895     00E8                     	ds	2
   896     00EA                     main@birler:
   897                           
   898                           ; 2 bytes @ 0x4A
   899     00EA                     	ds	2
   900     00EC                     main@adcString1:
   901                           
   902                           ; 4 bytes @ 0x4C
   903     00EC                     	ds	4
   904                           
   905                           	psect	cstackCOMMON
   906     0070                     __pcstackCOMMON:
   907     0070                     ?_isdigit:
   908     0070                     ?_UART_Initialize:	
   909                           ; 1 bit 
   910                           
   911     0070                     ?_UART_Write:	
   912                           ; 1 bytes @ 0x0
   913                           
   914     0070                     ?_Lcd_Port:	
   915                           ; 1 bytes @ 0x0
   916                           
   917     0070                     ?_Lcd_Cmd:	
   918                           ; 1 bytes @ 0x0
   919                           
   920     0070                     ?_Lcd_Clear:	
   921                           ; 1 bytes @ 0x0
   922                           
   923     0070                     ?_Lcd_Init:	
   924                           ; 1 bytes @ 0x0
   925                           
   926     0070                     ?_Lcd_Write_Char:	
   927                           ; 1 bytes @ 0x0
   928                           
   929     0070                     ?_yagBakim:	
   930                           ; 1 bytes @ 0x0
   931                           
   932     0070                     ?_incrementTime:	
   933                           ; 1 bytes @ 0x0
   934                           
   935     0070                     ??_incrementTime:	
   936                           ; 1 bytes @ 0x0
   937                           
   938     0070                     ?_timer_isr:	
   939                           ; 1 bytes @ 0x0
   940                           
   941     0070                     ?i1_writeEEPROM:	
   942                           ; 1 bytes @ 0x0
   943                           
   944     0070                     ?_main:	
   945                           ; 1 bytes @ 0x0
   946                           
   947     0070                     ?i1___wmul:	
   948                           ; 2 bytes @ 0x0
   949                           
   950     0070                     i1writeEEPROM@address:	
   951                           ; 2 bytes @ 0x0
   952                           
   953     0070                     i1___wmul@multiplier:	
   954                           ; 2 bytes @ 0x0
   955                           
   956                           
   957                           ; 2 bytes @ 0x0
   958     0070                     	ds	2
   959     0072                     incrementTime@time:
   960     0072                     i1writeEEPROM@data:	
   961                           ; 1 bytes @ 0x2
   962                           
   963     0072                     i1___wmul@multiplicand:	
   964                           ; 2 bytes @ 0x2
   965                           
   966                           
   967                           ; 2 bytes @ 0x2
   968     0072                     	ds	2
   969     0074                     ??i1_writeEEPROM:
   970     0074                     ??i1___wmul:	
   971                           ; 1 bytes @ 0x4
   972                           
   973     0074                     i1___wmul@product:	
   974                           ; 1 bytes @ 0x4
   975                           
   976                           
   977                           ; 2 bytes @ 0x4
   978     0074                     	ds	2
   979     0076                     ??_timer_isr:
   980                           
   981                           ; 1 bytes @ 0x6
   982     0076                     	ds	3
   983                           
   984                           	psect	cstackBANK0
   985     0020                     __pcstackBANK0:
   986     0020                     ??_isdigit:
   987     0020                     ??_UART_Initialize:	
   988                           ; 1 bytes @ 0x0
   989                           
   990     0020                     ??_UART_Write:	
   991                           ; 1 bytes @ 0x0
   992                           
   993     0020                     ??_Lcd_Port:	
   994                           ; 1 bytes @ 0x0
   995                           
   996     0020                     ?_writeEEPROM:	
   997                           ; 1 bytes @ 0x0
   998                           
   999     0020                     ?__Umul8_16:	
  1000                           ; 1 bytes @ 0x0
  1001                           
  1002     0020                     ?___wmul:	
  1003                           ; 2 bytes @ 0x0
  1004                           
  1005     0020                     ?___lwdiv:	
  1006                           ; 2 bytes @ 0x0
  1007                           
  1008     0020                     ?___fltol:	
  1009                           ; 2 bytes @ 0x0
  1010                           
  1011     0020                     ?___fldiv:	
  1012                           ; 4 bytes @ 0x0
  1013                           
  1014     0020                     ?___xxtofl:	
  1015                           ; 4 bytes @ 0x0
  1016                           
  1017     0020                     UART_Write@data:	
  1018                           ; 4 bytes @ 0x0
  1019                           
  1020     0020                     Lcd_Port@a:	
  1021                           ; 1 bytes @ 0x0
  1022                           
  1023     0020                     __Umul8_16@multiplicand:	
  1024                           ; 1 bytes @ 0x0
  1025                           
  1026     0020                     _isdigit$840:	
  1027                           ; 1 bytes @ 0x0
  1028                           
  1029     0020                     writeEEPROM@address:	
  1030                           ; 1 bytes @ 0x0
  1031                           
  1032     0020                     ___wmul@multiplier:	
  1033                           ; 2 bytes @ 0x0
  1034                           
  1035     0020                     ___lwdiv@divisor:	
  1036                           ; 2 bytes @ 0x0
  1037                           
  1038     0020                     ___fltol@f1:	
  1039                           ; 2 bytes @ 0x0
  1040                           
  1041     0020                     ___fldiv@a:	
  1042                           ; 4 bytes @ 0x0
  1043                           
  1044     0020                     ___xxtofl@val:	
  1045                           ; 4 bytes @ 0x0
  1046                           
  1047                           
  1048                           ; 4 bytes @ 0x0
  1049     0020                     	ds	1
  1050     0021                     ?_UART_Write_Text:
  1051     0021                     ??_Lcd_Cmd:	
  1052                           ; 1 bytes @ 0x1
  1053                           
  1054     0021                     ??_Lcd_Write_Char:	
  1055                           ; 1 bytes @ 0x1
  1056                           
  1057     0021                     isdigit@c:	
  1058                           ; 1 bytes @ 0x1
  1059                           
  1060     0021                     UART_Write_Text@text:	
  1061                           ; 1 bytes @ 0x1
  1062                           
  1063                           
  1064                           ; 2 bytes @ 0x1
  1065     0021                     	ds	1
  1066     0022                     ??__Umul8_16:
  1067     0022                     Lcd_Write_Char@temp:	
  1068                           ; 1 bytes @ 0x2
  1069                           
  1070     0022                     writeEEPROM@data:	
  1071                           ; 1 bytes @ 0x2
  1072                           
  1073     0022                     ___wmul@multiplicand:	
  1074                           ; 2 bytes @ 0x2
  1075                           
  1076     0022                     ___lwdiv@dividend:	
  1077                           ; 2 bytes @ 0x2
  1078                           
  1079                           
  1080                           ; 2 bytes @ 0x2
  1081     0022                     	ds	1
  1082     0023                     ??_UART_Write_Text:
  1083     0023                     Lcd_Cmd@a:	
  1084                           ; 1 bytes @ 0x3
  1085                           
  1086     0023                     Lcd_Write_Char@y:	
  1087                           ; 1 bytes @ 0x3
  1088                           
  1089                           
  1090                           ; 1 bytes @ 0x3
  1091     0023                     	ds	1
  1092     0024                     ??_Lcd_Clear:
  1093     0024                     ?_Lcd_Set_Cursor:	
  1094                           ; 1 bytes @ 0x4
  1095                           
  1096     0024                     ??_Lcd_Init:	
  1097                           ; 1 bytes @ 0x4
  1098                           
  1099     0024                     ??_writeEEPROM:	
  1100                           ; 1 bytes @ 0x4
  1101                           
  1102     0024                     ??___wmul:	
  1103                           ; 1 bytes @ 0x4
  1104                           
  1105     0024                     ??___fltol:	
  1106                           ; 1 bytes @ 0x4
  1107                           
  1108     0024                     ??___lwdiv:	
  1109                           ; 1 bytes @ 0x4
  1110                           
  1111     0024                     ??___xxtofl:	
  1112                           ; 1 bytes @ 0x4
  1113                           
  1114     0024                     Lcd_Set_Cursor@b:	
  1115                           ; 1 bytes @ 0x4
  1116                           
  1117     0024                     Lcd_Write_Char@a:	
  1118                           ; 1 bytes @ 0x4
  1119                           
  1120     0024                     ___wmul@product:	
  1121                           ; 1 bytes @ 0x4
  1122                           
  1123     0024                     ___lwdiv@quotient:	
  1124                           ; 2 bytes @ 0x4
  1125                           
  1126     0024                     __Umul8_16@product:	
  1127                           ; 2 bytes @ 0x4
  1128                           
  1129     0024                     ___fldiv@b:	
  1130                           ; 2 bytes @ 0x4
  1131                           
  1132                           
  1133                           ; 4 bytes @ 0x4
  1134     0024                     	ds	1
  1135     0025                     ??_Lcd_Set_Cursor:
  1136     0025                     ?_Lcd_Write_String:	
  1137                           ; 1 bytes @ 0x5
  1138                           
  1139     0025                     Lcd_Write_String@a:	
  1140                           ; 1 bytes @ 0x5
  1141                           
  1142                           
  1143                           ; 2 bytes @ 0x5
  1144     0025                     	ds	1
  1145     0026                     ?_readEEPROM:
  1146     0026                     Lcd_Set_Cursor@a:	
  1147                           ; 2 bytes @ 0x6
  1148                           
  1149     0026                     ___lwdiv@counter:	
  1150                           ; 1 bytes @ 0x6
  1151                           
  1152     0026                     UART_Write_Text@i:	
  1153                           ; 1 bytes @ 0x6
  1154                           
  1155     0026                     readEEPROM@address:	
  1156                           ; 2 bytes @ 0x6
  1157                           
  1158     0026                     __Umul8_16@word_mpld:	
  1159                           ; 2 bytes @ 0x6
  1160                           
  1161                           
  1162                           ; 2 bytes @ 0x6
  1163     0026                     	ds	1
  1164     0027                     ??_Lcd_Write_String:
  1165     0027                     ?___lwmod:	
  1166                           ; 1 bytes @ 0x7
  1167                           
  1168     0027                     Lcd_Set_Cursor@z:	
  1169                           ; 2 bytes @ 0x7
  1170                           
  1171     0027                     ___lwmod@divisor:	
  1172                           ; 1 bytes @ 0x7
  1173                           
  1174                           
  1175                           ; 2 bytes @ 0x7
  1176     0027                     	ds	1
  1177     0028                     ??_readEEPROM:
  1178     0028                     ??___fldiv:	
  1179                           ; 1 bytes @ 0x8
  1180                           
  1181     0028                     Lcd_Set_Cursor@y:	
  1182                           ; 1 bytes @ 0x8
  1183                           
  1184     0028                     ___fltol@sign1:	
  1185                           ; 1 bytes @ 0x8
  1186                           
  1187     0028                     __Umul8_16@multiplier:	
  1188                           ; 1 bytes @ 0x8
  1189                           
  1190     0028                     ___xxtofl@sign:	
  1191                           ; 1 bytes @ 0x8
  1192                           
  1193                           
  1194                           ; 1 bytes @ 0x8
  1195     0028                     	ds	1
  1196     0029                     Lcd_Set_Cursor@temp:
  1197     0029                     ___fltol@exp1:	
  1198                           ; 1 bytes @ 0x9
  1199                           
  1200     0029                     ___xxtofl@exp:	
  1201                           ; 1 bytes @ 0x9
  1202                           
  1203     0029                     ___lwmod@dividend:	
  1204                           ; 1 bytes @ 0x9
  1205                           
  1206                           
  1207                           ; 2 bytes @ 0x9
  1208     0029                     	ds	1
  1209     002A                     ?___awdiv:
  1210     002A                     ?___awmod:	
  1211                           ; 2 bytes @ 0xA
  1212                           
  1213     002A                     Lcd_Write_String@i:	
  1214                           ; 2 bytes @ 0xA
  1215                           
  1216     002A                     ___awdiv@divisor:	
  1217                           ; 2 bytes @ 0xA
  1218                           
  1219     002A                     ___awmod@divisor:	
  1220                           ; 2 bytes @ 0xA
  1221                           
  1222     002A                     ___xxtofl@arg:	
  1223                           ; 2 bytes @ 0xA
  1224                           
  1225                           
  1226                           ; 4 bytes @ 0xA
  1227     002A                     	ds	1
  1228     002B                     ??___lwmod:
  1229     002B                     ___lwmod@counter:	
  1230                           ; 1 bytes @ 0xB
  1231                           
  1232                           
  1233                           ; 1 bytes @ 0xB
  1234     002B                     	ds	1
  1235     002C                     ??_yagBakim:
  1236     002C                     ?_sprintf:	
  1237                           ; 1 bytes @ 0xC
  1238                           
  1239     002C                     yagBakim@i:	
  1240                           ; 2 bytes @ 0xC
  1241                           
  1242     002C                     sprintf@f:	
  1243                           ; 2 bytes @ 0xC
  1244                           
  1245     002C                     ___awdiv@dividend:	
  1246                           ; 2 bytes @ 0xC
  1247                           
  1248     002C                     ___awmod@dividend:	
  1249                           ; 2 bytes @ 0xC
  1250                           
  1251                           
  1252                           ; 2 bytes @ 0xC
  1253     002C                     	ds	1
  1254     002D                     ___fldiv@rem:
  1255                           
  1256                           ; 4 bytes @ 0xD
  1257     002D                     	ds	1
  1258     002E                     ??___awdiv:
  1259     002E                     ??___awmod:	
  1260                           ; 1 bytes @ 0xE
  1261                           
  1262     002E                     ___awdiv@counter:	
  1263                           ; 1 bytes @ 0xE
  1264                           
  1265     002E                     ___awmod@counter:	
  1266                           ; 1 bytes @ 0xE
  1267                           
  1268                           
  1269                           ; 1 bytes @ 0xE
  1270     002E                     	ds	1
  1271     002F                     ___awdiv@sign:
  1272     002F                     ___awmod@sign:	
  1273                           ; 1 bytes @ 0xF
  1274                           
  1275                           
  1276                           ; 1 bytes @ 0xF
  1277     002F                     	ds	1
  1278     0030                     ___awdiv@quotient:
  1279                           
  1280                           ; 2 bytes @ 0x10
  1281     0030                     	ds	1
  1282     0031                     ___fldiv@sign:
  1283                           
  1284                           ; 1 bytes @ 0x11
  1285     0031                     	ds	1
  1286     0032                     ___fldiv@new_exp:
  1287                           
  1288                           ; 2 bytes @ 0x12
  1289     0032                     	ds	2
  1290     0034                     ___fldiv@grs:
  1291                           
  1292                           ; 4 bytes @ 0x14
  1293     0034                     	ds	2
  1294     0036                     ??_sprintf:
  1295                           
  1296                           ; 1 bytes @ 0x16
  1297     0036                     	ds	2
  1298     0038                     ___fldiv@bexp:
  1299                           
  1300                           ; 1 bytes @ 0x18
  1301     0038                     	ds	1
  1302     0039                     ___fldiv@aexp:
  1303                           
  1304                           ; 1 bytes @ 0x19
  1305     0039                     	ds	1
  1306     003A                     ?___flmul:
  1307     003A                     sprintf@prec:	
  1308                           ; 4 bytes @ 0x1A
  1309                           
  1310     003A                     ___flmul@b:	
  1311                           ; 1 bytes @ 0x1A
  1312                           
  1313                           
  1314                           ; 4 bytes @ 0x1A
  1315     003A                     	ds	1
  1316     003B                     sprintf@ap:
  1317                           
  1318                           ; 1 bytes @ 0x1B
  1319     003B                     	ds	1
  1320     003C                     sprintf@val:
  1321                           
  1322                           ; 2 bytes @ 0x1C
  1323     003C                     	ds	2
  1324     003E                     sprintf@flag:
  1325     003E                     ___flmul@a:	
  1326                           ; 1 bytes @ 0x1E
  1327                           
  1328                           
  1329                           ; 4 bytes @ 0x1E
  1330     003E                     	ds	1
  1331     003F                     sprintf@width:
  1332                           
  1333                           ; 2 bytes @ 0x1F
  1334     003F                     	ds	2
  1335     0041                     sprintf@c:
  1336                           
  1337                           ; 1 bytes @ 0x21
  1338     0041                     	ds	1
  1339     0042                     ??___flmul:
  1340     0042                     sprintf@sp:	
  1341                           ; 1 bytes @ 0x22
  1342                           
  1343                           
  1344                           ; 1 bytes @ 0x22
  1345     0042                     	ds	5
  1346     0047                     ___flmul@sign:
  1347                           
  1348                           ; 1 bytes @ 0x27
  1349     0047                     	ds	1
  1350     0048                     ___flmul@grs:
  1351                           
  1352                           ; 4 bytes @ 0x28
  1353     0048                     	ds	4
  1354     004C                     ___flmul@aexp:
  1355                           
  1356                           ; 1 bytes @ 0x2C
  1357     004C                     	ds	1
  1358     004D                     ___flmul@bexp:
  1359                           
  1360                           ; 1 bytes @ 0x2D
  1361     004D                     	ds	1
  1362     004E                     ___flmul@prod:
  1363                           
  1364                           ; 4 bytes @ 0x2E
  1365     004E                     	ds	4
  1366     0052                     ___flmul@temp:
  1367                           
  1368                           ; 2 bytes @ 0x32
  1369     0052                     	ds	2
  1370     0054                     ??_main:
  1371                           
  1372                           ; 1 bytes @ 0x34
  1373     0054                     	ds	6
  1374     005A                     main@combinedText:
  1375                           
  1376                           ; 20 bytes @ 0x3A
  1377     005A                     	ds	20
  1378                           
  1379                           	psect	maintext
  1380     169C                     __pmaintext:	
  1381 ;;
  1382 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
  1383 ;;
  1384 ;; *************** function _main *****************
  1385 ;; Defined at:
  1386 ;;		line 145 in file "main1.c"
  1387 ;; Parameters:    Size  Location     Type
  1388 ;;		None
  1389 ;; Auto vars:     Size  Location     Type
  1390 ;;  uartMessage     8   37[BANK1 ] unsigned char [8]
  1391 ;;  uartMessage     8   29[BANK1 ] unsigned char [8]
  1392 ;;  combinedText   20    0[BANK1 ] unsigned char [20]
  1393 ;;  negativeDisp    2    0[BANK3 ] int 
  1394 ;;  negativeFeed    2   20[BANK3 ] int 
  1395 ;;  combinedText   20   58[BANK0 ] unsigned char [20]
  1396 ;;  olmazlar        2   68[BANK1 ] int 
  1397 ;;  rpmString       5   45[BANK1 ] unsigned char [5]
  1398 ;;  adcString1      4   76[BANK1 ] unsigned char [4]
  1399 ;;  integerPart     4   14[BANK3 ] float 
  1400 ;;  gostermelikl    4   58[BANK1 ] float 
  1401 ;;  oranValue       4   54[BANK1 ] float 
  1402 ;;  realSaat        2   24[BANK3 ] int 
  1403 ;;  binler          2   12[BANK3 ] int 
  1404 ;;  yuzler          2   10[BANK3 ] int 
  1405 ;;  birler          2   74[BANK1 ] int 
  1406 ;;  onlar           2   72[BANK1 ] int 
  1407 ;;  dakika          2   70[BANK1 ] int 
  1408 ;;  epromAdresi     2   18[BANK3 ] int 
  1409 ;;  lcdText         9   20[BANK1 ] unsigned char [9]
  1410 ;;  adcValue1       4    6[BANK3 ] float 
  1411 ;;  adcValue3       4   50[BANK1 ] float 
  1412 ;;  displayValue    2   22[BANK3 ] unsigned int 
  1413 ;;  ilkAcilis       2    4[BANK3 ] int 
  1414 ;;  adcValue2       2   66[BANK1 ] int 
  1415 ;;  a               2    0        unsigned int 
  1416 ;; Return value:  Size  Location     Type
  1417 ;;                  2  211[None  ] int 
  1418 ;; Registers used:
  1419 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1420 ;; Tracked objects:
  1421 ;;		On entry : B00/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1425 ;;      Params:         0       0       0       0       0
  1426 ;;      Locals:         0      20      80      26       0
  1427 ;;      Temps:          0       6       0       0       0
  1428 ;;      Totals:         0      26      80      26       0
  1429 ;;Total ram usage:      132 bytes
  1430 ;; Hardware stack levels required when called: 6
  1431 ;; This function calls:
  1432 ;;		_Lcd_Clear
  1433 ;;		_Lcd_Init
  1434 ;;		_Lcd_Set_Cursor
  1435 ;;		_Lcd_Write_String
  1436 ;;		_UART_Initialize
  1437 ;;		_UART_Write_Text
  1438 ;;		___awdiv
  1439 ;;		___awmod
  1440 ;;		___fldiv
  1441 ;;		___flmul
  1442 ;;		___fltol
  1443 ;;		___wmul
  1444 ;;		___xxtofl
  1445 ;;		_readEEPROM
  1446 ;;		_sprintf
  1447 ;;		_writeEEPROM
  1448 ;;		_yagBakim
  1449 ;; This function is called by:
  1450 ;;		Startup code after reset
  1451 ;; This function uses a non-reentrant model
  1452 ;;
  1453                           
  1454     169C                     _main:	
  1455                           ;psect for function _main
  1456                           
  1457     169C                     l3086:	
  1458                           ;incstack = 0
  1459                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1460                           
  1461                           
  1462                           ;main1.c: 147:   unsigned int a;;main1.c: 150: TRISB = 0b00000000;
  1463     169C  1683               	bsf	3,5	;RP0=1, select bank1
  1464     169D  1303               	bcf	3,6	;RP1=0, select bank1
  1465     169E  0186               	clrf	6	;volatile
  1466     169F                     l3088:
  1467                           
  1468                           ;main1.c: 151: TRISA4 = 0;
  1469     169F  1205               	bcf	5,4	;volatile
  1470     16A0                     l3090:
  1471                           
  1472                           ;main1.c: 152: TRISE0 = 1;
  1473     16A0  1409               	bsf	9,0	;volatile
  1474     16A1                     l3092:
  1475                           
  1476                           ;main1.c: 153: TRISE1 = 1;
  1477     16A1  1489               	bsf	9,1	;volatile
  1478     16A2                     l3094:
  1479                           
  1480                           ;main1.c: 154: TRISC1 = 1;
  1481     16A2  1487               	bsf	7,1	;volatile
  1482     16A3                     l3096:
  1483                           
  1484                           ;main1.c: 155: TRISC2 = 1;
  1485     16A3  1507               	bsf	7,2	;volatile
  1486     16A4                     l3098:
  1487                           
  1488                           ;main1.c: 156: TRISE2 = 1;
  1489     16A4  1509               	bsf	9,2	;volatile
  1490     16A5                     l3100:
  1491                           
  1492                           ;main1.c: 157: TRISC0 = 1;
  1493     16A5  1407               	bsf	7,0	;volatile
  1494     16A6                     l3102:
  1495                           
  1496                           ;main1.c: 158: TRISC3 = 1;
  1497     16A6  1587               	bsf	7,3	;volatile
  1498     16A7                     l3104:
  1499                           
  1500                           ;main1.c: 159: TRISD0 = 1;
  1501     16A7  1408               	bsf	8,0	;volatile
  1502     16A8                     l3106:
  1503                           
  1504                           ;main1.c: 161: TRISA1 = 1;
  1505     16A8  1485               	bsf	5,1	;volatile
  1506     16A9                     l3108:
  1507                           
  1508                           ;main1.c: 162: TRISA2 = 1;
  1509     16A9  1505               	bsf	5,2	;volatile
  1510     16AA                     l3110:
  1511                           
  1512                           ;main1.c: 163: TRISA3 = 1;
  1513     16AA  1585               	bsf	5,3	;volatile
  1514     16AB                     l3112:
  1515                           
  1516                           ;main1.c: 164: Lcd_Init();
  1517     16AB  160A  118A  23AC  160A  118A  	fcall	_Lcd_Init
  1518     16B0                     l3114:
  1519                           
  1520                           ;main1.c: 166: TRISC6 = 0;
  1521     16B0  1683               	bsf	3,5	;RP0=1, select bank1
  1522     16B1  1303               	bcf	3,6	;RP1=0, select bank1
  1523     16B2  1307               	bcf	7,6	;volatile
  1524     16B3                     l3116:
  1525                           
  1526                           ;main1.c: 167: TRISC7 = 1;
  1527     16B3  1787               	bsf	7,7	;volatile
  1528     16B4                     l3118:
  1529                           
  1530                           ;main1.c: 170: TRISA0 = 0;
  1531     16B4  1005               	bcf	5,0	;volatile
  1532     16B5                     l3120:
  1533                           
  1534                           ;main1.c: 171: TRISA5 = 0;
  1535     16B5  1285               	bcf	5,5	;volatile
  1536     16B6                     l3122:
  1537                           
  1538                           ;main1.c: 172: TRISC4 = 0;
  1539     16B6  1207               	bcf	7,4	;volatile
  1540     16B7                     l3124:
  1541                           
  1542                           ;main1.c: 173: TRISC5 = 0;
  1543     16B7  1287               	bcf	7,5	;volatile
  1544     16B8                     l3126:
  1545                           
  1546                           ;main1.c: 174: TRISD = 0b00000001;
  1547     16B8  3001               	movlw	1
  1548     16B9  0088               	movwf	8	;volatile
  1549     16BA                     l3128:
  1550                           
  1551                           ;main1.c: 177:   _delay((unsigned long)((200)*(4000000/4000.0)));
  1552     16BA  3002               	movlw	2
  1553     16BB  1283               	bcf	3,5	;RP0=0, select bank0
  1554     16BC  1303               	bcf	3,6	;RP1=0, select bank0
  1555     16BD  00D6               	movwf	??_main+2
  1556     16BE  3004               	movlw	4
  1557     16BF  00D5               	movwf	??_main+1
  1558     16C0  30B9               	movlw	185
  1559     16C1  00D4               	movwf	??_main
  1560     16C2                     u4577:
  1561     16C2  0BD4               	decfsz	??_main,f
  1562     16C3  2EC2               	goto	u4577
  1563     16C4  0BD5               	decfsz	??_main+1,f
  1564     16C5  2EC2               	goto	u4577
  1565     16C6  0BD6               	decfsz	??_main+2,f
  1566     16C7  2EC2               	goto	u4577
  1567     16C8  2EC9               	nop2
  1568     16C9                     l3130:
  1569                           
  1570                           ;main1.c: 178:   RA4 = 0;
  1571     16C9  1283               	bcf	3,5	;RP0=0, select bank0
  1572     16CA  1303               	bcf	3,6	;RP1=0, select bank0
  1573     16CB  1205               	bcf	5,4	;volatile
  1574     16CC                     l3132:
  1575                           
  1576                           ;main1.c: 184:     currentTime.hours = readEEPROM(0x01);
  1577     16CC  3001               	movlw	1
  1578     16CD  00A6               	movwf	readEEPROM@address
  1579     16CE  3000               	movlw	0
  1580     16CF  00A7               	movwf	readEEPROM@address+1
  1581     16D0  120A  118A  27EB  160A  118A  	fcall	_readEEPROM
  1582     16D5  1283               	bcf	3,5	;RP0=0, select bank0
  1583     16D6  1303               	bcf	3,6	;RP1=0, select bank0
  1584     16D7  0827               	movf	?_readEEPROM+1,w
  1585     16D8  1683               	bsf	3,5	;RP0=1, select bank3
  1586     16D9  1703               	bsf	3,6	;RP1=1, select bank3
  1587     16DA  00AD               	movwf	((_currentTime+1)^(0+384)+2)
  1588     16DB  1283               	bcf	3,5	;RP0=0, select bank0
  1589     16DC  1303               	bcf	3,6	;RP1=0, select bank0
  1590     16DD  0826               	movf	?_readEEPROM,w
  1591     16DE  1683               	bsf	3,5	;RP0=1, select bank3
  1592     16DF  1703               	bsf	3,6	;RP1=1, select bank3
  1593     16E0  00AC               	movwf	(_currentTime^(0+384)+2)
  1594     16E1                     l3134:
  1595                           
  1596                           ;main1.c: 185:     currentTime.minutes = readEEPROM(0x02);
  1597     16E1  3002               	movlw	2
  1598     16E2  1283               	bcf	3,5	;RP0=0, select bank0
  1599     16E3  1303               	bcf	3,6	;RP1=0, select bank0
  1600     16E4  00A6               	movwf	readEEPROM@address
  1601     16E5  3000               	movlw	0
  1602     16E6  00A7               	movwf	readEEPROM@address+1
  1603     16E7  120A  118A  27EB  160A  118A  	fcall	_readEEPROM
  1604     16EC  1283               	bcf	3,5	;RP0=0, select bank0
  1605     16ED  1303               	bcf	3,6	;RP1=0, select bank0
  1606     16EE  0827               	movf	?_readEEPROM+1,w
  1607     16EF  1683               	bsf	3,5	;RP0=1, select bank3
  1608     16F0  1703               	bsf	3,6	;RP1=1, select bank3
  1609     16F1  00AF               	movwf	((_currentTime+1)^(0+384)+4)
  1610     16F2  1283               	bcf	3,5	;RP0=0, select bank0
  1611     16F3  1303               	bcf	3,6	;RP1=0, select bank0
  1612     16F4  0826               	movf	?_readEEPROM,w
  1613     16F5  1683               	bsf	3,5	;RP0=1, select bank3
  1614     16F6  1703               	bsf	3,6	;RP1=1, select bank3
  1615     16F7  00AE               	movwf	(_currentTime^(0+384)+4)
  1616     16F8                     l3136:
  1617                           
  1618                           ;main1.c: 186:     currentTime.seconds = readEEPROM(0x03);
  1619     16F8  3003               	movlw	3
  1620     16F9  1283               	bcf	3,5	;RP0=0, select bank0
  1621     16FA  1303               	bcf	3,6	;RP1=0, select bank0
  1622     16FB  00A6               	movwf	readEEPROM@address
  1623     16FC  3000               	movlw	0
  1624     16FD  00A7               	movwf	readEEPROM@address+1
  1625     16FE  120A  118A  27EB  160A  118A  	fcall	_readEEPROM
  1626     1703  1283               	bcf	3,5	;RP0=0, select bank0
  1627     1704  1303               	bcf	3,6	;RP1=0, select bank0
  1628     1705  0827               	movf	?_readEEPROM+1,w
  1629     1706  1683               	bsf	3,5	;RP0=1, select bank3
  1630     1707  1703               	bsf	3,6	;RP1=1, select bank3
  1631     1708  00B1               	movwf	((_currentTime+1)^(0+384)+6)
  1632     1709  1283               	bcf	3,5	;RP0=0, select bank0
  1633     170A  1303               	bcf	3,6	;RP1=0, select bank0
  1634     170B  0826               	movf	?_readEEPROM,w
  1635     170C  1683               	bsf	3,5	;RP0=1, select bank3
  1636     170D  1703               	bsf	3,6	;RP1=1, select bank3
  1637     170E  00B0               	movwf	(_currentTime^(0+384)+6)
  1638     170F                     l3138:
  1639                           
  1640                           ;main1.c: 187:     currentTime.carpan = readEEPROM(0x04);
  1641     170F  3004               	movlw	4
  1642     1710  1283               	bcf	3,5	;RP0=0, select bank0
  1643     1711  1303               	bcf	3,6	;RP1=0, select bank0
  1644     1712  00A6               	movwf	readEEPROM@address
  1645     1713  3000               	movlw	0
  1646     1714  00A7               	movwf	readEEPROM@address+1
  1647     1715  120A  118A  27EB  160A  118A  	fcall	_readEEPROM
  1648     171A  1283               	bcf	3,5	;RP0=0, select bank0
  1649     171B  1303               	bcf	3,6	;RP1=0, select bank0
  1650     171C  0827               	movf	?_readEEPROM+1,w
  1651     171D  1683               	bsf	3,5	;RP0=1, select bank3
  1652     171E  1703               	bsf	3,6	;RP1=1, select bank3
  1653     171F  00AB               	movwf	(_currentTime+1)^(0+384)
  1654     1720  1283               	bcf	3,5	;RP0=0, select bank0
  1655     1721  1303               	bcf	3,6	;RP1=0, select bank0
  1656     1722  0826               	movf	?_readEEPROM,w
  1657     1723  1683               	bsf	3,5	;RP0=1, select bank3
  1658     1724  1703               	bsf	3,6	;RP1=1, select bank3
  1659     1725  00AA               	movwf	_currentTime^(0+384)
  1660     1726                     l3140:
  1661                           
  1662                           ;main1.c: 190:     char lcdText[9];;main1.c: 192:     OPTION_REGbits.T0CS = 0;
  1663     1726  1683               	bsf	3,5	;RP0=1, select bank1
  1664     1727  1303               	bcf	3,6	;RP1=0, select bank1
  1665     1728  1281               	bcf	1,5	;volatile
  1666     1729                     l3142:
  1667                           
  1668                           ;main1.c: 193:     OPTION_REGbits.PSA = 0;
  1669     1729  1181               	bcf	1,3	;volatile
  1670     172A                     l3144:
  1671                           
  1672                           ;main1.c: 194:     OPTION_REGbits.PS2 = 1;
  1673     172A  1501               	bsf	1,2	;volatile
  1674     172B                     l3146:
  1675                           
  1676                           ;main1.c: 195:     OPTION_REGbits.PS1 = 1;
  1677     172B  1481               	bsf	1,1	;volatile
  1678     172C                     l3148:
  1679                           
  1680                           ;main1.c: 196:     OPTION_REGbits.PS0 = 1;
  1681     172C  1401               	bsf	1,0	;volatile
  1682     172D                     l3150:
  1683                           
  1684                           ;main1.c: 199:     INTCONbits.GIE = 1;
  1685     172D  178B               	bsf	11,7	;volatile
  1686     172E                     l3152:
  1687                           
  1688                           ;main1.c: 200:     INTCONbits.PEIE = 1;
  1689     172E  170B               	bsf	11,6	;volatile
  1690     172F                     l3154:
  1691                           
  1692                           ;main1.c: 201:     INTCONbits.T0IE = 1;
  1693     172F  168B               	bsf	11,5	;volatile
  1694     1730                     l3156:
  1695                           
  1696                           ;main1.c: 204:     Lcd_Clear();
  1697     1730  160A  158A  26F5  160A  118A  	fcall	_Lcd_Clear
  1698     1735                     l3158:
  1699                           
  1700                           ;main1.c: 205:     Lcd_Set_Cursor(1,1);
  1701     1735  1283               	bcf	3,5	;RP0=0, select bank0
  1702     1736  1303               	bcf	3,6	;RP1=0, select bank0
  1703     1737  01A4               	clrf	Lcd_Set_Cursor@b
  1704     1738  0AA4               	incf	Lcd_Set_Cursor@b,f
  1705     1739  3001               	movlw	1
  1706     173A  160A  118A  22B3  160A  118A  	fcall	_Lcd_Set_Cursor
  1707     173F                     l3160:
  1708                           
  1709                           ;main1.c: 206:     Lcd_Write_String("UZMANLAR MAKINA");
  1710     173F  30BD               	movlw	low (STR_3| (0+32768))
  1711     1740  1283               	bcf	3,5	;RP0=0, select bank0
  1712     1741  1303               	bcf	3,6	;RP1=0, select bank0
  1713     1742  00A5               	movwf	Lcd_Write_String@a
  1714     1743  3090               	movlw	high (STR_3| (0+32768))
  1715     1744  00A6               	movwf	Lcd_Write_String@a+1
  1716     1745  160A  118A  226D  160A  118A  	fcall	_Lcd_Write_String
  1717     174A                     l3162:
  1718                           
  1719                           ;main1.c: 207:     Lcd_Set_Cursor(2,1);
  1720     174A  1283               	bcf	3,5	;RP0=0, select bank0
  1721     174B  1303               	bcf	3,6	;RP1=0, select bank0
  1722     174C  01A4               	clrf	Lcd_Set_Cursor@b
  1723     174D  0AA4               	incf	Lcd_Set_Cursor@b,f
  1724     174E  3002               	movlw	2
  1725     174F  160A  118A  22B3  160A  118A  	fcall	_Lcd_Set_Cursor
  1726     1754                     l3164:
  1727                           
  1728                           ;main1.c: 208:     Lcd_Write_String("www.borvek.com");
  1729     1754  30DC               	movlw	low (STR_4| (0+32768))
  1730     1755  1283               	bcf	3,5	;RP0=0, select bank0
  1731     1756  1303               	bcf	3,6	;RP1=0, select bank0
  1732     1757  00A5               	movwf	Lcd_Write_String@a
  1733     1758  3090               	movlw	high (STR_4| (0+32768))
  1734     1759  00A6               	movwf	Lcd_Write_String@a+1
  1735     175A  160A  118A  226D  160A  118A  	fcall	_Lcd_Write_String
  1736     175F                     l3166:
  1737                           
  1738                           ;main1.c: 209:     Lcd_Set_Cursor(2,17);
  1739     175F  3011               	movlw	17
  1740     1760  1283               	bcf	3,5	;RP0=0, select bank0
  1741     1761  1303               	bcf	3,6	;RP1=0, select bank0
  1742     1762  00A4               	movwf	Lcd_Set_Cursor@b
  1743     1763  3002               	movlw	2
  1744     1764  160A  118A  22B3  160A  118A  	fcall	_Lcd_Set_Cursor
  1745     1769                     l3168:
  1746                           
  1747                           ;main1.c: 210:     Lcd_Write_String("V3");
  1748     1769  306F               	movlw	low (STR_5| (0+32768))
  1749     176A  1283               	bcf	3,5	;RP0=0, select bank0
  1750     176B  1303               	bcf	3,6	;RP1=0, select bank0
  1751     176C  00A5               	movwf	Lcd_Write_String@a
  1752     176D  3091               	movlw	high (STR_5| (0+32768))
  1753     176E  00A6               	movwf	Lcd_Write_String@a+1
  1754     176F  160A  118A  226D  160A  118A  	fcall	_Lcd_Write_String
  1755     1774                     l3170:
  1756                           
  1757                           ;main1.c: 212:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1758     1774  3006               	movlw	6
  1759     1775  1283               	bcf	3,5	;RP0=0, select bank0
  1760     1776  1303               	bcf	3,6	;RP1=0, select bank0
  1761     1777  00D6               	movwf	??_main+2
  1762     1778  3013               	movlw	19
  1763     1779  00D5               	movwf	??_main+1
  1764     177A  30AD               	movlw	173
  1765     177B  00D4               	movwf	??_main
  1766     177C                     u4587:
  1767     177C  0BD4               	decfsz	??_main,f
  1768     177D  2F7C               	goto	u4587
  1769     177E  0BD5               	decfsz	??_main+1,f
  1770     177F  2F7C               	goto	u4587
  1771     1780  0BD6               	decfsz	??_main+2,f
  1772     1781  2F7C               	goto	u4587
  1773     1782                     l3172:
  1774                           
  1775                           ;main1.c: 213:     Lcd_Clear();
  1776     1782  160A  158A  26F5  160A  118A  	fcall	_Lcd_Clear
  1777     1787                     l3174:
  1778                           
  1779                           ;main1.c: 218:     SPBRG = ((4000000/16)/19200) - 1;
  1780     1787  300C               	movlw	12
  1781     1788  1683               	bsf	3,5	;RP0=1, select bank1
  1782     1789  1303               	bcf	3,6	;RP1=0, select bank1
  1783     178A  0099               	movwf	25	;volatile
  1784     178B                     l3176:
  1785                           
  1786                           ;main1.c: 219:     UART_Initialize();
  1787     178B  160A  158A  2710  160A  118A  	fcall	_UART_Initialize
  1788     1790                     l3178:
  1789                           
  1790                           ;main1.c: 220: unsigned int displayValue = 0;
  1791     1790  1683               	bsf	3,5	;RP0=1, select bank3
  1792     1791  1703               	bsf	3,6	;RP1=1, select bank3
  1793     1792  01A6               	clrf	main@displayValue^(0+384)
  1794     1793  01A7               	clrf	(main@displayValue+1)^(0+384)
  1795     1794                     l3180:
  1796                           
  1797                           ;main1.c: 225:     ADCON1bits.ADFM = 1;
  1798     1794  1683               	bsf	3,5	;RP0=1, select bank1
  1799     1795  1303               	bcf	3,6	;RP1=0, select bank1
  1800     1796  179F               	bsf	31,7	;volatile
  1801     1797                     l3182:
  1802                           
  1803                           ;main1.c: 226:     ADCON1bits.PCFG = 0b100;
  1804     1797  081F               	movf	31,w	;volatile
  1805     1798  39F0               	andlw	-16
  1806     1799  3804               	iorlw	4
  1807     179A  009F               	movwf	31	;volatile
  1808     179B                     l3184:
  1809                           
  1810                           ;main1.c: 227:     ADCON0bits.ADCS = 0b10;
  1811     179B  1283               	bcf	3,5	;RP0=0, select bank0
  1812     179C  1303               	bcf	3,6	;RP1=0, select bank0
  1813     179D  081F               	movf	31,w	;volatile
  1814     179E  393F               	andlw	-193
  1815     179F  3880               	iorlw	128
  1816     17A0  009F               	movwf	31	;volatile
  1817     17A1                     l3186:
  1818                           
  1819                           ;main1.c: 228:     ADCON0bits.ADON = 1;
  1820     17A1  141F               	bsf	31,0	;volatile
  1821     17A2                     l3188:
  1822                           
  1823                           ;main1.c: 230:     float adcValue1;;main1.c: 231:     int adcValue2;;main1.c: 232:     f
      +                          loat adcValue3;;main1.c: 238:     RC1 = 0;
  1824     17A2  1087               	bcf	7,1	;volatile
  1825     17A3                     l3190:
  1826                           
  1827                           ;main1.c: 239:     RE2 = 0;
  1828     17A3  1109               	bcf	9,2	;volatile
  1829     17A4                     l3192:
  1830                           
  1831                           ;main1.c: 240:     RE0 = 0;
  1832     17A4  1009               	bcf	9,0	;volatile
  1833     17A5                     l3194:
  1834                           
  1835                           ;main1.c: 241:     RC2 = 0;
  1836     17A5  1107               	bcf	7,2	;volatile
  1837     17A6                     l3196:
  1838                           
  1839                           ;main1.c: 242:     RC0 = 0;
  1840     17A6  1007               	bcf	7,0	;volatile
  1841     17A7                     l3198:
  1842                           
  1843                           ;main1.c: 243:     RE1 = 0;
  1844     17A7  1089               	bcf	9,1	;volatile
  1845     17A8                     l3200:
  1846                           
  1847                           ;main1.c: 245: int ilkAcilis = 1;
  1848     17A8  3001               	movlw	1
  1849     17A9  1683               	bsf	3,5	;RP0=1, select bank3
  1850     17AA  1703               	bsf	3,6	;RP1=1, select bank3
  1851     17AB  0094               	movwf	main@ilkAcilis^(0+384)
  1852     17AC  3000               	movlw	0
  1853     17AD  0095               	movwf	(main@ilkAcilis^(0+384)+1)
  1854     17AE                     l3202:
  1855                           
  1856                           ;main1.c: 251:       for ( int epromAdresi = 0 ; epromAdresi<255; epromAdresi++){
  1857     17AE  1683               	bsf	3,5	;RP0=1, select bank3
  1858     17AF  1703               	bsf	3,6	;RP1=1, select bank3
  1859     17B0  01A2               	clrf	main@epromAdresi^(0+384)
  1860     17B1  01A3               	clrf	(main@epromAdresi+1)^(0+384)
  1861     17B2                     l3208:
  1862                           
  1863                           ;main1.c: 253:         int olmazlar = readEEPROM(epromAdresi);
  1864     17B2  1683               	bsf	3,5	;RP0=1, select bank3
  1865     17B3  1703               	bsf	3,6	;RP1=1, select bank3
  1866     17B4  0823               	movf	(main@epromAdresi+1)^(0+384),w
  1867     17B5  1283               	bcf	3,5	;RP0=0, select bank0
  1868     17B6  1303               	bcf	3,6	;RP1=0, select bank0
  1869     17B7  00A7               	movwf	readEEPROM@address+1
  1870     17B8  1683               	bsf	3,5	;RP0=1, select bank3
  1871     17B9  1703               	bsf	3,6	;RP1=1, select bank3
  1872     17BA  0822               	movf	main@epromAdresi^(0+384),w
  1873     17BB  1283               	bcf	3,5	;RP0=0, select bank0
  1874     17BC  1303               	bcf	3,6	;RP1=0, select bank0
  1875     17BD  00A6               	movwf	readEEPROM@address
  1876     17BE  120A  118A  27EB  160A  118A  	fcall	_readEEPROM
  1877     17C3  1283               	bcf	3,5	;RP0=0, select bank0
  1878     17C4  1303               	bcf	3,6	;RP1=0, select bank0
  1879     17C5  0827               	movf	?_readEEPROM+1,w
  1880     17C6  1683               	bsf	3,5	;RP0=1, select bank1
  1881     17C7  1303               	bcf	3,6	;RP1=0, select bank1
  1882     17C8  00E5               	movwf	(main@olmazlar+1)^(0+128)
  1883     17C9  1283               	bcf	3,5	;RP0=0, select bank0
  1884     17CA  1303               	bcf	3,6	;RP1=0, select bank0
  1885     17CB  0826               	movf	?_readEEPROM,w
  1886     17CC  1683               	bsf	3,5	;RP0=1, select bank1
  1887     17CD  1303               	bcf	3,6	;RP1=0, select bank1
  1888     17CE  00E4               	movwf	main@olmazlar^(0+128)
  1889     17CF                     l3210:
  1890                           
  1891                           ;main1.c: 256:         if (olmazlar==255){
  1892     17CF  0A64               	incf	main@olmazlar^(0+128),w
  1893     17D0  0465               	iorwf	(main@olmazlar+1)^(0+128),w
  1894     17D1  1D03               	btfss	3,2
  1895     17D2  2FD4               	goto	u4081
  1896     17D3  2FD5               	goto	u4080
  1897     17D4                     u4081:
  1898     17D4  2FE9               	goto	l3214
  1899     17D5                     u4080:
  1900     17D5                     l3212:
  1901                           
  1902                           ;main1.c: 258:        writeEEPROM(epromAdresi,0);
  1903     17D5  1683               	bsf	3,5	;RP0=1, select bank3
  1904     17D6  1703               	bsf	3,6	;RP1=1, select bank3
  1905     17D7  0823               	movf	(main@epromAdresi+1)^(0+384),w
  1906     17D8  1283               	bcf	3,5	;RP0=0, select bank0
  1907     17D9  1303               	bcf	3,6	;RP1=0, select bank0
  1908     17DA  00A1               	movwf	writeEEPROM@address+1
  1909     17DB  1683               	bsf	3,5	;RP0=1, select bank3
  1910     17DC  1703               	bsf	3,6	;RP1=1, select bank3
  1911     17DD  0822               	movf	main@epromAdresi^(0+384),w
  1912     17DE  1283               	bcf	3,5	;RP0=0, select bank0
  1913     17DF  1303               	bcf	3,6	;RP1=0, select bank0
  1914     17E0  00A0               	movwf	writeEEPROM@address
  1915     17E1  3000               	movlw	0
  1916     17E2  00A2               	movwf	writeEEPROM@data
  1917     17E3  00A3               	movwf	writeEEPROM@data+1
  1918     17E4  160A  158A  2766  160A  118A  	fcall	_writeEEPROM
  1919     17E9                     l3214:
  1920                           
  1921                           ;main1.c: 261:     }
  1922     17E9  3001               	movlw	1
  1923     17EA  1683               	bsf	3,5	;RP0=1, select bank3
  1924     17EB  1703               	bsf	3,6	;RP1=1, select bank3
  1925     17EC  07A2               	addwf	main@epromAdresi^(0+384),f
  1926     17ED  1803               	skipnc
  1927     17EE  0AA3               	incf	(main@epromAdresi+1)^(0+384),f
  1928     17EF  3000               	movlw	0
  1929     17F0  07A3               	addwf	(main@epromAdresi+1)^(0+384),f
  1930     17F1                     l3216:
  1931     17F1  0823               	movf	(main@epromAdresi+1)^(0+384),w
  1932     17F2  3A80               	xorlw	128
  1933     17F3  00FF               	movwf	btemp+1
  1934     17F4  3080               	movlw	128
  1935     17F5  027F               	subwf	btemp+1,w
  1936     17F6  1D03               	skipz
  1937     17F7  2FFA               	goto	u4095
  1938     17F8  30FF               	movlw	255
  1939     17F9  0222               	subwf	main@epromAdresi^(0+384),w
  1940     17FA                     u4095:
  1941     17FA  1C03               	skipc
  1942     17FB  2FFF               	goto	u4091
  1943     17FC  120A  118A  2831   	goto	u4090
  1944     17FF                     u4091:
  1945     17FF  2FB2               	goto	l3208
  1946                           
  1947                           	psect	text1
  1948     12FF                     __ptext1:	
  1949 ;; *************** function _yagBakim *****************
  1950 ;; Defined at:
  1951 ;;		line 27 in file "main1.c"
  1952 ;; Parameters:    Size  Location     Type
  1953 ;;		None
  1954 ;; Auto vars:     Size  Location     Type
  1955 ;;  i               2   12[BANK0 ] int 
  1956 ;; Return value:  Size  Location     Type
  1957 ;;                  1    wreg      void 
  1958 ;; Registers used:
  1959 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/0
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1965 ;;      Params:         0       0       0       0       0
  1966 ;;      Locals:         0       2       0       0       0
  1967 ;;      Temps:          0       0       0       0       0
  1968 ;;      Totals:         0       2       0       0       0
  1969 ;;Total ram usage:        2 bytes
  1970 ;; Hardware stack levels used: 1
  1971 ;; Hardware stack levels required when called: 5
  1972 ;; This function calls:
  1973 ;;		_Lcd_Clear
  1974 ;;		_Lcd_Set_Cursor
  1975 ;;		_Lcd_Write_String
  1976 ;; This function is called by:
  1977 ;;		_main
  1978 ;; This function uses a non-reentrant model
  1979 ;;
  1980                           
  1981     12FF                     _yagBakim:	
  1982                           ;psect for function _yagBakim
  1983                           
  1984     12FF                     l2402:	
  1985                           ;incstack = 0
  1986                           ; Regs used in _yagBakim: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1987                           
  1988                           
  1989                           ;main1.c: 28:     Lcd_Clear();
  1990     12FF  160A  158A  26F5  160A  118A  	fcall	_Lcd_Clear
  1991     1304                     l2404:
  1992                           
  1993                           ;main1.c: 29:     for (int i = 0; i < 10; i++) {
  1994     1304  1283               	bcf	3,5	;RP0=0, select bank0
  1995     1305  1303               	bcf	3,6	;RP1=0, select bank0
  1996     1306  01AC               	clrf	yagBakim@i
  1997     1307  01AD               	clrf	yagBakim@i+1
  1998     1308                     l2410:
  1999                           
  2000                           ;main1.c: 30:         Lcd_Set_Cursor(1, 1);
  2001     1308  1283               	bcf	3,5	;RP0=0, select bank0
  2002     1309  1303               	bcf	3,6	;RP1=0, select bank0
  2003     130A  01A4               	clrf	Lcd_Set_Cursor@b
  2004     130B  0AA4               	incf	Lcd_Set_Cursor@b,f
  2005     130C  3001               	movlw	1
  2006     130D  160A  118A  22B3  160A  118A  	fcall	_Lcd_Set_Cursor
  2007     1312                     l2412:
  2008                           
  2009                           ;main1.c: 31:         Lcd_Write_String("YAG BAKIMI YAPINIZ");
  2010     1312  30AA               	movlw	low (STR_1| (0+32768))
  2011     1313  1283               	bcf	3,5	;RP0=0, select bank0
  2012     1314  1303               	bcf	3,6	;RP1=0, select bank0
  2013     1315  00A5               	movwf	Lcd_Write_String@a
  2014     1316  3090               	movlw	high (STR_1| (0+32768))
  2015     1317  00A6               	movwf	Lcd_Write_String@a+1
  2016     1318  160A  118A  226D  160A  118A  	fcall	_Lcd_Write_String
  2017     131D                     l2414:
  2018                           
  2019                           ;main1.c: 32:         Lcd_Set_Cursor(2, 1);
  2020     131D  1283               	bcf	3,5	;RP0=0, select bank0
  2021     131E  1303               	bcf	3,6	;RP1=0, select bank0
  2022     131F  01A4               	clrf	Lcd_Set_Cursor@b
  2023     1320  0AA4               	incf	Lcd_Set_Cursor@b,f
  2024     1321  3002               	movlw	2
  2025     1322  160A  118A  22B3  160A  118A  	fcall	_Lcd_Set_Cursor
  2026                           
  2027                           ;main1.c: 33:         Lcd_Write_String("OIL THE GEARS");
  2028     1327  30F9               	movlw	low (STR_2| (0+32768))
  2029     1328  1283               	bcf	3,5	;RP0=0, select bank0
  2030     1329  1303               	bcf	3,6	;RP1=0, select bank0
  2031     132A  00A5               	movwf	Lcd_Write_String@a
  2032     132B  3090               	movlw	high (STR_2| (0+32768))
  2033     132C  00A6               	movwf	Lcd_Write_String@a+1
  2034     132D  160A  118A  226D  160A  118A  	fcall	_Lcd_Write_String
  2035     1332                     l2416:
  2036                           
  2037                           ;main1.c: 34:         RA4 = 1;
  2038     1332  1283               	bcf	3,5	;RP0=0, select bank0
  2039     1333  1303               	bcf	3,6	;RP1=0, select bank0
  2040     1334  1605               	bsf	5,4	;volatile
  2041     1335                     l2418:
  2042                           
  2043                           ;main1.c: 35:     }
  2044     1335  3001               	movlw	1
  2045     1336  07AC               	addwf	yagBakim@i,f
  2046     1337  1803               	skipnc
  2047     1338  0AAD               	incf	yagBakim@i+1,f
  2048     1339  3000               	movlw	0
  2049     133A  07AD               	addwf	yagBakim@i+1,f
  2050     133B                     l2420:
  2051     133B  082D               	movf	yagBakim@i+1,w
  2052     133C  3A80               	xorlw	128
  2053     133D  00FF               	movwf	btemp+1
  2054     133E  3080               	movlw	128
  2055     133F  027F               	subwf	btemp+1,w
  2056     1340  1D03               	skipz
  2057     1341  2B44               	goto	u2675
  2058     1342  300A               	movlw	10
  2059     1343  022C               	subwf	yagBakim@i,w
  2060     1344                     u2675:
  2061     1344  1C03               	skipc
  2062     1345  2B47               	goto	u2671
  2063     1346  2B48               	goto	u2670
  2064     1347                     u2671:
  2065     1347  2B08               	goto	l2410
  2066     1348                     u2670:
  2067     1348                     l2422:
  2068                           
  2069                           ;main1.c: 36:     Lcd_Clear();
  2070     1348  160A  158A  26F5  160A  118A  	fcall	_Lcd_Clear
  2071     134D                     l2424:
  2072                           
  2073                           ;main1.c: 37:     RA4 = 0;
  2074     134D  1283               	bcf	3,5	;RP0=0, select bank0
  2075     134E  1303               	bcf	3,6	;RP1=0, select bank0
  2076     134F  1205               	bcf	5,4	;volatile
  2077     1350                     l175:
  2078     1350  0008               	return
  2079     1351                     __end_of_yagBakim:
  2080                           
  2081                           	psect	text2
  2082     126D                     __ptext2:	
  2083 ;; *************** function _Lcd_Write_String *****************
  2084 ;; Defined at:
  2085 ;;		line 96 in file "./lcd.h"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;  a               2    5[BANK0 ] PTR unsigned char 
  2088 ;;		 -> STR_33(24), STR_32(24), STR_29(27), STR_28(26), 
  2089 ;;		 -> STR_26(13), STR_24(14), STR_22(10), STR_20(9), 
  2090 ;;		 -> STR_18(15), STR_16(10), STR_14(9), main@rpmString(5), 
  2091 ;;		 -> STR_12(5), main@adcString1(4), STR_10(10), STR_9(3), 
  2092 ;;		 -> main@lcdText(9), STR_7(21), STR_6(20), STR_5(3), 
  2093 ;;		 -> STR_4(15), STR_3(16), STR_2(14), STR_1(19), 
  2094 ;; Auto vars:     Size  Location     Type
  2095 ;;  i               2   10[BANK0 ] int 
  2096 ;; Return value:  Size  Location     Type
  2097 ;;                  1    wreg      void 
  2098 ;; Registers used:
  2099 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2100 ;; Tracked objects:
  2101 ;;		On entry : 0/0
  2102 ;;		On exit  : 0/0
  2103 ;;		Unchanged: 0/0
  2104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2105 ;;      Params:         0       2       0       0       0
  2106 ;;      Locals:         0       2       0       0       0
  2107 ;;      Temps:          0       3       0       0       0
  2108 ;;      Totals:         0       7       0       0       0
  2109 ;;Total ram usage:        7 bytes
  2110 ;; Hardware stack levels used: 1
  2111 ;; Hardware stack levels required when called: 4
  2112 ;; This function calls:
  2113 ;;		_Lcd_Write_Char
  2114 ;; This function is called by:
  2115 ;;		_yagBakim
  2116 ;;		_main
  2117 ;; This function uses a non-reentrant model
  2118 ;;
  2119                           
  2120     126D                     _Lcd_Write_String:	
  2121                           ;psect for function _Lcd_Write_String
  2122                           
  2123     126D                     l2284:	
  2124                           ;incstack = 0
  2125                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2126                           
  2127                           
  2128                           ;./lcd.h: 96: void Lcd_Write_String(char *a);./lcd.h: 97: {;./lcd.h: 98:  int i;;./lcd.h
      +                          : 99:  for(i=0;a[i]!='\0';i++)
  2129     126D  1283               	bcf	3,5	;RP0=0, select bank0
  2130     126E  1303               	bcf	3,6	;RP1=0, select bank0
  2131     126F  01AA               	clrf	Lcd_Write_String@i
  2132     1270  01AB               	clrf	Lcd_Write_String@i+1
  2133     1271  2A96               	goto	l2290
  2134     1272                     l2286:
  2135                           
  2136                           ;./lcd.h: 100:     Lcd_Write_Char(a[i]);
  2137     1272  082A               	movf	Lcd_Write_String@i,w
  2138     1273  0725               	addwf	Lcd_Write_String@a,w
  2139     1274  00A8               	movwf	??_Lcd_Write_String+1
  2140     1275  0826               	movf	Lcd_Write_String@a+1,w
  2141     1276  00A7               	movwf	??_Lcd_Write_String
  2142     1277  1803               	skipnc
  2143     1278  0AA7               	incf	??_Lcd_Write_String,f
  2144     1279  1FAA               	btfss	Lcd_Write_String@i,7
  2145     127A  2A7C               	goto	u2390
  2146     127B  03A7               	decf	??_Lcd_Write_String,f
  2147     127C                     u2390:
  2148     127C  1283               	bcf	3,5	;RP0=0, select bank0
  2149     127D  1303               	bcf	3,6	;RP1=0, select bank0
  2150     127E  0827               	movf	??_Lcd_Write_String,w
  2151     127F  00A9               	movwf	??_Lcd_Write_String+2
  2152     1280  0829               	movf	??_Lcd_Write_String+2,w
  2153     1281  00FF               	movwf	btemp+1
  2154     1282  0828               	movf	??_Lcd_Write_String+1,w
  2155     1283  0084               	movwf	4
  2156     1284  160A  118A  2000  160A  118A  	fcall	stringtab
  2157     1289  160A  158A  27C7  160A  118A  	fcall	_Lcd_Write_Char
  2158     128E                     l2288:
  2159     128E  3001               	movlw	1
  2160     128F  1283               	bcf	3,5	;RP0=0, select bank0
  2161     1290  1303               	bcf	3,6	;RP1=0, select bank0
  2162     1291  07AA               	addwf	Lcd_Write_String@i,f
  2163     1292  1803               	skipnc
  2164     1293  0AAB               	incf	Lcd_Write_String@i+1,f
  2165     1294  3000               	movlw	0
  2166     1295  07AB               	addwf	Lcd_Write_String@i+1,f
  2167     1296                     l2290:
  2168     1296  082A               	movf	Lcd_Write_String@i,w
  2169     1297  0725               	addwf	Lcd_Write_String@a,w
  2170     1298  00A8               	movwf	??_Lcd_Write_String+1
  2171     1299  0826               	movf	Lcd_Write_String@a+1,w
  2172     129A  00A7               	movwf	??_Lcd_Write_String
  2173     129B  1803               	skipnc
  2174     129C  0AA7               	incf	??_Lcd_Write_String,f
  2175     129D  1FAA               	btfss	Lcd_Write_String@i,7
  2176     129E  2AA0               	goto	u2400
  2177     129F  03A7               	decf	??_Lcd_Write_String,f
  2178     12A0                     u2400:
  2179     12A0  1283               	bcf	3,5	;RP0=0, select bank0
  2180     12A1  1303               	bcf	3,6	;RP1=0, select bank0
  2181     12A2  0827               	movf	??_Lcd_Write_String,w
  2182     12A3  00A9               	movwf	??_Lcd_Write_String+2
  2183     12A4  0829               	movf	??_Lcd_Write_String+2,w
  2184     12A5  00FF               	movwf	btemp+1
  2185     12A6  0828               	movf	??_Lcd_Write_String+1,w
  2186     12A7  0084               	movwf	4
  2187     12A8  160A  118A  2000  160A  118A  	fcall	stringtab
  2188     12AD  3A00               	xorlw	0
  2189     12AE  1D03               	skipz
  2190     12AF  2AB1               	goto	u2411
  2191     12B0  2AB2               	goto	u2410
  2192     12B1                     u2411:
  2193     12B1  2A72               	goto	l2286
  2194     12B2                     u2410:
  2195     12B2                     l170:
  2196     12B2  0008               	return
  2197     12B3                     __end_of_Lcd_Write_String:
  2198                           
  2199                           	psect	text3
  2200     1FC7                     __ptext3:	
  2201 ;; *************** function _Lcd_Write_Char *****************
  2202 ;; Defined at:
  2203 ;;		line 80 in file "./lcd.h"
  2204 ;; Parameters:    Size  Location     Type
  2205 ;;  a               1    wreg     unsigned char 
  2206 ;; Auto vars:     Size  Location     Type
  2207 ;;  a               1    4[BANK0 ] unsigned char 
  2208 ;;  y               1    3[BANK0 ] unsigned char 
  2209 ;;  temp            1    2[BANK0 ] unsigned char 
  2210 ;; Return value:  Size  Location     Type
  2211 ;;                  1    wreg      void 
  2212 ;; Registers used:
  2213 ;;		wreg, status,2, status,0, pclath, cstack
  2214 ;; Tracked objects:
  2215 ;;		On entry : 0/0
  2216 ;;		On exit  : 0/0
  2217 ;;		Unchanged: 0/0
  2218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2219 ;;      Params:         0       0       0       0       0
  2220 ;;      Locals:         0       3       0       0       0
  2221 ;;      Temps:          0       1       0       0       0
  2222 ;;      Totals:         0       4       0       0       0
  2223 ;;Total ram usage:        4 bytes
  2224 ;; Hardware stack levels used: 1
  2225 ;; Hardware stack levels required when called: 3
  2226 ;; This function calls:
  2227 ;;		_Lcd_Port
  2228 ;; This function is called by:
  2229 ;;		_Lcd_Write_String
  2230 ;; This function uses a non-reentrant model
  2231 ;;
  2232                           
  2233     1FC7                     _Lcd_Write_Char:	
  2234                           ;psect for function _Lcd_Write_Char
  2235                           
  2236                           
  2237                           ;incstack = 0
  2238                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2239                           ;Lcd_Write_Char@a stored from wreg
  2240     1FC7  1283               	bcf	3,5	;RP0=0, select bank0
  2241     1FC8  1303               	bcf	3,6	;RP1=0, select bank0
  2242     1FC9  00A4               	movwf	Lcd_Write_Char@a
  2243     1FCA                     l2238:
  2244                           
  2245                           ;./lcd.h: 80: void Lcd_Write_Char(char a);./lcd.h: 81: {;./lcd.h: 82:    char temp,y;;./
      +                          lcd.h: 83:    temp = a&0x0F;
  2246     1FCA  0824               	movf	Lcd_Write_Char@a,w
  2247     1FCB  390F               	andlw	15
  2248     1FCC  00A2               	movwf	Lcd_Write_Char@temp
  2249                           
  2250                           ;./lcd.h: 84:    y = a&0xF0;
  2251     1FCD  0824               	movf	Lcd_Write_Char@a,w
  2252     1FCE  39F0               	andlw	240
  2253     1FCF  00A3               	movwf	Lcd_Write_Char@y
  2254     1FD0                     l2240:
  2255                           
  2256                           ;./lcd.h: 85:    RB5 = 1;
  2257     1FD0  1686               	bsf	6,5	;volatile
  2258     1FD1                     l2242:
  2259                           
  2260                           ;./lcd.h: 86:    Lcd_Port(y>>4);
  2261     1FD1  0823               	movf	Lcd_Write_Char@y,w
  2262     1FD2  00A1               	movwf	??_Lcd_Write_Char
  2263     1FD3  3004               	movlw	4
  2264     1FD4                     u2335:
  2265     1FD4  1003               	clrc
  2266     1FD5  0CA1               	rrf	??_Lcd_Write_Char,f
  2267     1FD6  3EFF               	addlw	-1
  2268     1FD7  1D03               	skipz
  2269     1FD8  2FD4               	goto	u2335
  2270     1FD9  0821               	movf	??_Lcd_Write_Char,w
  2271     1FDA  160A  158A  2782  160A  158A  	fcall	_Lcd_Port
  2272     1FDF                     l2244:
  2273                           
  2274                           ;./lcd.h: 87:    RB4 = 1;
  2275     1FDF  1283               	bcf	3,5	;RP0=0, select bank0
  2276     1FE0  1303               	bcf	3,6	;RP1=0, select bank0
  2277     1FE1  1606               	bsf	6,4	;volatile
  2278     1FE2                     l2246:
  2279                           
  2280                           ;./lcd.h: 88:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  2281     1FE2  300C               	movlw	12
  2282     1FE3  1283               	bcf	3,5	;RP0=0, select bank0
  2283     1FE4  1303               	bcf	3,6	;RP1=0, select bank0
  2284     1FE5  00A1               	movwf	??_Lcd_Write_Char
  2285     1FE6                     u4657:
  2286     1FE6  0BA1               	decfsz	??_Lcd_Write_Char,f
  2287     1FE7  2FE6               	goto	u4657
  2288     1FE8  0000               	nop
  2289     1FE9                     l2248:
  2290                           
  2291                           ;./lcd.h: 89:    RB4 = 0;
  2292     1FE9  1283               	bcf	3,5	;RP0=0, select bank0
  2293     1FEA  1303               	bcf	3,6	;RP1=0, select bank0
  2294     1FEB  1206               	bcf	6,4	;volatile
  2295     1FEC                     l2250:
  2296                           
  2297                           ;./lcd.h: 90:    Lcd_Port(temp);
  2298     1FEC  0822               	movf	Lcd_Write_Char@temp,w
  2299     1FED  160A  158A  2782  160A  158A  	fcall	_Lcd_Port
  2300     1FF2                     l2252:
  2301                           
  2302                           ;./lcd.h: 91:    RB4 = 1;
  2303     1FF2  1283               	bcf	3,5	;RP0=0, select bank0
  2304     1FF3  1303               	bcf	3,6	;RP1=0, select bank0
  2305     1FF4  1606               	bsf	6,4	;volatile
  2306     1FF5                     l2254:
  2307                           
  2308                           ;./lcd.h: 92:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  2309     1FF5  300C               	movlw	12
  2310     1FF6  1283               	bcf	3,5	;RP0=0, select bank0
  2311     1FF7  1303               	bcf	3,6	;RP1=0, select bank0
  2312     1FF8  00A1               	movwf	??_Lcd_Write_Char
  2313     1FF9                     u4667:
  2314     1FF9  0BA1               	decfsz	??_Lcd_Write_Char,f
  2315     1FFA  2FF9               	goto	u4667
  2316     1FFB  0000               	nop
  2317     1FFC                     l2256:
  2318                           
  2319                           ;./lcd.h: 93:    RB4 = 0;
  2320     1FFC  1283               	bcf	3,5	;RP0=0, select bank0
  2321     1FFD  1303               	bcf	3,6	;RP1=0, select bank0
  2322     1FFE  1206               	bcf	6,4	;volatile
  2323     1FFF                     l164:
  2324     1FFF  0008               	return
  2325     2000                     __end_of_Lcd_Write_Char:
  2326                           
  2327                           	psect	text4
  2328     12B3                     __ptext4:	
  2329 ;; *************** function _Lcd_Set_Cursor *****************
  2330 ;; Defined at:
  2331 ;;		line 40 in file "./lcd.h"
  2332 ;; Parameters:    Size  Location     Type
  2333 ;;  a               1    wreg     unsigned char 
  2334 ;;  b               1    4[BANK0 ] unsigned char 
  2335 ;; Auto vars:     Size  Location     Type
  2336 ;;  a               1    6[BANK0 ] unsigned char 
  2337 ;;  temp            1    9[BANK0 ] unsigned char 
  2338 ;;  y               1    8[BANK0 ] unsigned char 
  2339 ;;  z               1    7[BANK0 ] unsigned char 
  2340 ;; Return value:  Size  Location     Type
  2341 ;;                  1    wreg      void 
  2342 ;; Registers used:
  2343 ;;		wreg, status,2, status,0, pclath, cstack
  2344 ;; Tracked objects:
  2345 ;;		On entry : 0/0
  2346 ;;		On exit  : 0/0
  2347 ;;		Unchanged: 0/0
  2348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2349 ;;      Params:         0       1       0       0       0
  2350 ;;      Locals:         0       4       0       0       0
  2351 ;;      Temps:          0       1       0       0       0
  2352 ;;      Totals:         0       6       0       0       0
  2353 ;;Total ram usage:        6 bytes
  2354 ;; Hardware stack levels used: 1
  2355 ;; Hardware stack levels required when called: 4
  2356 ;; This function calls:
  2357 ;;		_Lcd_Cmd
  2358 ;; This function is called by:
  2359 ;;		_yagBakim
  2360 ;;		_main
  2361 ;; This function uses a non-reentrant model
  2362 ;;
  2363                           
  2364     12B3                     _Lcd_Set_Cursor:	
  2365                           ;psect for function _Lcd_Set_Cursor
  2366                           
  2367                           
  2368                           ;incstack = 0
  2369                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2370                           ;Lcd_Set_Cursor@a stored from wreg
  2371     12B3  1283               	bcf	3,5	;RP0=0, select bank0
  2372     12B4  1303               	bcf	3,6	;RP1=0, select bank0
  2373     12B5  00A6               	movwf	Lcd_Set_Cursor@a
  2374     12B6                     l2264:
  2375                           
  2376                           ;./lcd.h: 40: void Lcd_Set_Cursor(char a, char b);./lcd.h: 41: {;./lcd.h: 42:  char temp
      +                          ,z,y;;./lcd.h: 43:  if(a == 1)
  2377     12B6  0326               	decf	Lcd_Set_Cursor@a,w
  2378     12B7  1D03               	btfss	3,2
  2379     12B8  2ABA               	goto	u2351
  2380     12B9  2ABB               	goto	u2350
  2381     12BA                     u2351:
  2382     12BA  2ADA               	goto	l2274
  2383     12BB                     u2350:
  2384     12BB                     l2266:
  2385                           
  2386                           ;./lcd.h: 44:  {;./lcd.h: 45:    temp = 0x80 + b - 1;
  2387     12BB  0824               	movf	Lcd_Set_Cursor@b,w
  2388     12BC  3E7F               	addlw	127
  2389     12BD  00A9               	movwf	Lcd_Set_Cursor@temp
  2390                           
  2391                           ;./lcd.h: 46:   z = temp>>4;
  2392     12BE  0829               	movf	Lcd_Set_Cursor@temp,w
  2393     12BF  00A5               	movwf	??_Lcd_Set_Cursor
  2394     12C0  3004               	movlw	4
  2395     12C1                     u2365:
  2396     12C1  1003               	clrc
  2397     12C2  0CA5               	rrf	??_Lcd_Set_Cursor,f
  2398     12C3  3EFF               	addlw	-1
  2399     12C4  1D03               	skipz
  2400     12C5  2AC1               	goto	u2365
  2401     12C6  0825               	movf	??_Lcd_Set_Cursor,w
  2402     12C7  00A7               	movwf	Lcd_Set_Cursor@z
  2403     12C8                     l2268:
  2404                           
  2405                           ;./lcd.h: 47:   y = temp & 0x0F;
  2406     12C8  0829               	movf	Lcd_Set_Cursor@temp,w
  2407     12C9  390F               	andlw	15
  2408     12CA  00A8               	movwf	Lcd_Set_Cursor@y
  2409     12CB                     l2270:
  2410                           
  2411                           ;./lcd.h: 48:   Lcd_Cmd(z);
  2412     12CB  0827               	movf	Lcd_Set_Cursor@z,w
  2413     12CC  160A  158A  274A  160A  118A  	fcall	_Lcd_Cmd
  2414     12D1                     l2272:
  2415                           
  2416                           ;./lcd.h: 49:   Lcd_Cmd(y);
  2417     12D1  1283               	bcf	3,5	;RP0=0, select bank0
  2418     12D2  1303               	bcf	3,6	;RP1=0, select bank0
  2419     12D3  0828               	movf	Lcd_Set_Cursor@y,w
  2420     12D4  160A  158A  274A  160A  118A  	fcall	_Lcd_Cmd
  2421                           
  2422                           ;./lcd.h: 50:  }
  2423     12D9  2AFE               	goto	l158
  2424     12DA                     l2274:
  2425     12DA  3002               	movlw	2
  2426     12DB  0626               	xorwf	Lcd_Set_Cursor@a,w
  2427     12DC  1D03               	btfss	3,2
  2428     12DD  2ADF               	goto	u2371
  2429     12DE  2AE0               	goto	u2370
  2430     12DF                     u2371:
  2431     12DF  2AFE               	goto	l158
  2432     12E0                     u2370:
  2433     12E0                     l2276:
  2434                           
  2435                           ;./lcd.h: 52:  {;./lcd.h: 53:   temp = 0xC0 + b - 1;
  2436     12E0  0824               	movf	Lcd_Set_Cursor@b,w
  2437     12E1  3EBF               	addlw	191
  2438     12E2  00A9               	movwf	Lcd_Set_Cursor@temp
  2439                           
  2440                           ;./lcd.h: 54:   z = temp>>4;
  2441     12E3  0829               	movf	Lcd_Set_Cursor@temp,w
  2442     12E4  00A5               	movwf	??_Lcd_Set_Cursor
  2443     12E5  3004               	movlw	4
  2444     12E6                     u2385:
  2445     12E6  1003               	clrc
  2446     12E7  0CA5               	rrf	??_Lcd_Set_Cursor,f
  2447     12E8  3EFF               	addlw	-1
  2448     12E9  1D03               	skipz
  2449     12EA  2AE6               	goto	u2385
  2450     12EB  0825               	movf	??_Lcd_Set_Cursor,w
  2451     12EC  00A7               	movwf	Lcd_Set_Cursor@z
  2452     12ED                     l2278:
  2453                           
  2454                           ;./lcd.h: 55:   y = temp & 0x0F;
  2455     12ED  0829               	movf	Lcd_Set_Cursor@temp,w
  2456     12EE  390F               	andlw	15
  2457     12EF  00A8               	movwf	Lcd_Set_Cursor@y
  2458     12F0                     l2280:
  2459                           
  2460                           ;./lcd.h: 56:   Lcd_Cmd(z);
  2461     12F0  0827               	movf	Lcd_Set_Cursor@z,w
  2462     12F1  160A  158A  274A  160A  118A  	fcall	_Lcd_Cmd
  2463     12F6                     l2282:
  2464                           
  2465                           ;./lcd.h: 57:   Lcd_Cmd(y);
  2466     12F6  1283               	bcf	3,5	;RP0=0, select bank0
  2467     12F7  1303               	bcf	3,6	;RP1=0, select bank0
  2468     12F8  0828               	movf	Lcd_Set_Cursor@y,w
  2469     12F9  160A  158A  274A  160A  118A  	fcall	_Lcd_Cmd
  2470     12FE                     l158:
  2471     12FE  0008               	return
  2472     12FF                     __end_of_Lcd_Set_Cursor:
  2473                           
  2474                           	psect	text5
  2475     1EF5                     __ptext5:	
  2476 ;; *************** function _Lcd_Clear *****************
  2477 ;; Defined at:
  2478 ;;		line 34 in file "./lcd.h"
  2479 ;; Parameters:    Size  Location     Type
  2480 ;;		None
  2481 ;; Auto vars:     Size  Location     Type
  2482 ;;		None
  2483 ;; Return value:  Size  Location     Type
  2484 ;;                  1    wreg      void 
  2485 ;; Registers used:
  2486 ;;		wreg, status,2, status,0, pclath, cstack
  2487 ;; Tracked objects:
  2488 ;;		On entry : 0/0
  2489 ;;		On exit  : 0/0
  2490 ;;		Unchanged: 0/0
  2491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2492 ;;      Params:         0       0       0       0       0
  2493 ;;      Locals:         0       0       0       0       0
  2494 ;;      Temps:          0       0       0       0       0
  2495 ;;      Totals:         0       0       0       0       0
  2496 ;;Total ram usage:        0 bytes
  2497 ;; Hardware stack levels used: 1
  2498 ;; Hardware stack levels required when called: 4
  2499 ;; This function calls:
  2500 ;;		_Lcd_Cmd
  2501 ;; This function is called by:
  2502 ;;		_yagBakim
  2503 ;;		_main
  2504 ;; This function uses a non-reentrant model
  2505 ;;
  2506                           
  2507     1EF5                     _Lcd_Clear:	
  2508                           ;psect for function _Lcd_Clear
  2509                           
  2510     1EF5                     l2262:	
  2511                           ;incstack = 0
  2512                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2513                           
  2514                           
  2515                           ;./lcd.h: 36:  Lcd_Cmd(0);
  2516     1EF5  3000               	movlw	0
  2517     1EF6  160A  158A  274A  160A  158A  	fcall	_Lcd_Cmd
  2518                           
  2519                           ;./lcd.h: 37:  Lcd_Cmd(1);
  2520     1EFB  3001               	movlw	1
  2521     1EFC  160A  158A  274A  160A  158A  	fcall	_Lcd_Cmd
  2522     1F01                     l152:
  2523     1F01  0008               	return
  2524     1F02                     __end_of_Lcd_Clear:
  2525                           
  2526                           	psect	text6
  2527     1F66                     __ptext6:	
  2528 ;; *************** function _writeEEPROM *****************
  2529 ;; Defined at:
  2530 ;;		line 54 in file "main1.c"
  2531 ;; Parameters:    Size  Location     Type
  2532 ;;  address         2    0[BANK0 ] unsigned int 
  2533 ;;  data            2    2[BANK0 ] unsigned int 
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;		None
  2536 ;; Return value:  Size  Location     Type
  2537 ;;                  1    wreg      void 
  2538 ;; Registers used:
  2539 ;;		wreg
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2545 ;;      Params:         0       4       0       0       0
  2546 ;;      Locals:         0       0       0       0       0
  2547 ;;      Temps:          0       0       0       0       0
  2548 ;;      Totals:         0       4       0       0       0
  2549 ;;Total ram usage:        4 bytes
  2550 ;; Hardware stack levels used: 1
  2551 ;; Hardware stack levels required when called: 2
  2552 ;; This function calls:
  2553 ;;		Nothing
  2554 ;; This function is called by:
  2555 ;;		_main
  2556 ;; This function uses a non-reentrant model
  2557 ;;
  2558                           
  2559     1F66                     _writeEEPROM:	
  2560                           ;psect for function _writeEEPROM
  2561                           
  2562     1F66                     l2426:	
  2563                           ;incstack = 0
  2564                           ; Regs used in _writeEEPROM: [wreg]
  2565                           
  2566                           
  2567                           ;main1.c: 56:     EEADR = address;
  2568     1F66  1283               	bcf	3,5	;RP0=0, select bank0
  2569     1F67  1303               	bcf	3,6	;RP1=0, select bank0
  2570     1F68  0820               	movf	writeEEPROM@address,w
  2571     1F69  1283               	bcf	3,5	;RP0=0, select bank2
  2572     1F6A  1703               	bsf	3,6	;RP1=1, select bank2
  2573     1F6B  008D               	movwf	13	;volatile
  2574                           
  2575                           ;main1.c: 57:     EEDATA = data;
  2576     1F6C  1283               	bcf	3,5	;RP0=0, select bank0
  2577     1F6D  1303               	bcf	3,6	;RP1=0, select bank0
  2578     1F6E  0822               	movf	writeEEPROM@data,w
  2579     1F6F  1283               	bcf	3,5	;RP0=0, select bank2
  2580     1F70  1703               	bsf	3,6	;RP1=1, select bank2
  2581     1F71  008C               	movwf	12	;volatile
  2582     1F72                     l2428:
  2583                           
  2584                           ;main1.c: 58:     WREN = 1;
  2585     1F72  1683               	bsf	3,5	;RP0=1, select bank3
  2586     1F73  1703               	bsf	3,6	;RP1=1, select bank3
  2587     1F74  150C               	bsf	12,2	;volsfr
  2588     1F75                     l2430:
  2589                           
  2590                           ;main1.c: 59:     GIE = 0;
  2591     1F75  138B               	bcf	11,7	;volatile
  2592                           
  2593                           ;main1.c: 60:     EECON2 = 0x55;
  2594     1F76  3055               	movlw	85
  2595     1F77  008D               	movwf	13	;volsfr
  2596                           
  2597                           ;main1.c: 61:     EECON2 = 0xAA;
  2598     1F78  30AA               	movlw	170
  2599     1F79  008D               	movwf	13	;volsfr
  2600     1F7A                     l2432:
  2601                           
  2602                           ;main1.c: 62:     WR = 1;
  2603     1F7A  148C               	bsf	12,1	;volsfr
  2604     1F7B                     l2434:
  2605                           
  2606                           ;main1.c: 63:     GIE = 1;
  2607     1F7B  178B               	bsf	11,7	;volatile
  2608     1F7C                     l2436:
  2609                           
  2610                           ;main1.c: 64:     WREN = 0;
  2611     1F7C  110C               	bcf	12,2	;volsfr
  2612     1F7D                     l186:	
  2613                           ;main1.c: 65:     while (WR == 1);
  2614                           
  2615     1F7D  188C               	btfsc	12,1	;volsfr
  2616     1F7E  2F80               	goto	u2681
  2617     1F7F  2F81               	goto	u2680
  2618     1F80                     u2681:
  2619     1F80  2F7D               	goto	l186
  2620     1F81                     u2680:
  2621     1F81                     l189:
  2622     1F81  0008               	return
  2623     1F82                     __end_of_writeEEPROM:
  2624                           
  2625                           	psect	text7
  2626     0A01                     __ptext7:	
  2627 ;; *************** function _sprintf *****************
  2628 ;; Defined at:
  2629 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  2630 ;; Parameters:    Size  Location     Type
  2631 ;;  sp              1    wreg     PTR unsigned char 
  2632 ;;		 -> main@combinedText_377(20), main@uartMessage_373(8), main@combinedText(20), main@uartMessage(8), 
  2633 ;;		 -> main@rpmString(5), main@adcString1(4), main@lcdText(9), 
  2634 ;;  f               2   12[BANK0 ] PTR const unsigned char 
  2635 ;;		 -> STR_25(6), STR_23(6), STR_19(6), STR_17(6), 
  2636 ;;		 -> STR_13(10), STR_11(6), STR_8(11), 
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;  sp              1   34[BANK0 ] PTR unsigned char 
  2639 ;;		 -> main@combinedText_377(20), main@uartMessage_373(8), main@combinedText(20), main@uartMessage(8), 
  2640 ;;		 -> main@rpmString(5), main@adcString1(4), main@lcdText(9), 
  2641 ;;  tmpval          4    0        struct .
  2642 ;;  width           2   31[BANK0 ] int 
  2643 ;;  val             2   28[BANK0 ] unsigned int 
  2644 ;;  cp              2    0        PTR const unsigned char 
  2645 ;;  len             2    0        unsigned int 
  2646 ;;  c               1   33[BANK0 ] unsigned char 
  2647 ;;  flag            1   30[BANK0 ] unsigned char 
  2648 ;;  ap              1   27[BANK0 ] PTR void [1]
  2649 ;;		 -> ?_sprintf(2), 
  2650 ;;  prec            1   26[BANK0 ] char 
  2651 ;; Return value:  Size  Location     Type
  2652 ;;                  2   12[BANK0 ] int 
  2653 ;; Registers used:
  2654 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2655 ;; Tracked objects:
  2656 ;;		On entry : 0/0
  2657 ;;		On exit  : 0/0
  2658 ;;		Unchanged: 0/0
  2659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2660 ;;      Params:         0      10       0       0       0
  2661 ;;      Locals:         0       9       0       0       0
  2662 ;;      Temps:          0       4       0       0       0
  2663 ;;      Totals:         0      23       0       0       0
  2664 ;;Total ram usage:       23 bytes
  2665 ;; Hardware stack levels used: 1
  2666 ;; Hardware stack levels required when called: 3
  2667 ;; This function calls:
  2668 ;;		___lwdiv
  2669 ;;		___lwmod
  2670 ;;		___wmul
  2671 ;;		_isdigit
  2672 ;; This function is called by:
  2673 ;;		_main
  2674 ;; This function uses a non-reentrant model
  2675 ;;
  2676                           
  2677     0A01                     _sprintf:	
  2678                           ;psect for function _sprintf
  2679                           
  2680                           
  2681                           ;incstack = 0
  2682                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2683                           ;sprintf@sp stored from wreg
  2684     0A01  1283               	bcf	3,5	;RP0=0, select bank0
  2685     0A02  1303               	bcf	3,6	;RP1=0, select bank0
  2686     0A03  00C2               	movwf	sprintf@sp
  2687     0A04                     l2452:
  2688                           
  2689                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  2690     0A04  302E               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  2691     0A05  00BB               	movwf	sprintf@ap
  2692                           
  2693                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2694     0A06  2BDD               	goto	l2562
  2695     0A07                     l2454:
  2696                           
  2697                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2698     0A07  3025               	movlw	37
  2699     0A08  0641               	xorwf	sprintf@c,w
  2700     0A09  1903               	btfsc	3,2
  2701     0A0A  2A0C               	goto	u2721
  2702     0A0B  2A0D               	goto	u2720
  2703     0A0C                     u2721:
  2704     0A0C  2A17               	goto	l2460
  2705     0A0D                     u2720:
  2706     0A0D                     l2456:
  2707                           
  2708                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2709     0A0D  0842               	movf	sprintf@sp,w
  2710     0A0E  0084               	movwf	4
  2711     0A0F  0841               	movf	sprintf@c,w
  2712     0A10  1383               	bcf	3,7	;select IRP bank0
  2713     0A11  0080               	movwf	0
  2714     0A12                     l2458:
  2715     0A12  3001               	movlw	1
  2716     0A13  00FF               	movwf	btemp+1
  2717     0A14  087F               	movf	btemp+1,w
  2718     0A15  07C2               	addwf	sprintf@sp,f
  2719                           
  2720                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 559:    continue;
  2721     0A16  2BDD               	goto	l2562
  2722     0A17                     l2460:
  2723                           
  2724                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2725     0A17  01BF               	clrf	sprintf@width
  2726     0A18  01C0               	clrf	sprintf@width+1
  2727                           
  2728                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2729     0A19  01BE               	clrf	sprintf@flag
  2730     0A1A  2A22               	goto	l2466
  2731     0A1B                     l377:	
  2732                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 596:    case '0':
  2733                           
  2734                           
  2735                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  2736     0A1B  153E               	bsf	sprintf@flag,2
  2737     0A1C                     l2462:
  2738                           
  2739                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 598:     f++;
  2740     0A1C  3001               	movlw	1
  2741     0A1D  07AC               	addwf	sprintf@f,f
  2742     0A1E  1803               	skipnc
  2743     0A1F  0AAD               	incf	sprintf@f+1,f
  2744     0A20  3000               	movlw	0
  2745     0A21  07AD               	addwf	sprintf@f+1,f
  2746     0A22                     l2466:	
  2747                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  2748                           
  2749     0A22  082D               	movf	sprintf@f+1,w
  2750     0A23  00FF               	movwf	btemp+1
  2751     0A24  082C               	movf	sprintf@f,w
  2752     0A25  0084               	movwf	4
  2753     0A26  160A  118A  2000  120A  158A  	fcall	stringtab
  2754     0A2B  00B6               	movwf	??_sprintf
  2755     0A2C  01B7               	clrf	??_sprintf+1
  2756                           
  2757                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2758                           ; Switch size 1, requested type "simple"
  2759                           ; Number of cases is 1, Range of values is 0 to 0
  2760                           ; switch strategies available:
  2761                           ; Name         Instructions Cycles
  2762                           ; simple_byte            4     3 (average)
  2763                           ; direct_byte           11     8 (fixed)
  2764                           ; jumptable            260     6 (fixed)
  2765                           ;	Chosen strategy is simple_byte
  2766     0A2D  0837               	movf	??_sprintf+1,w
  2767     0A2E  3A00               	xorlw	0	; case 0
  2768     0A2F  1903               	skipnz
  2769     0A30  2A32               	goto	l3506
  2770     0A31  2A37               	goto	l2468
  2771     0A32                     l3506:
  2772                           
  2773                           ; Switch size 1, requested type "simple"
  2774                           ; Number of cases is 1, Range of values is 48 to 48
  2775                           ; switch strategies available:
  2776                           ; Name         Instructions Cycles
  2777                           ; simple_byte            4     3 (average)
  2778                           ; direct_byte           14    11 (fixed)
  2779                           ; jumptable            263     9 (fixed)
  2780                           ;	Chosen strategy is simple_byte
  2781     0A32  0836               	movf	??_sprintf,w
  2782     0A33  3A30               	xorlw	48	; case 48
  2783     0A34  1903               	skipnz
  2784     0A35  2A1B               	goto	l377
  2785     0A36  2A37               	goto	l2468
  2786     0A37                     l2468:
  2787                           
  2788                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  2789     0A37  082D               	movf	sprintf@f+1,w
  2790     0A38  00FF               	movwf	btemp+1
  2791     0A39  082C               	movf	sprintf@f,w
  2792     0A3A  0084               	movwf	4
  2793     0A3B  160A  118A  2000  120A  158A  	fcall	stringtab
  2794     0A40  160A  158A  2720  120A  158A  	fcall	_isdigit
  2795     0A45  1C03               	btfss	3,0
  2796     0A46  2A48               	goto	u2731
  2797     0A47  2A49               	goto	u2730
  2798     0A48                     u2731:
  2799     0A48  2A92               	goto	l2482
  2800     0A49                     u2730:
  2801     0A49                     l2470:
  2802                           
  2803                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2804     0A49  1283               	bcf	3,5	;RP0=0, select bank0
  2805     0A4A  1303               	bcf	3,6	;RP1=0, select bank0
  2806     0A4B  01BF               	clrf	sprintf@width
  2807     0A4C  01C0               	clrf	sprintf@width+1
  2808     0A4D                     l2472:
  2809                           
  2810                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2811     0A4D  300A               	movlw	10
  2812     0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  2813     0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  2814     0A50  00A0               	movwf	___wmul@multiplier
  2815     0A51  3000               	movlw	0
  2816     0A52  00A1               	movwf	___wmul@multiplier+1
  2817     0A53  0840               	movf	sprintf@width+1,w
  2818     0A54  00A3               	movwf	___wmul@multiplicand+1
  2819     0A55  083F               	movf	sprintf@width,w
  2820     0A56  00A2               	movwf	___wmul@multiplicand
  2821     0A57  160A  118A  217E  120A  158A  	fcall	___wmul
  2822     0A5C  1283               	bcf	3,5	;RP0=0, select bank0
  2823     0A5D  1303               	bcf	3,6	;RP1=0, select bank0
  2824     0A5E  0821               	movf	?___wmul+1,w
  2825     0A5F  00C0               	movwf	sprintf@width+1
  2826     0A60  0820               	movf	?___wmul,w
  2827     0A61  00BF               	movwf	sprintf@width
  2828     0A62                     l2474:
  2829                           
  2830                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2831     0A62  082D               	movf	sprintf@f+1,w
  2832     0A63  00FF               	movwf	btemp+1
  2833     0A64  082C               	movf	sprintf@f,w
  2834     0A65  0084               	movwf	4
  2835     0A66  160A  118A  2000  120A  158A  	fcall	stringtab
  2836     0A6B  3ED0               	addlw	208
  2837     0A6C  00B6               	movwf	??_sprintf
  2838     0A6D  30FF               	movlw	255
  2839     0A6E  1803               	skipnc
  2840     0A6F  3000               	movlw	0
  2841     0A70  00B7               	movwf	??_sprintf+1
  2842     0A71  0836               	movf	??_sprintf,w
  2843     0A72  07BF               	addwf	sprintf@width,f
  2844     0A73  1803               	skipnc
  2845     0A74  0AC0               	incf	sprintf@width+1,f
  2846     0A75  0837               	movf	??_sprintf+1,w
  2847     0A76  07C0               	addwf	sprintf@width+1,f
  2848     0A77                     l2476:
  2849     0A77  3001               	movlw	1
  2850     0A78  07AC               	addwf	sprintf@f,f
  2851     0A79  1803               	skipnc
  2852     0A7A  0AAD               	incf	sprintf@f+1,f
  2853     0A7B  3000               	movlw	0
  2854     0A7C  07AD               	addwf	sprintf@f+1,f
  2855     0A7D                     l2478:
  2856                           
  2857                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2858     0A7D  082D               	movf	sprintf@f+1,w
  2859     0A7E  00FF               	movwf	btemp+1
  2860     0A7F  082C               	movf	sprintf@f,w
  2861     0A80  0084               	movwf	4
  2862     0A81  160A  118A  2000  120A  158A  	fcall	stringtab
  2863     0A86  160A  158A  2720  120A  158A  	fcall	_isdigit
  2864     0A8B  1803               	btfsc	3,0
  2865     0A8C  2A8E               	goto	u2741
  2866     0A8D  2A8F               	goto	u2740
  2867     0A8E                     u2741:
  2868     0A8E  2A4D               	goto	l2472
  2869     0A8F                     u2740:
  2870     0A8F  2A92               	goto	l2482
  2871     0A90                     l391:	
  2872                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 843:   case 'u':
  2873                           
  2874                           
  2875                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          x40;
  2876     0A90  173E               	bsf	sprintf@flag,6
  2877                           
  2878                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 845:    break;
  2879     0A91  2ABA               	goto	l389
  2880     0A92                     l2482:
  2881     0A92  1283               	bcf	3,5	;RP0=0, select bank0
  2882     0A93  1303               	bcf	3,6	;RP1=0, select bank0
  2883     0A94  082D               	movf	sprintf@f+1,w
  2884     0A95  00B7               	movwf	??_sprintf+1
  2885     0A96  082C               	movf	sprintf@f,w
  2886     0A97  00B6               	movwf	??_sprintf
  2887     0A98  0AAC               	incf	sprintf@f,f
  2888     0A99  1903               	skipnz
  2889     0A9A  0AAD               	incf	sprintf@f+1,f
  2890     0A9B  0837               	movf	??_sprintf+1,w
  2891     0A9C  00FF               	movwf	btemp+1
  2892     0A9D  0836               	movf	??_sprintf,w
  2893     0A9E  0084               	movwf	4
  2894     0A9F  160A  118A  2000  120A  158A  	fcall	stringtab
  2895     0AA4  00C1               	movwf	sprintf@c
  2896     0AA5  00B8               	movwf	??_sprintf+2
  2897     0AA6  01B9               	clrf	??_sprintf+3
  2898                           
  2899                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2900                           ; Switch size 1, requested type "simple"
  2901                           ; Number of cases is 1, Range of values is 0 to 0
  2902                           ; switch strategies available:
  2903                           ; Name         Instructions Cycles
  2904                           ; simple_byte            4     3 (average)
  2905                           ; direct_byte           11     8 (fixed)
  2906                           ; jumptable            260     6 (fixed)
  2907                           ;	Chosen strategy is simple_byte
  2908     0AA7  0839               	movf	??_sprintf+3,w
  2909     0AA8  3A00               	xorlw	0	; case 0
  2910     0AA9  1903               	skipnz
  2911     0AAA  2AAC               	goto	l3508
  2912     0AAB  2BDD               	goto	l2562
  2913     0AAC                     l3508:
  2914                           
  2915                           ; Switch size 1, requested type "simple"
  2916                           ; Number of cases is 4, Range of values is 0 to 117
  2917                           ; switch strategies available:
  2918                           ; Name         Instructions Cycles
  2919                           ; simple_byte           13     7 (average)
  2920                           ; jumptable            260     6 (fixed)
  2921                           ;	Chosen strategy is simple_byte
  2922     0AAC  0838               	movf	??_sprintf+2,w
  2923     0AAD  3A00               	xorlw	0	; case 0
  2924     0AAE  1903               	skipnz
  2925     0AAF  2BF3               	goto	l2564
  2926     0AB0  3A64               	xorlw	100	; case 100
  2927     0AB1  1903               	skipnz
  2928     0AB2  2ABA               	goto	l389
  2929     0AB3  3A0D               	xorlw	13	; case 105
  2930     0AB4  1903               	skipnz
  2931     0AB5  2ABA               	goto	l389
  2932     0AB6  3A1C               	xorlw	28	; case 117
  2933     0AB7  1903               	skipnz
  2934     0AB8  2A90               	goto	l391
  2935     0AB9  2BDD               	goto	l2562
  2936     0ABA                     l389:
  2937                           
  2938                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1277:   if((flag 
      +                          & 0x40) == 0x00)
  2939     0ABA  1B3E               	btfsc	sprintf@flag,6
  2940     0ABB  2ABD               	goto	u2751
  2941     0ABC  2ABE               	goto	u2750
  2942     0ABD                     u2751:
  2943     0ABD  2AD8               	goto	l2494
  2944     0ABE                     u2750:
  2945     0ABE                     l2484:
  2946                           
  2947                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2948     0ABE  083B               	movf	sprintf@ap,w
  2949     0ABF  0084               	movwf	4
  2950     0AC0  1383               	bcf	3,7	;select IRP bank0
  2951     0AC1  0800               	movf	0,w
  2952     0AC2  00BC               	movwf	sprintf@val
  2953     0AC3  0A84               	incf	4,f
  2954     0AC4  0800               	movf	0,w
  2955     0AC5  00BD               	movwf	sprintf@val+1
  2956     0AC6                     l2486:
  2957     0AC6  3002               	movlw	2
  2958     0AC7  00FF               	movwf	btemp+1
  2959     0AC8  087F               	movf	btemp+1,w
  2960     0AC9  07BB               	addwf	sprintf@ap,f
  2961     0ACA                     l2488:
  2962                           
  2963                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2964     0ACA  1FBD               	btfss	sprintf@val+1,7
  2965     0ACB  2ACD               	goto	u2761
  2966     0ACC  2ACE               	goto	u2760
  2967     0ACD                     u2761:
  2968     0ACD  2AE4               	goto	l2498
  2969     0ACE                     u2760:
  2970     0ACE                     l2490:
  2971                           
  2972                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2973     0ACE  3003               	movlw	3
  2974     0ACF  00FF               	movwf	btemp+1
  2975     0AD0  087F               	movf	btemp+1,w
  2976     0AD1  04BE               	iorwf	sprintf@flag,f
  2977     0AD2                     l2492:
  2978                           
  2979                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2980     0AD2  09BC               	comf	sprintf@val,f
  2981     0AD3  09BD               	comf	sprintf@val+1,f
  2982     0AD4  0ABC               	incf	sprintf@val,f
  2983     0AD5  1903               	skipnz
  2984     0AD6  0ABD               	incf	sprintf@val+1,f
  2985     0AD7  2AE4               	goto	l2498
  2986     0AD8                     l2494:
  2987                           
  2988                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2989     0AD8  083B               	movf	sprintf@ap,w
  2990     0AD9  0084               	movwf	4
  2991     0ADA  1383               	bcf	3,7	;select IRP bank0
  2992     0ADB  0800               	movf	0,w
  2993     0ADC  00BC               	movwf	sprintf@val
  2994     0ADD  0A84               	incf	4,f
  2995     0ADE  0800               	movf	0,w
  2996     0ADF  00BD               	movwf	sprintf@val+1
  2997     0AE0                     l2496:
  2998     0AE0  3002               	movlw	2
  2999     0AE1  00FF               	movwf	btemp+1
  3000     0AE2  087F               	movf	btemp+1,w
  3001     0AE3  07BB               	addwf	sprintf@ap,f
  3002     0AE4                     l2498:
  3003                           
  3004                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3005     0AE4  01C1               	clrf	sprintf@c
  3006     0AE5  0AC1               	incf	sprintf@c,f
  3007     0AE6                     l2504:
  3008                           
  3009                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  3010     0AE6  0841               	movf	sprintf@c,w
  3011     0AE7  00B6               	movwf	??_sprintf
  3012     0AE8  0736               	addwf	??_sprintf,w
  3013     0AE9  3E12               	addlw	low (_dpowers| (0+32768))
  3014     0AEA  0084               	movwf	4
  3015     0AEB  3090               	movlw	high (_dpowers| (0+32768))
  3016     0AEC  1803               	skipnc
  3017     0AED  3E01               	addlw	1
  3018     0AEE  00FF               	movwf	btemp+1
  3019     0AEF  160A  118A  2000  120A  158A  	fcall	stringtab
  3020     0AF4  00B7               	movwf	??_sprintf+1
  3021     0AF5  160A  118A  2000  120A  158A  	fcall	stringtab
  3022     0AFA  00B8               	movwf	??_sprintf+2
  3023     0AFB  0838               	movf	??_sprintf+2,w
  3024     0AFC  023D               	subwf	sprintf@val+1,w
  3025     0AFD  1D03               	skipz
  3026     0AFE  2B01               	goto	u2775
  3027     0AFF  0837               	movf	??_sprintf+1,w
  3028     0B00  023C               	subwf	sprintf@val,w
  3029     0B01                     u2775:
  3030     0B01  1803               	skipnc
  3031     0B02  2B04               	goto	u2771
  3032     0B03  2B05               	goto	u2770
  3033     0B04                     u2771:
  3034     0B04  2B06               	goto	l2508
  3035     0B05                     u2770:
  3036     0B05  2B10               	goto	l2512
  3037     0B06                     l2508:
  3038     0B06  3001               	movlw	1
  3039     0B07  00FF               	movwf	btemp+1
  3040     0B08  087F               	movf	btemp+1,w
  3041     0B09  07C1               	addwf	sprintf@c,f
  3042     0B0A                     l2510:
  3043     0B0A  3005               	movlw	5
  3044     0B0B  0641               	xorwf	sprintf@c,w
  3045     0B0C  1D03               	btfss	3,2
  3046     0B0D  2B0F               	goto	u2781
  3047     0B0E  2B10               	goto	u2780
  3048     0B0F                     u2781:
  3049     0B0F  2AE6               	goto	l2504
  3050     0B10                     u2780:
  3051     0B10                     l2512:
  3052                           
  3053                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  3054     0B10  083F               	movf	sprintf@width,w
  3055     0B11  0440               	iorwf	sprintf@width+1,w
  3056     0B12  1903               	btfsc	3,2
  3057     0B13  2B15               	goto	u2791
  3058     0B14  2B16               	goto	u2790
  3059     0B15                     u2791:
  3060     0B15  2B22               	goto	l398
  3061     0B16                     u2790:
  3062     0B16                     l2514:
  3063     0B16  083E               	movf	sprintf@flag,w
  3064     0B17  3903               	andlw	3
  3065     0B18  1903               	btfsc	3,2
  3066     0B19  2B1B               	goto	u2801
  3067     0B1A  2B1C               	goto	u2800
  3068     0B1B                     u2801:
  3069     0B1B  2B22               	goto	l398
  3070     0B1C                     u2800:
  3071     0B1C                     l2516:
  3072                           
  3073                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1372:    width--;
  3074     0B1C  30FF               	movlw	255
  3075     0B1D  07BF               	addwf	sprintf@width,f
  3076     0B1E  1803               	skipnc
  3077     0B1F  0AC0               	incf	sprintf@width+1,f
  3078     0B20  30FF               	movlw	255
  3079     0B21  07C0               	addwf	sprintf@width+1,f
  3080     0B22                     l398:
  3081                           
  3082                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  3083     0B22  0840               	movf	sprintf@width+1,w
  3084     0B23  3A80               	xorlw	128
  3085     0B24  3C80               	sublw	128
  3086     0B25  1D03               	skipz
  3087     0B26  2B29               	goto	u2815
  3088     0B27  083F               	movf	sprintf@width,w
  3089     0B28  0241               	subwf	sprintf@c,w
  3090     0B29                     u2815:
  3091     0B29  1803               	skipnc
  3092     0B2A  2B2C               	goto	u2811
  3093     0B2B  2B2D               	goto	u2810
  3094     0B2C                     u2811:
  3095     0B2C  2B39               	goto	l2520
  3096     0B2D                     u2810:
  3097     0B2D                     l2518:
  3098                           
  3099                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  3100     0B2D  1283               	bcf	3,5	;RP0=0, select bank0
  3101     0B2E  1303               	bcf	3,6	;RP1=0, select bank0
  3102     0B2F  0841               	movf	sprintf@c,w
  3103     0B30  00B6               	movwf	??_sprintf
  3104     0B31  01B7               	clrf	??_sprintf+1
  3105     0B32  0836               	movf	??_sprintf,w
  3106     0B33  02BF               	subwf	sprintf@width,f
  3107     0B34  0837               	movf	??_sprintf+1,w
  3108     0B35  1C03               	skipc
  3109     0B36  03C0               	decf	sprintf@width+1,f
  3110     0B37  02C0               	subwf	sprintf@width+1,f
  3111     0B38  2B3D               	goto	l2522
  3112     0B39                     l2520:
  3113                           
  3114                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  3115     0B39  1283               	bcf	3,5	;RP0=0, select bank0
  3116     0B3A  1303               	bcf	3,6	;RP1=0, select bank0
  3117     0B3B  01BF               	clrf	sprintf@width
  3118     0B3C  01C0               	clrf	sprintf@width+1
  3119     0B3D                     l2522:
  3120                           
  3121                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  3122     0B3D  1D3E               	btfss	sprintf@flag,2
  3123     0B3E  2B40               	goto	u2821
  3124     0B3F  2B41               	goto	u2820
  3125     0B40                     u2821:
  3126     0B40  2B6C               	goto	l2538
  3127     0B41                     u2820:
  3128     0B41                     l2524:
  3129                           
  3130                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1418:    if(flag 
      +                          & 0x03)
  3131     0B41  083E               	movf	sprintf@flag,w
  3132     0B42  3903               	andlw	3
  3133     0B43  1903               	btfsc	3,2
  3134     0B44  2B46               	goto	u2831
  3135     0B45  2B47               	goto	u2830
  3136     0B46                     u2831:
  3137     0B46  2B50               	goto	l2530
  3138     0B47                     u2830:
  3139     0B47                     l2526:
  3140                           
  3141                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1419:     ((*sp++
      +                           = ('-')));
  3142     0B47  0842               	movf	sprintf@sp,w
  3143     0B48  0084               	movwf	4
  3144     0B49  302D               	movlw	45
  3145     0B4A  1383               	bcf	3,7	;select IRP bank0
  3146     0B4B  0080               	movwf	0
  3147     0B4C                     l2528:
  3148     0B4C  3001               	movlw	1
  3149     0B4D  00FF               	movwf	btemp+1
  3150     0B4E  087F               	movf	btemp+1,w
  3151     0B4F  07C2               	addwf	sprintf@sp,f
  3152     0B50                     l2530:
  3153                           
  3154                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  3155     0B50  083F               	movf	sprintf@width,w
  3156     0B51  0440               	iorwf	sprintf@width+1,w
  3157     0B52  1903               	btfsc	3,2
  3158     0B53  2B55               	goto	u2841
  3159     0B54  2B56               	goto	u2840
  3160     0B55                     u2841:
  3161     0B55  2B96               	goto	l2552
  3162     0B56                     u2840:
  3163     0B56                     l2532:
  3164                           
  3165                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
  3166     0B56  0842               	movf	sprintf@sp,w
  3167     0B57  0084               	movwf	4
  3168     0B58  3030               	movlw	48
  3169     0B59  1383               	bcf	3,7	;select IRP bank0
  3170     0B5A  0080               	movwf	0
  3171     0B5B                     l2534:
  3172     0B5B  3001               	movlw	1
  3173     0B5C  00FF               	movwf	btemp+1
  3174     0B5D  087F               	movf	btemp+1,w
  3175     0B5E  07C2               	addwf	sprintf@sp,f
  3176     0B5F                     l2536:
  3177     0B5F  30FF               	movlw	255
  3178     0B60  07BF               	addwf	sprintf@width,f
  3179     0B61  1803               	skipnc
  3180     0B62  0AC0               	incf	sprintf@width+1,f
  3181     0B63  30FF               	movlw	255
  3182     0B64  07C0               	addwf	sprintf@width+1,f
  3183     0B65  083F               	movf	sprintf@width,w
  3184     0B66  0440               	iorwf	sprintf@width+1,w
  3185     0B67  1D03               	btfss	3,2
  3186     0B68  2B6A               	goto	u2851
  3187     0B69  2B6B               	goto	u2850
  3188     0B6A                     u2851:
  3189     0B6A  2B56               	goto	l2532
  3190     0B6B                     u2850:
  3191     0B6B  2B96               	goto	l2552
  3192     0B6C                     l2538:
  3193                           
  3194                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1450:    if(width
  3195     0B6C  083F               	movf	sprintf@width,w
  3196     0B6D  0440               	iorwf	sprintf@width+1,w
  3197     0B6E  1903               	btfsc	3,2
  3198     0B6F  2B71               	goto	u2861
  3199     0B70  2B72               	goto	u2860
  3200     0B71                     u2861:
  3201     0B71  2B87               	goto	l2546
  3202     0B72                     u2860:
  3203     0B72                     l2540:
  3204                           
  3205                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  3206     0B72  0842               	movf	sprintf@sp,w
  3207     0B73  0084               	movwf	4
  3208     0B74  3020               	movlw	32
  3209     0B75  1383               	bcf	3,7	;select IRP bank0
  3210     0B76  0080               	movwf	0
  3211     0B77                     l2542:
  3212     0B77  3001               	movlw	1
  3213     0B78  00FF               	movwf	btemp+1
  3214     0B79  087F               	movf	btemp+1,w
  3215     0B7A  07C2               	addwf	sprintf@sp,f
  3216     0B7B                     l2544:
  3217     0B7B  30FF               	movlw	255
  3218     0B7C  07BF               	addwf	sprintf@width,f
  3219     0B7D  1803               	skipnc
  3220     0B7E  0AC0               	incf	sprintf@width+1,f
  3221     0B7F  30FF               	movlw	255
  3222     0B80  07C0               	addwf	sprintf@width+1,f
  3223     0B81  083F               	movf	sprintf@width,w
  3224     0B82  0440               	iorwf	sprintf@width+1,w
  3225     0B83  1D03               	btfss	3,2
  3226     0B84  2B86               	goto	u2871
  3227     0B85  2B87               	goto	u2870
  3228     0B86                     u2871:
  3229     0B86  2B72               	goto	l2540
  3230     0B87                     u2870:
  3231     0B87                     l2546:
  3232                           
  3233                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  3234     0B87  083E               	movf	sprintf@flag,w
  3235     0B88  3903               	andlw	3
  3236     0B89  1903               	btfsc	3,2
  3237     0B8A  2B8C               	goto	u2881
  3238     0B8B  2B8D               	goto	u2880
  3239     0B8C                     u2881:
  3240     0B8C  2B96               	goto	l2552
  3241     0B8D                     u2880:
  3242     0B8D                     l2548:
  3243                           
  3244                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3245     0B8D  0842               	movf	sprintf@sp,w
  3246     0B8E  0084               	movwf	4
  3247     0B8F  302D               	movlw	45
  3248     0B90  1383               	bcf	3,7	;select IRP bank0
  3249     0B91  0080               	movwf	0
  3250     0B92                     l2550:
  3251     0B92  3001               	movlw	1
  3252     0B93  00FF               	movwf	btemp+1
  3253     0B94  087F               	movf	btemp+1,w
  3254     0B95  07C2               	addwf	sprintf@sp,f
  3255     0B96                     l2552:
  3256                           
  3257                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  3258     0B96  0841               	movf	sprintf@c,w
  3259     0B97  00BA               	movwf	sprintf@prec
  3260                           
  3261                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3262     0B98  2BD4               	goto	l2560
  3263     0B99                     l2554:
  3264                           
  3265                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  3266     0B99  300A               	movlw	10
  3267     0B9A  00A7               	movwf	___lwmod@divisor
  3268     0B9B  3000               	movlw	0
  3269     0B9C  00A8               	movwf	___lwmod@divisor+1
  3270     0B9D  083A               	movf	sprintf@prec,w
  3271     0B9E  00B6               	movwf	??_sprintf
  3272     0B9F  0736               	addwf	??_sprintf,w
  3273     0BA0  3E12               	addlw	low (_dpowers| (0+32768))
  3274     0BA1  0084               	movwf	4
  3275     0BA2  3090               	movlw	high (_dpowers| (0+32768))
  3276     0BA3  1803               	skipnc
  3277     0BA4  3E01               	addlw	1
  3278     0BA5  00FF               	movwf	btemp+1
  3279     0BA6  160A  118A  2000  120A  158A  	fcall	stringtab
  3280     0BAB  00A0               	movwf	___lwdiv@divisor
  3281     0BAC  160A  118A  2000  120A  158A  	fcall	stringtab
  3282     0BB1  00A1               	movwf	___lwdiv@divisor+1
  3283     0BB2  083D               	movf	sprintf@val+1,w
  3284     0BB3  00A3               	movwf	___lwdiv@dividend+1
  3285     0BB4  083C               	movf	sprintf@val,w
  3286     0BB5  00A2               	movwf	___lwdiv@dividend
  3287     0BB6  160A  118A  2227  120A  158A  	fcall	___lwdiv
  3288     0BBB  1283               	bcf	3,5	;RP0=0, select bank0
  3289     0BBC  1303               	bcf	3,6	;RP1=0, select bank0
  3290     0BBD  0821               	movf	?___lwdiv+1,w
  3291     0BBE  00AA               	movwf	___lwmod@dividend+1
  3292     0BBF  0820               	movf	?___lwdiv,w
  3293     0BC0  00A9               	movwf	___lwmod@dividend
  3294     0BC1  160A  118A  21A5  120A  158A  	fcall	___lwmod
  3295     0BC6  1283               	bcf	3,5	;RP0=0, select bank0
  3296     0BC7  1303               	bcf	3,6	;RP1=0, select bank0
  3297     0BC8  0827               	movf	?___lwmod,w
  3298     0BC9  3E30               	addlw	48
  3299     0BCA  00C1               	movwf	sprintf@c
  3300     0BCB                     l2556:
  3301                           
  3302                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  3303     0BCB  0842               	movf	sprintf@sp,w
  3304     0BCC  0084               	movwf	4
  3305     0BCD  0841               	movf	sprintf@c,w
  3306     0BCE  1383               	bcf	3,7	;select IRP bank0
  3307     0BCF  0080               	movwf	0
  3308     0BD0                     l2558:
  3309     0BD0  3001               	movlw	1
  3310     0BD1  00FF               	movwf	btemp+1
  3311     0BD2  087F               	movf	btemp+1,w
  3312     0BD3  07C2               	addwf	sprintf@sp,f
  3313     0BD4                     l2560:
  3314                           
  3315                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3316     0BD4  30FF               	movlw	255
  3317     0BD5  00FF               	movwf	btemp+1
  3318     0BD6  087F               	movf	btemp+1,w
  3319     0BD7  07BA               	addwf	sprintf@prec,f
  3320     0BD8  0A3A               	incf	sprintf@prec,w
  3321     0BD9  1D03               	btfss	3,2
  3322     0BDA  2BDC               	goto	u2891
  3323     0BDB  2BDD               	goto	u2890
  3324     0BDC                     u2891:
  3325     0BDC  2B99               	goto	l2554
  3326     0BDD                     u2890:
  3327     0BDD                     l2562:
  3328                           
  3329                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3330     0BDD  082D               	movf	sprintf@f+1,w
  3331     0BDE  00B7               	movwf	??_sprintf+1
  3332     0BDF  082C               	movf	sprintf@f,w
  3333     0BE0  00B6               	movwf	??_sprintf
  3334     0BE1  0AAC               	incf	sprintf@f,f
  3335     0BE2  1903               	skipnz
  3336     0BE3  0AAD               	incf	sprintf@f+1,f
  3337     0BE4  0837               	movf	??_sprintf+1,w
  3338     0BE5  00FF               	movwf	btemp+1
  3339     0BE6  0836               	movf	??_sprintf,w
  3340     0BE7  0084               	movwf	4
  3341     0BE8  160A  118A  2000  120A  158A  	fcall	stringtab
  3342     0BED  00C1               	movwf	sprintf@c
  3343     0BEE  0841               	movf	sprintf@c,w
  3344     0BEF  1D03               	btfss	3,2
  3345     0BF0  2BF2               	goto	u2901
  3346     0BF1  2BF3               	goto	u2900
  3347     0BF2                     u2901:
  3348     0BF2  2A07               	goto	l2454
  3349     0BF3                     u2900:
  3350     0BF3                     l2564:
  3351                           
  3352                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3353     0BF3  0842               	movf	sprintf@sp,w
  3354     0BF4  0084               	movwf	4
  3355     0BF5  1383               	bcf	3,7	;select IRP bank0
  3356     0BF6  0180               	clrf	0
  3357     0BF7                     l415:
  3358     0BF7  0008               	return
  3359     0BF8                     __end_of_sprintf:
  3360                           
  3361                           	psect	text8
  3362     1F20                     __ptext8:	
  3363 ;; *************** function _isdigit *****************
  3364 ;; Defined at:
  3365 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\isdigit.c"
  3366 ;; Parameters:    Size  Location     Type
  3367 ;;  c               1    wreg     unsigned char 
  3368 ;; Auto vars:     Size  Location     Type
  3369 ;;  c               1    1[BANK0 ] unsigned char 
  3370 ;; Return value:  Size  Location     Type
  3371 ;;		None               void
  3372 ;; Registers used:
  3373 ;;		wreg, status,2, status,0
  3374 ;; Tracked objects:
  3375 ;;		On entry : 0/0
  3376 ;;		On exit  : 0/0
  3377 ;;		Unchanged: 0/0
  3378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3379 ;;      Params:         0       0       0       0       0
  3380 ;;      Locals:         0       2       0       0       0
  3381 ;;      Temps:          0       0       0       0       0
  3382 ;;      Totals:         0       2       0       0       0
  3383 ;;Total ram usage:        2 bytes
  3384 ;; Hardware stack levels used: 1
  3385 ;; Hardware stack levels required when called: 2
  3386 ;; This function calls:
  3387 ;;		Nothing
  3388 ;; This function is called by:
  3389 ;;		_sprintf
  3390 ;; This function uses a non-reentrant model
  3391 ;;
  3392                           
  3393     1F20                     _isdigit:	
  3394                           ;psect for function _isdigit
  3395                           
  3396                           
  3397                           ;incstack = 0
  3398                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3399                           ;isdigit@c stored from wreg
  3400     1F20  1283               	bcf	3,5	;RP0=0, select bank0
  3401     1F21  1303               	bcf	3,6	;RP1=0, select bank0
  3402     1F22  00A1               	movwf	isdigit@c
  3403     1F23                     l2292:
  3404     1F23  01A0               	clrf	_isdigit$840
  3405     1F24                     l2294:
  3406     1F24  303A               	movlw	58
  3407     1F25  0221               	subwf	isdigit@c,w
  3408     1F26  1803               	skipnc
  3409     1F27  2F29               	goto	u2421
  3410     1F28  2F2A               	goto	u2420
  3411     1F29                     u2421:
  3412     1F29  2F32               	goto	l2300
  3413     1F2A                     u2420:
  3414     1F2A                     l2296:
  3415     1F2A  3030               	movlw	48
  3416     1F2B  0221               	subwf	isdigit@c,w
  3417     1F2C  1C03               	skipc
  3418     1F2D  2F2F               	goto	u2431
  3419     1F2E  2F30               	goto	u2430
  3420     1F2F                     u2431:
  3421     1F2F  2F32               	goto	l2300
  3422     1F30                     u2430:
  3423     1F30                     l2298:
  3424     1F30  01A0               	clrf	_isdigit$840
  3425     1F31  0AA0               	incf	_isdigit$840,f
  3426     1F32                     l2300:
  3427     1F32  0C20               	rrf	_isdigit$840,w
  3428     1F33                     l872:
  3429     1F33  0008               	return
  3430     1F34                     __end_of_isdigit:
  3431                           
  3432                           	psect	text9
  3433     117E                     __ptext9:	
  3434 ;; *************** function ___wmul *****************
  3435 ;; Defined at:
  3436 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  3437 ;; Parameters:    Size  Location     Type
  3438 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3439 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;  product         2    4[BANK0 ] unsigned int 
  3442 ;; Return value:  Size  Location     Type
  3443 ;;                  2    0[BANK0 ] unsigned int 
  3444 ;; Registers used:
  3445 ;;		wreg, status,2, status,0
  3446 ;; Tracked objects:
  3447 ;;		On entry : 0/0
  3448 ;;		On exit  : 0/0
  3449 ;;		Unchanged: 0/0
  3450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3451 ;;      Params:         0       4       0       0       0
  3452 ;;      Locals:         0       2       0       0       0
  3453 ;;      Temps:          0       0       0       0       0
  3454 ;;      Totals:         0       6       0       0       0
  3455 ;;Total ram usage:        6 bytes
  3456 ;; Hardware stack levels used: 1
  3457 ;; Hardware stack levels required when called: 2
  3458 ;; This function calls:
  3459 ;;		Nothing
  3460 ;; This function is called by:
  3461 ;;		_main
  3462 ;;		_sprintf
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465                           
  3466     117E                     ___wmul:	
  3467                           ;psect for function ___wmul
  3468                           
  3469     117E                     l2304:	
  3470                           ;incstack = 0
  3471                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3472                           
  3473     117E  1283               	bcf	3,5	;RP0=0, select bank0
  3474     117F  1303               	bcf	3,6	;RP1=0, select bank0
  3475     1180  01A4               	clrf	___wmul@product
  3476     1181  01A5               	clrf	___wmul@product+1
  3477     1182                     l2306:
  3478     1182  1C20               	btfss	___wmul@multiplier,0
  3479     1183  2985               	goto	u2441
  3480     1184  2986               	goto	u2440
  3481     1185                     u2441:
  3482     1185  298C               	goto	l419
  3483     1186                     u2440:
  3484     1186                     l2308:
  3485     1186  0822               	movf	___wmul@multiplicand,w
  3486     1187  07A4               	addwf	___wmul@product,f
  3487     1188  1803               	skipnc
  3488     1189  0AA5               	incf	___wmul@product+1,f
  3489     118A  0823               	movf	___wmul@multiplicand+1,w
  3490     118B  07A5               	addwf	___wmul@product+1,f
  3491     118C                     l419:
  3492     118C  3001               	movlw	1
  3493     118D                     u2455:
  3494     118D  1003               	clrc
  3495     118E  0DA2               	rlf	___wmul@multiplicand,f
  3496     118F  0DA3               	rlf	___wmul@multiplicand+1,f
  3497     1190  3EFF               	addlw	-1
  3498     1191  1D03               	skipz
  3499     1192  298D               	goto	u2455
  3500     1193                     l2310:
  3501     1193  3001               	movlw	1
  3502     1194                     u2465:
  3503     1194  1003               	clrc
  3504     1195  0CA1               	rrf	___wmul@multiplier+1,f
  3505     1196  0CA0               	rrf	___wmul@multiplier,f
  3506     1197  3EFF               	addlw	-1
  3507     1198  1D03               	skipz
  3508     1199  2994               	goto	u2465
  3509     119A                     l2312:
  3510     119A  0820               	movf	___wmul@multiplier,w
  3511     119B  0421               	iorwf	___wmul@multiplier+1,w
  3512     119C  1D03               	btfss	3,2
  3513     119D  299F               	goto	u2471
  3514     119E  29A0               	goto	u2470
  3515     119F                     u2471:
  3516     119F  2982               	goto	l2306
  3517     11A0                     u2470:
  3518     11A0                     l2314:
  3519     11A0  0825               	movf	___wmul@product+1,w
  3520     11A1  00A1               	movwf	?___wmul+1
  3521     11A2  0824               	movf	___wmul@product,w
  3522     11A3  00A0               	movwf	?___wmul
  3523     11A4                     l421:
  3524     11A4  0008               	return
  3525     11A5                     __end_of___wmul:
  3526                           
  3527                           	psect	text10
  3528     11A5                     __ptext10:	
  3529 ;; *************** function ___lwmod *****************
  3530 ;; Defined at:
  3531 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  3532 ;; Parameters:    Size  Location     Type
  3533 ;;  divisor         2    7[BANK0 ] unsigned int 
  3534 ;;  dividend        2    9[BANK0 ] unsigned int 
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;  counter         1   11[BANK0 ] unsigned char 
  3537 ;; Return value:  Size  Location     Type
  3538 ;;                  2    7[BANK0 ] unsigned int 
  3539 ;; Registers used:
  3540 ;;		wreg, status,2, status,0, btemp+1
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3546 ;;      Params:         0       4       0       0       0
  3547 ;;      Locals:         0       1       0       0       0
  3548 ;;      Temps:          0       0       0       0       0
  3549 ;;      Totals:         0       5       0       0       0
  3550 ;;Total ram usage:        5 bytes
  3551 ;; Hardware stack levels used: 1
  3552 ;; Hardware stack levels required when called: 2
  3553 ;; This function calls:
  3554 ;;		Nothing
  3555 ;; This function is called by:
  3556 ;;		_sprintf
  3557 ;; This function uses a non-reentrant model
  3558 ;;
  3559                           
  3560     11A5                     ___lwmod:	
  3561                           ;psect for function ___lwmod
  3562                           
  3563     11A5                     l2344:	
  3564                           ;incstack = 0
  3565                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  3566                           
  3567     11A5  1283               	bcf	3,5	;RP0=0, select bank0
  3568     11A6  1303               	bcf	3,6	;RP1=0, select bank0
  3569     11A7  0827               	movf	___lwmod@divisor,w
  3570     11A8  0428               	iorwf	___lwmod@divisor+1,w
  3571     11A9  1903               	btfsc	3,2
  3572     11AA  29AC               	goto	u2551
  3573     11AB  29AD               	goto	u2550
  3574     11AC                     u2551:
  3575     11AC  29DC               	goto	l2362
  3576     11AD                     u2550:
  3577     11AD                     l2346:
  3578     11AD  01AB               	clrf	___lwmod@counter
  3579     11AE  0AAB               	incf	___lwmod@counter,f
  3580     11AF  29BB               	goto	l2352
  3581     11B0                     l2348:
  3582     11B0  3001               	movlw	1
  3583     11B1                     u2565:
  3584     11B1  1003               	clrc
  3585     11B2  0DA7               	rlf	___lwmod@divisor,f
  3586     11B3  0DA8               	rlf	___lwmod@divisor+1,f
  3587     11B4  3EFF               	addlw	-1
  3588     11B5  1D03               	skipz
  3589     11B6  29B1               	goto	u2565
  3590     11B7                     l2350:
  3591     11B7  3001               	movlw	1
  3592     11B8  00FF               	movwf	btemp+1
  3593     11B9  087F               	movf	btemp+1,w
  3594     11BA  07AB               	addwf	___lwmod@counter,f
  3595     11BB                     l2352:
  3596     11BB  1FA8               	btfss	___lwmod@divisor+1,7
  3597     11BC  29BE               	goto	u2571
  3598     11BD  29BF               	goto	u2570
  3599     11BE                     u2571:
  3600     11BE  29B0               	goto	l2348
  3601     11BF                     u2570:
  3602     11BF                     l2354:
  3603     11BF  0828               	movf	___lwmod@divisor+1,w
  3604     11C0  022A               	subwf	___lwmod@dividend+1,w
  3605     11C1  1D03               	skipz
  3606     11C2  29C5               	goto	u2585
  3607     11C3  0827               	movf	___lwmod@divisor,w
  3608     11C4  0229               	subwf	___lwmod@dividend,w
  3609     11C5                     u2585:
  3610     11C5  1C03               	skipc
  3611     11C6  29C8               	goto	u2581
  3612     11C7  29C9               	goto	u2580
  3613     11C8                     u2581:
  3614     11C8  29CF               	goto	l2358
  3615     11C9                     u2580:
  3616     11C9                     l2356:
  3617     11C9  0827               	movf	___lwmod@divisor,w
  3618     11CA  02A9               	subwf	___lwmod@dividend,f
  3619     11CB  0828               	movf	___lwmod@divisor+1,w
  3620     11CC  1C03               	skipc
  3621     11CD  03AA               	decf	___lwmod@dividend+1,f
  3622     11CE  02AA               	subwf	___lwmod@dividend+1,f
  3623     11CF                     l2358:
  3624     11CF  3001               	movlw	1
  3625     11D0                     u2595:
  3626     11D0  1003               	clrc
  3627     11D1  0CA8               	rrf	___lwmod@divisor+1,f
  3628     11D2  0CA7               	rrf	___lwmod@divisor,f
  3629     11D3  3EFF               	addlw	-1
  3630     11D4  1D03               	skipz
  3631     11D5  29D0               	goto	u2595
  3632     11D6                     l2360:
  3633     11D6  3001               	movlw	1
  3634     11D7  02AB               	subwf	___lwmod@counter,f
  3635     11D8  1D03               	btfss	3,2
  3636     11D9  29DB               	goto	u2601
  3637     11DA  29DC               	goto	u2600
  3638     11DB                     u2601:
  3639     11DB  29BF               	goto	l2354
  3640     11DC                     u2600:
  3641     11DC                     l2362:
  3642     11DC  082A               	movf	___lwmod@dividend+1,w
  3643     11DD  00A8               	movwf	?___lwmod+1
  3644     11DE  0829               	movf	___lwmod@dividend,w
  3645     11DF  00A7               	movwf	?___lwmod
  3646     11E0                     l701:
  3647     11E0  0008               	return
  3648     11E1                     __end_of___lwmod:
  3649                           
  3650                           	psect	text11
  3651     1227                     __ptext11:	
  3652 ;; *************** function ___lwdiv *****************
  3653 ;; Defined at:
  3654 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  3655 ;; Parameters:    Size  Location     Type
  3656 ;;  divisor         2    0[BANK0 ] unsigned int 
  3657 ;;  dividend        2    2[BANK0 ] unsigned int 
  3658 ;; Auto vars:     Size  Location     Type
  3659 ;;  quotient        2    4[BANK0 ] unsigned int 
  3660 ;;  counter         1    6[BANK0 ] unsigned char 
  3661 ;; Return value:  Size  Location     Type
  3662 ;;                  2    0[BANK0 ] unsigned int 
  3663 ;; Registers used:
  3664 ;;		wreg, status,2, status,0, btemp+1
  3665 ;; Tracked objects:
  3666 ;;		On entry : 0/0
  3667 ;;		On exit  : 0/0
  3668 ;;		Unchanged: 0/0
  3669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3670 ;;      Params:         0       4       0       0       0
  3671 ;;      Locals:         0       3       0       0       0
  3672 ;;      Temps:          0       0       0       0       0
  3673 ;;      Totals:         0       7       0       0       0
  3674 ;;Total ram usage:        7 bytes
  3675 ;; Hardware stack levels used: 1
  3676 ;; Hardware stack levels required when called: 2
  3677 ;; This function calls:
  3678 ;;		Nothing
  3679 ;; This function is called by:
  3680 ;;		_sprintf
  3681 ;; This function uses a non-reentrant model
  3682 ;;
  3683                           
  3684     1227                     ___lwdiv:	
  3685                           ;psect for function ___lwdiv
  3686                           
  3687     1227                     l2318:	
  3688                           ;incstack = 0
  3689                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  3690                           
  3691     1227  1283               	bcf	3,5	;RP0=0, select bank0
  3692     1228  1303               	bcf	3,6	;RP1=0, select bank0
  3693     1229  01A4               	clrf	___lwdiv@quotient
  3694     122A  01A5               	clrf	___lwdiv@quotient+1
  3695     122B                     l2320:
  3696     122B  0820               	movf	___lwdiv@divisor,w
  3697     122C  0421               	iorwf	___lwdiv@divisor+1,w
  3698     122D  1903               	btfsc	3,2
  3699     122E  2A30               	goto	u2481
  3700     122F  2A31               	goto	u2480
  3701     1230                     u2481:
  3702     1230  2A68               	goto	l2340
  3703     1231                     u2480:
  3704     1231                     l2322:
  3705     1231  01A6               	clrf	___lwdiv@counter
  3706     1232  0AA6               	incf	___lwdiv@counter,f
  3707     1233  2A3F               	goto	l2328
  3708     1234                     l2324:
  3709     1234  3001               	movlw	1
  3710     1235                     u2495:
  3711     1235  1003               	clrc
  3712     1236  0DA0               	rlf	___lwdiv@divisor,f
  3713     1237  0DA1               	rlf	___lwdiv@divisor+1,f
  3714     1238  3EFF               	addlw	-1
  3715     1239  1D03               	skipz
  3716     123A  2A35               	goto	u2495
  3717     123B                     l2326:
  3718     123B  3001               	movlw	1
  3719     123C  00FF               	movwf	btemp+1
  3720     123D  087F               	movf	btemp+1,w
  3721     123E  07A6               	addwf	___lwdiv@counter,f
  3722     123F                     l2328:
  3723     123F  1FA1               	btfss	___lwdiv@divisor+1,7
  3724     1240  2A42               	goto	u2501
  3725     1241  2A43               	goto	u2500
  3726     1242                     u2501:
  3727     1242  2A34               	goto	l2324
  3728     1243                     u2500:
  3729     1243                     l2330:
  3730     1243  3001               	movlw	1
  3731     1244                     u2515:
  3732     1244  1003               	clrc
  3733     1245  0DA4               	rlf	___lwdiv@quotient,f
  3734     1246  0DA5               	rlf	___lwdiv@quotient+1,f
  3735     1247  3EFF               	addlw	-1
  3736     1248  1D03               	skipz
  3737     1249  2A44               	goto	u2515
  3738     124A  0821               	movf	___lwdiv@divisor+1,w
  3739     124B  0223               	subwf	___lwdiv@dividend+1,w
  3740     124C  1D03               	skipz
  3741     124D  2A50               	goto	u2525
  3742     124E  0820               	movf	___lwdiv@divisor,w
  3743     124F  0222               	subwf	___lwdiv@dividend,w
  3744     1250                     u2525:
  3745     1250  1C03               	skipc
  3746     1251  2A53               	goto	u2521
  3747     1252  2A54               	goto	u2520
  3748     1253                     u2521:
  3749     1253  2A5B               	goto	l2336
  3750     1254                     u2520:
  3751     1254                     l2332:
  3752     1254  0820               	movf	___lwdiv@divisor,w
  3753     1255  02A2               	subwf	___lwdiv@dividend,f
  3754     1256  0821               	movf	___lwdiv@divisor+1,w
  3755     1257  1C03               	skipc
  3756     1258  03A3               	decf	___lwdiv@dividend+1,f
  3757     1259  02A3               	subwf	___lwdiv@dividend+1,f
  3758     125A                     l2334:
  3759     125A  1424               	bsf	___lwdiv@quotient,0
  3760     125B                     l2336:
  3761     125B  3001               	movlw	1
  3762     125C                     u2535:
  3763     125C  1003               	clrc
  3764     125D  0CA1               	rrf	___lwdiv@divisor+1,f
  3765     125E  0CA0               	rrf	___lwdiv@divisor,f
  3766     125F  3EFF               	addlw	-1
  3767     1260  1D03               	skipz
  3768     1261  2A5C               	goto	u2535
  3769     1262                     l2338:
  3770     1262  3001               	movlw	1
  3771     1263  02A6               	subwf	___lwdiv@counter,f
  3772     1264  1D03               	btfss	3,2
  3773     1265  2A67               	goto	u2541
  3774     1266  2A68               	goto	u2540
  3775     1267                     u2541:
  3776     1267  2A43               	goto	l2330
  3777     1268                     u2540:
  3778     1268                     l2340:
  3779     1268  0825               	movf	___lwdiv@quotient+1,w
  3780     1269  00A1               	movwf	?___lwdiv+1
  3781     126A  0824               	movf	___lwdiv@quotient,w
  3782     126B  00A0               	movwf	?___lwdiv
  3783     126C                     l691:
  3784     126C  0008               	return
  3785     126D                     __end_of___lwdiv:
  3786                           
  3787                           	psect	text12
  3788     07EB                     __ptext12:	
  3789 ;; *************** function _readEEPROM *****************
  3790 ;; Defined at:
  3791 ;;		line 68 in file "main1.c"
  3792 ;; Parameters:    Size  Location     Type
  3793 ;;  address         2    6[BANK0 ] unsigned int 
  3794 ;; Auto vars:     Size  Location     Type
  3795 ;;		None
  3796 ;; Return value:  Size  Location     Type
  3797 ;;                  2    6[BANK0 ] unsigned int 
  3798 ;; Registers used:
  3799 ;;		wreg
  3800 ;; Tracked objects:
  3801 ;;		On entry : 0/0
  3802 ;;		On exit  : 0/0
  3803 ;;		Unchanged: 0/0
  3804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3805 ;;      Params:         0       2       0       0       0
  3806 ;;      Locals:         0       0       0       0       0
  3807 ;;      Temps:          0       2       0       0       0
  3808 ;;      Totals:         0       4       0       0       0
  3809 ;;Total ram usage:        4 bytes
  3810 ;; Hardware stack levels used: 1
  3811 ;; Hardware stack levels required when called: 2
  3812 ;; This function calls:
  3813 ;;		Nothing
  3814 ;; This function is called by:
  3815 ;;		_main
  3816 ;; This function uses a non-reentrant model
  3817 ;;
  3818                           
  3819     07EB                     _readEEPROM:	
  3820                           ;psect for function _readEEPROM
  3821                           
  3822     07EB                     l2438:	
  3823                           ;incstack = 0
  3824                           ; Regs used in _readEEPROM: [wreg]
  3825                           
  3826                           
  3827                           ;main1.c: 70:     EEADR = address;
  3828     07EB  1283               	bcf	3,5	;RP0=0, select bank0
  3829     07EC  1303               	bcf	3,6	;RP1=0, select bank0
  3830     07ED  0826               	movf	readEEPROM@address,w
  3831     07EE  1283               	bcf	3,5	;RP0=0, select bank2
  3832     07EF  1703               	bsf	3,6	;RP1=1, select bank2
  3833     07F0  008D               	movwf	13	;volatile
  3834     07F1                     l2440:
  3835                           
  3836                           ;main1.c: 71:     RD = 1;
  3837     07F1  1683               	bsf	3,5	;RP0=1, select bank3
  3838     07F2  1703               	bsf	3,6	;RP1=1, select bank3
  3839     07F3  140C               	bsf	12,0	;volsfr
  3840                           
  3841                           ;main1.c: 72:     return EEDATA;
  3842     07F4  1283               	bcf	3,5	;RP0=0, select bank2
  3843     07F5  1703               	bsf	3,6	;RP1=1, select bank2
  3844     07F6  080C               	movf	12,w	;volatile
  3845     07F7  1283               	bcf	3,5	;RP0=0, select bank0
  3846     07F8  1303               	bcf	3,6	;RP1=0, select bank0
  3847     07F9  00A8               	movwf	??_readEEPROM
  3848     07FA  01A9               	clrf	??_readEEPROM+1
  3849     07FB  0828               	movf	??_readEEPROM,w
  3850     07FC  00A6               	movwf	?_readEEPROM
  3851     07FD  0829               	movf	??_readEEPROM+1,w
  3852     07FE  00A7               	movwf	?_readEEPROM+1
  3853     07FF                     l192:
  3854     07FF  0008               	return
  3855     0800                     __end_of_readEEPROM:
  3856                           
  3857                           	psect	text13
  3858     15E2                     __ptext13:	
  3859 ;; *************** function ___xxtofl *****************
  3860 ;; Defined at:
  3861 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\xxtofl.c"
  3862 ;; Parameters:    Size  Location     Type
  3863 ;;  sign            1    wreg     unsigned char 
  3864 ;;  val             4    0[BANK0 ] long 
  3865 ;; Auto vars:     Size  Location     Type
  3866 ;;  sign            1    8[BANK0 ] unsigned char 
  3867 ;;  arg             4   10[BANK0 ] unsigned long 
  3868 ;;  exp             1    9[BANK0 ] unsigned char 
  3869 ;; Return value:  Size  Location     Type
  3870 ;;                  4    0[BANK0 ] unsigned char 
  3871 ;; Registers used:
  3872 ;;		wreg, status,2, status,0, btemp+1
  3873 ;; Tracked objects:
  3874 ;;		On entry : 0/0
  3875 ;;		On exit  : 0/0
  3876 ;;		Unchanged: 0/0
  3877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3878 ;;      Params:         0       4       0       0       0
  3879 ;;      Locals:         0       6       0       0       0
  3880 ;;      Temps:          0       4       0       0       0
  3881 ;;      Totals:         0      14       0       0       0
  3882 ;;Total ram usage:       14 bytes
  3883 ;; Hardware stack levels used: 1
  3884 ;; Hardware stack levels required when called: 2
  3885 ;; This function calls:
  3886 ;;		Nothing
  3887 ;; This function is called by:
  3888 ;;		_main
  3889 ;; This function uses a non-reentrant model
  3890 ;;
  3891                           
  3892     15E2                     ___xxtofl:	
  3893                           ;psect for function ___xxtofl
  3894                           
  3895                           
  3896                           ;incstack = 0
  3897                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  3898                           ;___xxtofl@sign stored from wreg
  3899     15E2  1283               	bcf	3,5	;RP0=0, select bank0
  3900     15E3  1303               	bcf	3,6	;RP1=0, select bank0
  3901     15E4  00A8               	movwf	___xxtofl@sign
  3902     15E5                     l2984:
  3903     15E5  0828               	movf	___xxtofl@sign,w
  3904     15E6  1903               	btfsc	3,2
  3905     15E7  2DE9               	goto	u3861
  3906     15E8  2DEA               	goto	u3860
  3907     15E9                     u3861:
  3908     15E9  2DFE               	goto	l2990
  3909     15EA                     u3860:
  3910     15EA                     l2986:
  3911     15EA  1FA3               	btfss	___xxtofl@val+3,7
  3912     15EB  2DED               	goto	u3871
  3913     15EC  2DEE               	goto	u3870
  3914     15ED                     u3871:
  3915     15ED  2DFE               	goto	l2990
  3916     15EE                     u3870:
  3917     15EE                     l2988:
  3918     15EE  0920               	comf	___xxtofl@val,w
  3919     15EF  00AA               	movwf	___xxtofl@arg
  3920     15F0  0921               	comf	___xxtofl@val+1,w
  3921     15F1  00AB               	movwf	___xxtofl@arg+1
  3922     15F2  0922               	comf	___xxtofl@val+2,w
  3923     15F3  00AC               	movwf	___xxtofl@arg+2
  3924     15F4  0923               	comf	___xxtofl@val+3,w
  3925     15F5  00AD               	movwf	___xxtofl@arg+3
  3926     15F6  0AAA               	incf	___xxtofl@arg,f
  3927     15F7  1903               	skipnz
  3928     15F8  0AAB               	incf	___xxtofl@arg+1,f
  3929     15F9  1903               	skipnz
  3930     15FA  0AAC               	incf	___xxtofl@arg+2,f
  3931     15FB  1903               	skipnz
  3932     15FC  0AAD               	incf	___xxtofl@arg+3,f
  3933     15FD  2E06               	goto	l852
  3934     15FE                     l2990:
  3935     15FE  0823               	movf	___xxtofl@val+3,w
  3936     15FF  00AD               	movwf	___xxtofl@arg+3
  3937     1600  0822               	movf	___xxtofl@val+2,w
  3938     1601  00AC               	movwf	___xxtofl@arg+2
  3939     1602  0821               	movf	___xxtofl@val+1,w
  3940     1603  00AB               	movwf	___xxtofl@arg+1
  3941     1604  0820               	movf	___xxtofl@val,w
  3942     1605  00AA               	movwf	___xxtofl@arg
  3943     1606                     l852:
  3944     1606  0823               	movf	___xxtofl@val+3,w
  3945     1607  0422               	iorwf	___xxtofl@val+2,w
  3946     1608  0421               	iorwf	___xxtofl@val+1,w
  3947     1609  0420               	iorwf	___xxtofl@val,w
  3948     160A  1D03               	skipz
  3949     160B  2E0D               	goto	u3881
  3950     160C  2E0E               	goto	u3880
  3951     160D                     u3881:
  3952     160D  2E17               	goto	l2996
  3953     160E                     u3880:
  3954     160E                     l2992:
  3955     160E  3000               	movlw	0
  3956     160F  00A3               	movwf	?___xxtofl+3
  3957     1610  3000               	movlw	0
  3958     1611  00A2               	movwf	?___xxtofl+2
  3959     1612  3000               	movlw	0
  3960     1613  00A1               	movwf	?___xxtofl+1
  3961     1614  3000               	movlw	0
  3962     1615  00A0               	movwf	?___xxtofl
  3963     1616  2E9B               	goto	l854
  3964     1617                     l2996:
  3965     1617  3096               	movlw	150
  3966     1618  00A9               	movwf	___xxtofl@exp
  3967     1619  2E27               	goto	l3002
  3968     161A                     l2998:
  3969     161A  3001               	movlw	1
  3970     161B  00FF               	movwf	btemp+1
  3971     161C  087F               	movf	btemp+1,w
  3972     161D  07A9               	addwf	___xxtofl@exp,f
  3973     161E                     l3000:
  3974     161E  3001               	movlw	1
  3975     161F                     u3895:
  3976     161F  1003               	clrc
  3977     1620  0CAD               	rrf	___xxtofl@arg+3,f
  3978     1621  0CAC               	rrf	___xxtofl@arg+2,f
  3979     1622  0CAB               	rrf	___xxtofl@arg+1,f
  3980     1623  0CAA               	rrf	___xxtofl@arg,f
  3981     1624  3EFF               	addlw	-1
  3982     1625  1D03               	skipz
  3983     1626  2E1F               	goto	u3895
  3984     1627                     l3002:
  3985     1627  30FE               	movlw	254
  3986     1628  052D               	andwf	___xxtofl@arg+3,w
  3987     1629  1D03               	btfss	3,2
  3988     162A  2E2C               	goto	u3901
  3989     162B  2E2D               	goto	u3900
  3990     162C                     u3901:
  3991     162C  2E1A               	goto	l2998
  3992     162D                     u3900:
  3993     162D  2E49               	goto	l3010
  3994     162E                     l3004:
  3995     162E  3001               	movlw	1
  3996     162F  00FF               	movwf	btemp+1
  3997     1630  087F               	movf	btemp+1,w
  3998     1631  07A9               	addwf	___xxtofl@exp,f
  3999     1632                     l3006:
  4000     1632  3001               	movlw	1
  4001     1633  07AA               	addwf	___xxtofl@arg,f
  4002     1634  3000               	movlw	0
  4003     1635  1803               	skipnc
  4004     1636  3001               	movlw	1
  4005     1637  07AB               	addwf	___xxtofl@arg+1,f
  4006     1638  3000               	movlw	0
  4007     1639  1803               	skipnc
  4008     163A  3001               	movlw	1
  4009     163B  07AC               	addwf	___xxtofl@arg+2,f
  4010     163C  3000               	movlw	0
  4011     163D  1803               	skipnc
  4012     163E  3001               	movlw	1
  4013     163F  07AD               	addwf	___xxtofl@arg+3,f
  4014     1640                     l3008:
  4015     1640  3001               	movlw	1
  4016     1641                     u3915:
  4017     1641  1003               	clrc
  4018     1642  0CAD               	rrf	___xxtofl@arg+3,f
  4019     1643  0CAC               	rrf	___xxtofl@arg+2,f
  4020     1644  0CAB               	rrf	___xxtofl@arg+1,f
  4021     1645  0CAA               	rrf	___xxtofl@arg,f
  4022     1646  3EFF               	addlw	-1
  4023     1647  1D03               	skipz
  4024     1648  2E41               	goto	u3915
  4025     1649                     l3010:
  4026     1649  30FF               	movlw	255
  4027     164A  052D               	andwf	___xxtofl@arg+3,w
  4028     164B  1D03               	btfss	3,2
  4029     164C  2E4E               	goto	u3921
  4030     164D  2E4F               	goto	u3920
  4031     164E                     u3921:
  4032     164E  2E2E               	goto	l3004
  4033     164F                     u3920:
  4034     164F  2E5B               	goto	l3014
  4035     1650                     l3012:
  4036     1650  3001               	movlw	1
  4037     1651  02A9               	subwf	___xxtofl@exp,f
  4038     1652  3001               	movlw	1
  4039     1653  00A4               	movwf	??___xxtofl
  4040     1654                     u3935:
  4041     1654  1003               	clrc
  4042     1655  0DAA               	rlf	___xxtofl@arg,f
  4043     1656  0DAB               	rlf	___xxtofl@arg+1,f
  4044     1657  0DAC               	rlf	___xxtofl@arg+2,f
  4045     1658  0DAD               	rlf	___xxtofl@arg+3,f
  4046     1659  0BA4               	decfsz	??___xxtofl,f
  4047     165A  2E54               	goto	u3935
  4048     165B                     l3014:
  4049     165B  1BAC               	btfsc	___xxtofl@arg+2,7
  4050     165C  2E5E               	goto	u3941
  4051     165D  2E5F               	goto	u3940
  4052     165E                     u3941:
  4053     165E  2E65               	goto	l865
  4054     165F                     u3940:
  4055     165F                     l3016:
  4056     165F  3002               	movlw	2
  4057     1660  0229               	subwf	___xxtofl@exp,w
  4058     1661  1803               	skipnc
  4059     1662  2E64               	goto	u3951
  4060     1663  2E65               	goto	u3950
  4061     1664                     u3951:
  4062     1664  2E50               	goto	l3012
  4063     1665                     u3950:
  4064     1665                     l865:
  4065     1665  1829               	btfsc	___xxtofl@exp,0
  4066     1666  2E68               	goto	u3961
  4067     1667  2E69               	goto	u3960
  4068     1668                     u3961:
  4069     1668  2E71               	goto	l866
  4070     1669                     u3960:
  4071     1669                     l3018:
  4072     1669  30FF               	movlw	255
  4073     166A  05AA               	andwf	___xxtofl@arg,f
  4074     166B  30FF               	movlw	255
  4075     166C  05AB               	andwf	___xxtofl@arg+1,f
  4076     166D  307F               	movlw	127
  4077     166E  05AC               	andwf	___xxtofl@arg+2,f
  4078     166F  30FF               	movlw	255
  4079     1670  05AD               	andwf	___xxtofl@arg+3,f
  4080     1671                     l866:
  4081     1671  1003               	clrc
  4082     1672  0CA9               	rrf	___xxtofl@exp,f
  4083     1673                     l3020:
  4084     1673  0829               	movf	___xxtofl@exp,w
  4085     1674  00A4               	movwf	??___xxtofl
  4086     1675  01A5               	clrf	??___xxtofl+1
  4087     1676  01A6               	clrf	??___xxtofl+2
  4088     1677  01A7               	clrf	??___xxtofl+3
  4089     1678  3018               	movlw	24
  4090     1679                     u3975:
  4091     1679  1003               	clrc
  4092     167A  0DA4               	rlf	??___xxtofl,f
  4093     167B  0DA5               	rlf	??___xxtofl+1,f
  4094     167C  0DA6               	rlf	??___xxtofl+2,f
  4095     167D  0DA7               	rlf	??___xxtofl+3,f
  4096     167E                     u3970:
  4097     167E  3EFF               	addlw	-1
  4098     167F  1D03               	skipz
  4099     1680  2E79               	goto	u3975
  4100     1681  0824               	movf	??___xxtofl,w
  4101     1682  04AA               	iorwf	___xxtofl@arg,f
  4102     1683  0825               	movf	??___xxtofl+1,w
  4103     1684  04AB               	iorwf	___xxtofl@arg+1,f
  4104     1685  0826               	movf	??___xxtofl+2,w
  4105     1686  04AC               	iorwf	___xxtofl@arg+2,f
  4106     1687  0827               	movf	??___xxtofl+3,w
  4107     1688  04AD               	iorwf	___xxtofl@arg+3,f
  4108     1689                     l3022:
  4109     1689  0828               	movf	___xxtofl@sign,w
  4110     168A  1903               	btfsc	3,2
  4111     168B  2E8D               	goto	u3981
  4112     168C  2E8E               	goto	u3980
  4113     168D                     u3981:
  4114     168D  2E93               	goto	l3028
  4115     168E                     u3980:
  4116     168E                     l3024:
  4117     168E  1FA3               	btfss	___xxtofl@val+3,7
  4118     168F  2E91               	goto	u3991
  4119     1690  2E92               	goto	u3990
  4120     1691                     u3991:
  4121     1691  2E93               	goto	l3028
  4122     1692                     u3990:
  4123     1692                     l3026:
  4124     1692  17AD               	bsf	___xxtofl@arg+3,7
  4125     1693                     l3028:
  4126     1693  082D               	movf	___xxtofl@arg+3,w
  4127     1694  00A3               	movwf	?___xxtofl+3
  4128     1695  082C               	movf	___xxtofl@arg+2,w
  4129     1696  00A2               	movwf	?___xxtofl+2
  4130     1697  082B               	movf	___xxtofl@arg+1,w
  4131     1698  00A1               	movwf	?___xxtofl+1
  4132     1699  082A               	movf	___xxtofl@arg,w
  4133     169A  00A0               	movwf	?___xxtofl
  4134     169B                     l854:
  4135     169B  0008               	return
  4136     169C                     __end_of___xxtofl:
  4137                           
  4138                           	psect	text14
  4139     14DF                     __ptext14:	
  4140 ;; *************** function ___fltol *****************
  4141 ;; Defined at:
  4142 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fltol.c"
  4143 ;; Parameters:    Size  Location     Type
  4144 ;;  f1              4    0[BANK0 ] unsigned char 
  4145 ;; Auto vars:     Size  Location     Type
  4146 ;;  exp1            1    9[BANK0 ] unsigned char 
  4147 ;;  sign1           1    8[BANK0 ] unsigned char 
  4148 ;; Return value:  Size  Location     Type
  4149 ;;                  4    0[BANK0 ] long 
  4150 ;; Registers used:
  4151 ;;		wreg, status,2, status,0, btemp+1
  4152 ;; Tracked objects:
  4153 ;;		On entry : 0/0
  4154 ;;		On exit  : 0/0
  4155 ;;		Unchanged: 0/0
  4156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4157 ;;      Params:         0       4       0       0       0
  4158 ;;      Locals:         0       2       0       0       0
  4159 ;;      Temps:          0       4       0       0       0
  4160 ;;      Totals:         0      10       0       0       0
  4161 ;;Total ram usage:       10 bytes
  4162 ;; Hardware stack levels used: 1
  4163 ;; Hardware stack levels required when called: 2
  4164 ;; This function calls:
  4165 ;;		Nothing
  4166 ;; This function is called by:
  4167 ;;		_main
  4168 ;; This function uses a non-reentrant model
  4169 ;;
  4170                           
  4171     14DF                     ___fltol:	
  4172                           ;psect for function ___fltol
  4173                           
  4174     14DF                     l2658:	
  4175                           ;incstack = 0
  4176                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  4177                           
  4178     14DF  1003               	clrc
  4179     14E0  1283               	bcf	3,5	;RP0=0, select bank0
  4180     14E1  1303               	bcf	3,6	;RP1=0, select bank0
  4181     14E2  0D22               	rlf	___fltol@f1+2,w
  4182     14E3  0D23               	rlf	___fltol@f1+3,w
  4183     14E4  00A9               	movwf	___fltol@exp1
  4184     14E5  0829               	movf	___fltol@exp1,w
  4185     14E6  1D03               	btfss	3,2
  4186     14E7  2CE9               	goto	u3101
  4187     14E8  2CEA               	goto	u3100
  4188     14E9                     u3101:
  4189     14E9  2CF3               	goto	l2664
  4190     14EA                     u3100:
  4191     14EA                     l2660:
  4192     14EA  3000               	movlw	0
  4193     14EB  00A3               	movwf	?___fltol+3
  4194     14EC  3000               	movlw	0
  4195     14ED  00A2               	movwf	?___fltol+2
  4196     14EE  3000               	movlw	0
  4197     14EF  00A1               	movwf	?___fltol+1
  4198     14F0  3000               	movlw	0
  4199     14F1  00A0               	movwf	?___fltol
  4200     14F2  2D56               	goto	l605
  4201     14F3                     l2664:
  4202     14F3  0820               	movf	___fltol@f1,w
  4203     14F4  00A4               	movwf	??___fltol
  4204     14F5  0821               	movf	___fltol@f1+1,w
  4205     14F6  00A5               	movwf	??___fltol+1
  4206     14F7  0822               	movf	___fltol@f1+2,w
  4207     14F8  00A6               	movwf	??___fltol+2
  4208     14F9  0823               	movf	___fltol@f1+3,w
  4209     14FA  00A7               	movwf	??___fltol+3
  4210     14FB  301F               	movlw	31
  4211     14FC                     u3115:
  4212     14FC  1003               	clrc
  4213     14FD  0CA7               	rrf	??___fltol+3,f
  4214     14FE  0CA6               	rrf	??___fltol+2,f
  4215     14FF  0CA5               	rrf	??___fltol+1,f
  4216     1500  0CA4               	rrf	??___fltol,f
  4217     1501                     u3110:
  4218     1501  3EFF               	addlw	-1
  4219     1502  1D03               	skipz
  4220     1503  2CFC               	goto	u3115
  4221     1504  0824               	movf	??___fltol,w
  4222     1505  00A8               	movwf	___fltol@sign1
  4223     1506                     l2666:
  4224     1506  17A2               	bsf	___fltol@f1+2,7
  4225     1507                     l2668:
  4226     1507  30FF               	movlw	255
  4227     1508  05A0               	andwf	___fltol@f1,f
  4228     1509  30FF               	movlw	255
  4229     150A  05A1               	andwf	___fltol@f1+1,f
  4230     150B  30FF               	movlw	255
  4231     150C  05A2               	andwf	___fltol@f1+2,f
  4232     150D  3000               	movlw	0
  4233     150E  05A3               	andwf	___fltol@f1+3,f
  4234     150F                     l2670:
  4235     150F  3096               	movlw	150
  4236     1510  02A9               	subwf	___fltol@exp1,f
  4237     1511                     l2672:
  4238     1511  1FA9               	btfss	___fltol@exp1,7
  4239     1512  2D14               	goto	u3121
  4240     1513  2D15               	goto	u3120
  4241     1514                     u3121:
  4242     1514  2D2F               	goto	l2684
  4243     1515                     u3120:
  4244     1515                     l2674:
  4245     1515  0829               	movf	___fltol@exp1,w
  4246     1516  3A80               	xorlw	128
  4247     1517  3E97               	addlw	151
  4248     1518  1803               	skipnc
  4249     1519  2D1B               	goto	u3131
  4250     151A  2D1C               	goto	u3130
  4251     151B                     u3131:
  4252     151B  2D1D               	goto	l2680
  4253     151C                     u3130:
  4254     151C  2CEA               	goto	l2660
  4255     151D                     l2680:
  4256     151D  3001               	movlw	1
  4257     151E                     u3145:
  4258     151E  1003               	clrc
  4259     151F  0CA3               	rrf	___fltol@f1+3,f
  4260     1520  0CA2               	rrf	___fltol@f1+2,f
  4261     1521  0CA1               	rrf	___fltol@f1+1,f
  4262     1522  0CA0               	rrf	___fltol@f1,f
  4263     1523  3EFF               	addlw	-1
  4264     1524  1D03               	skipz
  4265     1525  2D1E               	goto	u3145
  4266     1526                     l2682:
  4267     1526  3001               	movlw	1
  4268     1527  00FF               	movwf	btemp+1
  4269     1528  087F               	movf	btemp+1,w
  4270     1529  07A9               	addwf	___fltol@exp1,f
  4271     152A  1D03               	btfss	3,2
  4272     152B  2D2D               	goto	u3151
  4273     152C  2D2E               	goto	u3150
  4274     152D                     u3151:
  4275     152D  2D1D               	goto	l2680
  4276     152E                     u3150:
  4277     152E  2D46               	goto	l2692
  4278     152F                     l2684:
  4279     152F  3020               	movlw	32
  4280     1530  0229               	subwf	___fltol@exp1,w
  4281     1531  1C03               	skipc
  4282     1532  2D34               	goto	u3161
  4283     1533  2D35               	goto	u3160
  4284     1534                     u3161:
  4285     1534  2D41               	goto	l612
  4286     1535                     u3160:
  4287     1535  2CEA               	goto	l2660
  4288     1536                     l2690:
  4289     1536  3001               	movlw	1
  4290     1537  00A4               	movwf	??___fltol
  4291     1538                     u3175:
  4292     1538  1003               	clrc
  4293     1539  0DA0               	rlf	___fltol@f1,f
  4294     153A  0DA1               	rlf	___fltol@f1+1,f
  4295     153B  0DA2               	rlf	___fltol@f1+2,f
  4296     153C  0DA3               	rlf	___fltol@f1+3,f
  4297     153D  0BA4               	decfsz	??___fltol,f
  4298     153E  2D38               	goto	u3175
  4299     153F  3001               	movlw	1
  4300     1540  02A9               	subwf	___fltol@exp1,f
  4301     1541                     l612:
  4302     1541  0829               	movf	___fltol@exp1,w
  4303     1542  1D03               	btfss	3,2
  4304     1543  2D45               	goto	u3181
  4305     1544  2D46               	goto	u3180
  4306     1545                     u3181:
  4307     1545  2D36               	goto	l2690
  4308     1546                     u3180:
  4309     1546                     l2692:
  4310     1546  0828               	movf	___fltol@sign1,w
  4311     1547  1903               	btfsc	3,2
  4312     1548  2D4A               	goto	u3191
  4313     1549  2D4B               	goto	u3190
  4314     154A                     u3191:
  4315     154A  2D56               	goto	l615
  4316     154B                     u3190:
  4317     154B                     l2694:
  4318     154B  09A0               	comf	___fltol@f1,f
  4319     154C  09A1               	comf	___fltol@f1+1,f
  4320     154D  09A2               	comf	___fltol@f1+2,f
  4321     154E  09A3               	comf	___fltol@f1+3,f
  4322     154F  0AA0               	incf	___fltol@f1,f
  4323     1550  1903               	skipnz
  4324     1551  0AA1               	incf	___fltol@f1+1,f
  4325     1552  1903               	skipnz
  4326     1553  0AA2               	incf	___fltol@f1+2,f
  4327     1554  1903               	skipnz
  4328     1555  0AA3               	incf	___fltol@f1+3,f
  4329     1556                     l615:
  4330     1556                     l605:
  4331     1556  0008               	return
  4332     1557                     __end_of___fltol:
  4333                           
  4334                           	psect	text15
  4335     04A6                     __ptext15:	
  4336 ;; *************** function ___flmul *****************
  4337 ;; Defined at:
  4338 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcmul.c"
  4339 ;; Parameters:    Size  Location     Type
  4340 ;;  b               4   26[BANK0 ] long 
  4341 ;;  a               4   30[BANK0 ] long 
  4342 ;; Auto vars:     Size  Location     Type
  4343 ;;  prod            4   46[BANK0 ] struct .
  4344 ;;  grs             4   40[BANK0 ] unsigned long 
  4345 ;;  temp            2   50[BANK0 ] struct .
  4346 ;;  bexp            1   45[BANK0 ] unsigned char 
  4347 ;;  aexp            1   44[BANK0 ] unsigned char 
  4348 ;;  sign            1   39[BANK0 ] unsigned char 
  4349 ;; Return value:  Size  Location     Type
  4350 ;;                  4   26[BANK0 ] unsigned char 
  4351 ;; Registers used:
  4352 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4353 ;; Tracked objects:
  4354 ;;		On entry : 0/0
  4355 ;;		On exit  : 0/0
  4356 ;;		Unchanged: 0/0
  4357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4358 ;;      Params:         0       8       0       0       0
  4359 ;;      Locals:         0      13       0       0       0
  4360 ;;      Temps:          0       5       0       0       0
  4361 ;;      Totals:         0      26       0       0       0
  4362 ;;Total ram usage:       26 bytes
  4363 ;; Hardware stack levels used: 1
  4364 ;; Hardware stack levels required when called: 3
  4365 ;; This function calls:
  4366 ;;		__Umul8_16
  4367 ;; This function is called by:
  4368 ;;		_main
  4369 ;; This function uses a non-reentrant model
  4370 ;;
  4371                           
  4372     04A6                     ___flmul:	
  4373                           ;psect for function ___flmul
  4374                           
  4375     04A6                     l2842:	
  4376                           ;incstack = 0
  4377                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4378                           
  4379     04A6  1283               	bcf	3,5	;RP0=0, select bank0
  4380     04A7  1303               	bcf	3,6	;RP1=0, select bank0
  4381     04A8  083D               	movf	___flmul@b+3,w
  4382     04A9  3980               	andlw	128
  4383     04AA  00C7               	movwf	___flmul@sign
  4384     04AB                     l2844:
  4385     04AB  083D               	movf	___flmul@b+3,w
  4386     04AC  00C2               	movwf	??___flmul
  4387     04AD  0742               	addwf	??___flmul,w
  4388     04AE  00CD               	movwf	___flmul@bexp
  4389     04AF                     l2846:
  4390     04AF  1FBC               	btfss	___flmul@b+2,7
  4391     04B0  2CB2               	goto	u3491
  4392     04B1  2CB3               	goto	u3490
  4393     04B2                     u3491:
  4394     04B2  2CB4               	goto	l2850
  4395     04B3                     u3490:
  4396     04B3                     l2848:
  4397     04B3  144D               	bsf	___flmul@bexp,0
  4398     04B4                     l2850:
  4399     04B4  084D               	movf	___flmul@bexp,w
  4400     04B5  1903               	btfsc	3,2
  4401     04B6  2CB8               	goto	u3501
  4402     04B7  2CB9               	goto	u3500
  4403     04B8                     u3501:
  4404     04B8  2CC8               	goto	l2858
  4405     04B9                     u3500:
  4406     04B9                     l2852:
  4407     04B9  0A4D               	incf	___flmul@bexp,w
  4408     04BA  1D03               	btfss	3,2
  4409     04BB  2CBD               	goto	u3511
  4410     04BC  2CBE               	goto	u3510
  4411     04BD                     u3511:
  4412     04BD  2CC6               	goto	l2856
  4413     04BE                     u3510:
  4414     04BE                     l2854:
  4415     04BE  3000               	movlw	0
  4416     04BF  00BD               	movwf	___flmul@b+3
  4417     04C0  3000               	movlw	0
  4418     04C1  00BC               	movwf	___flmul@b+2
  4419     04C2  3000               	movlw	0
  4420     04C3  00BB               	movwf	___flmul@b+1
  4421     04C4  3000               	movlw	0
  4422     04C5  00BA               	movwf	___flmul@b
  4423     04C6                     l2856:
  4424     04C6  17BC               	bsf	___flmul@b+2,7
  4425     04C7  2CD0               	goto	l2860
  4426     04C8                     l2858:
  4427     04C8  3000               	movlw	0
  4428     04C9  00BD               	movwf	___flmul@b+3
  4429     04CA  3000               	movlw	0
  4430     04CB  00BC               	movwf	___flmul@b+2
  4431     04CC  3000               	movlw	0
  4432     04CD  00BB               	movwf	___flmul@b+1
  4433     04CE  3000               	movlw	0
  4434     04CF  00BA               	movwf	___flmul@b
  4435     04D0                     l2860:
  4436     04D0  0841               	movf	___flmul@a+3,w
  4437     04D1  3980               	andlw	128
  4438     04D2  00FF               	movwf	btemp+1
  4439     04D3  087F               	movf	btemp+1,w
  4440     04D4  06C7               	xorwf	___flmul@sign,f
  4441     04D5                     l2862:
  4442     04D5  0841               	movf	___flmul@a+3,w
  4443     04D6  00C2               	movwf	??___flmul
  4444     04D7  0742               	addwf	??___flmul,w
  4445     04D8  00CC               	movwf	___flmul@aexp
  4446     04D9                     l2864:
  4447     04D9  1FC0               	btfss	___flmul@a+2,7
  4448     04DA  2CDC               	goto	u3521
  4449     04DB  2CDD               	goto	u3520
  4450     04DC                     u3521:
  4451     04DC  2CDE               	goto	l2868
  4452     04DD                     u3520:
  4453     04DD                     l2866:
  4454     04DD  144C               	bsf	___flmul@aexp,0
  4455     04DE                     l2868:
  4456     04DE  084C               	movf	___flmul@aexp,w
  4457     04DF  1903               	btfsc	3,2
  4458     04E0  2CE2               	goto	u3531
  4459     04E1  2CE3               	goto	u3530
  4460     04E2                     u3531:
  4461     04E2  2CF2               	goto	l2876
  4462     04E3                     u3530:
  4463     04E3                     l2870:
  4464     04E3  0A4C               	incf	___flmul@aexp,w
  4465     04E4  1D03               	btfss	3,2
  4466     04E5  2CE7               	goto	u3541
  4467     04E6  2CE8               	goto	u3540
  4468     04E7                     u3541:
  4469     04E7  2CF0               	goto	l2874
  4470     04E8                     u3540:
  4471     04E8                     l2872:
  4472     04E8  3000               	movlw	0
  4473     04E9  00C1               	movwf	___flmul@a+3
  4474     04EA  3000               	movlw	0
  4475     04EB  00C0               	movwf	___flmul@a+2
  4476     04EC  3000               	movlw	0
  4477     04ED  00BF               	movwf	___flmul@a+1
  4478     04EE  3000               	movlw	0
  4479     04EF  00BE               	movwf	___flmul@a
  4480     04F0                     l2874:
  4481     04F0  17C0               	bsf	___flmul@a+2,7
  4482     04F1  2CFA               	goto	l2878
  4483     04F2                     l2876:
  4484     04F2  3000               	movlw	0
  4485     04F3  00C1               	movwf	___flmul@a+3
  4486     04F4  3000               	movlw	0
  4487     04F5  00C0               	movwf	___flmul@a+2
  4488     04F6  3000               	movlw	0
  4489     04F7  00BF               	movwf	___flmul@a+1
  4490     04F8  3000               	movlw	0
  4491     04F9  00BE               	movwf	___flmul@a
  4492     04FA                     l2878:
  4493     04FA  084C               	movf	___flmul@aexp,w
  4494     04FB  1903               	btfsc	3,2
  4495     04FC  2CFE               	goto	u3551
  4496     04FD  2CFF               	goto	u3550
  4497     04FE                     u3551:
  4498     04FE  2D04               	goto	l2882
  4499     04FF                     u3550:
  4500     04FF                     l2880:
  4501     04FF  084D               	movf	___flmul@bexp,w
  4502     0500  1D03               	btfss	3,2
  4503     0501  2D03               	goto	u3561
  4504     0502  2D04               	goto	u3560
  4505     0503                     u3561:
  4506     0503  2D0D               	goto	l2886
  4507     0504                     u3560:
  4508     0504                     l2882:
  4509     0504  3000               	movlw	0
  4510     0505  00BD               	movwf	?___flmul+3
  4511     0506  3000               	movlw	0
  4512     0507  00BC               	movwf	?___flmul+2
  4513     0508  3000               	movlw	0
  4514     0509  00BB               	movwf	?___flmul+1
  4515     050A  3000               	movlw	0
  4516     050B  00BA               	movwf	?___flmul
  4517     050C  2FEA               	goto	l808
  4518     050D                     l2886:
  4519     050D  083A               	movf	___flmul@b,w
  4520     050E  00A0               	movwf	__Umul8_16@multiplicand
  4521     050F  0840               	movf	___flmul@a+2,w
  4522     0510  120A  158A  2009  120A  118A  	fcall	__Umul8_16
  4523     0515  1283               	bcf	3,5	;RP0=0, select bank0
  4524     0516  1303               	bcf	3,6	;RP1=0, select bank0
  4525     0517  0821               	movf	?__Umul8_16+1,w
  4526     0518  00D3               	movwf	___flmul@temp+1
  4527     0519  0820               	movf	?__Umul8_16,w
  4528     051A  00D2               	movwf	___flmul@temp
  4529     051B                     l2888:
  4530     051B  0852               	movf	___flmul@temp,w
  4531     051C  00C2               	movwf	??___flmul
  4532     051D  01C3               	clrf	??___flmul+1
  4533     051E  01C4               	clrf	??___flmul+2
  4534     051F  01C5               	clrf	??___flmul+3
  4535     0520  0845               	movf	??___flmul+3,w
  4536     0521  00CB               	movwf	___flmul@grs+3
  4537     0522  0844               	movf	??___flmul+2,w
  4538     0523  00CA               	movwf	___flmul@grs+2
  4539     0524  0843               	movf	??___flmul+1,w
  4540     0525  00C9               	movwf	___flmul@grs+1
  4541     0526  0842               	movf	??___flmul,w
  4542     0527  00C8               	movwf	___flmul@grs
  4543     0528                     l2890:
  4544     0528  0853               	movf	___flmul@temp+1,w
  4545     0529  00C2               	movwf	??___flmul
  4546     052A  01C3               	clrf	??___flmul+1
  4547     052B  01C4               	clrf	??___flmul+2
  4548     052C  01C5               	clrf	??___flmul+3
  4549     052D  0845               	movf	??___flmul+3,w
  4550     052E  00D1               	movwf	___flmul@prod+3
  4551     052F  0844               	movf	??___flmul+2,w
  4552     0530  00D0               	movwf	___flmul@prod+2
  4553     0531  0843               	movf	??___flmul+1,w
  4554     0532  00CF               	movwf	___flmul@prod+1
  4555     0533  0842               	movf	??___flmul,w
  4556     0534  00CE               	movwf	___flmul@prod
  4557     0535  083B               	movf	___flmul@b+1,w
  4558     0536  00A0               	movwf	__Umul8_16@multiplicand
  4559     0537  083F               	movf	___flmul@a+1,w
  4560     0538  120A  158A  2009  120A  118A  	fcall	__Umul8_16
  4561     053D  1283               	bcf	3,5	;RP0=0, select bank0
  4562     053E  1303               	bcf	3,6	;RP1=0, select bank0
  4563     053F  0821               	movf	?__Umul8_16+1,w
  4564     0540  00D3               	movwf	___flmul@temp+1
  4565     0541  0820               	movf	?__Umul8_16,w
  4566     0542  00D2               	movwf	___flmul@temp
  4567     0543                     l2892:
  4568     0543  0852               	movf	___flmul@temp,w
  4569     0544  00C2               	movwf	??___flmul
  4570     0545  01C3               	clrf	??___flmul+1
  4571     0546  01C4               	clrf	??___flmul+2
  4572     0547  01C5               	clrf	??___flmul+3
  4573     0548  0842               	movf	??___flmul,w
  4574     0549  07C8               	addwf	___flmul@grs,f
  4575     054A  0843               	movf	??___flmul+1,w
  4576     054B  1103               	clrz
  4577     054C  1803               	skipnc
  4578     054D  3E01               	addlw	1
  4579     054E  1903               	skipnz
  4580     054F  2D51               	goto	u3571
  4581     0550  07C9               	addwf	___flmul@grs+1,f
  4582     0551                     u3571:
  4583     0551  0844               	movf	??___flmul+2,w
  4584     0552  1103               	clrz
  4585     0553  1803               	skipnc
  4586     0554  3E01               	addlw	1
  4587     0555  1903               	skipnz
  4588     0556  2D58               	goto	u3572
  4589     0557  07CA               	addwf	___flmul@grs+2,f
  4590     0558                     u3572:
  4591     0558  0845               	movf	??___flmul+3,w
  4592     0559  1103               	clrz
  4593     055A  1803               	skipnc
  4594     055B  3E01               	addlw	1
  4595     055C  1903               	skipnz
  4596     055D  2D5F               	goto	u3573
  4597     055E  07CB               	addwf	___flmul@grs+3,f
  4598     055F                     u3573:
  4599     055F                     l2894:
  4600     055F  0853               	movf	___flmul@temp+1,w
  4601     0560  00C2               	movwf	??___flmul
  4602     0561  01C3               	clrf	??___flmul+1
  4603     0562  01C4               	clrf	??___flmul+2
  4604     0563  01C5               	clrf	??___flmul+3
  4605     0564  0842               	movf	??___flmul,w
  4606     0565  07CE               	addwf	___flmul@prod,f
  4607     0566  0843               	movf	??___flmul+1,w
  4608     0567  1103               	clrz
  4609     0568  1803               	skipnc
  4610     0569  3E01               	addlw	1
  4611     056A  1903               	skipnz
  4612     056B  2D6D               	goto	u3581
  4613     056C  07CF               	addwf	___flmul@prod+1,f
  4614     056D                     u3581:
  4615     056D  0844               	movf	??___flmul+2,w
  4616     056E  1103               	clrz
  4617     056F  1803               	skipnc
  4618     0570  3E01               	addlw	1
  4619     0571  1903               	skipnz
  4620     0572  2D74               	goto	u3582
  4621     0573  07D0               	addwf	___flmul@prod+2,f
  4622     0574                     u3582:
  4623     0574  0845               	movf	??___flmul+3,w
  4624     0575  1103               	clrz
  4625     0576  1803               	skipnc
  4626     0577  3E01               	addlw	1
  4627     0578  1903               	skipnz
  4628     0579  2D7B               	goto	u3583
  4629     057A  07D1               	addwf	___flmul@prod+3,f
  4630     057B                     u3583:
  4631     057B  083C               	movf	___flmul@b+2,w
  4632     057C  00A0               	movwf	__Umul8_16@multiplicand
  4633     057D  083E               	movf	___flmul@a,w
  4634     057E  120A  158A  2009  120A  118A  	fcall	__Umul8_16
  4635     0583  1283               	bcf	3,5	;RP0=0, select bank0
  4636     0584  1303               	bcf	3,6	;RP1=0, select bank0
  4637     0585  0821               	movf	?__Umul8_16+1,w
  4638     0586  00D3               	movwf	___flmul@temp+1
  4639     0587  0820               	movf	?__Umul8_16,w
  4640     0588  00D2               	movwf	___flmul@temp
  4641     0589                     l2896:
  4642     0589  0852               	movf	___flmul@temp,w
  4643     058A  00C2               	movwf	??___flmul
  4644     058B  01C3               	clrf	??___flmul+1
  4645     058C  01C4               	clrf	??___flmul+2
  4646     058D  01C5               	clrf	??___flmul+3
  4647     058E  0842               	movf	??___flmul,w
  4648     058F  07C8               	addwf	___flmul@grs,f
  4649     0590  0843               	movf	??___flmul+1,w
  4650     0591  1103               	clrz
  4651     0592  1803               	skipnc
  4652     0593  3E01               	addlw	1
  4653     0594  1903               	skipnz
  4654     0595  2D97               	goto	u3591
  4655     0596  07C9               	addwf	___flmul@grs+1,f
  4656     0597                     u3591:
  4657     0597  0844               	movf	??___flmul+2,w
  4658     0598  1103               	clrz
  4659     0599  1803               	skipnc
  4660     059A  3E01               	addlw	1
  4661     059B  1903               	skipnz
  4662     059C  2D9E               	goto	u3592
  4663     059D  07CA               	addwf	___flmul@grs+2,f
  4664     059E                     u3592:
  4665     059E  0845               	movf	??___flmul+3,w
  4666     059F  1103               	clrz
  4667     05A0  1803               	skipnc
  4668     05A1  3E01               	addlw	1
  4669     05A2  1903               	skipnz
  4670     05A3  2DA5               	goto	u3593
  4671     05A4  07CB               	addwf	___flmul@grs+3,f
  4672     05A5                     u3593:
  4673     05A5                     l2898:
  4674     05A5  0853               	movf	___flmul@temp+1,w
  4675     05A6  00C2               	movwf	??___flmul
  4676     05A7  01C3               	clrf	??___flmul+1
  4677     05A8  01C4               	clrf	??___flmul+2
  4678     05A9  01C5               	clrf	??___flmul+3
  4679     05AA  0842               	movf	??___flmul,w
  4680     05AB  07CE               	addwf	___flmul@prod,f
  4681     05AC  0843               	movf	??___flmul+1,w
  4682     05AD  1103               	clrz
  4683     05AE  1803               	skipnc
  4684     05AF  3E01               	addlw	1
  4685     05B0  1903               	skipnz
  4686     05B1  2DB3               	goto	u3601
  4687     05B2  07CF               	addwf	___flmul@prod+1,f
  4688     05B3                     u3601:
  4689     05B3  0844               	movf	??___flmul+2,w
  4690     05B4  1103               	clrz
  4691     05B5  1803               	skipnc
  4692     05B6  3E01               	addlw	1
  4693     05B7  1903               	skipnz
  4694     05B8  2DBA               	goto	u3602
  4695     05B9  07D0               	addwf	___flmul@prod+2,f
  4696     05BA                     u3602:
  4697     05BA  0845               	movf	??___flmul+3,w
  4698     05BB  1103               	clrz
  4699     05BC  1803               	skipnc
  4700     05BD  3E01               	addlw	1
  4701     05BE  1903               	skipnz
  4702     05BF  2DC1               	goto	u3603
  4703     05C0  07D1               	addwf	___flmul@prod+3,f
  4704     05C1                     u3603:
  4705     05C1                     l2900:
  4706     05C1  3008               	movlw	8
  4707     05C2  00C2               	movwf	??___flmul
  4708     05C3                     u3615:
  4709     05C3  1003               	clrc
  4710     05C4  0DC8               	rlf	___flmul@grs,f
  4711     05C5  0DC9               	rlf	___flmul@grs+1,f
  4712     05C6  0DCA               	rlf	___flmul@grs+2,f
  4713     05C7  0DCB               	rlf	___flmul@grs+3,f
  4714     05C8  0BC2               	decfsz	??___flmul,f
  4715     05C9  2DC3               	goto	u3615
  4716     05CA                     l2902:
  4717     05CA  083B               	movf	___flmul@b+1,w
  4718     05CB  00A0               	movwf	__Umul8_16@multiplicand
  4719     05CC  083E               	movf	___flmul@a,w
  4720     05CD  120A  158A  2009  120A  118A  	fcall	__Umul8_16
  4721     05D2  1283               	bcf	3,5	;RP0=0, select bank0
  4722     05D3  1303               	bcf	3,6	;RP1=0, select bank0
  4723     05D4  0821               	movf	?__Umul8_16+1,w
  4724     05D5  00D3               	movwf	___flmul@temp+1
  4725     05D6  0820               	movf	?__Umul8_16,w
  4726     05D7  00D2               	movwf	___flmul@temp
  4727     05D8                     l2904:
  4728     05D8  0852               	movf	___flmul@temp,w
  4729     05D9  00C2               	movwf	??___flmul
  4730     05DA  0853               	movf	___flmul@temp+1,w
  4731     05DB  00C3               	movwf	??___flmul+1
  4732     05DC  01C4               	clrf	??___flmul+2
  4733     05DD  01C5               	clrf	??___flmul+3
  4734     05DE  0842               	movf	??___flmul,w
  4735     05DF  07C8               	addwf	___flmul@grs,f
  4736     05E0  0843               	movf	??___flmul+1,w
  4737     05E1  1103               	clrz
  4738     05E2  1803               	skipnc
  4739     05E3  3E01               	addlw	1
  4740     05E4  1903               	skipnz
  4741     05E5  2DE7               	goto	u3621
  4742     05E6  07C9               	addwf	___flmul@grs+1,f
  4743     05E7                     u3621:
  4744     05E7  0844               	movf	??___flmul+2,w
  4745     05E8  1103               	clrz
  4746     05E9  1803               	skipnc
  4747     05EA  3E01               	addlw	1
  4748     05EB  1903               	skipnz
  4749     05EC  2DEE               	goto	u3622
  4750     05ED  07CA               	addwf	___flmul@grs+2,f
  4751     05EE                     u3622:
  4752     05EE  0845               	movf	??___flmul+3,w
  4753     05EF  1103               	clrz
  4754     05F0  1803               	skipnc
  4755     05F1  3E01               	addlw	1
  4756     05F2  1903               	skipnz
  4757     05F3  2DF5               	goto	u3623
  4758     05F4  07CB               	addwf	___flmul@grs+3,f
  4759     05F5                     u3623:
  4760     05F5                     l2906:
  4761     05F5  083A               	movf	___flmul@b,w
  4762     05F6  00A0               	movwf	__Umul8_16@multiplicand
  4763     05F7  083F               	movf	___flmul@a+1,w
  4764     05F8  120A  158A  2009  120A  118A  	fcall	__Umul8_16
  4765     05FD  1283               	bcf	3,5	;RP0=0, select bank0
  4766     05FE  1303               	bcf	3,6	;RP1=0, select bank0
  4767     05FF  0821               	movf	?__Umul8_16+1,w
  4768     0600  00D3               	movwf	___flmul@temp+1
  4769     0601  0820               	movf	?__Umul8_16,w
  4770     0602  00D2               	movwf	___flmul@temp
  4771     0603                     l2908:
  4772     0603  0852               	movf	___flmul@temp,w
  4773     0604  00C2               	movwf	??___flmul
  4774     0605  0853               	movf	___flmul@temp+1,w
  4775     0606  00C3               	movwf	??___flmul+1
  4776     0607  01C4               	clrf	??___flmul+2
  4777     0608  01C5               	clrf	??___flmul+3
  4778     0609  0842               	movf	??___flmul,w
  4779     060A  07C8               	addwf	___flmul@grs,f
  4780     060B  0843               	movf	??___flmul+1,w
  4781     060C  1103               	clrz
  4782     060D  1803               	skipnc
  4783     060E  3E01               	addlw	1
  4784     060F  1903               	skipnz
  4785     0610  2E12               	goto	u3631
  4786     0611  07C9               	addwf	___flmul@grs+1,f
  4787     0612                     u3631:
  4788     0612  0844               	movf	??___flmul+2,w
  4789     0613  1103               	clrz
  4790     0614  1803               	skipnc
  4791     0615  3E01               	addlw	1
  4792     0616  1903               	skipnz
  4793     0617  2E19               	goto	u3632
  4794     0618  07CA               	addwf	___flmul@grs+2,f
  4795     0619                     u3632:
  4796     0619  0845               	movf	??___flmul+3,w
  4797     061A  1103               	clrz
  4798     061B  1803               	skipnc
  4799     061C  3E01               	addlw	1
  4800     061D  1903               	skipnz
  4801     061E  2E20               	goto	u3633
  4802     061F  07CB               	addwf	___flmul@grs+3,f
  4803     0620                     u3633:
  4804     0620                     l2910:
  4805     0620  3008               	movlw	8
  4806     0621  00C2               	movwf	??___flmul
  4807     0622                     u3645:
  4808     0622  1003               	clrc
  4809     0623  0DC8               	rlf	___flmul@grs,f
  4810     0624  0DC9               	rlf	___flmul@grs+1,f
  4811     0625  0DCA               	rlf	___flmul@grs+2,f
  4812     0626  0DCB               	rlf	___flmul@grs+3,f
  4813     0627  0BC2               	decfsz	??___flmul,f
  4814     0628  2E22               	goto	u3645
  4815     0629  083A               	movf	___flmul@b,w
  4816     062A  00A0               	movwf	__Umul8_16@multiplicand
  4817     062B  083E               	movf	___flmul@a,w
  4818     062C  120A  158A  2009  120A  118A  	fcall	__Umul8_16
  4819     0631  1283               	bcf	3,5	;RP0=0, select bank0
  4820     0632  1303               	bcf	3,6	;RP1=0, select bank0
  4821     0633  0821               	movf	?__Umul8_16+1,w
  4822     0634  00D3               	movwf	___flmul@temp+1
  4823     0635  0820               	movf	?__Umul8_16,w
  4824     0636  00D2               	movwf	___flmul@temp
  4825     0637                     l2912:
  4826     0637  0852               	movf	___flmul@temp,w
  4827     0638  00C2               	movwf	??___flmul
  4828     0639  0853               	movf	___flmul@temp+1,w
  4829     063A  00C3               	movwf	??___flmul+1
  4830     063B  01C4               	clrf	??___flmul+2
  4831     063C  01C5               	clrf	??___flmul+3
  4832     063D  0842               	movf	??___flmul,w
  4833     063E  07C8               	addwf	___flmul@grs,f
  4834     063F  0843               	movf	??___flmul+1,w
  4835     0640  1103               	clrz
  4836     0641  1803               	skipnc
  4837     0642  3E01               	addlw	1
  4838     0643  1903               	skipnz
  4839     0644  2E46               	goto	u3651
  4840     0645  07C9               	addwf	___flmul@grs+1,f
  4841     0646                     u3651:
  4842     0646  0844               	movf	??___flmul+2,w
  4843     0647  1103               	clrz
  4844     0648  1803               	skipnc
  4845     0649  3E01               	addlw	1
  4846     064A  1903               	skipnz
  4847     064B  2E4D               	goto	u3652
  4848     064C  07CA               	addwf	___flmul@grs+2,f
  4849     064D                     u3652:
  4850     064D  0845               	movf	??___flmul+3,w
  4851     064E  1103               	clrz
  4852     064F  1803               	skipnc
  4853     0650  3E01               	addlw	1
  4854     0651  1903               	skipnz
  4855     0652  2E54               	goto	u3653
  4856     0653  07CB               	addwf	___flmul@grs+3,f
  4857     0654                     u3653:
  4858     0654                     l2914:
  4859     0654  083B               	movf	___flmul@b+1,w
  4860     0655  00A0               	movwf	__Umul8_16@multiplicand
  4861     0656  0840               	movf	___flmul@a+2,w
  4862     0657  120A  158A  2009  120A  118A  	fcall	__Umul8_16
  4863     065C  1283               	bcf	3,5	;RP0=0, select bank0
  4864     065D  1303               	bcf	3,6	;RP1=0, select bank0
  4865     065E  0821               	movf	?__Umul8_16+1,w
  4866     065F  00D3               	movwf	___flmul@temp+1
  4867     0660  0820               	movf	?__Umul8_16,w
  4868     0661  00D2               	movwf	___flmul@temp
  4869     0662  0852               	movf	___flmul@temp,w
  4870     0663  00C2               	movwf	??___flmul
  4871     0664  0853               	movf	___flmul@temp+1,w
  4872     0665  00C3               	movwf	??___flmul+1
  4873     0666  01C4               	clrf	??___flmul+2
  4874     0667  01C5               	clrf	??___flmul+3
  4875     0668  0842               	movf	??___flmul,w
  4876     0669  07CE               	addwf	___flmul@prod,f
  4877     066A  0843               	movf	??___flmul+1,w
  4878     066B  1103               	clrz
  4879     066C  1803               	skipnc
  4880     066D  3E01               	addlw	1
  4881     066E  1903               	skipnz
  4882     066F  2E71               	goto	u3661
  4883     0670  07CF               	addwf	___flmul@prod+1,f
  4884     0671                     u3661:
  4885     0671  0844               	movf	??___flmul+2,w
  4886     0672  1103               	clrz
  4887     0673  1803               	skipnc
  4888     0674  3E01               	addlw	1
  4889     0675  1903               	skipnz
  4890     0676  2E78               	goto	u3662
  4891     0677  07D0               	addwf	___flmul@prod+2,f
  4892     0678                     u3662:
  4893     0678  0845               	movf	??___flmul+3,w
  4894     0679  1103               	clrz
  4895     067A  1803               	skipnc
  4896     067B  3E01               	addlw	1
  4897     067C  1903               	skipnz
  4898     067D  2E7F               	goto	u3663
  4899     067E  07D1               	addwf	___flmul@prod+3,f
  4900     067F                     u3663:
  4901     067F                     l2916:
  4902     067F  083C               	movf	___flmul@b+2,w
  4903     0680  00A0               	movwf	__Umul8_16@multiplicand
  4904     0681  083F               	movf	___flmul@a+1,w
  4905     0682  120A  158A  2009  120A  118A  	fcall	__Umul8_16
  4906     0687  1283               	bcf	3,5	;RP0=0, select bank0
  4907     0688  1303               	bcf	3,6	;RP1=0, select bank0
  4908     0689  0821               	movf	?__Umul8_16+1,w
  4909     068A  00D3               	movwf	___flmul@temp+1
  4910     068B  0820               	movf	?__Umul8_16,w
  4911     068C  00D2               	movwf	___flmul@temp
  4912     068D                     l2918:
  4913     068D  0852               	movf	___flmul@temp,w
  4914     068E  00C2               	movwf	??___flmul
  4915     068F  0853               	movf	___flmul@temp+1,w
  4916     0690  00C3               	movwf	??___flmul+1
  4917     0691  01C4               	clrf	??___flmul+2
  4918     0692  01C5               	clrf	??___flmul+3
  4919     0693  0842               	movf	??___flmul,w
  4920     0694  07CE               	addwf	___flmul@prod,f
  4921     0695  0843               	movf	??___flmul+1,w
  4922     0696  1103               	clrz
  4923     0697  1803               	skipnc
  4924     0698  3E01               	addlw	1
  4925     0699  1903               	skipnz
  4926     069A  2E9C               	goto	u3671
  4927     069B  07CF               	addwf	___flmul@prod+1,f
  4928     069C                     u3671:
  4929     069C  0844               	movf	??___flmul+2,w
  4930     069D  1103               	clrz
  4931     069E  1803               	skipnc
  4932     069F  3E01               	addlw	1
  4933     06A0  1903               	skipnz
  4934     06A1  2EA3               	goto	u3672
  4935     06A2  07D0               	addwf	___flmul@prod+2,f
  4936     06A3                     u3672:
  4937     06A3  0845               	movf	??___flmul+3,w
  4938     06A4  1103               	clrz
  4939     06A5  1803               	skipnc
  4940     06A6  3E01               	addlw	1
  4941     06A7  1903               	skipnz
  4942     06A8  2EAA               	goto	u3673
  4943     06A9  07D1               	addwf	___flmul@prod+3,f
  4944     06AA                     u3673:
  4945     06AA  083C               	movf	___flmul@b+2,w
  4946     06AB  00A0               	movwf	__Umul8_16@multiplicand
  4947     06AC  0840               	movf	___flmul@a+2,w
  4948     06AD  120A  158A  2009  120A  118A  	fcall	__Umul8_16
  4949     06B2  1283               	bcf	3,5	;RP0=0, select bank0
  4950     06B3  1303               	bcf	3,6	;RP1=0, select bank0
  4951     06B4  0821               	movf	?__Umul8_16+1,w
  4952     06B5  00D3               	movwf	___flmul@temp+1
  4953     06B6  0820               	movf	?__Umul8_16,w
  4954     06B7  00D2               	movwf	___flmul@temp
  4955     06B8                     l2920:
  4956     06B8  0852               	movf	___flmul@temp,w
  4957     06B9  00C2               	movwf	??___flmul
  4958     06BA  0853               	movf	___flmul@temp+1,w
  4959     06BB  00C3               	movwf	??___flmul+1
  4960     06BC  01C4               	clrf	??___flmul+2
  4961     06BD  01C5               	clrf	??___flmul+3
  4962     06BE  3008               	movlw	8
  4963     06BF                     u3685:
  4964     06BF  1003               	clrc
  4965     06C0  0DC2               	rlf	??___flmul,f
  4966     06C1  0DC3               	rlf	??___flmul+1,f
  4967     06C2  0DC4               	rlf	??___flmul+2,f
  4968     06C3  0DC5               	rlf	??___flmul+3,f
  4969     06C4                     u3680:
  4970     06C4  3EFF               	addlw	-1
  4971     06C5  1D03               	skipz
  4972     06C6  2EBF               	goto	u3685
  4973     06C7  0842               	movf	??___flmul,w
  4974     06C8  07CE               	addwf	___flmul@prod,f
  4975     06C9  0843               	movf	??___flmul+1,w
  4976     06CA  1103               	clrz
  4977     06CB  1803               	skipnc
  4978     06CC  3E01               	addlw	1
  4979     06CD  1903               	skipnz
  4980     06CE  2ED0               	goto	u3691
  4981     06CF  07CF               	addwf	___flmul@prod+1,f
  4982     06D0                     u3691:
  4983     06D0  0844               	movf	??___flmul+2,w
  4984     06D1  1103               	clrz
  4985     06D2  1803               	skipnc
  4986     06D3  3E01               	addlw	1
  4987     06D4  1903               	skipnz
  4988     06D5  2ED7               	goto	u3692
  4989     06D6  07D0               	addwf	___flmul@prod+2,f
  4990     06D7                     u3692:
  4991     06D7  0845               	movf	??___flmul+3,w
  4992     06D8  1103               	clrz
  4993     06D9  1803               	skipnc
  4994     06DA  3E01               	addlw	1
  4995     06DB  1903               	skipnz
  4996     06DC  2EDE               	goto	u3693
  4997     06DD  07D1               	addwf	___flmul@prod+3,f
  4998     06DE                     u3693:
  4999     06DE                     l2922:
  5000     06DE  0848               	movf	___flmul@grs,w
  5001     06DF  00C2               	movwf	??___flmul
  5002     06E0  0849               	movf	___flmul@grs+1,w
  5003     06E1  00C3               	movwf	??___flmul+1
  5004     06E2  084A               	movf	___flmul@grs+2,w
  5005     06E3  00C4               	movwf	??___flmul+2
  5006     06E4  084B               	movf	___flmul@grs+3,w
  5007     06E5  00C5               	movwf	??___flmul+3
  5008     06E6  3018               	movlw	24
  5009     06E7                     u3705:
  5010     06E7  1003               	clrc
  5011     06E8  0CC5               	rrf	??___flmul+3,f
  5012     06E9  0CC4               	rrf	??___flmul+2,f
  5013     06EA  0CC3               	rrf	??___flmul+1,f
  5014     06EB  0CC2               	rrf	??___flmul,f
  5015     06EC                     u3700:
  5016     06EC  3EFF               	addlw	-1
  5017     06ED  1D03               	skipz
  5018     06EE  2EE7               	goto	u3705
  5019     06EF  0842               	movf	??___flmul,w
  5020     06F0  07CE               	addwf	___flmul@prod,f
  5021     06F1  0843               	movf	??___flmul+1,w
  5022     06F2  1103               	clrz
  5023     06F3  1803               	skipnc
  5024     06F4  3E01               	addlw	1
  5025     06F5  1903               	skipnz
  5026     06F6  2EF8               	goto	u3711
  5027     06F7  07CF               	addwf	___flmul@prod+1,f
  5028     06F8                     u3711:
  5029     06F8  0844               	movf	??___flmul+2,w
  5030     06F9  1103               	clrz
  5031     06FA  1803               	skipnc
  5032     06FB  3E01               	addlw	1
  5033     06FC  1903               	skipnz
  5034     06FD  2EFF               	goto	u3712
  5035     06FE  07D0               	addwf	___flmul@prod+2,f
  5036     06FF                     u3712:
  5037     06FF  0845               	movf	??___flmul+3,w
  5038     0700  1103               	clrz
  5039     0701  1803               	skipnc
  5040     0702  3E01               	addlw	1
  5041     0703  1903               	skipnz
  5042     0704  2F06               	goto	u3713
  5043     0705  07D1               	addwf	___flmul@prod+3,f
  5044     0706                     u3713:
  5045     0706                     l2924:
  5046     0706  3008               	movlw	8
  5047     0707  00C2               	movwf	??___flmul
  5048     0708                     u3725:
  5049     0708  1003               	clrc
  5050     0709  0DC8               	rlf	___flmul@grs,f
  5051     070A  0DC9               	rlf	___flmul@grs+1,f
  5052     070B  0DCA               	rlf	___flmul@grs+2,f
  5053     070C  0DCB               	rlf	___flmul@grs+3,f
  5054     070D  0BC2               	decfsz	??___flmul,f
  5055     070E  2F08               	goto	u3725
  5056     070F                     l2926:
  5057     070F  084D               	movf	___flmul@bexp,w
  5058     0710  074C               	addwf	___flmul@aexp,w
  5059     0711  00C2               	movwf	??___flmul
  5060     0712  01C3               	clrf	??___flmul+1
  5061     0713  0DC3               	rlf	??___flmul+1,f
  5062     0714  0842               	movf	??___flmul,w
  5063     0715  3E82               	addlw	130
  5064     0716  00D2               	movwf	___flmul@temp
  5065     0717  0843               	movf	??___flmul+1,w
  5066     0718  1803               	skipnc
  5067     0719  3E01               	addlw	1
  5068     071A  3EFF               	addlw	255
  5069     071B  00D3               	movwf	___flmul@temp+1
  5070     071C  2F3A               	goto	l2938
  5071     071D                     l2928:
  5072     071D  3001               	movlw	1
  5073     071E  00C2               	movwf	??___flmul
  5074     071F                     u3735:
  5075     071F  1003               	clrc
  5076     0720  0DCE               	rlf	___flmul@prod,f
  5077     0721  0DCF               	rlf	___flmul@prod+1,f
  5078     0722  0DD0               	rlf	___flmul@prod+2,f
  5079     0723  0DD1               	rlf	___flmul@prod+3,f
  5080     0724  0BC2               	decfsz	??___flmul,f
  5081     0725  2F1F               	goto	u3735
  5082     0726                     l2930:
  5083     0726  1FCB               	btfss	___flmul@grs+3,7
  5084     0727  2F29               	goto	u3741
  5085     0728  2F2A               	goto	u3740
  5086     0729                     u3741:
  5087     0729  2F2B               	goto	l2934
  5088     072A                     u3740:
  5089     072A                     l2932:
  5090     072A  144E               	bsf	___flmul@prod,0
  5091     072B                     l2934:
  5092     072B  3001               	movlw	1
  5093     072C  00C2               	movwf	??___flmul
  5094     072D                     u3755:
  5095     072D  1003               	clrc
  5096     072E  0DC8               	rlf	___flmul@grs,f
  5097     072F  0DC9               	rlf	___flmul@grs+1,f
  5098     0730  0DCA               	rlf	___flmul@grs+2,f
  5099     0731  0DCB               	rlf	___flmul@grs+3,f
  5100     0732  0BC2               	decfsz	??___flmul,f
  5101     0733  2F2D               	goto	u3755
  5102     0734                     l2936:
  5103     0734  30FF               	movlw	255
  5104     0735  07D2               	addwf	___flmul@temp,f
  5105     0736  1803               	skipnc
  5106     0737  0AD3               	incf	___flmul@temp+1,f
  5107     0738  30FF               	movlw	255
  5108     0739  07D3               	addwf	___flmul@temp+1,f
  5109     073A                     l2938:
  5110     073A  1FD0               	btfss	___flmul@prod+2,7
  5111     073B  2F3D               	goto	u3761
  5112     073C  2F3E               	goto	u3760
  5113     073D                     u3761:
  5114     073D  2F1D               	goto	l2928
  5115     073E                     u3760:
  5116     073E                     l2940:
  5117     073E  01CC               	clrf	___flmul@aexp
  5118     073F                     l2942:
  5119     073F  1FCB               	btfss	___flmul@grs+3,7
  5120     0740  2F42               	goto	u3771
  5121     0741  2F43               	goto	u3770
  5122     0742                     u3771:
  5123     0742  2F5F               	goto	l2950
  5124     0743                     u3770:
  5125     0743                     l2944:
  5126     0743  30FF               	movlw	255
  5127     0744  0548               	andwf	___flmul@grs,w
  5128     0745  00C2               	movwf	??___flmul
  5129     0746  30FF               	movlw	255
  5130     0747  0549               	andwf	___flmul@grs+1,w
  5131     0748  00C3               	movwf	??___flmul+1
  5132     0749  30FF               	movlw	255
  5133     074A  054A               	andwf	___flmul@grs+2,w
  5134     074B  00C4               	movwf	??___flmul+2
  5135     074C  307F               	movlw	127
  5136     074D  054B               	andwf	___flmul@grs+3,w
  5137     074E  00C5               	movwf	??___flmul+3
  5138     074F  0845               	movf	??___flmul+3,w
  5139     0750  0444               	iorwf	??___flmul+2,w
  5140     0751  0443               	iorwf	??___flmul+1,w
  5141     0752  0442               	iorwf	??___flmul,w
  5142     0753  1903               	skipnz
  5143     0754  2F56               	goto	u3781
  5144     0755  2F57               	goto	u3780
  5145     0756                     u3781:
  5146     0756  2F5A               	goto	l814
  5147     0757                     u3780:
  5148     0757                     l2946:
  5149     0757  01CC               	clrf	___flmul@aexp
  5150     0758  0ACC               	incf	___flmul@aexp,f
  5151     0759  2F5F               	goto	l2950
  5152     075A                     l814:
  5153     075A  1C4E               	btfss	___flmul@prod,0
  5154     075B  2F5D               	goto	u3791
  5155     075C  2F5E               	goto	u3790
  5156     075D                     u3791:
  5157     075D  2F5F               	goto	l2950
  5158     075E                     u3790:
  5159     075E  2F57               	goto	l2946
  5160     075F                     l2950:
  5161     075F  084C               	movf	___flmul@aexp,w
  5162     0760  1903               	btfsc	3,2
  5163     0761  2F63               	goto	u3801
  5164     0762  2F64               	goto	u3800
  5165     0763                     u3801:
  5166     0763  2F95               	goto	l2960
  5167     0764                     u3800:
  5168     0764                     l2952:
  5169     0764  3001               	movlw	1
  5170     0765  07CE               	addwf	___flmul@prod,f
  5171     0766  3000               	movlw	0
  5172     0767  1803               	skipnc
  5173     0768  3001               	movlw	1
  5174     0769  07CF               	addwf	___flmul@prod+1,f
  5175     076A  3000               	movlw	0
  5176     076B  1803               	skipnc
  5177     076C  3001               	movlw	1
  5178     076D  07D0               	addwf	___flmul@prod+2,f
  5179     076E  3000               	movlw	0
  5180     076F  1803               	skipnc
  5181     0770  3001               	movlw	1
  5182     0771  07D1               	addwf	___flmul@prod+3,f
  5183     0772                     l2954:
  5184     0772  1C51               	btfss	___flmul@prod+3,0
  5185     0773  2F75               	goto	u3811
  5186     0774  2F76               	goto	u3810
  5187     0775                     u3811:
  5188     0775  2F95               	goto	l2960
  5189     0776                     u3810:
  5190     0776                     l2956:
  5191     0776  084E               	movf	___flmul@prod,w
  5192     0777  00C2               	movwf	??___flmul
  5193     0778  084F               	movf	___flmul@prod+1,w
  5194     0779  00C3               	movwf	??___flmul+1
  5195     077A  0850               	movf	___flmul@prod+2,w
  5196     077B  00C4               	movwf	??___flmul+2
  5197     077C  0851               	movf	___flmul@prod+3,w
  5198     077D  00C5               	movwf	??___flmul+3
  5199     077E  3001               	movlw	1
  5200     077F  00C6               	movwf	??___flmul+4
  5201     0780                     u3825:
  5202     0780  0D45               	rlf	??___flmul+3,w
  5203     0781  0CC5               	rrf	??___flmul+3,f
  5204     0782  0CC4               	rrf	??___flmul+2,f
  5205     0783  0CC3               	rrf	??___flmul+1,f
  5206     0784  0CC2               	rrf	??___flmul,f
  5207     0785                     u3820:
  5208     0785  0BC6               	decfsz	??___flmul+4,f
  5209     0786  2F80               	goto	u3825
  5210     0787  0845               	movf	??___flmul+3,w
  5211     0788  00D1               	movwf	___flmul@prod+3
  5212     0789  0844               	movf	??___flmul+2,w
  5213     078A  00D0               	movwf	___flmul@prod+2
  5214     078B  0843               	movf	??___flmul+1,w
  5215     078C  00CF               	movwf	___flmul@prod+1
  5216     078D  0842               	movf	??___flmul,w
  5217     078E  00CE               	movwf	___flmul@prod
  5218     078F                     l2958:
  5219     078F  3001               	movlw	1
  5220     0790  07D2               	addwf	___flmul@temp,f
  5221     0791  1803               	skipnc
  5222     0792  0AD3               	incf	___flmul@temp+1,f
  5223     0793  3000               	movlw	0
  5224     0794  07D3               	addwf	___flmul@temp+1,f
  5225     0795                     l2960:
  5226     0795  0853               	movf	___flmul@temp+1,w
  5227     0796  3A80               	xorlw	128
  5228     0797  00FF               	movwf	btemp+1
  5229     0798  3080               	movlw	128
  5230     0799  027F               	subwf	btemp+1,w
  5231     079A  1D03               	skipz
  5232     079B  2F9E               	goto	u3835
  5233     079C  30FF               	movlw	255
  5234     079D  0252               	subwf	___flmul@temp,w
  5235     079E                     u3835:
  5236     079E  1C03               	skipc
  5237     079F  2FA1               	goto	u3831
  5238     07A0  2FA2               	goto	u3830
  5239     07A1                     u3831:
  5240     07A1  2FAD               	goto	l2964
  5241     07A2                     u3830:
  5242     07A2                     l2962:
  5243     07A2  307F               	movlw	127
  5244     07A3  1283               	bcf	3,5	;RP0=0, select bank0
  5245     07A4  1303               	bcf	3,6	;RP1=0, select bank0
  5246     07A5  00D1               	movwf	___flmul@prod+3
  5247     07A6  3080               	movlw	128
  5248     07A7  00D0               	movwf	___flmul@prod+2
  5249     07A8  3000               	movlw	0
  5250     07A9  00CF               	movwf	___flmul@prod+1
  5251     07AA  3000               	movlw	0
  5252     07AB  00CE               	movwf	___flmul@prod
  5253     07AC  2FDE               	goto	l2978
  5254     07AD                     l2964:
  5255     07AD  1283               	bcf	3,5	;RP0=0, select bank0
  5256     07AE  1303               	bcf	3,6	;RP1=0, select bank0
  5257     07AF  0853               	movf	___flmul@temp+1,w
  5258     07B0  3A80               	xorlw	128
  5259     07B1  00FF               	movwf	btemp+1
  5260     07B2  3080               	movlw	128
  5261     07B3  027F               	subwf	btemp+1,w
  5262     07B4  1D03               	skipz
  5263     07B5  2FB8               	goto	u3845
  5264     07B6  3001               	movlw	1
  5265     07B7  0252               	subwf	___flmul@temp,w
  5266     07B8                     u3845:
  5267     07B8  1803               	skipnc
  5268     07B9  2FBB               	goto	u3841
  5269     07BA  2FBC               	goto	u3840
  5270     07BB                     u3841:
  5271     07BB  2FC8               	goto	l2970
  5272     07BC                     u3840:
  5273     07BC                     l2966:
  5274     07BC  3000               	movlw	0
  5275     07BD  1283               	bcf	3,5	;RP0=0, select bank0
  5276     07BE  1303               	bcf	3,6	;RP1=0, select bank0
  5277     07BF  00D1               	movwf	___flmul@prod+3
  5278     07C0  3000               	movlw	0
  5279     07C1  00D0               	movwf	___flmul@prod+2
  5280     07C2  3000               	movlw	0
  5281     07C3  00CF               	movwf	___flmul@prod+1
  5282     07C4  3000               	movlw	0
  5283     07C5  00CE               	movwf	___flmul@prod
  5284     07C6                     l2968:
  5285     07C6  01C7               	clrf	___flmul@sign
  5286     07C7  2FDE               	goto	l2978
  5287     07C8                     l2970:
  5288     07C8  1283               	bcf	3,5	;RP0=0, select bank0
  5289     07C9  1303               	bcf	3,6	;RP1=0, select bank0
  5290     07CA  0852               	movf	___flmul@temp,w
  5291     07CB  00CD               	movwf	___flmul@bexp
  5292     07CC  30FF               	movlw	255
  5293     07CD  05CE               	andwf	___flmul@prod,f
  5294     07CE  30FF               	movlw	255
  5295     07CF  05CF               	andwf	___flmul@prod+1,f
  5296     07D0  307F               	movlw	127
  5297     07D1  05D0               	andwf	___flmul@prod+2,f
  5298     07D2  3000               	movlw	0
  5299     07D3  05D1               	andwf	___flmul@prod+3,f
  5300     07D4                     l2972:
  5301     07D4  1C4D               	btfss	___flmul@bexp,0
  5302     07D5  2FD7               	goto	u3851
  5303     07D6  2FD8               	goto	u3850
  5304     07D7                     u3851:
  5305     07D7  2FD9               	goto	l2976
  5306     07D8                     u3850:
  5307     07D8                     l2974:
  5308     07D8  17D0               	bsf	___flmul@prod+2,7
  5309     07D9                     l2976:
  5310     07D9  084D               	movf	___flmul@bexp,w
  5311     07DA  00C2               	movwf	??___flmul
  5312     07DB  1003               	clrc
  5313     07DC  0C42               	rrf	??___flmul,w
  5314     07DD  00D1               	movwf	___flmul@prod+3
  5315     07DE                     l2978:
  5316     07DE  0847               	movf	___flmul@sign,w
  5317     07DF  00FF               	movwf	btemp+1
  5318     07E0  087F               	movf	btemp+1,w
  5319     07E1  04D1               	iorwf	___flmul@prod+3,f
  5320     07E2                     l2980:
  5321     07E2  0851               	movf	___flmul@prod+3,w
  5322     07E3  00BD               	movwf	?___flmul+3
  5323     07E4  0850               	movf	___flmul@prod+2,w
  5324     07E5  00BC               	movwf	?___flmul+2
  5325     07E6  084F               	movf	___flmul@prod+1,w
  5326     07E7  00BB               	movwf	?___flmul+1
  5327     07E8  084E               	movf	___flmul@prod,w
  5328     07E9  00BA               	movwf	?___flmul
  5329     07EA                     l808:
  5330     07EA  0008               	return
  5331     07EB                     __end_of___flmul:
  5332                           
  5333                           	psect	text16
  5334     0809                     __ptext16:	
  5335 ;; *************** function __Umul8_16 *****************
  5336 ;; Defined at:
  5337 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul8_16.c"
  5338 ;; Parameters:    Size  Location     Type
  5339 ;;  multiplier      1    wreg     unsigned char 
  5340 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  5341 ;; Auto vars:     Size  Location     Type
  5342 ;;  multiplier      1    8[BANK0 ] unsigned char 
  5343 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  5344 ;;  product         2    4[BANK0 ] unsigned int 
  5345 ;; Return value:  Size  Location     Type
  5346 ;;                  2    0[BANK0 ] unsigned int 
  5347 ;; Registers used:
  5348 ;;		wreg, status,2, status,0
  5349 ;; Tracked objects:
  5350 ;;		On entry : 0/0
  5351 ;;		On exit  : 0/0
  5352 ;;		Unchanged: 0/0
  5353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5354 ;;      Params:         0       2       0       0       0
  5355 ;;      Locals:         0       5       0       0       0
  5356 ;;      Temps:          0       2       0       0       0
  5357 ;;      Totals:         0       9       0       0       0
  5358 ;;Total ram usage:        9 bytes
  5359 ;; Hardware stack levels used: 1
  5360 ;; Hardware stack levels required when called: 2
  5361 ;; This function calls:
  5362 ;;		Nothing
  5363 ;; This function is called by:
  5364 ;;		___flmul
  5365 ;; This function uses a non-reentrant model
  5366 ;;
  5367                           
  5368     0809                     __Umul8_16:	
  5369                           ;psect for function __Umul8_16
  5370                           
  5371                           
  5372                           ;incstack = 0
  5373                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5374                           ;__Umul8_16@multiplier stored from wreg
  5375     0809  1283               	bcf	3,5	;RP0=0, select bank0
  5376     080A  1303               	bcf	3,6	;RP1=0, select bank0
  5377     080B  00A8               	movwf	__Umul8_16@multiplier
  5378     080C                     l2366:
  5379     080C  01A4               	clrf	__Umul8_16@product
  5380     080D  01A5               	clrf	__Umul8_16@product+1
  5381     080E                     l2368:
  5382     080E  0820               	movf	__Umul8_16@multiplicand,w
  5383     080F  00A2               	movwf	??__Umul8_16
  5384     0810  01A3               	clrf	??__Umul8_16+1
  5385     0811  0822               	movf	??__Umul8_16,w
  5386     0812  00A6               	movwf	__Umul8_16@word_mpld
  5387     0813  0823               	movf	??__Umul8_16+1,w
  5388     0814  00A7               	movwf	__Umul8_16@word_mpld+1
  5389     0815                     l2370:
  5390     0815  1C28               	btfss	__Umul8_16@multiplier,0
  5391     0816  2818               	goto	u2611
  5392     0817  2819               	goto	u2610
  5393     0818                     u2611:
  5394     0818  281F               	goto	l827
  5395     0819                     u2610:
  5396     0819                     l2372:
  5397     0819  0826               	movf	__Umul8_16@word_mpld,w
  5398     081A  07A4               	addwf	__Umul8_16@product,f
  5399     081B  1803               	skipnc
  5400     081C  0AA5               	incf	__Umul8_16@product+1,f
  5401     081D  0827               	movf	__Umul8_16@word_mpld+1,w
  5402     081E  07A5               	addwf	__Umul8_16@product+1,f
  5403     081F                     l827:
  5404     081F  3001               	movlw	1
  5405     0820                     u2625:
  5406     0820  1003               	clrc
  5407     0821  0DA6               	rlf	__Umul8_16@word_mpld,f
  5408     0822  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  5409     0823  3EFF               	addlw	-1
  5410     0824  1D03               	skipz
  5411     0825  2820               	goto	u2625
  5412     0826  1003               	clrc
  5413     0827  0CA8               	rrf	__Umul8_16@multiplier,f
  5414     0828                     l2374:
  5415     0828  0828               	movf	__Umul8_16@multiplier,w
  5416     0829  1D03               	btfss	3,2
  5417     082A  282C               	goto	u2631
  5418     082B  282D               	goto	u2630
  5419     082C                     u2631:
  5420     082C  2815               	goto	l2370
  5421     082D                     u2630:
  5422     082D                     l2376:
  5423     082D  0825               	movf	__Umul8_16@product+1,w
  5424     082E  00A1               	movwf	?__Umul8_16+1
  5425     082F  0824               	movf	__Umul8_16@product,w
  5426     0830  00A0               	movwf	?__Umul8_16
  5427     0831                     l829:
  5428     0831  0008               	return
  5429     0832                     __end_of__Umul8_16:
  5430                           
  5431                           	psect	text17
  5432     0832                     __ptext17:	
  5433 ;; *************** function ___fldiv *****************
  5434 ;; Defined at:
  5435 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcdiv.c"
  5436 ;; Parameters:    Size  Location     Type
  5437 ;;  a               4    0[BANK0 ] unsigned int 
  5438 ;;  b               4    4[BANK0 ] unsigned int 
  5439 ;; Auto vars:     Size  Location     Type
  5440 ;;  grs             4   20[BANK0 ] unsigned long 
  5441 ;;  rem             4   13[BANK0 ] unsigned long 
  5442 ;;  new_exp         2   18[BANK0 ] int 
  5443 ;;  aexp            1   25[BANK0 ] unsigned char 
  5444 ;;  bexp            1   24[BANK0 ] unsigned char 
  5445 ;;  sign            1   17[BANK0 ] unsigned char 
  5446 ;; Return value:  Size  Location     Type
  5447 ;;                  4    0[BANK0 ] unsigned char 
  5448 ;; Registers used:
  5449 ;;		wreg, status,2, status,0, btemp+1
  5450 ;; Tracked objects:
  5451 ;;		On entry : 0/0
  5452 ;;		On exit  : 0/0
  5453 ;;		Unchanged: 0/0
  5454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5455 ;;      Params:         0       8       0       0       0
  5456 ;;      Locals:         0      13       0       0       0
  5457 ;;      Temps:          0       5       0       0       0
  5458 ;;      Totals:         0      26       0       0       0
  5459 ;;Total ram usage:       26 bytes
  5460 ;; Hardware stack levels used: 1
  5461 ;; Hardware stack levels required when called: 2
  5462 ;; This function calls:
  5463 ;;		Nothing
  5464 ;; This function is called by:
  5465 ;;		_main
  5466 ;; This function uses a non-reentrant model
  5467 ;;
  5468                           
  5469     0832                     ___fldiv:	
  5470                           ;psect for function ___fldiv
  5471                           
  5472     0832                     l2696:	
  5473                           ;incstack = 0
  5474                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  5475                           
  5476     0832  1283               	bcf	3,5	;RP0=0, select bank0
  5477     0833  1303               	bcf	3,6	;RP1=0, select bank0
  5478     0834  0827               	movf	___fldiv@b+3,w
  5479     0835  3980               	andlw	128
  5480     0836  00B1               	movwf	___fldiv@sign
  5481     0837                     l2698:
  5482     0837  0827               	movf	___fldiv@b+3,w
  5483     0838  00A8               	movwf	??___fldiv
  5484     0839  0728               	addwf	??___fldiv,w
  5485     083A  00B8               	movwf	___fldiv@bexp
  5486     083B                     l2700:
  5487     083B  1FA6               	btfss	___fldiv@b+2,7
  5488     083C  283E               	goto	u3201
  5489     083D  283F               	goto	u3200
  5490     083E                     u3201:
  5491     083E  2840               	goto	l2704
  5492     083F                     u3200:
  5493     083F                     l2702:
  5494     083F  1438               	bsf	___fldiv@bexp,0
  5495     0840                     l2704:
  5496     0840  0838               	movf	___fldiv@bexp,w
  5497     0841  1903               	btfsc	3,2
  5498     0842  2844               	goto	u3211
  5499     0843  2845               	goto	u3210
  5500     0844                     u3211:
  5501     0844  2855               	goto	l2714
  5502     0845                     u3210:
  5503     0845                     l2706:
  5504     0845  0A38               	incf	___fldiv@bexp,w
  5505     0846  1D03               	btfss	3,2
  5506     0847  2849               	goto	u3221
  5507     0848  284A               	goto	u3220
  5508     0849                     u3221:
  5509     0849  2852               	goto	l2710
  5510     084A                     u3220:
  5511     084A                     l2708:
  5512     084A  3000               	movlw	0
  5513     084B  00A7               	movwf	___fldiv@b+3
  5514     084C  3000               	movlw	0
  5515     084D  00A6               	movwf	___fldiv@b+2
  5516     084E  3000               	movlw	0
  5517     084F  00A5               	movwf	___fldiv@b+1
  5518     0850  3000               	movlw	0
  5519     0851  00A4               	movwf	___fldiv@b
  5520     0852                     l2710:
  5521     0852  17A6               	bsf	___fldiv@b+2,7
  5522     0853                     l2712:
  5523     0853  01A7               	clrf	___fldiv@b+3
  5524     0854  285D               	goto	l2716
  5525     0855                     l2714:
  5526     0855  3000               	movlw	0
  5527     0856  00A7               	movwf	___fldiv@b+3
  5528     0857  3000               	movlw	0
  5529     0858  00A6               	movwf	___fldiv@b+2
  5530     0859  3000               	movlw	0
  5531     085A  00A5               	movwf	___fldiv@b+1
  5532     085B  3000               	movlw	0
  5533     085C  00A4               	movwf	___fldiv@b
  5534     085D                     l2716:
  5535     085D  0823               	movf	___fldiv@a+3,w
  5536     085E  3980               	andlw	128
  5537     085F  00FF               	movwf	btemp+1
  5538     0860  087F               	movf	btemp+1,w
  5539     0861  06B1               	xorwf	___fldiv@sign,f
  5540     0862                     l2718:
  5541     0862  0823               	movf	___fldiv@a+3,w
  5542     0863  00A8               	movwf	??___fldiv
  5543     0864  0728               	addwf	??___fldiv,w
  5544     0865  00B9               	movwf	___fldiv@aexp
  5545     0866                     l2720:
  5546     0866  1FA2               	btfss	___fldiv@a+2,7
  5547     0867  2869               	goto	u3231
  5548     0868  286A               	goto	u3230
  5549     0869                     u3231:
  5550     0869  286B               	goto	l2724
  5551     086A                     u3230:
  5552     086A                     l2722:
  5553     086A  1439               	bsf	___fldiv@aexp,0
  5554     086B                     l2724:
  5555     086B  0839               	movf	___fldiv@aexp,w
  5556     086C  1903               	btfsc	3,2
  5557     086D  286F               	goto	u3241
  5558     086E  2870               	goto	u3240
  5559     086F                     u3241:
  5560     086F  2880               	goto	l2734
  5561     0870                     u3240:
  5562     0870                     l2726:
  5563     0870  0A39               	incf	___fldiv@aexp,w
  5564     0871  1D03               	btfss	3,2
  5565     0872  2874               	goto	u3251
  5566     0873  2875               	goto	u3250
  5567     0874                     u3251:
  5568     0874  287D               	goto	l2730
  5569     0875                     u3250:
  5570     0875                     l2728:
  5571     0875  3000               	movlw	0
  5572     0876  00A3               	movwf	___fldiv@a+3
  5573     0877  3000               	movlw	0
  5574     0878  00A2               	movwf	___fldiv@a+2
  5575     0879  3000               	movlw	0
  5576     087A  00A1               	movwf	___fldiv@a+1
  5577     087B  3000               	movlw	0
  5578     087C  00A0               	movwf	___fldiv@a
  5579     087D                     l2730:
  5580     087D  17A2               	bsf	___fldiv@a+2,7
  5581     087E                     l2732:
  5582     087E  01A3               	clrf	___fldiv@a+3
  5583     087F  2888               	goto	l768
  5584     0880                     l2734:
  5585     0880  3000               	movlw	0
  5586     0881  00A3               	movwf	___fldiv@a+3
  5587     0882  3000               	movlw	0
  5588     0883  00A2               	movwf	___fldiv@a+2
  5589     0884  3000               	movlw	0
  5590     0885  00A1               	movwf	___fldiv@a+1
  5591     0886  3000               	movlw	0
  5592     0887  00A0               	movwf	___fldiv@a
  5593     0888                     l768:
  5594     0888  0823               	movf	___fldiv@a+3,w
  5595     0889  0422               	iorwf	___fldiv@a+2,w
  5596     088A  0421               	iorwf	___fldiv@a+1,w
  5597     088B  0420               	iorwf	___fldiv@a,w
  5598     088C  1D03               	skipz
  5599     088D  288F               	goto	u3261
  5600     088E  2890               	goto	u3260
  5601     088F                     u3261:
  5602     088F  28A9               	goto	l2744
  5603     0890                     u3260:
  5604     0890                     l2736:
  5605     0890  3000               	movlw	0
  5606     0891  00A7               	movwf	___fldiv@b+3
  5607     0892  3000               	movlw	0
  5608     0893  00A6               	movwf	___fldiv@b+2
  5609     0894  3000               	movlw	0
  5610     0895  00A5               	movwf	___fldiv@b+1
  5611     0896  3000               	movlw	0
  5612     0897  00A4               	movwf	___fldiv@b
  5613     0898  3080               	movlw	128
  5614     0899  04A6               	iorwf	___fldiv@b+2,f
  5615     089A  307F               	movlw	127
  5616     089B  04A7               	iorwf	___fldiv@b+3,f
  5617     089C                     l2738:
  5618     089C  0831               	movf	___fldiv@sign,w
  5619     089D  00FF               	movwf	btemp+1
  5620     089E  087F               	movf	btemp+1,w
  5621     089F  04A7               	iorwf	___fldiv@b+3,f
  5622     08A0                     l2740:
  5623     08A0  0827               	movf	___fldiv@b+3,w
  5624     08A1  00A3               	movwf	?___fldiv+3
  5625     08A2  0826               	movf	___fldiv@b+2,w
  5626     08A3  00A2               	movwf	?___fldiv+2
  5627     08A4  0825               	movf	___fldiv@b+1,w
  5628     08A5  00A1               	movwf	?___fldiv+1
  5629     08A6  0824               	movf	___fldiv@b,w
  5630     08A7  00A0               	movwf	?___fldiv
  5631     08A8  2A00               	goto	l770
  5632     08A9                     l2744:
  5633     08A9  0838               	movf	___fldiv@bexp,w
  5634     08AA  1D03               	btfss	3,2
  5635     08AB  28AD               	goto	u3271
  5636     08AC  28AE               	goto	u3270
  5637     08AD                     u3271:
  5638     08AD  28B7               	goto	l2750
  5639     08AE                     u3270:
  5640     08AE                     l2746:
  5641     08AE  3000               	movlw	0
  5642     08AF  00A3               	movwf	?___fldiv+3
  5643     08B0  3000               	movlw	0
  5644     08B1  00A2               	movwf	?___fldiv+2
  5645     08B2  3000               	movlw	0
  5646     08B3  00A1               	movwf	?___fldiv+1
  5647     08B4  3000               	movlw	0
  5648     08B5  00A0               	movwf	?___fldiv
  5649     08B6  2A00               	goto	l770
  5650     08B7                     l2750:
  5651     08B7  0838               	movf	___fldiv@bexp,w
  5652     08B8  00A8               	movwf	??___fldiv
  5653     08B9  01A9               	clrf	??___fldiv+1
  5654     08BA  0829               	movf	??___fldiv+1,w
  5655     08BB  00AB               	movwf	??___fldiv+3
  5656     08BC  0839               	movf	___fldiv@aexp,w
  5657     08BD  0228               	subwf	??___fldiv,w
  5658     08BE  00AA               	movwf	??___fldiv+2
  5659     08BF  1C03               	skipc
  5660     08C0  03AB               	decf	??___fldiv+3,f
  5661     08C1  082A               	movf	??___fldiv+2,w
  5662     08C2  3E7F               	addlw	127
  5663     08C3  00B2               	movwf	___fldiv@new_exp
  5664     08C4  082B               	movf	??___fldiv+3,w
  5665     08C5  1803               	skipnc
  5666     08C6  3E01               	addlw	1
  5667     08C7  3E00               	addlw	0
  5668     08C8  00B3               	movwf	___fldiv@new_exp+1
  5669     08C9                     l2752:
  5670     08C9  0827               	movf	___fldiv@b+3,w
  5671     08CA  00B0               	movwf	___fldiv@rem+3
  5672     08CB  0826               	movf	___fldiv@b+2,w
  5673     08CC  00AF               	movwf	___fldiv@rem+2
  5674     08CD  0825               	movf	___fldiv@b+1,w
  5675     08CE  00AE               	movwf	___fldiv@rem+1
  5676     08CF  0824               	movf	___fldiv@b,w
  5677     08D0  00AD               	movwf	___fldiv@rem
  5678     08D1                     l2754:
  5679     08D1  3000               	movlw	0
  5680     08D2  00A7               	movwf	___fldiv@b+3
  5681     08D3  3000               	movlw	0
  5682     08D4  00A6               	movwf	___fldiv@b+2
  5683     08D5  3000               	movlw	0
  5684     08D6  00A5               	movwf	___fldiv@b+1
  5685     08D7  3000               	movlw	0
  5686     08D8  00A4               	movwf	___fldiv@b
  5687     08D9                     l2756:
  5688     08D9  3000               	movlw	0
  5689     08DA  00B7               	movwf	___fldiv@grs+3
  5690     08DB  3000               	movlw	0
  5691     08DC  00B6               	movwf	___fldiv@grs+2
  5692     08DD  3000               	movlw	0
  5693     08DE  00B5               	movwf	___fldiv@grs+1
  5694     08DF  3000               	movlw	0
  5695     08E0  00B4               	movwf	___fldiv@grs
  5696     08E1                     l2758:
  5697     08E1  01B9               	clrf	___fldiv@aexp
  5698     08E2  292D               	goto	l2778
  5699     08E3                     l2760:
  5700     08E3  0839               	movf	___fldiv@aexp,w
  5701     08E4  1903               	btfsc	3,2
  5702     08E5  28E7               	goto	u3281
  5703     08E6  28E8               	goto	u3280
  5704     08E7                     u3281:
  5705     08E7  2908               	goto	l2770
  5706     08E8                     u3280:
  5707     08E8                     l2762:
  5708     08E8  3001               	movlw	1
  5709     08E9  00A8               	movwf	??___fldiv
  5710     08EA                     u3295:
  5711     08EA  1003               	clrc
  5712     08EB  0DAD               	rlf	___fldiv@rem,f
  5713     08EC  0DAE               	rlf	___fldiv@rem+1,f
  5714     08ED  0DAF               	rlf	___fldiv@rem+2,f
  5715     08EE  0DB0               	rlf	___fldiv@rem+3,f
  5716     08EF  0BA8               	decfsz	??___fldiv,f
  5717     08F0  28EA               	goto	u3295
  5718     08F1  3001               	movlw	1
  5719     08F2  00A8               	movwf	??___fldiv
  5720     08F3                     u3305:
  5721     08F3  1003               	clrc
  5722     08F4  0DA4               	rlf	___fldiv@b,f
  5723     08F5  0DA5               	rlf	___fldiv@b+1,f
  5724     08F6  0DA6               	rlf	___fldiv@b+2,f
  5725     08F7  0DA7               	rlf	___fldiv@b+3,f
  5726     08F8  0BA8               	decfsz	??___fldiv,f
  5727     08F9  28F3               	goto	u3305
  5728     08FA                     l2764:
  5729     08FA  1FB7               	btfss	___fldiv@grs+3,7
  5730     08FB  28FD               	goto	u3311
  5731     08FC  28FE               	goto	u3310
  5732     08FD                     u3311:
  5733     08FD  28FF               	goto	l2768
  5734     08FE                     u3310:
  5735     08FE                     l2766:
  5736     08FE  1424               	bsf	___fldiv@b,0
  5737     08FF                     l2768:
  5738     08FF  3001               	movlw	1
  5739     0900  00A8               	movwf	??___fldiv
  5740     0901                     u3325:
  5741     0901  1003               	clrc
  5742     0902  0DB4               	rlf	___fldiv@grs,f
  5743     0903  0DB5               	rlf	___fldiv@grs+1,f
  5744     0904  0DB6               	rlf	___fldiv@grs+2,f
  5745     0905  0DB7               	rlf	___fldiv@grs+3,f
  5746     0906  0BA8               	decfsz	??___fldiv,f
  5747     0907  2901               	goto	u3325
  5748     0908                     l2770:
  5749     0908  0823               	movf	___fldiv@a+3,w
  5750     0909  0230               	subwf	___fldiv@rem+3,w
  5751     090A  1D03               	skipz
  5752     090B  2916               	goto	u3335
  5753     090C  0822               	movf	___fldiv@a+2,w
  5754     090D  022F               	subwf	___fldiv@rem+2,w
  5755     090E  1D03               	skipz
  5756     090F  2916               	goto	u3335
  5757     0910  0821               	movf	___fldiv@a+1,w
  5758     0911  022E               	subwf	___fldiv@rem+1,w
  5759     0912  1D03               	skipz
  5760     0913  2916               	goto	u3335
  5761     0914  0820               	movf	___fldiv@a,w
  5762     0915  022D               	subwf	___fldiv@rem,w
  5763     0916                     u3335:
  5764     0916  1C03               	skipc
  5765     0917  2919               	goto	u3331
  5766     0918  291A               	goto	u3330
  5767     0919                     u3331:
  5768     0919  2929               	goto	l2776
  5769     091A                     u3330:
  5770     091A                     l2772:
  5771     091A  1737               	bsf	___fldiv@grs+3,6
  5772     091B                     l2774:
  5773     091B  0820               	movf	___fldiv@a,w
  5774     091C  02AD               	subwf	___fldiv@rem,f
  5775     091D  0821               	movf	___fldiv@a+1,w
  5776     091E  1C03               	skipc
  5777     091F  0F21               	incfsz	___fldiv@a+1,w
  5778     0920  02AE               	subwf	___fldiv@rem+1,f
  5779     0921  0822               	movf	___fldiv@a+2,w
  5780     0922  1C03               	skipc
  5781     0923  0F22               	incfsz	___fldiv@a+2,w
  5782     0924  02AF               	subwf	___fldiv@rem+2,f
  5783     0925  0823               	movf	___fldiv@a+3,w
  5784     0926  1C03               	skipc
  5785     0927  0F23               	incfsz	___fldiv@a+3,w
  5786     0928  02B0               	subwf	___fldiv@rem+3,f
  5787     0929                     l2776:
  5788     0929  3001               	movlw	1
  5789     092A  00FF               	movwf	btemp+1
  5790     092B  087F               	movf	btemp+1,w
  5791     092C  07B9               	addwf	___fldiv@aexp,f
  5792     092D                     l2778:
  5793     092D  301A               	movlw	26
  5794     092E  0239               	subwf	___fldiv@aexp,w
  5795     092F  1C03               	skipc
  5796     0930  2932               	goto	u3341
  5797     0931  2933               	goto	u3340
  5798     0932                     u3341:
  5799     0932  28E3               	goto	l2760
  5800     0933                     u3340:
  5801     0933                     l2780:
  5802     0933  0830               	movf	___fldiv@rem+3,w
  5803     0934  042F               	iorwf	___fldiv@rem+2,w
  5804     0935  042E               	iorwf	___fldiv@rem+1,w
  5805     0936  042D               	iorwf	___fldiv@rem,w
  5806     0937  1903               	skipnz
  5807     0938  293A               	goto	u3351
  5808     0939  293B               	goto	u3350
  5809     093A                     u3351:
  5810     093A  295A               	goto	l2794
  5811     093B                     u3350:
  5812     093B                     l2782:
  5813     093B  1434               	bsf	___fldiv@grs,0
  5814     093C  295A               	goto	l2794
  5815     093D                     l2784:
  5816     093D  3001               	movlw	1
  5817     093E  00A8               	movwf	??___fldiv
  5818     093F                     u3365:
  5819     093F  1003               	clrc
  5820     0940  0DA4               	rlf	___fldiv@b,f
  5821     0941  0DA5               	rlf	___fldiv@b+1,f
  5822     0942  0DA6               	rlf	___fldiv@b+2,f
  5823     0943  0DA7               	rlf	___fldiv@b+3,f
  5824     0944  0BA8               	decfsz	??___fldiv,f
  5825     0945  293F               	goto	u3365
  5826     0946                     l2786:
  5827     0946  1FB7               	btfss	___fldiv@grs+3,7
  5828     0947  2949               	goto	u3371
  5829     0948  294A               	goto	u3370
  5830     0949                     u3371:
  5831     0949  294B               	goto	l2790
  5832     094A                     u3370:
  5833     094A                     l2788:
  5834     094A  1424               	bsf	___fldiv@b,0
  5835     094B                     l2790:
  5836     094B  3001               	movlw	1
  5837     094C  00A8               	movwf	??___fldiv
  5838     094D                     u3385:
  5839     094D  1003               	clrc
  5840     094E  0DB4               	rlf	___fldiv@grs,f
  5841     094F  0DB5               	rlf	___fldiv@grs+1,f
  5842     0950  0DB6               	rlf	___fldiv@grs+2,f
  5843     0951  0DB7               	rlf	___fldiv@grs+3,f
  5844     0952  0BA8               	decfsz	??___fldiv,f
  5845     0953  294D               	goto	u3385
  5846     0954                     l2792:
  5847     0954  30FF               	movlw	255
  5848     0955  07B2               	addwf	___fldiv@new_exp,f
  5849     0956  1803               	skipnc
  5850     0957  0AB3               	incf	___fldiv@new_exp+1,f
  5851     0958  30FF               	movlw	255
  5852     0959  07B3               	addwf	___fldiv@new_exp+1,f
  5853     095A                     l2794:
  5854     095A  1FA6               	btfss	___fldiv@b+2,7
  5855     095B  295D               	goto	u3391
  5856     095C  295E               	goto	u3390
  5857     095D                     u3391:
  5858     095D  293D               	goto	l2784
  5859     095E                     u3390:
  5860     095E                     l2796:
  5861     095E  01B9               	clrf	___fldiv@aexp
  5862     095F                     l2798:
  5863     095F  1FB7               	btfss	___fldiv@grs+3,7
  5864     0960  2962               	goto	u3401
  5865     0961  2963               	goto	u3400
  5866     0962                     u3401:
  5867     0962  297F               	goto	l2806
  5868     0963                     u3400:
  5869     0963                     l2800:
  5870     0963  30FF               	movlw	255
  5871     0964  0534               	andwf	___fldiv@grs,w
  5872     0965  00A8               	movwf	??___fldiv
  5873     0966  30FF               	movlw	255
  5874     0967  0535               	andwf	___fldiv@grs+1,w
  5875     0968  00A9               	movwf	??___fldiv+1
  5876     0969  30FF               	movlw	255
  5877     096A  0536               	andwf	___fldiv@grs+2,w
  5878     096B  00AA               	movwf	??___fldiv+2
  5879     096C  307F               	movlw	127
  5880     096D  0537               	andwf	___fldiv@grs+3,w
  5881     096E  00AB               	movwf	??___fldiv+3
  5882     096F  082B               	movf	??___fldiv+3,w
  5883     0970  042A               	iorwf	??___fldiv+2,w
  5884     0971  0429               	iorwf	??___fldiv+1,w
  5885     0972  0428               	iorwf	??___fldiv,w
  5886     0973  1903               	skipnz
  5887     0974  2976               	goto	u3411
  5888     0975  2977               	goto	u3410
  5889     0976                     u3411:
  5890     0976  297A               	goto	l784
  5891     0977                     u3410:
  5892     0977                     l2802:
  5893     0977  01B9               	clrf	___fldiv@aexp
  5894     0978  0AB9               	incf	___fldiv@aexp,f
  5895     0979  297F               	goto	l2806
  5896     097A                     l784:
  5897     097A  1C24               	btfss	___fldiv@b,0
  5898     097B  297D               	goto	u3421
  5899     097C  297E               	goto	u3420
  5900     097D                     u3421:
  5901     097D  297F               	goto	l2806
  5902     097E                     u3420:
  5903     097E  2977               	goto	l2802
  5904     097F                     l2806:
  5905     097F  0839               	movf	___fldiv@aexp,w
  5906     0980  1903               	btfsc	3,2
  5907     0981  2983               	goto	u3431
  5908     0982  2984               	goto	u3430
  5909     0983                     u3431:
  5910     0983  29B5               	goto	l2816
  5911     0984                     u3430:
  5912     0984                     l2808:
  5913     0984  3001               	movlw	1
  5914     0985  07A4               	addwf	___fldiv@b,f
  5915     0986  3000               	movlw	0
  5916     0987  1803               	skipnc
  5917     0988  3001               	movlw	1
  5918     0989  07A5               	addwf	___fldiv@b+1,f
  5919     098A  3000               	movlw	0
  5920     098B  1803               	skipnc
  5921     098C  3001               	movlw	1
  5922     098D  07A6               	addwf	___fldiv@b+2,f
  5923     098E  3000               	movlw	0
  5924     098F  1803               	skipnc
  5925     0990  3001               	movlw	1
  5926     0991  07A7               	addwf	___fldiv@b+3,f
  5927     0992                     l2810:
  5928     0992  1C27               	btfss	___fldiv@b+3,0
  5929     0993  2995               	goto	u3441
  5930     0994  2996               	goto	u3440
  5931     0995                     u3441:
  5932     0995  29B5               	goto	l2816
  5933     0996                     u3440:
  5934     0996                     l2812:
  5935     0996  0824               	movf	___fldiv@b,w
  5936     0997  00A8               	movwf	??___fldiv
  5937     0998  0825               	movf	___fldiv@b+1,w
  5938     0999  00A9               	movwf	??___fldiv+1
  5939     099A  0826               	movf	___fldiv@b+2,w
  5940     099B  00AA               	movwf	??___fldiv+2
  5941     099C  0827               	movf	___fldiv@b+3,w
  5942     099D  00AB               	movwf	??___fldiv+3
  5943     099E  3001               	movlw	1
  5944     099F  00AC               	movwf	??___fldiv+4
  5945     09A0                     u3455:
  5946     09A0  0D2B               	rlf	??___fldiv+3,w
  5947     09A1  0CAB               	rrf	??___fldiv+3,f
  5948     09A2  0CAA               	rrf	??___fldiv+2,f
  5949     09A3  0CA9               	rrf	??___fldiv+1,f
  5950     09A4  0CA8               	rrf	??___fldiv,f
  5951     09A5                     u3450:
  5952     09A5  0BAC               	decfsz	??___fldiv+4,f
  5953     09A6  29A0               	goto	u3455
  5954     09A7  082B               	movf	??___fldiv+3,w
  5955     09A8  00A7               	movwf	___fldiv@b+3
  5956     09A9  082A               	movf	??___fldiv+2,w
  5957     09AA  00A6               	movwf	___fldiv@b+2
  5958     09AB  0829               	movf	??___fldiv+1,w
  5959     09AC  00A5               	movwf	___fldiv@b+1
  5960     09AD  0828               	movf	??___fldiv,w
  5961     09AE  00A4               	movwf	___fldiv@b
  5962     09AF                     l2814:
  5963     09AF  3001               	movlw	1
  5964     09B0  07B2               	addwf	___fldiv@new_exp,f
  5965     09B1  1803               	skipnc
  5966     09B2  0AB3               	incf	___fldiv@new_exp+1,f
  5967     09B3  3000               	movlw	0
  5968     09B4  07B3               	addwf	___fldiv@new_exp+1,f
  5969     09B5                     l2816:
  5970     09B5  0833               	movf	___fldiv@new_exp+1,w
  5971     09B6  3A80               	xorlw	128
  5972     09B7  00FF               	movwf	btemp+1
  5973     09B8  3080               	movlw	128
  5974     09B9  027F               	subwf	btemp+1,w
  5975     09BA  1D03               	skipz
  5976     09BB  29BE               	goto	u3465
  5977     09BC  30FF               	movlw	255
  5978     09BD  0232               	subwf	___fldiv@new_exp,w
  5979     09BE                     u3465:
  5980     09BE  1C03               	skipc
  5981     09BF  29C1               	goto	u3461
  5982     09C0  29C2               	goto	u3460
  5983     09C1                     u3461:
  5984     09C1  29D0               	goto	l2820
  5985     09C2                     u3460:
  5986     09C2                     l2818:
  5987     09C2  30FF               	movlw	255
  5988     09C3  1283               	bcf	3,5	;RP0=0, select bank0
  5989     09C4  1303               	bcf	3,6	;RP1=0, select bank0
  5990     09C5  00B2               	movwf	___fldiv@new_exp
  5991     09C6  3000               	movlw	0
  5992     09C7  00B3               	movwf	___fldiv@new_exp+1
  5993     09C8  3000               	movlw	0
  5994     09C9  00A7               	movwf	___fldiv@b+3
  5995     09CA  3000               	movlw	0
  5996     09CB  00A6               	movwf	___fldiv@b+2
  5997     09CC  3000               	movlw	0
  5998     09CD  00A5               	movwf	___fldiv@b+1
  5999     09CE  3000               	movlw	0
  6000     09CF  00A4               	movwf	___fldiv@b
  6001     09D0                     l2820:
  6002     09D0  1283               	bcf	3,5	;RP0=0, select bank0
  6003     09D1  1303               	bcf	3,6	;RP1=0, select bank0
  6004     09D2  0833               	movf	___fldiv@new_exp+1,w
  6005     09D3  3A80               	xorlw	128
  6006     09D4  00FF               	movwf	btemp+1
  6007     09D5  3080               	movlw	128
  6008     09D6  027F               	subwf	btemp+1,w
  6009     09D7  1D03               	skipz
  6010     09D8  29DB               	goto	u3475
  6011     09D9  3001               	movlw	1
  6012     09DA  0232               	subwf	___fldiv@new_exp,w
  6013     09DB                     u3475:
  6014     09DB  1803               	skipnc
  6015     09DC  29DE               	goto	u3471
  6016     09DD  29DF               	goto	u3470
  6017     09DE                     u3471:
  6018     09DE  29EC               	goto	l790
  6019     09DF                     u3470:
  6020     09DF                     l2822:
  6021     09DF  1283               	bcf	3,5	;RP0=0, select bank0
  6022     09E0  1303               	bcf	3,6	;RP1=0, select bank0
  6023     09E1  01B2               	clrf	___fldiv@new_exp
  6024     09E2  01B3               	clrf	___fldiv@new_exp+1
  6025     09E3                     l2824:
  6026     09E3  3000               	movlw	0
  6027     09E4  00A7               	movwf	___fldiv@b+3
  6028     09E5  3000               	movlw	0
  6029     09E6  00A6               	movwf	___fldiv@b+2
  6030     09E7  3000               	movlw	0
  6031     09E8  00A5               	movwf	___fldiv@b+1
  6032     09E9  3000               	movlw	0
  6033     09EA  00A4               	movwf	___fldiv@b
  6034     09EB                     l2826:
  6035     09EB  01B1               	clrf	___fldiv@sign
  6036     09EC                     l790:
  6037     09EC  1283               	bcf	3,5	;RP0=0, select bank0
  6038     09ED  1303               	bcf	3,6	;RP1=0, select bank0
  6039     09EE  0832               	movf	___fldiv@new_exp,w
  6040     09EF  00B8               	movwf	___fldiv@bexp
  6041     09F0                     l2828:
  6042     09F0  1C38               	btfss	___fldiv@bexp,0
  6043     09F1  29F3               	goto	u3481
  6044     09F2  29F4               	goto	u3480
  6045     09F3                     u3481:
  6046     09F3  29F6               	goto	l2832
  6047     09F4                     u3480:
  6048     09F4                     l2830:
  6049     09F4  17A6               	bsf	___fldiv@b+2,7
  6050     09F5  29FA               	goto	l2834
  6051     09F6                     l2832:
  6052     09F6  307F               	movlw	127
  6053     09F7  00FF               	movwf	btemp+1
  6054     09F8  087F               	movf	btemp+1,w
  6055     09F9  05A6               	andwf	___fldiv@b+2,f
  6056     09FA                     l2834:
  6057     09FA  0838               	movf	___fldiv@bexp,w
  6058     09FB  00A8               	movwf	??___fldiv
  6059     09FC  1003               	clrc
  6060     09FD  0C28               	rrf	??___fldiv,w
  6061     09FE  00A7               	movwf	___fldiv@b+3
  6062     09FF  289C               	goto	l2738
  6063     0A00                     l770:
  6064     0A00  0008               	return
  6065     0A01                     __end_of___fldiv:
  6066                           
  6067                           	psect	text18
  6068     1351                     __ptext18:	
  6069 ;; *************** function ___awmod *****************
  6070 ;; Defined at:
  6071 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
  6072 ;; Parameters:    Size  Location     Type
  6073 ;;  divisor         2   10[BANK0 ] int 
  6074 ;;  dividend        2   12[BANK0 ] int 
  6075 ;; Auto vars:     Size  Location     Type
  6076 ;;  sign            1   15[BANK0 ] unsigned char 
  6077 ;;  counter         1   14[BANK0 ] unsigned char 
  6078 ;; Return value:  Size  Location     Type
  6079 ;;                  2   10[BANK0 ] int 
  6080 ;; Registers used:
  6081 ;;		wreg, status,2, status,0, btemp+1
  6082 ;; Tracked objects:
  6083 ;;		On entry : 0/0
  6084 ;;		On exit  : 0/0
  6085 ;;		Unchanged: 0/0
  6086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6087 ;;      Params:         0       4       0       0       0
  6088 ;;      Locals:         0       2       0       0       0
  6089 ;;      Temps:          0       0       0       0       0
  6090 ;;      Totals:         0       6       0       0       0
  6091 ;;Total ram usage:        6 bytes
  6092 ;; Hardware stack levels used: 1
  6093 ;; Hardware stack levels required when called: 2
  6094 ;; This function calls:
  6095 ;;		Nothing
  6096 ;; This function is called by:
  6097 ;;		_main
  6098 ;; This function uses a non-reentrant model
  6099 ;;
  6100                           
  6101     1351                     ___awmod:	
  6102                           ;psect for function ___awmod
  6103                           
  6104     1351                     l2620:	
  6105                           ;incstack = 0
  6106                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  6107                           
  6108     1351  1283               	bcf	3,5	;RP0=0, select bank0
  6109     1352  1303               	bcf	3,6	;RP1=0, select bank0
  6110     1353  01AF               	clrf	___awmod@sign
  6111     1354                     l2622:
  6112     1354  1FAD               	btfss	___awmod@dividend+1,7
  6113     1355  2B57               	goto	u3011
  6114     1356  2B58               	goto	u3010
  6115     1357                     u3011:
  6116     1357  2B5F               	goto	l2628
  6117     1358                     u3010:
  6118     1358                     l2624:
  6119     1358  09AC               	comf	___awmod@dividend,f
  6120     1359  09AD               	comf	___awmod@dividend+1,f
  6121     135A  0AAC               	incf	___awmod@dividend,f
  6122     135B  1903               	skipnz
  6123     135C  0AAD               	incf	___awmod@dividend+1,f
  6124     135D                     l2626:
  6125     135D  01AF               	clrf	___awmod@sign
  6126     135E  0AAF               	incf	___awmod@sign,f
  6127     135F                     l2628:
  6128     135F  1FAB               	btfss	___awmod@divisor+1,7
  6129     1360  2B62               	goto	u3021
  6130     1361  2B63               	goto	u3020
  6131     1362                     u3021:
  6132     1362  2B68               	goto	l2632
  6133     1363                     u3020:
  6134     1363                     l2630:
  6135     1363  09AA               	comf	___awmod@divisor,f
  6136     1364  09AB               	comf	___awmod@divisor+1,f
  6137     1365  0AAA               	incf	___awmod@divisor,f
  6138     1366  1903               	skipnz
  6139     1367  0AAB               	incf	___awmod@divisor+1,f
  6140     1368                     l2632:
  6141     1368  082A               	movf	___awmod@divisor,w
  6142     1369  042B               	iorwf	___awmod@divisor+1,w
  6143     136A  1903               	btfsc	3,2
  6144     136B  2B6D               	goto	u3031
  6145     136C  2B6E               	goto	u3030
  6146     136D                     u3031:
  6147     136D  2B9D               	goto	l2650
  6148     136E                     u3030:
  6149     136E                     l2634:
  6150     136E  01AE               	clrf	___awmod@counter
  6151     136F  0AAE               	incf	___awmod@counter,f
  6152     1370  2B7C               	goto	l2640
  6153     1371                     l2636:
  6154     1371  3001               	movlw	1
  6155     1372                     u3045:
  6156     1372  1003               	clrc
  6157     1373  0DAA               	rlf	___awmod@divisor,f
  6158     1374  0DAB               	rlf	___awmod@divisor+1,f
  6159     1375  3EFF               	addlw	-1
  6160     1376  1D03               	skipz
  6161     1377  2B72               	goto	u3045
  6162     1378                     l2638:
  6163     1378  3001               	movlw	1
  6164     1379  00FF               	movwf	btemp+1
  6165     137A  087F               	movf	btemp+1,w
  6166     137B  07AE               	addwf	___awmod@counter,f
  6167     137C                     l2640:
  6168     137C  1FAB               	btfss	___awmod@divisor+1,7
  6169     137D  2B7F               	goto	u3051
  6170     137E  2B80               	goto	u3050
  6171     137F                     u3051:
  6172     137F  2B71               	goto	l2636
  6173     1380                     u3050:
  6174     1380                     l2642:
  6175     1380  082B               	movf	___awmod@divisor+1,w
  6176     1381  022D               	subwf	___awmod@dividend+1,w
  6177     1382  1D03               	skipz
  6178     1383  2B86               	goto	u3065
  6179     1384  082A               	movf	___awmod@divisor,w
  6180     1385  022C               	subwf	___awmod@dividend,w
  6181     1386                     u3065:
  6182     1386  1C03               	skipc
  6183     1387  2B89               	goto	u3061
  6184     1388  2B8A               	goto	u3060
  6185     1389                     u3061:
  6186     1389  2B90               	goto	l2646
  6187     138A                     u3060:
  6188     138A                     l2644:
  6189     138A  082A               	movf	___awmod@divisor,w
  6190     138B  02AC               	subwf	___awmod@dividend,f
  6191     138C  082B               	movf	___awmod@divisor+1,w
  6192     138D  1C03               	skipc
  6193     138E  03AD               	decf	___awmod@dividend+1,f
  6194     138F  02AD               	subwf	___awmod@dividend+1,f
  6195     1390                     l2646:
  6196     1390  3001               	movlw	1
  6197     1391                     u3075:
  6198     1391  1003               	clrc
  6199     1392  0CAB               	rrf	___awmod@divisor+1,f
  6200     1393  0CAA               	rrf	___awmod@divisor,f
  6201     1394  3EFF               	addlw	-1
  6202     1395  1D03               	skipz
  6203     1396  2B91               	goto	u3075
  6204     1397                     l2648:
  6205     1397  3001               	movlw	1
  6206     1398  02AE               	subwf	___awmod@counter,f
  6207     1399  1D03               	btfss	3,2
  6208     139A  2B9C               	goto	u3081
  6209     139B  2B9D               	goto	u3080
  6210     139C                     u3081:
  6211     139C  2B80               	goto	l2642
  6212     139D                     u3080:
  6213     139D                     l2650:
  6214     139D  082F               	movf	___awmod@sign,w
  6215     139E  1903               	btfsc	3,2
  6216     139F  2BA1               	goto	u3091
  6217     13A0  2BA2               	goto	u3090
  6218     13A1                     u3091:
  6219     13A1  2BA7               	goto	l2654
  6220     13A2                     u3090:
  6221     13A2                     l2652:
  6222     13A2  09AC               	comf	___awmod@dividend,f
  6223     13A3  09AD               	comf	___awmod@dividend+1,f
  6224     13A4  0AAC               	incf	___awmod@dividend,f
  6225     13A5  1903               	skipnz
  6226     13A6  0AAD               	incf	___awmod@dividend+1,f
  6227     13A7                     l2654:
  6228     13A7  082D               	movf	___awmod@dividend+1,w
  6229     13A8  00AB               	movwf	?___awmod+1
  6230     13A9  082C               	movf	___awmod@dividend,w
  6231     13AA  00AA               	movwf	?___awmod
  6232     13AB                     l585:
  6233     13AB  0008               	return
  6234     13AC                     __end_of___awmod:
  6235                           
  6236                           	psect	text19
  6237     1476                     __ptext19:	
  6238 ;; *************** function ___awdiv *****************
  6239 ;; Defined at:
  6240 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  6241 ;; Parameters:    Size  Location     Type
  6242 ;;  divisor         2   10[BANK0 ] int 
  6243 ;;  dividend        2   12[BANK0 ] int 
  6244 ;; Auto vars:     Size  Location     Type
  6245 ;;  quotient        2   16[BANK0 ] int 
  6246 ;;  sign            1   15[BANK0 ] unsigned char 
  6247 ;;  counter         1   14[BANK0 ] unsigned char 
  6248 ;; Return value:  Size  Location     Type
  6249 ;;                  2   10[BANK0 ] int 
  6250 ;; Registers used:
  6251 ;;		wreg, status,2, status,0, btemp+1
  6252 ;; Tracked objects:
  6253 ;;		On entry : 0/0
  6254 ;;		On exit  : 0/0
  6255 ;;		Unchanged: 0/0
  6256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6257 ;;      Params:         0       4       0       0       0
  6258 ;;      Locals:         0       4       0       0       0
  6259 ;;      Temps:          0       0       0       0       0
  6260 ;;      Totals:         0       8       0       0       0
  6261 ;;Total ram usage:        8 bytes
  6262 ;; Hardware stack levels used: 1
  6263 ;; Hardware stack levels required when called: 2
  6264 ;; This function calls:
  6265 ;;		Nothing
  6266 ;; This function is called by:
  6267 ;;		_main
  6268 ;; This function uses a non-reentrant model
  6269 ;;
  6270                           
  6271     1476                     ___awdiv:	
  6272                           ;psect for function ___awdiv
  6273                           
  6274     1476                     l2576:	
  6275                           ;incstack = 0
  6276                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  6277                           
  6278     1476  1283               	bcf	3,5	;RP0=0, select bank0
  6279     1477  1303               	bcf	3,6	;RP1=0, select bank0
  6280     1478  01AF               	clrf	___awdiv@sign
  6281     1479                     l2578:
  6282     1479  1FAB               	btfss	___awdiv@divisor+1,7
  6283     147A  2C7C               	goto	u2911
  6284     147B  2C7D               	goto	u2910
  6285     147C                     u2911:
  6286     147C  2C84               	goto	l2584
  6287     147D                     u2910:
  6288     147D                     l2580:
  6289     147D  09AA               	comf	___awdiv@divisor,f
  6290     147E  09AB               	comf	___awdiv@divisor+1,f
  6291     147F  0AAA               	incf	___awdiv@divisor,f
  6292     1480  1903               	skipnz
  6293     1481  0AAB               	incf	___awdiv@divisor+1,f
  6294     1482                     l2582:
  6295     1482  01AF               	clrf	___awdiv@sign
  6296     1483  0AAF               	incf	___awdiv@sign,f
  6297     1484                     l2584:
  6298     1484  1FAD               	btfss	___awdiv@dividend+1,7
  6299     1485  2C87               	goto	u2921
  6300     1486  2C88               	goto	u2920
  6301     1487                     u2921:
  6302     1487  2C91               	goto	l2590
  6303     1488                     u2920:
  6304     1488                     l2586:
  6305     1488  09AC               	comf	___awdiv@dividend,f
  6306     1489  09AD               	comf	___awdiv@dividend+1,f
  6307     148A  0AAC               	incf	___awdiv@dividend,f
  6308     148B  1903               	skipnz
  6309     148C  0AAD               	incf	___awdiv@dividend+1,f
  6310     148D                     l2588:
  6311     148D  3001               	movlw	1
  6312     148E  00FF               	movwf	btemp+1
  6313     148F  087F               	movf	btemp+1,w
  6314     1490  06AF               	xorwf	___awdiv@sign,f
  6315     1491                     l2590:
  6316     1491  01B0               	clrf	___awdiv@quotient
  6317     1492  01B1               	clrf	___awdiv@quotient+1
  6318     1493                     l2592:
  6319     1493  082A               	movf	___awdiv@divisor,w
  6320     1494  042B               	iorwf	___awdiv@divisor+1,w
  6321     1495  1903               	btfsc	3,2
  6322     1496  2C98               	goto	u2931
  6323     1497  2C99               	goto	u2930
  6324     1498                     u2931:
  6325     1498  2CD0               	goto	l2612
  6326     1499                     u2930:
  6327     1499                     l2594:
  6328     1499  01AE               	clrf	___awdiv@counter
  6329     149A  0AAE               	incf	___awdiv@counter,f
  6330     149B  2CA7               	goto	l2600
  6331     149C                     l2596:
  6332     149C  3001               	movlw	1
  6333     149D                     u2945:
  6334     149D  1003               	clrc
  6335     149E  0DAA               	rlf	___awdiv@divisor,f
  6336     149F  0DAB               	rlf	___awdiv@divisor+1,f
  6337     14A0  3EFF               	addlw	-1
  6338     14A1  1D03               	skipz
  6339     14A2  2C9D               	goto	u2945
  6340     14A3                     l2598:
  6341     14A3  3001               	movlw	1
  6342     14A4  00FF               	movwf	btemp+1
  6343     14A5  087F               	movf	btemp+1,w
  6344     14A6  07AE               	addwf	___awdiv@counter,f
  6345     14A7                     l2600:
  6346     14A7  1FAB               	btfss	___awdiv@divisor+1,7
  6347     14A8  2CAA               	goto	u2951
  6348     14A9  2CAB               	goto	u2950
  6349     14AA                     u2951:
  6350     14AA  2C9C               	goto	l2596
  6351     14AB                     u2950:
  6352     14AB                     l2602:
  6353     14AB  3001               	movlw	1
  6354     14AC                     u2965:
  6355     14AC  1003               	clrc
  6356     14AD  0DB0               	rlf	___awdiv@quotient,f
  6357     14AE  0DB1               	rlf	___awdiv@quotient+1,f
  6358     14AF  3EFF               	addlw	-1
  6359     14B0  1D03               	skipz
  6360     14B1  2CAC               	goto	u2965
  6361     14B2  082B               	movf	___awdiv@divisor+1,w
  6362     14B3  022D               	subwf	___awdiv@dividend+1,w
  6363     14B4  1D03               	skipz
  6364     14B5  2CB8               	goto	u2975
  6365     14B6  082A               	movf	___awdiv@divisor,w
  6366     14B7  022C               	subwf	___awdiv@dividend,w
  6367     14B8                     u2975:
  6368     14B8  1C03               	skipc
  6369     14B9  2CBB               	goto	u2971
  6370     14BA  2CBC               	goto	u2970
  6371     14BB                     u2971:
  6372     14BB  2CC3               	goto	l2608
  6373     14BC                     u2970:
  6374     14BC                     l2604:
  6375     14BC  082A               	movf	___awdiv@divisor,w
  6376     14BD  02AC               	subwf	___awdiv@dividend,f
  6377     14BE  082B               	movf	___awdiv@divisor+1,w
  6378     14BF  1C03               	skipc
  6379     14C0  03AD               	decf	___awdiv@dividend+1,f
  6380     14C1  02AD               	subwf	___awdiv@dividend+1,f
  6381     14C2                     l2606:
  6382     14C2  1430               	bsf	___awdiv@quotient,0
  6383     14C3                     l2608:
  6384     14C3  3001               	movlw	1
  6385     14C4                     u2985:
  6386     14C4  1003               	clrc
  6387     14C5  0CAB               	rrf	___awdiv@divisor+1,f
  6388     14C6  0CAA               	rrf	___awdiv@divisor,f
  6389     14C7  3EFF               	addlw	-1
  6390     14C8  1D03               	skipz
  6391     14C9  2CC4               	goto	u2985
  6392     14CA                     l2610:
  6393     14CA  3001               	movlw	1
  6394     14CB  02AE               	subwf	___awdiv@counter,f
  6395     14CC  1D03               	btfss	3,2
  6396     14CD  2CCF               	goto	u2991
  6397     14CE  2CD0               	goto	u2990
  6398     14CF                     u2991:
  6399     14CF  2CAB               	goto	l2602
  6400     14D0                     u2990:
  6401     14D0                     l2612:
  6402     14D0  082F               	movf	___awdiv@sign,w
  6403     14D1  1903               	btfsc	3,2
  6404     14D2  2CD4               	goto	u3001
  6405     14D3  2CD5               	goto	u3000
  6406     14D4                     u3001:
  6407     14D4  2CDA               	goto	l2616
  6408     14D5                     u3000:
  6409     14D5                     l2614:
  6410     14D5  09B0               	comf	___awdiv@quotient,f
  6411     14D6  09B1               	comf	___awdiv@quotient+1,f
  6412     14D7  0AB0               	incf	___awdiv@quotient,f
  6413     14D8  1903               	skipnz
  6414     14D9  0AB1               	incf	___awdiv@quotient+1,f
  6415     14DA                     l2616:
  6416     14DA  0831               	movf	___awdiv@quotient+1,w
  6417     14DB  00AB               	movwf	?___awdiv+1
  6418     14DC  0830               	movf	___awdiv@quotient,w
  6419     14DD  00AA               	movwf	?___awdiv
  6420     14DE                     l572:
  6421     14DE  0008               	return
  6422     14DF                     __end_of___awdiv:
  6423                           
  6424                           	psect	text20
  6425     11E1                     __ptext20:	
  6426 ;; *************** function _UART_Write_Text *****************
  6427 ;; Defined at:
  6428 ;;		line 18 in file "uart_lib.c"
  6429 ;; Parameters:    Size  Location     Type
  6430 ;;  text            2    1[BANK0 ] PTR unsigned char 
  6431 ;;		 -> STR_31(5), STR_30(5), STR_27(5), main@combinedText_377(20), 
  6432 ;;		 -> main@uartMessage_373(8), STR_21(5), main@combinedText(20), main@uartMessage(8), 
  6433 ;;		 -> STR_15(5), 
  6434 ;; Auto vars:     Size  Location     Type
  6435 ;;  i               2    6[BANK0 ] int 
  6436 ;; Return value:  Size  Location     Type
  6437 ;;                  1    wreg      void 
  6438 ;; Registers used:
  6439 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6440 ;; Tracked objects:
  6441 ;;		On entry : 0/0
  6442 ;;		On exit  : 0/0
  6443 ;;		Unchanged: 0/0
  6444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6445 ;;      Params:         0       2       0       0       0
  6446 ;;      Locals:         0       2       0       0       0
  6447 ;;      Temps:          0       3       0       0       0
  6448 ;;      Totals:         0       7       0       0       0
  6449 ;;Total ram usage:        7 bytes
  6450 ;; Hardware stack levels used: 1
  6451 ;; Hardware stack levels required when called: 3
  6452 ;; This function calls:
  6453 ;;		_UART_Write
  6454 ;; This function is called by:
  6455 ;;		_main
  6456 ;; This function uses a non-reentrant model
  6457 ;;
  6458                           
  6459     11E1                     _UART_Write_Text:	
  6460                           ;psect for function _UART_Write_Text
  6461                           
  6462     11E1                     l2384:	
  6463                           ;incstack = 0
  6464                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6465                           
  6466                           
  6467                           ;uart_lib.c: 18: void UART_Write_Text(char *text);uart_lib.c: 19: {;uart_lib.c: 20:   in
      +                          t i;;uart_lib.c: 21:   for(i=0;text[i]!='\0';i++)
  6468     11E1  1283               	bcf	3,5	;RP0=0, select bank0
  6469     11E2  1303               	bcf	3,6	;RP1=0, select bank0
  6470     11E3  01A6               	clrf	UART_Write_Text@i
  6471     11E4  01A7               	clrf	UART_Write_Text@i+1
  6472     11E5  2A0A               	goto	l2390
  6473     11E6                     l2386:
  6474                           
  6475                           ;uart_lib.c: 22:     UART_Write(text[i]);
  6476     11E6  0826               	movf	UART_Write_Text@i,w
  6477     11E7  0721               	addwf	UART_Write_Text@text,w
  6478     11E8  00A4               	movwf	??_UART_Write_Text+1
  6479     11E9  0822               	movf	UART_Write_Text@text+1,w
  6480     11EA  00A3               	movwf	??_UART_Write_Text
  6481     11EB  1803               	skipnc
  6482     11EC  0AA3               	incf	??_UART_Write_Text,f
  6483     11ED  1FA6               	btfss	UART_Write_Text@i,7
  6484     11EE  29F0               	goto	u2640
  6485     11EF  03A3               	decf	??_UART_Write_Text,f
  6486     11F0                     u2640:
  6487     11F0  1283               	bcf	3,5	;RP0=0, select bank0
  6488     11F1  1303               	bcf	3,6	;RP1=0, select bank0
  6489     11F2  0823               	movf	??_UART_Write_Text,w
  6490     11F3  00A5               	movwf	??_UART_Write_Text+2
  6491     11F4  0825               	movf	??_UART_Write_Text+2,w
  6492     11F5  00FF               	movwf	btemp+1
  6493     11F6  0824               	movf	??_UART_Write_Text+1,w
  6494     11F7  0084               	movwf	4
  6495     11F8  160A  118A  2000  160A  118A  	fcall	stringtab
  6496     11FD  160A  158A  2702  160A  118A  	fcall	_UART_Write
  6497     1202                     l2388:
  6498     1202  3001               	movlw	1
  6499     1203  1283               	bcf	3,5	;RP0=0, select bank0
  6500     1204  1303               	bcf	3,6	;RP1=0, select bank0
  6501     1205  07A6               	addwf	UART_Write_Text@i,f
  6502     1206  1803               	skipnc
  6503     1207  0AA7               	incf	UART_Write_Text@i+1,f
  6504     1208  3000               	movlw	0
  6505     1209  07A7               	addwf	UART_Write_Text@i+1,f
  6506     120A                     l2390:
  6507     120A  0826               	movf	UART_Write_Text@i,w
  6508     120B  0721               	addwf	UART_Write_Text@text,w
  6509     120C  00A4               	movwf	??_UART_Write_Text+1
  6510     120D  0822               	movf	UART_Write_Text@text+1,w
  6511     120E  00A3               	movwf	??_UART_Write_Text
  6512     120F  1803               	skipnc
  6513     1210  0AA3               	incf	??_UART_Write_Text,f
  6514     1211  1FA6               	btfss	UART_Write_Text@i,7
  6515     1212  2A14               	goto	u2650
  6516     1213  03A3               	decf	??_UART_Write_Text,f
  6517     1214                     u2650:
  6518     1214  1283               	bcf	3,5	;RP0=0, select bank0
  6519     1215  1303               	bcf	3,6	;RP1=0, select bank0
  6520     1216  0823               	movf	??_UART_Write_Text,w
  6521     1217  00A5               	movwf	??_UART_Write_Text+2
  6522     1218  0825               	movf	??_UART_Write_Text+2,w
  6523     1219  00FF               	movwf	btemp+1
  6524     121A  0824               	movf	??_UART_Write_Text+1,w
  6525     121B  0084               	movwf	4
  6526     121C  160A  118A  2000  160A  118A  	fcall	stringtab
  6527     1221  3A00               	xorlw	0
  6528     1222  1D03               	skipz
  6529     1223  2A25               	goto	u2661
  6530     1224  2A26               	goto	u2660
  6531     1225                     u2661:
  6532     1225  29E6               	goto	l2386
  6533     1226                     u2660:
  6534     1226                     l25:
  6535     1226  0008               	return
  6536     1227                     __end_of_UART_Write_Text:
  6537                           
  6538                           	psect	text21
  6539     1F02                     __ptext21:	
  6540 ;; *************** function _UART_Write *****************
  6541 ;; Defined at:
  6542 ;;		line 12 in file "uart_lib.c"
  6543 ;; Parameters:    Size  Location     Type
  6544 ;;  data            1    wreg     unsigned char 
  6545 ;; Auto vars:     Size  Location     Type
  6546 ;;  data            1    0[BANK0 ] unsigned char 
  6547 ;; Return value:  Size  Location     Type
  6548 ;;                  1    wreg      void 
  6549 ;; Registers used:
  6550 ;;		wreg
  6551 ;; Tracked objects:
  6552 ;;		On entry : 0/0
  6553 ;;		On exit  : 0/0
  6554 ;;		Unchanged: 0/0
  6555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6556 ;;      Params:         0       0       0       0       0
  6557 ;;      Locals:         0       1       0       0       0
  6558 ;;      Temps:          0       0       0       0       0
  6559 ;;      Totals:         0       1       0       0       0
  6560 ;;Total ram usage:        1 bytes
  6561 ;; Hardware stack levels used: 1
  6562 ;; Hardware stack levels required when called: 2
  6563 ;; This function calls:
  6564 ;;		Nothing
  6565 ;; This function is called by:
  6566 ;;		_UART_Write_Text
  6567 ;; This function uses a non-reentrant model
  6568 ;;
  6569                           
  6570     1F02                     _UART_Write:	
  6571                           ;psect for function _UART_Write
  6572                           
  6573                           
  6574                           ;incstack = 0
  6575                           ; Regs used in _UART_Write: [wreg]
  6576                           ;UART_Write@data stored from wreg
  6577     1F02  1283               	bcf	3,5	;RP0=0, select bank0
  6578     1F03  1303               	bcf	3,6	;RP1=0, select bank0
  6579     1F04  00A0               	movwf	UART_Write@data
  6580     1F05                     l2258:
  6581     1F05                     l16:	
  6582                           ;uart_lib.c: 12: void UART_Write(char data);uart_lib.c: 13: {;uart_lib.c: 14:   while(!T
      +                          RMT);
  6583                           
  6584     1F05  1683               	bsf	3,5	;RP0=1, select bank1
  6585     1F06  1303               	bcf	3,6	;RP1=0, select bank1
  6586     1F07  1C98               	btfss	24,1	;volatile
  6587     1F08  2F0A               	goto	u2341
  6588     1F09  2F0B               	goto	u2340
  6589     1F0A                     u2341:
  6590     1F0A  2F05               	goto	l16
  6591     1F0B                     u2340:
  6592     1F0B                     l2260:
  6593                           
  6594                           ;uart_lib.c: 15:   TXREG = data;
  6595     1F0B  1283               	bcf	3,5	;RP0=0, select bank0
  6596     1F0C  1303               	bcf	3,6	;RP1=0, select bank0
  6597     1F0D  0820               	movf	UART_Write@data,w
  6598     1F0E  0099               	movwf	25	;volatile
  6599     1F0F                     l19:
  6600     1F0F  0008               	return
  6601     1F10                     __end_of_UART_Write:
  6602                           
  6603                           	psect	text22
  6604     1F10                     __ptext22:	
  6605 ;; *************** function _UART_Initialize *****************
  6606 ;; Defined at:
  6607 ;;		line 4 in file "uart_lib.c"
  6608 ;; Parameters:    Size  Location     Type
  6609 ;;		None
  6610 ;; Auto vars:     Size  Location     Type
  6611 ;;		None
  6612 ;; Return value:  Size  Location     Type
  6613 ;;                  1    wreg      void 
  6614 ;; Registers used:
  6615 ;;		wreg, status,2
  6616 ;; Tracked objects:
  6617 ;;		On entry : 0/0
  6618 ;;		On exit  : 0/0
  6619 ;;		Unchanged: 0/0
  6620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6621 ;;      Params:         0       0       0       0       0
  6622 ;;      Locals:         0       0       0       0       0
  6623 ;;      Temps:          0       0       0       0       0
  6624 ;;      Totals:         0       0       0       0       0
  6625 ;;Total ram usage:        0 bytes
  6626 ;; Hardware stack levels used: 1
  6627 ;; Hardware stack levels required when called: 2
  6628 ;; This function calls:
  6629 ;;		Nothing
  6630 ;; This function is called by:
  6631 ;;		_main
  6632 ;; This function uses a non-reentrant model
  6633 ;;
  6634                           
  6635     1F10                     _UART_Initialize:	
  6636                           ;psect for function _UART_Initialize
  6637                           
  6638     1F10                     l2380:	
  6639                           ;incstack = 0
  6640                           ; Regs used in _UART_Initialize: [wreg+status,2]
  6641                           
  6642                           
  6643                           ;uart_lib.c: 6:     TXSTA=0b00100100;
  6644     1F10  3024               	movlw	36
  6645     1F11  1683               	bsf	3,5	;RP0=1, select bank1
  6646     1F12  1303               	bcf	3,6	;RP1=0, select bank1
  6647     1F13  0098               	movwf	24	;volatile
  6648                           
  6649                           ;uart_lib.c: 7:     RCSTA=0b10010000;
  6650     1F14  3090               	movlw	144
  6651     1F15  1283               	bcf	3,5	;RP0=0, select bank0
  6652     1F16  1303               	bcf	3,6	;RP1=0, select bank0
  6653     1F17  0098               	movwf	24	;volatile
  6654                           
  6655                           ;uart_lib.c: 8:     SPBRG=12;
  6656     1F18  300C               	movlw	12
  6657     1F19  1683               	bsf	3,5	;RP0=1, select bank1
  6658     1F1A  1303               	bcf	3,6	;RP1=0, select bank1
  6659     1F1B  0099               	movwf	25	;volatile
  6660     1F1C                     l2382:
  6661                           
  6662                           ;uart_lib.c: 9:     TXREG=0x00;
  6663     1F1C  1283               	bcf	3,5	;RP0=0, select bank0
  6664     1F1D  1303               	bcf	3,6	;RP1=0, select bank0
  6665     1F1E  0199               	clrf	25	;volatile
  6666     1F1F                     l13:
  6667     1F1F  0008               	return
  6668     1F20                     __end_of_UART_Initialize:
  6669                           
  6670                           	psect	text23
  6671     13AC                     __ptext23:	
  6672 ;; *************** function _Lcd_Init *****************
  6673 ;; Defined at:
  6674 ;;		line 61 in file "./lcd.h"
  6675 ;; Parameters:    Size  Location     Type
  6676 ;;		None
  6677 ;; Auto vars:     Size  Location     Type
  6678 ;;		None
  6679 ;; Return value:  Size  Location     Type
  6680 ;;                  1    wreg      void 
  6681 ;; Registers used:
  6682 ;;		wreg, status,2, status,0, pclath, cstack
  6683 ;; Tracked objects:
  6684 ;;		On entry : 0/0
  6685 ;;		On exit  : 0/0
  6686 ;;		Unchanged: 0/0
  6687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6688 ;;      Params:         0       0       0       0       0
  6689 ;;      Locals:         0       0       0       0       0
  6690 ;;      Temps:          0       2       0       0       0
  6691 ;;      Totals:         0       2       0       0       0
  6692 ;;Total ram usage:        2 bytes
  6693 ;; Hardware stack levels used: 1
  6694 ;; Hardware stack levels required when called: 4
  6695 ;; This function calls:
  6696 ;;		_Lcd_Cmd
  6697 ;;		_Lcd_Port
  6698 ;; This function is called by:
  6699 ;;		_main
  6700 ;; This function uses a non-reentrant model
  6701 ;;
  6702                           
  6703     13AC                     _Lcd_Init:	
  6704                           ;psect for function _Lcd_Init
  6705                           
  6706     13AC                     l2392:	
  6707                           ;incstack = 0
  6708                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  6709                           
  6710                           
  6711                           ;./lcd.h: 63:   Lcd_Port(0x00);
  6712     13AC  3000               	movlw	0
  6713     13AD  160A  158A  2782  160A  118A  	fcall	_Lcd_Port
  6714     13B2                     l2394:
  6715                           
  6716                           ;./lcd.h: 64:    _delay((unsigned long)((20)*(4000000/4000.0)));
  6717     13B2  301A               	movlw	26
  6718     13B3  1283               	bcf	3,5	;RP0=0, select bank0
  6719     13B4  1303               	bcf	3,6	;RP1=0, select bank0
  6720     13B5  00A5               	movwf	??_Lcd_Init+1
  6721     13B6  30F7               	movlw	247
  6722     13B7  00A4               	movwf	??_Lcd_Init
  6723     13B8                     u4677:
  6724     13B8  0BA4               	decfsz	??_Lcd_Init,f
  6725     13B9  2BB8               	goto	u4677
  6726     13BA  0BA5               	decfsz	??_Lcd_Init+1,f
  6727     13BB  2BB8               	goto	u4677
  6728     13BC  2BBD               	nop2
  6729     13BD                     l2396:
  6730                           
  6731                           ;./lcd.h: 65:   Lcd_Cmd(0x03);
  6732     13BD  3003               	movlw	3
  6733     13BE  160A  158A  274A  160A  118A  	fcall	_Lcd_Cmd
  6734                           
  6735                           ;./lcd.h: 66:  _delay((unsigned long)((5)*(4000000/4000.0)));
  6736     13C3  3007               	movlw	7
  6737     13C4  1283               	bcf	3,5	;RP0=0, select bank0
  6738     13C5  1303               	bcf	3,6	;RP1=0, select bank0
  6739     13C6  00A5               	movwf	??_Lcd_Init+1
  6740     13C7  307C               	movlw	124
  6741     13C8  00A4               	movwf	??_Lcd_Init
  6742     13C9                     u4687:
  6743     13C9  0BA4               	decfsz	??_Lcd_Init,f
  6744     13CA  2BC9               	goto	u4687
  6745     13CB  0BA5               	decfsz	??_Lcd_Init+1,f
  6746     13CC  2BC9               	goto	u4687
  6747     13CD  0000               	nop
  6748     13CE                     l2398:
  6749                           
  6750                           ;./lcd.h: 67:   Lcd_Cmd(0x03);
  6751     13CE  3003               	movlw	3
  6752     13CF  160A  158A  274A  160A  118A  	fcall	_Lcd_Cmd
  6753     13D4                     l2400:
  6754                           
  6755                           ;./lcd.h: 68:  _delay((unsigned long)((11)*(4000000/4000.0)));
  6756     13D4  300F               	movlw	15
  6757     13D5  1283               	bcf	3,5	;RP0=0, select bank0
  6758     13D6  1303               	bcf	3,6	;RP1=0, select bank0
  6759     13D7  00A5               	movwf	??_Lcd_Init+1
  6760     13D8  3047               	movlw	71
  6761     13D9  00A4               	movwf	??_Lcd_Init
  6762     13DA                     u4697:
  6763     13DA  0BA4               	decfsz	??_Lcd_Init,f
  6764     13DB  2BDA               	goto	u4697
  6765     13DC  0BA5               	decfsz	??_Lcd_Init+1,f
  6766     13DD  2BDA               	goto	u4697
  6767                           
  6768                           ;./lcd.h: 69:   Lcd_Cmd(0x03);
  6769     13DE  3003               	movlw	3
  6770     13DF  160A  158A  274A  160A  118A  	fcall	_Lcd_Cmd
  6771                           
  6772                           ;./lcd.h: 71:   Lcd_Cmd(0x02);
  6773     13E4  3002               	movlw	2
  6774     13E5  160A  158A  274A  160A  118A  	fcall	_Lcd_Cmd
  6775                           
  6776                           ;./lcd.h: 72:   Lcd_Cmd(0x02);
  6777     13EA  3002               	movlw	2
  6778     13EB  160A  158A  274A  160A  118A  	fcall	_Lcd_Cmd
  6779                           
  6780                           ;./lcd.h: 73:   Lcd_Cmd(0x08);
  6781     13F0  3008               	movlw	8
  6782     13F1  160A  158A  274A  160A  118A  	fcall	_Lcd_Cmd
  6783                           
  6784                           ;./lcd.h: 74:   Lcd_Cmd(0x00);
  6785     13F6  3000               	movlw	0
  6786     13F7  160A  158A  274A  160A  118A  	fcall	_Lcd_Cmd
  6787                           
  6788                           ;./lcd.h: 75:   Lcd_Cmd(0x0C);
  6789     13FC  300C               	movlw	12
  6790     13FD  160A  158A  274A  160A  118A  	fcall	_Lcd_Cmd
  6791                           
  6792                           ;./lcd.h: 76:   Lcd_Cmd(0x00);
  6793     1402  3000               	movlw	0
  6794     1403  160A  158A  274A  160A  118A  	fcall	_Lcd_Cmd
  6795                           
  6796                           ;./lcd.h: 77:   Lcd_Cmd(0x06);
  6797     1408  3006               	movlw	6
  6798     1409  160A  158A  274A  160A  118A  	fcall	_Lcd_Cmd
  6799     140E                     l161:
  6800     140E  0008               	return
  6801     140F                     __end_of_Lcd_Init:
  6802                           
  6803                           	psect	text24
  6804     1F4A                     __ptext24:	
  6805 ;; *************** function _Lcd_Cmd *****************
  6806 ;; Defined at:
  6807 ;;		line 25 in file "./lcd.h"
  6808 ;; Parameters:    Size  Location     Type
  6809 ;;  a               1    wreg     unsigned char 
  6810 ;; Auto vars:     Size  Location     Type
  6811 ;;  a               1    3[BANK0 ] unsigned char 
  6812 ;; Return value:  Size  Location     Type
  6813 ;;                  1    wreg      void 
  6814 ;; Registers used:
  6815 ;;		wreg, status,2, status,0, pclath, cstack
  6816 ;; Tracked objects:
  6817 ;;		On entry : 0/0
  6818 ;;		On exit  : 0/0
  6819 ;;		Unchanged: 0/0
  6820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6821 ;;      Params:         0       0       0       0       0
  6822 ;;      Locals:         0       1       0       0       0
  6823 ;;      Temps:          0       2       0       0       0
  6824 ;;      Totals:         0       3       0       0       0
  6825 ;;Total ram usage:        3 bytes
  6826 ;; Hardware stack levels used: 1
  6827 ;; Hardware stack levels required when called: 3
  6828 ;; This function calls:
  6829 ;;		_Lcd_Port
  6830 ;; This function is called by:
  6831 ;;		_Lcd_Clear
  6832 ;;		_Lcd_Set_Cursor
  6833 ;;		_Lcd_Init
  6834 ;; This function uses a non-reentrant model
  6835 ;;
  6836                           
  6837     1F4A                     _Lcd_Cmd:	
  6838                           ;psect for function _Lcd_Cmd
  6839                           
  6840                           
  6841                           ;incstack = 0
  6842                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  6843                           ;Lcd_Cmd@a stored from wreg
  6844     1F4A  1283               	bcf	3,5	;RP0=0, select bank0
  6845     1F4B  1303               	bcf	3,6	;RP1=0, select bank0
  6846     1F4C  00A3               	movwf	Lcd_Cmd@a
  6847     1F4D                     l2228:
  6848                           
  6849                           ;./lcd.h: 25: void Lcd_Cmd(char a);./lcd.h: 26: {;./lcd.h: 27:  RB5 = 0;
  6850     1F4D  1286               	bcf	6,5	;volatile
  6851     1F4E                     l2230:
  6852                           
  6853                           ;./lcd.h: 28:  Lcd_Port(a);
  6854     1F4E  0823               	movf	Lcd_Cmd@a,w
  6855     1F4F  160A  158A  2782  160A  158A  	fcall	_Lcd_Port
  6856     1F54                     l2232:
  6857                           
  6858                           ;./lcd.h: 29:  RB4 = 1;
  6859     1F54  1283               	bcf	3,5	;RP0=0, select bank0
  6860     1F55  1303               	bcf	3,6	;RP1=0, select bank0
  6861     1F56  1606               	bsf	6,4	;volatile
  6862     1F57                     l2234:
  6863                           
  6864                           ;./lcd.h: 30:         _delay((unsigned long)((4)*(4000000/4000.0)));
  6865     1F57  3006               	movlw	6
  6866     1F58  1283               	bcf	3,5	;RP0=0, select bank0
  6867     1F59  1303               	bcf	3,6	;RP1=0, select bank0
  6868     1F5A  00A2               	movwf	??_Lcd_Cmd+1
  6869     1F5B  302F               	movlw	47
  6870     1F5C  00A1               	movwf	??_Lcd_Cmd
  6871     1F5D                     u4707:
  6872     1F5D  0BA1               	decfsz	??_Lcd_Cmd,f
  6873     1F5E  2F5D               	goto	u4707
  6874     1F5F  0BA2               	decfsz	??_Lcd_Cmd+1,f
  6875     1F60  2F5D               	goto	u4707
  6876     1F61  2F62               	nop2
  6877     1F62                     l2236:
  6878                           
  6879                           ;./lcd.h: 31:         RB4 = 0;
  6880     1F62  1283               	bcf	3,5	;RP0=0, select bank0
  6881     1F63  1303               	bcf	3,6	;RP1=0, select bank0
  6882     1F64  1206               	bcf	6,4	;volatile
  6883     1F65                     l149:
  6884     1F65  0008               	return
  6885     1F66                     __end_of_Lcd_Cmd:
  6886                           
  6887                           	psect	text25
  6888     1F82                     __ptext25:	
  6889 ;; *************** function _Lcd_Port *****************
  6890 ;; Defined at:
  6891 ;;		line 3 in file "./lcd.h"
  6892 ;; Parameters:    Size  Location     Type
  6893 ;;  a               1    wreg     unsigned char 
  6894 ;; Auto vars:     Size  Location     Type
  6895 ;;  a               1    0[BANK0 ] unsigned char 
  6896 ;; Return value:  Size  Location     Type
  6897 ;;                  1    wreg      void 
  6898 ;; Registers used:
  6899 ;;		wreg
  6900 ;; Tracked objects:
  6901 ;;		On entry : 0/0
  6902 ;;		On exit  : 0/0
  6903 ;;		Unchanged: 0/0
  6904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6905 ;;      Params:         0       0       0       0       0
  6906 ;;      Locals:         0       1       0       0       0
  6907 ;;      Temps:          0       0       0       0       0
  6908 ;;      Totals:         0       1       0       0       0
  6909 ;;Total ram usage:        1 bytes
  6910 ;; Hardware stack levels used: 1
  6911 ;; Hardware stack levels required when called: 2
  6912 ;; This function calls:
  6913 ;;		Nothing
  6914 ;; This function is called by:
  6915 ;;		_Lcd_Cmd
  6916 ;;		_Lcd_Init
  6917 ;;		_Lcd_Write_Char
  6918 ;; This function uses a non-reentrant model
  6919 ;;
  6920                           
  6921     1F82                     _Lcd_Port:	
  6922                           ;psect for function _Lcd_Port
  6923                           
  6924                           
  6925                           ;incstack = 0
  6926                           ; Regs used in _Lcd_Port: [wreg]
  6927                           ;Lcd_Port@a stored from wreg
  6928     1F82  1283               	bcf	3,5	;RP0=0, select bank0
  6929     1F83  1303               	bcf	3,6	;RP1=0, select bank0
  6930     1F84  00A0               	movwf	Lcd_Port@a
  6931     1F85                     l2218:
  6932                           
  6933                           ;./lcd.h: 3: void Lcd_Port(char a);./lcd.h: 4: {;./lcd.h: 5:  if(a & 1)
  6934     1F85  1C20               	btfss	Lcd_Port@a,0
  6935     1F86  2F88               	goto	u2291
  6936     1F87  2F89               	goto	u2290
  6937     1F88                     u2291:
  6938     1F88  2F8B               	goto	l138
  6939     1F89                     u2290:
  6940     1F89                     l2220:
  6941                           
  6942                           ;./lcd.h: 6:   RB3 = 1;
  6943     1F89  1586               	bsf	6,3	;volatile
  6944     1F8A  2F8C               	goto	l139
  6945     1F8B                     l138:	
  6946                           ;./lcd.h: 7:  else
  6947                           
  6948                           
  6949                           ;./lcd.h: 8:   RB3 = 0;
  6950     1F8B  1186               	bcf	6,3	;volatile
  6951     1F8C                     l139:
  6952                           
  6953                           ;./lcd.h: 10:  if(a & 2)
  6954     1F8C  1CA0               	btfss	Lcd_Port@a,1
  6955     1F8D  2F8F               	goto	u2301
  6956     1F8E  2F90               	goto	u2300
  6957     1F8F                     u2301:
  6958     1F8F  2F92               	goto	l140
  6959     1F90                     u2300:
  6960     1F90                     l2222:
  6961                           
  6962                           ;./lcd.h: 11:   RB2 = 1;
  6963     1F90  1506               	bsf	6,2	;volatile
  6964     1F91  2F93               	goto	l141
  6965     1F92                     l140:	
  6966                           ;./lcd.h: 12:  else
  6967                           
  6968                           
  6969                           ;./lcd.h: 13:   RB2 = 0;
  6970     1F92  1106               	bcf	6,2	;volatile
  6971     1F93                     l141:
  6972                           
  6973                           ;./lcd.h: 15:  if(a & 4)
  6974     1F93  1D20               	btfss	Lcd_Port@a,2
  6975     1F94  2F96               	goto	u2311
  6976     1F95  2F97               	goto	u2310
  6977     1F96                     u2311:
  6978     1F96  2F99               	goto	l142
  6979     1F97                     u2310:
  6980     1F97                     l2224:
  6981                           
  6982                           ;./lcd.h: 16:   RB1 = 1;
  6983     1F97  1486               	bsf	6,1	;volatile
  6984     1F98  2F9A               	goto	l143
  6985     1F99                     l142:	
  6986                           ;./lcd.h: 17:  else
  6987                           
  6988                           
  6989                           ;./lcd.h: 18:   RB1 = 0;
  6990     1F99  1086               	bcf	6,1	;volatile
  6991     1F9A                     l143:
  6992                           
  6993                           ;./lcd.h: 20:  if(a & 8)
  6994     1F9A  1DA0               	btfss	Lcd_Port@a,3
  6995     1F9B  2F9D               	goto	u2321
  6996     1F9C  2F9E               	goto	u2320
  6997     1F9D                     u2321:
  6998     1F9D  2FA0               	goto	l144
  6999     1F9E                     u2320:
  7000     1F9E                     l2226:
  7001                           
  7002                           ;./lcd.h: 21:   RB0 = 1;
  7003     1F9E  1406               	bsf	6,0	;volatile
  7004     1F9F  2FA1               	goto	l146
  7005     1FA0                     l144:	
  7006                           ;./lcd.h: 22:  else
  7007                           
  7008                           
  7009                           ;./lcd.h: 23:   RB0 = 0;
  7010     1FA0  1006               	bcf	6,0	;volatile
  7011     1FA1                     l146:
  7012     1FA1  0008               	return
  7013     1FA2                     __end_of_Lcd_Port:
  7014                           
  7015                           	psect	text26
  7016     1557                     __ptext26:	
  7017 ;; *************** function _timer_isr *****************
  7018 ;; Defined at:
  7019 ;;		line 95 in file "main1.c"
  7020 ;; Parameters:    Size  Location     Type
  7021 ;;		None
  7022 ;; Auto vars:     Size  Location     Type
  7023 ;;		None
  7024 ;; Return value:  Size  Location     Type
  7025 ;;                  1    wreg      void 
  7026 ;; Registers used:
  7027 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7028 ;; Tracked objects:
  7029 ;;		On entry : 0/0
  7030 ;;		On exit  : 0/0
  7031 ;;		Unchanged: 0/0
  7032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7033 ;;      Params:         0       0       0       0       0
  7034 ;;      Locals:         0       0       0       0       0
  7035 ;;      Temps:          3       0       0       0       0
  7036 ;;      Totals:         3       0       0       0       0
  7037 ;;Total ram usage:        3 bytes
  7038 ;; Hardware stack levels used: 1
  7039 ;; Hardware stack levels required when called: 1
  7040 ;; This function calls:
  7041 ;;		_incrementTime
  7042 ;;		i1___wmul
  7043 ;;		i1_writeEEPROM
  7044 ;; This function is called by:
  7045 ;;		Interrupt level 1
  7046 ;; This function uses a non-reentrant model
  7047 ;;
  7048                           
  7049     1557                     _timer_isr:	
  7050                           ;psect for function _timer_isr
  7051                           
  7052     1557                     i1l3058:
  7053                           
  7054                           ;main1.c: 96:     if (T0IF) {
  7055     1557  1D0B               	btfss	11,2	;volatile
  7056     1558  2D5A               	goto	u405_21
  7057     1559  2D5B               	goto	u405_20
  7058     155A                     u405_21:
  7059     155A  2DD9               	goto	i1l207
  7060     155B                     u405_20:
  7061     155B                     i1l3060:
  7062                           
  7063                           ;main1.c: 97:         T0IF = 0;
  7064     155B  110B               	bcf	11,2	;volatile
  7065     155C                     i1l3062:
  7066                           
  7067                           ;main1.c: 98:         TMR0 =61;
  7068     155C  303D               	movlw	61
  7069     155D  1283               	bcf	3,5	;RP0=0, select bank0
  7070     155E  1303               	bcf	3,6	;RP1=0, select bank0
  7071     155F  0081               	movwf	1	;volatile
  7072                           
  7073                           ;main1.c: 101:         kesmeSayaci++;
  7074     1560  3001               	movlw	1
  7075     1561  07EE               	addwf	_kesmeSayaci,f
  7076     1562  1803               	skipnc
  7077     1563  0AEF               	incf	_kesmeSayaci+1,f
  7078     1564  3000               	movlw	0
  7079     1565  07EF               	addwf	_kesmeSayaci+1,f
  7080     1566                     i1l3064:
  7081                           
  7082                           ;main1.c: 102:         if (kesmeSayaci==20){
  7083     1566  3014               	movlw	20
  7084     1567  066E               	xorwf	_kesmeSayaci,w
  7085     1568  046F               	iorwf	_kesmeSayaci+1,w
  7086     1569  1D03               	btfss	3,2
  7087     156A  2D6C               	goto	u406_21
  7088     156B  2D6D               	goto	u406_20
  7089     156C                     u406_21:
  7090     156C  2DD9               	goto	i1l207
  7091     156D                     u406_20:
  7092     156D                     i1l3066:
  7093                           
  7094                           ;main1.c: 103:             kesmeSayaci = 0 ;
  7095     156D  01EE               	clrf	_kesmeSayaci
  7096     156E  01EF               	clrf	_kesmeSayaci+1
  7097     156F                     i1l3068:
  7098                           
  7099                           ;main1.c: 104:             incrementTime(&currentTime);
  7100     156F  30AA               	movlw	(low (_currentTime| (0+256)))& (0+255)
  7101     1570  160A  118A  240F  160A  118A  	fcall	_incrementTime
  7102     1575                     i1l3070:
  7103                           
  7104                           ;main1.c: 105:  eepromWRclc++;
  7105     1575  3001               	movlw	1
  7106     1576  07F9               	addwf	_eepromWRclc,f
  7107     1577  1803               	skipnc
  7108     1578  0AFA               	incf	_eepromWRclc+1,f
  7109     1579  3000               	movlw	0
  7110     157A  07FA               	addwf	_eepromWRclc+1,f
  7111     157B                     i1l3072:
  7112                           
  7113                           ;main1.c: 106:             if (eepromWRclc==60){
  7114     157B  303C               	movlw	60
  7115     157C  0679               	xorwf	_eepromWRclc,w
  7116     157D  047A               	iorwf	_eepromWRclc+1,w
  7117     157E  1D03               	btfss	3,2
  7118     157F  2D81               	goto	u407_21
  7119     1580  2D82               	goto	u407_20
  7120     1581                     u407_21:
  7121     1581  2D84               	goto	i1l3076
  7122     1582                     u407_20:
  7123     1582                     i1l3074:
  7124                           
  7125                           ;main1.c: 107:                 eepromWRclc=0;
  7126     1582  01F9               	clrf	_eepromWRclc
  7127     1583  01FA               	clrf	_eepromWRclc+1
  7128     1584                     i1l3076:
  7129                           
  7130                           ;main1.c: 111:         writeEEPROM(epromBaslaAdress , currentTime.hours);
  7131     1584  087C               	movf	_epromBaslaAdress+1,w
  7132     1585  00F1               	movwf	i1writeEEPROM@address+1
  7133     1586  087B               	movf	_epromBaslaAdress,w
  7134     1587  00F0               	movwf	i1writeEEPROM@address
  7135     1588  1683               	bsf	3,5	;RP0=1, select bank3
  7136     1589  1703               	bsf	3,6	;RP1=1, select bank3
  7137     158A  082D               	movf	((_currentTime+1)^(0+384)+2),w
  7138     158B  00F3               	movwf	i1writeEEPROM@data+1
  7139     158C  082C               	movf	(_currentTime^(0+384)+2),w
  7140     158D  00F2               	movwf	i1writeEEPROM@data
  7141     158E  160A  158A  2734  160A  118A  	fcall	i1_writeEEPROM
  7142     1593                     i1l3078:
  7143                           
  7144                           ;main1.c: 112:         writeEEPROM(epromBaslaAdress + 1, currentTime.minutes);
  7145     1593  087B               	movf	_epromBaslaAdress,w
  7146     1594  3E01               	addlw	1
  7147     1595  00F0               	movwf	i1writeEEPROM@address
  7148     1596  087C               	movf	_epromBaslaAdress+1,w
  7149     1597  1803               	skipnc
  7150     1598  3E01               	addlw	1
  7151     1599  3E00               	addlw	0
  7152     159A  00F1               	movwf	i1writeEEPROM@address+1
  7153     159B  1683               	bsf	3,5	;RP0=1, select bank3
  7154     159C  1703               	bsf	3,6	;RP1=1, select bank3
  7155     159D  082F               	movf	((_currentTime+1)^(0+384)+4),w
  7156     159E  00F3               	movwf	i1writeEEPROM@data+1
  7157     159F  082E               	movf	(_currentTime^(0+384)+4),w
  7158     15A0  00F2               	movwf	i1writeEEPROM@data
  7159     15A1  160A  158A  2734  160A  118A  	fcall	i1_writeEEPROM
  7160     15A6                     i1l3080:
  7161                           
  7162                           ;main1.c: 113:         writeEEPROM(epromBaslaAdress + 2, currentTime.seconds);
  7163     15A6  087B               	movf	_epromBaslaAdress,w
  7164     15A7  3E02               	addlw	2
  7165     15A8  00F0               	movwf	i1writeEEPROM@address
  7166     15A9  087C               	movf	_epromBaslaAdress+1,w
  7167     15AA  1803               	skipnc
  7168     15AB  3E01               	addlw	1
  7169     15AC  3E00               	addlw	0
  7170     15AD  00F1               	movwf	i1writeEEPROM@address+1
  7171     15AE  1683               	bsf	3,5	;RP0=1, select bank3
  7172     15AF  1703               	bsf	3,6	;RP1=1, select bank3
  7173     15B0  0831               	movf	((_currentTime+1)^(0+384)+6),w
  7174     15B1  00F3               	movwf	i1writeEEPROM@data+1
  7175     15B2  0830               	movf	(_currentTime^(0+384)+6),w
  7176     15B3  00F2               	movwf	i1writeEEPROM@data
  7177     15B4  160A  158A  2734  160A  118A  	fcall	i1_writeEEPROM
  7178     15B9                     i1l3082:
  7179                           
  7180                           ;main1.c: 114:         writeEEPROM(epromBaslaAdress + 3, currentTime.carpan);
  7181     15B9  087B               	movf	_epromBaslaAdress,w
  7182     15BA  3E03               	addlw	3
  7183     15BB  00F0               	movwf	i1writeEEPROM@address
  7184     15BC  087C               	movf	_epromBaslaAdress+1,w
  7185     15BD  1803               	skipnc
  7186     15BE  3E01               	addlw	1
  7187     15BF  3E00               	addlw	0
  7188     15C0  00F1               	movwf	i1writeEEPROM@address+1
  7189     15C1  1683               	bsf	3,5	;RP0=1, select bank3
  7190     15C2  1703               	bsf	3,6	;RP1=1, select bank3
  7191     15C3  082B               	movf	(_currentTime+1)^(0+384),w
  7192     15C4  00F3               	movwf	i1writeEEPROM@data+1
  7193     15C5  082A               	movf	_currentTime^(0+384),w
  7194     15C6  00F2               	movwf	i1writeEEPROM@data
  7195     15C7  160A  158A  2734  160A  118A  	fcall	i1_writeEEPROM
  7196     15CC                     i1l3084:
  7197                           
  7198                           ;main1.c: 116:         if( (epromBaslaAdress+3)*250+ (epromBaslaAdress) ){
  7199     15CC  087C               	movf	_epromBaslaAdress+1,w
  7200     15CD  00F1               	movwf	i1___wmul@multiplier+1
  7201     15CE  087B               	movf	_epromBaslaAdress,w
  7202     15CF  00F0               	movwf	i1___wmul@multiplier
  7203     15D0  30FB               	movlw	251
  7204     15D1  00F2               	movwf	i1___wmul@multiplicand
  7205     15D2  3000               	movlw	0
  7206     15D3  00F3               	movwf	i1___wmul@multiplicand+1
  7207     15D4  160A  158A  27A2  160A  118A  	fcall	i1___wmul
  7208     15D9                     i1l207:
  7209     15D9  0878               	movf	??_timer_isr+2,w
  7210     15DA  008A               	movwf	10
  7211     15DB  0877               	movf	??_timer_isr+1,w
  7212     15DC  0084               	movwf	4
  7213     15DD  0E76               	swapf	??_timer_isr,w
  7214     15DE  0083               	movwf	3
  7215     15DF  0EFE               	swapf	btemp,f
  7216     15E0  0E7E               	swapf	btemp,w
  7217     15E1  0009               	retfie
  7218     15E2                     __end_of_timer_isr:
  7219                           
  7220                           	psect	intentry
  7221     0004                     __pintentry:	
  7222                           ;incstack = 0
  7223                           ; Regs used in _timer_isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7224                           
  7225     0004                     interrupt_function:
  7226     007E                     saved_w	set	btemp
  7227     0004  00FE               	movwf	btemp
  7228     0005  0E03               	swapf	3,w
  7229     0006  00F6               	movwf	??_timer_isr
  7230     0007  0804               	movf	4,w
  7231     0008  00F7               	movwf	??_timer_isr+1
  7232     0009  080A               	movf	10,w
  7233     000A  00F8               	movwf	??_timer_isr+2
  7234     000B  160A  118A  2D57   	ljmp	_timer_isr
  7235                           
  7236                           	psect	text27
  7237     1F34                     __ptext27:	
  7238 ;; *************** function i1_writeEEPROM *****************
  7239 ;; Defined at:
  7240 ;;		line 54 in file "main1.c"
  7241 ;; Parameters:    Size  Location     Type
  7242 ;;  address         2    0[COMMON] unsigned int 
  7243 ;;  data            2    2[COMMON] unsigned int 
  7244 ;; Auto vars:     Size  Location     Type
  7245 ;;		None
  7246 ;; Return value:  Size  Location     Type
  7247 ;;                  1    wreg      void 
  7248 ;; Registers used:
  7249 ;;		wreg
  7250 ;; Tracked objects:
  7251 ;;		On entry : 0/0
  7252 ;;		On exit  : 0/0
  7253 ;;		Unchanged: 0/0
  7254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7255 ;;      Params:         4       0       0       0       0
  7256 ;;      Locals:         0       0       0       0       0
  7257 ;;      Temps:          0       0       0       0       0
  7258 ;;      Totals:         4       0       0       0       0
  7259 ;;Total ram usage:        4 bytes
  7260 ;; Hardware stack levels used: 1
  7261 ;; This function calls:
  7262 ;;		Nothing
  7263 ;; This function is called by:
  7264 ;;		_timer_isr
  7265 ;; This function uses a non-reentrant model
  7266 ;;
  7267                           
  7268     1F34                     i1_writeEEPROM:	
  7269                           ;psect for function i1_writeEEPROM
  7270                           
  7271     1F34                     i1l3032:	
  7272                           ;incstack = 0
  7273                           ; Regs used in i1_writeEEPROM: [wreg]
  7274                           
  7275                           
  7276                           ;main1.c: 56:     EEADR = address;
  7277     1F34  0870               	movf	i1writeEEPROM@address,w
  7278     1F35  1283               	bcf	3,5	;RP0=0, select bank2
  7279     1F36  1703               	bsf	3,6	;RP1=1, select bank2
  7280     1F37  008D               	movwf	13	;volatile
  7281                           
  7282                           ;main1.c: 57:     EEDATA = data;
  7283     1F38  0872               	movf	i1writeEEPROM@data,w
  7284     1F39  008C               	movwf	12	;volatile
  7285     1F3A                     i1l3034:
  7286                           
  7287                           ;main1.c: 58:     WREN = 1;
  7288     1F3A  1683               	bsf	3,5	;RP0=1, select bank3
  7289     1F3B  1703               	bsf	3,6	;RP1=1, select bank3
  7290     1F3C  150C               	bsf	12,2	;volsfr
  7291     1F3D                     i1l3036:
  7292                           
  7293                           ;main1.c: 59:     GIE = 0;
  7294     1F3D  138B               	bcf	11,7	;volatile
  7295                           
  7296                           ;main1.c: 60:     EECON2 = 0x55;
  7297     1F3E  3055               	movlw	85
  7298     1F3F  008D               	movwf	13	;volsfr
  7299                           
  7300                           ;main1.c: 61:     EECON2 = 0xAA;
  7301     1F40  30AA               	movlw	170
  7302     1F41  008D               	movwf	13	;volsfr
  7303     1F42                     i1l3038:
  7304                           
  7305                           ;main1.c: 62:     WR = 1;
  7306     1F42  148C               	bsf	12,1	;volsfr
  7307     1F43                     i1l3040:
  7308                           
  7309                           ;main1.c: 63:     GIE = 1;
  7310     1F43  178B               	bsf	11,7	;volatile
  7311     1F44                     i1l3042:
  7312                           
  7313                           ;main1.c: 64:     WREN = 0;
  7314     1F44  110C               	bcf	12,2	;volsfr
  7315     1F45                     i1l186:	
  7316                           ;main1.c: 65:     while (WR == 1);
  7317                           
  7318     1F45  188C               	btfsc	12,1	;volsfr
  7319     1F46  2F48               	goto	u400_21
  7320     1F47  2F49               	goto	u400_20
  7321     1F48                     u400_21:
  7322     1F48  2F45               	goto	i1l186
  7323     1F49                     u400_20:
  7324     1F49                     i1l189:
  7325     1F49  0008               	return
  7326     1F4A                     __end_ofi1_writeEEPROM:
  7327                           
  7328                           	psect	text28
  7329     1FA2                     __ptext28:	
  7330 ;; *************** function i1___wmul *****************
  7331 ;; Defined at:
  7332 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  7333 ;; Parameters:    Size  Location     Type
  7334 ;;  multiplier      2    0[COMMON] unsigned int 
  7335 ;;  multiplicand    2    2[COMMON] unsigned int 
  7336 ;; Auto vars:     Size  Location     Type
  7337 ;;  product         2    4[COMMON] unsigned int 
  7338 ;; Return value:  Size  Location     Type
  7339 ;;                  2    0[COMMON] unsigned int 
  7340 ;; Registers used:
  7341 ;;		wreg, status,2, status,0
  7342 ;; Tracked objects:
  7343 ;;		On entry : 0/0
  7344 ;;		On exit  : 0/0
  7345 ;;		Unchanged: 0/0
  7346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7347 ;;      Params:         4       0       0       0       0
  7348 ;;      Locals:         2       0       0       0       0
  7349 ;;      Temps:          0       0       0       0       0
  7350 ;;      Totals:         6       0       0       0       0
  7351 ;;Total ram usage:        6 bytes
  7352 ;; Hardware stack levels used: 1
  7353 ;; This function calls:
  7354 ;;		Nothing
  7355 ;; This function is called by:
  7356 ;;		_timer_isr
  7357 ;; This function uses a non-reentrant model
  7358 ;;
  7359                           
  7360     1FA2                     i1___wmul:	
  7361                           ;psect for function i1___wmul
  7362                           
  7363     1FA2                     i1l3044:	
  7364                           ;incstack = 0
  7365                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  7366                           
  7367     1FA2  01F4               	clrf	i1___wmul@product
  7368     1FA3  01F5               	clrf	i1___wmul@product+1
  7369     1FA4                     i1l3046:
  7370     1FA4  1C70               	btfss	i1___wmul@multiplier,0
  7371     1FA5  2FA7               	goto	u401_21
  7372     1FA6  2FA8               	goto	u401_20
  7373     1FA7                     u401_21:
  7374     1FA7  2FAE               	goto	i1l419
  7375     1FA8                     u401_20:
  7376     1FA8                     i1l3048:
  7377     1FA8  0872               	movf	i1___wmul@multiplicand,w
  7378     1FA9  07F4               	addwf	i1___wmul@product,f
  7379     1FAA  1803               	skipnc
  7380     1FAB  0AF5               	incf	i1___wmul@product+1,f
  7381     1FAC  0873               	movf	i1___wmul@multiplicand+1,w
  7382     1FAD  07F5               	addwf	i1___wmul@product+1,f
  7383     1FAE                     i1l419:
  7384     1FAE  3001               	movlw	1
  7385     1FAF                     u402_25:
  7386     1FAF  1003               	clrc
  7387     1FB0  0DF2               	rlf	i1___wmul@multiplicand,f
  7388     1FB1  0DF3               	rlf	i1___wmul@multiplicand+1,f
  7389     1FB2  3EFF               	addlw	-1
  7390     1FB3  1D03               	skipz
  7391     1FB4  2FAF               	goto	u402_25
  7392     1FB5                     i1l3050:
  7393     1FB5  3001               	movlw	1
  7394     1FB6                     u403_25:
  7395     1FB6  1003               	clrc
  7396     1FB7  0CF1               	rrf	i1___wmul@multiplier+1,f
  7397     1FB8  0CF0               	rrf	i1___wmul@multiplier,f
  7398     1FB9  3EFF               	addlw	-1
  7399     1FBA  1D03               	skipz
  7400     1FBB  2FB6               	goto	u403_25
  7401     1FBC                     i1l3052:
  7402     1FBC  0870               	movf	i1___wmul@multiplier,w
  7403     1FBD  0471               	iorwf	i1___wmul@multiplier+1,w
  7404     1FBE  1D03               	btfss	3,2
  7405     1FBF  2FC1               	goto	u404_21
  7406     1FC0  2FC2               	goto	u404_20
  7407     1FC1                     u404_21:
  7408     1FC1  2FA4               	goto	i1l3046
  7409     1FC2                     u404_20:
  7410     1FC2                     i1l3054:
  7411     1FC2  0875               	movf	i1___wmul@product+1,w
  7412     1FC3  00F1               	movwf	?i1___wmul+1
  7413     1FC4  0874               	movf	i1___wmul@product,w
  7414     1FC5  00F0               	movwf	?i1___wmul
  7415     1FC6                     i1l421:
  7416     1FC6  0008               	return
  7417     1FC7                     __end_ofi1___wmul:
  7418                           
  7419                           	psect	text29
  7420     140F                     __ptext29:	
  7421 ;; *************** function _incrementTime *****************
  7422 ;; Defined at:
  7423 ;;		line 75 in file "main1.c"
  7424 ;; Parameters:    Size  Location     Type
  7425 ;;  time            1    wreg     PTR struct Time
  7426 ;;		 -> currentTime(8), 
  7427 ;; Auto vars:     Size  Location     Type
  7428 ;;  time            1    2[COMMON] PTR struct Time
  7429 ;;		 -> currentTime(8), 
  7430 ;; Return value:  Size  Location     Type
  7431 ;;                  1    wreg      void 
  7432 ;; Registers used:
  7433 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7434 ;; Tracked objects:
  7435 ;;		On entry : 0/0
  7436 ;;		On exit  : 0/0
  7437 ;;		Unchanged: 0/0
  7438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7439 ;;      Params:         0       0       0       0       0
  7440 ;;      Locals:         1       0       0       0       0
  7441 ;;      Temps:          2       0       0       0       0
  7442 ;;      Totals:         3       0       0       0       0
  7443 ;;Total ram usage:        3 bytes
  7444 ;; Hardware stack levels used: 1
  7445 ;; This function calls:
  7446 ;;		Nothing
  7447 ;; This function is called by:
  7448 ;;		_timer_isr
  7449 ;; This function uses a non-reentrant model
  7450 ;;
  7451                           
  7452     140F                     _incrementTime:	
  7453                           ;psect for function _incrementTime
  7454                           
  7455                           
  7456                           ;incstack = 0
  7457                           ; Regs used in _incrementTime: [wreg-fsr0h+status,2+status,0]
  7458                           ;incrementTime@time stored from wreg
  7459     140F  00F2               	movwf	incrementTime@time
  7460     1410                     i1l2444:
  7461                           
  7462                           ;main1.c: 76:     time->seconds++;
  7463     1410  0872               	movf	incrementTime@time,w
  7464     1411  3E06               	addlw	6
  7465     1412  0084               	movwf	4
  7466     1413  3001               	movlw	1
  7467     1414  1783               	bsf	3,7	;select IRP bank2
  7468     1415  0780               	addwf	0,f
  7469     1416  0A84               	incf	4,f
  7470     1417  1803               	skipnc
  7471     1418  0A80               	incf	0,f
  7472                           
  7473                           ;main1.c: 77:     if (time->seconds >= 60) {
  7474     1419  0872               	movf	incrementTime@time,w
  7475     141A  3E06               	addlw	6
  7476     141B  0084               	movwf	4
  7477     141C  0800               	movf	0,w
  7478     141D  00F0               	movwf	??_incrementTime
  7479     141E  0A84               	incf	4,f
  7480     141F  0800               	movf	0,w
  7481     1420  00F1               	movwf	??_incrementTime+1
  7482     1421  3000               	movlw	0
  7483     1422  0271               	subwf	??_incrementTime+1,w
  7484     1423  303C               	movlw	60
  7485     1424  1903               	skipnz
  7486     1425  0270               	subwf	??_incrementTime,w
  7487     1426  1C03               	skipc
  7488     1427  2C29               	goto	u269_21
  7489     1428  2C2A               	goto	u269_20
  7490     1429                     u269_21:
  7491     1429  2C75               	goto	i1l198
  7492     142A                     u269_20:
  7493     142A                     i1l2446:
  7494                           
  7495                           ;main1.c: 78:         time->seconds = 0;
  7496     142A  0872               	movf	incrementTime@time,w
  7497     142B  3E06               	addlw	6
  7498     142C  0084               	movwf	4
  7499     142D  0180               	clrf	0
  7500     142E  0A84               	incf	4,f
  7501     142F  0180               	clrf	0
  7502                           
  7503                           ;main1.c: 80:         time->minutes++;
  7504     1430  0872               	movf	incrementTime@time,w
  7505     1431  3E04               	addlw	4
  7506     1432  0084               	movwf	4
  7507     1433  3001               	movlw	1
  7508     1434  0780               	addwf	0,f
  7509     1435  0A84               	incf	4,f
  7510     1436  1803               	skipnc
  7511     1437  0A80               	incf	0,f
  7512                           
  7513                           ;main1.c: 81:         if (time->minutes >= 60) {
  7514     1438  0872               	movf	incrementTime@time,w
  7515     1439  3E04               	addlw	4
  7516     143A  0084               	movwf	4
  7517     143B  0800               	movf	0,w
  7518     143C  00F0               	movwf	??_incrementTime
  7519     143D  0A84               	incf	4,f
  7520     143E  0800               	movf	0,w
  7521     143F  00F1               	movwf	??_incrementTime+1
  7522     1440  3000               	movlw	0
  7523     1441  0271               	subwf	??_incrementTime+1,w
  7524     1442  303C               	movlw	60
  7525     1443  1903               	skipnz
  7526     1444  0270               	subwf	??_incrementTime,w
  7527     1445  1C03               	skipc
  7528     1446  2C48               	goto	u270_21
  7529     1447  2C49               	goto	u270_20
  7530     1448                     u270_21:
  7531     1448  2C75               	goto	i1l198
  7532     1449                     u270_20:
  7533     1449                     i1l2448:
  7534                           
  7535                           ;main1.c: 82:             time->minutes = 0;
  7536     1449  0872               	movf	incrementTime@time,w
  7537     144A  3E04               	addlw	4
  7538     144B  0084               	movwf	4
  7539     144C  0180               	clrf	0
  7540     144D  0A84               	incf	4,f
  7541     144E  0180               	clrf	0
  7542                           
  7543                           ;main1.c: 84:             time->hours++;
  7544     144F  0872               	movf	incrementTime@time,w
  7545     1450  3E02               	addlw	2
  7546     1451  0084               	movwf	4
  7547     1452  3001               	movlw	1
  7548     1453  0780               	addwf	0,f
  7549     1454  0A84               	incf	4,f
  7550     1455  1803               	skipnc
  7551     1456  0A80               	incf	0,f
  7552                           
  7553                           ;main1.c: 85:             if (time-> hours >= 250){
  7554     1457  0872               	movf	incrementTime@time,w
  7555     1458  3E02               	addlw	2
  7556     1459  0084               	movwf	4
  7557     145A  0800               	movf	0,w
  7558     145B  00F0               	movwf	??_incrementTime
  7559     145C  0A84               	incf	4,f
  7560     145D  0800               	movf	0,w
  7561     145E  00F1               	movwf	??_incrementTime+1
  7562     145F  3000               	movlw	0
  7563     1460  0271               	subwf	??_incrementTime+1,w
  7564     1461  30FA               	movlw	250
  7565     1462  1903               	skipnz
  7566     1463  0270               	subwf	??_incrementTime,w
  7567     1464  1C03               	skipc
  7568     1465  2C67               	goto	u271_21
  7569     1466  2C68               	goto	u271_20
  7570     1467                     u271_21:
  7571     1467  2C75               	goto	i1l198
  7572     1468                     u271_20:
  7573     1468                     i1l2450:
  7574                           
  7575                           ;main1.c: 86:                 time-> hours = 0;
  7576     1468  0872               	movf	incrementTime@time,w
  7577     1469  3E02               	addlw	2
  7578     146A  0084               	movwf	4
  7579     146B  0180               	clrf	0
  7580     146C  0A84               	incf	4,f
  7581     146D  0180               	clrf	0
  7582                           
  7583                           ;main1.c: 87:                 time->carpan++;
  7584     146E  0872               	movf	incrementTime@time,w
  7585     146F  0084               	movwf	4
  7586     1470  3001               	movlw	1
  7587     1471  0780               	addwf	0,f
  7588     1472  0A84               	incf	4,f
  7589     1473  1803               	skipnc
  7590     1474  0A80               	incf	0,f
  7591     1475                     i1l198:
  7592     1475  0008               	return
  7593     1476                     __end_of_incrementTime:
  7594     007E                     btemp	set	126	;btemp
  7595     007E                     wtemp0	set	126
  7596                           
  7597                           	psect	config
  7598                           
  7599                           ;Config register CONFIG @ 0x2007
  7600                           ;	Oscillator Selection bits
  7601                           ;	FOSC = XT, XT oscillator
  7602                           ;	Watchdog Timer Enable bit
  7603                           ;	WDTE = OFF, WDT disabled
  7604                           ;	Power-up Timer Enable bit
  7605                           ;	PWRTE = OFF, PWRT disabled
  7606                           ;	Brown-out Reset Enable bit
  7607                           ;	BOREN = ON, BOR enabled
  7608                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  7609                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  7610                           ;	Data EEPROM Memory Code Protection bit
  7611                           ;	CPD = OFF, Data EEPROM code protection off
  7612                           ;	Flash Program Memory Write Enable bits
  7613                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  7614                           ;	In-Circuit Debugger Mode bit
  7615                           ;	DEBUG = 0x1, unprogrammed default
  7616                           ;	Flash Program Memory Code Protection bit
  7617                           ;	CP = OFF, Code protection off
  7618     2007                     	org	8199
  7619     2007  3F79               	dw	16249
  7620                           
  7621                           	psect	maintext_split_1
  7622     0031                     u4090:
  7623     0031                     l3218:
  7624                           
  7625                           ;main1.c: 275: if (ilkAcilis) {
  7626     0031  1683               	bsf	3,5	;RP0=1, select bank3
  7627     0032  1703               	bsf	3,6	;RP1=1, select bank3
  7628     0033  0814               	movf	main@ilkAcilis^(0+384),w
  7629     0034  0415               	iorwf	(main@ilkAcilis+1)^(0+384),w
  7630     0035  1903               	btfsc	3,2
  7631     0036  2838               	goto	u4101
  7632     0037  2839               	goto	u4100
  7633     0038                     u4101:
  7634     0038  2889               	goto	l216
  7635     0039                     u4100:
  7636     0039                     l3220:
  7637                           
  7638                           ;main1.c: 278:         if ( RE2 == 0 && RE0 == 0 && RC0 == 0 && RE1 == 0) {
  7639     0039  1283               	bcf	3,5	;RP0=0, select bank0
  7640     003A  1303               	bcf	3,6	;RP1=0, select bank0
  7641     003B  1909               	btfsc	9,2	;volatile
  7642     003C  283E               	goto	u4111
  7643     003D  283F               	goto	u4110
  7644     003E                     u4111:
  7645     003E  2850               	goto	l3230
  7646     003F                     u4110:
  7647     003F                     l3222:
  7648     003F  1809               	btfsc	9,0	;volatile
  7649     0040  2842               	goto	u4121
  7650     0041  2843               	goto	u4120
  7651     0042                     u4121:
  7652     0042  2850               	goto	l3230
  7653     0043                     u4120:
  7654     0043                     l3224:
  7655     0043  1807               	btfsc	7,0	;volatile
  7656     0044  2846               	goto	u4131
  7657     0045  2847               	goto	u4130
  7658     0046                     u4131:
  7659     0046  2850               	goto	l3230
  7660     0047                     u4130:
  7661     0047                     l3226:
  7662     0047  1889               	btfsc	9,1	;volatile
  7663     0048  284A               	goto	u4141
  7664     0049  284B               	goto	u4140
  7665     004A                     u4141:
  7666     004A  2850               	goto	l3230
  7667     004B                     u4140:
  7668     004B                     l3228:
  7669                           
  7670                           ;main1.c: 279:             ilkAcilis = 0;
  7671     004B  1683               	bsf	3,5	;RP0=1, select bank3
  7672     004C  1703               	bsf	3,6	;RP1=1, select bank3
  7673     004D  0194               	clrf	main@ilkAcilis^(0+384)
  7674     004E  0195               	clrf	(main@ilkAcilis+1)^(0+384)
  7675                           
  7676                           ;main1.c: 280:         } else {
  7677     004F  2889               	goto	l216
  7678     0050                     l3230:
  7679                           
  7680                           ;main1.c: 282:              Lcd_Set_Cursor(1,1);
  7681     0050  01A4               	clrf	Lcd_Set_Cursor@b
  7682     0051  0AA4               	incf	Lcd_Set_Cursor@b,f
  7683     0052  3001               	movlw	1
  7684     0053  160A  118A  22B3  120A  118A  	fcall	_Lcd_Set_Cursor
  7685     0058                     l3232:
  7686                           
  7687                           ;main1.c: 283:     Lcd_Write_String("STOP DURUMUNA GETIR");
  7688     0058  3096               	movlw	low (STR_6| (0+32768))
  7689     0059  1283               	bcf	3,5	;RP0=0, select bank0
  7690     005A  1303               	bcf	3,6	;RP1=0, select bank0
  7691     005B  00A5               	movwf	Lcd_Write_String@a
  7692     005C  3090               	movlw	high (STR_6| (0+32768))
  7693     005D  00A6               	movwf	Lcd_Write_String@a+1
  7694     005E  160A  118A  226D  120A  118A  	fcall	_Lcd_Write_String
  7695     0063                     l3234:
  7696                           
  7697                           ;main1.c: 284:     Lcd_Set_Cursor(2,1);
  7698     0063  1283               	bcf	3,5	;RP0=0, select bank0
  7699     0064  1303               	bcf	3,6	;RP1=0, select bank0
  7700     0065  01A4               	clrf	Lcd_Set_Cursor@b
  7701     0066  0AA4               	incf	Lcd_Set_Cursor@b,f
  7702     0067  3002               	movlw	2
  7703     0068  160A  118A  22B3  120A  118A  	fcall	_Lcd_Set_Cursor
  7704                           
  7705                           ;main1.c: 285:     Lcd_Write_String("PUT IT IN STOP STATE");
  7706     006D  3081               	movlw	low (STR_7| (0+32768))
  7707     006E  1283               	bcf	3,5	;RP0=0, select bank0
  7708     006F  1303               	bcf	3,6	;RP1=0, select bank0
  7709     0070  00A5               	movwf	Lcd_Write_String@a
  7710     0071  3090               	movlw	high (STR_7| (0+32768))
  7711     0072  00A6               	movwf	Lcd_Write_String@a+1
  7712     0073  160A  118A  226D  120A  118A  	fcall	_Lcd_Write_String
  7713     0078                     l3236:
  7714                           
  7715                           ;main1.c: 286:     _delay((unsigned long)((500)*(4000000/4000.0)));
  7716     0078  3003               	movlw	3
  7717     0079  1283               	bcf	3,5	;RP0=0, select bank0
  7718     007A  1303               	bcf	3,6	;RP1=0, select bank0
  7719     007B  00D6               	movwf	??_main+2
  7720     007C  308A               	movlw	138
  7721     007D  00D5               	movwf	??_main+1
  7722     007E  3055               	movlw	85
  7723     007F  00D4               	movwf	??_main
  7724     0080                     u4597:
  7725     0080  0BD4               	decfsz	??_main,f
  7726     0081  2880               	goto	u4597
  7727     0082  0BD5               	decfsz	??_main+1,f
  7728     0083  2880               	goto	u4597
  7729     0084  0BD6               	decfsz	??_main+2,f
  7730     0085  2880               	goto	u4597
  7731     0086  120A  158A  2FFD   	goto	l219
  7732     0089                     l216:	
  7733                           ;main1.c: 289:     }
  7734                           
  7735                           
  7736                           ;main1.c: 291: if( !RC3 && !RD0){
  7737     0089  1283               	bcf	3,5	;RP0=0, select bank0
  7738     008A  1303               	bcf	3,6	;RP1=0, select bank0
  7739     008B  1987               	btfsc	7,3	;volatile
  7740     008C  288E               	goto	u4151
  7741     008D  2891               	goto	u4150
  7742     008E                     u4151:
  7743     008E  120A  158A  2F68   	goto	l220
  7744     0091                     u4150:
  7745     0091                     l3240:
  7746     0091  1808               	btfsc	8,0	;volatile
  7747     0092  2894               	goto	u4161
  7748     0093  2895               	goto	u4160
  7749     0094                     u4161:
  7750     0094  288E               	goto	u4151
  7751     0095                     u4160:
  7752     0095                     l3242:
  7753                           
  7754                           ;main1.c: 299:     int dakika = readEEPROM(epromBaslaAdress+1);
  7755     0095  087B               	movf	_epromBaslaAdress,w
  7756     0096  3E01               	addlw	1
  7757     0097  00A6               	movwf	readEEPROM@address
  7758     0098  087C               	movf	_epromBaslaAdress+1,w
  7759     0099  1803               	skipnc
  7760     009A  3E01               	addlw	1
  7761     009B  3E00               	addlw	0
  7762     009C  00A7               	movwf	readEEPROM@address+1
  7763     009D  120A  118A  27EB  120A  118A  	fcall	_readEEPROM
  7764     00A2  1283               	bcf	3,5	;RP0=0, select bank0
  7765     00A3  1303               	bcf	3,6	;RP1=0, select bank0
  7766     00A4  0827               	movf	?_readEEPROM+1,w
  7767     00A5  1683               	bsf	3,5	;RP0=1, select bank1
  7768     00A6  1303               	bcf	3,6	;RP1=0, select bank1
  7769     00A7  00E7               	movwf	(main@dakika+1)^(0+128)
  7770     00A8  1283               	bcf	3,5	;RP0=0, select bank0
  7771     00A9  1303               	bcf	3,6	;RP1=0, select bank0
  7772     00AA  0826               	movf	?_readEEPROM,w
  7773     00AB  1683               	bsf	3,5	;RP0=1, select bank1
  7774     00AC  1303               	bcf	3,6	;RP1=0, select bank1
  7775     00AD  00E6               	movwf	main@dakika^(0+128)
  7776                           
  7777                           ;main1.c: 300:     int realSaat = readEEPROM((epromBaslaAdress+3)*250+readEEPROM(epromBa
      +                          slaAdress));
  7778     00AE  087C               	movf	_epromBaslaAdress+1,w
  7779     00AF  1283               	bcf	3,5	;RP0=0, select bank0
  7780     00B0  1303               	bcf	3,6	;RP1=0, select bank0
  7781     00B1  00A1               	movwf	___wmul@multiplier+1
  7782     00B2  087B               	movf	_epromBaslaAdress,w
  7783     00B3  00A0               	movwf	___wmul@multiplier
  7784     00B4  30FA               	movlw	250
  7785     00B5  00A2               	movwf	___wmul@multiplicand
  7786     00B6  3000               	movlw	0
  7787     00B7  00A3               	movwf	___wmul@multiplicand+1
  7788     00B8  160A  118A  217E  120A  118A  	fcall	___wmul
  7789     00BD  1283               	bcf	3,5	;RP0=0, select bank0
  7790     00BE  1303               	bcf	3,6	;RP1=0, select bank0
  7791     00BF  0820               	movf	?___wmul,w
  7792     00C0  00D4               	movwf	??_main
  7793     00C1  0821               	movf	?___wmul+1,w
  7794     00C2  00D5               	movwf	??_main+1
  7795     00C3  087C               	movf	_epromBaslaAdress+1,w
  7796     00C4  00A7               	movwf	readEEPROM@address+1
  7797     00C5  087B               	movf	_epromBaslaAdress,w
  7798     00C6  00A6               	movwf	readEEPROM@address
  7799     00C7  120A  118A  27EB  120A  118A  	fcall	_readEEPROM
  7800     00CC  1283               	bcf	3,5	;RP0=0, select bank0
  7801     00CD  1303               	bcf	3,6	;RP1=0, select bank0
  7802     00CE  0826               	movf	?_readEEPROM,w
  7803     00CF  0754               	addwf	??_main,w
  7804     00D0  00D6               	movwf	??_main+2
  7805     00D1  0827               	movf	?_readEEPROM+1,w
  7806     00D2  1803               	skipnc
  7807     00D3  0A27               	incf	?_readEEPROM+1,w
  7808     00D4  0755               	addwf	??_main+1,w
  7809     00D5  00D7               	movwf	??_main+3
  7810     00D6  0856               	movf	??_main+2,w
  7811     00D7  3EEE               	addlw	238
  7812     00D8  1683               	bsf	3,5	;RP0=1, select bank3
  7813     00D9  1703               	bsf	3,6	;RP1=1, select bank3
  7814     00DA  0092               	movwf	_main$1031^(0+384)
  7815     00DB  1283               	bcf	3,5	;RP0=0, select bank0
  7816     00DC  1303               	bcf	3,6	;RP1=0, select bank0
  7817     00DD  0857               	movf	??_main+3,w
  7818     00DE  1803               	skipnc
  7819     00DF  3E01               	addlw	1
  7820     00E0  3E02               	addlw	2
  7821     00E1  1683               	bsf	3,5	;RP0=1, select bank3
  7822     00E2  1703               	bsf	3,6	;RP1=1, select bank3
  7823     00E3  0093               	movwf	(_main$1031+1)^(0+384)
  7824     00E4                     l3244:
  7825                           
  7826                           ;main1.c: 300:     int realSaat = readEEPROM((epromBaslaAdress+3)*250+readEEPROM(epromBa
      +                          slaAdress));
  7827     00E4  0813               	movf	(_main$1031+1)^(0+384),w
  7828     00E5  1283               	bcf	3,5	;RP0=0, select bank0
  7829     00E6  1303               	bcf	3,6	;RP1=0, select bank0
  7830     00E7  00A7               	movwf	readEEPROM@address+1
  7831     00E8  1683               	bsf	3,5	;RP0=1, select bank3
  7832     00E9  1703               	bsf	3,6	;RP1=1, select bank3
  7833     00EA  0812               	movf	_main$1031^(0+384),w
  7834     00EB  1283               	bcf	3,5	;RP0=0, select bank0
  7835     00EC  1303               	bcf	3,6	;RP1=0, select bank0
  7836     00ED  00A6               	movwf	readEEPROM@address
  7837     00EE  120A  118A  27EB  120A  118A  	fcall	_readEEPROM
  7838     00F3  1283               	bcf	3,5	;RP0=0, select bank0
  7839     00F4  1303               	bcf	3,6	;RP1=0, select bank0
  7840     00F5  0827               	movf	?_readEEPROM+1,w
  7841     00F6  1683               	bsf	3,5	;RP0=1, select bank3
  7842     00F7  1703               	bsf	3,6	;RP1=1, select bank3
  7843     00F8  00A9               	movwf	(main@realSaat+1)^(0+384)
  7844     00F9  1283               	bcf	3,5	;RP0=0, select bank0
  7845     00FA  1303               	bcf	3,6	;RP1=0, select bank0
  7846     00FB  0826               	movf	?_readEEPROM,w
  7847     00FC  1683               	bsf	3,5	;RP0=1, select bank3
  7848     00FD  1703               	bsf	3,6	;RP1=1, select bank3
  7849     00FE  00A8               	movwf	main@realSaat^(0+384)
  7850     00FF                     l3246:
  7851                           
  7852                           ;main1.c: 305:         sprintf(lcdText, "%5uh %02um", realSaat, dakika);
  7853     00FF  3014               	movlw	low (STR_8| (0+32768))
  7854     0100  1283               	bcf	3,5	;RP0=0, select bank0
  7855     0101  1303               	bcf	3,6	;RP1=0, select bank0
  7856     0102  00AC               	movwf	sprintf@f
  7857     0103  3091               	movlw	high (STR_8| (0+32768))
  7858     0104  00AD               	movwf	sprintf@f+1
  7859     0105  1683               	bsf	3,5	;RP0=1, select bank3
  7860     0106  1703               	bsf	3,6	;RP1=1, select bank3
  7861     0107  0829               	movf	(main@realSaat+1)^(0+384),w
  7862     0108  1283               	bcf	3,5	;RP0=0, select bank0
  7863     0109  1303               	bcf	3,6	;RP1=0, select bank0
  7864     010A  00AF               	movwf	?_sprintf+3
  7865     010B  1683               	bsf	3,5	;RP0=1, select bank3
  7866     010C  1703               	bsf	3,6	;RP1=1, select bank3
  7867     010D  0828               	movf	main@realSaat^(0+384),w
  7868     010E  1283               	bcf	3,5	;RP0=0, select bank0
  7869     010F  1303               	bcf	3,6	;RP1=0, select bank0
  7870     0110  00AE               	movwf	?_sprintf+2
  7871     0111  1683               	bsf	3,5	;RP0=1, select bank1
  7872     0112  1303               	bcf	3,6	;RP1=0, select bank1
  7873     0113  0867               	movf	(main@dakika+1)^(0+128),w
  7874     0114  1283               	bcf	3,5	;RP0=0, select bank0
  7875     0115  1303               	bcf	3,6	;RP1=0, select bank0
  7876     0116  00B1               	movwf	?_sprintf+5
  7877     0117  1683               	bsf	3,5	;RP0=1, select bank1
  7878     0118  1303               	bcf	3,6	;RP1=0, select bank1
  7879     0119  0866               	movf	main@dakika^(0+128),w
  7880     011A  1283               	bcf	3,5	;RP0=0, select bank0
  7881     011B  1303               	bcf	3,6	;RP1=0, select bank0
  7882     011C  00B0               	movwf	?_sprintf+4
  7883     011D  30B4               	movlw	(low (main@lcdText| 0))& (0+255)
  7884     011E  120A  158A  2201  120A  118A  	fcall	_sprintf
  7885     0123                     l3248:
  7886                           
  7887                           ;main1.c: 308:      Lcd_Set_Cursor(1, 10);
  7888     0123  300A               	movlw	10
  7889     0124  1283               	bcf	3,5	;RP0=0, select bank0
  7890     0125  1303               	bcf	3,6	;RP1=0, select bank0
  7891     0126  00A4               	movwf	Lcd_Set_Cursor@b
  7892     0127  3001               	movlw	1
  7893     0128  160A  118A  22B3  120A  118A  	fcall	_Lcd_Set_Cursor
  7894     012D                     l3250:
  7895                           
  7896                           ;main1.c: 309:      Lcd_Write_String("  ");
  7897     012D  30D9               	movlw	low ((STR_18+12)| (0+32768))
  7898     012E  1283               	bcf	3,5	;RP0=0, select bank0
  7899     012F  1303               	bcf	3,6	;RP1=0, select bank0
  7900     0130  00A5               	movwf	Lcd_Write_String@a
  7901     0131  3090               	movlw	high ((STR_18+12)| (0+32768))
  7902     0132  00A6               	movwf	Lcd_Write_String@a+1
  7903     0133  160A  118A  226D  120A  118A  	fcall	_Lcd_Write_String
  7904     0138                     l3252:
  7905                           
  7906                           ;main1.c: 310:      Lcd_Set_Cursor(1, 11);
  7907     0138  300B               	movlw	11
  7908     0139  1283               	bcf	3,5	;RP0=0, select bank0
  7909     013A  1303               	bcf	3,6	;RP1=0, select bank0
  7910     013B  00A4               	movwf	Lcd_Set_Cursor@b
  7911     013C  3001               	movlw	1
  7912     013D  160A  118A  22B3  120A  118A  	fcall	_Lcd_Set_Cursor
  7913     0142                     l3254:
  7914                           
  7915                           ;main1.c: 311:      Lcd_Write_String(lcdText);
  7916     0142  30B4               	movlw	(low (main@lcdText| 0))& (0+255)
  7917     0143  1283               	bcf	3,5	;RP0=0, select bank0
  7918     0144  1303               	bcf	3,6	;RP1=0, select bank0
  7919     0145  00A5               	movwf	Lcd_Write_String@a
  7920     0146  3000               	movlw	0
  7921     0147  00A6               	movwf	Lcd_Write_String@a+1
  7922     0148  160A  118A  226D  120A  118A  	fcall	_Lcd_Write_String
  7923     014D                     l3256:
  7924                           
  7925                           ;main1.c: 315:     if ( ( realSaat % 500 == 0 && realSaat != 0
  7926     014D  30F4               	movlw	244
  7927     014E  1283               	bcf	3,5	;RP0=0, select bank0
  7928     014F  1303               	bcf	3,6	;RP1=0, select bank0
  7929     0150  00AA               	movwf	___awmod@divisor
  7930     0151  3001               	movlw	1
  7931     0152  00AB               	movwf	___awmod@divisor+1
  7932     0153  1683               	bsf	3,5	;RP0=1, select bank3
  7933     0154  1703               	bsf	3,6	;RP1=1, select bank3
  7934     0155  0829               	movf	(main@realSaat+1)^(0+384),w
  7935     0156  1283               	bcf	3,5	;RP0=0, select bank0
  7936     0157  1303               	bcf	3,6	;RP1=0, select bank0
  7937     0158  00AD               	movwf	___awmod@dividend+1
  7938     0159  1683               	bsf	3,5	;RP0=1, select bank3
  7939     015A  1703               	bsf	3,6	;RP1=1, select bank3
  7940     015B  0828               	movf	main@realSaat^(0+384),w
  7941     015C  1283               	bcf	3,5	;RP0=0, select bank0
  7942     015D  1303               	bcf	3,6	;RP1=0, select bank0
  7943     015E  00AC               	movwf	___awmod@dividend
  7944     015F  160A  118A  2351  120A  118A  	fcall	___awmod
  7945     0164  1283               	bcf	3,5	;RP0=0, select bank0
  7946     0165  1303               	bcf	3,6	;RP1=0, select bank0
  7947     0166  082A               	movf	?___awmod,w
  7948     0167  042B               	iorwf	?___awmod+1,w
  7949     0168  1D03               	btfss	3,2
  7950     0169  296B               	goto	u4171
  7951     016A  296C               	goto	u4170
  7952     016B                     u4171:
  7953     016B  2974               	goto	l3260
  7954     016C                     u4170:
  7955     016C                     l3258:
  7956     016C  1683               	bsf	3,5	;RP0=1, select bank3
  7957     016D  1703               	bsf	3,6	;RP1=1, select bank3
  7958     016E  0828               	movf	main@realSaat^(0+384),w
  7959     016F  0429               	iorwf	(main@realSaat+1)^(0+384),w
  7960     0170  1D03               	btfss	3,2
  7961     0171  2973               	goto	u4181
  7962     0172  2974               	goto	u4180
  7963     0173                     u4181:
  7964     0173  29C4               	goto	l3268
  7965     0174                     u4180:
  7966     0174                     l3260:
  7967     0174  30F4               	movlw	244
  7968     0175  1283               	bcf	3,5	;RP0=0, select bank0
  7969     0176  1303               	bcf	3,6	;RP1=0, select bank0
  7970     0177  00AA               	movwf	___awmod@divisor
  7971     0178  3001               	movlw	1
  7972     0179  00AB               	movwf	___awmod@divisor+1
  7973     017A  1683               	bsf	3,5	;RP0=1, select bank3
  7974     017B  1703               	bsf	3,6	;RP1=1, select bank3
  7975     017C  0829               	movf	(main@realSaat+1)^(0+384),w
  7976     017D  1283               	bcf	3,5	;RP0=0, select bank0
  7977     017E  1303               	bcf	3,6	;RP1=0, select bank0
  7978     017F  00AD               	movwf	___awmod@dividend+1
  7979     0180  1683               	bsf	3,5	;RP0=1, select bank3
  7980     0181  1703               	bsf	3,6	;RP1=1, select bank3
  7981     0182  0828               	movf	main@realSaat^(0+384),w
  7982     0183  1283               	bcf	3,5	;RP0=0, select bank0
  7983     0184  1303               	bcf	3,6	;RP1=0, select bank0
  7984     0185  00AC               	movwf	___awmod@dividend
  7985     0186  160A  118A  2351  120A  118A  	fcall	___awmod
  7986     018B  1283               	bcf	3,5	;RP0=0, select bank0
  7987     018C  1303               	bcf	3,6	;RP1=0, select bank0
  7988     018D  032A               	decf	?___awmod,w
  7989     018E  042B               	iorwf	?___awmod+1,w
  7990     018F  1D03               	btfss	3,2
  7991     0190  2992               	goto	u4191
  7992     0191  2993               	goto	u4190
  7993     0192                     u4191:
  7994     0192  299B               	goto	l3264
  7995     0193                     u4190:
  7996     0193                     l3262:
  7997     0193  1683               	bsf	3,5	;RP0=1, select bank3
  7998     0194  1703               	bsf	3,6	;RP1=1, select bank3
  7999     0195  0328               	decf	main@realSaat^(0+384),w
  8000     0196  0429               	iorwf	(main@realSaat+1)^(0+384),w
  8001     0197  1D03               	btfss	3,2
  8002     0198  299A               	goto	u4201
  8003     0199  299B               	goto	u4200
  8004     019A                     u4201:
  8005     019A  29C4               	goto	l3268
  8006     019B                     u4200:
  8007     019B                     l3264:
  8008     019B  30F4               	movlw	244
  8009     019C  1283               	bcf	3,5	;RP0=0, select bank0
  8010     019D  1303               	bcf	3,6	;RP1=0, select bank0
  8011     019E  00AA               	movwf	___awmod@divisor
  8012     019F  3001               	movlw	1
  8013     01A0  00AB               	movwf	___awmod@divisor+1
  8014     01A1  1683               	bsf	3,5	;RP0=1, select bank3
  8015     01A2  1703               	bsf	3,6	;RP1=1, select bank3
  8016     01A3  0829               	movf	(main@realSaat+1)^(0+384),w
  8017     01A4  1283               	bcf	3,5	;RP0=0, select bank0
  8018     01A5  1303               	bcf	3,6	;RP1=0, select bank0
  8019     01A6  00AD               	movwf	___awmod@dividend+1
  8020     01A7  1683               	bsf	3,5	;RP0=1, select bank3
  8021     01A8  1703               	bsf	3,6	;RP1=1, select bank3
  8022     01A9  0828               	movf	main@realSaat^(0+384),w
  8023     01AA  1283               	bcf	3,5	;RP0=0, select bank0
  8024     01AB  1303               	bcf	3,6	;RP1=0, select bank0
  8025     01AC  00AC               	movwf	___awmod@dividend
  8026     01AD  160A  118A  2351  120A  118A  	fcall	___awmod
  8027     01B2  3002               	movlw	2
  8028     01B3  1283               	bcf	3,5	;RP0=0, select bank0
  8029     01B4  1303               	bcf	3,6	;RP1=0, select bank0
  8030     01B5  062A               	xorwf	?___awmod,w
  8031     01B6  042B               	iorwf	?___awmod+1,w
  8032     01B7  1D03               	btfss	3,2
  8033     01B8  29BA               	goto	u4211
  8034     01B9  29BB               	goto	u4210
  8035     01BA                     u4211:
  8036     01BA  29CF               	goto	l3272
  8037     01BB                     u4210:
  8038     01BB                     l3266:
  8039     01BB  3002               	movlw	2
  8040     01BC  1683               	bsf	3,5	;RP0=1, select bank3
  8041     01BD  1703               	bsf	3,6	;RP1=1, select bank3
  8042     01BE  0628               	xorwf	main@realSaat^(0+384),w
  8043     01BF  0429               	iorwf	(main@realSaat+1)^(0+384),w
  8044     01C0  1903               	btfsc	3,2
  8045     01C1  29C3               	goto	u4221
  8046     01C2  29C4               	goto	u4220
  8047     01C3                     u4221:
  8048     01C3  29CF               	goto	l3272
  8049     01C4                     u4220:
  8050     01C4                     l3268:
  8051     01C4  082E               	movf	(_currentTime^(0+384)+4),w
  8052     01C5  042F               	iorwf	((_currentTime+1)^(0+384)+4),w
  8053     01C6  1D03               	btfss	3,2
  8054     01C7  29C9               	goto	u4231
  8055     01C8  29CA               	goto	u4230
  8056     01C9                     u4231:
  8057     01C9  29CF               	goto	l3272
  8058     01CA                     u4230:
  8059     01CA                     l3270:
  8060                           
  8061                           ;main1.c: 318:      ) && currentTime.minutes == 0 ) {;main1.c: 319:     yagBakim();
  8062     01CA  160A  118A  22FF  120A  118A  	fcall	_yagBakim
  8063     01CF                     l3272:
  8064                           
  8065                           ;main1.c: 326:     ADCON0bits.CHS = 0b0010;
  8066     01CF  1283               	bcf	3,5	;RP0=0, select bank0
  8067     01D0  1303               	bcf	3,6	;RP1=0, select bank0
  8068     01D1  081F               	movf	31,w	;volatile
  8069     01D2  39C7               	andlw	-57
  8070     01D3  3810               	iorlw	16
  8071     01D4  009F               	movwf	31	;volatile
  8072     01D5                     l3274:
  8073                           
  8074                           ;main1.c: 327:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  8075     01D5  300F               	movlw	15
  8076     01D6  1283               	bcf	3,5	;RP0=0, select bank0
  8077     01D7  1303               	bcf	3,6	;RP1=0, select bank0
  8078     01D8  00D4               	movwf	??_main
  8079     01D9                     u4607:
  8080     01D9  0BD4               	decfsz	??_main,f
  8081     01DA  29D9               	goto	u4607
  8082     01DB  29DC               	nop2
  8083     01DC                     l3276:
  8084                           
  8085                           ;main1.c: 328:     ADCON0bits.GO = 1;
  8086     01DC  1283               	bcf	3,5	;RP0=0, select bank0
  8087     01DD  1303               	bcf	3,6	;RP1=0, select bank0
  8088     01DE  151F               	bsf	31,2	;volatile
  8089     01DF                     l228:	
  8090                           ;main1.c: 329:     while (ADCON0bits.GO);
  8091                           
  8092     01DF  191F               	btfsc	31,2	;volatile
  8093     01E0  29E2               	goto	u4241
  8094     01E1  29E3               	goto	u4240
  8095     01E2                     u4241:
  8096     01E2  29DF               	goto	l228
  8097     01E3                     u4240:
  8098     01E3                     l3278:
  8099                           
  8100                           ;main1.c: 330:     adcValue3 = (ADRESH << 8) | ADRESL;
  8101     01E3  1683               	bsf	3,5	;RP0=1, select bank1
  8102     01E4  1303               	bcf	3,6	;RP1=0, select bank1
  8103     01E5  081E               	movf	30,w	;volatile
  8104     01E6  1283               	bcf	3,5	;RP0=0, select bank0
  8105     01E7  1303               	bcf	3,6	;RP1=0, select bank0
  8106     01E8  00D4               	movwf	??_main
  8107     01E9  01D5               	clrf	??_main+1
  8108     01EA  081E               	movf	30,w	;volatile
  8109     01EB  00D6               	movwf	??_main+2
  8110     01EC  01D7               	clrf	??_main+3
  8111     01ED  0856               	movf	??_main+2,w
  8112     01EE  00D7               	movwf	??_main+3
  8113     01EF  01D6               	clrf	??_main+2
  8114     01F0  0854               	movf	??_main,w
  8115     01F1  0456               	iorwf	??_main+2,w
  8116     01F2  00A0               	movwf	___xxtofl@val
  8117     01F3  0855               	movf	??_main+1,w
  8118     01F4  0457               	iorwf	??_main+3,w
  8119     01F5  00A1               	movwf	___xxtofl@val+1
  8120     01F6  01A2               	clrf	___xxtofl@val+2
  8121     01F7  1BA1               	btfsc	___xxtofl@val+1,7
  8122     01F8  03A2               	decf	___xxtofl@val+2,f
  8123     01F9  0822               	movf	___xxtofl@val+2,w
  8124     01FA  00A3               	movwf	___xxtofl@val+3
  8125     01FB  3001               	movlw	1
  8126     01FC  160A  118A  25E2  120A  118A  	fcall	___xxtofl
  8127     0201  1283               	bcf	3,5	;RP0=0, select bank0
  8128     0202  1303               	bcf	3,6	;RP1=0, select bank0
  8129     0203  0823               	movf	?___xxtofl+3,w
  8130     0204  1683               	bsf	3,5	;RP0=1, select bank1
  8131     0205  1303               	bcf	3,6	;RP1=0, select bank1
  8132     0206  00D5               	movwf	(main@adcValue3+3)^(0+128)
  8133     0207  1283               	bcf	3,5	;RP0=0, select bank0
  8134     0208  1303               	bcf	3,6	;RP1=0, select bank0
  8135     0209  0822               	movf	?___xxtofl+2,w
  8136     020A  1683               	bsf	3,5	;RP0=1, select bank1
  8137     020B  1303               	bcf	3,6	;RP1=0, select bank1
  8138     020C  00D4               	movwf	(main@adcValue3+2)^(0+128)
  8139     020D  1283               	bcf	3,5	;RP0=0, select bank0
  8140     020E  1303               	bcf	3,6	;RP1=0, select bank0
  8141     020F  0821               	movf	?___xxtofl+1,w
  8142     0210  1683               	bsf	3,5	;RP0=1, select bank1
  8143     0211  1303               	bcf	3,6	;RP1=0, select bank1
  8144     0212  00D3               	movwf	(main@adcValue3+1)^(0+128)
  8145     0213  1283               	bcf	3,5	;RP0=0, select bank0
  8146     0214  1303               	bcf	3,6	;RP1=0, select bank0
  8147     0215  0820               	movf	?___xxtofl,w
  8148     0216  1683               	bsf	3,5	;RP0=1, select bank1
  8149     0217  1303               	bcf	3,6	;RP1=0, select bank1
  8150     0218  00D2               	movwf	main@adcValue3^(0+128)
  8151                           
  8152                           ;main1.c: 331:     float oranValue = adcValue3/1024.0;
  8153     0219  3044               	movlw	68
  8154     021A  1283               	bcf	3,5	;RP0=0, select bank0
  8155     021B  1303               	bcf	3,6	;RP1=0, select bank0
  8156     021C  00A3               	movwf	___fldiv@a+3
  8157     021D  3080               	movlw	128
  8158     021E  00A2               	movwf	___fldiv@a+2
  8159     021F  3000               	movlw	0
  8160     0220  00A1               	movwf	___fldiv@a+1
  8161     0221  3000               	movlw	0
  8162     0222  00A0               	movwf	___fldiv@a
  8163     0223  1683               	bsf	3,5	;RP0=1, select bank1
  8164     0224  1303               	bcf	3,6	;RP1=0, select bank1
  8165     0225  0855               	movf	(main@adcValue3+3)^(0+128),w
  8166     0226  1283               	bcf	3,5	;RP0=0, select bank0
  8167     0227  1303               	bcf	3,6	;RP1=0, select bank0
  8168     0228  00A7               	movwf	___fldiv@b+3
  8169     0229  1683               	bsf	3,5	;RP0=1, select bank1
  8170     022A  1303               	bcf	3,6	;RP1=0, select bank1
  8171     022B  0854               	movf	(main@adcValue3+2)^(0+128),w
  8172     022C  1283               	bcf	3,5	;RP0=0, select bank0
  8173     022D  1303               	bcf	3,6	;RP1=0, select bank0
  8174     022E  00A6               	movwf	___fldiv@b+2
  8175     022F  1683               	bsf	3,5	;RP0=1, select bank1
  8176     0230  1303               	bcf	3,6	;RP1=0, select bank1
  8177     0231  0853               	movf	(main@adcValue3+1)^(0+128),w
  8178     0232  1283               	bcf	3,5	;RP0=0, select bank0
  8179     0233  1303               	bcf	3,6	;RP1=0, select bank0
  8180     0234  00A5               	movwf	___fldiv@b+1
  8181     0235  1683               	bsf	3,5	;RP0=1, select bank1
  8182     0236  1303               	bcf	3,6	;RP1=0, select bank1
  8183     0237  0852               	movf	main@adcValue3^(0+128),w
  8184     0238  1283               	bcf	3,5	;RP0=0, select bank0
  8185     0239  1303               	bcf	3,6	;RP1=0, select bank0
  8186     023A  00A4               	movwf	___fldiv@b
  8187     023B  120A  158A  2032  120A  118A  	fcall	___fldiv
  8188     0240  1283               	bcf	3,5	;RP0=0, select bank0
  8189     0241  1303               	bcf	3,6	;RP1=0, select bank0
  8190     0242  0823               	movf	?___fldiv+3,w
  8191     0243  1683               	bsf	3,5	;RP0=1, select bank1
  8192     0244  1303               	bcf	3,6	;RP1=0, select bank1
  8193     0245  00D9               	movwf	(main@oranValue+3)^(0+128)
  8194     0246  1283               	bcf	3,5	;RP0=0, select bank0
  8195     0247  1303               	bcf	3,6	;RP1=0, select bank0
  8196     0248  0822               	movf	?___fldiv+2,w
  8197     0249  1683               	bsf	3,5	;RP0=1, select bank1
  8198     024A  1303               	bcf	3,6	;RP1=0, select bank1
  8199     024B  00D8               	movwf	(main@oranValue+2)^(0+128)
  8200     024C  1283               	bcf	3,5	;RP0=0, select bank0
  8201     024D  1303               	bcf	3,6	;RP1=0, select bank0
  8202     024E  0821               	movf	?___fldiv+1,w
  8203     024F  1683               	bsf	3,5	;RP0=1, select bank1
  8204     0250  1303               	bcf	3,6	;RP1=0, select bank1
  8205     0251  00D7               	movwf	(main@oranValue+1)^(0+128)
  8206     0252  1283               	bcf	3,5	;RP0=0, select bank0
  8207     0253  1303               	bcf	3,6	;RP1=0, select bank0
  8208     0254  0820               	movf	?___fldiv,w
  8209     0255  1683               	bsf	3,5	;RP0=1, select bank1
  8210     0256  1303               	bcf	3,6	;RP1=0, select bank1
  8211     0257  00D6               	movwf	main@oranValue^(0+128)
  8212     0258                     l3280:
  8213                           
  8214                           ;main1.c: 334:     ADCON0bits.CHS = 0b0011;
  8215     0258  1283               	bcf	3,5	;RP0=0, select bank0
  8216     0259  1303               	bcf	3,6	;RP1=0, select bank0
  8217     025A  081F               	movf	31,w	;volatile
  8218     025B  39C7               	andlw	-57
  8219     025C  3818               	iorlw	24
  8220     025D  009F               	movwf	31	;volatile
  8221     025E                     l3282:
  8222                           
  8223                           ;main1.c: 335:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  8224     025E  300F               	movlw	15
  8225     025F  1283               	bcf	3,5	;RP0=0, select bank0
  8226     0260  1303               	bcf	3,6	;RP1=0, select bank0
  8227     0261  00D4               	movwf	??_main
  8228     0262                     u4617:
  8229     0262  0BD4               	decfsz	??_main,f
  8230     0263  2A62               	goto	u4617
  8231     0264  2A65               	nop2
  8232     0265                     l3284:
  8233                           
  8234                           ;main1.c: 336:     ADCON0bits.GO = 1;
  8235     0265  1283               	bcf	3,5	;RP0=0, select bank0
  8236     0266  1303               	bcf	3,6	;RP1=0, select bank0
  8237     0267  151F               	bsf	31,2	;volatile
  8238     0268                     l231:	
  8239                           ;main1.c: 337:     while (ADCON0bits.GO);
  8240                           
  8241     0268  191F               	btfsc	31,2	;volatile
  8242     0269  2A6B               	goto	u4251
  8243     026A  2A6C               	goto	u4250
  8244     026B                     u4251:
  8245     026B  2A68               	goto	l231
  8246     026C                     u4250:
  8247     026C                     l3286:
  8248                           
  8249                           ;main1.c: 338:     adcValue2 = (ADRESH << 8) | ADRESL;
  8250     026C  081E               	movf	30,w	;volatile
  8251     026D  1683               	bsf	3,5	;RP0=1, select bank1
  8252     026E  1303               	bcf	3,6	;RP1=0, select bank1
  8253     026F  00E3               	movwf	(main@adcValue2+1)^(0+128)
  8254     0270  081E               	movf	30,w	;volatile
  8255     0271  00E2               	movwf	main@adcValue2^(0+128)
  8256     0272                     l3288:
  8257                           
  8258                           ;main1.c: 340:     float integerPart = adcValue2*oranValue*3;
  8259     0272  0859               	movf	(main@oranValue+3)^(0+128),w
  8260     0273  1283               	bcf	3,5	;RP0=0, select bank0
  8261     0274  1303               	bcf	3,6	;RP1=0, select bank0
  8262     0275  00BD               	movwf	___flmul@b+3
  8263     0276  1683               	bsf	3,5	;RP0=1, select bank1
  8264     0277  1303               	bcf	3,6	;RP1=0, select bank1
  8265     0278  0858               	movf	(main@oranValue+2)^(0+128),w
  8266     0279  1283               	bcf	3,5	;RP0=0, select bank0
  8267     027A  1303               	bcf	3,6	;RP1=0, select bank0
  8268     027B  00BC               	movwf	___flmul@b+2
  8269     027C  1683               	bsf	3,5	;RP0=1, select bank1
  8270     027D  1303               	bcf	3,6	;RP1=0, select bank1
  8271     027E  0857               	movf	(main@oranValue+1)^(0+128),w
  8272     027F  1283               	bcf	3,5	;RP0=0, select bank0
  8273     0280  1303               	bcf	3,6	;RP1=0, select bank0
  8274     0281  00BB               	movwf	___flmul@b+1
  8275     0282  1683               	bsf	3,5	;RP0=1, select bank1
  8276     0283  1303               	bcf	3,6	;RP1=0, select bank1
  8277     0284  0856               	movf	main@oranValue^(0+128),w
  8278     0285  1283               	bcf	3,5	;RP0=0, select bank0
  8279     0286  1303               	bcf	3,6	;RP1=0, select bank0
  8280     0287  00BA               	movwf	___flmul@b
  8281     0288  1683               	bsf	3,5	;RP0=1, select bank1
  8282     0289  1303               	bcf	3,6	;RP1=0, select bank1
  8283     028A  0862               	movf	main@adcValue2^(0+128),w
  8284     028B  1283               	bcf	3,5	;RP0=0, select bank0
  8285     028C  1303               	bcf	3,6	;RP1=0, select bank0
  8286     028D  00A0               	movwf	___xxtofl@val
  8287     028E  1683               	bsf	3,5	;RP0=1, select bank1
  8288     028F  1303               	bcf	3,6	;RP1=0, select bank1
  8289     0290  0863               	movf	(main@adcValue2+1)^(0+128),w
  8290     0291  1283               	bcf	3,5	;RP0=0, select bank0
  8291     0292  1303               	bcf	3,6	;RP1=0, select bank0
  8292     0293  00A1               	movwf	___xxtofl@val+1
  8293     0294  3000               	movlw	0
  8294     0295  1BA1               	btfsc	___xxtofl@val+1,7
  8295     0296  30FF               	movlw	255
  8296     0297  00A2               	movwf	___xxtofl@val+2
  8297     0298  00A3               	movwf	___xxtofl@val+3
  8298     0299  3001               	movlw	1
  8299     029A  160A  118A  25E2  120A  118A  	fcall	___xxtofl
  8300     029F  1283               	bcf	3,5	;RP0=0, select bank0
  8301     02A0  1303               	bcf	3,6	;RP1=0, select bank0
  8302     02A1  0823               	movf	?___xxtofl+3,w
  8303     02A2  00C1               	movwf	___flmul@a+3
  8304     02A3  0822               	movf	?___xxtofl+2,w
  8305     02A4  00C0               	movwf	___flmul@a+2
  8306     02A5  0821               	movf	?___xxtofl+1,w
  8307     02A6  00BF               	movwf	___flmul@a+1
  8308     02A7  0820               	movf	?___xxtofl,w
  8309     02A8  00BE               	movwf	___flmul@a
  8310     02A9  120A  118A  24A6  120A  118A  	fcall	___flmul
  8311     02AE  1283               	bcf	3,5	;RP0=0, select bank0
  8312     02AF  1303               	bcf	3,6	;RP1=0, select bank0
  8313     02B0  083D               	movf	?___flmul+3,w
  8314     02B1  1683               	bsf	3,5	;RP0=1, select bank1
  8315     02B2  1303               	bcf	3,6	;RP1=0, select bank1
  8316     02B3  00E1               	movwf	(_main$1032+3)^(0+128)
  8317     02B4  1283               	bcf	3,5	;RP0=0, select bank0
  8318     02B5  1303               	bcf	3,6	;RP1=0, select bank0
  8319     02B6  083C               	movf	?___flmul+2,w
  8320     02B7  1683               	bsf	3,5	;RP0=1, select bank1
  8321     02B8  1303               	bcf	3,6	;RP1=0, select bank1
  8322     02B9  00E0               	movwf	(_main$1032+2)^(0+128)
  8323     02BA  1283               	bcf	3,5	;RP0=0, select bank0
  8324     02BB  1303               	bcf	3,6	;RP1=0, select bank0
  8325     02BC  083B               	movf	?___flmul+1,w
  8326     02BD  1683               	bsf	3,5	;RP0=1, select bank1
  8327     02BE  1303               	bcf	3,6	;RP1=0, select bank1
  8328     02BF  00DF               	movwf	(_main$1032+1)^(0+128)
  8329     02C0  1283               	bcf	3,5	;RP0=0, select bank0
  8330     02C1  1303               	bcf	3,6	;RP1=0, select bank0
  8331     02C2  083A               	movf	?___flmul,w
  8332     02C3  1683               	bsf	3,5	;RP0=1, select bank1
  8333     02C4  1303               	bcf	3,6	;RP1=0, select bank1
  8334     02C5  00DE               	movwf	_main$1032^(0+128)
  8335     02C6                     l3290:
  8336                           
  8337                           ;main1.c: 340:     float integerPart = adcValue2*oranValue*3;
  8338     02C6  3040               	movlw	64
  8339     02C7  1283               	bcf	3,5	;RP0=0, select bank0
  8340     02C8  1303               	bcf	3,6	;RP1=0, select bank0
  8341     02C9  00BD               	movwf	___flmul@b+3
  8342     02CA  3040               	movlw	64
  8343     02CB  00BC               	movwf	___flmul@b+2
  8344     02CC  3000               	movlw	0
  8345     02CD  00BB               	movwf	___flmul@b+1
  8346     02CE  3000               	movlw	0
  8347     02CF  00BA               	movwf	___flmul@b
  8348     02D0  1683               	bsf	3,5	;RP0=1, select bank1
  8349     02D1  1303               	bcf	3,6	;RP1=0, select bank1
  8350     02D2  0861               	movf	(_main$1032+3)^(0+128),w
  8351     02D3  1283               	bcf	3,5	;RP0=0, select bank0
  8352     02D4  1303               	bcf	3,6	;RP1=0, select bank0
  8353     02D5  00C1               	movwf	___flmul@a+3
  8354     02D6  1683               	bsf	3,5	;RP0=1, select bank1
  8355     02D7  1303               	bcf	3,6	;RP1=0, select bank1
  8356     02D8  0860               	movf	(_main$1032+2)^(0+128),w
  8357     02D9  1283               	bcf	3,5	;RP0=0, select bank0
  8358     02DA  1303               	bcf	3,6	;RP1=0, select bank0
  8359     02DB  00C0               	movwf	___flmul@a+2
  8360     02DC  1683               	bsf	3,5	;RP0=1, select bank1
  8361     02DD  1303               	bcf	3,6	;RP1=0, select bank1
  8362     02DE  085F               	movf	(_main$1032+1)^(0+128),w
  8363     02DF  1283               	bcf	3,5	;RP0=0, select bank0
  8364     02E0  1303               	bcf	3,6	;RP1=0, select bank0
  8365     02E1  00BF               	movwf	___flmul@a+1
  8366     02E2  1683               	bsf	3,5	;RP0=1, select bank1
  8367     02E3  1303               	bcf	3,6	;RP1=0, select bank1
  8368     02E4  085E               	movf	_main$1032^(0+128),w
  8369     02E5  1283               	bcf	3,5	;RP0=0, select bank0
  8370     02E6  1303               	bcf	3,6	;RP1=0, select bank0
  8371     02E7  00BE               	movwf	___flmul@a
  8372     02E8  120A  118A  24A6  120A  118A  	fcall	___flmul
  8373     02ED  1283               	bcf	3,5	;RP0=0, select bank0
  8374     02EE  1303               	bcf	3,6	;RP1=0, select bank0
  8375     02EF  083D               	movf	?___flmul+3,w
  8376     02F0  1683               	bsf	3,5	;RP0=1, select bank3
  8377     02F1  1703               	bsf	3,6	;RP1=1, select bank3
  8378     02F2  00A1               	movwf	(main@integerPart+3)^(0+384)
  8379     02F3  1283               	bcf	3,5	;RP0=0, select bank0
  8380     02F4  1303               	bcf	3,6	;RP1=0, select bank0
  8381     02F5  083C               	movf	?___flmul+2,w
  8382     02F6  1683               	bsf	3,5	;RP0=1, select bank3
  8383     02F7  1703               	bsf	3,6	;RP1=1, select bank3
  8384     02F8  00A0               	movwf	(main@integerPart+2)^(0+384)
  8385     02F9  1283               	bcf	3,5	;RP0=0, select bank0
  8386     02FA  1303               	bcf	3,6	;RP1=0, select bank0
  8387     02FB  083B               	movf	?___flmul+1,w
  8388     02FC  1683               	bsf	3,5	;RP0=1, select bank3
  8389     02FD  1703               	bsf	3,6	;RP1=1, select bank3
  8390     02FE  009F               	movwf	(main@integerPart+1)^(0+384)
  8391     02FF  1283               	bcf	3,5	;RP0=0, select bank0
  8392     0300  1303               	bcf	3,6	;RP1=0, select bank0
  8393     0301  083A               	movf	?___flmul,w
  8394     0302  1683               	bsf	3,5	;RP0=1, select bank3
  8395     0303  1703               	bsf	3,6	;RP1=1, select bank3
  8396     0304  009E               	movwf	main@integerPart^(0+384)
  8397     0305                     l3292:
  8398                           
  8399                           ;main1.c: 342:     int binler = (int)integerPart/1000;
  8400     0305  30E8               	movlw	232
  8401     0306  1283               	bcf	3,5	;RP0=0, select bank0
  8402     0307  1303               	bcf	3,6	;RP1=0, select bank0
  8403     0308  00AA               	movwf	___awdiv@divisor
  8404     0309  3003               	movlw	3
  8405     030A  00AB               	movwf	___awdiv@divisor+1
  8406     030B  1683               	bsf	3,5	;RP0=1, select bank3
  8407     030C  1703               	bsf	3,6	;RP1=1, select bank3
  8408     030D  0821               	movf	(main@integerPart+3)^(0+384),w
  8409     030E  1283               	bcf	3,5	;RP0=0, select bank0
  8410     030F  1303               	bcf	3,6	;RP1=0, select bank0
  8411     0310  00A3               	movwf	___fltol@f1+3
  8412     0311  1683               	bsf	3,5	;RP0=1, select bank3
  8413     0312  1703               	bsf	3,6	;RP1=1, select bank3
  8414     0313  0820               	movf	(main@integerPart+2)^(0+384),w
  8415     0314  1283               	bcf	3,5	;RP0=0, select bank0
  8416     0315  1303               	bcf	3,6	;RP1=0, select bank0
  8417     0316  00A2               	movwf	___fltol@f1+2
  8418     0317  1683               	bsf	3,5	;RP0=1, select bank3
  8419     0318  1703               	bsf	3,6	;RP1=1, select bank3
  8420     0319  081F               	movf	(main@integerPart+1)^(0+384),w
  8421     031A  1283               	bcf	3,5	;RP0=0, select bank0
  8422     031B  1303               	bcf	3,6	;RP1=0, select bank0
  8423     031C  00A1               	movwf	___fltol@f1+1
  8424     031D  1683               	bsf	3,5	;RP0=1, select bank3
  8425     031E  1703               	bsf	3,6	;RP1=1, select bank3
  8426     031F  081E               	movf	main@integerPart^(0+384),w
  8427     0320  1283               	bcf	3,5	;RP0=0, select bank0
  8428     0321  1303               	bcf	3,6	;RP1=0, select bank0
  8429     0322  00A0               	movwf	___fltol@f1
  8430     0323  160A  118A  24DF  120A  118A  	fcall	___fltol
  8431     0328  1283               	bcf	3,5	;RP0=0, select bank0
  8432     0329  1303               	bcf	3,6	;RP1=0, select bank0
  8433     032A  0821               	movf	?___fltol+1,w
  8434     032B  00AD               	movwf	___awdiv@dividend+1
  8435     032C  0820               	movf	?___fltol,w
  8436     032D  00AC               	movwf	___awdiv@dividend
  8437     032E  160A  118A  2476  120A  118A  	fcall	___awdiv
  8438     0333  1283               	bcf	3,5	;RP0=0, select bank0
  8439     0334  1303               	bcf	3,6	;RP1=0, select bank0
  8440     0335  082B               	movf	?___awdiv+1,w
  8441     0336  1683               	bsf	3,5	;RP0=1, select bank3
  8442     0337  1703               	bsf	3,6	;RP1=1, select bank3
  8443     0338  009D               	movwf	(main@binler+1)^(0+384)
  8444     0339  1283               	bcf	3,5	;RP0=0, select bank0
  8445     033A  1303               	bcf	3,6	;RP1=0, select bank0
  8446     033B  082A               	movf	?___awdiv,w
  8447     033C  1683               	bsf	3,5	;RP0=1, select bank3
  8448     033D  1703               	bsf	3,6	;RP1=1, select bank3
  8449     033E  009C               	movwf	main@binler^(0+384)
  8450     033F                     l3294:
  8451                           
  8452                           ;main1.c: 343:     int yuzler = ((int)integerPart-binler*1000)/100;
  8453     033F  3064               	movlw	100
  8454     0340  1283               	bcf	3,5	;RP0=0, select bank0
  8455     0341  1303               	bcf	3,6	;RP1=0, select bank0
  8456     0342  00AA               	movwf	___awdiv@divisor
  8457     0343  3000               	movlw	0
  8458     0344  00AB               	movwf	___awdiv@divisor+1
  8459     0345  1683               	bsf	3,5	;RP0=1, select bank3
  8460     0346  1703               	bsf	3,6	;RP1=1, select bank3
  8461     0347  0821               	movf	(main@integerPart+3)^(0+384),w
  8462     0348  1283               	bcf	3,5	;RP0=0, select bank0
  8463     0349  1303               	bcf	3,6	;RP1=0, select bank0
  8464     034A  00A3               	movwf	___fltol@f1+3
  8465     034B  1683               	bsf	3,5	;RP0=1, select bank3
  8466     034C  1703               	bsf	3,6	;RP1=1, select bank3
  8467     034D  0820               	movf	(main@integerPart+2)^(0+384),w
  8468     034E  1283               	bcf	3,5	;RP0=0, select bank0
  8469     034F  1303               	bcf	3,6	;RP1=0, select bank0
  8470     0350  00A2               	movwf	___fltol@f1+2
  8471     0351  1683               	bsf	3,5	;RP0=1, select bank3
  8472     0352  1703               	bsf	3,6	;RP1=1, select bank3
  8473     0353  081F               	movf	(main@integerPart+1)^(0+384),w
  8474     0354  1283               	bcf	3,5	;RP0=0, select bank0
  8475     0355  1303               	bcf	3,6	;RP1=0, select bank0
  8476     0356  00A1               	movwf	___fltol@f1+1
  8477     0357  1683               	bsf	3,5	;RP0=1, select bank3
  8478     0358  1703               	bsf	3,6	;RP1=1, select bank3
  8479     0359  081E               	movf	main@integerPart^(0+384),w
  8480     035A  1283               	bcf	3,5	;RP0=0, select bank0
  8481     035B  1303               	bcf	3,6	;RP1=0, select bank0
  8482     035C  00A0               	movwf	___fltol@f1
  8483     035D  160A  118A  24DF  120A  118A  	fcall	___fltol
  8484     0362  1283               	bcf	3,5	;RP0=0, select bank0
  8485     0363  1303               	bcf	3,6	;RP1=0, select bank0
  8486     0364  0820               	movf	?___fltol,w
  8487     0365  00D4               	movwf	??_main
  8488     0366  0821               	movf	?___fltol+1,w
  8489     0367  00D5               	movwf	??_main+1
  8490     0368  0822               	movf	?___fltol+2,w
  8491     0369  00D6               	movwf	??_main+2
  8492     036A  0823               	movf	?___fltol+3,w
  8493     036B  00D7               	movwf	??_main+3
  8494     036C  1683               	bsf	3,5	;RP0=1, select bank3
  8495     036D  1703               	bsf	3,6	;RP1=1, select bank3
  8496     036E  081D               	movf	(main@binler+1)^(0+384),w
  8497     036F  1283               	bcf	3,5	;RP0=0, select bank0
  8498     0370  1303               	bcf	3,6	;RP1=0, select bank0
  8499     0371  00A1               	movwf	___wmul@multiplier+1
  8500     0372  1683               	bsf	3,5	;RP0=1, select bank3
  8501     0373  1703               	bsf	3,6	;RP1=1, select bank3
  8502     0374  081C               	movf	main@binler^(0+384),w
  8503     0375  1283               	bcf	3,5	;RP0=0, select bank0
  8504     0376  1303               	bcf	3,6	;RP1=0, select bank0
  8505     0377  00A0               	movwf	___wmul@multiplier
  8506     0378  3018               	movlw	24
  8507     0379  00A2               	movwf	___wmul@multiplicand
  8508     037A  30FC               	movlw	252
  8509     037B  00A3               	movwf	___wmul@multiplicand+1
  8510     037C  160A  118A  217E  120A  118A  	fcall	___wmul
  8511     0381  1283               	bcf	3,5	;RP0=0, select bank0
  8512     0382  1303               	bcf	3,6	;RP1=0, select bank0
  8513     0383  0820               	movf	?___wmul,w
  8514     0384  0754               	addwf	??_main,w
  8515     0385  00AC               	movwf	___awdiv@dividend
  8516     0386  0821               	movf	?___wmul+1,w
  8517     0387  1803               	skipnc
  8518     0388  0A21               	incf	?___wmul+1,w
  8519     0389  0755               	addwf	??_main+1,w
  8520     038A  00AD               	movwf	___awdiv@dividend+1
  8521     038B  160A  118A  2476  120A  118A  	fcall	___awdiv
  8522     0390  1283               	bcf	3,5	;RP0=0, select bank0
  8523     0391  1303               	bcf	3,6	;RP1=0, select bank0
  8524     0392  082B               	movf	?___awdiv+1,w
  8525     0393  1683               	bsf	3,5	;RP0=1, select bank3
  8526     0394  1703               	bsf	3,6	;RP1=1, select bank3
  8527     0395  009B               	movwf	(main@yuzler+1)^(0+384)
  8528     0396  1283               	bcf	3,5	;RP0=0, select bank0
  8529     0397  1303               	bcf	3,6	;RP1=0, select bank0
  8530     0398  082A               	movf	?___awdiv,w
  8531     0399  1683               	bsf	3,5	;RP0=1, select bank3
  8532     039A  1703               	bsf	3,6	;RP1=1, select bank3
  8533     039B  009A               	movwf	main@yuzler^(0+384)
  8534     039C                     l3296:
  8535                           
  8536                           ;main1.c: 344:     int onlar = ((int)integerPart-binler*1000-yuzler*100)/10;
  8537     039C  300A               	movlw	10
  8538     039D  1283               	bcf	3,5	;RP0=0, select bank0
  8539     039E  1303               	bcf	3,6	;RP1=0, select bank0
  8540     039F  00AA               	movwf	___awdiv@divisor
  8541     03A0  3000               	movlw	0
  8542     03A1  00AB               	movwf	___awdiv@divisor+1
  8543     03A2  1683               	bsf	3,5	;RP0=1, select bank3
  8544     03A3  1703               	bsf	3,6	;RP1=1, select bank3
  8545     03A4  0821               	movf	(main@integerPart+3)^(0+384),w
  8546     03A5  1283               	bcf	3,5	;RP0=0, select bank0
  8547     03A6  1303               	bcf	3,6	;RP1=0, select bank0
  8548     03A7  00A3               	movwf	___fltol@f1+3
  8549     03A8  1683               	bsf	3,5	;RP0=1, select bank3
  8550     03A9  1703               	bsf	3,6	;RP1=1, select bank3
  8551     03AA  0820               	movf	(main@integerPart+2)^(0+384),w
  8552     03AB  1283               	bcf	3,5	;RP0=0, select bank0
  8553     03AC  1303               	bcf	3,6	;RP1=0, select bank0
  8554     03AD  00A2               	movwf	___fltol@f1+2
  8555     03AE  1683               	bsf	3,5	;RP0=1, select bank3
  8556     03AF  1703               	bsf	3,6	;RP1=1, select bank3
  8557     03B0  081F               	movf	(main@integerPart+1)^(0+384),w
  8558     03B1  1283               	bcf	3,5	;RP0=0, select bank0
  8559     03B2  1303               	bcf	3,6	;RP1=0, select bank0
  8560     03B3  00A1               	movwf	___fltol@f1+1
  8561     03B4  1683               	bsf	3,5	;RP0=1, select bank3
  8562     03B5  1703               	bsf	3,6	;RP1=1, select bank3
  8563     03B6  081E               	movf	main@integerPart^(0+384),w
  8564     03B7  1283               	bcf	3,5	;RP0=0, select bank0
  8565     03B8  1303               	bcf	3,6	;RP1=0, select bank0
  8566     03B9  00A0               	movwf	___fltol@f1
  8567     03BA  160A  118A  24DF  120A  118A  	fcall	___fltol
  8568     03BF  1283               	bcf	3,5	;RP0=0, select bank0
  8569     03C0  1303               	bcf	3,6	;RP1=0, select bank0
  8570     03C1  0820               	movf	?___fltol,w
  8571     03C2  00D4               	movwf	??_main
  8572     03C3  0821               	movf	?___fltol+1,w
  8573     03C4  00D5               	movwf	??_main+1
  8574     03C5  0822               	movf	?___fltol+2,w
  8575     03C6  00D6               	movwf	??_main+2
  8576     03C7  0823               	movf	?___fltol+3,w
  8577     03C8  00D7               	movwf	??_main+3
  8578     03C9  1683               	bsf	3,5	;RP0=1, select bank3
  8579     03CA  1703               	bsf	3,6	;RP1=1, select bank3
  8580     03CB  081D               	movf	(main@binler+1)^(0+384),w
  8581     03CC  1283               	bcf	3,5	;RP0=0, select bank0
  8582     03CD  1303               	bcf	3,6	;RP1=0, select bank0
  8583     03CE  00A1               	movwf	___wmul@multiplier+1
  8584     03CF  1683               	bsf	3,5	;RP0=1, select bank3
  8585     03D0  1703               	bsf	3,6	;RP1=1, select bank3
  8586     03D1  081C               	movf	main@binler^(0+384),w
  8587     03D2  1283               	bcf	3,5	;RP0=0, select bank0
  8588     03D3  1303               	bcf	3,6	;RP1=0, select bank0
  8589     03D4  00A0               	movwf	___wmul@multiplier
  8590     03D5  3018               	movlw	24
  8591     03D6  00A2               	movwf	___wmul@multiplicand
  8592     03D7  30FC               	movlw	252
  8593     03D8  00A3               	movwf	___wmul@multiplicand+1
  8594     03D9  160A  118A  217E  120A  118A  	fcall	___wmul
  8595     03DE  1283               	bcf	3,5	;RP0=0, select bank0
  8596     03DF  1303               	bcf	3,6	;RP1=0, select bank0
  8597     03E0  0820               	movf	?___wmul,w
  8598     03E1  0754               	addwf	??_main,w
  8599     03E2  00D8               	movwf	??_main+4
  8600     03E3  0821               	movf	?___wmul+1,w
  8601     03E4  1803               	skipnc
  8602     03E5  0A21               	incf	?___wmul+1,w
  8603     03E6  0755               	addwf	??_main+1,w
  8604     03E7  00D9               	movwf	??_main+5
  8605     03E8  1683               	bsf	3,5	;RP0=1, select bank3
  8606     03E9  1703               	bsf	3,6	;RP1=1, select bank3
  8607     03EA  081B               	movf	(main@yuzler+1)^(0+384),w
  8608     03EB  1283               	bcf	3,5	;RP0=0, select bank0
  8609     03EC  1303               	bcf	3,6	;RP1=0, select bank0
  8610     03ED  00A1               	movwf	___wmul@multiplier+1
  8611     03EE  1683               	bsf	3,5	;RP0=1, select bank3
  8612     03EF  1703               	bsf	3,6	;RP1=1, select bank3
  8613     03F0  081A               	movf	main@yuzler^(0+384),w
  8614     03F1  1283               	bcf	3,5	;RP0=0, select bank0
  8615     03F2  1303               	bcf	3,6	;RP1=0, select bank0
  8616     03F3  00A0               	movwf	___wmul@multiplier
  8617     03F4  309C               	movlw	156
  8618     03F5  00A2               	movwf	___wmul@multiplicand
  8619     03F6  30FF               	movlw	255
  8620     03F7  00A3               	movwf	___wmul@multiplicand+1
  8621     03F8  160A  118A  217E  120A  118A  	fcall	___wmul
  8622     03FD  1283               	bcf	3,5	;RP0=0, select bank0
  8623     03FE  1303               	bcf	3,6	;RP1=0, select bank0
  8624     03FF  0820               	movf	?___wmul,w
  8625     0400  0758               	addwf	??_main+4,w
  8626     0401  00AC               	movwf	___awdiv@dividend
  8627     0402  0821               	movf	?___wmul+1,w
  8628     0403  1803               	skipnc
  8629     0404  0A21               	incf	?___wmul+1,w
  8630     0405  0759               	addwf	??_main+5,w
  8631     0406  00AD               	movwf	___awdiv@dividend+1
  8632     0407  160A  118A  2476  120A  118A  	fcall	___awdiv
  8633     040C  1283               	bcf	3,5	;RP0=0, select bank0
  8634     040D  1303               	bcf	3,6	;RP1=0, select bank0
  8635     040E  082B               	movf	?___awdiv+1,w
  8636     040F  1683               	bsf	3,5	;RP0=1, select bank1
  8637     0410  1303               	bcf	3,6	;RP1=0, select bank1
  8638     0411  00E9               	movwf	(main@onlar+1)^(0+128)
  8639     0412  1283               	bcf	3,5	;RP0=0, select bank0
  8640     0413  1303               	bcf	3,6	;RP1=0, select bank0
  8641     0414  082A               	movf	?___awdiv,w
  8642     0415  1683               	bsf	3,5	;RP0=1, select bank1
  8643     0416  1303               	bcf	3,6	;RP1=0, select bank1
  8644     0417  00E8               	movwf	main@onlar^(0+128)
  8645     0418                     l3298:
  8646                           
  8647                           ;main1.c: 345:     int birler = (int)integerPart%10;
  8648     0418  300A               	movlw	10
  8649     0419  1283               	bcf	3,5	;RP0=0, select bank0
  8650     041A  1303               	bcf	3,6	;RP1=0, select bank0
  8651     041B  00AA               	movwf	___awmod@divisor
  8652     041C  3000               	movlw	0
  8653     041D  00AB               	movwf	___awmod@divisor+1
  8654     041E  1683               	bsf	3,5	;RP0=1, select bank3
  8655     041F  1703               	bsf	3,6	;RP1=1, select bank3
  8656     0420  0821               	movf	(main@integerPart+3)^(0+384),w
  8657     0421  1283               	bcf	3,5	;RP0=0, select bank0
  8658     0422  1303               	bcf	3,6	;RP1=0, select bank0
  8659     0423  00A3               	movwf	___fltol@f1+3
  8660     0424  1683               	bsf	3,5	;RP0=1, select bank3
  8661     0425  1703               	bsf	3,6	;RP1=1, select bank3
  8662     0426  0820               	movf	(main@integerPart+2)^(0+384),w
  8663     0427  1283               	bcf	3,5	;RP0=0, select bank0
  8664     0428  1303               	bcf	3,6	;RP1=0, select bank0
  8665     0429  00A2               	movwf	___fltol@f1+2
  8666     042A  1683               	bsf	3,5	;RP0=1, select bank3
  8667     042B  1703               	bsf	3,6	;RP1=1, select bank3
  8668     042C  081F               	movf	(main@integerPart+1)^(0+384),w
  8669     042D  1283               	bcf	3,5	;RP0=0, select bank0
  8670     042E  1303               	bcf	3,6	;RP1=0, select bank0
  8671     042F  00A1               	movwf	___fltol@f1+1
  8672     0430  1683               	bsf	3,5	;RP0=1, select bank3
  8673     0431  1703               	bsf	3,6	;RP1=1, select bank3
  8674     0432  081E               	movf	main@integerPart^(0+384),w
  8675     0433  1283               	bcf	3,5	;RP0=0, select bank0
  8676     0434  1303               	bcf	3,6	;RP1=0, select bank0
  8677     0435  00A0               	movwf	___fltol@f1
  8678     0436  160A  118A  24DF  120A  118A  	fcall	___fltol
  8679     043B  1283               	bcf	3,5	;RP0=0, select bank0
  8680     043C  1303               	bcf	3,6	;RP1=0, select bank0
  8681     043D  0821               	movf	?___fltol+1,w
  8682     043E  00AD               	movwf	___awmod@dividend+1
  8683     043F  0820               	movf	?___fltol,w
  8684     0440  00AC               	movwf	___awmod@dividend
  8685     0441  160A  118A  2351  120A  118A  	fcall	___awmod
  8686     0446  1283               	bcf	3,5	;RP0=0, select bank0
  8687     0447  1303               	bcf	3,6	;RP1=0, select bank0
  8688     0448  082B               	movf	?___awmod+1,w
  8689     0449  1683               	bsf	3,5	;RP0=1, select bank1
  8690     044A  1303               	bcf	3,6	;RP1=0, select bank1
  8691     044B  00EB               	movwf	(main@birler+1)^(0+128)
  8692     044C  1283               	bcf	3,5	;RP0=0, select bank0
  8693     044D  1303               	bcf	3,6	;RP1=0, select bank0
  8694     044E  082A               	movf	?___awmod,w
  8695     044F  1683               	bsf	3,5	;RP0=1, select bank1
  8696     0450  1303               	bcf	3,6	;RP1=0, select bank1
  8697     0451  00EA               	movwf	main@birler^(0+128)
  8698     0452                     l3300:
  8699                           
  8700                           ;main1.c: 351:         ADCON0bits.CHS = 0b0001;
  8701     0452  1283               	bcf	3,5	;RP0=0, select bank0
  8702     0453  1303               	bcf	3,6	;RP1=0, select bank0
  8703     0454  081F               	movf	31,w	;volatile
  8704     0455  39C7               	andlw	-57
  8705     0456  3808               	iorlw	8
  8706     0457  009F               	movwf	31	;volatile
  8707     0458                     l3302:
  8708                           
  8709                           ;main1.c: 352:         _delay((unsigned long)((50)*(4000000/4000000.0)));
  8710     0458  300F               	movlw	15
  8711     0459  1283               	bcf	3,5	;RP0=0, select bank0
  8712     045A  1303               	bcf	3,6	;RP1=0, select bank0
  8713     045B  00D4               	movwf	??_main
  8714     045C                     u4627:
  8715     045C  0BD4               	decfsz	??_main,f
  8716     045D  2C5C               	goto	u4627
  8717     045E  2C5F               	nop2
  8718     045F                     l3304:
  8719                           
  8720                           ;main1.c: 353:         ADCON0bits.GO = 1;
  8721     045F  1283               	bcf	3,5	;RP0=0, select bank0
  8722     0460  1303               	bcf	3,6	;RP1=0, select bank0
  8723     0461  151F               	bsf	31,2	;volatile
  8724     0462                     l234:	
  8725                           ;main1.c: 354:         while (ADCON0bits.GO);
  8726                           
  8727     0462  191F               	btfsc	31,2	;volatile
  8728     0463  2C65               	goto	u4261
  8729     0464  2C66               	goto	u4260
  8730     0465                     u4261:
  8731     0465  2C62               	goto	l234
  8732     0466                     u4260:
  8733     0466                     l3306:
  8734                           
  8735                           ;main1.c: 355:         adcValue1 = (ADRESH << 8) | ADRESL;
  8736     0466  1683               	bsf	3,5	;RP0=1, select bank1
  8737     0467  1303               	bcf	3,6	;RP1=0, select bank1
  8738     0468  081E               	movf	30,w	;volatile
  8739     0469  1283               	bcf	3,5	;RP0=0, select bank0
  8740     046A  1303               	bcf	3,6	;RP1=0, select bank0
  8741     046B  00D4               	movwf	??_main
  8742     046C  01D5               	clrf	??_main+1
  8743     046D  081E               	movf	30,w	;volatile
  8744     046E  00D6               	movwf	??_main+2
  8745     046F  01D7               	clrf	??_main+3
  8746     0470  0856               	movf	??_main+2,w
  8747     0471  00D7               	movwf	??_main+3
  8748     0472  01D6               	clrf	??_main+2
  8749     0473  0854               	movf	??_main,w
  8750     0474  0456               	iorwf	??_main+2,w
  8751     0475  00A0               	movwf	___xxtofl@val
  8752     0476  0855               	movf	??_main+1,w
  8753     0477  0457               	iorwf	??_main+3,w
  8754     0478  00A1               	movwf	___xxtofl@val+1
  8755     0479  01A2               	clrf	___xxtofl@val+2
  8756     047A  1BA1               	btfsc	___xxtofl@val+1,7
  8757     047B  03A2               	decf	___xxtofl@val+2,f
  8758     047C  0822               	movf	___xxtofl@val+2,w
  8759     047D  00A3               	movwf	___xxtofl@val+3
  8760     047E  3001               	movlw	1
  8761     047F  160A  118A  25E2  120A  118A  	fcall	___xxtofl
  8762     0484  1283               	bcf	3,5	;RP0=0, select bank0
  8763     0485  1303               	bcf	3,6	;RP1=0, select bank0
  8764     0486  0823               	movf	?___xxtofl+3,w
  8765     0487  1683               	bsf	3,5	;RP0=1, select bank3
  8766     0488  1703               	bsf	3,6	;RP1=1, select bank3
  8767     0489  0099               	movwf	(main@adcValue1+3)^(0+384)
  8768     048A  1283               	bcf	3,5	;RP0=0, select bank0
  8769     048B  1303               	bcf	3,6	;RP1=0, select bank0
  8770     048C  0822               	movf	?___xxtofl+2,w
  8771     048D  1683               	bsf	3,5	;RP0=1, select bank3
  8772     048E  1703               	bsf	3,6	;RP1=1, select bank3
  8773     048F  0098               	movwf	(main@adcValue1+2)^(0+384)
  8774     0490  1283               	bcf	3,5	;RP0=0, select bank0
  8775     0491  1303               	bcf	3,6	;RP1=0, select bank0
  8776     0492  0821               	movf	?___xxtofl+1,w
  8777     0493  1683               	bsf	3,5	;RP0=1, select bank3
  8778     0494  1703               	bsf	3,6	;RP1=1, select bank3
  8779     0495  0097               	movwf	(main@adcValue1+1)^(0+384)
  8780     0496  1283               	bcf	3,5	;RP0=0, select bank0
  8781     0497  1303               	bcf	3,6	;RP1=0, select bank0
  8782     0498  0820               	movf	?___xxtofl,w
  8783     0499  1683               	bsf	3,5	;RP0=1, select bank3
  8784     049A  1703               	bsf	3,6	;RP1=1, select bank3
  8785     049B  0096               	movwf	main@adcValue1^(0+384)
  8786     049C                     l3308:
  8787                           
  8788                           ;main1.c: 356:         if (RE2==0 && RC0== 0 ){
  8789     049C  1283               	bcf	3,5	;RP0=0, select bank0
  8790     049D  1303               	bcf	3,6	;RP1=0, select bank0
  8791     049E  1909               	btfsc	9,2	;volatile
  8792     049F  2CA3               	goto	u4271
  8793     04A0  120A  158A  2BF8   	goto	u4270
  8794     04A3                     u4271:
  8795     04A3  120A  158A  2C26   	goto	l237
  8796                           
  8797                           	psect	maintext_split_2
  8798     0BF8                     u4270:
  8799     0BF8                     l3310:
  8800     0BF8  1807               	btfsc	7,0	;volatile
  8801     0BF9  2BFB               	goto	u4281
  8802     0BFA  2BFC               	goto	u4280
  8803     0BFB                     u4281:
  8804     0BFB  2C26               	goto	l237
  8805     0BFC                     u4280:
  8806     0BFC                     l3312:
  8807                           
  8808                           ;main1.c: 357:         displayValue = (int)adcValue1 >> 1;
  8809     0BFC  1683               	bsf	3,5	;RP0=1, select bank3
  8810     0BFD  1703               	bsf	3,6	;RP1=1, select bank3
  8811     0BFE  0819               	movf	(main@adcValue1+3)^(0+384),w
  8812     0BFF  1283               	bcf	3,5	;RP0=0, select bank0
  8813     0C00  1303               	bcf	3,6	;RP1=0, select bank0
  8814     0C01  00A3               	movwf	___fltol@f1+3
  8815     0C02  1683               	bsf	3,5	;RP0=1, select bank3
  8816     0C03  1703               	bsf	3,6	;RP1=1, select bank3
  8817     0C04  0818               	movf	(main@adcValue1+2)^(0+384),w
  8818     0C05  1283               	bcf	3,5	;RP0=0, select bank0
  8819     0C06  1303               	bcf	3,6	;RP1=0, select bank0
  8820     0C07  00A2               	movwf	___fltol@f1+2
  8821     0C08  1683               	bsf	3,5	;RP0=1, select bank3
  8822     0C09  1703               	bsf	3,6	;RP1=1, select bank3
  8823     0C0A  0817               	movf	(main@adcValue1+1)^(0+384),w
  8824     0C0B  1283               	bcf	3,5	;RP0=0, select bank0
  8825     0C0C  1303               	bcf	3,6	;RP1=0, select bank0
  8826     0C0D  00A1               	movwf	___fltol@f1+1
  8827     0C0E  1683               	bsf	3,5	;RP0=1, select bank3
  8828     0C0F  1703               	bsf	3,6	;RP1=1, select bank3
  8829     0C10  0816               	movf	main@adcValue1^(0+384),w
  8830     0C11  1283               	bcf	3,5	;RP0=0, select bank0
  8831     0C12  1303               	bcf	3,6	;RP1=0, select bank0
  8832     0C13  00A0               	movwf	___fltol@f1
  8833     0C14  160A  118A  24DF  120A  158A  	fcall	___fltol
  8834     0C19  1283               	bcf	3,5	;RP0=0, select bank0
  8835     0C1A  1303               	bcf	3,6	;RP1=0, select bank0
  8836     0C1B  0D21               	rlf	?___fltol+1,w
  8837     0C1C  0C21               	rrf	?___fltol+1,w
  8838     0C1D  1683               	bsf	3,5	;RP0=1, select bank3
  8839     0C1E  1703               	bsf	3,6	;RP1=1, select bank3
  8840     0C1F  00A7               	movwf	(main@displayValue+1)^(0+384)
  8841     0C20  1283               	bcf	3,5	;RP0=0, select bank0
  8842     0C21  1303               	bcf	3,6	;RP1=0, select bank0
  8843     0C22  0C20               	rrf	?___fltol,w
  8844     0C23  1683               	bsf	3,5	;RP0=1, select bank3
  8845     0C24  1703               	bsf	3,6	;RP1=1, select bank3
  8846     0C25  00A6               	movwf	main@displayValue^(0+384)
  8847     0C26                     l237:	
  8848                           ;main1.c: 358:         }
  8849                           
  8850                           
  8851                           ;main1.c: 359:         float gostermeliklcd = adcValue1 / 1024 * 1000;
  8852     0C26  3044               	movlw	68
  8853     0C27  1283               	bcf	3,5	;RP0=0, select bank0
  8854     0C28  1303               	bcf	3,6	;RP1=0, select bank0
  8855     0C29  00BD               	movwf	___flmul@b+3
  8856     0C2A  307A               	movlw	122
  8857     0C2B  00BC               	movwf	___flmul@b+2
  8858     0C2C  3000               	movlw	0
  8859     0C2D  00BB               	movwf	___flmul@b+1
  8860     0C2E  3000               	movlw	0
  8861     0C2F  00BA               	movwf	___flmul@b
  8862     0C30  3044               	movlw	68
  8863     0C31  00A3               	movwf	___fldiv@a+3
  8864     0C32  3080               	movlw	128
  8865     0C33  00A2               	movwf	___fldiv@a+2
  8866     0C34  3000               	movlw	0
  8867     0C35  00A1               	movwf	___fldiv@a+1
  8868     0C36  3000               	movlw	0
  8869     0C37  00A0               	movwf	___fldiv@a
  8870     0C38  1683               	bsf	3,5	;RP0=1, select bank3
  8871     0C39  1703               	bsf	3,6	;RP1=1, select bank3
  8872     0C3A  0819               	movf	(main@adcValue1+3)^(0+384),w
  8873     0C3B  1283               	bcf	3,5	;RP0=0, select bank0
  8874     0C3C  1303               	bcf	3,6	;RP1=0, select bank0
  8875     0C3D  00A7               	movwf	___fldiv@b+3
  8876     0C3E  1683               	bsf	3,5	;RP0=1, select bank3
  8877     0C3F  1703               	bsf	3,6	;RP1=1, select bank3
  8878     0C40  0818               	movf	(main@adcValue1+2)^(0+384),w
  8879     0C41  1283               	bcf	3,5	;RP0=0, select bank0
  8880     0C42  1303               	bcf	3,6	;RP1=0, select bank0
  8881     0C43  00A6               	movwf	___fldiv@b+2
  8882     0C44  1683               	bsf	3,5	;RP0=1, select bank3
  8883     0C45  1703               	bsf	3,6	;RP1=1, select bank3
  8884     0C46  0817               	movf	(main@adcValue1+1)^(0+384),w
  8885     0C47  1283               	bcf	3,5	;RP0=0, select bank0
  8886     0C48  1303               	bcf	3,6	;RP1=0, select bank0
  8887     0C49  00A5               	movwf	___fldiv@b+1
  8888     0C4A  1683               	bsf	3,5	;RP0=1, select bank3
  8889     0C4B  1703               	bsf	3,6	;RP1=1, select bank3
  8890     0C4C  0816               	movf	main@adcValue1^(0+384),w
  8891     0C4D  1283               	bcf	3,5	;RP0=0, select bank0
  8892     0C4E  1303               	bcf	3,6	;RP1=0, select bank0
  8893     0C4F  00A4               	movwf	___fldiv@b
  8894     0C50  120A  158A  2032  120A  158A  	fcall	___fldiv
  8895     0C55  1283               	bcf	3,5	;RP0=0, select bank0
  8896     0C56  1303               	bcf	3,6	;RP1=0, select bank0
  8897     0C57  0823               	movf	?___fldiv+3,w
  8898     0C58  00C1               	movwf	___flmul@a+3
  8899     0C59  0822               	movf	?___fldiv+2,w
  8900     0C5A  00C0               	movwf	___flmul@a+2
  8901     0C5B  0821               	movf	?___fldiv+1,w
  8902     0C5C  00BF               	movwf	___flmul@a+1
  8903     0C5D  0820               	movf	?___fldiv,w
  8904     0C5E  00BE               	movwf	___flmul@a
  8905     0C5F  120A  118A  24A6  120A  158A  	fcall	___flmul
  8906     0C64  1283               	bcf	3,5	;RP0=0, select bank0
  8907     0C65  1303               	bcf	3,6	;RP1=0, select bank0
  8908     0C66  083D               	movf	?___flmul+3,w
  8909     0C67  1683               	bsf	3,5	;RP0=1, select bank1
  8910     0C68  1303               	bcf	3,6	;RP1=0, select bank1
  8911     0C69  00DD               	movwf	(main@gostermeliklcd+3)^(0+128)
  8912     0C6A  1283               	bcf	3,5	;RP0=0, select bank0
  8913     0C6B  1303               	bcf	3,6	;RP1=0, select bank0
  8914     0C6C  083C               	movf	?___flmul+2,w
  8915     0C6D  1683               	bsf	3,5	;RP0=1, select bank1
  8916     0C6E  1303               	bcf	3,6	;RP1=0, select bank1
  8917     0C6F  00DC               	movwf	(main@gostermeliklcd+2)^(0+128)
  8918     0C70  1283               	bcf	3,5	;RP0=0, select bank0
  8919     0C71  1303               	bcf	3,6	;RP1=0, select bank0
  8920     0C72  083B               	movf	?___flmul+1,w
  8921     0C73  1683               	bsf	3,5	;RP0=1, select bank1
  8922     0C74  1303               	bcf	3,6	;RP1=0, select bank1
  8923     0C75  00DB               	movwf	(main@gostermeliklcd+1)^(0+128)
  8924     0C76  1283               	bcf	3,5	;RP0=0, select bank0
  8925     0C77  1303               	bcf	3,6	;RP1=0, select bank0
  8926     0C78  083A               	movf	?___flmul,w
  8927     0C79  1683               	bsf	3,5	;RP0=1, select bank1
  8928     0C7A  1303               	bcf	3,6	;RP1=0, select bank1
  8929     0C7B  00DA               	movwf	main@gostermeliklcd^(0+128)
  8930     0C7C                     l3314:
  8931                           
  8932                           ;main1.c: 364:         Lcd_Set_Cursor(2, 1);
  8933     0C7C  1283               	bcf	3,5	;RP0=0, select bank0
  8934     0C7D  1303               	bcf	3,6	;RP1=0, select bank0
  8935     0C7E  01A4               	clrf	Lcd_Set_Cursor@b
  8936     0C7F  0AA4               	incf	Lcd_Set_Cursor@b,f
  8937     0C80  3002               	movlw	2
  8938     0C81  160A  118A  22B3  120A  158A  	fcall	_Lcd_Set_Cursor
  8939     0C86                     l3316:
  8940                           
  8941                           ;main1.c: 365:         Lcd_Write_String("FeedRate:");
  8942     0C86  301F               	movlw	low (STR_10| (0+32768))
  8943     0C87  1283               	bcf	3,5	;RP0=0, select bank0
  8944     0C88  1303               	bcf	3,6	;RP1=0, select bank0
  8945     0C89  00A5               	movwf	Lcd_Write_String@a
  8946     0C8A  3091               	movlw	high (STR_10| (0+32768))
  8947     0C8B  00A6               	movwf	Lcd_Write_String@a+1
  8948     0C8C  160A  118A  226D  120A  158A  	fcall	_Lcd_Write_String
  8949     0C91                     l3318:
  8950                           
  8951                           ;main1.c: 366:         char adcString1[4];;main1.c: 367:         sprintf(adcString1, "%0
      +                          03u", (int)gostermeliklcd);
  8952     0C91  305F               	movlw	low (STR_11| (0+32768))
  8953     0C92  1283               	bcf	3,5	;RP0=0, select bank0
  8954     0C93  1303               	bcf	3,6	;RP1=0, select bank0
  8955     0C94  00AC               	movwf	sprintf@f
  8956     0C95  3091               	movlw	high (STR_11| (0+32768))
  8957     0C96  00AD               	movwf	sprintf@f+1
  8958     0C97  1683               	bsf	3,5	;RP0=1, select bank1
  8959     0C98  1303               	bcf	3,6	;RP1=0, select bank1
  8960     0C99  085D               	movf	(main@gostermeliklcd+3)^(0+128),w
  8961     0C9A  1283               	bcf	3,5	;RP0=0, select bank0
  8962     0C9B  1303               	bcf	3,6	;RP1=0, select bank0
  8963     0C9C  00A3               	movwf	___fltol@f1+3
  8964     0C9D  1683               	bsf	3,5	;RP0=1, select bank1
  8965     0C9E  1303               	bcf	3,6	;RP1=0, select bank1
  8966     0C9F  085C               	movf	(main@gostermeliklcd+2)^(0+128),w
  8967     0CA0  1283               	bcf	3,5	;RP0=0, select bank0
  8968     0CA1  1303               	bcf	3,6	;RP1=0, select bank0
  8969     0CA2  00A2               	movwf	___fltol@f1+2
  8970     0CA3  1683               	bsf	3,5	;RP0=1, select bank1
  8971     0CA4  1303               	bcf	3,6	;RP1=0, select bank1
  8972     0CA5  085B               	movf	(main@gostermeliklcd+1)^(0+128),w
  8973     0CA6  1283               	bcf	3,5	;RP0=0, select bank0
  8974     0CA7  1303               	bcf	3,6	;RP1=0, select bank0
  8975     0CA8  00A1               	movwf	___fltol@f1+1
  8976     0CA9  1683               	bsf	3,5	;RP0=1, select bank1
  8977     0CAA  1303               	bcf	3,6	;RP1=0, select bank1
  8978     0CAB  085A               	movf	main@gostermeliklcd^(0+128),w
  8979     0CAC  1283               	bcf	3,5	;RP0=0, select bank0
  8980     0CAD  1303               	bcf	3,6	;RP1=0, select bank0
  8981     0CAE  00A0               	movwf	___fltol@f1
  8982     0CAF  160A  118A  24DF  120A  158A  	fcall	___fltol
  8983     0CB4  1283               	bcf	3,5	;RP0=0, select bank0
  8984     0CB5  1303               	bcf	3,6	;RP1=0, select bank0
  8985     0CB6  0821               	movf	?___fltol+1,w
  8986     0CB7  00AF               	movwf	?_sprintf+3
  8987     0CB8  0820               	movf	?___fltol,w
  8988     0CB9  00AE               	movwf	?_sprintf+2
  8989     0CBA  30EC               	movlw	(low (main@adcString1| 0))& (0+255)
  8990     0CBB  120A  158A  2201  120A  158A  	fcall	_sprintf
  8991     0CC0                     l3320:
  8992                           
  8993                           ;main1.c: 368:         Lcd_Set_Cursor(2, 10);
  8994     0CC0  300A               	movlw	10
  8995     0CC1  1283               	bcf	3,5	;RP0=0, select bank0
  8996     0CC2  1303               	bcf	3,6	;RP1=0, select bank0
  8997     0CC3  00A4               	movwf	Lcd_Set_Cursor@b
  8998     0CC4  3002               	movlw	2
  8999     0CC5  160A  118A  22B3  120A  158A  	fcall	_Lcd_Set_Cursor
  9000     0CCA                     l3322:
  9001                           
  9002                           ;main1.c: 369:         Lcd_Write_String(adcString1);
  9003     0CCA  30EC               	movlw	(low (main@adcString1| 0))& (0+255)
  9004     0CCB  1283               	bcf	3,5	;RP0=0, select bank0
  9005     0CCC  1303               	bcf	3,6	;RP1=0, select bank0
  9006     0CCD  00A5               	movwf	Lcd_Write_String@a
  9007     0CCE  3000               	movlw	0
  9008     0CCF  00A6               	movwf	Lcd_Write_String@a+1
  9009     0CD0  160A  118A  226D  120A  158A  	fcall	_Lcd_Write_String
  9010     0CD5                     l3324:
  9011                           
  9012                           ;main1.c: 372:         Lcd_Set_Cursor(1, 1);
  9013     0CD5  1283               	bcf	3,5	;RP0=0, select bank0
  9014     0CD6  1303               	bcf	3,6	;RP1=0, select bank0
  9015     0CD7  01A4               	clrf	Lcd_Set_Cursor@b
  9016     0CD8  0AA4               	incf	Lcd_Set_Cursor@b,f
  9017     0CD9  3001               	movlw	1
  9018     0CDA  160A  118A  22B3  120A  158A  	fcall	_Lcd_Set_Cursor
  9019     0CDF                     l3326:
  9020                           
  9021                           ;main1.c: 373:         Lcd_Write_String("RPM:");
  9022     0CDF  306A               	movlw	low (STR_12| (0+32768))
  9023     0CE0  1283               	bcf	3,5	;RP0=0, select bank0
  9024     0CE1  1303               	bcf	3,6	;RP1=0, select bank0
  9025     0CE2  00A5               	movwf	Lcd_Write_String@a
  9026     0CE3  3091               	movlw	high (STR_12| (0+32768))
  9027     0CE4  00A6               	movwf	Lcd_Write_String@a+1
  9028     0CE5  160A  118A  226D  120A  158A  	fcall	_Lcd_Write_String
  9029     0CEA                     l3328:
  9030                           
  9031                           ;main1.c: 374:         char rpmString[5];;main1.c: 375: sprintf(rpmString, "%u%u%u.%u", 
      +                          binler,yuzler,onlar,birler);
  9032     0CEA  303D               	movlw	low (STR_13| (0+32768))
  9033     0CEB  1283               	bcf	3,5	;RP0=0, select bank0
  9034     0CEC  1303               	bcf	3,6	;RP1=0, select bank0
  9035     0CED  00AC               	movwf	sprintf@f
  9036     0CEE  3091               	movlw	high (STR_13| (0+32768))
  9037     0CEF  00AD               	movwf	sprintf@f+1
  9038     0CF0  1683               	bsf	3,5	;RP0=1, select bank3
  9039     0CF1  1703               	bsf	3,6	;RP1=1, select bank3
  9040     0CF2  081D               	movf	(main@binler+1)^(0+384),w
  9041     0CF3  1283               	bcf	3,5	;RP0=0, select bank0
  9042     0CF4  1303               	bcf	3,6	;RP1=0, select bank0
  9043     0CF5  00AF               	movwf	?_sprintf+3
  9044     0CF6  1683               	bsf	3,5	;RP0=1, select bank3
  9045     0CF7  1703               	bsf	3,6	;RP1=1, select bank3
  9046     0CF8  081C               	movf	main@binler^(0+384),w
  9047     0CF9  1283               	bcf	3,5	;RP0=0, select bank0
  9048     0CFA  1303               	bcf	3,6	;RP1=0, select bank0
  9049     0CFB  00AE               	movwf	?_sprintf+2
  9050     0CFC  1683               	bsf	3,5	;RP0=1, select bank3
  9051     0CFD  1703               	bsf	3,6	;RP1=1, select bank3
  9052     0CFE  081B               	movf	(main@yuzler+1)^(0+384),w
  9053     0CFF  1283               	bcf	3,5	;RP0=0, select bank0
  9054     0D00  1303               	bcf	3,6	;RP1=0, select bank0
  9055     0D01  00B1               	movwf	?_sprintf+5
  9056     0D02  1683               	bsf	3,5	;RP0=1, select bank3
  9057     0D03  1703               	bsf	3,6	;RP1=1, select bank3
  9058     0D04  081A               	movf	main@yuzler^(0+384),w
  9059     0D05  1283               	bcf	3,5	;RP0=0, select bank0
  9060     0D06  1303               	bcf	3,6	;RP1=0, select bank0
  9061     0D07  00B0               	movwf	?_sprintf+4
  9062     0D08  1683               	bsf	3,5	;RP0=1, select bank1
  9063     0D09  1303               	bcf	3,6	;RP1=0, select bank1
  9064     0D0A  0869               	movf	(main@onlar+1)^(0+128),w
  9065     0D0B  1283               	bcf	3,5	;RP0=0, select bank0
  9066     0D0C  1303               	bcf	3,6	;RP1=0, select bank0
  9067     0D0D  00B3               	movwf	?_sprintf+7
  9068     0D0E  1683               	bsf	3,5	;RP0=1, select bank1
  9069     0D0F  1303               	bcf	3,6	;RP1=0, select bank1
  9070     0D10  0868               	movf	main@onlar^(0+128),w
  9071     0D11  1283               	bcf	3,5	;RP0=0, select bank0
  9072     0D12  1303               	bcf	3,6	;RP1=0, select bank0
  9073     0D13  00B2               	movwf	?_sprintf+6
  9074     0D14  1683               	bsf	3,5	;RP0=1, select bank1
  9075     0D15  1303               	bcf	3,6	;RP1=0, select bank1
  9076     0D16  086B               	movf	(main@birler+1)^(0+128),w
  9077     0D17  1283               	bcf	3,5	;RP0=0, select bank0
  9078     0D18  1303               	bcf	3,6	;RP1=0, select bank0
  9079     0D19  00B5               	movwf	?_sprintf+9
  9080     0D1A  1683               	bsf	3,5	;RP0=1, select bank1
  9081     0D1B  1303               	bcf	3,6	;RP1=0, select bank1
  9082     0D1C  086A               	movf	main@birler^(0+128),w
  9083     0D1D  1283               	bcf	3,5	;RP0=0, select bank0
  9084     0D1E  1303               	bcf	3,6	;RP1=0, select bank0
  9085     0D1F  00B4               	movwf	?_sprintf+8
  9086     0D20  30CD               	movlw	(low (main@rpmString| 0))& (0+255)
  9087     0D21  120A  158A  2201  120A  158A  	fcall	_sprintf
  9088     0D26                     l3330:
  9089                           
  9090                           ;main1.c: 377: Lcd_Set_Cursor(1, 5);
  9091     0D26  3005               	movlw	5
  9092     0D27  1283               	bcf	3,5	;RP0=0, select bank0
  9093     0D28  1303               	bcf	3,6	;RP1=0, select bank0
  9094     0D29  00A4               	movwf	Lcd_Set_Cursor@b
  9095     0D2A  3001               	movlw	1
  9096     0D2B  160A  118A  22B3  120A  158A  	fcall	_Lcd_Set_Cursor
  9097     0D30                     l3332:
  9098                           
  9099                           ;main1.c: 378: Lcd_Write_String(rpmString);
  9100     0D30  30CD               	movlw	(low (main@rpmString| 0))& (0+255)
  9101     0D31  1283               	bcf	3,5	;RP0=0, select bank0
  9102     0D32  1303               	bcf	3,6	;RP1=0, select bank0
  9103     0D33  00A5               	movwf	Lcd_Write_String@a
  9104     0D34  3000               	movlw	0
  9105     0D35  00A6               	movwf	Lcd_Write_String@a+1
  9106     0D36  160A  118A  226D  120A  158A  	fcall	_Lcd_Write_String
  9107     0D3B                     l3334:
  9108                           
  9109                           ;main1.c: 385:  if (RC1 == 1 && (RE0 == 1 || RE2 == 1)) {
  9110     0D3B  1283               	bcf	3,5	;RP0=0, select bank0
  9111     0D3C  1303               	bcf	3,6	;RP1=0, select bank0
  9112     0D3D  1C87               	btfss	7,1	;volatile
  9113     0D3E  2D40               	goto	u4291
  9114     0D3F  2D41               	goto	u4290
  9115     0D40                     u4291:
  9116     0D40  2D68               	goto	l238
  9117     0D41                     u4290:
  9118     0D41                     l3336:
  9119     0D41  1809               	btfsc	9,0	;volatile
  9120     0D42  2D44               	goto	u4301
  9121     0D43  2D45               	goto	u4300
  9122     0D44                     u4301:
  9123     0D44  2D49               	goto	l3340
  9124     0D45                     u4300:
  9125     0D45                     l3338:
  9126     0D45  1D09               	btfss	9,2	;volatile
  9127     0D46  2D48               	goto	u4311
  9128     0D47  2D49               	goto	u4310
  9129     0D48                     u4311:
  9130     0D48  2D68               	goto	l238
  9131     0D49                     u4310:
  9132     0D49                     l3340:
  9133                           
  9134                           ;main1.c: 386:             Lcd_Set_Cursor(2, 13);
  9135     0D49  300D               	movlw	13
  9136     0D4A  00A4               	movwf	Lcd_Set_Cursor@b
  9137     0D4B  3002               	movlw	2
  9138     0D4C  160A  118A  22B3  120A  158A  	fcall	_Lcd_Set_Cursor
  9139     0D51                     l3342:
  9140                           
  9141                           ;main1.c: 387:             Lcd_Write_String(" FWD LMT");
  9142     0D51  3047               	movlw	low (STR_14| (0+32768))
  9143     0D52  1283               	bcf	3,5	;RP0=0, select bank0
  9144     0D53  1303               	bcf	3,6	;RP1=0, select bank0
  9145     0D54  00A5               	movwf	Lcd_Write_String@a
  9146     0D55  3091               	movlw	high (STR_14| (0+32768))
  9147     0D56  00A6               	movwf	Lcd_Write_String@a+1
  9148     0D57  160A  118A  226D  120A  158A  	fcall	_Lcd_Write_String
  9149     0D5C                     l3344:
  9150                           
  9151                           ;main1.c: 388:             UART_Write_Text("s0\r\n");
  9152     0D5C  3065               	movlw	low (STR_15| (0+32768))
  9153     0D5D  1283               	bcf	3,5	;RP0=0, select bank0
  9154     0D5E  1303               	bcf	3,6	;RP1=0, select bank0
  9155     0D5F  00A1               	movwf	UART_Write_Text@text
  9156     0D60  3091               	movlw	high (STR_15| (0+32768))
  9157     0D61  00A2               	movwf	UART_Write_Text@text+1
  9158     0D62  160A  118A  21E1  120A  158A  	fcall	_UART_Write_Text
  9159                           
  9160                           ;main1.c: 390:         } else if ((RE2 == 1 && RE0 == 1) || (RE2 == 1 && RE1 == 0)) {
  9161     0D67  2F47               	goto	l3422
  9162     0D68                     l238:
  9163     0D68  1D09               	btfss	9,2	;volatile
  9164     0D69  2D6B               	goto	u4321
  9165     0D6A  2D6C               	goto	u4320
  9166     0D6B                     u4321:
  9167     0D6B  2D70               	goto	l246
  9168     0D6C                     u4320:
  9169     0D6C                     l3346:
  9170     0D6C  1809               	btfsc	9,0	;volatile
  9171     0D6D  2D6F               	goto	u4331
  9172     0D6E  2D70               	goto	u4330
  9173     0D6F                     u4331:
  9174     0D6F  2D78               	goto	l3350
  9175     0D70                     u4330:
  9176     0D70                     l246:
  9177     0D70  1D09               	btfss	9,2	;volatile
  9178     0D71  2D73               	goto	u4341
  9179     0D72  2D74               	goto	u4340
  9180     0D73                     u4341:
  9181     0D73  2DCE               	goto	l242
  9182     0D74                     u4340:
  9183     0D74                     l3348:
  9184     0D74  1889               	btfsc	9,1	;volatile
  9185     0D75  2D77               	goto	u4351
  9186     0D76  2D78               	goto	u4350
  9187     0D77                     u4351:
  9188     0D77  2DCE               	goto	l242
  9189     0D78                     u4350:
  9190     0D78                     l3350:
  9191                           
  9192                           ;main1.c: 391:             Lcd_Set_Cursor(2, 13);
  9193     0D78  300D               	movlw	13
  9194     0D79  00A4               	movwf	Lcd_Set_Cursor@b
  9195     0D7A  3002               	movlw	2
  9196     0D7B  160A  118A  22B3  120A  158A  	fcall	_Lcd_Set_Cursor
  9197     0D80                     l3352:
  9198                           
  9199                           ;main1.c: 392:             Lcd_Write_String(" FWD 1.6K");
  9200     0D80  3029               	movlw	low (STR_16| (0+32768))
  9201     0D81  1283               	bcf	3,5	;RP0=0, select bank0
  9202     0D82  1303               	bcf	3,6	;RP1=0, select bank0
  9203     0D83  00A5               	movwf	Lcd_Write_String@a
  9204     0D84  3091               	movlw	high (STR_16| (0+32768))
  9205     0D85  00A6               	movwf	Lcd_Write_String@a+1
  9206     0D86  160A  118A  226D  120A  158A  	fcall	_Lcd_Write_String
  9207     0D8B                     l3354:
  9208                           
  9209                           ;main1.c: 393:             if (displayValue < 800) {
  9210     0D8B  3003               	movlw	3
  9211     0D8C  1683               	bsf	3,5	;RP0=1, select bank3
  9212     0D8D  1703               	bsf	3,6	;RP1=1, select bank3
  9213     0D8E  0227               	subwf	(main@displayValue+1)^(0+384),w
  9214     0D8F  3020               	movlw	32
  9215     0D90  1903               	skipnz
  9216     0D91  0226               	subwf	main@displayValue^(0+384),w
  9217     0D92  1803               	skipnc
  9218     0D93  2D95               	goto	u4361
  9219     0D94  2D96               	goto	u4360
  9220     0D95                     u4361:
  9221     0D95  2F47               	goto	l3422
  9222     0D96                     u4360:
  9223     0D96                     l3356:
  9224                           
  9225                           ;main1.c: 394:                 char uartMessage[8];;main1.c: 395:                 displa
      +                          yValue += 80;
  9226     0D96  3050               	movlw	80
  9227     0D97  07A6               	addwf	main@displayValue^(0+384),f
  9228     0D98  1803               	skipnc
  9229     0D99  0AA7               	incf	(main@displayValue+1)^(0+384),f
  9230     0D9A  3000               	movlw	0
  9231     0D9B  07A7               	addwf	(main@displayValue+1)^(0+384),f
  9232                           
  9233                           ;main1.c: 397:                 if (displayValue > 800) {
  9234     0D9C  3003               	movlw	3
  9235     0D9D  0227               	subwf	(main@displayValue+1)^(0+384),w
  9236     0D9E  3021               	movlw	33
  9237     0D9F  1903               	skipnz
  9238     0DA0  0226               	subwf	main@displayValue^(0+384),w
  9239     0DA1  1C03               	skipc
  9240     0DA2  2DA4               	goto	u4371
  9241     0DA3  2DA5               	goto	u4370
  9242     0DA4                     u4371:
  9243     0DA4  2DA9               	goto	l3360
  9244     0DA5                     u4370:
  9245     0DA5                     l3358:
  9246                           
  9247                           ;main1.c: 398:                     displayValue = 800;
  9248     0DA5  3020               	movlw	32
  9249     0DA6  00A6               	movwf	main@displayValue^(0+384)
  9250     0DA7  3003               	movlw	3
  9251     0DA8  00A7               	movwf	(main@displayValue^(0+384)+1)
  9252     0DA9                     l3360:
  9253                           
  9254                           ;main1.c: 400:                 sprintf(uartMessage, "s%d\r\n", displayValue);
  9255     0DA9  3059               	movlw	low (STR_17| (0+32768))
  9256     0DAA  1283               	bcf	3,5	;RP0=0, select bank0
  9257     0DAB  1303               	bcf	3,6	;RP1=0, select bank0
  9258     0DAC  00AC               	movwf	sprintf@f
  9259     0DAD  3091               	movlw	high (STR_17| (0+32768))
  9260     0DAE  00AD               	movwf	sprintf@f+1
  9261     0DAF  1683               	bsf	3,5	;RP0=1, select bank3
  9262     0DB0  1703               	bsf	3,6	;RP1=1, select bank3
  9263     0DB1  0827               	movf	(main@displayValue+1)^(0+384),w
  9264     0DB2  1283               	bcf	3,5	;RP0=0, select bank0
  9265     0DB3  1303               	bcf	3,6	;RP1=0, select bank0
  9266     0DB4  00AF               	movwf	?_sprintf+3
  9267     0DB5  1683               	bsf	3,5	;RP0=1, select bank3
  9268     0DB6  1703               	bsf	3,6	;RP1=1, select bank3
  9269     0DB7  0826               	movf	main@displayValue^(0+384),w
  9270     0DB8  1283               	bcf	3,5	;RP0=0, select bank0
  9271     0DB9  1303               	bcf	3,6	;RP1=0, select bank0
  9272     0DBA  00AE               	movwf	?_sprintf+2
  9273     0DBB  30BD               	movlw	(low (main@uartMessage| 0))& (0+255)
  9274     0DBC  120A  158A  2201  120A  158A  	fcall	_sprintf
  9275     0DC1                     l3362:
  9276                           
  9277                           ;main1.c: 401:                 UART_Write_Text(uartMessage);
  9278     0DC1  30BD               	movlw	(low (main@uartMessage| 0))& (0+255)
  9279     0DC2  1283               	bcf	3,5	;RP0=0, select bank0
  9280     0DC3  1303               	bcf	3,6	;RP1=0, select bank0
  9281     0DC4  00A1               	movwf	UART_Write_Text@text
  9282     0DC5  3000               	movlw	0
  9283     0DC6  00A2               	movwf	UART_Write_Text@text+1
  9284     0DC7  160A  118A  21E1  120A  158A  	fcall	_UART_Write_Text
  9285     0DCC  2F47               	goto	l3422
  9286     0DCD                     l247:	
  9287                           ;main1.c: 402:             }
  9288                           
  9289                           
  9290                           ;main1.c: 404:         } else if (RE0 == 1) {
  9291     0DCD  2F47               	goto	l3422
  9292     0DCE                     l242:
  9293     0DCE  1C09               	btfss	9,0	;volatile
  9294     0DCF  2DD1               	goto	u4381
  9295     0DD0  2DD2               	goto	u4380
  9296     0DD1                     u4381:
  9297     0DD1  2E09               	goto	l250
  9298     0DD2                     u4380:
  9299     0DD2                     l3364:
  9300                           
  9301                           ;main1.c: 405:             Lcd_Set_Cursor(2, 13);
  9302     0DD2  300D               	movlw	13
  9303     0DD3  00A4               	movwf	Lcd_Set_Cursor@b
  9304     0DD4  3002               	movlw	2
  9305     0DD5  160A  118A  22B3  120A  158A  	fcall	_Lcd_Set_Cursor
  9306     0DDA                     l3366:
  9307                           
  9308                           ;main1.c: 406:             Lcd_Write_String(" FWD          ");
  9309     0DDA  30CD               	movlw	low (STR_18| (0+32768))
  9310     0DDB  1283               	bcf	3,5	;RP0=0, select bank0
  9311     0DDC  1303               	bcf	3,6	;RP1=0, select bank0
  9312     0DDD  00A5               	movwf	Lcd_Write_String@a
  9313     0DDE  3090               	movlw	high (STR_18| (0+32768))
  9314     0DDF  00A6               	movwf	Lcd_Write_String@a+1
  9315     0DE0  160A  118A  226D  120A  158A  	fcall	_Lcd_Write_String
  9316     0DE5                     l3368:
  9317                           
  9318                           ;main1.c: 407:             char combinedText[20];;main1.c: 408:             sprintf(comb
      +                          inedText, "s%d\r\n", displayValue);
  9319     0DE5  3059               	movlw	low (STR_17| (0+32768))
  9320     0DE6  1283               	bcf	3,5	;RP0=0, select bank0
  9321     0DE7  1303               	bcf	3,6	;RP1=0, select bank0
  9322     0DE8  00AC               	movwf	sprintf@f
  9323     0DE9  3091               	movlw	high (STR_17| (0+32768))
  9324     0DEA  00AD               	movwf	sprintf@f+1
  9325     0DEB  1683               	bsf	3,5	;RP0=1, select bank3
  9326     0DEC  1703               	bsf	3,6	;RP1=1, select bank3
  9327     0DED  0827               	movf	(main@displayValue+1)^(0+384),w
  9328     0DEE  1283               	bcf	3,5	;RP0=0, select bank0
  9329     0DEF  1303               	bcf	3,6	;RP1=0, select bank0
  9330     0DF0  00AF               	movwf	?_sprintf+3
  9331     0DF1  1683               	bsf	3,5	;RP0=1, select bank3
  9332     0DF2  1703               	bsf	3,6	;RP1=1, select bank3
  9333     0DF3  0826               	movf	main@displayValue^(0+384),w
  9334     0DF4  1283               	bcf	3,5	;RP0=0, select bank0
  9335     0DF5  1303               	bcf	3,6	;RP1=0, select bank0
  9336     0DF6  00AE               	movwf	?_sprintf+2
  9337     0DF7  305A               	movlw	(low (main@combinedText| 0))& (0+255)
  9338     0DF8  120A  158A  2201  120A  158A  	fcall	_sprintf
  9339     0DFD                     l3370:
  9340                           
  9341                           ;main1.c: 409:             UART_Write_Text(combinedText);
  9342     0DFD  305A               	movlw	(low (main@combinedText| 0))& (0+255)
  9343     0DFE  1283               	bcf	3,5	;RP0=0, select bank0
  9344     0DFF  1303               	bcf	3,6	;RP1=0, select bank0
  9345     0E00  00A1               	movwf	UART_Write_Text@text
  9346     0E01  3000               	movlw	0
  9347     0E02  00A2               	movwf	UART_Write_Text@text+1
  9348     0E03  160A  118A  21E1  120A  158A  	fcall	_UART_Write_Text
  9349                           
  9350                           ;main1.c: 412:         } else if (RC2 == 1 && (RE1 == 1 || RC0 == 1)) {
  9351     0E08  2F47               	goto	l3422
  9352     0E09                     l250:
  9353     0E09  1D07               	btfss	7,2	;volatile
  9354     0E0A  2E0C               	goto	u4391
  9355     0E0B  2E0D               	goto	u4390
  9356     0E0C                     u4391:
  9357     0E0C  2E34               	goto	l252
  9358     0E0D                     u4390:
  9359     0E0D                     l3372:
  9360     0E0D  1889               	btfsc	9,1	;volatile
  9361     0E0E  2E10               	goto	u4401
  9362     0E0F  2E11               	goto	u4400
  9363     0E10                     u4401:
  9364     0E10  2E15               	goto	l3376
  9365     0E11                     u4400:
  9366     0E11                     l3374:
  9367     0E11  1C07               	btfss	7,0	;volatile
  9368     0E12  2E14               	goto	u4411
  9369     0E13  2E15               	goto	u4410
  9370     0E14                     u4411:
  9371     0E14  2E34               	goto	l252
  9372     0E15                     u4410:
  9373     0E15                     l3376:
  9374                           
  9375                           ;main1.c: 413:             Lcd_Set_Cursor(2, 13);
  9376     0E15  300D               	movlw	13
  9377     0E16  00A4               	movwf	Lcd_Set_Cursor@b
  9378     0E17  3002               	movlw	2
  9379     0E18  160A  118A  22B3  120A  158A  	fcall	_Lcd_Set_Cursor
  9380     0E1D                     l3378:
  9381                           
  9382                           ;main1.c: 414:             Lcd_Write_String(" REW LMT");
  9383     0E1D  3050               	movlw	low (STR_20| (0+32768))
  9384     0E1E  1283               	bcf	3,5	;RP0=0, select bank0
  9385     0E1F  1303               	bcf	3,6	;RP1=0, select bank0
  9386     0E20  00A5               	movwf	Lcd_Write_String@a
  9387     0E21  3091               	movlw	high (STR_20| (0+32768))
  9388     0E22  00A6               	movwf	Lcd_Write_String@a+1
  9389     0E23  160A  118A  226D  120A  158A  	fcall	_Lcd_Write_String
  9390     0E28                     l3380:
  9391                           
  9392                           ;main1.c: 415:             UART_Write_Text("s0\r\n");
  9393     0E28  3065               	movlw	low (STR_15| (0+32768))
  9394     0E29  1283               	bcf	3,5	;RP0=0, select bank0
  9395     0E2A  1303               	bcf	3,6	;RP1=0, select bank0
  9396     0E2B  00A1               	movwf	UART_Write_Text@text
  9397     0E2C  3091               	movlw	high (STR_15| (0+32768))
  9398     0E2D  00A2               	movwf	UART_Write_Text@text+1
  9399     0E2E  160A  118A  21E1  120A  158A  	fcall	_UART_Write_Text
  9400                           
  9401                           ;main1.c: 417:         } else if ((RC0 == 1 && RE1 == 1) || (RC0 == 1 && RE0 == 0)) {
  9402     0E33  2F47               	goto	l3422
  9403     0E34                     l252:
  9404     0E34  1C07               	btfss	7,0	;volatile
  9405     0E35  2E37               	goto	u4421
  9406     0E36  2E38               	goto	u4420
  9407     0E37                     u4421:
  9408     0E37  2E3C               	goto	l260
  9409     0E38                     u4420:
  9410     0E38                     l3382:
  9411     0E38  1889               	btfsc	9,1	;volatile
  9412     0E39  2E3B               	goto	u4431
  9413     0E3A  2E3C               	goto	u4430
  9414     0E3B                     u4431:
  9415     0E3B  2E44               	goto	l3386
  9416     0E3C                     u4430:
  9417     0E3C                     l260:
  9418     0E3C  1C07               	btfss	7,0	;volatile
  9419     0E3D  2E3F               	goto	u4441
  9420     0E3E  2E40               	goto	u4440
  9421     0E3F                     u4441:
  9422     0E3F  2ED5               	goto	l256
  9423     0E40                     u4440:
  9424     0E40                     l3384:
  9425     0E40  1809               	btfsc	9,0	;volatile
  9426     0E41  2E43               	goto	u4451
  9427     0E42  2E44               	goto	u4450
  9428     0E43                     u4451:
  9429     0E43  2ED5               	goto	l256
  9430     0E44                     u4450:
  9431     0E44                     l3386:
  9432                           
  9433                           ;main1.c: 418:             Lcd_Set_Cursor(2, 13);
  9434     0E44  300D               	movlw	13
  9435     0E45  00A4               	movwf	Lcd_Set_Cursor@b
  9436     0E46  3002               	movlw	2
  9437     0E47  160A  118A  22B3  120A  158A  	fcall	_Lcd_Set_Cursor
  9438     0E4C                     l3388:
  9439                           
  9440                           ;main1.c: 419:             Lcd_Write_String(" REW 1.6K");
  9441     0E4C  3033               	movlw	low (STR_22| (0+32768))
  9442     0E4D  1283               	bcf	3,5	;RP0=0, select bank0
  9443     0E4E  1303               	bcf	3,6	;RP1=0, select bank0
  9444     0E4F  00A5               	movwf	Lcd_Write_String@a
  9445     0E50  3091               	movlw	high (STR_22| (0+32768))
  9446     0E51  00A6               	movwf	Lcd_Write_String@a+1
  9447     0E52  160A  118A  226D  120A  158A  	fcall	_Lcd_Write_String
  9448     0E57                     l3390:
  9449                           
  9450                           ;main1.c: 420:             int negativeFeedValue = -displayValue;
  9451     0E57  1683               	bsf	3,5	;RP0=1, select bank3
  9452     0E58  1703               	bsf	3,6	;RP1=1, select bank3
  9453     0E59  0926               	comf	main@displayValue^(0+384),w
  9454     0E5A  1283               	bcf	3,5	;RP0=0, select bank0
  9455     0E5B  1303               	bcf	3,6	;RP1=0, select bank0
  9456     0E5C  00D4               	movwf	??_main
  9457     0E5D  1683               	bsf	3,5	;RP0=1, select bank3
  9458     0E5E  1703               	bsf	3,6	;RP1=1, select bank3
  9459     0E5F  0927               	comf	(main@displayValue+1)^(0+384),w
  9460     0E60  1283               	bcf	3,5	;RP0=0, select bank0
  9461     0E61  1303               	bcf	3,6	;RP1=0, select bank0
  9462     0E62  00D5               	movwf	??_main+1
  9463     0E63  0AD4               	incf	??_main,f
  9464     0E64  1903               	skipnz
  9465     0E65  0AD5               	incf	??_main+1,f
  9466     0E66  0854               	movf	??_main,w
  9467     0E67  1683               	bsf	3,5	;RP0=1, select bank3
  9468     0E68  1703               	bsf	3,6	;RP1=1, select bank3
  9469     0E69  00A4               	movwf	main@negativeFeedValue^(0+384)
  9470     0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  9471     0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  9472     0E6C  0855               	movf	??_main+1,w
  9473     0E6D  1683               	bsf	3,5	;RP0=1, select bank3
  9474     0E6E  1703               	bsf	3,6	;RP1=1, select bank3
  9475     0E6F  00A5               	movwf	(main@negativeFeedValue+1)^(0+384)
  9476     0E70                     l3392:
  9477                           
  9478                           ;main1.c: 421:             if (negativeFeedValue > -800) {
  9479     0E70  0825               	movf	(main@negativeFeedValue+1)^(0+384),w
  9480     0E71  3A80               	xorlw	128
  9481     0E72  00FF               	movwf	btemp+1
  9482     0E73  307C               	movlw	124
  9483     0E74  027F               	subwf	btemp+1,w
  9484     0E75  1D03               	skipz
  9485     0E76  2E79               	goto	u4465
  9486     0E77  30E1               	movlw	225
  9487     0E78  0224               	subwf	main@negativeFeedValue^(0+384),w
  9488     0E79                     u4465:
  9489     0E79  1C03               	skipc
  9490     0E7A  2E7C               	goto	u4461
  9491     0E7B  2E7D               	goto	u4460
  9492     0E7C                     u4461:
  9493     0E7C  2DCD               	goto	l247
  9494     0E7D                     u4460:
  9495     0E7D                     l3394:
  9496                           
  9497                           ;main1.c: 422:                 char uartMessage[8];;main1.c: 423:                 negati
      +                          veFeedValue -= 80;
  9498     0E7D  30B0               	movlw	176
  9499     0E7E  1683               	bsf	3,5	;RP0=1, select bank3
  9500     0E7F  1703               	bsf	3,6	;RP1=1, select bank3
  9501     0E80  07A4               	addwf	main@negativeFeedValue^(0+384),f
  9502     0E81  1803               	skipnc
  9503     0E82  0AA5               	incf	(main@negativeFeedValue+1)^(0+384),f
  9504     0E83  30FF               	movlw	255
  9505     0E84  07A5               	addwf	(main@negativeFeedValue+1)^(0+384),f
  9506     0E85                     l3396:
  9507                           
  9508                           ;main1.c: 424:                 if (negativeFeedValue < -800) {
  9509     0E85  0825               	movf	(main@negativeFeedValue+1)^(0+384),w
  9510     0E86  3A80               	xorlw	128
  9511     0E87  00FF               	movwf	btemp+1
  9512     0E88  307C               	movlw	124
  9513     0E89  027F               	subwf	btemp+1,w
  9514     0E8A  1D03               	skipz
  9515     0E8B  2E8E               	goto	u4475
  9516     0E8C  30E0               	movlw	224
  9517     0E8D  0224               	subwf	main@negativeFeedValue^(0+384),w
  9518     0E8E                     u4475:
  9519     0E8E  1803               	skipnc
  9520     0E8F  2E91               	goto	u4471
  9521     0E90  2E92               	goto	u4470
  9522     0E91                     u4471:
  9523     0E91  2E98               	goto	l3400
  9524     0E92                     u4470:
  9525     0E92                     l3398:
  9526                           
  9527                           ;main1.c: 425:                     negativeFeedValue = -800;
  9528     0E92  30E0               	movlw	224
  9529     0E93  1683               	bsf	3,5	;RP0=1, select bank3
  9530     0E94  1703               	bsf	3,6	;RP1=1, select bank3
  9531     0E95  00A4               	movwf	main@negativeFeedValue^(0+384)
  9532     0E96  30FC               	movlw	252
  9533     0E97  00A5               	movwf	(main@negativeFeedValue^(0+384)+1)
  9534     0E98                     l3400:
  9535                           
  9536                           ;main1.c: 427:                 displayValue=-negativeFeedValue;
  9537     0E98  1683               	bsf	3,5	;RP0=1, select bank3
  9538     0E99  1703               	bsf	3,6	;RP1=1, select bank3
  9539     0E9A  0924               	comf	main@negativeFeedValue^(0+384),w
  9540     0E9B  1283               	bcf	3,5	;RP0=0, select bank0
  9541     0E9C  1303               	bcf	3,6	;RP1=0, select bank0
  9542     0E9D  00D4               	movwf	??_main
  9543     0E9E  1683               	bsf	3,5	;RP0=1, select bank3
  9544     0E9F  1703               	bsf	3,6	;RP1=1, select bank3
  9545     0EA0  0925               	comf	(main@negativeFeedValue+1)^(0+384),w
  9546     0EA1  1283               	bcf	3,5	;RP0=0, select bank0
  9547     0EA2  1303               	bcf	3,6	;RP1=0, select bank0
  9548     0EA3  00D5               	movwf	??_main+1
  9549     0EA4  0AD4               	incf	??_main,f
  9550     0EA5  1903               	skipnz
  9551     0EA6  0AD5               	incf	??_main+1,f
  9552     0EA7  0854               	movf	??_main,w
  9553     0EA8  1683               	bsf	3,5	;RP0=1, select bank3
  9554     0EA9  1703               	bsf	3,6	;RP1=1, select bank3
  9555     0EAA  00A6               	movwf	main@displayValue^(0+384)
  9556     0EAB  1283               	bcf	3,5	;RP0=0, select bank0
  9557     0EAC  1303               	bcf	3,6	;RP1=0, select bank0
  9558     0EAD  0855               	movf	??_main+1,w
  9559     0EAE  1683               	bsf	3,5	;RP0=1, select bank3
  9560     0EAF  1703               	bsf	3,6	;RP1=1, select bank3
  9561     0EB0  00A7               	movwf	(main@displayValue+1)^(0+384)
  9562     0EB1                     l3402:
  9563                           
  9564                           ;main1.c: 428:                 sprintf(uartMessage, "s%d\r\n", negativeFeedValue);
  9565     0EB1  3059               	movlw	low (STR_17| (0+32768))
  9566     0EB2  1283               	bcf	3,5	;RP0=0, select bank0
  9567     0EB3  1303               	bcf	3,6	;RP1=0, select bank0
  9568     0EB4  00AC               	movwf	sprintf@f
  9569     0EB5  3091               	movlw	high (STR_17| (0+32768))
  9570     0EB6  00AD               	movwf	sprintf@f+1
  9571     0EB7  1683               	bsf	3,5	;RP0=1, select bank3
  9572     0EB8  1703               	bsf	3,6	;RP1=1, select bank3
  9573     0EB9  0825               	movf	(main@negativeFeedValue+1)^(0+384),w
  9574     0EBA  1283               	bcf	3,5	;RP0=0, select bank0
  9575     0EBB  1303               	bcf	3,6	;RP1=0, select bank0
  9576     0EBC  00AF               	movwf	?_sprintf+3
  9577     0EBD  1683               	bsf	3,5	;RP0=1, select bank3
  9578     0EBE  1703               	bsf	3,6	;RP1=1, select bank3
  9579     0EBF  0824               	movf	main@negativeFeedValue^(0+384),w
  9580     0EC0  1283               	bcf	3,5	;RP0=0, select bank0
  9581     0EC1  1303               	bcf	3,6	;RP1=0, select bank0
  9582     0EC2  00AE               	movwf	?_sprintf+2
  9583     0EC3  30C5               	movlw	(low (main@uartMessage_373| 0))& (0+255)
  9584     0EC4  120A  158A  2201  120A  158A  	fcall	_sprintf
  9585     0EC9                     l3404:
  9586                           
  9587                           ;main1.c: 429:                 UART_Write_Text(uartMessage);
  9588     0EC9  30C5               	movlw	(low (main@uartMessage_373| 0))& (0+255)
  9589     0ECA  1283               	bcf	3,5	;RP0=0, select bank0
  9590     0ECB  1303               	bcf	3,6	;RP1=0, select bank0
  9591     0ECC  00A1               	movwf	UART_Write_Text@text
  9592     0ECD  3000               	movlw	0
  9593     0ECE  00A2               	movwf	UART_Write_Text@text+1
  9594     0ECF  160A  118A  21E1  120A  158A  	fcall	_UART_Write_Text
  9595     0ED4  2F47               	goto	l3422
  9596     0ED5                     l256:
  9597     0ED5  1C89               	btfss	9,1	;volatile
  9598     0ED6  2ED8               	goto	u4481
  9599     0ED7  2ED9               	goto	u4480
  9600     0ED8                     u4481:
  9601     0ED8  2F29               	goto	l3416
  9602     0ED9                     u4480:
  9603     0ED9                     l3406:
  9604                           
  9605                           ;main1.c: 433:             Lcd_Set_Cursor(2, 13);
  9606     0ED9  300D               	movlw	13
  9607     0EDA  00A4               	movwf	Lcd_Set_Cursor@b
  9608     0EDB  3002               	movlw	2
  9609     0EDC  160A  118A  22B3  120A  158A  	fcall	_Lcd_Set_Cursor
  9610     0EE1                     l3408:
  9611                           
  9612                           ;main1.c: 434:             Lcd_Write_String(" REW         ");
  9613     0EE1  30EB               	movlw	low (STR_24| (0+32768))
  9614     0EE2  1283               	bcf	3,5	;RP0=0, select bank0
  9615     0EE3  1303               	bcf	3,6	;RP1=0, select bank0
  9616     0EE4  00A5               	movwf	Lcd_Write_String@a
  9617     0EE5  3090               	movlw	high (STR_24| (0+32768))
  9618     0EE6  00A6               	movwf	Lcd_Write_String@a+1
  9619     0EE7  160A  118A  226D  120A  158A  	fcall	_Lcd_Write_String
  9620     0EEC                     l3410:
  9621                           
  9622                           ;main1.c: 435:             int negativeDisplayValue = -displayValue;
  9623     0EEC  1683               	bsf	3,5	;RP0=1, select bank3
  9624     0EED  1703               	bsf	3,6	;RP1=1, select bank3
  9625     0EEE  0926               	comf	main@displayValue^(0+384),w
  9626     0EEF  1283               	bcf	3,5	;RP0=0, select bank0
  9627     0EF0  1303               	bcf	3,6	;RP1=0, select bank0
  9628     0EF1  00D4               	movwf	??_main
  9629     0EF2  1683               	bsf	3,5	;RP0=1, select bank3
  9630     0EF3  1703               	bsf	3,6	;RP1=1, select bank3
  9631     0EF4  0927               	comf	(main@displayValue+1)^(0+384),w
  9632     0EF5  1283               	bcf	3,5	;RP0=0, select bank0
  9633     0EF6  1303               	bcf	3,6	;RP1=0, select bank0
  9634     0EF7  00D5               	movwf	??_main+1
  9635     0EF8  0AD4               	incf	??_main,f
  9636     0EF9  1903               	skipnz
  9637     0EFA  0AD5               	incf	??_main+1,f
  9638     0EFB  0854               	movf	??_main,w
  9639     0EFC  1683               	bsf	3,5	;RP0=1, select bank3
  9640     0EFD  1703               	bsf	3,6	;RP1=1, select bank3
  9641     0EFE  0090               	movwf	main@negativeDisplayValue^(0+384)
  9642     0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  9643     0F00  1303               	bcf	3,6	;RP1=0, select bank0
  9644     0F01  0855               	movf	??_main+1,w
  9645     0F02  1683               	bsf	3,5	;RP0=1, select bank3
  9646     0F03  1703               	bsf	3,6	;RP1=1, select bank3
  9647     0F04  0091               	movwf	(main@negativeDisplayValue+1)^(0+384)
  9648     0F05                     l3412:
  9649                           
  9650                           ;main1.c: 436:             char combinedText[20];;main1.c: 437:             sprintf(comb
      +                          inedText, "s%d\r\n", negativeDisplayValue);
  9651     0F05  3059               	movlw	low (STR_17| (0+32768))
  9652     0F06  1283               	bcf	3,5	;RP0=0, select bank0
  9653     0F07  1303               	bcf	3,6	;RP1=0, select bank0
  9654     0F08  00AC               	movwf	sprintf@f
  9655     0F09  3091               	movlw	high (STR_17| (0+32768))
  9656     0F0A  00AD               	movwf	sprintf@f+1
  9657     0F0B  1683               	bsf	3,5	;RP0=1, select bank3
  9658     0F0C  1703               	bsf	3,6	;RP1=1, select bank3
  9659     0F0D  0811               	movf	(main@negativeDisplayValue+1)^(0+384),w
  9660     0F0E  1283               	bcf	3,5	;RP0=0, select bank0
  9661     0F0F  1303               	bcf	3,6	;RP1=0, select bank0
  9662     0F10  00AF               	movwf	?_sprintf+3
  9663     0F11  1683               	bsf	3,5	;RP0=1, select bank3
  9664     0F12  1703               	bsf	3,6	;RP1=1, select bank3
  9665     0F13  0810               	movf	main@negativeDisplayValue^(0+384),w
  9666     0F14  1283               	bcf	3,5	;RP0=0, select bank0
  9667     0F15  1303               	bcf	3,6	;RP1=0, select bank0
  9668     0F16  00AE               	movwf	?_sprintf+2
  9669     0F17  30A0               	movlw	(low (main@combinedText_377| 0))& (0+255)
  9670     0F18  120A  158A  2201  120A  158A  	fcall	_sprintf
  9671     0F1D                     l3414:
  9672                           
  9673                           ;main1.c: 438:             UART_Write_Text(combinedText);
  9674     0F1D  30A0               	movlw	(low (main@combinedText_377| 0))& (0+255)
  9675     0F1E  1283               	bcf	3,5	;RP0=0, select bank0
  9676     0F1F  1303               	bcf	3,6	;RP1=0, select bank0
  9677     0F20  00A1               	movwf	UART_Write_Text@text
  9678     0F21  3000               	movlw	0
  9679     0F22  00A2               	movwf	UART_Write_Text@text+1
  9680     0F23  160A  118A  21E1  120A  158A  	fcall	_UART_Write_Text
  9681                           
  9682                           ;main1.c: 439:         } else {
  9683     0F28  2F47               	goto	l3422
  9684     0F29                     l3416:
  9685                           
  9686                           ;main1.c: 441:             Lcd_Set_Cursor(2, 13);
  9687     0F29  300D               	movlw	13
  9688     0F2A  00A4               	movwf	Lcd_Set_Cursor@b
  9689     0F2B  3002               	movlw	2
  9690     0F2C  160A  118A  22B3  120A  158A  	fcall	_Lcd_Set_Cursor
  9691     0F31                     l3418:
  9692                           
  9693                           ;main1.c: 442:             Lcd_Write_String(" STOP       ");
  9694     0F31  3007               	movlw	low (STR_26| (0+32768))
  9695     0F32  1283               	bcf	3,5	;RP0=0, select bank0
  9696     0F33  1303               	bcf	3,6	;RP1=0, select bank0
  9697     0F34  00A5               	movwf	Lcd_Write_String@a
  9698     0F35  3091               	movlw	high (STR_26| (0+32768))
  9699     0F36  00A6               	movwf	Lcd_Write_String@a+1
  9700     0F37  160A  118A  226D  120A  158A  	fcall	_Lcd_Write_String
  9701     0F3C                     l3420:
  9702                           
  9703                           ;main1.c: 443:             UART_Write_Text("s0\r\n");
  9704     0F3C  3065               	movlw	low (STR_15| (0+32768))
  9705     0F3D  1283               	bcf	3,5	;RP0=0, select bank0
  9706     0F3E  1303               	bcf	3,6	;RP1=0, select bank0
  9707     0F3F  00A1               	movwf	UART_Write_Text@text
  9708     0F40  3091               	movlw	high (STR_15| (0+32768))
  9709     0F41  00A2               	movwf	UART_Write_Text@text+1
  9710     0F42  160A  118A  21E1  120A  158A  	fcall	_UART_Write_Text
  9711     0F47                     l3422:
  9712                           
  9713                           ;main1.c: 450:         if((RC1==1) &&( RE0==1 || RE2 )){
  9714     0F47  1283               	bcf	3,5	;RP0=0, select bank0
  9715     0F48  1303               	bcf	3,6	;RP1=0, select bank0
  9716     0F49  1C87               	btfss	7,1	;volatile
  9717     0F4A  2F4C               	goto	u4491
  9718     0F4B  2F4D               	goto	u4490
  9719     0F4C                     u4491:
  9720     0F4C  2F59               	goto	l266
  9721     0F4D                     u4490:
  9722     0F4D                     l3424:
  9723     0F4D  1809               	btfsc	9,0	;volatile
  9724     0F4E  2F50               	goto	u4501
  9725     0F4F  2F51               	goto	u4500
  9726     0F50                     u4501:
  9727     0F50  2F55               	goto	l268
  9728     0F51                     u4500:
  9729     0F51                     l3426:
  9730     0F51  1D09               	btfss	9,2	;volatile
  9731     0F52  2F54               	goto	u4511
  9732     0F53  2F55               	goto	u4510
  9733     0F54                     u4511:
  9734     0F54  2F59               	goto	l266
  9735     0F55                     u4510:
  9736     0F55                     l268:
  9737                           
  9738                           ;main1.c: 452:             RA4=1;
  9739     0F55  1283               	bcf	3,5	;RP0=0, select bank0
  9740     0F56  1303               	bcf	3,6	;RP1=0, select bank0
  9741     0F57  1605               	bsf	5,4	;volatile
  9742                           
  9743                           ;main1.c: 453:         }
  9744     0F58  2FFA               	goto	l274
  9745     0F59                     l266:	
  9746                           ;main1.c: 454:         else if(( RC2==1) && (RE1==1 || RC0)){
  9747                           
  9748     0F59  1D07               	btfss	7,2	;volatile
  9749     0F5A  2F5C               	goto	u4521
  9750     0F5B  2F5D               	goto	u4520
  9751     0F5C                     u4521:
  9752     0F5C  2F66               	goto	l270
  9753     0F5D                     u4520:
  9754     0F5D                     l3428:
  9755     0F5D  1889               	btfsc	9,1	;volatile
  9756     0F5E  2F60               	goto	u4531
  9757     0F5F  2F61               	goto	u4530
  9758     0F60                     u4531:
  9759     0F60  2F55               	goto	l268
  9760     0F61                     u4530:
  9761     0F61                     l3430:
  9762     0F61  1C07               	btfss	7,0	;volatile
  9763     0F62  2F64               	goto	u4541
  9764     0F63  2F65               	goto	u4540
  9765     0F64                     u4541:
  9766     0F64  2F66               	goto	l270
  9767     0F65                     u4540:
  9768     0F65  2F55               	goto	l268
  9769     0F66                     l270:	
  9770                           ;main1.c: 458:         else {
  9771                           
  9772                           
  9773                           ;main1.c: 459:             RA4=0;
  9774     0F66  1205               	bcf	5,4	;volatile
  9775     0F67  2FFA               	goto	l274
  9776     0F68                     l220:	
  9777                           ;main1.c: 464: else if( RC3==1) {
  9778                           
  9779     0F68  1D87               	btfss	7,3	;volatile
  9780     0F69  2F6B               	goto	u4551
  9781     0F6A  2F6C               	goto	u4550
  9782     0F6B                     u4551:
  9783     0F6B  2FC2               	goto	l275
  9784     0F6C                     u4550:
  9785     0F6C                     l3432:
  9786                           
  9787                           ;main1.c: 469:     Lcd_Set_Cursor(1,1);
  9788     0F6C  01A4               	clrf	Lcd_Set_Cursor@b
  9789     0F6D  0AA4               	incf	Lcd_Set_Cursor@b,f
  9790     0F6E  3001               	movlw	1
  9791     0F6F  160A  118A  22B3  120A  158A  	fcall	_Lcd_Set_Cursor
  9792     0F74                     l3434:
  9793                           
  9794                           ;main1.c: 470:             Lcd_Write_String("   FEED RATE ERROR       ");
  9795     0F74  3037               	movlw	low (STR_28| (0+32768))
  9796     0F75  1283               	bcf	3,5	;RP0=0, select bank0
  9797     0F76  1303               	bcf	3,6	;RP1=0, select bank0
  9798     0F77  00A5               	movwf	Lcd_Write_String@a
  9799     0F78  3090               	movlw	high (STR_28| (0+32768))
  9800     0F79  00A6               	movwf	Lcd_Write_String@a+1
  9801     0F7A  160A  118A  226D  120A  158A  	fcall	_Lcd_Write_String
  9802     0F7F                     l3436:
  9803                           
  9804                           ;main1.c: 471:     Lcd_Set_Cursor(2,1);
  9805     0F7F  1283               	bcf	3,5	;RP0=0, select bank0
  9806     0F80  1303               	bcf	3,6	;RP1=0, select bank0
  9807     0F81  01A4               	clrf	Lcd_Set_Cursor@b
  9808     0F82  0AA4               	incf	Lcd_Set_Cursor@b,f
  9809     0F83  3002               	movlw	2
  9810     0F84  160A  118A  22B3  120A  158A  	fcall	_Lcd_Set_Cursor
  9811                           
  9812                           ;main1.c: 472:             Lcd_Write_String("   ILERLEME HATASI        ");
  9813     0F89  301C               	movlw	low (STR_29| (0+32768))
  9814     0F8A  1283               	bcf	3,5	;RP0=0, select bank0
  9815     0F8B  1303               	bcf	3,6	;RP1=0, select bank0
  9816     0F8C  00A5               	movwf	Lcd_Write_String@a
  9817     0F8D  3090               	movlw	high (STR_29| (0+32768))
  9818     0F8E  00A6               	movwf	Lcd_Write_String@a+1
  9819     0F8F  160A  118A  226D  120A  158A  	fcall	_Lcd_Write_String
  9820                           
  9821                           ;main1.c: 473:      UART_Write_Text("s0\r\n");
  9822     0F94  3065               	movlw	low (STR_15| (0+32768))
  9823     0F95  1283               	bcf	3,5	;RP0=0, select bank0
  9824     0F96  1303               	bcf	3,6	;RP1=0, select bank0
  9825     0F97  00A1               	movwf	UART_Write_Text@text
  9826     0F98  3091               	movlw	high (STR_15| (0+32768))
  9827     0F99  00A2               	movwf	UART_Write_Text@text+1
  9828     0F9A  160A  118A  21E1  120A  158A  	fcall	_UART_Write_Text
  9829     0F9F                     l3438:
  9830                           
  9831                           ;main1.c: 474:       RA4=1;
  9832     0F9F  1283               	bcf	3,5	;RP0=0, select bank0
  9833     0FA0  1303               	bcf	3,6	;RP1=0, select bank0
  9834     0FA1  1605               	bsf	5,4	;volatile
  9835     0FA2                     l3440:
  9836                           
  9837                           ;main1.c: 475:       _delay((unsigned long)((1000)*(4000000/4000.0)));
  9838     0FA2  3006               	movlw	6
  9839     0FA3  1283               	bcf	3,5	;RP0=0, select bank0
  9840     0FA4  1303               	bcf	3,6	;RP1=0, select bank0
  9841     0FA5  00D6               	movwf	??_main+2
  9842     0FA6  3013               	movlw	19
  9843     0FA7  00D5               	movwf	??_main+1
  9844     0FA8  30AD               	movlw	173
  9845     0FA9  00D4               	movwf	??_main
  9846     0FAA                     u4637:
  9847     0FAA  0BD4               	decfsz	??_main,f
  9848     0FAB  2FAA               	goto	u4637
  9849     0FAC  0BD5               	decfsz	??_main+1,f
  9850     0FAD  2FAA               	goto	u4637
  9851     0FAE  0BD6               	decfsz	??_main+2,f
  9852     0FAF  2FAA               	goto	u4637
  9853     0FB0                     l3442:
  9854                           
  9855                           ;main1.c: 476:       RA4=0;
  9856     0FB0  1283               	bcf	3,5	;RP0=0, select bank0
  9857     0FB1  1303               	bcf	3,6	;RP1=0, select bank0
  9858     0FB2  1205               	bcf	5,4	;volatile
  9859     0FB3                     l3444:
  9860                           
  9861                           ;main1.c: 477:       _delay((unsigned long)((3000)*(4000000/4000.0)));
  9862     0FB3  3010               	movlw	16
  9863     0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  9864     0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  9865     0FB6  00D6               	movwf	??_main+2
  9866     0FB7  3039               	movlw	57
  9867     0FB8  00D5               	movwf	??_main+1
  9868     0FB9  300D               	movlw	13
  9869     0FBA  00D4               	movwf	??_main
  9870     0FBB                     u4647:
  9871     0FBB  0BD4               	decfsz	??_main,f
  9872     0FBC  2FBB               	goto	u4647
  9873     0FBD  0BD5               	decfsz	??_main+1,f
  9874     0FBE  2FBB               	goto	u4647
  9875     0FBF  0BD6               	decfsz	??_main+2,f
  9876     0FC0  2FBB               	goto	u4647
  9877     0FC1  2F55               	goto	l268
  9878     0FC2                     l275:	
  9879                           ;main1.c: 483:      else if (RD0 == 1 ){
  9880                           
  9881     0FC2  1C08               	btfss	8,0	;volatile
  9882     0FC3  2FC5               	goto	u4561
  9883     0FC4  2FC6               	goto	u4560
  9884     0FC5                     u4561:
  9885     0FC5  2FFA               	goto	l274
  9886     0FC6                     u4560:
  9887     0FC6                     l3448:
  9888                           
  9889                           ;main1.c: 484:     UART_Write_Text("s0\r\n");
  9890     0FC6  3065               	movlw	low (STR_15| (0+32768))
  9891     0FC7  00A1               	movwf	UART_Write_Text@text
  9892     0FC8  3091               	movlw	high (STR_15| (0+32768))
  9893     0FC9  00A2               	movwf	UART_Write_Text@text+1
  9894     0FCA  160A  118A  21E1  120A  158A  	fcall	_UART_Write_Text
  9895     0FCF                     l3450:
  9896                           
  9897                           ;main1.c: 485:     Lcd_Set_Cursor(1,1);
  9898     0FCF  1283               	bcf	3,5	;RP0=0, select bank0
  9899     0FD0  1303               	bcf	3,6	;RP1=0, select bank0
  9900     0FD1  01A4               	clrf	Lcd_Set_Cursor@b
  9901     0FD2  0AA4               	incf	Lcd_Set_Cursor@b,f
  9902     0FD3  3001               	movlw	1
  9903     0FD4  160A  118A  22B3  120A  158A  	fcall	_Lcd_Set_Cursor
  9904     0FD9                     l3452:
  9905                           
  9906                           ;main1.c: 486:             Lcd_Write_String("   ROTATION ERROR      ");
  9907     0FD9  3069               	movlw	low (STR_32| (0+32768))
  9908     0FDA  1283               	bcf	3,5	;RP0=0, select bank0
  9909     0FDB  1303               	bcf	3,6	;RP1=0, select bank0
  9910     0FDC  00A5               	movwf	Lcd_Write_String@a
  9911     0FDD  3090               	movlw	high (STR_32| (0+32768))
  9912     0FDE  00A6               	movwf	Lcd_Write_String@a+1
  9913     0FDF  160A  118A  226D  120A  158A  	fcall	_Lcd_Write_String
  9914                           
  9915                           ;main1.c: 487:     Lcd_Set_Cursor(2,1);
  9916     0FE4  1283               	bcf	3,5	;RP0=0, select bank0
  9917     0FE5  1303               	bcf	3,6	;RP1=0, select bank0
  9918     0FE6  01A4               	clrf	Lcd_Set_Cursor@b
  9919     0FE7  0AA4               	incf	Lcd_Set_Cursor@b,f
  9920     0FE8  3002               	movlw	2
  9921     0FE9  160A  118A  22B3  120A  158A  	fcall	_Lcd_Set_Cursor
  9922     0FEE                     l3454:
  9923                           
  9924                           ;main1.c: 488:             Lcd_Write_String("   DONME HATASI        ");
  9925     0FEE  3051               	movlw	low (STR_33| (0+32768))
  9926     0FEF  1283               	bcf	3,5	;RP0=0, select bank0
  9927     0FF0  1303               	bcf	3,6	;RP1=0, select bank0
  9928     0FF1  00A5               	movwf	Lcd_Write_String@a
  9929     0FF2  3090               	movlw	high (STR_33| (0+32768))
  9930     0FF3  00A6               	movwf	Lcd_Write_String@a+1
  9931     0FF4  160A  118A  226D  120A  158A  	fcall	_Lcd_Write_String
  9932     0FF9  2F9F               	goto	l3438
  9933     0FFA                     l274:
  9934     0FFA  160A  118A  2FAE   	goto	l3202
  9935     0FFD                     l219:
  9936     0FFD  120A  118A  280E   	ljmp	start
  9937     1000                     __end_of_main:

Data Sizes:
    Strings     342
    Constant    10
    Data        2
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      13
    BANK0            80     78      80
    BANK1            80     80      80
    BANK3            96     26      34
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_25(CODE[6]), STR_23(CODE[6]), STR_19(CODE[6]), STR_17(CODE[6]), 
		 -> STR_13(CODE[10]), STR_11(CODE[6]), STR_8(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> main@combinedText_377(BANK1[20]), main@uartMessage_373(BANK1[8]), main@combinedText(BANK0[20]), main@uartMessage(BANK1[8]), 
		 -> main@rpmString(BANK1[5]), main@adcString1(BANK1[4]), main@lcdText(BANK1[9]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    incrementTime@time	PTR struct Time size(1) Largest target is 8
		 -> currentTime(BANK3[8]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 27
		 -> STR_33(CODE[24]), STR_32(CODE[24]), STR_29(CODE[27]), STR_28(CODE[26]), 
		 -> STR_26(CODE[13]), STR_24(CODE[14]), STR_22(CODE[10]), STR_20(CODE[9]), 
		 -> STR_18(CODE[15]), STR_16(CODE[10]), STR_14(CODE[9]), main@rpmString(BANK1[5]), 
		 -> STR_12(CODE[5]), main@adcString1(BANK1[4]), STR_10(CODE[10]), STR_9(CODE[3]), 
		 -> main@lcdText(BANK1[9]), STR_7(CODE[21]), STR_6(CODE[20]), STR_5(CODE[3]), 
		 -> STR_4(CODE[15]), STR_3(CODE[16]), STR_2(CODE[14]), STR_1(CODE[19]), 

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 20
		 -> STR_31(CODE[5]), STR_30(CODE[5]), STR_27(CODE[5]), main@combinedText_377(BANK1[20]), 
		 -> main@uartMessage_373(BANK1[8]), STR_21(CODE[5]), main@combinedText(BANK0[20]), main@uartMessage(BANK1[8]), 
		 -> STR_15(CODE[5]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _timer_isr in COMMON

    _timer_isr->i1___wmul

Critical Paths under _main in BANK0

    _main->___flmul
    _yagBakim->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _readEEPROM->___wmul
    ___flmul->___fldiv
    ___awmod->___fltol
    ___awdiv->___fltol
    _UART_Write_Text->_UART_Write
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _timer_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer_isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer_isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               134   134      0   23850
                                             52 BANK0     26    26      0
                                              0 BANK1     80    80      0
                                              0 BANK3     26    26      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                    _UART_Initialize
                    _UART_Write_Text
                            ___awdiv
                            ___awmod
                            ___fldiv
                            ___flmul
                            ___fltol
                             ___wmul
                           ___xxtofl
                         _readEEPROM
                            _sprintf
                        _writeEEPROM
                           _yagBakim
 ---------------------------------------------------------------------------------
 (1) _yagBakim                                             2     2      0    4452
                                             12 BANK0      2     2      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2    2092
                                              5 BANK0      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     178
                                              1 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1    2204
                                              4 BANK0      6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _writeEEPROM                                          4     0      4     596
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             31    21     10    3363
                                             12 BANK0     23    13     10
                            ___fltol (ARG)
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     952
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _readEEPROM                                           4     2      2     630
                                              6 BANK0      4     2      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     550
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     685
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2721
                                             26 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1425
                                              0 BANK0     26    18      8
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     904
                                             10 BANK0      6     2      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     756
                                             10 BANK0      8     4      4
                            ___fltol (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      7     5      2     796
                                              1 BANK0      7     5      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     110
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _timer_isr                                            3     3      0     649
                                              6 COMMON     3     3      0
                      _incrementTime
                           i1___wmul
                      i1_writeEEPROM
 ---------------------------------------------------------------------------------
 (6) i1_writeEEPROM                                        4     0      4     252
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (6) i1___wmul                                             6     2      4     144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) _incrementTime                                        3     3      0     253
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _UART_Initialize
   _UART_Write_Text
     _UART_Write
   ___awdiv
     ___fltol (ARG)
     ___wmul (ARG)
   ___awmod
     ___fltol (ARG)
   ___fldiv
   ___flmul
     __Umul8_16
     ___fldiv (ARG)
     ___xxtofl (ARG)
   ___fltol
   ___wmul
   ___xxtofl
   _readEEPROM
     ___wmul (ARG)
   _sprintf
     ___fltol (ARG)
     ___lwdiv (ARG)
     ___lwmod (ARG)
       ___lwdiv (ARG)
     ___wmul (ARG)
     _isdigit (ARG)
   _writeEEPROM
   _yagBakim
     _Lcd_Clear
     _Lcd_Set_Cursor
     _Lcd_Write_String

 _timer_isr (ROOT)
   _incrementTime
   i1___wmul
   i1_writeEEPROM

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     1A      22       9       35.4%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     50      50       7      100.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4E      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      CF      12        0.0%
ABS                  0      0      CF       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Oct 10 12:00:10 2023

            ___fldiv@aexp 0039              ___fldiv@bexp 0038                         pc 0002  
            ___fldiv@sign 0031                        l13 1F1F                        l16 1F05  
                      l25 1226                        l19 1F0F                        _RD 0C60  
                      _WR 0C61              ___awdiv@sign 002F                        fsr 0004  
     ___wmul@multiplicand 0022          i1___wmul@product 0074       __Umul8_16@word_mpld 0026  
                     l140 1F92                       l220 0F68                       l141 1F93  
                     l142 1F99                       l143 1F9A                       l231 0268  
                     l144 1FA0                       l152 1F01                       l216 0089  
                     l161 140E                       l146 1FA1                       l138 1F8B  
                     l170 12B2                       l250 0E09                       l242 0DCE  
                     l234 0462                       l139 1F8C                       l219 0FFD  
                     l164 1FFF                       l260 0E3C                       l252 0E34  
                     l228 01DF                       l149 1F65                       l421 11A4  
                     l237 0C26                       l158 12FE                       l270 0F66  
                     l246 0D70                       l238 0D68                       l415 0BF7  
                     l175 1350                       l247 0DCD                       l192 07FF  
                     l256 0ED5                       l186 1F7D                       l274 0FFA  
                     l266 0F59                       l419 118C                       l275 0FC2  
                     l612 1541                       l268 0F55                       l605 1556  
                     l701 11E0                       l189 1F81                       l615 1556  
                     l391 0A90                       l377 0A1B                       l572 14DE  
                     l389 0ABA                       l814 075A                       l398 0B22  
                     l808 07EA                       l585 13AB                       l770 0A00  
                     l827 081F                       l691 126C                       l852 1606  
                     l829 0831                       l790 09EC                       l854 169B  
                     l784 097A                       l768 0888                       l872 1F33  
                     l865 1665                       l866 1671                       _GIE 005F  
                     _RB0 0030                       _RB1 0031                       _RB2 0032  
                     _RA4 002C                       _RC0 0038                       _RB3 0033  
                     _RC1 0039                       _RB4 0034                       _RC2 003A  
                     _RD0 0040                       _RB5 0035                       _RC3 003B  
                     _RE0 0048                       _RE1 0049                       _RE2 004A  
                     fsr0 0004                       indf 0000              ___awmod@sign 002F  
            ___flmul@aexp 004C              ___flmul@bexp 004D              ___flmul@sign 0047  
            ___flmul@temp 0052              ___flmul@prod 004E               main@lcdText 00B4  
            ___fltol@exp1 0029                      l3000 161E                      l3010 1649  
                    l3002 1627                      l2220 1F89                      l3020 1673  
                    l3012 1650                      l3004 162E                      l2300 1F32  
                    l3100 16A5                      l2222 1F90                      l2230 1F4E  
                    l3022 1689                      l3014 165B                      l3006 1632  
                    l2310 1193                      l3110 16AA                      l3102 16A6  
                    l2224 1F97                      l2232 1F54                      l2400 13D4  
                    l3024 168E                      l3016 165F                      l3008 1640  
                    l2320 122B                      l2312 119A                      l2304 117E  
                    l2240 1FD0                      l3200 17A8                      l3120 16B5  
                    l3112 16AB                      l3104 16A7                      l2226 1F9E  
                    l2218 1F85                      l2234 1F57                      l3026 1692  
                    l3018 1669                      l2330 1243                      l2322 1231  
                    l2314 11A0                      l2306 1182                      l2250 1FEC  
                    l2242 1FD1                      l2410 1308                      l2402 12FF  
                    l3210 17CF                      l3202 17AE                      l3130 16C9  
                    l3122 16B6                      l3114 16B0                      l3106 16A8  
                    l2236 1F62                      l2228 1F4D                      l2260 1F0B  
                    l3028 1693                      l2332 1254                      l2324 1234  
                    l2340 1268                      l2308 1186                      l2252 1FF2  
                    l2244 1FDF                      l2420 133B                      l2412 1312  
                    l2404 1304                      l3300 0452                      l3220 0039  
                    l3212 17D5                      l3140 1726                      l3132 16CC  
                    l3124 16B7                      l3116 16B3                      l3108 16A9  
                    l2334 125A                      l2326 123B                      l2318 1227  
                    l2350 11B7                      l2510 0B0A                      l2430 1F75  
                    l2262 1EF5                      l2270 12CB                      l2254 1FF5  
                    l2246 1FE2                      l2238 1FCA                      l2422 1348  
                    l2414 131D                      l3310 0BF8                      l3302 0458  
                    l3222 003F                      l3230 0050                      l3214 17E9  
                    l3150 172D                      l3142 1729                      l3134 16E1  
                    l3126 16B8                      l3118 16B4                      l2600 14A7  
                    l2440 07F1                      l2336 125B                      l2328 123F  
                    l2360 11D6                      l2352 11BB                      l2344 11A5  
                    l2520 0B39                      l2512 0B10                      l2504 0AE6  
                    l2432 1F7A                      l2280 12F0                      l2272 12D1  
                    l2264 12B6                      l2256 1FFC                      l2248 1FE9  
                    l2424 134D                      l2416 1332                      l3400 0E98  
                    l3320 0CC0                      l3312 0BFC                      l3304 045F  
                    l3240 0091                      l3232 0058                      l3224 0043  
                    l3216 17F1                      l3208 17B2                      l3160 173F  
                    l3152 172E                      l3144 172A                      l3136 16F8  
                    l3128 16BA                      l2258 1F05                      l2610 14CA  
                    l2602 14AB                      l2370 0815                      l2338 1262  
                    l2354 11BF                      l2346 11AD                      l2362 11DC  
                    l2530 0B50                      l2522 0B3D                      l2514 0B16  
                    l2434 1F7B                      l2426 1F66                      l2282 12F6  
                    l2266 12BB                      l2274 12DA                      l2290 1296  
                    l2418 1335                      l3410 0EEC                      l3402 0EB1  
                    l3330 0D26                      l3322 0CCA                      l3314 0C7C  
                    l3306 0466                      l3250 012D                      l3242 0095  
                    l3234 0063                      l3226 0047                      l3218 0031  
                    l3170 1774                      l3162 174A                      l3154 172F  
                    l3146 172B                      l3138 170F                      l3090 16A0  
                    l2380 1F10                      l2604 14BC                      l2612 14D0  
                    l2620 1351                      l2700 083B                      l2372 0819  
                    l2356 11C9                      l2348 11B0                      l2292 1F23  
                    l2540 0B72                      l2532 0B56                      l2524 0B41  
                    l2516 0B1C                      l2508 0B06                      l2460 0A17  
                    l2452 0A04                      l2436 1F7C                      l2428 1F72  
                    l2276 12E0                      l2268 12C8                      l2284 126D  
                    l3420 0F3C                      l3412 0F05                      l3404 0EC9  
                    l3340 0D49                      l3332 0D30                      l3324 0CD5  
                    l3316 0C86                      l3308 049C                      l3260 0174  
                    l3252 0138                      l3244 00E4                      l3236 0078  
                    l3228 004B                      l3180 1794                      l3172 1782  
                    l3164 1754                      l3156 1730                      l3148 172C  
                    l3092 16A1                      l2382 1F1C                      l2390 120A  
                    l2614 14D5                      l2606 14C2                      l2630 1363  
                    l2622 1354                      l2710 0852                      l2702 083F  
                    l2374 0828                      l2366 080C                      l2438 07EB  
                    l2358 11CF                      l2294 1F24                      l2550 0B92  
                    l2542 0B77                      l2534 0B5B                      l2526 0B47  
                    l2518 0B2D                      l2470 0A49                      l2462 0A1C  
                    l2454 0A07                      l2278 12ED                      l2286 1272  
                    l3430 0F61                      l3414 0F1D                      l3406 0ED9  
                    l3350 0D78                      l3422 0F47                      l3342 0D51  
                    l3334 0D3B                      l3326 0CDF                      l3318 0C91  
                    l3270 01CA                      l3262 0193                      l3254 0142  
                    l3246 00FF                      l3190 17A3                      l3182 1797  
                    l3174 1787                      l3166 175F                      l3158 1735  
                    l3094 16A2                      l3086 169C                      l2392 13AC  
                    l2384 11E1                      l2616 14DA                      l2608 14C3  
                    l2640 137C                      l2632 1368                      l2624 1358  
                    l2800 0963                      l2720 0866                      l2712 0853  
                    l2704 0840                      l2376 082D                      l2368 080E  
                    l2296 1F2A                      l2560 0BD4                      l2544 0B7B  
                    l2536 0B5F                      l2552 0B96                      l2528 0B4C  
                    l2472 0A4D                      l2456 0A0D                      l2288 128E  
                    l3440 0FA2                      l3432 0F6C                      l3424 0F4D  
                    l3408 0EE1                      l3416 0F29                      l3360 0DA9  
                    l3352 0D80                      l3344 0D5C                      l3336 0D41  
                    l3328 0CEA                      l3280 0258                      l3272 01CF  
                    l3264 019B                      l3256 014D                      l3248 0123  
                    l3192 17A4                      l3184 179B                      l3176 178B  
                    l3168 1769                      l3096 16A3                      l3088 169F  
                    l2394 13B2                      l2386 11E6                      l2642 1380  
                    l2634 136E                      l2650 139D                      l2626 135D  
                    l2810 0992                      l2802 0977                      l2730 087D  
                    l2722 086A                      l2706 0845                      l2714 0855  
                    l2298 1F30                      l2554 0B99                      l2546 0B87  
                    l2538 0B6C                      l2490 0ACE                      l2474 0A62  
                    l2482 0A92                      l3506 0A32                      l2466 0A22  
                    l2458 0A12                      l2562 0BDD                      l3450 0FCF  
                    l3442 0FB0                      l3434 0F74                      l3426 0F51  
                    l3418 0F31                      l3370 0DFD                      l3362 0DC1  
                    l3354 0D8B                      l3346 0D6C                      l3338 0D45  
                    l3290 02C6                      l3282 025E                      l3274 01D5  
                    l3266 01BB                      l3258 016C                      l3194 17A5  
                    l3186 17A1                      l3178 1790                      l3098 16A4  
                    l2396 13BD                      l2388 1202                      l2580 147D  
                    l2652 13A2                      l2644 138A                      l2636 1371  
                    l2628 135F                      l2820 09D0                      l2812 0996  
                    l2740 08A0                      l2732 087E                      l2724 086B  
                    l2716 085D                      l2708 084A                      l2900 05C1  
                    l2660 14EA                      l2556 0BCB                      l2548 0B8D  
                    l2492 0AD2                      l2484 0ABE                      l2564 0BF3  
                    l3508 0AAC                      l2476 0A77                      l2468 0A37  
                    l3452 0FD9                      l3444 0FB3                      l3436 0F7F  
                    l3428 0F5D                      l3380 0E28                      l3372 0E0D  
                    l3364 0DD2                      l3356 0D96                      l3348 0D74  
                    l3292 0305                      l3284 0265                      l3276 01DC  
                    l3268 01C4                      l3196 17A6                      l3188 17A2  
                    l2398 13CE                      l2590 1491                      l2582 1482  
                    l2654 13A7                      l2646 1390                      l2638 1378  
                    l2830 09F4                      l2822 09DF                      l2814 09AF  
                    l2806 097F                      l2750 08B7                      l2726 0870  
                    l2734 0880                      l2718 0862                      l2910 0620  
                    l2902 05CA                      l2670 150F                      l2558 0BD0  
                    l2486 0AC6                      l2494 0AD8                      l2478 0A7D  
                    l3454 0FEE                      l3438 0F9F                      l3390 0E57  
                    l3382 0E38                      l3374 0E11                      l3366 0DDA  
                    l3358 0DA5                      l3294 033F                      l3286 026C  
                    l3278 01E3                      l3198 17A7                      l2592 1493  
                    l2584 1484                      l2576 1476                      l2648 1397  
                    l2832 09F6                      l2824 09E3                      l2808 0984  
                    l2816 09B5                      l2760 08E3                      l2752 08C9  
                    l2736 0890                      l2744 08A9                      l2728 0875  
                    l2920 06B8                      l2912 0637                      l2904 05D8  
                    l2680 151D                      l2672 1511                      l2664 14F3  
                    l2496 0AE0                      l2488 0ACA                      l3448 0FC6  
                    l3392 0E70                      l3384 0E40                      l3376 0E15  
                    l3368 0DE5                      l3296 039C                      l3288 0272  
                    l2594 1499                      l2586 1488                      l2578 1479  
                    l2834 09FA                      l2826 09EB                      l2818 09C2  
                    l2762 08E8                      l2770 0908                      l2754 08D1  
                    l2746 08AE                      l2738 089C                      l2930 0726  
                    l2922 06DE                      l2914 0654                      l2906 05F5  
                    l2850 04B4                      l2842 04A6                      l2690 1536  
                    l2682 1526                      l2674 1515                      l2666 1506  
                    l2658 14DF                      l2498 0AE4                      l3394 0E7D  
                    l3386 0E44                      l3378 0E1D                      l3298 0418  
                    l2596 149C                      l2588 148D                      l2828 09F0  
                    l2780 0933                      l2772 091A                      l2764 08FA  
                    l2756 08D9                      l2940 073E                      l2932 072A  
                    l2924 0706                      l2916 067F                      l2908 0603  
                    l2860 04D0                      l2852 04B9                      l2844 04AB  
                    l2692 1546                      l2684 152F                      l2668 1507  
                    l3396 0E85                      l3388 0E4C                      l2598 14A3  
                    l2790 094B                      l2782 093B                      l2774 091B  
                    l2766 08FE                      l2758 08E1                      l2950 075F  
                    l2942 073F                      l2934 072B                      l2926 070F  
                    l2918 068D                      l2870 04E3                      l2862 04D5  
                    l2854 04BE                      l2846 04AF                      l2694 154B  
                    l3398 0E92                      l2792 0954                      l2784 093D  
                    l2776 0929                      l2768 08FF                      l2696 0832  
                    l2952 0764                      l2960 0795                      l2944 0743  
                    l2936 0734                      l2928 071D                      l2880 04FF  
                    l2872 04E8                      l2864 04D9                      l2856 04C6  
                    l2848 04B3                      l2786 0946                      l2794 095A  
                    l2778 092D                      l2698 0837                      l2970 07C8  
                    l2962 07A2                      l2954 0772                      l2946 0757  
                    l2938 073A                      l2890 0528                      l2882 0504  
                    l2874 04F0                      l2866 04DD                      l2858 04C8  
                    l2796 095E                      l2788 094A                      l2980 07E2  
                    l2972 07D4                      l2964 07AD                      l2956 0776  
                    l2892 0543                      l2876 04F2                      l2868 04DE  
                    l2798 095F                      l2974 07D8                      l2966 07BC  
                    l2958 078F                      l2894 055F                      l2886 050D  
                    l2878 04FA                      l2990 15FE                      l2976 07D9  
                    l2968 07C6                      l2896 0589                      l2888 051B  
                    l2992 160E                      l2984 15E5                      l2978 07DE  
                    l2898 05A5                      l2986 15EA                      l2996 1617  
                    l2988 15EE                      l2998 161A                      STR_1 10AA  
                    STR_2 10F9                      STR_3 10BD                      STR_4 10DC  
                    STR_5 116F                      STR_6 1096                      STR_7 1081  
                    STR_8 1114                      STR_9 10D9                      _T0IF 005A  
                    u3000 14D5                      u3001 14D4                      u3010 1358  
                    u3011 1357                      u2300 1F90                      u3020 1363  
                    u3100 14EA                      u2301 1F8F                      u3021 1362  
                    u3101 14E9                      u2310 1F97                      u3030 136E  
                    u3110 1501                      u2311 1F96                      u3031 136D  
                    u2320 1F9E                      u3200 083F                      u3120 1515  
                    u2400 12A0                      u2321 1F9D                      u3201 083E  
                    u3121 1514                      u3050 1380                      u3210 0845  
                    u3130 151C                      u2410 12B2                      u3051 137F  
                    u3211 0844                      u3131 151B                      u3115 14FC  
                    u2411 12B1                      u2340 1F0B                      u3060 138A  
                    u3220 084A                      u2500 1243                      u2420 1F2A  
                    u4100 0039                      u2341 1F0A                      u3061 1389  
                    u3045 1372                      u3221 0849                      u2501 1242  
                    u2421 1F29                      u4101 0038                      u3310 08FE  
                    u3230 086A                      u3150 152E                      u2430 1F30  
                    u2350 12BB                      u4110 003F                      u3311 08FD  
                    u3231 0869                      u3151 152D                      u2431 1F2F  
                    u2351 12BA                      u2335 1FD4                      u4111 003E  
                    u3080 139D                      u3400 0963                      u3240 0870  
                    u3160 1535                      u2520 1254                      u2600 11DC  
                    u2440 1186                      u4200 019B                      u4120 0043  
                    u3081 139C                      u3065 1386                      u3401 0962  
                    u3305 08F3                      u3241 086F                      u3161 1534  
                    u3145 151E                      u2521 1253                      u2601 11DB  
                    u2441 1185                      u4201 019A                      u4121 0042  
                    u2290 1F89                      u3090 13A2                      u3410 0977  
                    u3330 091A                      u3250 0875                      u2610 0819  
                    u2370 12E0                      u4210 01BB                      u4130 0047  
                    u2291 1F88                      u3091 13A1                      u3075 1391  
                    u3411 0976                      u3331 0919                      u3251 0874  
                    u2611 0818                      u2515 1244                      u2371 12DF  
                    u4211 01BA                      u4131 0046                      u3420 097E  
                    u3340 0933                      u3260 0890                      u3500 04B9  
                    u3180 1546                      u2540 1268                      u4300 0D45  
                    u4220 01C4                      u4140 004B                      u3421 097D  
                    u3341 0932                      u3325 0901                      u3261 088F  
                    u3501 04B8                      u3181 1545                      u2541 1267  
                    u2525 1250                      u2365 12C1                      u4301 0D44  
                    u4221 01C3                      u4141 004A                      u3430 0984  
                    u3350 093B                      u3270 08AE                      u2630 082D  
                    u3510 04BE                      u3190 154B                      u2550 11AD  
                    u2470 11A0                      u2390 127C                      u4310 0D49  
                    u4230 01CA                      u4150 0091                      u3431 0983  
                    u3351 093A                      u3335 0916                      u3271 08AD  
                    u2631 082C                      u3511 04BD                      u3191 154A  
                    u3175 1538                      u2535 125C                      u2551 11AC  
                    u2471 119F                      u2455 118D                      u4311 0D48  
                    u4231 01C9                      u4151 008E                      u2640 11F0  
                    u3440 0996                      u3280 08E8                      u3520 04DD  
                    u2480 1231                      u2800 0B1C                      u2720 0A0D  
                    u4400 0E11                      u4320 0D6C                      u4240 01E3  
                    u4160 0095                      u4080 17D5                      u3441 0995  
                    u3281 08E7                      u2625 0820                      u3601 05B3  
                    u3521 04DC                      u2481 1230                      u2465 1194  
                    u2801 0B1B                      u2721 0A0C                      u2385 12E6  
                    u4401 0E10                      u4321 0D6B                      u4241 01E2  
                    u4161 0094                      u4081 17D4                      u2650 1214  
                    u3450 09A5                      u3370 094A                      u3602 05BA  
                    u3530 04E3                      u2570 11BF                      u2810 0B2D  
                    u2730 0A49                      u4410 0E15                      u4330 0D70  
                    u4250 026C                      u4170 016C                      u4090 0031  
                    u3371 0949                      u3603 05C1                      u3531 04E2  
                    u2571 11BE                      u2811 0B2C                      u2731 0A48  
                    u4411 0E14                      u4331 0D6F                      u4251 026B  
                    u4171 016B                      u4091 17FF                      u2660 1226  
                    u3460 09C2                      u3700 06EC                      u3540 04E8  
                    u2580 11C9                      u2900 0BF3                      u2820 0B41  
                    u2740 0A8F                      u4500 0F51                      u4420 0E38  
                    u4340 0D74                      u4260 0466                      u4180 0174  
                    u2661 1225                      u3461 09C1                      u3365 093F  
                    u3621 05E7                      u3541 04E7                      u2581 11C8  
                    u2565 11B1                      u2901 0BF2                      u2821 0B40  
                    u2741 0A8E                      u4501 0F50                      u4421 0E37  
                    u4341 0D73                      u4261 0465                      u4181 0173  
                    u2910 147D                      u3470 09DF                      u3390 095E  
                    u3622 05EE                      u3550 04FF                      u2830 0B47  
                    u2750 0ABE                      u2670 1348                      u4510 0F55  
                    u4430 0E3C                      u4350 0D78                      u4270 0BF8  
                    u4190 0193                      u2911 147C                      u3471 09DE  
                    u3455 09A0                      u3391 095D                      u3295 08EA  
                    u3711 06F8                      u3631 0612                      u3623 05F5  
                    u3615 05C3                      u3551 04FE                      u2495 1235  
                    u2831 0B46                      u2815 0B29                      u2751 0ABD  
                    u2671 1347                      u4511 0F54                      u4431 0E3B  
                    u4351 0D77                      u4271 04A3                      u4191 0192  
                    u4095 17FA                      u2920 1488                      u3480 09F4  
                    u3800 0764                      u3712 06FF                      u3632 0619  
                    u3560 0504                      u2840 0B56                      u2760 0ACE  
                    u2680 1F81                      u4520 0F5D                      u4440 0E40  
                    u4360 0D96                      u4280 0BFC                      u2921 1487  
                    u3481 09F3                      u3465 09BE                      u3385 094D  
                    u3801 0763                      u3713 0706                      u3705 06E7  
                    u3633 0620                      u3561 0503                      u2585 11C5  
                    u2841 0B55                      u2761 0ACD                      u2681 1F80  
                    u4521 0F5C                      u4441 0E3F                      u4361 0D95  
                    u4281 0BFB                      u2930 1499                      u3810 0776  
                    u3490 04B3                      u2850 0B6B                      u2770 0B05  
                    u4530 0F61                      u4450 0E44                      u4370 0DA5  
                    u4290 0D41                      u2931 1498                      u3475 09DB  
                    u3811 0775                      u3651 0646                      u3571 0551  
                    u3491 04B2                      u2595 11D0                      u2851 0B6A  
                    u2771 0B04                      u2675 1344                      u4531 0F60  
                    u4451 0E43                      u4371 0DA4                      u4291 0D40  
                    u3820 0785                      u3740 072A                      u3652 064D  
                    u3572 0558                      u3900 162D                      u2860 0B72  
                    u2780 0B10                      u4540 0F65                      u4460 0E7D  
                    u4380 0DD2                      u3741 0729                      u3725 0708  
                    u3661 0671                      u3653 0654                      u3645 0622  
                    u3581 056D                      u3573 055F                      u3901 162C  
                    u2861 0B71                      u2781 0B0F                      u4541 0F64  
                    u4461 0E7C                      u4381 0DD1                      u2950 14AB  
                    u3830 07A2                      u3662 0678                      u3582 0574  
                    u2870 0B87                      u2790 0B16                      u4550 0F6C  
                    u4470 0E92                      u4390 0E0D                      u2951 14AA  
                    u3831 07A1                      u3735 071F                      u3671 069C  
                    u3663 067F                      u3591 0597                      u3583 057B  
                    u2871 0B86                      u2791 0B15                      u2775 0B01  
                    u4551 0F6B                      u4471 0E91                      u4391 0E0C  
                    u4607 01D9                      u3840 07BC                      u3760 073E  
                    u3680 06C4                      u3672 06A3                      u3592 059E  
                    u3920 164F                      u2880 0B8D                      u4560 0FC6  
                    u4480 0ED9                      u2945 149D                      u3841 07BB  
                    u3825 0780                      u3761 073D                      u3673 06AA  
                    u3593 05A5                      u3921 164E                      u2881 0B8C  
                    u4561 0FC5                      u4481 0ED8                      u4465 0E79  
                    u4617 0262                      u2970 14BC                      u3850 07D8  
                    u3770 0743                      u2890 0BDD                      u4490 0F4D  
                    u4707 1F5D                      u2971 14BB                      u3851 07D7  
                    u3835 079E                      u3771 0742                      u3755 072D  
                    u3691 06D0                      u3915 1641                      u2891 0BDC  
                    u4491 0F4C                      u4475 0E8E                      u4627 045C  
                    u3780 0757                      u3692 06D7                      u3940 165F  
                    u3860 15EA                      u2965 14AC                      u3845 07B8  
                    u3781 0756                      u3693 06DE                      u3685 06BF  
                    u3941 165E                      u3861 15E9                      u4637 0FAA  
                    u2990 14D0                      u3790 075E                      u3950 1665  
                    u3870 15EE                      u2991 14CF                      u2975 14B8  
                    u3791 075D                      u3951 1664                      u3935 1654  
                    u3871 15ED                      u4647 0FBB                      u3960 1669  
                    u3880 160E                      u2985 14C4                      u3961 1668  
                    u3881 160D                      u4657 1FE6                      u4577 16C2  
                    u3970 167E                      u4667 1FF9                      u4587 177C  
                    u3980 168E                      u4677 13B8                      u3981 168D  
                    u4597 0080                      u3990 1692                      u4687 13C9  
                    u3991 1691                      u3975 1679                      u3895 161F  
                    u4697 13DA                      _TMR0 0001                      _TRMT 04C1  
                    _WREN 0C62         ?_Lcd_Write_String 0025                      _main 169C  
                    btemp 007E                      start 000E        ??_Lcd_Write_String 0027  
         ___fldiv@new_exp 0032           __end_of_Lcd_Cmd 1F66               _writeEEPROM 1F66  
 __end_of_UART_Write_Text 1227          ?_UART_Initialize 0070             ___fltol@sign1 0028  
      writeEEPROM@address 0020                     ?_main 0070           __end_of___fldiv 0A01  
         __end_of___awdiv 14DF                     _EEADR 010D                     STR_10 111F  
                   STR_11 115F                     STR_12 116A                     STR_20 1150  
                   STR_21 1165                     STR_13 113D                     STR_30 1165  
                   STR_14 1147                     STR_22 1133                     STR_31 1165  
                   STR_23 1159                     STR_15 1165                     STR_16 1129  
                   STR_24 10EB                     STR_32 1069                     STR_25 1159  
                   STR_17 1159                     STR_33 1051                     STR_26 1107  
                   STR_18 10CD                     STR_27 1165                     STR_19 1159  
                   STR_28 1037           __end_of___awmod 13AC                     STR_29 101C  
         __end_of___flmul 07EB           __end_of___fltol 1557           ___awdiv@divisor 002A  
         __end_of___lwdiv 126D                     i1l207 15D9                     i1l421 1FC6  
         __end_of___lwmod 11E1                     i1l186 1F45                     i1l419 1FAE  
                   i1l189 1F49                     i1l198 1475           ___awdiv@counter 002E  
                   _RCSTA 0018                     _SPBRG 0099                     _TRISB 0086  
                   _TRISD 0088                     _TXREG 0019                     _TXSTA 0098  
            main@realSaat 01A8               ?_UART_Write 0070           __end_of_dpowers 101C  
            main@olmazlar 00E4           __end_of_isdigit 1F34             main@adcValue1 0196  
           main@adcValue2 00E2             main@adcValue3 00D2                     pclath 000A  
        __end_ofi1___wmul 1FC7                     status 0003       i1___wmul@multiplier 0070  
                   wtemp0 007E           __end_of_sprintf 0BF8          __end_of_Lcd_Init 140F  
        __end_of_Lcd_Port 1FA2           __initialization 0011     __end_ofi1_writeEEPROM 1F4A  
            __end_of_main 1000                    ??_main 0054             main@ilkAcilis 0194  
                  _ADRESH 001E                    _ADRESL 009E                    _EEDATA 010C  
                  _EECON2 018D          ___awdiv@dividend 002C                    i1l3040 1F43  
                  i1l3032 1F34                    i1l3050 1FB5                    i1l3042 1F44  
                  i1l3034 1F3A                    i1l3052 1FBC                    i1l3044 1FA2  
                  i1l3036 1F3D                    i1l3060 155B                    i1l3054 1FC2  
                  i1l3046 1FA4                    i1l3038 1F42                    i1l3070 1575  
                  i1l3062 155C                    i1l3048 1FA8                    i1l3080 15A6  
                  i1l3072 157B                    i1l3064 1566                    i1l2450 1468  
                  i1l3082 15B9                    i1l3074 1582                    i1l3066 156D  
                  i1l3058 1557                    i1l2444 1410                    i1l3084 15CC  
                  i1l3076 1584                    i1l3068 156F                    i1l2446 142A  
                  i1l3078 1593                    i1l2448 1449                    u400_20 1F49  
                  u400_21 1F48                    u401_20 1FA8                    u401_21 1FA7  
                  u402_25 1FAF                    u403_25 1FB6                    u404_20 1FC2  
                  u404_21 1FC1                    u405_20 155B                    u405_21 155A  
                  u270_20 1449                    u406_20 156D                    u270_21 1448  
                  u406_21 156C                    u271_20 1468                    u407_20 1582  
                  u271_21 1467                    u407_21 1581                    u269_20 142A  
                  u269_21 1429                 ??_Lcd_Cmd 0021                    _TRISA0 0428  
                  _TRISA1 0429                    _TRISA2 042A                    _TRISA3 042B  
                  _TRISA4 042C                    _TRISC0 0438                    _TRISC1 0439  
                  _TRISA5 042D                    _TRISC2 043A                    _TRISD0 0440  
                  _TRISC3 043B                    _TRISE0 0448                    _TRISC4 043C  
                  _TRISE1 0449                    _TRISC5 043D                    _TRISE2 044A  
                  _TRISC6 043E                    _TRISC7 043F          __end_of___xxtofl 169C  
                  ___wmul 117E                 ??___fldiv 0028                 ??___awdiv 002E  
               ??___awmod 002E                 ??___flmul 0042          ?_UART_Write_Text 0021  
               ??___fltol 0024             main@oranValue 00D6                 ??___lwdiv 0024  
               ??___lwmod 002B          ___awdiv@quotient 0030           ___awmod@divisor 002A  
         ___awmod@counter 002E             _incrementTime 140F          __end_of_yagBakim 1351  
           main@rpmString 00CD              __pdataCOMMON 007B                 ??_isdigit 0020  
                  saved_w 007E            main@adcString1 00EC                 ??_sprintf 0036  
         Lcd_Set_Cursor@a 0026           Lcd_Set_Cursor@b 0024           Lcd_Set_Cursor@y 0028  
         Lcd_Set_Cursor@z 0027              ___xxtofl@arg 002A              ___xxtofl@exp 0029  
            ___xxtofl@val 0020   __end_of__initialization 002D         __end_of_Lcd_Clear 1F02  
              ___fltol@f1 0020           writeEEPROM@data 0022            __pcstackCOMMON 0070  
          ?_incrementTime 0070                 ?i1___wmul 0070            _Lcd_Set_Cursor 12B3  
       incrementTime@time 0072            _OPTION_REGbits 0081        main@gostermeliklcd 00DA  
               ?_Lcd_Init 0070                 ?_Lcd_Port 0070              sprintf@width 003F  
        main@combinedText 005A                __pbssBANK0 006E                __pbssBANK3 01AA  
       __end_of__Umul8_16 0832                __pmaintext 169C              ?_writeEEPROM 0020  
                 ?___wmul 0020                __pintentry 0004    __end_of_Lcd_Set_Cursor 12FF  
        main@displayValue 01A6                ??i1___wmul 0074                 ?___xxtofl 0020  
            ??_UART_Write 0020                ??_Lcd_Init 0024                ??_Lcd_Port 0020  
              __stringtab 1000            _Lcd_Write_Char 1FC7                   _Lcd_Cmd 1F4A  
              _readEEPROM 07EB                 ?_yagBakim 0070                   ___fldiv 0832  
                 ___awdiv 1476           ??_incrementTime 0070                   ___awmod 1351  
                 ___flmul 04A6                   ___fltol 14DF        __end_of_UART_Write 1F10  
                 ___lwdiv 1227                   ___lwmod 11A5           ?_Lcd_Set_Cursor 0024  
                 __ptext1 12FF                   __ptext2 126D                   __ptext3 1FC7  
                 __ptext4 12B3                   __ptext5 1EF5                   __ptext6 1F66  
                 __ptext7 0A01                   __ptext8 1F20                   __ptext9 117E  
                 _dpowers 1012                   _isdigit 1F20                ??___xxtofl 0024  
        ___awmod@dividend 002C     main@negativeFeedValue 01A4                   _sprintf 0A01  
  __end_of_Lcd_Write_Char 2000      end_of_initialization 002D          _epromBaslaAdress 007B  
              ??_yagBakim 002C         __end_of_timer_isr 15E2                   psplit$0 D002D  
                 psplit$1 2D002E                 Lcd_Port@a 0020              __pstringtext 1000  
   i1___wmul@multiplicand 0072            UART_Write@data 0020             ___xxtofl@sign 0028  
             ___fldiv@grs 0034               ___fldiv@rem 002D      pnum$maintext_split_1 002D  
    pnum$maintext_split_2 002E         readEEPROM@address 0026           ?_Lcd_Write_Char 0070  
       Lcd_Write_String@a 0025         Lcd_Write_String@i 002A               ___flmul@grs 0048  
              main@dakika 00E6                main@binler 019C                main@birler 00EA  
             ?_readEEPROM 0026                main@yuzler 019A                 _Lcd_Clear 1EF5  
          __end_of___wmul 11A5          _Lcd_Write_String 126D             __pidataCOMMON 0807  
     start_initialization 0011         ??_UART_Initialize 0020                ?_Lcd_Clear 0070  
           i1_writeEEPROM 1F34                  ??___wmul 0024                 __Umul8_16 0809  
         Lcd_Write_Char@a 0024           Lcd_Write_Char@y 0023                 ___fldiv@a 0020  
               ___fldiv@b 0024                 ___flmul@a 003E                 ___flmul@b 003A  
             __pbssCOMMON 0079                 ___latbits 0002             __pcstackBANK0 0020  
           __pcstackBANK1 00A0             __pcstackBANK3 0190                  ?_Lcd_Cmd 0070  
             sprintf@flag 003E               sprintf@prec 003A                 _main$1031 0192  
               _main$1032 00DE          ___lwdiv@dividend 0022  main@negativeDisplayValue 0190  
          ?i1_writeEEPROM 0070          ??_Lcd_Set_Cursor 0025                  ?___fldiv 0020  
                ?___awdiv 002A                  ?___awmod 002A                  ?___flmul 003A  
                ?___fltol 0020                ?__Umul8_16 0020                  ?___lwdiv 0020  
                ?___lwmod 0027                  ?_isdigit 0070          ___lwdiv@quotient 0024  
                ?_sprintf 002C         ??_UART_Write_Text 0023         interrupt_function 0004  
             _eepromWRclc 0079            ___wmul@product 0024           main@epromAdresi 01A2  
                Lcd_Cmd@a 0023               ??_Lcd_Clear 0024                 _timer_isr 1557  
   __end_of_incrementTime 1476                _ADCON0bits 001F               __stringbase 1012  
              _ADCON1bits 009F         ___wmul@multiplier 0020                  i1___wmul 1FA2  
        ??_Lcd_Write_Char 0021                 main@onlar 00E8                  _Lcd_Init 13AC  
                _Lcd_Port 1F82           main@integerPart 019E  __end_of_Lcd_Write_String 12B3  
            ??_readEEPROM 0028           ??i1_writeEEPROM 0074               _kesmeSayaci 006E  
             ??__Umul8_16 0022                ?_timer_isr 0070              pnum$maintext 000D  
    i1writeEEPROM@address 0070        __end_of__stringtab 1012               _isdigit$840 0020  
         _UART_Initialize 1F10               _currentTime 01AA                sprintf@val 003C  
                ___xxtofl 15E2                 yagBakim@i 002C        __end_of_readEEPROM 0800  
         ___lwdiv@divisor 0020           ___lwdiv@counter 0026                  __ptext10 11A5  
                __ptext11 1227                  __ptext20 11E1                  __ptext12 07EB  
                __ptext21 1F02                  __ptext13 15E2                  __ptext22 1F10  
                __ptext14 14DF                  __ptext23 13AC                  __ptext15 04A6  
                __ptext24 1F4A                  __ptext16 0809                  __ptext25 1F82  
                __ptext17 0832                  __ptext26 1557                  __ptext18 1351  
                __ptext27 1F34                  __ptext19 1476                  __ptext28 1FA2  
                __ptext29 140F         i1writeEEPROM@data 0072       UART_Write_Text@text 0021  
                _yagBakim 12FF             ??_writeEEPROM 0024           main@uartMessage 00BD  
              _INTCONbits 000B                  isdigit@c 0021        Lcd_Write_Char@temp 0022  
                intlevel1 0000                 sprintf@ap 003B                 sprintf@sp 0042  
        ___lwmod@dividend 0029                 stringcode 100A               ??_timer_isr 0076  
 __end_of_UART_Initialize 1F20       main@uartMessage_373 00C5        Lcd_Set_Cursor@temp 0029  
    main@combinedText_377 00A0       __end_of_writeEEPROM 1F82    __Umul8_16@multiplicand 0020  
         _UART_Write_Text 11E1                  sprintf@c 0041                  sprintf@f 002C  
         ___lwmod@divisor 0027           ___lwmod@counter 002B                  stringtab 1000  
              _UART_Write 1F02          UART_Write_Text@i 0026      __Umul8_16@multiplier 0028  
       __Umul8_16@product 0024  
