

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Sep 27 10:44:47 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     8                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    42                           	psect	maintext_split_1,global,class=CODE,split=1,delta=2
    43                           	psect	maintext_split_2,global,class=CODE,split=1,delta=2
    44                           	dabs	1,0x7E,2
    45     0000                     
    46                           ; Generated 22/03/2023 GMT
    47                           ; 
    48                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution. Publication is not required when
    62                           ;        this file is used in an embedded application.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F877A Definitions
    78                           ; 
    79                           ; SFR Addresses
    80     0000                     	;# 
    81     0001                     	;# 
    82     0002                     	;# 
    83     0003                     	;# 
    84     0004                     	;# 
    85     0005                     	;# 
    86     0006                     	;# 
    87     0007                     	;# 
    88     0008                     	;# 
    89     0009                     	;# 
    90     000A                     	;# 
    91     000B                     	;# 
    92     000C                     	;# 
    93     000D                     	;# 
    94     000E                     	;# 
    95     000E                     	;# 
    96     000F                     	;# 
    97     0010                     	;# 
    98     0011                     	;# 
    99     0012                     	;# 
   100     0013                     	;# 
   101     0014                     	;# 
   102     0015                     	;# 
   103     0015                     	;# 
   104     0016                     	;# 
   105     0017                     	;# 
   106     0018                     	;# 
   107     0019                     	;# 
   108     001A                     	;# 
   109     001B                     	;# 
   110     001B                     	;# 
   111     001C                     	;# 
   112     001D                     	;# 
   113     001E                     	;# 
   114     001F                     	;# 
   115     0081                     	;# 
   116     0085                     	;# 
   117     0086                     	;# 
   118     0087                     	;# 
   119     0088                     	;# 
   120     0089                     	;# 
   121     008C                     	;# 
   122     008D                     	;# 
   123     008E                     	;# 
   124     0091                     	;# 
   125     0092                     	;# 
   126     0093                     	;# 
   127     0094                     	;# 
   128     0098                     	;# 
   129     0099                     	;# 
   130     009C                     	;# 
   131     009D                     	;# 
   132     009E                     	;# 
   133     009F                     	;# 
   134     010C                     	;# 
   135     010D                     	;# 
   136     010E                     	;# 
   137     010F                     	;# 
   138     018C                     	;# 
   139     018D                     	;# 
   140     0000                     	;# 
   141     0001                     	;# 
   142     0002                     	;# 
   143     0003                     	;# 
   144     0004                     	;# 
   145     0005                     	;# 
   146     0006                     	;# 
   147     0007                     	;# 
   148     0008                     	;# 
   149     0009                     	;# 
   150     000A                     	;# 
   151     000B                     	;# 
   152     000C                     	;# 
   153     000D                     	;# 
   154     000E                     	;# 
   155     000E                     	;# 
   156     000F                     	;# 
   157     0010                     	;# 
   158     0011                     	;# 
   159     0012                     	;# 
   160     0013                     	;# 
   161     0014                     	;# 
   162     0015                     	;# 
   163     0015                     	;# 
   164     0016                     	;# 
   165     0017                     	;# 
   166     0018                     	;# 
   167     0019                     	;# 
   168     001A                     	;# 
   169     001B                     	;# 
   170     001B                     	;# 
   171     001C                     	;# 
   172     001D                     	;# 
   173     001E                     	;# 
   174     001F                     	;# 
   175     0081                     	;# 
   176     0085                     	;# 
   177     0086                     	;# 
   178     0087                     	;# 
   179     0088                     	;# 
   180     0089                     	;# 
   181     008C                     	;# 
   182     008D                     	;# 
   183     008E                     	;# 
   184     0091                     	;# 
   185     0092                     	;# 
   186     0093                     	;# 
   187     0094                     	;# 
   188     0098                     	;# 
   189     0099                     	;# 
   190     009C                     	;# 
   191     009D                     	;# 
   192     009E                     	;# 
   193     009F                     	;# 
   194     010C                     	;# 
   195     010D                     	;# 
   196     010E                     	;# 
   197     010F                     	;# 
   198     018C                     	;# 
   199     018D                     	;# 
   200     0000                     	;# 
   201     0001                     	;# 
   202     0002                     	;# 
   203     0003                     	;# 
   204     0004                     	;# 
   205     0005                     	;# 
   206     0006                     	;# 
   207     0007                     	;# 
   208     0008                     	;# 
   209     0009                     	;# 
   210     000A                     	;# 
   211     000B                     	;# 
   212     000C                     	;# 
   213     000D                     	;# 
   214     000E                     	;# 
   215     000E                     	;# 
   216     000F                     	;# 
   217     0010                     	;# 
   218     0011                     	;# 
   219     0012                     	;# 
   220     0013                     	;# 
   221     0014                     	;# 
   222     0015                     	;# 
   223     0015                     	;# 
   224     0016                     	;# 
   225     0017                     	;# 
   226     0018                     	;# 
   227     0019                     	;# 
   228     001A                     	;# 
   229     001B                     	;# 
   230     001B                     	;# 
   231     001C                     	;# 
   232     001D                     	;# 
   233     001E                     	;# 
   234     001F                     	;# 
   235     0081                     	;# 
   236     0085                     	;# 
   237     0086                     	;# 
   238     0087                     	;# 
   239     0088                     	;# 
   240     0089                     	;# 
   241     008C                     	;# 
   242     008D                     	;# 
   243     008E                     	;# 
   244     0091                     	;# 
   245     0092                     	;# 
   246     0093                     	;# 
   247     0094                     	;# 
   248     0098                     	;# 
   249     0099                     	;# 
   250     009C                     	;# 
   251     009D                     	;# 
   252     009E                     	;# 
   253     009F                     	;# 
   254     010C                     	;# 
   255     010D                     	;# 
   256     010E                     	;# 
   257     010F                     	;# 
   258     018C                     	;# 
   259     018D                     	;# 
   260                           
   261                           	psect	stringtext
   262     1000                     __pstringtext:
   263     1000                     stringtab:
   264     1000                     __stringtab:
   265                           
   266                           ;	String table - string pointers are 2 bytes each
   267     1000  1BFF               	btfsc	btemp+1,7
   268     1001  280A               	ljmp	stringcode
   269     1002  1383               	bcf	3,7
   270     1003  187F               	btfsc	btemp+1,0
   271     1004  1783               	bsf	3,7
   272     1005  0800               	movf	0,w
   273     1006  0A84               	incf	4,f
   274     1007  1903               	skipnz
   275     1008  0AFF               	incf	btemp+1,f
   276     1009  0008               	return
   277     100A                     stringcode:
   278     100A  087F               	movf	btemp+1,w
   279     100B  397F               	andlw	127
   280     100C  008A               	movwf	10
   281     100D  0804               	movf	4,w
   282     100E  0A84               	incf	4,f
   283     100F  1903               	skipnz
   284     1010  0AFF               	incf	btemp+1,f
   285     1011  0082               	movwf	2
   286     1012                     __stringbase:
   287     1012                     __end_of__stringtab:
   288     1012                     _dpowers:
   289     1012  3401               	retlw	1
   290     1013  3400               	retlw	0
   291     1014  340A               	retlw	10
   292     1015  3400               	retlw	0
   293     1016  3464               	retlw	100
   294     1017  3400               	retlw	0
   295     1018  34E8               	retlw	232
   296     1019  3403               	retlw	3
   297     101A  3410               	retlw	16
   298     101B  3427               	retlw	39
   299     101C                     __end_of_dpowers:
   300     001E                     _ADRESH	set	30
   301     001F                     _ADCON0bits	set	31
   302     000B                     _INTCONbits	set	11
   303     0001                     _TMR0	set	1
   304     0019                     _TXREG	set	25
   305     0018                     _RCSTA	set	24
   306     0040                     _RD0	set	64
   307     003B                     _RC3	set	59
   308     0049                     _RE1	set	73
   309     0038                     _RC0	set	56
   310     003A                     _RC2	set	58
   311     0048                     _RE0	set	72
   312     004A                     _RE2	set	74
   313     0039                     _RC1	set	57
   314     005A                     _T0IF	set	90
   315     005F                     _GIE	set	95
   316     002C                     _RA4	set	44
   317     0034                     _RB4	set	52
   318     0035                     _RB5	set	53
   319     0030                     _RB0	set	48
   320     0031                     _RB1	set	49
   321     0032                     _RB2	set	50
   322     0033                     _RB3	set	51
   323     009E                     _ADRESL	set	158
   324     009F                     _ADCON1bits	set	159
   325     0081                     _OPTION_REGbits	set	129
   326     0088                     _TRISD	set	136
   327     0086                     _TRISB	set	134
   328     0099                     _SPBRG	set	153
   329     0098                     _TXSTA	set	152
   330     043D                     _TRISC5	set	1085
   331     043C                     _TRISC4	set	1084
   332     042D                     _TRISA5	set	1069
   333     0428                     _TRISA0	set	1064
   334     043F                     _TRISC7	set	1087
   335     043E                     _TRISC6	set	1086
   336     042B                     _TRISA3	set	1067
   337     042A                     _TRISA2	set	1066
   338     0429                     _TRISA1	set	1065
   339     0440                     _TRISD0	set	1088
   340     043B                     _TRISC3	set	1083
   341     0438                     _TRISC0	set	1080
   342     044A                     _TRISE2	set	1098
   343     043A                     _TRISC2	set	1082
   344     0439                     _TRISC1	set	1081
   345     0449                     _TRISE1	set	1097
   346     0448                     _TRISE0	set	1096
   347     042C                     _TRISA4	set	1068
   348     04C1                     _TRMT	set	1217
   349     010C                     _EEDATA	set	268
   350     010D                     _EEADR	set	269
   351     018D                     _EECON2	set	397
   352     0C60                     _RD	set	3168
   353     0C61                     _WR	set	3169
   354     0C62                     _WREN	set	3170
   355     101C                     STR_29:
   356     101C  3420               	retlw	32	;' '
   357     101D  3420               	retlw	32	;' '
   358     101E  3420               	retlw	32	;' '
   359     101F  3449               	retlw	73	;'I'
   360     1020  344C               	retlw	76	;'L'
   361     1021  3445               	retlw	69	;'E'
   362     1022  3452               	retlw	82	;'R'
   363     1023  344C               	retlw	76	;'L'
   364     1024  3445               	retlw	69	;'E'
   365     1025  344D               	retlw	77	;'M'
   366     1026  3445               	retlw	69	;'E'
   367     1027  3420               	retlw	32	;' '
   368     1028  3448               	retlw	72	;'H'
   369     1029  3441               	retlw	65	;'A'
   370     102A  3454               	retlw	84	;'T'
   371     102B  3441               	retlw	65	;'A'
   372     102C  3453               	retlw	83	;'S'
   373     102D  3449               	retlw	73	;'I'
   374     102E  3420               	retlw	32	;' '
   375     102F  3420               	retlw	32	;' '
   376     1030  3420               	retlw	32	;' '
   377     1031  3420               	retlw	32	;' '
   378     1032  3420               	retlw	32	;' '
   379     1033  3420               	retlw	32	;' '
   380     1034  3420               	retlw	32	;' '
   381     1035  3420               	retlw	32	;' '
   382     1036  3400               	retlw	0
   383     1037                     STR_28:
   384     1037  3420               	retlw	32	;' '
   385     1038  3420               	retlw	32	;' '
   386     1039  3420               	retlw	32	;' '
   387     103A  3446               	retlw	70	;'F'
   388     103B  3445               	retlw	69	;'E'
   389     103C  3445               	retlw	69	;'E'
   390     103D  3444               	retlw	68	;'D'
   391     103E  3420               	retlw	32	;' '
   392     103F  3452               	retlw	82	;'R'
   393     1040  3441               	retlw	65	;'A'
   394     1041  3454               	retlw	84	;'T'
   395     1042  3445               	retlw	69	;'E'
   396     1043  3420               	retlw	32	;' '
   397     1044  3445               	retlw	69	;'E'
   398     1045  3452               	retlw	82	;'R'
   399     1046  3452               	retlw	82	;'R'
   400     1047  344F               	retlw	79	;'O'
   401     1048  3452               	retlw	82	;'R'
   402     1049  3420               	retlw	32	;' '
   403     104A  3420               	retlw	32	;' '
   404     104B  3420               	retlw	32	;' '
   405     104C  3420               	retlw	32	;' '
   406     104D  3420               	retlw	32	;' '
   407     104E  3420               	retlw	32	;' '
   408     104F  3420               	retlw	32	;' '
   409     1050  3400               	retlw	0
   410     1051                     STR_33:
   411     1051  3420               	retlw	32	;' '
   412     1052  3420               	retlw	32	;' '
   413     1053  3420               	retlw	32	;' '
   414     1054  3444               	retlw	68	;'D'
   415     1055  344F               	retlw	79	;'O'
   416     1056  344E               	retlw	78	;'N'
   417     1057  344D               	retlw	77	;'M'
   418     1058  3445               	retlw	69	;'E'
   419     1059  3420               	retlw	32	;' '
   420     105A  3448               	retlw	72	;'H'
   421     105B  3441               	retlw	65	;'A'
   422     105C  3454               	retlw	84	;'T'
   423     105D  3441               	retlw	65	;'A'
   424     105E  3453               	retlw	83	;'S'
   425     105F  3449               	retlw	73	;'I'
   426     1060  3420               	retlw	32	;' '
   427     1061  3420               	retlw	32	;' '
   428     1062  3420               	retlw	32	;' '
   429     1063  3420               	retlw	32	;' '
   430     1064  3420               	retlw	32	;' '
   431     1065  3420               	retlw	32	;' '
   432     1066  3420               	retlw	32	;' '
   433     1067  3420               	retlw	32	;' '
   434     1068  3400               	retlw	0
   435     1069                     STR_32:
   436     1069  3420               	retlw	32	;' '
   437     106A  3420               	retlw	32	;' '
   438     106B  3420               	retlw	32	;' '
   439     106C  3452               	retlw	82	;'R'
   440     106D  344F               	retlw	79	;'O'
   441     106E  3454               	retlw	84	;'T'
   442     106F  3441               	retlw	65	;'A'
   443     1070  3454               	retlw	84	;'T'
   444     1071  3449               	retlw	73	;'I'
   445     1072  344F               	retlw	79	;'O'
   446     1073  344E               	retlw	78	;'N'
   447     1074  3420               	retlw	32	;' '
   448     1075  3445               	retlw	69	;'E'
   449     1076  3452               	retlw	82	;'R'
   450     1077  3452               	retlw	82	;'R'
   451     1078  344F               	retlw	79	;'O'
   452     1079  3452               	retlw	82	;'R'
   453     107A  3420               	retlw	32	;' '
   454     107B  3420               	retlw	32	;' '
   455     107C  3420               	retlw	32	;' '
   456     107D  3420               	retlw	32	;' '
   457     107E  3420               	retlw	32	;' '
   458     107F  3420               	retlw	32	;' '
   459     1080  3400               	retlw	0
   460     1081                     STR_7:
   461     1081  3450               	retlw	80	;'P'
   462     1082  3455               	retlw	85	;'U'
   463     1083  3454               	retlw	84	;'T'
   464     1084  3420               	retlw	32	;' '
   465     1085  3449               	retlw	73	;'I'
   466     1086  3454               	retlw	84	;'T'
   467     1087  3420               	retlw	32	;' '
   468     1088  3449               	retlw	73	;'I'
   469     1089  344E               	retlw	78	;'N'
   470     108A  3420               	retlw	32	;' '
   471     108B  3453               	retlw	83	;'S'
   472     108C  3454               	retlw	84	;'T'
   473     108D  344F               	retlw	79	;'O'
   474     108E  3450               	retlw	80	;'P'
   475     108F  3420               	retlw	32	;' '
   476     1090  3453               	retlw	83	;'S'
   477     1091  3454               	retlw	84	;'T'
   478     1092  3441               	retlw	65	;'A'
   479     1093  3454               	retlw	84	;'T'
   480     1094  3445               	retlw	69	;'E'
   481     1095  3400               	retlw	0
   482     1096                     STR_6:
   483     1096  3453               	retlw	83	;'S'
   484     1097  3454               	retlw	84	;'T'
   485     1098  344F               	retlw	79	;'O'
   486     1099  3450               	retlw	80	;'P'
   487     109A  3420               	retlw	32	;' '
   488     109B  3444               	retlw	68	;'D'
   489     109C  3455               	retlw	85	;'U'
   490     109D  3452               	retlw	82	;'R'
   491     109E  3455               	retlw	85	;'U'
   492     109F  344D               	retlw	77	;'M'
   493     10A0  3455               	retlw	85	;'U'
   494     10A1  344E               	retlw	78	;'N'
   495     10A2  3441               	retlw	65	;'A'
   496     10A3  3420               	retlw	32	;' '
   497     10A4  3447               	retlw	71	;'G'
   498     10A5  3445               	retlw	69	;'E'
   499     10A6  3454               	retlw	84	;'T'
   500     10A7  3449               	retlw	73	;'I'
   501     10A8  3452               	retlw	82	;'R'
   502     10A9  3400               	retlw	0
   503     10AA                     STR_1:
   504     10AA  3459               	retlw	89	;'Y'
   505     10AB  3441               	retlw	65	;'A'
   506     10AC  3447               	retlw	71	;'G'
   507     10AD  3420               	retlw	32	;' '
   508     10AE  3442               	retlw	66	;'B'
   509     10AF  3441               	retlw	65	;'A'
   510     10B0  344B               	retlw	75	;'K'
   511     10B1  3449               	retlw	73	;'I'
   512     10B2  344D               	retlw	77	;'M'
   513     10B3  3449               	retlw	73	;'I'
   514     10B4  3420               	retlw	32	;' '
   515     10B5  3459               	retlw	89	;'Y'
   516     10B6  3441               	retlw	65	;'A'
   517     10B7  3450               	retlw	80	;'P'
   518     10B8  3449               	retlw	73	;'I'
   519     10B9  344E               	retlw	78	;'N'
   520     10BA  3449               	retlw	73	;'I'
   521     10BB  345A               	retlw	90	;'Z'
   522     10BC  3400               	retlw	0
   523     10BD                     STR_3:
   524     10BD  3455               	retlw	85	;'U'
   525     10BE  345A               	retlw	90	;'Z'
   526     10BF  344D               	retlw	77	;'M'
   527     10C0  3441               	retlw	65	;'A'
   528     10C1  344E               	retlw	78	;'N'
   529     10C2  344C               	retlw	76	;'L'
   530     10C3  3441               	retlw	65	;'A'
   531     10C4  3452               	retlw	82	;'R'
   532     10C5  3420               	retlw	32	;' '
   533     10C6  344D               	retlw	77	;'M'
   534     10C7  3441               	retlw	65	;'A'
   535     10C8  344B               	retlw	75	;'K'
   536     10C9  3449               	retlw	73	;'I'
   537     10CA  344E               	retlw	78	;'N'
   538     10CB  3441               	retlw	65	;'A'
   539     10CC  3400               	retlw	0
   540     10CD                     STR_18:
   541     10CD  3420               	retlw	32	;' '
   542     10CE  3446               	retlw	70	;'F'
   543     10CF  3457               	retlw	87	;'W'
   544     10D0  3444               	retlw	68	;'D'
   545     10D1  3420               	retlw	32	;' '
   546     10D2  3420               	retlw	32	;' '
   547     10D3  3420               	retlw	32	;' '
   548     10D4  3420               	retlw	32	;' '
   549     10D5  3420               	retlw	32	;' '
   550     10D6  3420               	retlw	32	;' '
   551     10D7  3420               	retlw	32	;' '
   552     10D8  3420               	retlw	32	;' '
   553     10D9  3420               	retlw	32	;' '
   554     10DA  3420               	retlw	32	;' '
   555     10DB  3400               	retlw	0
   556     10DC                     STR_4:
   557     10DC  3477               	retlw	119	;'w'
   558     10DD  3477               	retlw	119	;'w'
   559     10DE  3477               	retlw	119	;'w'
   560     10DF  342E               	retlw	46	;'.'
   561     10E0  3462               	retlw	98	;'b'
   562     10E1  346F               	retlw	111	;'o'
   563     10E2  3472               	retlw	114	;'r'
   564     10E3  3476               	retlw	118	;'v'
   565     10E4  3465               	retlw	101	;'e'
   566     10E5  346B               	retlw	107	;'k'
   567     10E6  342E               	retlw	46	;'.'
   568     10E7  3463               	retlw	99	;'c'
   569     10E8  346F               	retlw	111	;'o'
   570     10E9  346D               	retlw	109	;'m'
   571     10EA  3400               	retlw	0
   572     10EB                     STR_24:
   573     10EB  3420               	retlw	32	;' '
   574     10EC  3452               	retlw	82	;'R'
   575     10ED  3445               	retlw	69	;'E'
   576     10EE  3457               	retlw	87	;'W'
   577     10EF  3420               	retlw	32	;' '
   578     10F0  3420               	retlw	32	;' '
   579     10F1  3420               	retlw	32	;' '
   580     10F2  3420               	retlw	32	;' '
   581     10F3  3420               	retlw	32	;' '
   582     10F4  3420               	retlw	32	;' '
   583     10F5  3420               	retlw	32	;' '
   584     10F6  3420               	retlw	32	;' '
   585     10F7  3420               	retlw	32	;' '
   586     10F8  3400               	retlw	0
   587     10F9                     STR_2:
   588     10F9  344F               	retlw	79	;'O'
   589     10FA  3449               	retlw	73	;'I'
   590     10FB  344C               	retlw	76	;'L'
   591     10FC  3420               	retlw	32	;' '
   592     10FD  3454               	retlw	84	;'T'
   593     10FE  3448               	retlw	72	;'H'
   594     10FF  3445               	retlw	69	;'E'
   595     1100  3420               	retlw	32	;' '
   596     1101  3447               	retlw	71	;'G'
   597     1102  3445               	retlw	69	;'E'
   598     1103  3441               	retlw	65	;'A'
   599     1104  3452               	retlw	82	;'R'
   600     1105  3453               	retlw	83	;'S'
   601     1106  3400               	retlw	0
   602     1107                     STR_26:
   603     1107  3420               	retlw	32	;' '
   604     1108  3453               	retlw	83	;'S'
   605     1109  3454               	retlw	84	;'T'
   606     110A  344F               	retlw	79	;'O'
   607     110B  3450               	retlw	80	;'P'
   608     110C  3420               	retlw	32	;' '
   609     110D  3420               	retlw	32	;' '
   610     110E  3420               	retlw	32	;' '
   611     110F  3420               	retlw	32	;' '
   612     1110  3420               	retlw	32	;' '
   613     1111  3420               	retlw	32	;' '
   614     1112  3420               	retlw	32	;' '
   615     1113  3400               	retlw	0
   616     1114                     STR_8:
   617     1114  3425               	retlw	37	;'%'
   618     1115  3435               	retlw	53	;'5'
   619     1116  3475               	retlw	117	;'u'
   620     1117  3468               	retlw	104	;'h'
   621     1118  3420               	retlw	32	;' '
   622     1119  3425               	retlw	37	;'%'
   623     111A  3430               	retlw	48	;'0'
   624     111B  3432               	retlw	50	;'2'
   625     111C  3475               	retlw	117	;'u'
   626     111D  346D               	retlw	109	;'m'
   627     111E  3400               	retlw	0
   628     111F                     STR_10:
   629     111F  3446               	retlw	70	;'F'
   630     1120  3465               	retlw	101	;'e'
   631     1121  3465               	retlw	101	;'e'
   632     1122  3464               	retlw	100	;'d'
   633     1123  3452               	retlw	82	;'R'
   634     1124  3461               	retlw	97	;'a'
   635     1125  3474               	retlw	116	;'t'
   636     1126  3465               	retlw	101	;'e'
   637     1127  343A               	retlw	58	;':'
   638     1128  3400               	retlw	0
   639     1129                     STR_16:
   640     1129  3420               	retlw	32	;' '
   641     112A  3446               	retlw	70	;'F'
   642     112B  3457               	retlw	87	;'W'
   643     112C  3444               	retlw	68	;'D'
   644     112D  3420               	retlw	32	;' '
   645     112E  3431               	retlw	49	;'1'
   646     112F  342E               	retlw	46	;'.'
   647     1130  3436               	retlw	54	;'6'
   648     1131  344B               	retlw	75	;'K'
   649     1132  3400               	retlw	0
   650     1133                     STR_22:
   651     1133  3420               	retlw	32	;' '
   652     1134  3452               	retlw	82	;'R'
   653     1135  3445               	retlw	69	;'E'
   654     1136  3457               	retlw	87	;'W'
   655     1137  3420               	retlw	32	;' '
   656     1138  3431               	retlw	49	;'1'
   657     1139  342E               	retlw	46	;'.'
   658     113A  3436               	retlw	54	;'6'
   659     113B  344B               	retlw	75	;'K'
   660     113C  3400               	retlw	0
   661     113D                     STR_13:
   662     113D  3425               	retlw	37	;'%'
   663     113E  3475               	retlw	117	;'u'
   664     113F  3425               	retlw	37	;'%'
   665     1140  3475               	retlw	117	;'u'
   666     1141  3425               	retlw	37	;'%'
   667     1142  3475               	retlw	117	;'u'
   668     1143  342E               	retlw	46	;'.'
   669     1144  3425               	retlw	37	;'%'
   670     1145  3475               	retlw	117	;'u'
   671     1146  3400               	retlw	0
   672     1147                     STR_14:
   673     1147  3420               	retlw	32	;' '
   674     1148  3446               	retlw	70	;'F'
   675     1149  3457               	retlw	87	;'W'
   676     114A  3444               	retlw	68	;'D'
   677     114B  3420               	retlw	32	;' '
   678     114C  344C               	retlw	76	;'L'
   679     114D  344D               	retlw	77	;'M'
   680     114E  3454               	retlw	84	;'T'
   681     114F  3400               	retlw	0
   682     1150                     STR_20:
   683     1150  3420               	retlw	32	;' '
   684     1151  3452               	retlw	82	;'R'
   685     1152  3445               	retlw	69	;'E'
   686     1153  3457               	retlw	87	;'W'
   687     1154  3420               	retlw	32	;' '
   688     1155  344C               	retlw	76	;'L'
   689     1156  344D               	retlw	77	;'M'
   690     1157  3454               	retlw	84	;'T'
   691     1158  3400               	retlw	0
   692     1159                     STR_17:
   693     1159  3473               	retlw	115	;'s'
   694     115A  3425               	retlw	37	;'%'
   695     115B  3464               	retlw	100	;'d'
   696     115C  340D               	retlw	13
   697     115D  340A               	retlw	10
   698     115E  3400               	retlw	0
   699     115F                     STR_11:
   700     115F  3425               	retlw	37	;'%'
   701     1160  3430               	retlw	48	;'0'
   702     1161  3430               	retlw	48	;'0'
   703     1162  3433               	retlw	51	;'3'
   704     1163  3475               	retlw	117	;'u'
   705     1164  3400               	retlw	0
   706     1165                     STR_15:
   707     1165  3473               	retlw	115	;'s'
   708     1166  3430               	retlw	48	;'0'
   709     1167  340D               	retlw	13
   710     1168  340A               	retlw	10
   711     1169  3400               	retlw	0
   712     116A                     STR_12:
   713     116A  3452               	retlw	82	;'R'
   714     116B  3450               	retlw	80	;'P'
   715     116C  344D               	retlw	77	;'M'
   716     116D  343A               	retlw	58	;':'
   717     116E  3400               	retlw	0
   718     116F                     STR_5:
   719     116F  3456               	retlw	86	;'V'
   720     1170  3433               	retlw	51	;'3'
   721     1171  3400               	retlw	0
   722     1165                     
   723                           	psect	cinit
   724     0011                     start_initialization:	
   725                           ; #config settings
   726                           
   727     0011                     __initialization:
   728                           
   729                           ; Clear objects allocated to COMMON
   730     0011  01F7               	clrf	__pbssCOMMON& (0+127)
   731     0012  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   732                           
   733                           ; Clear objects allocated to BANK3
   734     0013  1683               	bsf	3,5	;RP0=1, select bank3
   735     0014  1703               	bsf	3,6	;RP1=1, select bank3
   736     0015  01A4               	clrf	__pbssBANK3& (0+127)
   737     0016  01A5               	clrf	(__pbssBANK3+1)& (0+127)
   738     0017  01A6               	clrf	(__pbssBANK3+2)& (0+127)
   739     0018  01A7               	clrf	(__pbssBANK3+3)& (0+127)
   740     0019  01A8               	clrf	(__pbssBANK3+4)& (0+127)
   741     001A  01A9               	clrf	(__pbssBANK3+5)& (0+127)
   742     001B  01AA               	clrf	(__pbssBANK3+6)& (0+127)
   743     001C  01AB               	clrf	(__pbssBANK3+7)& (0+127)
   744     001D                     end_of_initialization:	
   745                           ;End of C runtime variable initialization code
   746                           
   747     001D                     __end_of__initialization:
   748     001D  0183               	clrf	3
   749     001E  160A  118A  2EE2   	ljmp	_main	;jump to C main() function
   750                           
   751                           	psect	bssCOMMON
   752     0077                     __pbssCOMMON:
   753     0077                     _kesmeSayaci:
   754     0077                     	ds	2
   755                           
   756                           	psect	bssBANK3
   757     01A4                     __pbssBANK3:
   758     01A4                     _currentTime:
   759     01A4                     	ds	8
   760                           
   761                           	psect	cstackBANK3
   762     0190                     __pcstackBANK3:
   763     0190                     main@ilkAcilis:
   764                           
   765                           ; 2 bytes @ 0x0
   766     0190                     	ds	2
   767     0192                     main@adcValue1:
   768                           
   769                           ; 4 bytes @ 0x2
   770     0192                     	ds	4
   771     0196                     main@yuzler:
   772                           
   773                           ; 2 bytes @ 0x6
   774     0196                     	ds	2
   775     0198                     main@binler:
   776                           
   777                           ; 2 bytes @ 0x8
   778     0198                     	ds	2
   779     019A                     main@integerPart:
   780                           
   781                           ; 4 bytes @ 0xA
   782     019A                     	ds	4
   783     019E                     main@negativeFeedValue:
   784                           
   785                           ; 2 bytes @ 0xE
   786     019E                     	ds	2
   787     01A0                     main@realSaat:
   788                           
   789                           ; 2 bytes @ 0x10
   790     01A0                     	ds	2
   791     01A2                     main@displayValue:
   792                           
   793                           ; 2 bytes @ 0x12
   794     01A2                     	ds	2
   795                           
   796                           	psect	cstackBANK1
   797     00A0                     __pcstackBANK1:
   798     00A0                     main@combinedText_373:
   799                           
   800                           ; 20 bytes @ 0x0
   801     00A0                     	ds	20
   802     00B4                     main@lcdText:
   803                           
   804                           ; 9 bytes @ 0x14
   805     00B4                     	ds	9
   806     00BD                     main@uartMessage:
   807                           
   808                           ; 8 bytes @ 0x1D
   809     00BD                     	ds	8
   810     00C5                     main@uartMessage_369:
   811                           
   812                           ; 8 bytes @ 0x25
   813     00C5                     	ds	8
   814     00CD                     main@adcValue3:
   815                           
   816                           ; 4 bytes @ 0x2D
   817     00CD                     	ds	4
   818     00D1                     main@oranValue:
   819                           
   820                           ; 4 bytes @ 0x31
   821     00D1                     	ds	4
   822     00D5                     main@gostermeliklcd:
   823                           
   824                           ; 4 bytes @ 0x35
   825     00D5                     	ds	4
   826     00D9                     _main$1027:
   827                           
   828                           ; 4 bytes @ 0x39
   829     00D9                     	ds	4
   830     00DD                     main@rpmString:
   831                           
   832                           ; 5 bytes @ 0x3D
   833     00DD                     	ds	5
   834     00E2                     main@adcValue2:
   835                           
   836                           ; 2 bytes @ 0x42
   837     00E2                     	ds	2
   838     00E4                     main@dakika:
   839                           
   840                           ; 2 bytes @ 0x44
   841     00E4                     	ds	2
   842     00E6                     main@onlar:
   843                           
   844                           ; 2 bytes @ 0x46
   845     00E6                     	ds	2
   846     00E8                     main@birler:
   847                           
   848                           ; 2 bytes @ 0x48
   849     00E8                     	ds	2
   850     00EA                     main@negativeDisplayValue:
   851                           
   852                           ; 2 bytes @ 0x4A
   853     00EA                     	ds	2
   854     00EC                     main@adcString1:
   855                           
   856                           ; 4 bytes @ 0x4C
   857     00EC                     	ds	4
   858                           
   859                           	psect	cstackCOMMON
   860     0070                     __pcstackCOMMON:
   861     0070                     ?_isdigit:
   862     0070                     ?_UART_Initialize:	
   863                           ; 1 bit 
   864                           
   865     0070                     ?_UART_Write:	
   866                           ; 1 bytes @ 0x0
   867                           
   868     0070                     ?_Lcd_Port:	
   869                           ; 1 bytes @ 0x0
   870                           
   871     0070                     ?_Lcd_Cmd:	
   872                           ; 1 bytes @ 0x0
   873                           
   874     0070                     ?_Lcd_Clear:	
   875                           ; 1 bytes @ 0x0
   876                           
   877     0070                     ?_Lcd_Init:	
   878                           ; 1 bytes @ 0x0
   879                           
   880     0070                     ?_Lcd_Write_Char:	
   881                           ; 1 bytes @ 0x0
   882                           
   883     0070                     ?_yagBakim:	
   884                           ; 1 bytes @ 0x0
   885                           
   886     0070                     ?_writeEEPROM:	
   887                           ; 1 bytes @ 0x0
   888                           
   889     0070                     ?_incrementTime:	
   890                           ; 1 bytes @ 0x0
   891                           
   892     0070                     ??_incrementTime:	
   893                           ; 1 bytes @ 0x0
   894                           
   895     0070                     ?_timer_isr:	
   896                           ; 1 bytes @ 0x0
   897                           
   898     0070                     ?_main:	
   899                           ; 1 bytes @ 0x0
   900                           
   901     0070                     writeEEPROM@address:	
   902                           ; 2 bytes @ 0x0
   903                           
   904                           
   905                           ; 2 bytes @ 0x0
   906     0070                     	ds	2
   907     0072                     incrementTime@time:
   908     0072                     writeEEPROM@data:	
   909                           ; 1 bytes @ 0x2
   910                           
   911                           
   912                           ; 2 bytes @ 0x2
   913     0072                     	ds	2
   914     0074                     ??_writeEEPROM:
   915     0074                     ??_timer_isr:	
   916                           ; 1 bytes @ 0x4
   917                           
   918                           
   919                           ; 1 bytes @ 0x4
   920     0074                     	ds	3
   921                           
   922                           	psect	cstackBANK0
   923     0020                     __pcstackBANK0:
   924     0020                     ??_isdigit:
   925     0020                     ??_UART_Initialize:	
   926                           ; 1 bytes @ 0x0
   927                           
   928     0020                     ??_UART_Write:	
   929                           ; 1 bytes @ 0x0
   930                           
   931     0020                     ??_Lcd_Port:	
   932                           ; 1 bytes @ 0x0
   933                           
   934     0020                     ?__Umul8_16:	
   935                           ; 1 bytes @ 0x0
   936                           
   937     0020                     ?_readEEPROM:	
   938                           ; 2 bytes @ 0x0
   939                           
   940     0020                     ?___lwdiv:	
   941                           ; 2 bytes @ 0x0
   942                           
   943     0020                     ?___fltol:	
   944                           ; 2 bytes @ 0x0
   945                           
   946     0020                     ?___fldiv:	
   947                           ; 4 bytes @ 0x0
   948                           
   949     0020                     ?___xxtofl:	
   950                           ; 4 bytes @ 0x0
   951                           
   952     0020                     UART_Write@data:	
   953                           ; 4 bytes @ 0x0
   954                           
   955     0020                     Lcd_Port@a:	
   956                           ; 1 bytes @ 0x0
   957                           
   958     0020                     __Umul8_16@multiplicand:	
   959                           ; 1 bytes @ 0x0
   960                           
   961     0020                     _isdigit$836:	
   962                           ; 1 bytes @ 0x0
   963                           
   964     0020                     readEEPROM@address:	
   965                           ; 1 bytes @ 0x0
   966                           
   967     0020                     ___lwdiv@divisor:	
   968                           ; 2 bytes @ 0x0
   969                           
   970     0020                     ___fltol@f1:	
   971                           ; 2 bytes @ 0x0
   972                           
   973     0020                     ___fldiv@a:	
   974                           ; 4 bytes @ 0x0
   975                           
   976     0020                     ___xxtofl@val:	
   977                           ; 4 bytes @ 0x0
   978                           
   979                           
   980                           ; 4 bytes @ 0x0
   981     0020                     	ds	1
   982     0021                     ?_UART_Write_Text:
   983     0021                     ??_Lcd_Cmd:	
   984                           ; 1 bytes @ 0x1
   985                           
   986     0021                     ??_Lcd_Write_Char:	
   987                           ; 1 bytes @ 0x1
   988                           
   989     0021                     isdigit@c:	
   990                           ; 1 bytes @ 0x1
   991                           
   992     0021                     UART_Write_Text@text:	
   993                           ; 1 bytes @ 0x1
   994                           
   995                           
   996                           ; 2 bytes @ 0x1
   997     0021                     	ds	1
   998     0022                     ??__Umul8_16:
   999     0022                     ??_readEEPROM:	
  1000                           ; 1 bytes @ 0x2
  1001                           
  1002     0022                     Lcd_Write_Char@temp:	
  1003                           ; 1 bytes @ 0x2
  1004                           
  1005     0022                     ___lwdiv@dividend:	
  1006                           ; 1 bytes @ 0x2
  1007                           
  1008                           
  1009                           ; 2 bytes @ 0x2
  1010     0022                     	ds	1
  1011     0023                     ??_UART_Write_Text:
  1012     0023                     Lcd_Cmd@a:	
  1013                           ; 1 bytes @ 0x3
  1014                           
  1015     0023                     Lcd_Write_Char@y:	
  1016                           ; 1 bytes @ 0x3
  1017                           
  1018                           
  1019                           ; 1 bytes @ 0x3
  1020     0023                     	ds	1
  1021     0024                     ??_Lcd_Clear:
  1022     0024                     ?_Lcd_Set_Cursor:	
  1023                           ; 1 bytes @ 0x4
  1024                           
  1025     0024                     ??_Lcd_Init:	
  1026                           ; 1 bytes @ 0x4
  1027                           
  1028     0024                     ??___fltol:	
  1029                           ; 1 bytes @ 0x4
  1030                           
  1031     0024                     ??___lwdiv:	
  1032                           ; 1 bytes @ 0x4
  1033                           
  1034     0024                     ??___xxtofl:	
  1035                           ; 1 bytes @ 0x4
  1036                           
  1037     0024                     ?___wmul:	
  1038                           ; 1 bytes @ 0x4
  1039                           
  1040     0024                     Lcd_Set_Cursor@b:	
  1041                           ; 2 bytes @ 0x4
  1042                           
  1043     0024                     Lcd_Write_Char@a:	
  1044                           ; 1 bytes @ 0x4
  1045                           
  1046     0024                     ___lwdiv@counter:	
  1047                           ; 1 bytes @ 0x4
  1048                           
  1049     0024                     ___wmul@multiplier:	
  1050                           ; 1 bytes @ 0x4
  1051                           
  1052     0024                     __Umul8_16@product:	
  1053                           ; 2 bytes @ 0x4
  1054                           
  1055     0024                     ___fldiv@b:	
  1056                           ; 2 bytes @ 0x4
  1057                           
  1058                           
  1059                           ; 4 bytes @ 0x4
  1060     0024                     	ds	1
  1061     0025                     ??_Lcd_Set_Cursor:
  1062     0025                     ?_Lcd_Write_String:	
  1063                           ; 1 bytes @ 0x5
  1064                           
  1065     0025                     Lcd_Write_String@a:	
  1066                           ; 1 bytes @ 0x5
  1067                           
  1068     0025                     ___lwdiv@quotient:	
  1069                           ; 2 bytes @ 0x5
  1070                           
  1071                           
  1072                           ; 2 bytes @ 0x5
  1073     0025                     	ds	1
  1074     0026                     Lcd_Set_Cursor@a:
  1075     0026                     UART_Write_Text@i:	
  1076                           ; 1 bytes @ 0x6
  1077                           
  1078     0026                     ___wmul@multiplicand:	
  1079                           ; 2 bytes @ 0x6
  1080                           
  1081     0026                     __Umul8_16@word_mpld:	
  1082                           ; 2 bytes @ 0x6
  1083                           
  1084                           
  1085                           ; 2 bytes @ 0x6
  1086     0026                     	ds	1
  1087     0027                     ??_Lcd_Write_String:
  1088     0027                     ?___lwmod:	
  1089                           ; 1 bytes @ 0x7
  1090                           
  1091     0027                     Lcd_Set_Cursor@z:	
  1092                           ; 2 bytes @ 0x7
  1093                           
  1094     0027                     ___lwmod@divisor:	
  1095                           ; 1 bytes @ 0x7
  1096                           
  1097                           
  1098                           ; 2 bytes @ 0x7
  1099     0027                     	ds	1
  1100     0028                     ??___wmul:
  1101     0028                     ??___fldiv:	
  1102                           ; 1 bytes @ 0x8
  1103                           
  1104     0028                     Lcd_Set_Cursor@y:	
  1105                           ; 1 bytes @ 0x8
  1106                           
  1107     0028                     ___fltol@sign1:	
  1108                           ; 1 bytes @ 0x8
  1109                           
  1110     0028                     __Umul8_16@multiplier:	
  1111                           ; 1 bytes @ 0x8
  1112                           
  1113     0028                     ___xxtofl@sign:	
  1114                           ; 1 bytes @ 0x8
  1115                           
  1116     0028                     ___wmul@product:	
  1117                           ; 1 bytes @ 0x8
  1118                           
  1119                           
  1120                           ; 2 bytes @ 0x8
  1121     0028                     	ds	1
  1122     0029                     Lcd_Set_Cursor@temp:
  1123     0029                     ___fltol@exp1:	
  1124                           ; 1 bytes @ 0x9
  1125                           
  1126     0029                     ___xxtofl@exp:	
  1127                           ; 1 bytes @ 0x9
  1128                           
  1129     0029                     ___lwmod@dividend:	
  1130                           ; 1 bytes @ 0x9
  1131                           
  1132                           
  1133                           ; 2 bytes @ 0x9
  1134     0029                     	ds	1
  1135     002A                     ?___awdiv:
  1136     002A                     ?___awmod:	
  1137                           ; 2 bytes @ 0xA
  1138                           
  1139     002A                     Lcd_Write_String@i:	
  1140                           ; 2 bytes @ 0xA
  1141                           
  1142     002A                     ___awdiv@divisor:	
  1143                           ; 2 bytes @ 0xA
  1144                           
  1145     002A                     ___awmod@divisor:	
  1146                           ; 2 bytes @ 0xA
  1147                           
  1148     002A                     ___xxtofl@arg:	
  1149                           ; 2 bytes @ 0xA
  1150                           
  1151                           
  1152                           ; 4 bytes @ 0xA
  1153     002A                     	ds	1
  1154     002B                     ??___lwmod:
  1155     002B                     ___lwmod@counter:	
  1156                           ; 1 bytes @ 0xB
  1157                           
  1158                           
  1159                           ; 1 bytes @ 0xB
  1160     002B                     	ds	1
  1161     002C                     ??_yagBakim:
  1162     002C                     ?_sprintf:	
  1163                           ; 1 bytes @ 0xC
  1164                           
  1165     002C                     yagBakim@i:	
  1166                           ; 2 bytes @ 0xC
  1167                           
  1168     002C                     sprintf@f:	
  1169                           ; 2 bytes @ 0xC
  1170                           
  1171     002C                     ___awdiv@dividend:	
  1172                           ; 2 bytes @ 0xC
  1173                           
  1174     002C                     ___awmod@dividend:	
  1175                           ; 2 bytes @ 0xC
  1176                           
  1177                           
  1178                           ; 2 bytes @ 0xC
  1179     002C                     	ds	1
  1180     002D                     ___fldiv@rem:
  1181                           
  1182                           ; 4 bytes @ 0xD
  1183     002D                     	ds	1
  1184     002E                     ??___awdiv:
  1185     002E                     ??___awmod:	
  1186                           ; 1 bytes @ 0xE
  1187                           
  1188     002E                     ___awdiv@counter:	
  1189                           ; 1 bytes @ 0xE
  1190                           
  1191     002E                     ___awmod@counter:	
  1192                           ; 1 bytes @ 0xE
  1193                           
  1194                           
  1195                           ; 1 bytes @ 0xE
  1196     002E                     	ds	1
  1197     002F                     ___awdiv@sign:
  1198     002F                     ___awmod@sign:	
  1199                           ; 1 bytes @ 0xF
  1200                           
  1201                           
  1202                           ; 1 bytes @ 0xF
  1203     002F                     	ds	1
  1204     0030                     ___awdiv@quotient:
  1205                           
  1206                           ; 2 bytes @ 0x10
  1207     0030                     	ds	1
  1208     0031                     ___fldiv@sign:
  1209                           
  1210                           ; 1 bytes @ 0x11
  1211     0031                     	ds	1
  1212     0032                     ___fldiv@new_exp:
  1213                           
  1214                           ; 2 bytes @ 0x12
  1215     0032                     	ds	2
  1216     0034                     ___fldiv@grs:
  1217                           
  1218                           ; 4 bytes @ 0x14
  1219     0034                     	ds	2
  1220     0036                     ??_sprintf:
  1221                           
  1222                           ; 1 bytes @ 0x16
  1223     0036                     	ds	2
  1224     0038                     ___fldiv@bexp:
  1225                           
  1226                           ; 1 bytes @ 0x18
  1227     0038                     	ds	1
  1228     0039                     ___fldiv@aexp:
  1229                           
  1230                           ; 1 bytes @ 0x19
  1231     0039                     	ds	1
  1232     003A                     ?___flmul:
  1233     003A                     sprintf@prec:	
  1234                           ; 4 bytes @ 0x1A
  1235                           
  1236     003A                     ___flmul@b:	
  1237                           ; 1 bytes @ 0x1A
  1238                           
  1239                           
  1240                           ; 4 bytes @ 0x1A
  1241     003A                     	ds	1
  1242     003B                     sprintf@ap:
  1243                           
  1244                           ; 1 bytes @ 0x1B
  1245     003B                     	ds	1
  1246     003C                     sprintf@val:
  1247                           
  1248                           ; 2 bytes @ 0x1C
  1249     003C                     	ds	2
  1250     003E                     sprintf@flag:
  1251     003E                     ___flmul@a:	
  1252                           ; 1 bytes @ 0x1E
  1253                           
  1254                           
  1255                           ; 4 bytes @ 0x1E
  1256     003E                     	ds	1
  1257     003F                     sprintf@width:
  1258                           
  1259                           ; 2 bytes @ 0x1F
  1260     003F                     	ds	2
  1261     0041                     sprintf@c:
  1262                           
  1263                           ; 1 bytes @ 0x21
  1264     0041                     	ds	1
  1265     0042                     ??___flmul:
  1266     0042                     sprintf@sp:	
  1267                           ; 1 bytes @ 0x22
  1268                           
  1269                           
  1270                           ; 1 bytes @ 0x22
  1271     0042                     	ds	5
  1272     0047                     ___flmul@sign:
  1273                           
  1274                           ; 1 bytes @ 0x27
  1275     0047                     	ds	1
  1276     0048                     ___flmul@grs:
  1277                           
  1278                           ; 4 bytes @ 0x28
  1279     0048                     	ds	4
  1280     004C                     ___flmul@aexp:
  1281                           
  1282                           ; 1 bytes @ 0x2C
  1283     004C                     	ds	1
  1284     004D                     ___flmul@bexp:
  1285                           
  1286                           ; 1 bytes @ 0x2D
  1287     004D                     	ds	1
  1288     004E                     ___flmul@prod:
  1289                           
  1290                           ; 4 bytes @ 0x2E
  1291     004E                     	ds	4
  1292     0052                     ___flmul@temp:
  1293                           
  1294                           ; 2 bytes @ 0x32
  1295     0052                     	ds	2
  1296     0054                     ??_main:
  1297                           
  1298                           ; 1 bytes @ 0x34
  1299     0054                     	ds	6
  1300     005A                     main@combinedText:
  1301                           
  1302                           ; 20 bytes @ 0x3A
  1303     005A                     	ds	20
  1304                           
  1305                           	psect	maintext
  1306     16E2                     __pmaintext:	
  1307 ;;
  1308 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
  1309 ;;
  1310 ;; *************** function _main *****************
  1311 ;; Defined at:
  1312 ;;		line 116 in file "main1.c"
  1313 ;; Parameters:    Size  Location     Type
  1314 ;;		None
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;  uartMessage     8   37[BANK1 ] unsigned char [8]
  1317 ;;  uartMessage     8   29[BANK1 ] unsigned char [8]
  1318 ;;  combinedText   20    0[BANK1 ] unsigned char [20]
  1319 ;;  negativeDisp    2   74[BANK1 ] int 
  1320 ;;  negativeFeed    2   14[BANK3 ] int 
  1321 ;;  combinedText   20   58[BANK0 ] unsigned char [20]
  1322 ;;  rpmString       5   61[BANK1 ] unsigned char [5]
  1323 ;;  adcString1      4   76[BANK1 ] unsigned char [4]
  1324 ;;  integerPart     4   10[BANK3 ] float 
  1325 ;;  gostermelikl    4   53[BANK1 ] float 
  1326 ;;  oranValue       4   49[BANK1 ] float 
  1327 ;;  realSaat        2   16[BANK3 ] int 
  1328 ;;  binler          2    8[BANK3 ] int 
  1329 ;;  yuzler          2    6[BANK3 ] int 
  1330 ;;  birler          2   72[BANK1 ] int 
  1331 ;;  onlar           2   70[BANK1 ] int 
  1332 ;;  dakika          2   68[BANK1 ] int 
  1333 ;;  lcdText         9   20[BANK1 ] unsigned char [9]
  1334 ;;  adcValue1       4    2[BANK3 ] float 
  1335 ;;  adcValue3       4   45[BANK1 ] float 
  1336 ;;  displayValue    2   18[BANK3 ] unsigned int 
  1337 ;;  ilkAcilis       2    0[BANK3 ] int 
  1338 ;;  adcValue2       2   66[BANK1 ] int 
  1339 ;;  a               2    0        unsigned int 
  1340 ;; Return value:  Size  Location     Type
  1341 ;;                  2  205[None  ] int 
  1342 ;; Registers used:
  1343 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1344 ;; Tracked objects:
  1345 ;;		On entry : B00/0
  1346 ;;		On exit  : 0/0
  1347 ;;		Unchanged: 0/0
  1348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1349 ;;      Params:         0       0       0       0       0
  1350 ;;      Locals:         0      20      80      20       0
  1351 ;;      Temps:          0       6       0       0       0
  1352 ;;      Totals:         0      26      80      20       0
  1353 ;;Total ram usage:      126 bytes
  1354 ;; Hardware stack levels required when called: 6
  1355 ;; This function calls:
  1356 ;;		_Lcd_Clear
  1357 ;;		_Lcd_Init
  1358 ;;		_Lcd_Set_Cursor
  1359 ;;		_Lcd_Write_String
  1360 ;;		_UART_Initialize
  1361 ;;		_UART_Write_Text
  1362 ;;		___awdiv
  1363 ;;		___awmod
  1364 ;;		___fldiv
  1365 ;;		___flmul
  1366 ;;		___fltol
  1367 ;;		___wmul
  1368 ;;		___xxtofl
  1369 ;;		_readEEPROM
  1370 ;;		_sprintf
  1371 ;;		_yagBakim
  1372 ;; This function is called by:
  1373 ;;		Startup code after reset
  1374 ;; This function uses a non-reentrant model
  1375 ;;
  1376                           
  1377     16E2                     _main:	
  1378                           ;psect for function _main
  1379                           
  1380     16E2                     l3789:	
  1381                           ;incstack = 0
  1382                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1383                           
  1384                           
  1385                           ;main1.c: 118:   unsigned int a;;main1.c: 121: TRISB = 0b00000000;
  1386     16E2  1683               	bsf	3,5	;RP0=1, select bank1
  1387     16E3  1303               	bcf	3,6	;RP1=0, select bank1
  1388     16E4  0186               	clrf	6	;volatile
  1389     16E5                     l3791:
  1390                           
  1391                           ;main1.c: 122: TRISA4 = 0;
  1392     16E5  1205               	bcf	5,4	;volatile
  1393     16E6                     l3793:
  1394                           
  1395                           ;main1.c: 123: TRISE0 = 1;
  1396     16E6  1409               	bsf	9,0	;volatile
  1397     16E7                     l3795:
  1398                           
  1399                           ;main1.c: 124: TRISE1 = 1;
  1400     16E7  1489               	bsf	9,1	;volatile
  1401     16E8                     l3797:
  1402                           
  1403                           ;main1.c: 125: TRISC1 = 1;
  1404     16E8  1487               	bsf	7,1	;volatile
  1405     16E9                     l3799:
  1406                           
  1407                           ;main1.c: 126: TRISC2 = 1;
  1408     16E9  1507               	bsf	7,2	;volatile
  1409     16EA                     l3801:
  1410                           
  1411                           ;main1.c: 127: TRISE2 = 1;
  1412     16EA  1509               	bsf	9,2	;volatile
  1413     16EB                     l3803:
  1414                           
  1415                           ;main1.c: 128: TRISC0 = 1;
  1416     16EB  1407               	bsf	7,0	;volatile
  1417     16EC                     l3805:
  1418                           
  1419                           ;main1.c: 129: TRISC3 = 1;
  1420     16EC  1587               	bsf	7,3	;volatile
  1421     16ED                     l3807:
  1422                           
  1423                           ;main1.c: 130: TRISD0 = 1;
  1424     16ED  1408               	bsf	8,0	;volatile
  1425     16EE                     l3809:
  1426                           
  1427                           ;main1.c: 132: TRISA1 = 1;
  1428     16EE  1485               	bsf	5,1	;volatile
  1429     16EF                     l3811:
  1430                           
  1431                           ;main1.c: 133: TRISA2 = 1;
  1432     16EF  1505               	bsf	5,2	;volatile
  1433     16F0                     l3813:
  1434                           
  1435                           ;main1.c: 134: TRISA3 = 1;
  1436     16F0  1585               	bsf	5,3	;volatile
  1437     16F1                     l3815:
  1438                           
  1439                           ;main1.c: 135: Lcd_Init();
  1440     16F1  160A  118A  247D  160A  118A  	fcall	_Lcd_Init
  1441     16F6                     l3817:
  1442                           
  1443                           ;main1.c: 137: TRISC6 = 0;
  1444     16F6  1683               	bsf	3,5	;RP0=1, select bank1
  1445     16F7  1303               	bcf	3,6	;RP1=0, select bank1
  1446     16F8  1307               	bcf	7,6	;volatile
  1447     16F9                     l3819:
  1448                           
  1449                           ;main1.c: 138: TRISC7 = 1;
  1450     16F9  1787               	bsf	7,7	;volatile
  1451     16FA                     l3821:
  1452                           
  1453                           ;main1.c: 141: TRISA0 = 0;
  1454     16FA  1005               	bcf	5,0	;volatile
  1455     16FB                     l3823:
  1456                           
  1457                           ;main1.c: 142: TRISA5 = 0;
  1458     16FB  1285               	bcf	5,5	;volatile
  1459     16FC                     l3825:
  1460                           
  1461                           ;main1.c: 143: TRISC4 = 0;
  1462     16FC  1207               	bcf	7,4	;volatile
  1463     16FD                     l3827:
  1464                           
  1465                           ;main1.c: 144: TRISC5 = 0;
  1466     16FD  1287               	bcf	7,5	;volatile
  1467     16FE                     l3829:
  1468                           
  1469                           ;main1.c: 145: TRISD = 0b00000001;
  1470     16FE  3001               	movlw	1
  1471     16FF  0088               	movwf	8	;volatile
  1472     1700                     l3831:
  1473                           
  1474                           ;main1.c: 148:   _delay((unsigned long)((200)*(4000000/4000.0)));
  1475     1700  3002               	movlw	2
  1476     1701  1283               	bcf	3,5	;RP0=0, select bank0
  1477     1702  1303               	bcf	3,6	;RP1=0, select bank0
  1478     1703  00D6               	movwf	??_main+2
  1479     1704  3004               	movlw	4
  1480     1705  00D5               	movwf	??_main+1
  1481     1706  30B9               	movlw	185
  1482     1707  00D4               	movwf	??_main
  1483     1708                     u5627:
  1484     1708  0BD4               	decfsz	??_main,f
  1485     1709  2F08               	goto	u5627
  1486     170A  0BD5               	decfsz	??_main+1,f
  1487     170B  2F08               	goto	u5627
  1488     170C  0BD6               	decfsz	??_main+2,f
  1489     170D  2F08               	goto	u5627
  1490     170E  2F0F               	nop2
  1491     170F                     l3833:
  1492                           
  1493                           ;main1.c: 149:   RA4 = 0;
  1494     170F  1283               	bcf	3,5	;RP0=0, select bank0
  1495     1710  1303               	bcf	3,6	;RP1=0, select bank0
  1496     1711  1205               	bcf	5,4	;volatile
  1497     1712                     l3835:
  1498                           
  1499                           ;main1.c: 155:     currentTime.hours = readEEPROM(0x01);
  1500     1712  3001               	movlw	1
  1501     1713  00A0               	movwf	readEEPROM@address
  1502     1714  3000               	movlw	0
  1503     1715  00A1               	movwf	readEEPROM@address+1
  1504     1716  160A  118A  2198  160A  118A  	fcall	_readEEPROM
  1505     171B  1283               	bcf	3,5	;RP0=0, select bank0
  1506     171C  1303               	bcf	3,6	;RP1=0, select bank0
  1507     171D  0821               	movf	?_readEEPROM+1,w
  1508     171E  1683               	bsf	3,5	;RP0=1, select bank3
  1509     171F  1703               	bsf	3,6	;RP1=1, select bank3
  1510     1720  00A7               	movwf	((_currentTime+1)^(0+384)+2)
  1511     1721  1283               	bcf	3,5	;RP0=0, select bank0
  1512     1722  1303               	bcf	3,6	;RP1=0, select bank0
  1513     1723  0820               	movf	?_readEEPROM,w
  1514     1724  1683               	bsf	3,5	;RP0=1, select bank3
  1515     1725  1703               	bsf	3,6	;RP1=1, select bank3
  1516     1726  00A6               	movwf	(_currentTime^(0+384)+2)
  1517     1727                     l3837:
  1518                           
  1519                           ;main1.c: 156:     currentTime.minutes = readEEPROM(0x02);
  1520     1727  3002               	movlw	2
  1521     1728  1283               	bcf	3,5	;RP0=0, select bank0
  1522     1729  1303               	bcf	3,6	;RP1=0, select bank0
  1523     172A  00A0               	movwf	readEEPROM@address
  1524     172B  3000               	movlw	0
  1525     172C  00A1               	movwf	readEEPROM@address+1
  1526     172D  160A  118A  2198  160A  118A  	fcall	_readEEPROM
  1527     1732  1283               	bcf	3,5	;RP0=0, select bank0
  1528     1733  1303               	bcf	3,6	;RP1=0, select bank0
  1529     1734  0821               	movf	?_readEEPROM+1,w
  1530     1735  1683               	bsf	3,5	;RP0=1, select bank3
  1531     1736  1703               	bsf	3,6	;RP1=1, select bank3
  1532     1737  00A9               	movwf	((_currentTime+1)^(0+384)+4)
  1533     1738  1283               	bcf	3,5	;RP0=0, select bank0
  1534     1739  1303               	bcf	3,6	;RP1=0, select bank0
  1535     173A  0820               	movf	?_readEEPROM,w
  1536     173B  1683               	bsf	3,5	;RP0=1, select bank3
  1537     173C  1703               	bsf	3,6	;RP1=1, select bank3
  1538     173D  00A8               	movwf	(_currentTime^(0+384)+4)
  1539     173E                     l3839:
  1540                           
  1541                           ;main1.c: 157:     currentTime.seconds = readEEPROM(0x03);
  1542     173E  3003               	movlw	3
  1543     173F  1283               	bcf	3,5	;RP0=0, select bank0
  1544     1740  1303               	bcf	3,6	;RP1=0, select bank0
  1545     1741  00A0               	movwf	readEEPROM@address
  1546     1742  3000               	movlw	0
  1547     1743  00A1               	movwf	readEEPROM@address+1
  1548     1744  160A  118A  2198  160A  118A  	fcall	_readEEPROM
  1549     1749  1283               	bcf	3,5	;RP0=0, select bank0
  1550     174A  1303               	bcf	3,6	;RP1=0, select bank0
  1551     174B  0821               	movf	?_readEEPROM+1,w
  1552     174C  1683               	bsf	3,5	;RP0=1, select bank3
  1553     174D  1703               	bsf	3,6	;RP1=1, select bank3
  1554     174E  00AB               	movwf	((_currentTime+1)^(0+384)+6)
  1555     174F  1283               	bcf	3,5	;RP0=0, select bank0
  1556     1750  1303               	bcf	3,6	;RP1=0, select bank0
  1557     1751  0820               	movf	?_readEEPROM,w
  1558     1752  1683               	bsf	3,5	;RP0=1, select bank3
  1559     1753  1703               	bsf	3,6	;RP1=1, select bank3
  1560     1754  00AA               	movwf	(_currentTime^(0+384)+6)
  1561     1755                     l3841:
  1562                           
  1563                           ;main1.c: 158:     currentTime.carpan = readEEPROM(0x04);
  1564     1755  3004               	movlw	4
  1565     1756  1283               	bcf	3,5	;RP0=0, select bank0
  1566     1757  1303               	bcf	3,6	;RP1=0, select bank0
  1567     1758  00A0               	movwf	readEEPROM@address
  1568     1759  3000               	movlw	0
  1569     175A  00A1               	movwf	readEEPROM@address+1
  1570     175B  160A  118A  2198  160A  118A  	fcall	_readEEPROM
  1571     1760  1283               	bcf	3,5	;RP0=0, select bank0
  1572     1761  1303               	bcf	3,6	;RP1=0, select bank0
  1573     1762  0821               	movf	?_readEEPROM+1,w
  1574     1763  1683               	bsf	3,5	;RP0=1, select bank3
  1575     1764  1703               	bsf	3,6	;RP1=1, select bank3
  1576     1765  00A5               	movwf	(_currentTime+1)^(0+384)
  1577     1766  1283               	bcf	3,5	;RP0=0, select bank0
  1578     1767  1303               	bcf	3,6	;RP1=0, select bank0
  1579     1768  0820               	movf	?_readEEPROM,w
  1580     1769  1683               	bsf	3,5	;RP0=1, select bank3
  1581     176A  1703               	bsf	3,6	;RP1=1, select bank3
  1582     176B  00A4               	movwf	_currentTime^(0+384)
  1583     176C                     l3843:
  1584                           
  1585                           ;main1.c: 161:     char lcdText[9];;main1.c: 163:     OPTION_REGbits.T0CS = 0;
  1586     176C  1683               	bsf	3,5	;RP0=1, select bank1
  1587     176D  1303               	bcf	3,6	;RP1=0, select bank1
  1588     176E  1281               	bcf	1,5	;volatile
  1589     176F                     l3845:
  1590                           
  1591                           ;main1.c: 164:     OPTION_REGbits.PSA = 0;
  1592     176F  1181               	bcf	1,3	;volatile
  1593     1770                     l3847:
  1594                           
  1595                           ;main1.c: 165:     OPTION_REGbits.PS2 = 1;
  1596     1770  1501               	bsf	1,2	;volatile
  1597     1771                     l3849:
  1598                           
  1599                           ;main1.c: 166:     OPTION_REGbits.PS1 = 1;
  1600     1771  1481               	bsf	1,1	;volatile
  1601     1772                     l3851:
  1602                           
  1603                           ;main1.c: 167:     OPTION_REGbits.PS0 = 1;
  1604     1772  1401               	bsf	1,0	;volatile
  1605     1773                     l3853:
  1606                           
  1607                           ;main1.c: 170:     INTCONbits.GIE = 1;
  1608     1773  178B               	bsf	11,7	;volatile
  1609     1774                     l3855:
  1610                           
  1611                           ;main1.c: 171:     INTCONbits.PEIE = 1;
  1612     1774  170B               	bsf	11,6	;volatile
  1613     1775                     l3857:
  1614                           
  1615                           ;main1.c: 172:     INTCONbits.T0IE = 1;
  1616     1775  168B               	bsf	11,5	;volatile
  1617     1776                     l3859:
  1618                           
  1619                           ;main1.c: 175:     Lcd_Clear();
  1620     1776  160A  158A  27E5  160A  118A  	fcall	_Lcd_Clear
  1621     177B                     l3861:
  1622                           
  1623                           ;main1.c: 176:     Lcd_Set_Cursor(1,1);
  1624     177B  1283               	bcf	3,5	;RP0=0, select bank0
  1625     177C  1303               	bcf	3,6	;RP1=0, select bank0
  1626     177D  01A4               	clrf	Lcd_Set_Cursor@b
  1627     177E  0AA4               	incf	Lcd_Set_Cursor@b,f
  1628     177F  3001               	movlw	1
  1629     1780  120A  118A  27B2  160A  118A  	fcall	_Lcd_Set_Cursor
  1630     1785                     l3863:
  1631                           
  1632                           ;main1.c: 177:     Lcd_Write_String("UZMANLAR MAKINA");
  1633     1785  30BD               	movlw	low (STR_3| (0+32768))
  1634     1786  1283               	bcf	3,5	;RP0=0, select bank0
  1635     1787  1303               	bcf	3,6	;RP1=0, select bank0
  1636     1788  00A5               	movwf	Lcd_Write_String@a
  1637     1789  3090               	movlw	high (STR_3| (0+32768))
  1638     178A  00A6               	movwf	Lcd_Write_String@a+1
  1639     178B  160A  118A  2327  160A  118A  	fcall	_Lcd_Write_String
  1640     1790                     l3865:
  1641                           
  1642                           ;main1.c: 178:     Lcd_Set_Cursor(2,1);
  1643     1790  1283               	bcf	3,5	;RP0=0, select bank0
  1644     1791  1303               	bcf	3,6	;RP1=0, select bank0
  1645     1792  01A4               	clrf	Lcd_Set_Cursor@b
  1646     1793  0AA4               	incf	Lcd_Set_Cursor@b,f
  1647     1794  3002               	movlw	2
  1648     1795  120A  118A  27B2  160A  118A  	fcall	_Lcd_Set_Cursor
  1649     179A                     l3867:
  1650                           
  1651                           ;main1.c: 179:     Lcd_Write_String("www.borvek.com");
  1652     179A  30DC               	movlw	low (STR_4| (0+32768))
  1653     179B  1283               	bcf	3,5	;RP0=0, select bank0
  1654     179C  1303               	bcf	3,6	;RP1=0, select bank0
  1655     179D  00A5               	movwf	Lcd_Write_String@a
  1656     179E  3090               	movlw	high (STR_4| (0+32768))
  1657     179F  00A6               	movwf	Lcd_Write_String@a+1
  1658     17A0  160A  118A  2327  160A  118A  	fcall	_Lcd_Write_String
  1659     17A5                     l3869:
  1660                           
  1661                           ;main1.c: 180:     Lcd_Set_Cursor(2,17);
  1662     17A5  3011               	movlw	17
  1663     17A6  1283               	bcf	3,5	;RP0=0, select bank0
  1664     17A7  1303               	bcf	3,6	;RP1=0, select bank0
  1665     17A8  00A4               	movwf	Lcd_Set_Cursor@b
  1666     17A9  3002               	movlw	2
  1667     17AA  120A  118A  27B2  160A  118A  	fcall	_Lcd_Set_Cursor
  1668     17AF                     l3871:
  1669                           
  1670                           ;main1.c: 181:     Lcd_Write_String("V3");
  1671     17AF  306F               	movlw	low (STR_5| (0+32768))
  1672     17B0  1283               	bcf	3,5	;RP0=0, select bank0
  1673     17B1  1303               	bcf	3,6	;RP1=0, select bank0
  1674     17B2  00A5               	movwf	Lcd_Write_String@a
  1675     17B3  3091               	movlw	high (STR_5| (0+32768))
  1676     17B4  00A6               	movwf	Lcd_Write_String@a+1
  1677     17B5  160A  118A  2327  160A  118A  	fcall	_Lcd_Write_String
  1678     17BA                     l3873:
  1679                           
  1680                           ;main1.c: 183:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1681     17BA  3006               	movlw	6
  1682     17BB  1283               	bcf	3,5	;RP0=0, select bank0
  1683     17BC  1303               	bcf	3,6	;RP1=0, select bank0
  1684     17BD  00D6               	movwf	??_main+2
  1685     17BE  3013               	movlw	19
  1686     17BF  00D5               	movwf	??_main+1
  1687     17C0  30AD               	movlw	173
  1688     17C1  00D4               	movwf	??_main
  1689     17C2                     u5637:
  1690     17C2  0BD4               	decfsz	??_main,f
  1691     17C3  2FC2               	goto	u5637
  1692     17C4  0BD5               	decfsz	??_main+1,f
  1693     17C5  2FC2               	goto	u5637
  1694     17C6  0BD6               	decfsz	??_main+2,f
  1695     17C7  2FC2               	goto	u5637
  1696     17C8                     l3875:
  1697                           
  1698                           ;main1.c: 184:     Lcd_Clear();
  1699     17C8  160A  158A  27E5  160A  118A  	fcall	_Lcd_Clear
  1700     17CD                     l3877:
  1701                           
  1702                           ;main1.c: 189:     SPBRG = ((4000000/16)/19200) - 1;
  1703     17CD  300C               	movlw	12
  1704     17CE  1683               	bsf	3,5	;RP0=1, select bank1
  1705     17CF  1303               	bcf	3,6	;RP1=0, select bank1
  1706     17D0  0099               	movwf	25	;volatile
  1707     17D1                     l3879:
  1708                           
  1709                           ;main1.c: 190:     UART_Initialize();
  1710     17D1  160A  118A  2174  160A  118A  	fcall	_UART_Initialize
  1711     17D6                     l3881:
  1712                           
  1713                           ;main1.c: 191: unsigned int displayValue = 0;
  1714     17D6  1683               	bsf	3,5	;RP0=1, select bank3
  1715     17D7  1703               	bsf	3,6	;RP1=1, select bank3
  1716     17D8  01A2               	clrf	main@displayValue^(0+384)
  1717     17D9  01A3               	clrf	(main@displayValue+1)^(0+384)
  1718     17DA                     l3883:
  1719                           
  1720                           ;main1.c: 196:     ADCON1bits.ADFM = 1;
  1721     17DA  1683               	bsf	3,5	;RP0=1, select bank1
  1722     17DB  1303               	bcf	3,6	;RP1=0, select bank1
  1723     17DC  179F               	bsf	31,7	;volatile
  1724     17DD                     l3885:
  1725                           
  1726                           ;main1.c: 197:     ADCON1bits.PCFG = 0b100;
  1727     17DD  081F               	movf	31,w	;volatile
  1728     17DE  39F0               	andlw	-16
  1729     17DF  3804               	iorlw	4
  1730     17E0  009F               	movwf	31	;volatile
  1731     17E1                     l3887:
  1732                           
  1733                           ;main1.c: 198:     ADCON0bits.ADCS = 0b10;
  1734     17E1  1283               	bcf	3,5	;RP0=0, select bank0
  1735     17E2  1303               	bcf	3,6	;RP1=0, select bank0
  1736     17E3  081F               	movf	31,w	;volatile
  1737     17E4  393F               	andlw	-193
  1738     17E5  3880               	iorlw	128
  1739     17E6  009F               	movwf	31	;volatile
  1740     17E7                     l3889:
  1741                           
  1742                           ;main1.c: 199:     ADCON0bits.ADON = 1;
  1743     17E7  141F               	bsf	31,0	;volatile
  1744     17E8                     l3891:
  1745                           
  1746                           ;main1.c: 201:     float adcValue1;;main1.c: 202:     int adcValue2;;main1.c: 203:     f
      +                          loat adcValue3;;main1.c: 209:     RC1 = 0;
  1747     17E8  1087               	bcf	7,1	;volatile
  1748     17E9                     l3893:
  1749                           
  1750                           ;main1.c: 210:     RE2 = 0;
  1751     17E9  1109               	bcf	9,2	;volatile
  1752     17EA                     l3895:
  1753                           
  1754                           ;main1.c: 211:     RE0 = 0;
  1755     17EA  1009               	bcf	9,0	;volatile
  1756     17EB                     l3897:
  1757                           
  1758                           ;main1.c: 212:     RC2 = 0;
  1759     17EB  1107               	bcf	7,2	;volatile
  1760     17EC                     l3899:
  1761                           
  1762                           ;main1.c: 213:     RC0 = 0;
  1763     17EC  1007               	bcf	7,0	;volatile
  1764     17ED                     l3901:
  1765                           
  1766                           ;main1.c: 214:     RE1 = 0;
  1767     17ED  1089               	bcf	9,1	;volatile
  1768     17EE                     l3903:
  1769                           
  1770                           ;main1.c: 216: int ilkAcilis = 1;
  1771     17EE  3001               	movlw	1
  1772     17EF  1683               	bsf	3,5	;RP0=1, select bank3
  1773     17F0  1703               	bsf	3,6	;RP1=1, select bank3
  1774     17F1  0090               	movwf	main@ilkAcilis^(0+384)
  1775     17F2  3000               	movlw	0
  1776     17F3  0091               	movwf	(main@ilkAcilis^(0+384)+1)
  1777     17F4                     l3905:
  1778                           
  1779                           ;main1.c: 220: if (ilkAcilis) {
  1780     17F4  1683               	bsf	3,5	;RP0=1, select bank3
  1781     17F5  1703               	bsf	3,6	;RP1=1, select bank3
  1782     17F6  0810               	movf	main@ilkAcilis^(0+384),w
  1783     17F7  0411               	iorwf	(main@ilkAcilis+1)^(0+384),w
  1784     17F8  1903               	btfsc	3,2
  1785     17F9  2FFD               	goto	u5151
  1786     17FA  120A  118A  2821   	goto	u5150
  1787     17FD                     u5151:
  1788     17FD  120A  118A  2871   	goto	l207
  1789                           
  1790                           	psect	text1
  1791     136D                     __ptext1:	
  1792 ;; *************** function _yagBakim *****************
  1793 ;; Defined at:
  1794 ;;		line 27 in file "main1.c"
  1795 ;; Parameters:    Size  Location     Type
  1796 ;;		None
  1797 ;; Auto vars:     Size  Location     Type
  1798 ;;  i               2   12[BANK0 ] int 
  1799 ;; Return value:  Size  Location     Type
  1800 ;;                  1    wreg      void 
  1801 ;; Registers used:
  1802 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1803 ;; Tracked objects:
  1804 ;;		On entry : 0/0
  1805 ;;		On exit  : 0/0
  1806 ;;		Unchanged: 0/0
  1807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1808 ;;      Params:         0       0       0       0       0
  1809 ;;      Locals:         0       2       0       0       0
  1810 ;;      Temps:          0       0       0       0       0
  1811 ;;      Totals:         0       2       0       0       0
  1812 ;;Total ram usage:        2 bytes
  1813 ;; Hardware stack levels used: 1
  1814 ;; Hardware stack levels required when called: 5
  1815 ;; This function calls:
  1816 ;;		_Lcd_Clear
  1817 ;;		_Lcd_Set_Cursor
  1818 ;;		_Lcd_Write_String
  1819 ;; This function is called by:
  1820 ;;		_main
  1821 ;; This function uses a non-reentrant model
  1822 ;;
  1823                           
  1824     136D                     _yagBakim:	
  1825                           ;psect for function _yagBakim
  1826                           
  1827     136D                     l3559:	
  1828                           ;incstack = 0
  1829                           ; Regs used in _yagBakim: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1830                           
  1831                           
  1832                           ;main1.c: 28:     Lcd_Clear();
  1833     136D  160A  158A  27E5  160A  118A  	fcall	_Lcd_Clear
  1834     1372                     l3561:
  1835                           
  1836                           ;main1.c: 29:     for (int i = 0; i < 10; i++) {
  1837     1372  1283               	bcf	3,5	;RP0=0, select bank0
  1838     1373  1303               	bcf	3,6	;RP1=0, select bank0
  1839     1374  01AC               	clrf	yagBakim@i
  1840     1375  01AD               	clrf	yagBakim@i+1
  1841     1376                     l3567:
  1842                           
  1843                           ;main1.c: 30:         Lcd_Set_Cursor(1, 1);
  1844     1376  1283               	bcf	3,5	;RP0=0, select bank0
  1845     1377  1303               	bcf	3,6	;RP1=0, select bank0
  1846     1378  01A4               	clrf	Lcd_Set_Cursor@b
  1847     1379  0AA4               	incf	Lcd_Set_Cursor@b,f
  1848     137A  3001               	movlw	1
  1849     137B  120A  118A  27B2  160A  118A  	fcall	_Lcd_Set_Cursor
  1850     1380                     l3569:
  1851                           
  1852                           ;main1.c: 31:         Lcd_Write_String("YAG BAKIMI YAPINIZ");
  1853     1380  30AA               	movlw	low (STR_1| (0+32768))
  1854     1381  1283               	bcf	3,5	;RP0=0, select bank0
  1855     1382  1303               	bcf	3,6	;RP1=0, select bank0
  1856     1383  00A5               	movwf	Lcd_Write_String@a
  1857     1384  3090               	movlw	high (STR_1| (0+32768))
  1858     1385  00A6               	movwf	Lcd_Write_String@a+1
  1859     1386  160A  118A  2327  160A  118A  	fcall	_Lcd_Write_String
  1860     138B                     l3571:
  1861                           
  1862                           ;main1.c: 32:         Lcd_Set_Cursor(2, 1);
  1863     138B  1283               	bcf	3,5	;RP0=0, select bank0
  1864     138C  1303               	bcf	3,6	;RP1=0, select bank0
  1865     138D  01A4               	clrf	Lcd_Set_Cursor@b
  1866     138E  0AA4               	incf	Lcd_Set_Cursor@b,f
  1867     138F  3002               	movlw	2
  1868     1390  120A  118A  27B2  160A  118A  	fcall	_Lcd_Set_Cursor
  1869                           
  1870                           ;main1.c: 33:         Lcd_Write_String("OIL THE GEARS");
  1871     1395  30F9               	movlw	low (STR_2| (0+32768))
  1872     1396  1283               	bcf	3,5	;RP0=0, select bank0
  1873     1397  1303               	bcf	3,6	;RP1=0, select bank0
  1874     1398  00A5               	movwf	Lcd_Write_String@a
  1875     1399  3090               	movlw	high (STR_2| (0+32768))
  1876     139A  00A6               	movwf	Lcd_Write_String@a+1
  1877     139B  160A  118A  2327  160A  118A  	fcall	_Lcd_Write_String
  1878     13A0                     l3573:
  1879                           
  1880                           ;main1.c: 34:         RA4 = 1;
  1881     13A0  1283               	bcf	3,5	;RP0=0, select bank0
  1882     13A1  1303               	bcf	3,6	;RP1=0, select bank0
  1883     13A2  1605               	bsf	5,4	;volatile
  1884     13A3                     l3575:
  1885                           
  1886                           ;main1.c: 35:     }
  1887     13A3  3001               	movlw	1
  1888     13A4  07AC               	addwf	yagBakim@i,f
  1889     13A5  1803               	skipnc
  1890     13A6  0AAD               	incf	yagBakim@i+1,f
  1891     13A7  3000               	movlw	0
  1892     13A8  07AD               	addwf	yagBakim@i+1,f
  1893     13A9                     l3577:
  1894     13A9  082D               	movf	yagBakim@i+1,w
  1895     13AA  3A80               	xorlw	128
  1896     13AB  00FF               	movwf	btemp+1
  1897     13AC  3080               	movlw	128
  1898     13AD  027F               	subwf	btemp+1,w
  1899     13AE  1D03               	skipz
  1900     13AF  2BB2               	goto	u4765
  1901     13B0  300A               	movlw	10
  1902     13B1  022C               	subwf	yagBakim@i,w
  1903     13B2                     u4765:
  1904     13B2  1C03               	skipc
  1905     13B3  2BB5               	goto	u4761
  1906     13B4  2BB6               	goto	u4760
  1907     13B5                     u4761:
  1908     13B5  2B76               	goto	l3567
  1909     13B6                     u4760:
  1910     13B6                     l3579:
  1911                           
  1912                           ;main1.c: 36:     Lcd_Clear();
  1913     13B6  160A  158A  27E5  160A  118A  	fcall	_Lcd_Clear
  1914     13BB                     l3581:
  1915                           
  1916                           ;main1.c: 37:     RA4 = 0;
  1917     13BB  1283               	bcf	3,5	;RP0=0, select bank0
  1918     13BC  1303               	bcf	3,6	;RP1=0, select bank0
  1919     13BD  1205               	bcf	5,4	;volatile
  1920     13BE                     l175:
  1921     13BE  0008               	return
  1922     13BF                     __end_of_yagBakim:
  1923                           
  1924                           	psect	text2
  1925     1327                     __ptext2:	
  1926 ;; *************** function _Lcd_Write_String *****************
  1927 ;; Defined at:
  1928 ;;		line 96 in file "./lcd.h"
  1929 ;; Parameters:    Size  Location     Type
  1930 ;;  a               2    5[BANK0 ] PTR unsigned char 
  1931 ;;		 -> STR_33(24), STR_32(24), STR_29(27), STR_28(26), 
  1932 ;;		 -> STR_26(13), STR_24(14), STR_22(10), STR_20(9), 
  1933 ;;		 -> STR_18(15), STR_16(10), STR_14(9), main@rpmString(5), 
  1934 ;;		 -> STR_12(5), main@adcString1(4), STR_10(10), STR_9(3), 
  1935 ;;		 -> main@lcdText(9), STR_7(21), STR_6(20), STR_5(3), 
  1936 ;;		 -> STR_4(15), STR_3(16), STR_2(14), STR_1(19), 
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;  i               2   10[BANK0 ] int 
  1939 ;; Return value:  Size  Location     Type
  1940 ;;                  1    wreg      void 
  1941 ;; Registers used:
  1942 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1943 ;; Tracked objects:
  1944 ;;		On entry : 0/0
  1945 ;;		On exit  : 0/0
  1946 ;;		Unchanged: 0/0
  1947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1948 ;;      Params:         0       2       0       0       0
  1949 ;;      Locals:         0       2       0       0       0
  1950 ;;      Temps:          0       3       0       0       0
  1951 ;;      Totals:         0       7       0       0       0
  1952 ;;Total ram usage:        7 bytes
  1953 ;; Hardware stack levels used: 1
  1954 ;; Hardware stack levels required when called: 4
  1955 ;; This function calls:
  1956 ;;		_Lcd_Write_Char
  1957 ;; This function is called by:
  1958 ;;		_yagBakim
  1959 ;;		_main
  1960 ;; This function uses a non-reentrant model
  1961 ;;
  1962                           
  1963     1327                     _Lcd_Write_String:	
  1964                           ;psect for function _Lcd_Write_String
  1965                           
  1966     1327                     l3455:	
  1967                           ;incstack = 0
  1968                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1969                           
  1970                           
  1971                           ;./lcd.h: 96: void Lcd_Write_String(char *a);./lcd.h: 97: {;./lcd.h: 98:  int i;;./lcd.h
      +                          : 99:  for(i=0;a[i]!='\0';i++)
  1972     1327  1283               	bcf	3,5	;RP0=0, select bank0
  1973     1328  1303               	bcf	3,6	;RP1=0, select bank0
  1974     1329  01AA               	clrf	Lcd_Write_String@i
  1975     132A  01AB               	clrf	Lcd_Write_String@i+1
  1976     132B  2B50               	goto	l3461
  1977     132C                     l3457:
  1978                           
  1979                           ;./lcd.h: 100:     Lcd_Write_Char(a[i]);
  1980     132C  082A               	movf	Lcd_Write_String@i,w
  1981     132D  0725               	addwf	Lcd_Write_String@a,w
  1982     132E  00A8               	movwf	??_Lcd_Write_String+1
  1983     132F  0826               	movf	Lcd_Write_String@a+1,w
  1984     1330  00A7               	movwf	??_Lcd_Write_String
  1985     1331  1803               	skipnc
  1986     1332  0AA7               	incf	??_Lcd_Write_String,f
  1987     1333  1FAA               	btfss	Lcd_Write_String@i,7
  1988     1334  2B36               	goto	u4510
  1989     1335  03A7               	decf	??_Lcd_Write_String,f
  1990     1336                     u4510:
  1991     1336  1283               	bcf	3,5	;RP0=0, select bank0
  1992     1337  1303               	bcf	3,6	;RP1=0, select bank0
  1993     1338  0827               	movf	??_Lcd_Write_String,w
  1994     1339  00A9               	movwf	??_Lcd_Write_String+2
  1995     133A  0829               	movf	??_Lcd_Write_String+2,w
  1996     133B  00FF               	movwf	btemp+1
  1997     133C  0828               	movf	??_Lcd_Write_String+1,w
  1998     133D  0084               	movwf	4
  1999     133E  160A  118A  2000  160A  118A  	fcall	stringtab
  2000     1343  160A  118A  2226  160A  118A  	fcall	_Lcd_Write_Char
  2001     1348                     l3459:
  2002     1348  3001               	movlw	1
  2003     1349  1283               	bcf	3,5	;RP0=0, select bank0
  2004     134A  1303               	bcf	3,6	;RP1=0, select bank0
  2005     134B  07AA               	addwf	Lcd_Write_String@i,f
  2006     134C  1803               	skipnc
  2007     134D  0AAB               	incf	Lcd_Write_String@i+1,f
  2008     134E  3000               	movlw	0
  2009     134F  07AB               	addwf	Lcd_Write_String@i+1,f
  2010     1350                     l3461:
  2011     1350  082A               	movf	Lcd_Write_String@i,w
  2012     1351  0725               	addwf	Lcd_Write_String@a,w
  2013     1352  00A8               	movwf	??_Lcd_Write_String+1
  2014     1353  0826               	movf	Lcd_Write_String@a+1,w
  2015     1354  00A7               	movwf	??_Lcd_Write_String
  2016     1355  1803               	skipnc
  2017     1356  0AA7               	incf	??_Lcd_Write_String,f
  2018     1357  1FAA               	btfss	Lcd_Write_String@i,7
  2019     1358  2B5A               	goto	u4520
  2020     1359  03A7               	decf	??_Lcd_Write_String,f
  2021     135A                     u4520:
  2022     135A  1283               	bcf	3,5	;RP0=0, select bank0
  2023     135B  1303               	bcf	3,6	;RP1=0, select bank0
  2024     135C  0827               	movf	??_Lcd_Write_String,w
  2025     135D  00A9               	movwf	??_Lcd_Write_String+2
  2026     135E  0829               	movf	??_Lcd_Write_String+2,w
  2027     135F  00FF               	movwf	btemp+1
  2028     1360  0828               	movf	??_Lcd_Write_String+1,w
  2029     1361  0084               	movwf	4
  2030     1362  160A  118A  2000  160A  118A  	fcall	stringtab
  2031     1367  3A00               	xorlw	0
  2032     1368  1D03               	skipz
  2033     1369  2B6B               	goto	u4531
  2034     136A  2B6C               	goto	u4530
  2035     136B                     u4531:
  2036     136B  2B2C               	goto	l3457
  2037     136C                     u4530:
  2038     136C                     l170:
  2039     136C  0008               	return
  2040     136D                     __end_of_Lcd_Write_String:
  2041                           
  2042                           	psect	text3
  2043     1226                     __ptext3:	
  2044 ;; *************** function _Lcd_Write_Char *****************
  2045 ;; Defined at:
  2046 ;;		line 80 in file "./lcd.h"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;  a               1    wreg     unsigned char 
  2049 ;; Auto vars:     Size  Location     Type
  2050 ;;  a               1    4[BANK0 ] unsigned char 
  2051 ;;  y               1    3[BANK0 ] unsigned char 
  2052 ;;  temp            1    2[BANK0 ] unsigned char 
  2053 ;; Return value:  Size  Location     Type
  2054 ;;                  1    wreg      void 
  2055 ;; Registers used:
  2056 ;;		wreg, status,2, status,0, pclath, cstack
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2062 ;;      Params:         0       0       0       0       0
  2063 ;;      Locals:         0       3       0       0       0
  2064 ;;      Temps:          0       1       0       0       0
  2065 ;;      Totals:         0       4       0       0       0
  2066 ;;Total ram usage:        4 bytes
  2067 ;; Hardware stack levels used: 1
  2068 ;; Hardware stack levels required when called: 3
  2069 ;; This function calls:
  2070 ;;		_Lcd_Port
  2071 ;; This function is called by:
  2072 ;;		_Lcd_Write_String
  2073 ;; This function uses a non-reentrant model
  2074 ;;
  2075                           
  2076     1226                     _Lcd_Write_Char:	
  2077                           ;psect for function _Lcd_Write_Char
  2078                           
  2079                           
  2080                           ;incstack = 0
  2081                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2082                           ;Lcd_Write_Char@a stored from wreg
  2083     1226  1283               	bcf	3,5	;RP0=0, select bank0
  2084     1227  1303               	bcf	3,6	;RP1=0, select bank0
  2085     1228  00A4               	movwf	Lcd_Write_Char@a
  2086     1229                     l3409:
  2087                           
  2088                           ;./lcd.h: 80: void Lcd_Write_Char(char a);./lcd.h: 81: {;./lcd.h: 82:    char temp,y;;./
      +                          lcd.h: 83:    temp = a&0x0F;
  2089     1229  0824               	movf	Lcd_Write_Char@a,w
  2090     122A  390F               	andlw	15
  2091     122B  00A2               	movwf	Lcd_Write_Char@temp
  2092                           
  2093                           ;./lcd.h: 84:    y = a&0xF0;
  2094     122C  0824               	movf	Lcd_Write_Char@a,w
  2095     122D  39F0               	andlw	240
  2096     122E  00A3               	movwf	Lcd_Write_Char@y
  2097     122F                     l3411:
  2098                           
  2099                           ;./lcd.h: 85:    RB5 = 1;
  2100     122F  1686               	bsf	6,5	;volatile
  2101     1230                     l3413:
  2102                           
  2103                           ;./lcd.h: 86:    Lcd_Port(y>>4);
  2104     1230  0823               	movf	Lcd_Write_Char@y,w
  2105     1231  00A1               	movwf	??_Lcd_Write_Char
  2106     1232  3004               	movlw	4
  2107     1233                     u4455:
  2108     1233  1003               	clrc
  2109     1234  0CA1               	rrf	??_Lcd_Write_Char,f
  2110     1235  3EFF               	addlw	-1
  2111     1236  1D03               	skipz
  2112     1237  2A33               	goto	u4455
  2113     1238  0821               	movf	??_Lcd_Write_Char,w
  2114     1239  160A  118A  21DF  160A  118A  	fcall	_Lcd_Port
  2115     123E                     l3415:
  2116                           
  2117                           ;./lcd.h: 87:    RB4 = 1;
  2118     123E  1283               	bcf	3,5	;RP0=0, select bank0
  2119     123F  1303               	bcf	3,6	;RP1=0, select bank0
  2120     1240  1606               	bsf	6,4	;volatile
  2121     1241                     l3417:
  2122                           
  2123                           ;./lcd.h: 88:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  2124     1241  300C               	movlw	12
  2125     1242  1283               	bcf	3,5	;RP0=0, select bank0
  2126     1243  1303               	bcf	3,6	;RP1=0, select bank0
  2127     1244  00A1               	movwf	??_Lcd_Write_Char
  2128     1245                     u5707:
  2129     1245  0BA1               	decfsz	??_Lcd_Write_Char,f
  2130     1246  2A45               	goto	u5707
  2131     1247  0000               	nop
  2132     1248                     l3419:
  2133                           
  2134                           ;./lcd.h: 89:    RB4 = 0;
  2135     1248  1283               	bcf	3,5	;RP0=0, select bank0
  2136     1249  1303               	bcf	3,6	;RP1=0, select bank0
  2137     124A  1206               	bcf	6,4	;volatile
  2138     124B                     l3421:
  2139                           
  2140                           ;./lcd.h: 90:    Lcd_Port(temp);
  2141     124B  0822               	movf	Lcd_Write_Char@temp,w
  2142     124C  160A  118A  21DF  160A  118A  	fcall	_Lcd_Port
  2143     1251                     l3423:
  2144                           
  2145                           ;./lcd.h: 91:    RB4 = 1;
  2146     1251  1283               	bcf	3,5	;RP0=0, select bank0
  2147     1252  1303               	bcf	3,6	;RP1=0, select bank0
  2148     1253  1606               	bsf	6,4	;volatile
  2149     1254                     l3425:
  2150                           
  2151                           ;./lcd.h: 92:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  2152     1254  300C               	movlw	12
  2153     1255  1283               	bcf	3,5	;RP0=0, select bank0
  2154     1256  1303               	bcf	3,6	;RP1=0, select bank0
  2155     1257  00A1               	movwf	??_Lcd_Write_Char
  2156     1258                     u5717:
  2157     1258  0BA1               	decfsz	??_Lcd_Write_Char,f
  2158     1259  2A58               	goto	u5717
  2159     125A  0000               	nop
  2160     125B                     l3427:
  2161                           
  2162                           ;./lcd.h: 93:    RB4 = 0;
  2163     125B  1283               	bcf	3,5	;RP0=0, select bank0
  2164     125C  1303               	bcf	3,6	;RP1=0, select bank0
  2165     125D  1206               	bcf	6,4	;volatile
  2166     125E                     l164:
  2167     125E  0008               	return
  2168     125F                     __end_of_Lcd_Write_Char:
  2169                           
  2170                           	psect	text4
  2171     07B2                     __ptext4:	
  2172 ;; *************** function _Lcd_Set_Cursor *****************
  2173 ;; Defined at:
  2174 ;;		line 40 in file "./lcd.h"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;  a               1    wreg     unsigned char 
  2177 ;;  b               1    4[BANK0 ] unsigned char 
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;  a               1    6[BANK0 ] unsigned char 
  2180 ;;  temp            1    9[BANK0 ] unsigned char 
  2181 ;;  y               1    8[BANK0 ] unsigned char 
  2182 ;;  z               1    7[BANK0 ] unsigned char 
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  1    wreg      void 
  2185 ;; Registers used:
  2186 ;;		wreg, status,2, status,0, pclath, cstack
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2192 ;;      Params:         0       1       0       0       0
  2193 ;;      Locals:         0       4       0       0       0
  2194 ;;      Temps:          0       1       0       0       0
  2195 ;;      Totals:         0       6       0       0       0
  2196 ;;Total ram usage:        6 bytes
  2197 ;; Hardware stack levels used: 1
  2198 ;; Hardware stack levels required when called: 4
  2199 ;; This function calls:
  2200 ;;		_Lcd_Cmd
  2201 ;; This function is called by:
  2202 ;;		_yagBakim
  2203 ;;		_main
  2204 ;; This function uses a non-reentrant model
  2205 ;;
  2206                           
  2207     07B2                     _Lcd_Set_Cursor:	
  2208                           ;psect for function _Lcd_Set_Cursor
  2209                           
  2210                           
  2211                           ;incstack = 0
  2212                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2213                           ;Lcd_Set_Cursor@a stored from wreg
  2214     07B2  1283               	bcf	3,5	;RP0=0, select bank0
  2215     07B3  1303               	bcf	3,6	;RP1=0, select bank0
  2216     07B4  00A6               	movwf	Lcd_Set_Cursor@a
  2217     07B5                     l3435:
  2218                           
  2219                           ;./lcd.h: 40: void Lcd_Set_Cursor(char a, char b);./lcd.h: 41: {;./lcd.h: 42:  char temp
      +                          ,z,y;;./lcd.h: 43:  if(a == 1)
  2220     07B5  0326               	decf	Lcd_Set_Cursor@a,w
  2221     07B6  1D03               	btfss	3,2
  2222     07B7  2FB9               	goto	u4471
  2223     07B8  2FBA               	goto	u4470
  2224     07B9                     u4471:
  2225     07B9  2FD9               	goto	l3445
  2226     07BA                     u4470:
  2227     07BA                     l3437:
  2228                           
  2229                           ;./lcd.h: 44:  {;./lcd.h: 45:    temp = 0x80 + b - 1;
  2230     07BA  0824               	movf	Lcd_Set_Cursor@b,w
  2231     07BB  3E7F               	addlw	127
  2232     07BC  00A9               	movwf	Lcd_Set_Cursor@temp
  2233                           
  2234                           ;./lcd.h: 46:   z = temp>>4;
  2235     07BD  0829               	movf	Lcd_Set_Cursor@temp,w
  2236     07BE  00A5               	movwf	??_Lcd_Set_Cursor
  2237     07BF  3004               	movlw	4
  2238     07C0                     u4485:
  2239     07C0  1003               	clrc
  2240     07C1  0CA5               	rrf	??_Lcd_Set_Cursor,f
  2241     07C2  3EFF               	addlw	-1
  2242     07C3  1D03               	skipz
  2243     07C4  2FC0               	goto	u4485
  2244     07C5  0825               	movf	??_Lcd_Set_Cursor,w
  2245     07C6  00A7               	movwf	Lcd_Set_Cursor@z
  2246     07C7                     l3439:
  2247                           
  2248                           ;./lcd.h: 47:   y = temp & 0x0F;
  2249     07C7  0829               	movf	Lcd_Set_Cursor@temp,w
  2250     07C8  390F               	andlw	15
  2251     07C9  00A8               	movwf	Lcd_Set_Cursor@y
  2252     07CA                     l3441:
  2253                           
  2254                           ;./lcd.h: 48:   Lcd_Cmd(z);
  2255     07CA  0827               	movf	Lcd_Set_Cursor@z,w
  2256     07CB  160A  118A  21C3  120A  118A  	fcall	_Lcd_Cmd
  2257     07D0                     l3443:
  2258                           
  2259                           ;./lcd.h: 49:   Lcd_Cmd(y);
  2260     07D0  1283               	bcf	3,5	;RP0=0, select bank0
  2261     07D1  1303               	bcf	3,6	;RP1=0, select bank0
  2262     07D2  0828               	movf	Lcd_Set_Cursor@y,w
  2263     07D3  160A  118A  21C3  120A  118A  	fcall	_Lcd_Cmd
  2264                           
  2265                           ;./lcd.h: 50:  }
  2266     07D8  2FFD               	goto	l158
  2267     07D9                     l3445:
  2268     07D9  3002               	movlw	2
  2269     07DA  0626               	xorwf	Lcd_Set_Cursor@a,w
  2270     07DB  1D03               	btfss	3,2
  2271     07DC  2FDE               	goto	u4491
  2272     07DD  2FDF               	goto	u4490
  2273     07DE                     u4491:
  2274     07DE  2FFD               	goto	l158
  2275     07DF                     u4490:
  2276     07DF                     l3447:
  2277                           
  2278                           ;./lcd.h: 52:  {;./lcd.h: 53:   temp = 0xC0 + b - 1;
  2279     07DF  0824               	movf	Lcd_Set_Cursor@b,w
  2280     07E0  3EBF               	addlw	191
  2281     07E1  00A9               	movwf	Lcd_Set_Cursor@temp
  2282                           
  2283                           ;./lcd.h: 54:   z = temp>>4;
  2284     07E2  0829               	movf	Lcd_Set_Cursor@temp,w
  2285     07E3  00A5               	movwf	??_Lcd_Set_Cursor
  2286     07E4  3004               	movlw	4
  2287     07E5                     u4505:
  2288     07E5  1003               	clrc
  2289     07E6  0CA5               	rrf	??_Lcd_Set_Cursor,f
  2290     07E7  3EFF               	addlw	-1
  2291     07E8  1D03               	skipz
  2292     07E9  2FE5               	goto	u4505
  2293     07EA  0825               	movf	??_Lcd_Set_Cursor,w
  2294     07EB  00A7               	movwf	Lcd_Set_Cursor@z
  2295     07EC                     l3449:
  2296                           
  2297                           ;./lcd.h: 55:   y = temp & 0x0F;
  2298     07EC  0829               	movf	Lcd_Set_Cursor@temp,w
  2299     07ED  390F               	andlw	15
  2300     07EE  00A8               	movwf	Lcd_Set_Cursor@y
  2301     07EF                     l3451:
  2302                           
  2303                           ;./lcd.h: 56:   Lcd_Cmd(z);
  2304     07EF  0827               	movf	Lcd_Set_Cursor@z,w
  2305     07F0  160A  118A  21C3  120A  118A  	fcall	_Lcd_Cmd
  2306     07F5                     l3453:
  2307                           
  2308                           ;./lcd.h: 57:   Lcd_Cmd(y);
  2309     07F5  1283               	bcf	3,5	;RP0=0, select bank0
  2310     07F6  1303               	bcf	3,6	;RP1=0, select bank0
  2311     07F7  0828               	movf	Lcd_Set_Cursor@y,w
  2312     07F8  160A  118A  21C3  120A  118A  	fcall	_Lcd_Cmd
  2313     07FD                     l158:
  2314     07FD  0008               	return
  2315     07FE                     __end_of_Lcd_Set_Cursor:
  2316                           
  2317                           	psect	text5
  2318     1FE5                     __ptext5:	
  2319 ;; *************** function _Lcd_Clear *****************
  2320 ;; Defined at:
  2321 ;;		line 34 in file "./lcd.h"
  2322 ;; Parameters:    Size  Location     Type
  2323 ;;		None
  2324 ;; Auto vars:     Size  Location     Type
  2325 ;;		None
  2326 ;; Return value:  Size  Location     Type
  2327 ;;                  1    wreg      void 
  2328 ;; Registers used:
  2329 ;;		wreg, status,2, status,0, pclath, cstack
  2330 ;; Tracked objects:
  2331 ;;		On entry : 0/0
  2332 ;;		On exit  : 0/0
  2333 ;;		Unchanged: 0/0
  2334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2335 ;;      Params:         0       0       0       0       0
  2336 ;;      Locals:         0       0       0       0       0
  2337 ;;      Temps:          0       0       0       0       0
  2338 ;;      Totals:         0       0       0       0       0
  2339 ;;Total ram usage:        0 bytes
  2340 ;; Hardware stack levels used: 1
  2341 ;; Hardware stack levels required when called: 4
  2342 ;; This function calls:
  2343 ;;		_Lcd_Cmd
  2344 ;; This function is called by:
  2345 ;;		_yagBakim
  2346 ;;		_main
  2347 ;; This function uses a non-reentrant model
  2348 ;;
  2349                           
  2350     1FE5                     _Lcd_Clear:	
  2351                           ;psect for function _Lcd_Clear
  2352                           
  2353     1FE5                     l3433:	
  2354                           ;incstack = 0
  2355                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2356                           
  2357                           
  2358                           ;./lcd.h: 36:  Lcd_Cmd(0);
  2359     1FE5  3000               	movlw	0
  2360     1FE6  160A  118A  21C3  160A  158A  	fcall	_Lcd_Cmd
  2361                           
  2362                           ;./lcd.h: 37:  Lcd_Cmd(1);
  2363     1FEB  3001               	movlw	1
  2364     1FEC  160A  118A  21C3  160A  158A  	fcall	_Lcd_Cmd
  2365     1FF1                     l152:
  2366     1FF1  0008               	return
  2367     1FF2                     __end_of_Lcd_Clear:
  2368                           
  2369                           	psect	text6
  2370     05BB                     __ptext6:	
  2371 ;; *************** function _sprintf *****************
  2372 ;; Defined at:
  2373 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  2374 ;; Parameters:    Size  Location     Type
  2375 ;;  sp              1    wreg     PTR unsigned char 
  2376 ;;		 -> main@combinedText_373(20), main@uartMessage_369(8), main@combinedText(20), main@uartMessage(8), 
  2377 ;;		 -> main@rpmString(5), main@adcString1(4), main@lcdText(9), 
  2378 ;;  f               2   12[BANK0 ] PTR const unsigned char 
  2379 ;;		 -> STR_25(6), STR_23(6), STR_19(6), STR_17(6), 
  2380 ;;		 -> STR_13(10), STR_11(6), STR_8(11), 
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;  sp              1   34[BANK0 ] PTR unsigned char 
  2383 ;;		 -> main@combinedText_373(20), main@uartMessage_369(8), main@combinedText(20), main@uartMessage(8), 
  2384 ;;		 -> main@rpmString(5), main@adcString1(4), main@lcdText(9), 
  2385 ;;  tmpval          4    0        struct .
  2386 ;;  width           2   31[BANK0 ] int 
  2387 ;;  val             2   28[BANK0 ] unsigned int 
  2388 ;;  cp              2    0        PTR const unsigned char 
  2389 ;;  len             2    0        unsigned int 
  2390 ;;  c               1   33[BANK0 ] unsigned char 
  2391 ;;  flag            1   30[BANK0 ] unsigned char 
  2392 ;;  ap              1   27[BANK0 ] PTR void [1]
  2393 ;;		 -> ?_sprintf(2), 
  2394 ;;  prec            1   26[BANK0 ] char 
  2395 ;; Return value:  Size  Location     Type
  2396 ;;                  2   12[BANK0 ] int 
  2397 ;; Registers used:
  2398 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2399 ;; Tracked objects:
  2400 ;;		On entry : 0/0
  2401 ;;		On exit  : 0/0
  2402 ;;		Unchanged: 0/0
  2403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2404 ;;      Params:         0      10       0       0       0
  2405 ;;      Locals:         0       9       0       0       0
  2406 ;;      Temps:          0       4       0       0       0
  2407 ;;      Totals:         0      23       0       0       0
  2408 ;;Total ram usage:       23 bytes
  2409 ;; Hardware stack levels used: 1
  2410 ;; Hardware stack levels required when called: 3
  2411 ;; This function calls:
  2412 ;;		___lwdiv
  2413 ;;		___lwmod
  2414 ;;		___wmul
  2415 ;;		_isdigit
  2416 ;; This function is called by:
  2417 ;;		_main
  2418 ;; This function uses a non-reentrant model
  2419 ;;
  2420                           
  2421     05BB                     _sprintf:	
  2422                           ;psect for function _sprintf
  2423                           
  2424                           
  2425                           ;incstack = 0
  2426                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2427                           ;sprintf@sp stored from wreg
  2428     05BB  1283               	bcf	3,5	;RP0=0, select bank0
  2429     05BC  1303               	bcf	3,6	;RP1=0, select bank0
  2430     05BD  00C2               	movwf	sprintf@sp
  2431     05BE                     l3583:
  2432                           
  2433                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  2434     05BE  302E               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  2435     05BF  00BB               	movwf	sprintf@ap
  2436                           
  2437                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2438     05C0  2F97               	goto	l3693
  2439     05C1                     l3585:
  2440                           
  2441                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2442     05C1  3025               	movlw	37
  2443     05C2  0641               	xorwf	sprintf@c,w
  2444     05C3  1903               	btfsc	3,2
  2445     05C4  2DC6               	goto	u4771
  2446     05C5  2DC7               	goto	u4770
  2447     05C6                     u4771:
  2448     05C6  2DD1               	goto	l3591
  2449     05C7                     u4770:
  2450     05C7                     l3587:
  2451                           
  2452                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2453     05C7  0842               	movf	sprintf@sp,w
  2454     05C8  0084               	movwf	4
  2455     05C9  0841               	movf	sprintf@c,w
  2456     05CA  1383               	bcf	3,7	;select IRP bank0
  2457     05CB  0080               	movwf	0
  2458     05CC                     l3589:
  2459     05CC  3001               	movlw	1
  2460     05CD  00FF               	movwf	btemp+1
  2461     05CE  087F               	movf	btemp+1,w
  2462     05CF  07C2               	addwf	sprintf@sp,f
  2463                           
  2464                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 559:    continue;
  2465     05D0  2F97               	goto	l3693
  2466     05D1                     l3591:
  2467                           
  2468                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2469     05D1  01BF               	clrf	sprintf@width
  2470     05D2  01C0               	clrf	sprintf@width+1
  2471                           
  2472                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2473     05D3  01BE               	clrf	sprintf@flag
  2474     05D4  2DDC               	goto	l3597
  2475     05D5                     l368:	
  2476                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 596:    case '0':
  2477                           
  2478                           
  2479                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  2480     05D5  153E               	bsf	sprintf@flag,2
  2481     05D6                     l3593:
  2482                           
  2483                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 598:     f++;
  2484     05D6  3001               	movlw	1
  2485     05D7  07AC               	addwf	sprintf@f,f
  2486     05D8  1803               	skipnc
  2487     05D9  0AAD               	incf	sprintf@f+1,f
  2488     05DA  3000               	movlw	0
  2489     05DB  07AD               	addwf	sprintf@f+1,f
  2490     05DC                     l3597:	
  2491                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  2492                           
  2493     05DC  082D               	movf	sprintf@f+1,w
  2494     05DD  00FF               	movwf	btemp+1
  2495     05DE  082C               	movf	sprintf@f,w
  2496     05DF  0084               	movwf	4
  2497     05E0  160A  118A  2000  120A  118A  	fcall	stringtab
  2498     05E5  00B6               	movwf	??_sprintf
  2499     05E6  01B7               	clrf	??_sprintf+1
  2500                           
  2501                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2502                           ; Switch size 1, requested type "simple"
  2503                           ; Number of cases is 1, Range of values is 0 to 0
  2504                           ; switch strategies available:
  2505                           ; Name         Instructions Cycles
  2506                           ; simple_byte            4     3 (average)
  2507                           ; direct_byte           11     8 (fixed)
  2508                           ; jumptable            260     6 (fixed)
  2509                           ;	Chosen strategy is simple_byte
  2510     05E7  0837               	movf	??_sprintf+1,w
  2511     05E8  3A00               	xorlw	0	; case 0
  2512     05E9  1903               	skipnz
  2513     05EA  2DEC               	goto	l4189
  2514     05EB  2DF1               	goto	l3599
  2515     05EC                     l4189:
  2516                           
  2517                           ; Switch size 1, requested type "simple"
  2518                           ; Number of cases is 1, Range of values is 48 to 48
  2519                           ; switch strategies available:
  2520                           ; Name         Instructions Cycles
  2521                           ; simple_byte            4     3 (average)
  2522                           ; direct_byte           14    11 (fixed)
  2523                           ; jumptable            263     9 (fixed)
  2524                           ;	Chosen strategy is simple_byte
  2525     05EC  0836               	movf	??_sprintf,w
  2526     05ED  3A30               	xorlw	48	; case 48
  2527     05EE  1903               	skipnz
  2528     05EF  2DD5               	goto	l368
  2529     05F0  2DF1               	goto	l3599
  2530     05F1                     l3599:
  2531                           
  2532                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  2533     05F1  082D               	movf	sprintf@f+1,w
  2534     05F2  00FF               	movwf	btemp+1
  2535     05F3  082C               	movf	sprintf@f,w
  2536     05F4  0084               	movwf	4
  2537     05F5  160A  118A  2000  120A  118A  	fcall	stringtab
  2538     05FA  160A  118A  2184  120A  118A  	fcall	_isdigit
  2539     05FF  1C03               	btfss	3,0
  2540     0600  2E02               	goto	u4781
  2541     0601  2E03               	goto	u4780
  2542     0602                     u4781:
  2543     0602  2E4C               	goto	l3613
  2544     0603                     u4780:
  2545     0603                     l3601:
  2546                           
  2547                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2548     0603  1283               	bcf	3,5	;RP0=0, select bank0
  2549     0604  1303               	bcf	3,6	;RP1=0, select bank0
  2550     0605  01BF               	clrf	sprintf@width
  2551     0606  01C0               	clrf	sprintf@width+1
  2552     0607                     l3603:
  2553                           
  2554                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2555     0607  300A               	movlw	10
  2556     0608  1283               	bcf	3,5	;RP0=0, select bank0
  2557     0609  1303               	bcf	3,6	;RP1=0, select bank0
  2558     060A  00A4               	movwf	___wmul@multiplier
  2559     060B  3000               	movlw	0
  2560     060C  00A5               	movwf	___wmul@multiplier+1
  2561     060D  0840               	movf	sprintf@width+1,w
  2562     060E  00A7               	movwf	___wmul@multiplicand+1
  2563     060F  083F               	movf	sprintf@width,w
  2564     0610  00A6               	movwf	___wmul@multiplicand
  2565     0611  160A  118A  21FF  120A  118A  	fcall	___wmul
  2566     0616  1283               	bcf	3,5	;RP0=0, select bank0
  2567     0617  1303               	bcf	3,6	;RP1=0, select bank0
  2568     0618  0825               	movf	?___wmul+1,w
  2569     0619  00C0               	movwf	sprintf@width+1
  2570     061A  0824               	movf	?___wmul,w
  2571     061B  00BF               	movwf	sprintf@width
  2572     061C                     l3605:
  2573                           
  2574                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2575     061C  082D               	movf	sprintf@f+1,w
  2576     061D  00FF               	movwf	btemp+1
  2577     061E  082C               	movf	sprintf@f,w
  2578     061F  0084               	movwf	4
  2579     0620  160A  118A  2000  120A  118A  	fcall	stringtab
  2580     0625  3ED0               	addlw	208
  2581     0626  00B6               	movwf	??_sprintf
  2582     0627  30FF               	movlw	255
  2583     0628  1803               	skipnc
  2584     0629  3000               	movlw	0
  2585     062A  00B7               	movwf	??_sprintf+1
  2586     062B  0836               	movf	??_sprintf,w
  2587     062C  07BF               	addwf	sprintf@width,f
  2588     062D  1803               	skipnc
  2589     062E  0AC0               	incf	sprintf@width+1,f
  2590     062F  0837               	movf	??_sprintf+1,w
  2591     0630  07C0               	addwf	sprintf@width+1,f
  2592     0631                     l3607:
  2593     0631  3001               	movlw	1
  2594     0632  07AC               	addwf	sprintf@f,f
  2595     0633  1803               	skipnc
  2596     0634  0AAD               	incf	sprintf@f+1,f
  2597     0635  3000               	movlw	0
  2598     0636  07AD               	addwf	sprintf@f+1,f
  2599     0637                     l3609:
  2600                           
  2601                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2602     0637  082D               	movf	sprintf@f+1,w
  2603     0638  00FF               	movwf	btemp+1
  2604     0639  082C               	movf	sprintf@f,w
  2605     063A  0084               	movwf	4
  2606     063B  160A  118A  2000  120A  118A  	fcall	stringtab
  2607     0640  160A  118A  2184  120A  118A  	fcall	_isdigit
  2608     0645  1803               	btfsc	3,0
  2609     0646  2E48               	goto	u4791
  2610     0647  2E49               	goto	u4790
  2611     0648                     u4791:
  2612     0648  2E07               	goto	l3603
  2613     0649                     u4790:
  2614     0649  2E4C               	goto	l3613
  2615     064A                     l382:	
  2616                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 843:   case 'u':
  2617                           
  2618                           
  2619                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          x40;
  2620     064A  173E               	bsf	sprintf@flag,6
  2621                           
  2622                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 845:    break;
  2623     064B  2E74               	goto	l380
  2624     064C                     l3613:
  2625     064C  1283               	bcf	3,5	;RP0=0, select bank0
  2626     064D  1303               	bcf	3,6	;RP1=0, select bank0
  2627     064E  082D               	movf	sprintf@f+1,w
  2628     064F  00B7               	movwf	??_sprintf+1
  2629     0650  082C               	movf	sprintf@f,w
  2630     0651  00B6               	movwf	??_sprintf
  2631     0652  0AAC               	incf	sprintf@f,f
  2632     0653  1903               	skipnz
  2633     0654  0AAD               	incf	sprintf@f+1,f
  2634     0655  0837               	movf	??_sprintf+1,w
  2635     0656  00FF               	movwf	btemp+1
  2636     0657  0836               	movf	??_sprintf,w
  2637     0658  0084               	movwf	4
  2638     0659  160A  118A  2000  120A  118A  	fcall	stringtab
  2639     065E  00C1               	movwf	sprintf@c
  2640     065F  00B8               	movwf	??_sprintf+2
  2641     0660  01B9               	clrf	??_sprintf+3
  2642                           
  2643                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2644                           ; Switch size 1, requested type "simple"
  2645                           ; Number of cases is 1, Range of values is 0 to 0
  2646                           ; switch strategies available:
  2647                           ; Name         Instructions Cycles
  2648                           ; simple_byte            4     3 (average)
  2649                           ; direct_byte           11     8 (fixed)
  2650                           ; jumptable            260     6 (fixed)
  2651                           ;	Chosen strategy is simple_byte
  2652     0661  0839               	movf	??_sprintf+3,w
  2653     0662  3A00               	xorlw	0	; case 0
  2654     0663  1903               	skipnz
  2655     0664  2E66               	goto	l4191
  2656     0665  2F97               	goto	l3693
  2657     0666                     l4191:
  2658                           
  2659                           ; Switch size 1, requested type "simple"
  2660                           ; Number of cases is 4, Range of values is 0 to 117
  2661                           ; switch strategies available:
  2662                           ; Name         Instructions Cycles
  2663                           ; simple_byte           13     7 (average)
  2664                           ; jumptable            260     6 (fixed)
  2665                           ;	Chosen strategy is simple_byte
  2666     0666  0838               	movf	??_sprintf+2,w
  2667     0667  3A00               	xorlw	0	; case 0
  2668     0668  1903               	skipnz
  2669     0669  2FAD               	goto	l3695
  2670     066A  3A64               	xorlw	100	; case 100
  2671     066B  1903               	skipnz
  2672     066C  2E74               	goto	l380
  2673     066D  3A0D               	xorlw	13	; case 105
  2674     066E  1903               	skipnz
  2675     066F  2E74               	goto	l380
  2676     0670  3A1C               	xorlw	28	; case 117
  2677     0671  1903               	skipnz
  2678     0672  2E4A               	goto	l382
  2679     0673  2F97               	goto	l3693
  2680     0674                     l380:
  2681                           
  2682                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1277:   if((flag 
      +                          & 0x40) == 0x00)
  2683     0674  1B3E               	btfsc	sprintf@flag,6
  2684     0675  2E77               	goto	u4801
  2685     0676  2E78               	goto	u4800
  2686     0677                     u4801:
  2687     0677  2E92               	goto	l3625
  2688     0678                     u4800:
  2689     0678                     l3615:
  2690                           
  2691                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2692     0678  083B               	movf	sprintf@ap,w
  2693     0679  0084               	movwf	4
  2694     067A  1383               	bcf	3,7	;select IRP bank0
  2695     067B  0800               	movf	0,w
  2696     067C  00BC               	movwf	sprintf@val
  2697     067D  0A84               	incf	4,f
  2698     067E  0800               	movf	0,w
  2699     067F  00BD               	movwf	sprintf@val+1
  2700     0680                     l3617:
  2701     0680  3002               	movlw	2
  2702     0681  00FF               	movwf	btemp+1
  2703     0682  087F               	movf	btemp+1,w
  2704     0683  07BB               	addwf	sprintf@ap,f
  2705     0684                     l3619:
  2706                           
  2707                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2708     0684  1FBD               	btfss	sprintf@val+1,7
  2709     0685  2E87               	goto	u4811
  2710     0686  2E88               	goto	u4810
  2711     0687                     u4811:
  2712     0687  2E9E               	goto	l3629
  2713     0688                     u4810:
  2714     0688                     l3621:
  2715                           
  2716                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2717     0688  3003               	movlw	3
  2718     0689  00FF               	movwf	btemp+1
  2719     068A  087F               	movf	btemp+1,w
  2720     068B  04BE               	iorwf	sprintf@flag,f
  2721     068C                     l3623:
  2722                           
  2723                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2724     068C  09BC               	comf	sprintf@val,f
  2725     068D  09BD               	comf	sprintf@val+1,f
  2726     068E  0ABC               	incf	sprintf@val,f
  2727     068F  1903               	skipnz
  2728     0690  0ABD               	incf	sprintf@val+1,f
  2729     0691  2E9E               	goto	l3629
  2730     0692                     l3625:
  2731                           
  2732                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2733     0692  083B               	movf	sprintf@ap,w
  2734     0693  0084               	movwf	4
  2735     0694  1383               	bcf	3,7	;select IRP bank0
  2736     0695  0800               	movf	0,w
  2737     0696  00BC               	movwf	sprintf@val
  2738     0697  0A84               	incf	4,f
  2739     0698  0800               	movf	0,w
  2740     0699  00BD               	movwf	sprintf@val+1
  2741     069A                     l3627:
  2742     069A  3002               	movlw	2
  2743     069B  00FF               	movwf	btemp+1
  2744     069C  087F               	movf	btemp+1,w
  2745     069D  07BB               	addwf	sprintf@ap,f
  2746     069E                     l3629:
  2747                           
  2748                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2749     069E  01C1               	clrf	sprintf@c
  2750     069F  0AC1               	incf	sprintf@c,f
  2751     06A0                     l3635:
  2752                           
  2753                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2754     06A0  0841               	movf	sprintf@c,w
  2755     06A1  00B6               	movwf	??_sprintf
  2756     06A2  0736               	addwf	??_sprintf,w
  2757     06A3  3E12               	addlw	low (_dpowers| (0+32768))
  2758     06A4  0084               	movwf	4
  2759     06A5  3090               	movlw	high (_dpowers| (0+32768))
  2760     06A6  1803               	skipnc
  2761     06A7  3E01               	addlw	1
  2762     06A8  00FF               	movwf	btemp+1
  2763     06A9  160A  118A  2000  120A  118A  	fcall	stringtab
  2764     06AE  00B7               	movwf	??_sprintf+1
  2765     06AF  160A  118A  2000  120A  118A  	fcall	stringtab
  2766     06B4  00B8               	movwf	??_sprintf+2
  2767     06B5  0838               	movf	??_sprintf+2,w
  2768     06B6  023D               	subwf	sprintf@val+1,w
  2769     06B7  1D03               	skipz
  2770     06B8  2EBB               	goto	u4825
  2771     06B9  0837               	movf	??_sprintf+1,w
  2772     06BA  023C               	subwf	sprintf@val,w
  2773     06BB                     u4825:
  2774     06BB  1803               	skipnc
  2775     06BC  2EBE               	goto	u4821
  2776     06BD  2EBF               	goto	u4820
  2777     06BE                     u4821:
  2778     06BE  2EC0               	goto	l3639
  2779     06BF                     u4820:
  2780     06BF  2ECA               	goto	l3643
  2781     06C0                     l3639:
  2782     06C0  3001               	movlw	1
  2783     06C1  00FF               	movwf	btemp+1
  2784     06C2  087F               	movf	btemp+1,w
  2785     06C3  07C1               	addwf	sprintf@c,f
  2786     06C4                     l3641:
  2787     06C4  3005               	movlw	5
  2788     06C5  0641               	xorwf	sprintf@c,w
  2789     06C6  1D03               	btfss	3,2
  2790     06C7  2EC9               	goto	u4831
  2791     06C8  2ECA               	goto	u4830
  2792     06C9                     u4831:
  2793     06C9  2EA0               	goto	l3635
  2794     06CA                     u4830:
  2795     06CA                     l3643:
  2796                           
  2797                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  2798     06CA  083F               	movf	sprintf@width,w
  2799     06CB  0440               	iorwf	sprintf@width+1,w
  2800     06CC  1903               	btfsc	3,2
  2801     06CD  2ECF               	goto	u4841
  2802     06CE  2ED0               	goto	u4840
  2803     06CF                     u4841:
  2804     06CF  2EDC               	goto	l389
  2805     06D0                     u4840:
  2806     06D0                     l3645:
  2807     06D0  083E               	movf	sprintf@flag,w
  2808     06D1  3903               	andlw	3
  2809     06D2  1903               	btfsc	3,2
  2810     06D3  2ED5               	goto	u4851
  2811     06D4  2ED6               	goto	u4850
  2812     06D5                     u4851:
  2813     06D5  2EDC               	goto	l389
  2814     06D6                     u4850:
  2815     06D6                     l3647:
  2816                           
  2817                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1372:    width--;
  2818     06D6  30FF               	movlw	255
  2819     06D7  07BF               	addwf	sprintf@width,f
  2820     06D8  1803               	skipnc
  2821     06D9  0AC0               	incf	sprintf@width+1,f
  2822     06DA  30FF               	movlw	255
  2823     06DB  07C0               	addwf	sprintf@width+1,f
  2824     06DC                     l389:
  2825                           
  2826                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  2827     06DC  0840               	movf	sprintf@width+1,w
  2828     06DD  3A80               	xorlw	128
  2829     06DE  3C80               	sublw	128
  2830     06DF  1D03               	skipz
  2831     06E0  2EE3               	goto	u4865
  2832     06E1  083F               	movf	sprintf@width,w
  2833     06E2  0241               	subwf	sprintf@c,w
  2834     06E3                     u4865:
  2835     06E3  1803               	skipnc
  2836     06E4  2EE6               	goto	u4861
  2837     06E5  2EE7               	goto	u4860
  2838     06E6                     u4861:
  2839     06E6  2EF3               	goto	l3651
  2840     06E7                     u4860:
  2841     06E7                     l3649:
  2842                           
  2843                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  2844     06E7  1283               	bcf	3,5	;RP0=0, select bank0
  2845     06E8  1303               	bcf	3,6	;RP1=0, select bank0
  2846     06E9  0841               	movf	sprintf@c,w
  2847     06EA  00B6               	movwf	??_sprintf
  2848     06EB  01B7               	clrf	??_sprintf+1
  2849     06EC  0836               	movf	??_sprintf,w
  2850     06ED  02BF               	subwf	sprintf@width,f
  2851     06EE  0837               	movf	??_sprintf+1,w
  2852     06EF  1C03               	skipc
  2853     06F0  03C0               	decf	sprintf@width+1,f
  2854     06F1  02C0               	subwf	sprintf@width+1,f
  2855     06F2  2EF7               	goto	l3653
  2856     06F3                     l3651:
  2857                           
  2858                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  2859     06F3  1283               	bcf	3,5	;RP0=0, select bank0
  2860     06F4  1303               	bcf	3,6	;RP1=0, select bank0
  2861     06F5  01BF               	clrf	sprintf@width
  2862     06F6  01C0               	clrf	sprintf@width+1
  2863     06F7                     l3653:
  2864                           
  2865                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  2866     06F7  1D3E               	btfss	sprintf@flag,2
  2867     06F8  2EFA               	goto	u4871
  2868     06F9  2EFB               	goto	u4870
  2869     06FA                     u4871:
  2870     06FA  2F26               	goto	l3669
  2871     06FB                     u4870:
  2872     06FB                     l3655:
  2873                           
  2874                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1418:    if(flag 
      +                          & 0x03)
  2875     06FB  083E               	movf	sprintf@flag,w
  2876     06FC  3903               	andlw	3
  2877     06FD  1903               	btfsc	3,2
  2878     06FE  2F00               	goto	u4881
  2879     06FF  2F01               	goto	u4880
  2880     0700                     u4881:
  2881     0700  2F0A               	goto	l3661
  2882     0701                     u4880:
  2883     0701                     l3657:
  2884                           
  2885                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1419:     ((*sp++
      +                           = ('-')));
  2886     0701  0842               	movf	sprintf@sp,w
  2887     0702  0084               	movwf	4
  2888     0703  302D               	movlw	45
  2889     0704  1383               	bcf	3,7	;select IRP bank0
  2890     0705  0080               	movwf	0
  2891     0706                     l3659:
  2892     0706  3001               	movlw	1
  2893     0707  00FF               	movwf	btemp+1
  2894     0708  087F               	movf	btemp+1,w
  2895     0709  07C2               	addwf	sprintf@sp,f
  2896     070A                     l3661:
  2897                           
  2898                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  2899     070A  083F               	movf	sprintf@width,w
  2900     070B  0440               	iorwf	sprintf@width+1,w
  2901     070C  1903               	btfsc	3,2
  2902     070D  2F0F               	goto	u4891
  2903     070E  2F10               	goto	u4890
  2904     070F                     u4891:
  2905     070F  2F50               	goto	l3683
  2906     0710                     u4890:
  2907     0710                     l3663:
  2908                           
  2909                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
  2910     0710  0842               	movf	sprintf@sp,w
  2911     0711  0084               	movwf	4
  2912     0712  3030               	movlw	48
  2913     0713  1383               	bcf	3,7	;select IRP bank0
  2914     0714  0080               	movwf	0
  2915     0715                     l3665:
  2916     0715  3001               	movlw	1
  2917     0716  00FF               	movwf	btemp+1
  2918     0717  087F               	movf	btemp+1,w
  2919     0718  07C2               	addwf	sprintf@sp,f
  2920     0719                     l3667:
  2921     0719  30FF               	movlw	255
  2922     071A  07BF               	addwf	sprintf@width,f
  2923     071B  1803               	skipnc
  2924     071C  0AC0               	incf	sprintf@width+1,f
  2925     071D  30FF               	movlw	255
  2926     071E  07C0               	addwf	sprintf@width+1,f
  2927     071F  083F               	movf	sprintf@width,w
  2928     0720  0440               	iorwf	sprintf@width+1,w
  2929     0721  1D03               	btfss	3,2
  2930     0722  2F24               	goto	u4901
  2931     0723  2F25               	goto	u4900
  2932     0724                     u4901:
  2933     0724  2F10               	goto	l3663
  2934     0725                     u4900:
  2935     0725  2F50               	goto	l3683
  2936     0726                     l3669:
  2937                           
  2938                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1450:    if(width
  2939     0726  083F               	movf	sprintf@width,w
  2940     0727  0440               	iorwf	sprintf@width+1,w
  2941     0728  1903               	btfsc	3,2
  2942     0729  2F2B               	goto	u4911
  2943     072A  2F2C               	goto	u4910
  2944     072B                     u4911:
  2945     072B  2F41               	goto	l3677
  2946     072C                     u4910:
  2947     072C                     l3671:
  2948                           
  2949                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  2950     072C  0842               	movf	sprintf@sp,w
  2951     072D  0084               	movwf	4
  2952     072E  3020               	movlw	32
  2953     072F  1383               	bcf	3,7	;select IRP bank0
  2954     0730  0080               	movwf	0
  2955     0731                     l3673:
  2956     0731  3001               	movlw	1
  2957     0732  00FF               	movwf	btemp+1
  2958     0733  087F               	movf	btemp+1,w
  2959     0734  07C2               	addwf	sprintf@sp,f
  2960     0735                     l3675:
  2961     0735  30FF               	movlw	255
  2962     0736  07BF               	addwf	sprintf@width,f
  2963     0737  1803               	skipnc
  2964     0738  0AC0               	incf	sprintf@width+1,f
  2965     0739  30FF               	movlw	255
  2966     073A  07C0               	addwf	sprintf@width+1,f
  2967     073B  083F               	movf	sprintf@width,w
  2968     073C  0440               	iorwf	sprintf@width+1,w
  2969     073D  1D03               	btfss	3,2
  2970     073E  2F40               	goto	u4921
  2971     073F  2F41               	goto	u4920
  2972     0740                     u4921:
  2973     0740  2F2C               	goto	l3671
  2974     0741                     u4920:
  2975     0741                     l3677:
  2976                           
  2977                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  2978     0741  083E               	movf	sprintf@flag,w
  2979     0742  3903               	andlw	3
  2980     0743  1903               	btfsc	3,2
  2981     0744  2F46               	goto	u4931
  2982     0745  2F47               	goto	u4930
  2983     0746                     u4931:
  2984     0746  2F50               	goto	l3683
  2985     0747                     u4930:
  2986     0747                     l3679:
  2987                           
  2988                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2989     0747  0842               	movf	sprintf@sp,w
  2990     0748  0084               	movwf	4
  2991     0749  302D               	movlw	45
  2992     074A  1383               	bcf	3,7	;select IRP bank0
  2993     074B  0080               	movwf	0
  2994     074C                     l3681:
  2995     074C  3001               	movlw	1
  2996     074D  00FF               	movwf	btemp+1
  2997     074E  087F               	movf	btemp+1,w
  2998     074F  07C2               	addwf	sprintf@sp,f
  2999     0750                     l3683:
  3000                           
  3001                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  3002     0750  0841               	movf	sprintf@c,w
  3003     0751  00BA               	movwf	sprintf@prec
  3004                           
  3005                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3006     0752  2F8E               	goto	l3691
  3007     0753                     l3685:
  3008                           
  3009                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  3010     0753  300A               	movlw	10
  3011     0754  00A7               	movwf	___lwmod@divisor
  3012     0755  3000               	movlw	0
  3013     0756  00A8               	movwf	___lwmod@divisor+1
  3014     0757  083A               	movf	sprintf@prec,w
  3015     0758  00B6               	movwf	??_sprintf
  3016     0759  0736               	addwf	??_sprintf,w
  3017     075A  3E12               	addlw	low (_dpowers| (0+32768))
  3018     075B  0084               	movwf	4
  3019     075C  3090               	movlw	high (_dpowers| (0+32768))
  3020     075D  1803               	skipnc
  3021     075E  3E01               	addlw	1
  3022     075F  00FF               	movwf	btemp+1
  3023     0760  160A  118A  2000  120A  118A  	fcall	stringtab
  3024     0765  00A0               	movwf	___lwdiv@divisor
  3025     0766  160A  118A  2000  120A  118A  	fcall	stringtab
  3026     076B  00A1               	movwf	___lwdiv@divisor+1
  3027     076C  083D               	movf	sprintf@val+1,w
  3028     076D  00A3               	movwf	___lwdiv@dividend+1
  3029     076E  083C               	movf	sprintf@val,w
  3030     076F  00A2               	movwf	___lwdiv@dividend
  3031     0770  160A  118A  22E1  120A  118A  	fcall	___lwdiv
  3032     0775  1283               	bcf	3,5	;RP0=0, select bank0
  3033     0776  1303               	bcf	3,6	;RP1=0, select bank0
  3034     0777  0821               	movf	?___lwdiv+1,w
  3035     0778  00AA               	movwf	___lwmod@dividend+1
  3036     0779  0820               	movf	?___lwdiv,w
  3037     077A  00A9               	movwf	___lwmod@dividend
  3038     077B  160A  118A  225F  120A  118A  	fcall	___lwmod
  3039     0780  1283               	bcf	3,5	;RP0=0, select bank0
  3040     0781  1303               	bcf	3,6	;RP1=0, select bank0
  3041     0782  0827               	movf	?___lwmod,w
  3042     0783  3E30               	addlw	48
  3043     0784  00C1               	movwf	sprintf@c
  3044     0785                     l3687:
  3045                           
  3046                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  3047     0785  0842               	movf	sprintf@sp,w
  3048     0786  0084               	movwf	4
  3049     0787  0841               	movf	sprintf@c,w
  3050     0788  1383               	bcf	3,7	;select IRP bank0
  3051     0789  0080               	movwf	0
  3052     078A                     l3689:
  3053     078A  3001               	movlw	1
  3054     078B  00FF               	movwf	btemp+1
  3055     078C  087F               	movf	btemp+1,w
  3056     078D  07C2               	addwf	sprintf@sp,f
  3057     078E                     l3691:
  3058                           
  3059                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3060     078E  30FF               	movlw	255
  3061     078F  00FF               	movwf	btemp+1
  3062     0790  087F               	movf	btemp+1,w
  3063     0791  07BA               	addwf	sprintf@prec,f
  3064     0792  0A3A               	incf	sprintf@prec,w
  3065     0793  1D03               	btfss	3,2
  3066     0794  2F96               	goto	u4941
  3067     0795  2F97               	goto	u4940
  3068     0796                     u4941:
  3069     0796  2F53               	goto	l3685
  3070     0797                     u4940:
  3071     0797                     l3693:
  3072                           
  3073                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3074     0797  082D               	movf	sprintf@f+1,w
  3075     0798  00B7               	movwf	??_sprintf+1
  3076     0799  082C               	movf	sprintf@f,w
  3077     079A  00B6               	movwf	??_sprintf
  3078     079B  0AAC               	incf	sprintf@f,f
  3079     079C  1903               	skipnz
  3080     079D  0AAD               	incf	sprintf@f+1,f
  3081     079E  0837               	movf	??_sprintf+1,w
  3082     079F  00FF               	movwf	btemp+1
  3083     07A0  0836               	movf	??_sprintf,w
  3084     07A1  0084               	movwf	4
  3085     07A2  160A  118A  2000  120A  118A  	fcall	stringtab
  3086     07A7  00C1               	movwf	sprintf@c
  3087     07A8  0841               	movf	sprintf@c,w
  3088     07A9  1D03               	btfss	3,2
  3089     07AA  2FAC               	goto	u4951
  3090     07AB  2FAD               	goto	u4950
  3091     07AC                     u4951:
  3092     07AC  2DC1               	goto	l3585
  3093     07AD                     u4950:
  3094     07AD                     l3695:
  3095                           
  3096                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3097     07AD  0842               	movf	sprintf@sp,w
  3098     07AE  0084               	movwf	4
  3099     07AF  1383               	bcf	3,7	;select IRP bank0
  3100     07B0  0180               	clrf	0
  3101     07B1                     l406:
  3102     07B1  0008               	return
  3103     07B2                     __end_of_sprintf:
  3104                           
  3105                           	psect	text7
  3106     1184                     __ptext7:	
  3107 ;; *************** function _isdigit *****************
  3108 ;; Defined at:
  3109 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\isdigit.c"
  3110 ;; Parameters:    Size  Location     Type
  3111 ;;  c               1    wreg     unsigned char 
  3112 ;; Auto vars:     Size  Location     Type
  3113 ;;  c               1    1[BANK0 ] unsigned char 
  3114 ;; Return value:  Size  Location     Type
  3115 ;;		None               void
  3116 ;; Registers used:
  3117 ;;		wreg, status,2, status,0
  3118 ;; Tracked objects:
  3119 ;;		On entry : 0/0
  3120 ;;		On exit  : 0/0
  3121 ;;		Unchanged: 0/0
  3122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3123 ;;      Params:         0       0       0       0       0
  3124 ;;      Locals:         0       2       0       0       0
  3125 ;;      Temps:          0       0       0       0       0
  3126 ;;      Totals:         0       2       0       0       0
  3127 ;;Total ram usage:        2 bytes
  3128 ;; Hardware stack levels used: 1
  3129 ;; Hardware stack levels required when called: 2
  3130 ;; This function calls:
  3131 ;;		Nothing
  3132 ;; This function is called by:
  3133 ;;		_sprintf
  3134 ;; This function uses a non-reentrant model
  3135 ;;
  3136                           
  3137     1184                     _isdigit:	
  3138                           ;psect for function _isdigit
  3139                           
  3140                           
  3141                           ;incstack = 0
  3142                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3143                           ;isdigit@c stored from wreg
  3144     1184  1283               	bcf	3,5	;RP0=0, select bank0
  3145     1185  1303               	bcf	3,6	;RP1=0, select bank0
  3146     1186  00A1               	movwf	isdigit@c
  3147     1187                     l3463:
  3148     1187  01A0               	clrf	_isdigit$836
  3149     1188                     l3465:
  3150     1188  303A               	movlw	58
  3151     1189  0221               	subwf	isdigit@c,w
  3152     118A  1803               	skipnc
  3153     118B  298D               	goto	u4541
  3154     118C  298E               	goto	u4540
  3155     118D                     u4541:
  3156     118D  2996               	goto	l3471
  3157     118E                     u4540:
  3158     118E                     l3467:
  3159     118E  3030               	movlw	48
  3160     118F  0221               	subwf	isdigit@c,w
  3161     1190  1C03               	skipc
  3162     1191  2993               	goto	u4551
  3163     1192  2994               	goto	u4550
  3164     1193                     u4551:
  3165     1193  2996               	goto	l3471
  3166     1194                     u4550:
  3167     1194                     l3469:
  3168     1194  01A0               	clrf	_isdigit$836
  3169     1195  0AA0               	incf	_isdigit$836,f
  3170     1196                     l3471:
  3171     1196  0C20               	rrf	_isdigit$836,w
  3172     1197                     l863:
  3173     1197  0008               	return
  3174     1198                     __end_of_isdigit:
  3175                           
  3176                           	psect	text8
  3177     11FF                     __ptext8:	
  3178 ;; *************** function ___wmul *****************
  3179 ;; Defined at:
  3180 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  3181 ;; Parameters:    Size  Location     Type
  3182 ;;  multiplier      2    4[BANK0 ] unsigned int 
  3183 ;;  multiplicand    2    6[BANK0 ] unsigned int 
  3184 ;; Auto vars:     Size  Location     Type
  3185 ;;  product         2    8[BANK0 ] unsigned int 
  3186 ;; Return value:  Size  Location     Type
  3187 ;;                  2    4[BANK0 ] unsigned int 
  3188 ;; Registers used:
  3189 ;;		wreg, status,2, status,0
  3190 ;; Tracked objects:
  3191 ;;		On entry : 0/0
  3192 ;;		On exit  : 0/0
  3193 ;;		Unchanged: 0/0
  3194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3195 ;;      Params:         0       4       0       0       0
  3196 ;;      Locals:         0       2       0       0       0
  3197 ;;      Temps:          0       0       0       0       0
  3198 ;;      Totals:         0       6       0       0       0
  3199 ;;Total ram usage:        6 bytes
  3200 ;; Hardware stack levels used: 1
  3201 ;; Hardware stack levels required when called: 2
  3202 ;; This function calls:
  3203 ;;		Nothing
  3204 ;; This function is called by:
  3205 ;;		_main
  3206 ;;		_sprintf
  3207 ;; This function uses a non-reentrant model
  3208 ;;
  3209                           
  3210     11FF                     ___wmul:	
  3211                           ;psect for function ___wmul
  3212                           
  3213     11FF                     l3475:	
  3214                           ;incstack = 0
  3215                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3216                           
  3217     11FF  1283               	bcf	3,5	;RP0=0, select bank0
  3218     1200  1303               	bcf	3,6	;RP1=0, select bank0
  3219     1201  01A8               	clrf	___wmul@product
  3220     1202  01A9               	clrf	___wmul@product+1
  3221     1203                     l3477:
  3222     1203  1C24               	btfss	___wmul@multiplier,0
  3223     1204  2A06               	goto	u4561
  3224     1205  2A07               	goto	u4560
  3225     1206                     u4561:
  3226     1206  2A0D               	goto	l410
  3227     1207                     u4560:
  3228     1207                     l3479:
  3229     1207  0826               	movf	___wmul@multiplicand,w
  3230     1208  07A8               	addwf	___wmul@product,f
  3231     1209  1803               	skipnc
  3232     120A  0AA9               	incf	___wmul@product+1,f
  3233     120B  0827               	movf	___wmul@multiplicand+1,w
  3234     120C  07A9               	addwf	___wmul@product+1,f
  3235     120D                     l410:
  3236     120D  3001               	movlw	1
  3237     120E                     u4575:
  3238     120E  1003               	clrc
  3239     120F  0DA6               	rlf	___wmul@multiplicand,f
  3240     1210  0DA7               	rlf	___wmul@multiplicand+1,f
  3241     1211  3EFF               	addlw	-1
  3242     1212  1D03               	skipz
  3243     1213  2A0E               	goto	u4575
  3244     1214                     l3481:
  3245     1214  3001               	movlw	1
  3246     1215                     u4585:
  3247     1215  1003               	clrc
  3248     1216  0CA5               	rrf	___wmul@multiplier+1,f
  3249     1217  0CA4               	rrf	___wmul@multiplier,f
  3250     1218  3EFF               	addlw	-1
  3251     1219  1D03               	skipz
  3252     121A  2A15               	goto	u4585
  3253     121B                     l3483:
  3254     121B  0824               	movf	___wmul@multiplier,w
  3255     121C  0425               	iorwf	___wmul@multiplier+1,w
  3256     121D  1D03               	btfss	3,2
  3257     121E  2A20               	goto	u4591
  3258     121F  2A21               	goto	u4590
  3259     1220                     u4591:
  3260     1220  2A03               	goto	l3477
  3261     1221                     u4590:
  3262     1221                     l3485:
  3263     1221  0829               	movf	___wmul@product+1,w
  3264     1222  00A5               	movwf	?___wmul+1
  3265     1223  0828               	movf	___wmul@product,w
  3266     1224  00A4               	movwf	?___wmul
  3267     1225                     l412:
  3268     1225  0008               	return
  3269     1226                     __end_of___wmul:
  3270                           
  3271                           	psect	text9
  3272     125F                     __ptext9:	
  3273 ;; *************** function ___lwmod *****************
  3274 ;; Defined at:
  3275 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  3276 ;; Parameters:    Size  Location     Type
  3277 ;;  divisor         2    7[BANK0 ] unsigned int 
  3278 ;;  dividend        2    9[BANK0 ] unsigned int 
  3279 ;; Auto vars:     Size  Location     Type
  3280 ;;  counter         1   11[BANK0 ] unsigned char 
  3281 ;; Return value:  Size  Location     Type
  3282 ;;                  2    7[BANK0 ] unsigned int 
  3283 ;; Registers used:
  3284 ;;		wreg, status,2, status,0, btemp+1
  3285 ;; Tracked objects:
  3286 ;;		On entry : 0/0
  3287 ;;		On exit  : 0/0
  3288 ;;		Unchanged: 0/0
  3289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3290 ;;      Params:         0       4       0       0       0
  3291 ;;      Locals:         0       1       0       0       0
  3292 ;;      Temps:          0       0       0       0       0
  3293 ;;      Totals:         0       5       0       0       0
  3294 ;;Total ram usage:        5 bytes
  3295 ;; Hardware stack levels used: 1
  3296 ;; Hardware stack levels required when called: 2
  3297 ;; This function calls:
  3298 ;;		Nothing
  3299 ;; This function is called by:
  3300 ;;		_sprintf
  3301 ;; This function uses a non-reentrant model
  3302 ;;
  3303                           
  3304     125F                     ___lwmod:	
  3305                           ;psect for function ___lwmod
  3306                           
  3307     125F                     l3515:	
  3308                           ;incstack = 0
  3309                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  3310                           
  3311     125F  1283               	bcf	3,5	;RP0=0, select bank0
  3312     1260  1303               	bcf	3,6	;RP1=0, select bank0
  3313     1261  0827               	movf	___lwmod@divisor,w
  3314     1262  0428               	iorwf	___lwmod@divisor+1,w
  3315     1263  1903               	btfsc	3,2
  3316     1264  2A66               	goto	u4671
  3317     1265  2A67               	goto	u4670
  3318     1266                     u4671:
  3319     1266  2A96               	goto	l3533
  3320     1267                     u4670:
  3321     1267                     l3517:
  3322     1267  01AB               	clrf	___lwmod@counter
  3323     1268  0AAB               	incf	___lwmod@counter,f
  3324     1269  2A75               	goto	l3523
  3325     126A                     l3519:
  3326     126A  3001               	movlw	1
  3327     126B                     u4685:
  3328     126B  1003               	clrc
  3329     126C  0DA7               	rlf	___lwmod@divisor,f
  3330     126D  0DA8               	rlf	___lwmod@divisor+1,f
  3331     126E  3EFF               	addlw	-1
  3332     126F  1D03               	skipz
  3333     1270  2A6B               	goto	u4685
  3334     1271                     l3521:
  3335     1271  3001               	movlw	1
  3336     1272  00FF               	movwf	btemp+1
  3337     1273  087F               	movf	btemp+1,w
  3338     1274  07AB               	addwf	___lwmod@counter,f
  3339     1275                     l3523:
  3340     1275  1FA8               	btfss	___lwmod@divisor+1,7
  3341     1276  2A78               	goto	u4691
  3342     1277  2A79               	goto	u4690
  3343     1278                     u4691:
  3344     1278  2A6A               	goto	l3519
  3345     1279                     u4690:
  3346     1279                     l3525:
  3347     1279  0828               	movf	___lwmod@divisor+1,w
  3348     127A  022A               	subwf	___lwmod@dividend+1,w
  3349     127B  1D03               	skipz
  3350     127C  2A7F               	goto	u4705
  3351     127D  0827               	movf	___lwmod@divisor,w
  3352     127E  0229               	subwf	___lwmod@dividend,w
  3353     127F                     u4705:
  3354     127F  1C03               	skipc
  3355     1280  2A82               	goto	u4701
  3356     1281  2A83               	goto	u4700
  3357     1282                     u4701:
  3358     1282  2A89               	goto	l3529
  3359     1283                     u4700:
  3360     1283                     l3527:
  3361     1283  0827               	movf	___lwmod@divisor,w
  3362     1284  02A9               	subwf	___lwmod@dividend,f
  3363     1285  0828               	movf	___lwmod@divisor+1,w
  3364     1286  1C03               	skipc
  3365     1287  03AA               	decf	___lwmod@dividend+1,f
  3366     1288  02AA               	subwf	___lwmod@dividend+1,f
  3367     1289                     l3529:
  3368     1289  3001               	movlw	1
  3369     128A                     u4715:
  3370     128A  1003               	clrc
  3371     128B  0CA8               	rrf	___lwmod@divisor+1,f
  3372     128C  0CA7               	rrf	___lwmod@divisor,f
  3373     128D  3EFF               	addlw	-1
  3374     128E  1D03               	skipz
  3375     128F  2A8A               	goto	u4715
  3376     1290                     l3531:
  3377     1290  3001               	movlw	1
  3378     1291  02AB               	subwf	___lwmod@counter,f
  3379     1292  1D03               	btfss	3,2
  3380     1293  2A95               	goto	u4721
  3381     1294  2A96               	goto	u4720
  3382     1295                     u4721:
  3383     1295  2A79               	goto	l3525
  3384     1296                     u4720:
  3385     1296                     l3533:
  3386     1296  082A               	movf	___lwmod@dividend+1,w
  3387     1297  00A8               	movwf	?___lwmod+1
  3388     1298  0829               	movf	___lwmod@dividend,w
  3389     1299  00A7               	movwf	?___lwmod
  3390     129A                     l692:
  3391     129A  0008               	return
  3392     129B                     __end_of___lwmod:
  3393                           
  3394                           	psect	text10
  3395     12E1                     __ptext10:	
  3396 ;; *************** function ___lwdiv *****************
  3397 ;; Defined at:
  3398 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  3399 ;; Parameters:    Size  Location     Type
  3400 ;;  divisor         2    0[BANK0 ] unsigned int 
  3401 ;;  dividend        2    2[BANK0 ] unsigned int 
  3402 ;; Auto vars:     Size  Location     Type
  3403 ;;  quotient        2    5[BANK0 ] unsigned int 
  3404 ;;  counter         1    4[BANK0 ] unsigned char 
  3405 ;; Return value:  Size  Location     Type
  3406 ;;                  2    0[BANK0 ] unsigned int 
  3407 ;; Registers used:
  3408 ;;		wreg, status,2, status,0, btemp+1
  3409 ;; Tracked objects:
  3410 ;;		On entry : 0/0
  3411 ;;		On exit  : 0/0
  3412 ;;		Unchanged: 0/0
  3413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3414 ;;      Params:         0       4       0       0       0
  3415 ;;      Locals:         0       3       0       0       0
  3416 ;;      Temps:          0       0       0       0       0
  3417 ;;      Totals:         0       7       0       0       0
  3418 ;;Total ram usage:        7 bytes
  3419 ;; Hardware stack levels used: 1
  3420 ;; Hardware stack levels required when called: 2
  3421 ;; This function calls:
  3422 ;;		Nothing
  3423 ;; This function is called by:
  3424 ;;		_sprintf
  3425 ;; This function uses a non-reentrant model
  3426 ;;
  3427                           
  3428     12E1                     ___lwdiv:	
  3429                           ;psect for function ___lwdiv
  3430                           
  3431     12E1                     l3489:	
  3432                           ;incstack = 0
  3433                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  3434                           
  3435     12E1  1283               	bcf	3,5	;RP0=0, select bank0
  3436     12E2  1303               	bcf	3,6	;RP1=0, select bank0
  3437     12E3  01A5               	clrf	___lwdiv@quotient
  3438     12E4  01A6               	clrf	___lwdiv@quotient+1
  3439     12E5                     l3491:
  3440     12E5  0820               	movf	___lwdiv@divisor,w
  3441     12E6  0421               	iorwf	___lwdiv@divisor+1,w
  3442     12E7  1903               	btfsc	3,2
  3443     12E8  2AEA               	goto	u4601
  3444     12E9  2AEB               	goto	u4600
  3445     12EA                     u4601:
  3446     12EA  2B22               	goto	l3511
  3447     12EB                     u4600:
  3448     12EB                     l3493:
  3449     12EB  01A4               	clrf	___lwdiv@counter
  3450     12EC  0AA4               	incf	___lwdiv@counter,f
  3451     12ED  2AF9               	goto	l3499
  3452     12EE                     l3495:
  3453     12EE  3001               	movlw	1
  3454     12EF                     u4615:
  3455     12EF  1003               	clrc
  3456     12F0  0DA0               	rlf	___lwdiv@divisor,f
  3457     12F1  0DA1               	rlf	___lwdiv@divisor+1,f
  3458     12F2  3EFF               	addlw	-1
  3459     12F3  1D03               	skipz
  3460     12F4  2AEF               	goto	u4615
  3461     12F5                     l3497:
  3462     12F5  3001               	movlw	1
  3463     12F6  00FF               	movwf	btemp+1
  3464     12F7  087F               	movf	btemp+1,w
  3465     12F8  07A4               	addwf	___lwdiv@counter,f
  3466     12F9                     l3499:
  3467     12F9  1FA1               	btfss	___lwdiv@divisor+1,7
  3468     12FA  2AFC               	goto	u4621
  3469     12FB  2AFD               	goto	u4620
  3470     12FC                     u4621:
  3471     12FC  2AEE               	goto	l3495
  3472     12FD                     u4620:
  3473     12FD                     l3501:
  3474     12FD  3001               	movlw	1
  3475     12FE                     u4635:
  3476     12FE  1003               	clrc
  3477     12FF  0DA5               	rlf	___lwdiv@quotient,f
  3478     1300  0DA6               	rlf	___lwdiv@quotient+1,f
  3479     1301  3EFF               	addlw	-1
  3480     1302  1D03               	skipz
  3481     1303  2AFE               	goto	u4635
  3482     1304  0821               	movf	___lwdiv@divisor+1,w
  3483     1305  0223               	subwf	___lwdiv@dividend+1,w
  3484     1306  1D03               	skipz
  3485     1307  2B0A               	goto	u4645
  3486     1308  0820               	movf	___lwdiv@divisor,w
  3487     1309  0222               	subwf	___lwdiv@dividend,w
  3488     130A                     u4645:
  3489     130A  1C03               	skipc
  3490     130B  2B0D               	goto	u4641
  3491     130C  2B0E               	goto	u4640
  3492     130D                     u4641:
  3493     130D  2B15               	goto	l3507
  3494     130E                     u4640:
  3495     130E                     l3503:
  3496     130E  0820               	movf	___lwdiv@divisor,w
  3497     130F  02A2               	subwf	___lwdiv@dividend,f
  3498     1310  0821               	movf	___lwdiv@divisor+1,w
  3499     1311  1C03               	skipc
  3500     1312  03A3               	decf	___lwdiv@dividend+1,f
  3501     1313  02A3               	subwf	___lwdiv@dividend+1,f
  3502     1314                     l3505:
  3503     1314  1425               	bsf	___lwdiv@quotient,0
  3504     1315                     l3507:
  3505     1315  3001               	movlw	1
  3506     1316                     u4655:
  3507     1316  1003               	clrc
  3508     1317  0CA1               	rrf	___lwdiv@divisor+1,f
  3509     1318  0CA0               	rrf	___lwdiv@divisor,f
  3510     1319  3EFF               	addlw	-1
  3511     131A  1D03               	skipz
  3512     131B  2B16               	goto	u4655
  3513     131C                     l3509:
  3514     131C  3001               	movlw	1
  3515     131D  02A4               	subwf	___lwdiv@counter,f
  3516     131E  1D03               	btfss	3,2
  3517     131F  2B21               	goto	u4661
  3518     1320  2B22               	goto	u4660
  3519     1321                     u4661:
  3520     1321  2AFD               	goto	l3501
  3521     1322                     u4660:
  3522     1322                     l3511:
  3523     1322  0826               	movf	___lwdiv@quotient+1,w
  3524     1323  00A1               	movwf	?___lwdiv+1
  3525     1324  0825               	movf	___lwdiv@quotient,w
  3526     1325  00A0               	movwf	?___lwdiv
  3527     1326                     l682:
  3528     1326  0008               	return
  3529     1327                     __end_of___lwdiv:
  3530                           
  3531                           	psect	text11
  3532     1198                     __ptext11:	
  3533 ;; *************** function _readEEPROM *****************
  3534 ;; Defined at:
  3535 ;;		line 67 in file "main1.c"
  3536 ;; Parameters:    Size  Location     Type
  3537 ;;  address         2    0[BANK0 ] unsigned int 
  3538 ;; Auto vars:     Size  Location     Type
  3539 ;;		None
  3540 ;; Return value:  Size  Location     Type
  3541 ;;                  2    0[BANK0 ] unsigned int 
  3542 ;; Registers used:
  3543 ;;		wreg
  3544 ;; Tracked objects:
  3545 ;;		On entry : 0/0
  3546 ;;		On exit  : 0/0
  3547 ;;		Unchanged: 0/0
  3548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3549 ;;      Params:         0       2       0       0       0
  3550 ;;      Locals:         0       0       0       0       0
  3551 ;;      Temps:          0       2       0       0       0
  3552 ;;      Totals:         0       4       0       0       0
  3553 ;;Total ram usage:        4 bytes
  3554 ;; Hardware stack levels used: 1
  3555 ;; Hardware stack levels required when called: 2
  3556 ;; This function calls:
  3557 ;;		Nothing
  3558 ;; This function is called by:
  3559 ;;		_main
  3560 ;; This function uses a non-reentrant model
  3561 ;;
  3562                           
  3563     1198                     _readEEPROM:	
  3564                           ;psect for function _readEEPROM
  3565                           
  3566     1198                     l2375:	
  3567                           ;incstack = 0
  3568                           ; Regs used in _readEEPROM: [wreg]
  3569                           
  3570                           
  3571                           ;main1.c: 69:     EEADR = address;
  3572     1198  1283               	bcf	3,5	;RP0=0, select bank0
  3573     1199  1303               	bcf	3,6	;RP1=0, select bank0
  3574     119A  0820               	movf	readEEPROM@address,w
  3575     119B  1283               	bcf	3,5	;RP0=0, select bank2
  3576     119C  1703               	bsf	3,6	;RP1=1, select bank2
  3577     119D  008D               	movwf	13	;volatile
  3578     119E                     l2377:
  3579                           
  3580                           ;main1.c: 70:     RD = 1;
  3581     119E  1683               	bsf	3,5	;RP0=1, select bank3
  3582     119F  1703               	bsf	3,6	;RP1=1, select bank3
  3583     11A0  140C               	bsf	12,0	;volsfr
  3584                           
  3585                           ;main1.c: 71:     return EEDATA;
  3586     11A1  1283               	bcf	3,5	;RP0=0, select bank2
  3587     11A2  1703               	bsf	3,6	;RP1=1, select bank2
  3588     11A3  080C               	movf	12,w	;volatile
  3589     11A4  1283               	bcf	3,5	;RP0=0, select bank0
  3590     11A5  1303               	bcf	3,6	;RP1=0, select bank0
  3591     11A6  00A2               	movwf	??_readEEPROM
  3592     11A7  01A3               	clrf	??_readEEPROM+1
  3593     11A8  0822               	movf	??_readEEPROM,w
  3594     11A9  00A0               	movwf	?_readEEPROM
  3595     11AA  0823               	movf	??_readEEPROM+1,w
  3596     11AB  00A1               	movwf	?_readEEPROM+1
  3597     11AC                     l188:
  3598     11AC  0008               	return
  3599     11AD                     __end_of_readEEPROM:
  3600                           
  3601                           	psect	text12
  3602     1628                     __ptext12:	
  3603 ;; *************** function ___xxtofl *****************
  3604 ;; Defined at:
  3605 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\xxtofl.c"
  3606 ;; Parameters:    Size  Location     Type
  3607 ;;  sign            1    wreg     unsigned char 
  3608 ;;  val             4    0[BANK0 ] long 
  3609 ;; Auto vars:     Size  Location     Type
  3610 ;;  sign            1    8[BANK0 ] unsigned char 
  3611 ;;  arg             4   10[BANK0 ] unsigned long 
  3612 ;;  exp             1    9[BANK0 ] unsigned char 
  3613 ;; Return value:  Size  Location     Type
  3614 ;;                  4    0[BANK0 ] unsigned char 
  3615 ;; Registers used:
  3616 ;;		wreg, status,2, status,0, btemp+1
  3617 ;; Tracked objects:
  3618 ;;		On entry : 0/0
  3619 ;;		On exit  : 0/0
  3620 ;;		Unchanged: 0/0
  3621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3622 ;;      Params:         0       4       0       0       0
  3623 ;;      Locals:         0       6       0       0       0
  3624 ;;      Temps:          0       4       0       0       0
  3625 ;;      Totals:         0      14       0       0       0
  3626 ;;Total ram usage:       14 bytes
  3627 ;; Hardware stack levels used: 1
  3628 ;; Hardware stack levels required when called: 2
  3629 ;; This function calls:
  3630 ;;		Nothing
  3631 ;; This function is called by:
  3632 ;;		_main
  3633 ;; This function uses a non-reentrant model
  3634 ;;
  3635                           
  3636     1628                     ___xxtofl:	
  3637                           ;psect for function ___xxtofl
  3638                           
  3639                           
  3640                           ;incstack = 0
  3641                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  3642                           ;___xxtofl@sign stored from wreg
  3643     1628  1283               	bcf	3,5	;RP0=0, select bank0
  3644     1629  1303               	bcf	3,6	;RP1=0, select bank0
  3645     162A  00A8               	movwf	___xxtofl@sign
  3646     162B                     l2921:
  3647     162B  0828               	movf	___xxtofl@sign,w
  3648     162C  1903               	btfsc	3,2
  3649     162D  2E2F               	goto	u3781
  3650     162E  2E30               	goto	u3780
  3651     162F                     u3781:
  3652     162F  2E44               	goto	l2927
  3653     1630                     u3780:
  3654     1630                     l2923:
  3655     1630  1FA3               	btfss	___xxtofl@val+3,7
  3656     1631  2E33               	goto	u3791
  3657     1632  2E34               	goto	u3790
  3658     1633                     u3791:
  3659     1633  2E44               	goto	l2927
  3660     1634                     u3790:
  3661     1634                     l2925:
  3662     1634  0920               	comf	___xxtofl@val,w
  3663     1635  00AA               	movwf	___xxtofl@arg
  3664     1636  0921               	comf	___xxtofl@val+1,w
  3665     1637  00AB               	movwf	___xxtofl@arg+1
  3666     1638  0922               	comf	___xxtofl@val+2,w
  3667     1639  00AC               	movwf	___xxtofl@arg+2
  3668     163A  0923               	comf	___xxtofl@val+3,w
  3669     163B  00AD               	movwf	___xxtofl@arg+3
  3670     163C  0AAA               	incf	___xxtofl@arg,f
  3671     163D  1903               	skipnz
  3672     163E  0AAB               	incf	___xxtofl@arg+1,f
  3673     163F  1903               	skipnz
  3674     1640  0AAC               	incf	___xxtofl@arg+2,f
  3675     1641  1903               	skipnz
  3676     1642  0AAD               	incf	___xxtofl@arg+3,f
  3677     1643  2E4C               	goto	l843
  3678     1644                     l2927:
  3679     1644  0823               	movf	___xxtofl@val+3,w
  3680     1645  00AD               	movwf	___xxtofl@arg+3
  3681     1646  0822               	movf	___xxtofl@val+2,w
  3682     1647  00AC               	movwf	___xxtofl@arg+2
  3683     1648  0821               	movf	___xxtofl@val+1,w
  3684     1649  00AB               	movwf	___xxtofl@arg+1
  3685     164A  0820               	movf	___xxtofl@val,w
  3686     164B  00AA               	movwf	___xxtofl@arg
  3687     164C                     l843:
  3688     164C  0823               	movf	___xxtofl@val+3,w
  3689     164D  0422               	iorwf	___xxtofl@val+2,w
  3690     164E  0421               	iorwf	___xxtofl@val+1,w
  3691     164F  0420               	iorwf	___xxtofl@val,w
  3692     1650  1D03               	skipz
  3693     1651  2E53               	goto	u3801
  3694     1652  2E54               	goto	u3800
  3695     1653                     u3801:
  3696     1653  2E5D               	goto	l2933
  3697     1654                     u3800:
  3698     1654                     l2929:
  3699     1654  3000               	movlw	0
  3700     1655  00A3               	movwf	?___xxtofl+3
  3701     1656  3000               	movlw	0
  3702     1657  00A2               	movwf	?___xxtofl+2
  3703     1658  3000               	movlw	0
  3704     1659  00A1               	movwf	?___xxtofl+1
  3705     165A  3000               	movlw	0
  3706     165B  00A0               	movwf	?___xxtofl
  3707     165C  2EE1               	goto	l845
  3708     165D                     l2933:
  3709     165D  3096               	movlw	150
  3710     165E  00A9               	movwf	___xxtofl@exp
  3711     165F  2E6D               	goto	l2939
  3712     1660                     l2935:
  3713     1660  3001               	movlw	1
  3714     1661  00FF               	movwf	btemp+1
  3715     1662  087F               	movf	btemp+1,w
  3716     1663  07A9               	addwf	___xxtofl@exp,f
  3717     1664                     l2937:
  3718     1664  3001               	movlw	1
  3719     1665                     u3815:
  3720     1665  1003               	clrc
  3721     1666  0CAD               	rrf	___xxtofl@arg+3,f
  3722     1667  0CAC               	rrf	___xxtofl@arg+2,f
  3723     1668  0CAB               	rrf	___xxtofl@arg+1,f
  3724     1669  0CAA               	rrf	___xxtofl@arg,f
  3725     166A  3EFF               	addlw	-1
  3726     166B  1D03               	skipz
  3727     166C  2E65               	goto	u3815
  3728     166D                     l2939:
  3729     166D  30FE               	movlw	254
  3730     166E  052D               	andwf	___xxtofl@arg+3,w
  3731     166F  1D03               	btfss	3,2
  3732     1670  2E72               	goto	u3821
  3733     1671  2E73               	goto	u3820
  3734     1672                     u3821:
  3735     1672  2E60               	goto	l2935
  3736     1673                     u3820:
  3737     1673  2E8F               	goto	l2947
  3738     1674                     l2941:
  3739     1674  3001               	movlw	1
  3740     1675  00FF               	movwf	btemp+1
  3741     1676  087F               	movf	btemp+1,w
  3742     1677  07A9               	addwf	___xxtofl@exp,f
  3743     1678                     l2943:
  3744     1678  3001               	movlw	1
  3745     1679  07AA               	addwf	___xxtofl@arg,f
  3746     167A  3000               	movlw	0
  3747     167B  1803               	skipnc
  3748     167C  3001               	movlw	1
  3749     167D  07AB               	addwf	___xxtofl@arg+1,f
  3750     167E  3000               	movlw	0
  3751     167F  1803               	skipnc
  3752     1680  3001               	movlw	1
  3753     1681  07AC               	addwf	___xxtofl@arg+2,f
  3754     1682  3000               	movlw	0
  3755     1683  1803               	skipnc
  3756     1684  3001               	movlw	1
  3757     1685  07AD               	addwf	___xxtofl@arg+3,f
  3758     1686                     l2945:
  3759     1686  3001               	movlw	1
  3760     1687                     u3835:
  3761     1687  1003               	clrc
  3762     1688  0CAD               	rrf	___xxtofl@arg+3,f
  3763     1689  0CAC               	rrf	___xxtofl@arg+2,f
  3764     168A  0CAB               	rrf	___xxtofl@arg+1,f
  3765     168B  0CAA               	rrf	___xxtofl@arg,f
  3766     168C  3EFF               	addlw	-1
  3767     168D  1D03               	skipz
  3768     168E  2E87               	goto	u3835
  3769     168F                     l2947:
  3770     168F  30FF               	movlw	255
  3771     1690  052D               	andwf	___xxtofl@arg+3,w
  3772     1691  1D03               	btfss	3,2
  3773     1692  2E94               	goto	u3841
  3774     1693  2E95               	goto	u3840
  3775     1694                     u3841:
  3776     1694  2E74               	goto	l2941
  3777     1695                     u3840:
  3778     1695  2EA1               	goto	l2951
  3779     1696                     l2949:
  3780     1696  3001               	movlw	1
  3781     1697  02A9               	subwf	___xxtofl@exp,f
  3782     1698  3001               	movlw	1
  3783     1699  00A4               	movwf	??___xxtofl
  3784     169A                     u3855:
  3785     169A  1003               	clrc
  3786     169B  0DAA               	rlf	___xxtofl@arg,f
  3787     169C  0DAB               	rlf	___xxtofl@arg+1,f
  3788     169D  0DAC               	rlf	___xxtofl@arg+2,f
  3789     169E  0DAD               	rlf	___xxtofl@arg+3,f
  3790     169F  0BA4               	decfsz	??___xxtofl,f
  3791     16A0  2E9A               	goto	u3855
  3792     16A1                     l2951:
  3793     16A1  1BAC               	btfsc	___xxtofl@arg+2,7
  3794     16A2  2EA4               	goto	u3861
  3795     16A3  2EA5               	goto	u3860
  3796     16A4                     u3861:
  3797     16A4  2EAB               	goto	l856
  3798     16A5                     u3860:
  3799     16A5                     l2953:
  3800     16A5  3002               	movlw	2
  3801     16A6  0229               	subwf	___xxtofl@exp,w
  3802     16A7  1803               	skipnc
  3803     16A8  2EAA               	goto	u3871
  3804     16A9  2EAB               	goto	u3870
  3805     16AA                     u3871:
  3806     16AA  2E96               	goto	l2949
  3807     16AB                     u3870:
  3808     16AB                     l856:
  3809     16AB  1829               	btfsc	___xxtofl@exp,0
  3810     16AC  2EAE               	goto	u3881
  3811     16AD  2EAF               	goto	u3880
  3812     16AE                     u3881:
  3813     16AE  2EB7               	goto	l857
  3814     16AF                     u3880:
  3815     16AF                     l2955:
  3816     16AF  30FF               	movlw	255
  3817     16B0  05AA               	andwf	___xxtofl@arg,f
  3818     16B1  30FF               	movlw	255
  3819     16B2  05AB               	andwf	___xxtofl@arg+1,f
  3820     16B3  307F               	movlw	127
  3821     16B4  05AC               	andwf	___xxtofl@arg+2,f
  3822     16B5  30FF               	movlw	255
  3823     16B6  05AD               	andwf	___xxtofl@arg+3,f
  3824     16B7                     l857:
  3825     16B7  1003               	clrc
  3826     16B8  0CA9               	rrf	___xxtofl@exp,f
  3827     16B9                     l2957:
  3828     16B9  0829               	movf	___xxtofl@exp,w
  3829     16BA  00A4               	movwf	??___xxtofl
  3830     16BB  01A5               	clrf	??___xxtofl+1
  3831     16BC  01A6               	clrf	??___xxtofl+2
  3832     16BD  01A7               	clrf	??___xxtofl+3
  3833     16BE  3018               	movlw	24
  3834     16BF                     u3895:
  3835     16BF  1003               	clrc
  3836     16C0  0DA4               	rlf	??___xxtofl,f
  3837     16C1  0DA5               	rlf	??___xxtofl+1,f
  3838     16C2  0DA6               	rlf	??___xxtofl+2,f
  3839     16C3  0DA7               	rlf	??___xxtofl+3,f
  3840     16C4                     u3890:
  3841     16C4  3EFF               	addlw	-1
  3842     16C5  1D03               	skipz
  3843     16C6  2EBF               	goto	u3895
  3844     16C7  0824               	movf	??___xxtofl,w
  3845     16C8  04AA               	iorwf	___xxtofl@arg,f
  3846     16C9  0825               	movf	??___xxtofl+1,w
  3847     16CA  04AB               	iorwf	___xxtofl@arg+1,f
  3848     16CB  0826               	movf	??___xxtofl+2,w
  3849     16CC  04AC               	iorwf	___xxtofl@arg+2,f
  3850     16CD  0827               	movf	??___xxtofl+3,w
  3851     16CE  04AD               	iorwf	___xxtofl@arg+3,f
  3852     16CF                     l2959:
  3853     16CF  0828               	movf	___xxtofl@sign,w
  3854     16D0  1903               	btfsc	3,2
  3855     16D1  2ED3               	goto	u3901
  3856     16D2  2ED4               	goto	u3900
  3857     16D3                     u3901:
  3858     16D3  2ED9               	goto	l2965
  3859     16D4                     u3900:
  3860     16D4                     l2961:
  3861     16D4  1FA3               	btfss	___xxtofl@val+3,7
  3862     16D5  2ED7               	goto	u3911
  3863     16D6  2ED8               	goto	u3910
  3864     16D7                     u3911:
  3865     16D7  2ED9               	goto	l2965
  3866     16D8                     u3910:
  3867     16D8                     l2963:
  3868     16D8  17AD               	bsf	___xxtofl@arg+3,7
  3869     16D9                     l2965:
  3870     16D9  082D               	movf	___xxtofl@arg+3,w
  3871     16DA  00A3               	movwf	?___xxtofl+3
  3872     16DB  082C               	movf	___xxtofl@arg+2,w
  3873     16DC  00A2               	movwf	?___xxtofl+2
  3874     16DD  082B               	movf	___xxtofl@arg+1,w
  3875     16DE  00A1               	movwf	?___xxtofl+1
  3876     16DF  082A               	movf	___xxtofl@arg,w
  3877     16E0  00A0               	movwf	?___xxtofl
  3878     16E1                     l845:
  3879     16E1  0008               	return
  3880     16E2                     __end_of___xxtofl:
  3881                           
  3882                           	psect	text13
  3883     15B0                     __ptext13:	
  3884 ;; *************** function ___fltol *****************
  3885 ;; Defined at:
  3886 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fltol.c"
  3887 ;; Parameters:    Size  Location     Type
  3888 ;;  f1              4    0[BANK0 ] unsigned char 
  3889 ;; Auto vars:     Size  Location     Type
  3890 ;;  exp1            1    9[BANK0 ] unsigned char 
  3891 ;;  sign1           1    8[BANK0 ] unsigned char 
  3892 ;; Return value:  Size  Location     Type
  3893 ;;                  4    0[BANK0 ] long 
  3894 ;; Registers used:
  3895 ;;		wreg, status,2, status,0, btemp+1
  3896 ;; Tracked objects:
  3897 ;;		On entry : 0/0
  3898 ;;		On exit  : 0/0
  3899 ;;		Unchanged: 0/0
  3900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3901 ;;      Params:         0       4       0       0       0
  3902 ;;      Locals:         0       2       0       0       0
  3903 ;;      Temps:          0       4       0       0       0
  3904 ;;      Totals:         0      10       0       0       0
  3905 ;;Total ram usage:       10 bytes
  3906 ;; Hardware stack levels used: 1
  3907 ;; Hardware stack levels required when called: 2
  3908 ;; This function calls:
  3909 ;;		Nothing
  3910 ;; This function is called by:
  3911 ;;		_main
  3912 ;; This function uses a non-reentrant model
  3913 ;;
  3914                           
  3915     15B0                     ___fltol:	
  3916                           ;psect for function ___fltol
  3917                           
  3918     15B0                     l2595:	
  3919                           ;incstack = 0
  3920                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  3921                           
  3922     15B0  1003               	clrc
  3923     15B1  1283               	bcf	3,5	;RP0=0, select bank0
  3924     15B2  1303               	bcf	3,6	;RP1=0, select bank0
  3925     15B3  0D22               	rlf	___fltol@f1+2,w
  3926     15B4  0D23               	rlf	___fltol@f1+3,w
  3927     15B5  00A9               	movwf	___fltol@exp1
  3928     15B6  0829               	movf	___fltol@exp1,w
  3929     15B7  1D03               	btfss	3,2
  3930     15B8  2DBA               	goto	u3021
  3931     15B9  2DBB               	goto	u3020
  3932     15BA                     u3021:
  3933     15BA  2DC4               	goto	l2601
  3934     15BB                     u3020:
  3935     15BB                     l2597:
  3936     15BB  3000               	movlw	0
  3937     15BC  00A3               	movwf	?___fltol+3
  3938     15BD  3000               	movlw	0
  3939     15BE  00A2               	movwf	?___fltol+2
  3940     15BF  3000               	movlw	0
  3941     15C0  00A1               	movwf	?___fltol+1
  3942     15C1  3000               	movlw	0
  3943     15C2  00A0               	movwf	?___fltol
  3944     15C3  2E27               	goto	l596
  3945     15C4                     l2601:
  3946     15C4  0820               	movf	___fltol@f1,w
  3947     15C5  00A4               	movwf	??___fltol
  3948     15C6  0821               	movf	___fltol@f1+1,w
  3949     15C7  00A5               	movwf	??___fltol+1
  3950     15C8  0822               	movf	___fltol@f1+2,w
  3951     15C9  00A6               	movwf	??___fltol+2
  3952     15CA  0823               	movf	___fltol@f1+3,w
  3953     15CB  00A7               	movwf	??___fltol+3
  3954     15CC  301F               	movlw	31
  3955     15CD                     u3035:
  3956     15CD  1003               	clrc
  3957     15CE  0CA7               	rrf	??___fltol+3,f
  3958     15CF  0CA6               	rrf	??___fltol+2,f
  3959     15D0  0CA5               	rrf	??___fltol+1,f
  3960     15D1  0CA4               	rrf	??___fltol,f
  3961     15D2                     u3030:
  3962     15D2  3EFF               	addlw	-1
  3963     15D3  1D03               	skipz
  3964     15D4  2DCD               	goto	u3035
  3965     15D5  0824               	movf	??___fltol,w
  3966     15D6  00A8               	movwf	___fltol@sign1
  3967     15D7                     l2603:
  3968     15D7  17A2               	bsf	___fltol@f1+2,7
  3969     15D8                     l2605:
  3970     15D8  30FF               	movlw	255
  3971     15D9  05A0               	andwf	___fltol@f1,f
  3972     15DA  30FF               	movlw	255
  3973     15DB  05A1               	andwf	___fltol@f1+1,f
  3974     15DC  30FF               	movlw	255
  3975     15DD  05A2               	andwf	___fltol@f1+2,f
  3976     15DE  3000               	movlw	0
  3977     15DF  05A3               	andwf	___fltol@f1+3,f
  3978     15E0                     l2607:
  3979     15E0  3096               	movlw	150
  3980     15E1  02A9               	subwf	___fltol@exp1,f
  3981     15E2                     l2609:
  3982     15E2  1FA9               	btfss	___fltol@exp1,7
  3983     15E3  2DE5               	goto	u3041
  3984     15E4  2DE6               	goto	u3040
  3985     15E5                     u3041:
  3986     15E5  2E00               	goto	l2621
  3987     15E6                     u3040:
  3988     15E6                     l2611:
  3989     15E6  0829               	movf	___fltol@exp1,w
  3990     15E7  3A80               	xorlw	128
  3991     15E8  3E97               	addlw	151
  3992     15E9  1803               	skipnc
  3993     15EA  2DEC               	goto	u3051
  3994     15EB  2DED               	goto	u3050
  3995     15EC                     u3051:
  3996     15EC  2DEE               	goto	l2617
  3997     15ED                     u3050:
  3998     15ED  2DBB               	goto	l2597
  3999     15EE                     l2617:
  4000     15EE  3001               	movlw	1
  4001     15EF                     u3065:
  4002     15EF  1003               	clrc
  4003     15F0  0CA3               	rrf	___fltol@f1+3,f
  4004     15F1  0CA2               	rrf	___fltol@f1+2,f
  4005     15F2  0CA1               	rrf	___fltol@f1+1,f
  4006     15F3  0CA0               	rrf	___fltol@f1,f
  4007     15F4  3EFF               	addlw	-1
  4008     15F5  1D03               	skipz
  4009     15F6  2DEF               	goto	u3065
  4010     15F7                     l2619:
  4011     15F7  3001               	movlw	1
  4012     15F8  00FF               	movwf	btemp+1
  4013     15F9  087F               	movf	btemp+1,w
  4014     15FA  07A9               	addwf	___fltol@exp1,f
  4015     15FB  1D03               	btfss	3,2
  4016     15FC  2DFE               	goto	u3071
  4017     15FD  2DFF               	goto	u3070
  4018     15FE                     u3071:
  4019     15FE  2DEE               	goto	l2617
  4020     15FF                     u3070:
  4021     15FF  2E17               	goto	l2629
  4022     1600                     l2621:
  4023     1600  3020               	movlw	32
  4024     1601  0229               	subwf	___fltol@exp1,w
  4025     1602  1C03               	skipc
  4026     1603  2E05               	goto	u3081
  4027     1604  2E06               	goto	u3080
  4028     1605                     u3081:
  4029     1605  2E12               	goto	l603
  4030     1606                     u3080:
  4031     1606  2DBB               	goto	l2597
  4032     1607                     l2627:
  4033     1607  3001               	movlw	1
  4034     1608  00A4               	movwf	??___fltol
  4035     1609                     u3095:
  4036     1609  1003               	clrc
  4037     160A  0DA0               	rlf	___fltol@f1,f
  4038     160B  0DA1               	rlf	___fltol@f1+1,f
  4039     160C  0DA2               	rlf	___fltol@f1+2,f
  4040     160D  0DA3               	rlf	___fltol@f1+3,f
  4041     160E  0BA4               	decfsz	??___fltol,f
  4042     160F  2E09               	goto	u3095
  4043     1610  3001               	movlw	1
  4044     1611  02A9               	subwf	___fltol@exp1,f
  4045     1612                     l603:
  4046     1612  0829               	movf	___fltol@exp1,w
  4047     1613  1D03               	btfss	3,2
  4048     1614  2E16               	goto	u3101
  4049     1615  2E17               	goto	u3100
  4050     1616                     u3101:
  4051     1616  2E07               	goto	l2627
  4052     1617                     u3100:
  4053     1617                     l2629:
  4054     1617  0828               	movf	___fltol@sign1,w
  4055     1618  1903               	btfsc	3,2
  4056     1619  2E1B               	goto	u3111
  4057     161A  2E1C               	goto	u3110
  4058     161B                     u3111:
  4059     161B  2E27               	goto	l606
  4060     161C                     u3110:
  4061     161C                     l2631:
  4062     161C  09A0               	comf	___fltol@f1,f
  4063     161D  09A1               	comf	___fltol@f1+1,f
  4064     161E  09A2               	comf	___fltol@f1+2,f
  4065     161F  09A3               	comf	___fltol@f1+3,f
  4066     1620  0AA0               	incf	___fltol@f1,f
  4067     1621  1903               	skipnz
  4068     1622  0AA1               	incf	___fltol@f1+1,f
  4069     1623  1903               	skipnz
  4070     1624  0AA2               	incf	___fltol@f1+2,f
  4071     1625  1903               	skipnz
  4072     1626  0AA3               	incf	___fltol@f1+3,f
  4073     1627                     l606:
  4074     1627                     l596:
  4075     1627  0008               	return
  4076     1628                     __end_of___fltol:
  4077                           
  4078                           	psect	text14
  4079     0CBB                     __ptext14:	
  4080 ;; *************** function ___flmul *****************
  4081 ;; Defined at:
  4082 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcmul.c"
  4083 ;; Parameters:    Size  Location     Type
  4084 ;;  b               4   26[BANK0 ] long 
  4085 ;;  a               4   30[BANK0 ] long 
  4086 ;; Auto vars:     Size  Location     Type
  4087 ;;  prod            4   46[BANK0 ] struct .
  4088 ;;  grs             4   40[BANK0 ] unsigned long 
  4089 ;;  temp            2   50[BANK0 ] struct .
  4090 ;;  bexp            1   45[BANK0 ] unsigned char 
  4091 ;;  aexp            1   44[BANK0 ] unsigned char 
  4092 ;;  sign            1   39[BANK0 ] unsigned char 
  4093 ;; Return value:  Size  Location     Type
  4094 ;;                  4   26[BANK0 ] unsigned char 
  4095 ;; Registers used:
  4096 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4097 ;; Tracked objects:
  4098 ;;		On entry : 0/0
  4099 ;;		On exit  : 0/0
  4100 ;;		Unchanged: 0/0
  4101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4102 ;;      Params:         0       8       0       0       0
  4103 ;;      Locals:         0      13       0       0       0
  4104 ;;      Temps:          0       5       0       0       0
  4105 ;;      Totals:         0      26       0       0       0
  4106 ;;Total ram usage:       26 bytes
  4107 ;; Hardware stack levels used: 1
  4108 ;; Hardware stack levels required when called: 3
  4109 ;; This function calls:
  4110 ;;		__Umul8_16
  4111 ;; This function is called by:
  4112 ;;		_main
  4113 ;; This function uses a non-reentrant model
  4114 ;;
  4115                           
  4116     0CBB                     ___flmul:	
  4117                           ;psect for function ___flmul
  4118                           
  4119     0CBB                     l2779:	
  4120                           ;incstack = 0
  4121                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4122                           
  4123     0CBB  1283               	bcf	3,5	;RP0=0, select bank0
  4124     0CBC  1303               	bcf	3,6	;RP1=0, select bank0
  4125     0CBD  083D               	movf	___flmul@b+3,w
  4126     0CBE  3980               	andlw	128
  4127     0CBF  00C7               	movwf	___flmul@sign
  4128     0CC0                     l2781:
  4129     0CC0  083D               	movf	___flmul@b+3,w
  4130     0CC1  00C2               	movwf	??___flmul
  4131     0CC2  0742               	addwf	??___flmul,w
  4132     0CC3  00CD               	movwf	___flmul@bexp
  4133     0CC4                     l2783:
  4134     0CC4  1FBC               	btfss	___flmul@b+2,7
  4135     0CC5  2CC7               	goto	u3411
  4136     0CC6  2CC8               	goto	u3410
  4137     0CC7                     u3411:
  4138     0CC7  2CC9               	goto	l2787
  4139     0CC8                     u3410:
  4140     0CC8                     l2785:
  4141     0CC8  144D               	bsf	___flmul@bexp,0
  4142     0CC9                     l2787:
  4143     0CC9  084D               	movf	___flmul@bexp,w
  4144     0CCA  1903               	btfsc	3,2
  4145     0CCB  2CCD               	goto	u3421
  4146     0CCC  2CCE               	goto	u3420
  4147     0CCD                     u3421:
  4148     0CCD  2CDD               	goto	l2795
  4149     0CCE                     u3420:
  4150     0CCE                     l2789:
  4151     0CCE  0A4D               	incf	___flmul@bexp,w
  4152     0CCF  1D03               	btfss	3,2
  4153     0CD0  2CD2               	goto	u3431
  4154     0CD1  2CD3               	goto	u3430
  4155     0CD2                     u3431:
  4156     0CD2  2CDB               	goto	l2793
  4157     0CD3                     u3430:
  4158     0CD3                     l2791:
  4159     0CD3  3000               	movlw	0
  4160     0CD4  00BD               	movwf	___flmul@b+3
  4161     0CD5  3000               	movlw	0
  4162     0CD6  00BC               	movwf	___flmul@b+2
  4163     0CD7  3000               	movlw	0
  4164     0CD8  00BB               	movwf	___flmul@b+1
  4165     0CD9  3000               	movlw	0
  4166     0CDA  00BA               	movwf	___flmul@b
  4167     0CDB                     l2793:
  4168     0CDB  17BC               	bsf	___flmul@b+2,7
  4169     0CDC  2CE5               	goto	l2797
  4170     0CDD                     l2795:
  4171     0CDD  3000               	movlw	0
  4172     0CDE  00BD               	movwf	___flmul@b+3
  4173     0CDF  3000               	movlw	0
  4174     0CE0  00BC               	movwf	___flmul@b+2
  4175     0CE1  3000               	movlw	0
  4176     0CE2  00BB               	movwf	___flmul@b+1
  4177     0CE3  3000               	movlw	0
  4178     0CE4  00BA               	movwf	___flmul@b
  4179     0CE5                     l2797:
  4180     0CE5  0841               	movf	___flmul@a+3,w
  4181     0CE6  3980               	andlw	128
  4182     0CE7  00FF               	movwf	btemp+1
  4183     0CE8  087F               	movf	btemp+1,w
  4184     0CE9  06C7               	xorwf	___flmul@sign,f
  4185     0CEA                     l2799:
  4186     0CEA  0841               	movf	___flmul@a+3,w
  4187     0CEB  00C2               	movwf	??___flmul
  4188     0CEC  0742               	addwf	??___flmul,w
  4189     0CED  00CC               	movwf	___flmul@aexp
  4190     0CEE                     l2801:
  4191     0CEE  1FC0               	btfss	___flmul@a+2,7
  4192     0CEF  2CF1               	goto	u3441
  4193     0CF0  2CF2               	goto	u3440
  4194     0CF1                     u3441:
  4195     0CF1  2CF3               	goto	l2805
  4196     0CF2                     u3440:
  4197     0CF2                     l2803:
  4198     0CF2  144C               	bsf	___flmul@aexp,0
  4199     0CF3                     l2805:
  4200     0CF3  084C               	movf	___flmul@aexp,w
  4201     0CF4  1903               	btfsc	3,2
  4202     0CF5  2CF7               	goto	u3451
  4203     0CF6  2CF8               	goto	u3450
  4204     0CF7                     u3451:
  4205     0CF7  2D07               	goto	l2813
  4206     0CF8                     u3450:
  4207     0CF8                     l2807:
  4208     0CF8  0A4C               	incf	___flmul@aexp,w
  4209     0CF9  1D03               	btfss	3,2
  4210     0CFA  2CFC               	goto	u3461
  4211     0CFB  2CFD               	goto	u3460
  4212     0CFC                     u3461:
  4213     0CFC  2D05               	goto	l2811
  4214     0CFD                     u3460:
  4215     0CFD                     l2809:
  4216     0CFD  3000               	movlw	0
  4217     0CFE  00C1               	movwf	___flmul@a+3
  4218     0CFF  3000               	movlw	0
  4219     0D00  00C0               	movwf	___flmul@a+2
  4220     0D01  3000               	movlw	0
  4221     0D02  00BF               	movwf	___flmul@a+1
  4222     0D03  3000               	movlw	0
  4223     0D04  00BE               	movwf	___flmul@a
  4224     0D05                     l2811:
  4225     0D05  17C0               	bsf	___flmul@a+2,7
  4226     0D06  2D0F               	goto	l2815
  4227     0D07                     l2813:
  4228     0D07  3000               	movlw	0
  4229     0D08  00C1               	movwf	___flmul@a+3
  4230     0D09  3000               	movlw	0
  4231     0D0A  00C0               	movwf	___flmul@a+2
  4232     0D0B  3000               	movlw	0
  4233     0D0C  00BF               	movwf	___flmul@a+1
  4234     0D0D  3000               	movlw	0
  4235     0D0E  00BE               	movwf	___flmul@a
  4236     0D0F                     l2815:
  4237     0D0F  084C               	movf	___flmul@aexp,w
  4238     0D10  1903               	btfsc	3,2
  4239     0D11  2D13               	goto	u3471
  4240     0D12  2D14               	goto	u3470
  4241     0D13                     u3471:
  4242     0D13  2D19               	goto	l2819
  4243     0D14                     u3470:
  4244     0D14                     l2817:
  4245     0D14  084D               	movf	___flmul@bexp,w
  4246     0D15  1D03               	btfss	3,2
  4247     0D16  2D18               	goto	u3481
  4248     0D17  2D19               	goto	u3480
  4249     0D18                     u3481:
  4250     0D18  2D22               	goto	l2823
  4251     0D19                     u3480:
  4252     0D19                     l2819:
  4253     0D19  3000               	movlw	0
  4254     0D1A  00BD               	movwf	?___flmul+3
  4255     0D1B  3000               	movlw	0
  4256     0D1C  00BC               	movwf	?___flmul+2
  4257     0D1D  3000               	movlw	0
  4258     0D1E  00BB               	movwf	?___flmul+1
  4259     0D1F  3000               	movlw	0
  4260     0D20  00BA               	movwf	?___flmul
  4261     0D21  2FFF               	goto	l799
  4262     0D22                     l2823:
  4263     0D22  083A               	movf	___flmul@b,w
  4264     0D23  00A0               	movwf	__Umul8_16@multiplicand
  4265     0D24  0840               	movf	___flmul@a+2,w
  4266     0D25  120A  158A  2004  120A  158A  	fcall	__Umul8_16
  4267     0D2A  1283               	bcf	3,5	;RP0=0, select bank0
  4268     0D2B  1303               	bcf	3,6	;RP1=0, select bank0
  4269     0D2C  0821               	movf	?__Umul8_16+1,w
  4270     0D2D  00D3               	movwf	___flmul@temp+1
  4271     0D2E  0820               	movf	?__Umul8_16,w
  4272     0D2F  00D2               	movwf	___flmul@temp
  4273     0D30                     l2825:
  4274     0D30  0852               	movf	___flmul@temp,w
  4275     0D31  00C2               	movwf	??___flmul
  4276     0D32  01C3               	clrf	??___flmul+1
  4277     0D33  01C4               	clrf	??___flmul+2
  4278     0D34  01C5               	clrf	??___flmul+3
  4279     0D35  0845               	movf	??___flmul+3,w
  4280     0D36  00CB               	movwf	___flmul@grs+3
  4281     0D37  0844               	movf	??___flmul+2,w
  4282     0D38  00CA               	movwf	___flmul@grs+2
  4283     0D39  0843               	movf	??___flmul+1,w
  4284     0D3A  00C9               	movwf	___flmul@grs+1
  4285     0D3B  0842               	movf	??___flmul,w
  4286     0D3C  00C8               	movwf	___flmul@grs
  4287     0D3D                     l2827:
  4288     0D3D  0853               	movf	___flmul@temp+1,w
  4289     0D3E  00C2               	movwf	??___flmul
  4290     0D3F  01C3               	clrf	??___flmul+1
  4291     0D40  01C4               	clrf	??___flmul+2
  4292     0D41  01C5               	clrf	??___flmul+3
  4293     0D42  0845               	movf	??___flmul+3,w
  4294     0D43  00D1               	movwf	___flmul@prod+3
  4295     0D44  0844               	movf	??___flmul+2,w
  4296     0D45  00D0               	movwf	___flmul@prod+2
  4297     0D46  0843               	movf	??___flmul+1,w
  4298     0D47  00CF               	movwf	___flmul@prod+1
  4299     0D48  0842               	movf	??___flmul,w
  4300     0D49  00CE               	movwf	___flmul@prod
  4301     0D4A  083B               	movf	___flmul@b+1,w
  4302     0D4B  00A0               	movwf	__Umul8_16@multiplicand
  4303     0D4C  083F               	movf	___flmul@a+1,w
  4304     0D4D  120A  158A  2004  120A  158A  	fcall	__Umul8_16
  4305     0D52  1283               	bcf	3,5	;RP0=0, select bank0
  4306     0D53  1303               	bcf	3,6	;RP1=0, select bank0
  4307     0D54  0821               	movf	?__Umul8_16+1,w
  4308     0D55  00D3               	movwf	___flmul@temp+1
  4309     0D56  0820               	movf	?__Umul8_16,w
  4310     0D57  00D2               	movwf	___flmul@temp
  4311     0D58                     l2829:
  4312     0D58  0852               	movf	___flmul@temp,w
  4313     0D59  00C2               	movwf	??___flmul
  4314     0D5A  01C3               	clrf	??___flmul+1
  4315     0D5B  01C4               	clrf	??___flmul+2
  4316     0D5C  01C5               	clrf	??___flmul+3
  4317     0D5D  0842               	movf	??___flmul,w
  4318     0D5E  07C8               	addwf	___flmul@grs,f
  4319     0D5F  0843               	movf	??___flmul+1,w
  4320     0D60  1103               	clrz
  4321     0D61  1803               	skipnc
  4322     0D62  3E01               	addlw	1
  4323     0D63  1903               	skipnz
  4324     0D64  2D66               	goto	u3491
  4325     0D65  07C9               	addwf	___flmul@grs+1,f
  4326     0D66                     u3491:
  4327     0D66  0844               	movf	??___flmul+2,w
  4328     0D67  1103               	clrz
  4329     0D68  1803               	skipnc
  4330     0D69  3E01               	addlw	1
  4331     0D6A  1903               	skipnz
  4332     0D6B  2D6D               	goto	u3492
  4333     0D6C  07CA               	addwf	___flmul@grs+2,f
  4334     0D6D                     u3492:
  4335     0D6D  0845               	movf	??___flmul+3,w
  4336     0D6E  1103               	clrz
  4337     0D6F  1803               	skipnc
  4338     0D70  3E01               	addlw	1
  4339     0D71  1903               	skipnz
  4340     0D72  2D74               	goto	u3493
  4341     0D73  07CB               	addwf	___flmul@grs+3,f
  4342     0D74                     u3493:
  4343     0D74                     l2831:
  4344     0D74  0853               	movf	___flmul@temp+1,w
  4345     0D75  00C2               	movwf	??___flmul
  4346     0D76  01C3               	clrf	??___flmul+1
  4347     0D77  01C4               	clrf	??___flmul+2
  4348     0D78  01C5               	clrf	??___flmul+3
  4349     0D79  0842               	movf	??___flmul,w
  4350     0D7A  07CE               	addwf	___flmul@prod,f
  4351     0D7B  0843               	movf	??___flmul+1,w
  4352     0D7C  1103               	clrz
  4353     0D7D  1803               	skipnc
  4354     0D7E  3E01               	addlw	1
  4355     0D7F  1903               	skipnz
  4356     0D80  2D82               	goto	u3501
  4357     0D81  07CF               	addwf	___flmul@prod+1,f
  4358     0D82                     u3501:
  4359     0D82  0844               	movf	??___flmul+2,w
  4360     0D83  1103               	clrz
  4361     0D84  1803               	skipnc
  4362     0D85  3E01               	addlw	1
  4363     0D86  1903               	skipnz
  4364     0D87  2D89               	goto	u3502
  4365     0D88  07D0               	addwf	___flmul@prod+2,f
  4366     0D89                     u3502:
  4367     0D89  0845               	movf	??___flmul+3,w
  4368     0D8A  1103               	clrz
  4369     0D8B  1803               	skipnc
  4370     0D8C  3E01               	addlw	1
  4371     0D8D  1903               	skipnz
  4372     0D8E  2D90               	goto	u3503
  4373     0D8F  07D1               	addwf	___flmul@prod+3,f
  4374     0D90                     u3503:
  4375     0D90  083C               	movf	___flmul@b+2,w
  4376     0D91  00A0               	movwf	__Umul8_16@multiplicand
  4377     0D92  083E               	movf	___flmul@a,w
  4378     0D93  120A  158A  2004  120A  158A  	fcall	__Umul8_16
  4379     0D98  1283               	bcf	3,5	;RP0=0, select bank0
  4380     0D99  1303               	bcf	3,6	;RP1=0, select bank0
  4381     0D9A  0821               	movf	?__Umul8_16+1,w
  4382     0D9B  00D3               	movwf	___flmul@temp+1
  4383     0D9C  0820               	movf	?__Umul8_16,w
  4384     0D9D  00D2               	movwf	___flmul@temp
  4385     0D9E                     l2833:
  4386     0D9E  0852               	movf	___flmul@temp,w
  4387     0D9F  00C2               	movwf	??___flmul
  4388     0DA0  01C3               	clrf	??___flmul+1
  4389     0DA1  01C4               	clrf	??___flmul+2
  4390     0DA2  01C5               	clrf	??___flmul+3
  4391     0DA3  0842               	movf	??___flmul,w
  4392     0DA4  07C8               	addwf	___flmul@grs,f
  4393     0DA5  0843               	movf	??___flmul+1,w
  4394     0DA6  1103               	clrz
  4395     0DA7  1803               	skipnc
  4396     0DA8  3E01               	addlw	1
  4397     0DA9  1903               	skipnz
  4398     0DAA  2DAC               	goto	u3511
  4399     0DAB  07C9               	addwf	___flmul@grs+1,f
  4400     0DAC                     u3511:
  4401     0DAC  0844               	movf	??___flmul+2,w
  4402     0DAD  1103               	clrz
  4403     0DAE  1803               	skipnc
  4404     0DAF  3E01               	addlw	1
  4405     0DB0  1903               	skipnz
  4406     0DB1  2DB3               	goto	u3512
  4407     0DB2  07CA               	addwf	___flmul@grs+2,f
  4408     0DB3                     u3512:
  4409     0DB3  0845               	movf	??___flmul+3,w
  4410     0DB4  1103               	clrz
  4411     0DB5  1803               	skipnc
  4412     0DB6  3E01               	addlw	1
  4413     0DB7  1903               	skipnz
  4414     0DB8  2DBA               	goto	u3513
  4415     0DB9  07CB               	addwf	___flmul@grs+3,f
  4416     0DBA                     u3513:
  4417     0DBA                     l2835:
  4418     0DBA  0853               	movf	___flmul@temp+1,w
  4419     0DBB  00C2               	movwf	??___flmul
  4420     0DBC  01C3               	clrf	??___flmul+1
  4421     0DBD  01C4               	clrf	??___flmul+2
  4422     0DBE  01C5               	clrf	??___flmul+3
  4423     0DBF  0842               	movf	??___flmul,w
  4424     0DC0  07CE               	addwf	___flmul@prod,f
  4425     0DC1  0843               	movf	??___flmul+1,w
  4426     0DC2  1103               	clrz
  4427     0DC3  1803               	skipnc
  4428     0DC4  3E01               	addlw	1
  4429     0DC5  1903               	skipnz
  4430     0DC6  2DC8               	goto	u3521
  4431     0DC7  07CF               	addwf	___flmul@prod+1,f
  4432     0DC8                     u3521:
  4433     0DC8  0844               	movf	??___flmul+2,w
  4434     0DC9  1103               	clrz
  4435     0DCA  1803               	skipnc
  4436     0DCB  3E01               	addlw	1
  4437     0DCC  1903               	skipnz
  4438     0DCD  2DCF               	goto	u3522
  4439     0DCE  07D0               	addwf	___flmul@prod+2,f
  4440     0DCF                     u3522:
  4441     0DCF  0845               	movf	??___flmul+3,w
  4442     0DD0  1103               	clrz
  4443     0DD1  1803               	skipnc
  4444     0DD2  3E01               	addlw	1
  4445     0DD3  1903               	skipnz
  4446     0DD4  2DD6               	goto	u3523
  4447     0DD5  07D1               	addwf	___flmul@prod+3,f
  4448     0DD6                     u3523:
  4449     0DD6                     l2837:
  4450     0DD6  3008               	movlw	8
  4451     0DD7  00C2               	movwf	??___flmul
  4452     0DD8                     u3535:
  4453     0DD8  1003               	clrc
  4454     0DD9  0DC8               	rlf	___flmul@grs,f
  4455     0DDA  0DC9               	rlf	___flmul@grs+1,f
  4456     0DDB  0DCA               	rlf	___flmul@grs+2,f
  4457     0DDC  0DCB               	rlf	___flmul@grs+3,f
  4458     0DDD  0BC2               	decfsz	??___flmul,f
  4459     0DDE  2DD8               	goto	u3535
  4460     0DDF                     l2839:
  4461     0DDF  083B               	movf	___flmul@b+1,w
  4462     0DE0  00A0               	movwf	__Umul8_16@multiplicand
  4463     0DE1  083E               	movf	___flmul@a,w
  4464     0DE2  120A  158A  2004  120A  158A  	fcall	__Umul8_16
  4465     0DE7  1283               	bcf	3,5	;RP0=0, select bank0
  4466     0DE8  1303               	bcf	3,6	;RP1=0, select bank0
  4467     0DE9  0821               	movf	?__Umul8_16+1,w
  4468     0DEA  00D3               	movwf	___flmul@temp+1
  4469     0DEB  0820               	movf	?__Umul8_16,w
  4470     0DEC  00D2               	movwf	___flmul@temp
  4471     0DED                     l2841:
  4472     0DED  0852               	movf	___flmul@temp,w
  4473     0DEE  00C2               	movwf	??___flmul
  4474     0DEF  0853               	movf	___flmul@temp+1,w
  4475     0DF0  00C3               	movwf	??___flmul+1
  4476     0DF1  01C4               	clrf	??___flmul+2
  4477     0DF2  01C5               	clrf	??___flmul+3
  4478     0DF3  0842               	movf	??___flmul,w
  4479     0DF4  07C8               	addwf	___flmul@grs,f
  4480     0DF5  0843               	movf	??___flmul+1,w
  4481     0DF6  1103               	clrz
  4482     0DF7  1803               	skipnc
  4483     0DF8  3E01               	addlw	1
  4484     0DF9  1903               	skipnz
  4485     0DFA  2DFC               	goto	u3541
  4486     0DFB  07C9               	addwf	___flmul@grs+1,f
  4487     0DFC                     u3541:
  4488     0DFC  0844               	movf	??___flmul+2,w
  4489     0DFD  1103               	clrz
  4490     0DFE  1803               	skipnc
  4491     0DFF  3E01               	addlw	1
  4492     0E00  1903               	skipnz
  4493     0E01  2E03               	goto	u3542
  4494     0E02  07CA               	addwf	___flmul@grs+2,f
  4495     0E03                     u3542:
  4496     0E03  0845               	movf	??___flmul+3,w
  4497     0E04  1103               	clrz
  4498     0E05  1803               	skipnc
  4499     0E06  3E01               	addlw	1
  4500     0E07  1903               	skipnz
  4501     0E08  2E0A               	goto	u3543
  4502     0E09  07CB               	addwf	___flmul@grs+3,f
  4503     0E0A                     u3543:
  4504     0E0A                     l2843:
  4505     0E0A  083A               	movf	___flmul@b,w
  4506     0E0B  00A0               	movwf	__Umul8_16@multiplicand
  4507     0E0C  083F               	movf	___flmul@a+1,w
  4508     0E0D  120A  158A  2004  120A  158A  	fcall	__Umul8_16
  4509     0E12  1283               	bcf	3,5	;RP0=0, select bank0
  4510     0E13  1303               	bcf	3,6	;RP1=0, select bank0
  4511     0E14  0821               	movf	?__Umul8_16+1,w
  4512     0E15  00D3               	movwf	___flmul@temp+1
  4513     0E16  0820               	movf	?__Umul8_16,w
  4514     0E17  00D2               	movwf	___flmul@temp
  4515     0E18                     l2845:
  4516     0E18  0852               	movf	___flmul@temp,w
  4517     0E19  00C2               	movwf	??___flmul
  4518     0E1A  0853               	movf	___flmul@temp+1,w
  4519     0E1B  00C3               	movwf	??___flmul+1
  4520     0E1C  01C4               	clrf	??___flmul+2
  4521     0E1D  01C5               	clrf	??___flmul+3
  4522     0E1E  0842               	movf	??___flmul,w
  4523     0E1F  07C8               	addwf	___flmul@grs,f
  4524     0E20  0843               	movf	??___flmul+1,w
  4525     0E21  1103               	clrz
  4526     0E22  1803               	skipnc
  4527     0E23  3E01               	addlw	1
  4528     0E24  1903               	skipnz
  4529     0E25  2E27               	goto	u3551
  4530     0E26  07C9               	addwf	___flmul@grs+1,f
  4531     0E27                     u3551:
  4532     0E27  0844               	movf	??___flmul+2,w
  4533     0E28  1103               	clrz
  4534     0E29  1803               	skipnc
  4535     0E2A  3E01               	addlw	1
  4536     0E2B  1903               	skipnz
  4537     0E2C  2E2E               	goto	u3552
  4538     0E2D  07CA               	addwf	___flmul@grs+2,f
  4539     0E2E                     u3552:
  4540     0E2E  0845               	movf	??___flmul+3,w
  4541     0E2F  1103               	clrz
  4542     0E30  1803               	skipnc
  4543     0E31  3E01               	addlw	1
  4544     0E32  1903               	skipnz
  4545     0E33  2E35               	goto	u3553
  4546     0E34  07CB               	addwf	___flmul@grs+3,f
  4547     0E35                     u3553:
  4548     0E35                     l2847:
  4549     0E35  3008               	movlw	8
  4550     0E36  00C2               	movwf	??___flmul
  4551     0E37                     u3565:
  4552     0E37  1003               	clrc
  4553     0E38  0DC8               	rlf	___flmul@grs,f
  4554     0E39  0DC9               	rlf	___flmul@grs+1,f
  4555     0E3A  0DCA               	rlf	___flmul@grs+2,f
  4556     0E3B  0DCB               	rlf	___flmul@grs+3,f
  4557     0E3C  0BC2               	decfsz	??___flmul,f
  4558     0E3D  2E37               	goto	u3565
  4559     0E3E  083A               	movf	___flmul@b,w
  4560     0E3F  00A0               	movwf	__Umul8_16@multiplicand
  4561     0E40  083E               	movf	___flmul@a,w
  4562     0E41  120A  158A  2004  120A  158A  	fcall	__Umul8_16
  4563     0E46  1283               	bcf	3,5	;RP0=0, select bank0
  4564     0E47  1303               	bcf	3,6	;RP1=0, select bank0
  4565     0E48  0821               	movf	?__Umul8_16+1,w
  4566     0E49  00D3               	movwf	___flmul@temp+1
  4567     0E4A  0820               	movf	?__Umul8_16,w
  4568     0E4B  00D2               	movwf	___flmul@temp
  4569     0E4C                     l2849:
  4570     0E4C  0852               	movf	___flmul@temp,w
  4571     0E4D  00C2               	movwf	??___flmul
  4572     0E4E  0853               	movf	___flmul@temp+1,w
  4573     0E4F  00C3               	movwf	??___flmul+1
  4574     0E50  01C4               	clrf	??___flmul+2
  4575     0E51  01C5               	clrf	??___flmul+3
  4576     0E52  0842               	movf	??___flmul,w
  4577     0E53  07C8               	addwf	___flmul@grs,f
  4578     0E54  0843               	movf	??___flmul+1,w
  4579     0E55  1103               	clrz
  4580     0E56  1803               	skipnc
  4581     0E57  3E01               	addlw	1
  4582     0E58  1903               	skipnz
  4583     0E59  2E5B               	goto	u3571
  4584     0E5A  07C9               	addwf	___flmul@grs+1,f
  4585     0E5B                     u3571:
  4586     0E5B  0844               	movf	??___flmul+2,w
  4587     0E5C  1103               	clrz
  4588     0E5D  1803               	skipnc
  4589     0E5E  3E01               	addlw	1
  4590     0E5F  1903               	skipnz
  4591     0E60  2E62               	goto	u3572
  4592     0E61  07CA               	addwf	___flmul@grs+2,f
  4593     0E62                     u3572:
  4594     0E62  0845               	movf	??___flmul+3,w
  4595     0E63  1103               	clrz
  4596     0E64  1803               	skipnc
  4597     0E65  3E01               	addlw	1
  4598     0E66  1903               	skipnz
  4599     0E67  2E69               	goto	u3573
  4600     0E68  07CB               	addwf	___flmul@grs+3,f
  4601     0E69                     u3573:
  4602     0E69                     l2851:
  4603     0E69  083B               	movf	___flmul@b+1,w
  4604     0E6A  00A0               	movwf	__Umul8_16@multiplicand
  4605     0E6B  0840               	movf	___flmul@a+2,w
  4606     0E6C  120A  158A  2004  120A  158A  	fcall	__Umul8_16
  4607     0E71  1283               	bcf	3,5	;RP0=0, select bank0
  4608     0E72  1303               	bcf	3,6	;RP1=0, select bank0
  4609     0E73  0821               	movf	?__Umul8_16+1,w
  4610     0E74  00D3               	movwf	___flmul@temp+1
  4611     0E75  0820               	movf	?__Umul8_16,w
  4612     0E76  00D2               	movwf	___flmul@temp
  4613     0E77  0852               	movf	___flmul@temp,w
  4614     0E78  00C2               	movwf	??___flmul
  4615     0E79  0853               	movf	___flmul@temp+1,w
  4616     0E7A  00C3               	movwf	??___flmul+1
  4617     0E7B  01C4               	clrf	??___flmul+2
  4618     0E7C  01C5               	clrf	??___flmul+3
  4619     0E7D  0842               	movf	??___flmul,w
  4620     0E7E  07CE               	addwf	___flmul@prod,f
  4621     0E7F  0843               	movf	??___flmul+1,w
  4622     0E80  1103               	clrz
  4623     0E81  1803               	skipnc
  4624     0E82  3E01               	addlw	1
  4625     0E83  1903               	skipnz
  4626     0E84  2E86               	goto	u3581
  4627     0E85  07CF               	addwf	___flmul@prod+1,f
  4628     0E86                     u3581:
  4629     0E86  0844               	movf	??___flmul+2,w
  4630     0E87  1103               	clrz
  4631     0E88  1803               	skipnc
  4632     0E89  3E01               	addlw	1
  4633     0E8A  1903               	skipnz
  4634     0E8B  2E8D               	goto	u3582
  4635     0E8C  07D0               	addwf	___flmul@prod+2,f
  4636     0E8D                     u3582:
  4637     0E8D  0845               	movf	??___flmul+3,w
  4638     0E8E  1103               	clrz
  4639     0E8F  1803               	skipnc
  4640     0E90  3E01               	addlw	1
  4641     0E91  1903               	skipnz
  4642     0E92  2E94               	goto	u3583
  4643     0E93  07D1               	addwf	___flmul@prod+3,f
  4644     0E94                     u3583:
  4645     0E94                     l2853:
  4646     0E94  083C               	movf	___flmul@b+2,w
  4647     0E95  00A0               	movwf	__Umul8_16@multiplicand
  4648     0E96  083F               	movf	___flmul@a+1,w
  4649     0E97  120A  158A  2004  120A  158A  	fcall	__Umul8_16
  4650     0E9C  1283               	bcf	3,5	;RP0=0, select bank0
  4651     0E9D  1303               	bcf	3,6	;RP1=0, select bank0
  4652     0E9E  0821               	movf	?__Umul8_16+1,w
  4653     0E9F  00D3               	movwf	___flmul@temp+1
  4654     0EA0  0820               	movf	?__Umul8_16,w
  4655     0EA1  00D2               	movwf	___flmul@temp
  4656     0EA2                     l2855:
  4657     0EA2  0852               	movf	___flmul@temp,w
  4658     0EA3  00C2               	movwf	??___flmul
  4659     0EA4  0853               	movf	___flmul@temp+1,w
  4660     0EA5  00C3               	movwf	??___flmul+1
  4661     0EA6  01C4               	clrf	??___flmul+2
  4662     0EA7  01C5               	clrf	??___flmul+3
  4663     0EA8  0842               	movf	??___flmul,w
  4664     0EA9  07CE               	addwf	___flmul@prod,f
  4665     0EAA  0843               	movf	??___flmul+1,w
  4666     0EAB  1103               	clrz
  4667     0EAC  1803               	skipnc
  4668     0EAD  3E01               	addlw	1
  4669     0EAE  1903               	skipnz
  4670     0EAF  2EB1               	goto	u3591
  4671     0EB0  07CF               	addwf	___flmul@prod+1,f
  4672     0EB1                     u3591:
  4673     0EB1  0844               	movf	??___flmul+2,w
  4674     0EB2  1103               	clrz
  4675     0EB3  1803               	skipnc
  4676     0EB4  3E01               	addlw	1
  4677     0EB5  1903               	skipnz
  4678     0EB6  2EB8               	goto	u3592
  4679     0EB7  07D0               	addwf	___flmul@prod+2,f
  4680     0EB8                     u3592:
  4681     0EB8  0845               	movf	??___flmul+3,w
  4682     0EB9  1103               	clrz
  4683     0EBA  1803               	skipnc
  4684     0EBB  3E01               	addlw	1
  4685     0EBC  1903               	skipnz
  4686     0EBD  2EBF               	goto	u3593
  4687     0EBE  07D1               	addwf	___flmul@prod+3,f
  4688     0EBF                     u3593:
  4689     0EBF  083C               	movf	___flmul@b+2,w
  4690     0EC0  00A0               	movwf	__Umul8_16@multiplicand
  4691     0EC1  0840               	movf	___flmul@a+2,w
  4692     0EC2  120A  158A  2004  120A  158A  	fcall	__Umul8_16
  4693     0EC7  1283               	bcf	3,5	;RP0=0, select bank0
  4694     0EC8  1303               	bcf	3,6	;RP1=0, select bank0
  4695     0EC9  0821               	movf	?__Umul8_16+1,w
  4696     0ECA  00D3               	movwf	___flmul@temp+1
  4697     0ECB  0820               	movf	?__Umul8_16,w
  4698     0ECC  00D2               	movwf	___flmul@temp
  4699     0ECD                     l2857:
  4700     0ECD  0852               	movf	___flmul@temp,w
  4701     0ECE  00C2               	movwf	??___flmul
  4702     0ECF  0853               	movf	___flmul@temp+1,w
  4703     0ED0  00C3               	movwf	??___flmul+1
  4704     0ED1  01C4               	clrf	??___flmul+2
  4705     0ED2  01C5               	clrf	??___flmul+3
  4706     0ED3  3008               	movlw	8
  4707     0ED4                     u3605:
  4708     0ED4  1003               	clrc
  4709     0ED5  0DC2               	rlf	??___flmul,f
  4710     0ED6  0DC3               	rlf	??___flmul+1,f
  4711     0ED7  0DC4               	rlf	??___flmul+2,f
  4712     0ED8  0DC5               	rlf	??___flmul+3,f
  4713     0ED9                     u3600:
  4714     0ED9  3EFF               	addlw	-1
  4715     0EDA  1D03               	skipz
  4716     0EDB  2ED4               	goto	u3605
  4717     0EDC  0842               	movf	??___flmul,w
  4718     0EDD  07CE               	addwf	___flmul@prod,f
  4719     0EDE  0843               	movf	??___flmul+1,w
  4720     0EDF  1103               	clrz
  4721     0EE0  1803               	skipnc
  4722     0EE1  3E01               	addlw	1
  4723     0EE2  1903               	skipnz
  4724     0EE3  2EE5               	goto	u3611
  4725     0EE4  07CF               	addwf	___flmul@prod+1,f
  4726     0EE5                     u3611:
  4727     0EE5  0844               	movf	??___flmul+2,w
  4728     0EE6  1103               	clrz
  4729     0EE7  1803               	skipnc
  4730     0EE8  3E01               	addlw	1
  4731     0EE9  1903               	skipnz
  4732     0EEA  2EEC               	goto	u3612
  4733     0EEB  07D0               	addwf	___flmul@prod+2,f
  4734     0EEC                     u3612:
  4735     0EEC  0845               	movf	??___flmul+3,w
  4736     0EED  1103               	clrz
  4737     0EEE  1803               	skipnc
  4738     0EEF  3E01               	addlw	1
  4739     0EF0  1903               	skipnz
  4740     0EF1  2EF3               	goto	u3613
  4741     0EF2  07D1               	addwf	___flmul@prod+3,f
  4742     0EF3                     u3613:
  4743     0EF3                     l2859:
  4744     0EF3  0848               	movf	___flmul@grs,w
  4745     0EF4  00C2               	movwf	??___flmul
  4746     0EF5  0849               	movf	___flmul@grs+1,w
  4747     0EF6  00C3               	movwf	??___flmul+1
  4748     0EF7  084A               	movf	___flmul@grs+2,w
  4749     0EF8  00C4               	movwf	??___flmul+2
  4750     0EF9  084B               	movf	___flmul@grs+3,w
  4751     0EFA  00C5               	movwf	??___flmul+3
  4752     0EFB  3018               	movlw	24
  4753     0EFC                     u3625:
  4754     0EFC  1003               	clrc
  4755     0EFD  0CC5               	rrf	??___flmul+3,f
  4756     0EFE  0CC4               	rrf	??___flmul+2,f
  4757     0EFF  0CC3               	rrf	??___flmul+1,f
  4758     0F00  0CC2               	rrf	??___flmul,f
  4759     0F01                     u3620:
  4760     0F01  3EFF               	addlw	-1
  4761     0F02  1D03               	skipz
  4762     0F03  2EFC               	goto	u3625
  4763     0F04  0842               	movf	??___flmul,w
  4764     0F05  07CE               	addwf	___flmul@prod,f
  4765     0F06  0843               	movf	??___flmul+1,w
  4766     0F07  1103               	clrz
  4767     0F08  1803               	skipnc
  4768     0F09  3E01               	addlw	1
  4769     0F0A  1903               	skipnz
  4770     0F0B  2F0D               	goto	u3631
  4771     0F0C  07CF               	addwf	___flmul@prod+1,f
  4772     0F0D                     u3631:
  4773     0F0D  0844               	movf	??___flmul+2,w
  4774     0F0E  1103               	clrz
  4775     0F0F  1803               	skipnc
  4776     0F10  3E01               	addlw	1
  4777     0F11  1903               	skipnz
  4778     0F12  2F14               	goto	u3632
  4779     0F13  07D0               	addwf	___flmul@prod+2,f
  4780     0F14                     u3632:
  4781     0F14  0845               	movf	??___flmul+3,w
  4782     0F15  1103               	clrz
  4783     0F16  1803               	skipnc
  4784     0F17  3E01               	addlw	1
  4785     0F18  1903               	skipnz
  4786     0F19  2F1B               	goto	u3633
  4787     0F1A  07D1               	addwf	___flmul@prod+3,f
  4788     0F1B                     u3633:
  4789     0F1B                     l2861:
  4790     0F1B  3008               	movlw	8
  4791     0F1C  00C2               	movwf	??___flmul
  4792     0F1D                     u3645:
  4793     0F1D  1003               	clrc
  4794     0F1E  0DC8               	rlf	___flmul@grs,f
  4795     0F1F  0DC9               	rlf	___flmul@grs+1,f
  4796     0F20  0DCA               	rlf	___flmul@grs+2,f
  4797     0F21  0DCB               	rlf	___flmul@grs+3,f
  4798     0F22  0BC2               	decfsz	??___flmul,f
  4799     0F23  2F1D               	goto	u3645
  4800     0F24                     l2863:
  4801     0F24  084D               	movf	___flmul@bexp,w
  4802     0F25  074C               	addwf	___flmul@aexp,w
  4803     0F26  00C2               	movwf	??___flmul
  4804     0F27  01C3               	clrf	??___flmul+1
  4805     0F28  0DC3               	rlf	??___flmul+1,f
  4806     0F29  0842               	movf	??___flmul,w
  4807     0F2A  3E82               	addlw	130
  4808     0F2B  00D2               	movwf	___flmul@temp
  4809     0F2C  0843               	movf	??___flmul+1,w
  4810     0F2D  1803               	skipnc
  4811     0F2E  3E01               	addlw	1
  4812     0F2F  3EFF               	addlw	255
  4813     0F30  00D3               	movwf	___flmul@temp+1
  4814     0F31  2F4F               	goto	l2875
  4815     0F32                     l2865:
  4816     0F32  3001               	movlw	1
  4817     0F33  00C2               	movwf	??___flmul
  4818     0F34                     u3655:
  4819     0F34  1003               	clrc
  4820     0F35  0DCE               	rlf	___flmul@prod,f
  4821     0F36  0DCF               	rlf	___flmul@prod+1,f
  4822     0F37  0DD0               	rlf	___flmul@prod+2,f
  4823     0F38  0DD1               	rlf	___flmul@prod+3,f
  4824     0F39  0BC2               	decfsz	??___flmul,f
  4825     0F3A  2F34               	goto	u3655
  4826     0F3B                     l2867:
  4827     0F3B  1FCB               	btfss	___flmul@grs+3,7
  4828     0F3C  2F3E               	goto	u3661
  4829     0F3D  2F3F               	goto	u3660
  4830     0F3E                     u3661:
  4831     0F3E  2F40               	goto	l2871
  4832     0F3F                     u3660:
  4833     0F3F                     l2869:
  4834     0F3F  144E               	bsf	___flmul@prod,0
  4835     0F40                     l2871:
  4836     0F40  3001               	movlw	1
  4837     0F41  00C2               	movwf	??___flmul
  4838     0F42                     u3675:
  4839     0F42  1003               	clrc
  4840     0F43  0DC8               	rlf	___flmul@grs,f
  4841     0F44  0DC9               	rlf	___flmul@grs+1,f
  4842     0F45  0DCA               	rlf	___flmul@grs+2,f
  4843     0F46  0DCB               	rlf	___flmul@grs+3,f
  4844     0F47  0BC2               	decfsz	??___flmul,f
  4845     0F48  2F42               	goto	u3675
  4846     0F49                     l2873:
  4847     0F49  30FF               	movlw	255
  4848     0F4A  07D2               	addwf	___flmul@temp,f
  4849     0F4B  1803               	skipnc
  4850     0F4C  0AD3               	incf	___flmul@temp+1,f
  4851     0F4D  30FF               	movlw	255
  4852     0F4E  07D3               	addwf	___flmul@temp+1,f
  4853     0F4F                     l2875:
  4854     0F4F  1FD0               	btfss	___flmul@prod+2,7
  4855     0F50  2F52               	goto	u3681
  4856     0F51  2F53               	goto	u3680
  4857     0F52                     u3681:
  4858     0F52  2F32               	goto	l2865
  4859     0F53                     u3680:
  4860     0F53                     l2877:
  4861     0F53  01CC               	clrf	___flmul@aexp
  4862     0F54                     l2879:
  4863     0F54  1FCB               	btfss	___flmul@grs+3,7
  4864     0F55  2F57               	goto	u3691
  4865     0F56  2F58               	goto	u3690
  4866     0F57                     u3691:
  4867     0F57  2F74               	goto	l2887
  4868     0F58                     u3690:
  4869     0F58                     l2881:
  4870     0F58  30FF               	movlw	255
  4871     0F59  0548               	andwf	___flmul@grs,w
  4872     0F5A  00C2               	movwf	??___flmul
  4873     0F5B  30FF               	movlw	255
  4874     0F5C  0549               	andwf	___flmul@grs+1,w
  4875     0F5D  00C3               	movwf	??___flmul+1
  4876     0F5E  30FF               	movlw	255
  4877     0F5F  054A               	andwf	___flmul@grs+2,w
  4878     0F60  00C4               	movwf	??___flmul+2
  4879     0F61  307F               	movlw	127
  4880     0F62  054B               	andwf	___flmul@grs+3,w
  4881     0F63  00C5               	movwf	??___flmul+3
  4882     0F64  0845               	movf	??___flmul+3,w
  4883     0F65  0444               	iorwf	??___flmul+2,w
  4884     0F66  0443               	iorwf	??___flmul+1,w
  4885     0F67  0442               	iorwf	??___flmul,w
  4886     0F68  1903               	skipnz
  4887     0F69  2F6B               	goto	u3701
  4888     0F6A  2F6C               	goto	u3700
  4889     0F6B                     u3701:
  4890     0F6B  2F6F               	goto	l805
  4891     0F6C                     u3700:
  4892     0F6C                     l2883:
  4893     0F6C  01CC               	clrf	___flmul@aexp
  4894     0F6D  0ACC               	incf	___flmul@aexp,f
  4895     0F6E  2F74               	goto	l2887
  4896     0F6F                     l805:
  4897     0F6F  1C4E               	btfss	___flmul@prod,0
  4898     0F70  2F72               	goto	u3711
  4899     0F71  2F73               	goto	u3710
  4900     0F72                     u3711:
  4901     0F72  2F74               	goto	l2887
  4902     0F73                     u3710:
  4903     0F73  2F6C               	goto	l2883
  4904     0F74                     l2887:
  4905     0F74  084C               	movf	___flmul@aexp,w
  4906     0F75  1903               	btfsc	3,2
  4907     0F76  2F78               	goto	u3721
  4908     0F77  2F79               	goto	u3720
  4909     0F78                     u3721:
  4910     0F78  2FAA               	goto	l2897
  4911     0F79                     u3720:
  4912     0F79                     l2889:
  4913     0F79  3001               	movlw	1
  4914     0F7A  07CE               	addwf	___flmul@prod,f
  4915     0F7B  3000               	movlw	0
  4916     0F7C  1803               	skipnc
  4917     0F7D  3001               	movlw	1
  4918     0F7E  07CF               	addwf	___flmul@prod+1,f
  4919     0F7F  3000               	movlw	0
  4920     0F80  1803               	skipnc
  4921     0F81  3001               	movlw	1
  4922     0F82  07D0               	addwf	___flmul@prod+2,f
  4923     0F83  3000               	movlw	0
  4924     0F84  1803               	skipnc
  4925     0F85  3001               	movlw	1
  4926     0F86  07D1               	addwf	___flmul@prod+3,f
  4927     0F87                     l2891:
  4928     0F87  1C51               	btfss	___flmul@prod+3,0
  4929     0F88  2F8A               	goto	u3731
  4930     0F89  2F8B               	goto	u3730
  4931     0F8A                     u3731:
  4932     0F8A  2FAA               	goto	l2897
  4933     0F8B                     u3730:
  4934     0F8B                     l2893:
  4935     0F8B  084E               	movf	___flmul@prod,w
  4936     0F8C  00C2               	movwf	??___flmul
  4937     0F8D  084F               	movf	___flmul@prod+1,w
  4938     0F8E  00C3               	movwf	??___flmul+1
  4939     0F8F  0850               	movf	___flmul@prod+2,w
  4940     0F90  00C4               	movwf	??___flmul+2
  4941     0F91  0851               	movf	___flmul@prod+3,w
  4942     0F92  00C5               	movwf	??___flmul+3
  4943     0F93  3001               	movlw	1
  4944     0F94  00C6               	movwf	??___flmul+4
  4945     0F95                     u3745:
  4946     0F95  0D45               	rlf	??___flmul+3,w
  4947     0F96  0CC5               	rrf	??___flmul+3,f
  4948     0F97  0CC4               	rrf	??___flmul+2,f
  4949     0F98  0CC3               	rrf	??___flmul+1,f
  4950     0F99  0CC2               	rrf	??___flmul,f
  4951     0F9A                     u3740:
  4952     0F9A  0BC6               	decfsz	??___flmul+4,f
  4953     0F9B  2F95               	goto	u3745
  4954     0F9C  0845               	movf	??___flmul+3,w
  4955     0F9D  00D1               	movwf	___flmul@prod+3
  4956     0F9E  0844               	movf	??___flmul+2,w
  4957     0F9F  00D0               	movwf	___flmul@prod+2
  4958     0FA0  0843               	movf	??___flmul+1,w
  4959     0FA1  00CF               	movwf	___flmul@prod+1
  4960     0FA2  0842               	movf	??___flmul,w
  4961     0FA3  00CE               	movwf	___flmul@prod
  4962     0FA4                     l2895:
  4963     0FA4  3001               	movlw	1
  4964     0FA5  07D2               	addwf	___flmul@temp,f
  4965     0FA6  1803               	skipnc
  4966     0FA7  0AD3               	incf	___flmul@temp+1,f
  4967     0FA8  3000               	movlw	0
  4968     0FA9  07D3               	addwf	___flmul@temp+1,f
  4969     0FAA                     l2897:
  4970     0FAA  0853               	movf	___flmul@temp+1,w
  4971     0FAB  3A80               	xorlw	128
  4972     0FAC  00FF               	movwf	btemp+1
  4973     0FAD  3080               	movlw	128
  4974     0FAE  027F               	subwf	btemp+1,w
  4975     0FAF  1D03               	skipz
  4976     0FB0  2FB3               	goto	u3755
  4977     0FB1  30FF               	movlw	255
  4978     0FB2  0252               	subwf	___flmul@temp,w
  4979     0FB3                     u3755:
  4980     0FB3  1C03               	skipc
  4981     0FB4  2FB6               	goto	u3751
  4982     0FB5  2FB7               	goto	u3750
  4983     0FB6                     u3751:
  4984     0FB6  2FC2               	goto	l2901
  4985     0FB7                     u3750:
  4986     0FB7                     l2899:
  4987     0FB7  307F               	movlw	127
  4988     0FB8  1283               	bcf	3,5	;RP0=0, select bank0
  4989     0FB9  1303               	bcf	3,6	;RP1=0, select bank0
  4990     0FBA  00D1               	movwf	___flmul@prod+3
  4991     0FBB  3080               	movlw	128
  4992     0FBC  00D0               	movwf	___flmul@prod+2
  4993     0FBD  3000               	movlw	0
  4994     0FBE  00CF               	movwf	___flmul@prod+1
  4995     0FBF  3000               	movlw	0
  4996     0FC0  00CE               	movwf	___flmul@prod
  4997     0FC1  2FF3               	goto	l2915
  4998     0FC2                     l2901:
  4999     0FC2  1283               	bcf	3,5	;RP0=0, select bank0
  5000     0FC3  1303               	bcf	3,6	;RP1=0, select bank0
  5001     0FC4  0853               	movf	___flmul@temp+1,w
  5002     0FC5  3A80               	xorlw	128
  5003     0FC6  00FF               	movwf	btemp+1
  5004     0FC7  3080               	movlw	128
  5005     0FC8  027F               	subwf	btemp+1,w
  5006     0FC9  1D03               	skipz
  5007     0FCA  2FCD               	goto	u3765
  5008     0FCB  3001               	movlw	1
  5009     0FCC  0252               	subwf	___flmul@temp,w
  5010     0FCD                     u3765:
  5011     0FCD  1803               	skipnc
  5012     0FCE  2FD0               	goto	u3761
  5013     0FCF  2FD1               	goto	u3760
  5014     0FD0                     u3761:
  5015     0FD0  2FDD               	goto	l2907
  5016     0FD1                     u3760:
  5017     0FD1                     l2903:
  5018     0FD1  3000               	movlw	0
  5019     0FD2  1283               	bcf	3,5	;RP0=0, select bank0
  5020     0FD3  1303               	bcf	3,6	;RP1=0, select bank0
  5021     0FD4  00D1               	movwf	___flmul@prod+3
  5022     0FD5  3000               	movlw	0
  5023     0FD6  00D0               	movwf	___flmul@prod+2
  5024     0FD7  3000               	movlw	0
  5025     0FD8  00CF               	movwf	___flmul@prod+1
  5026     0FD9  3000               	movlw	0
  5027     0FDA  00CE               	movwf	___flmul@prod
  5028     0FDB                     l2905:
  5029     0FDB  01C7               	clrf	___flmul@sign
  5030     0FDC  2FF3               	goto	l2915
  5031     0FDD                     l2907:
  5032     0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  5033     0FDE  1303               	bcf	3,6	;RP1=0, select bank0
  5034     0FDF  0852               	movf	___flmul@temp,w
  5035     0FE0  00CD               	movwf	___flmul@bexp
  5036     0FE1  30FF               	movlw	255
  5037     0FE2  05CE               	andwf	___flmul@prod,f
  5038     0FE3  30FF               	movlw	255
  5039     0FE4  05CF               	andwf	___flmul@prod+1,f
  5040     0FE5  307F               	movlw	127
  5041     0FE6  05D0               	andwf	___flmul@prod+2,f
  5042     0FE7  3000               	movlw	0
  5043     0FE8  05D1               	andwf	___flmul@prod+3,f
  5044     0FE9                     l2909:
  5045     0FE9  1C4D               	btfss	___flmul@bexp,0
  5046     0FEA  2FEC               	goto	u3771
  5047     0FEB  2FED               	goto	u3770
  5048     0FEC                     u3771:
  5049     0FEC  2FEE               	goto	l2913
  5050     0FED                     u3770:
  5051     0FED                     l2911:
  5052     0FED  17D0               	bsf	___flmul@prod+2,7
  5053     0FEE                     l2913:
  5054     0FEE  084D               	movf	___flmul@bexp,w
  5055     0FEF  00C2               	movwf	??___flmul
  5056     0FF0  1003               	clrc
  5057     0FF1  0C42               	rrf	??___flmul,w
  5058     0FF2  00D1               	movwf	___flmul@prod+3
  5059     0FF3                     l2915:
  5060     0FF3  0847               	movf	___flmul@sign,w
  5061     0FF4  00FF               	movwf	btemp+1
  5062     0FF5  087F               	movf	btemp+1,w
  5063     0FF6  04D1               	iorwf	___flmul@prod+3,f
  5064     0FF7                     l2917:
  5065     0FF7  0851               	movf	___flmul@prod+3,w
  5066     0FF8  00BD               	movwf	?___flmul+3
  5067     0FF9  0850               	movf	___flmul@prod+2,w
  5068     0FFA  00BC               	movwf	?___flmul+2
  5069     0FFB  084F               	movf	___flmul@prod+1,w
  5070     0FFC  00BB               	movwf	?___flmul+1
  5071     0FFD  084E               	movf	___flmul@prod,w
  5072     0FFE  00BA               	movwf	?___flmul
  5073     0FFF                     l799:
  5074     0FFF  0008               	return
  5075     1000                     __end_of___flmul:
  5076                           
  5077                           	psect	text15
  5078     0804                     __ptext15:	
  5079 ;; *************** function __Umul8_16 *****************
  5080 ;; Defined at:
  5081 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul8_16.c"
  5082 ;; Parameters:    Size  Location     Type
  5083 ;;  multiplier      1    wreg     unsigned char 
  5084 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  5085 ;; Auto vars:     Size  Location     Type
  5086 ;;  multiplier      1    8[BANK0 ] unsigned char 
  5087 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  5088 ;;  product         2    4[BANK0 ] unsigned int 
  5089 ;; Return value:  Size  Location     Type
  5090 ;;                  2    0[BANK0 ] unsigned int 
  5091 ;; Registers used:
  5092 ;;		wreg, status,2, status,0
  5093 ;; Tracked objects:
  5094 ;;		On entry : 0/0
  5095 ;;		On exit  : 0/0
  5096 ;;		Unchanged: 0/0
  5097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5098 ;;      Params:         0       2       0       0       0
  5099 ;;      Locals:         0       5       0       0       0
  5100 ;;      Temps:          0       2       0       0       0
  5101 ;;      Totals:         0       9       0       0       0
  5102 ;;Total ram usage:        9 bytes
  5103 ;; Hardware stack levels used: 1
  5104 ;; Hardware stack levels required when called: 2
  5105 ;; This function calls:
  5106 ;;		Nothing
  5107 ;; This function is called by:
  5108 ;;		___flmul
  5109 ;; This function uses a non-reentrant model
  5110 ;;
  5111                           
  5112     0804                     __Umul8_16:	
  5113                           ;psect for function __Umul8_16
  5114                           
  5115                           
  5116                           ;incstack = 0
  5117                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5118                           ;__Umul8_16@multiplier stored from wreg
  5119     0804  1283               	bcf	3,5	;RP0=0, select bank0
  5120     0805  1303               	bcf	3,6	;RP1=0, select bank0
  5121     0806  00A8               	movwf	__Umul8_16@multiplier
  5122     0807                     l2303:
  5123     0807  01A4               	clrf	__Umul8_16@product
  5124     0808  01A5               	clrf	__Umul8_16@product+1
  5125     0809                     l2305:
  5126     0809  0820               	movf	__Umul8_16@multiplicand,w
  5127     080A  00A2               	movwf	??__Umul8_16
  5128     080B  01A3               	clrf	??__Umul8_16+1
  5129     080C  0822               	movf	??__Umul8_16,w
  5130     080D  00A6               	movwf	__Umul8_16@word_mpld
  5131     080E  0823               	movf	??__Umul8_16+1,w
  5132     080F  00A7               	movwf	__Umul8_16@word_mpld+1
  5133     0810                     l2307:
  5134     0810  1C28               	btfss	__Umul8_16@multiplier,0
  5135     0811  2813               	goto	u2531
  5136     0812  2814               	goto	u2530
  5137     0813                     u2531:
  5138     0813  281A               	goto	l818
  5139     0814                     u2530:
  5140     0814                     l2309:
  5141     0814  0826               	movf	__Umul8_16@word_mpld,w
  5142     0815  07A4               	addwf	__Umul8_16@product,f
  5143     0816  1803               	skipnc
  5144     0817  0AA5               	incf	__Umul8_16@product+1,f
  5145     0818  0827               	movf	__Umul8_16@word_mpld+1,w
  5146     0819  07A5               	addwf	__Umul8_16@product+1,f
  5147     081A                     l818:
  5148     081A  3001               	movlw	1
  5149     081B                     u2545:
  5150     081B  1003               	clrc
  5151     081C  0DA6               	rlf	__Umul8_16@word_mpld,f
  5152     081D  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  5153     081E  3EFF               	addlw	-1
  5154     081F  1D03               	skipz
  5155     0820  281B               	goto	u2545
  5156     0821  1003               	clrc
  5157     0822  0CA8               	rrf	__Umul8_16@multiplier,f
  5158     0823                     l2311:
  5159     0823  0828               	movf	__Umul8_16@multiplier,w
  5160     0824  1D03               	btfss	3,2
  5161     0825  2827               	goto	u2551
  5162     0826  2828               	goto	u2550
  5163     0827                     u2551:
  5164     0827  2810               	goto	l2307
  5165     0828                     u2550:
  5166     0828                     l2313:
  5167     0828  0825               	movf	__Umul8_16@product+1,w
  5168     0829  00A1               	movwf	?__Umul8_16+1
  5169     082A  0824               	movf	__Umul8_16@product,w
  5170     082B  00A0               	movwf	?__Umul8_16
  5171     082C                     l820:
  5172     082C  0008               	return
  5173     082D                     __end_of__Umul8_16:
  5174                           
  5175                           	psect	text16
  5176     082D                     __ptext16:	
  5177 ;; *************** function ___fldiv *****************
  5178 ;; Defined at:
  5179 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcdiv.c"
  5180 ;; Parameters:    Size  Location     Type
  5181 ;;  a               4    0[BANK0 ] unsigned int 
  5182 ;;  b               4    4[BANK0 ] unsigned int 
  5183 ;; Auto vars:     Size  Location     Type
  5184 ;;  grs             4   20[BANK0 ] unsigned long 
  5185 ;;  rem             4   13[BANK0 ] unsigned long 
  5186 ;;  new_exp         2   18[BANK0 ] int 
  5187 ;;  aexp            1   25[BANK0 ] unsigned char 
  5188 ;;  bexp            1   24[BANK0 ] unsigned char 
  5189 ;;  sign            1   17[BANK0 ] unsigned char 
  5190 ;; Return value:  Size  Location     Type
  5191 ;;                  4    0[BANK0 ] unsigned char 
  5192 ;; Registers used:
  5193 ;;		wreg, status,2, status,0, btemp+1
  5194 ;; Tracked objects:
  5195 ;;		On entry : 0/0
  5196 ;;		On exit  : 0/0
  5197 ;;		Unchanged: 0/0
  5198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5199 ;;      Params:         0       8       0       0       0
  5200 ;;      Locals:         0      13       0       0       0
  5201 ;;      Temps:          0       5       0       0       0
  5202 ;;      Totals:         0      26       0       0       0
  5203 ;;Total ram usage:       26 bytes
  5204 ;; Hardware stack levels used: 1
  5205 ;; Hardware stack levels required when called: 2
  5206 ;; This function calls:
  5207 ;;		Nothing
  5208 ;; This function is called by:
  5209 ;;		_main
  5210 ;; This function uses a non-reentrant model
  5211 ;;
  5212                           
  5213     082D                     ___fldiv:	
  5214                           ;psect for function ___fldiv
  5215                           
  5216     082D                     l2633:	
  5217                           ;incstack = 0
  5218                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  5219                           
  5220     082D  1283               	bcf	3,5	;RP0=0, select bank0
  5221     082E  1303               	bcf	3,6	;RP1=0, select bank0
  5222     082F  0827               	movf	___fldiv@b+3,w
  5223     0830  3980               	andlw	128
  5224     0831  00B1               	movwf	___fldiv@sign
  5225     0832                     l2635:
  5226     0832  0827               	movf	___fldiv@b+3,w
  5227     0833  00A8               	movwf	??___fldiv
  5228     0834  0728               	addwf	??___fldiv,w
  5229     0835  00B8               	movwf	___fldiv@bexp
  5230     0836                     l2637:
  5231     0836  1FA6               	btfss	___fldiv@b+2,7
  5232     0837  2839               	goto	u3121
  5233     0838  283A               	goto	u3120
  5234     0839                     u3121:
  5235     0839  283B               	goto	l2641
  5236     083A                     u3120:
  5237     083A                     l2639:
  5238     083A  1438               	bsf	___fldiv@bexp,0
  5239     083B                     l2641:
  5240     083B  0838               	movf	___fldiv@bexp,w
  5241     083C  1903               	btfsc	3,2
  5242     083D  283F               	goto	u3131
  5243     083E  2840               	goto	u3130
  5244     083F                     u3131:
  5245     083F  2850               	goto	l2651
  5246     0840                     u3130:
  5247     0840                     l2643:
  5248     0840  0A38               	incf	___fldiv@bexp,w
  5249     0841  1D03               	btfss	3,2
  5250     0842  2844               	goto	u3141
  5251     0843  2845               	goto	u3140
  5252     0844                     u3141:
  5253     0844  284D               	goto	l2647
  5254     0845                     u3140:
  5255     0845                     l2645:
  5256     0845  3000               	movlw	0
  5257     0846  00A7               	movwf	___fldiv@b+3
  5258     0847  3000               	movlw	0
  5259     0848  00A6               	movwf	___fldiv@b+2
  5260     0849  3000               	movlw	0
  5261     084A  00A5               	movwf	___fldiv@b+1
  5262     084B  3000               	movlw	0
  5263     084C  00A4               	movwf	___fldiv@b
  5264     084D                     l2647:
  5265     084D  17A6               	bsf	___fldiv@b+2,7
  5266     084E                     l2649:
  5267     084E  01A7               	clrf	___fldiv@b+3
  5268     084F  2858               	goto	l2653
  5269     0850                     l2651:
  5270     0850  3000               	movlw	0
  5271     0851  00A7               	movwf	___fldiv@b+3
  5272     0852  3000               	movlw	0
  5273     0853  00A6               	movwf	___fldiv@b+2
  5274     0854  3000               	movlw	0
  5275     0855  00A5               	movwf	___fldiv@b+1
  5276     0856  3000               	movlw	0
  5277     0857  00A4               	movwf	___fldiv@b
  5278     0858                     l2653:
  5279     0858  0823               	movf	___fldiv@a+3,w
  5280     0859  3980               	andlw	128
  5281     085A  00FF               	movwf	btemp+1
  5282     085B  087F               	movf	btemp+1,w
  5283     085C  06B1               	xorwf	___fldiv@sign,f
  5284     085D                     l2655:
  5285     085D  0823               	movf	___fldiv@a+3,w
  5286     085E  00A8               	movwf	??___fldiv
  5287     085F  0728               	addwf	??___fldiv,w
  5288     0860  00B9               	movwf	___fldiv@aexp
  5289     0861                     l2657:
  5290     0861  1FA2               	btfss	___fldiv@a+2,7
  5291     0862  2864               	goto	u3151
  5292     0863  2865               	goto	u3150
  5293     0864                     u3151:
  5294     0864  2866               	goto	l2661
  5295     0865                     u3150:
  5296     0865                     l2659:
  5297     0865  1439               	bsf	___fldiv@aexp,0
  5298     0866                     l2661:
  5299     0866  0839               	movf	___fldiv@aexp,w
  5300     0867  1903               	btfsc	3,2
  5301     0868  286A               	goto	u3161
  5302     0869  286B               	goto	u3160
  5303     086A                     u3161:
  5304     086A  287B               	goto	l2671
  5305     086B                     u3160:
  5306     086B                     l2663:
  5307     086B  0A39               	incf	___fldiv@aexp,w
  5308     086C  1D03               	btfss	3,2
  5309     086D  286F               	goto	u3171
  5310     086E  2870               	goto	u3170
  5311     086F                     u3171:
  5312     086F  2878               	goto	l2667
  5313     0870                     u3170:
  5314     0870                     l2665:
  5315     0870  3000               	movlw	0
  5316     0871  00A3               	movwf	___fldiv@a+3
  5317     0872  3000               	movlw	0
  5318     0873  00A2               	movwf	___fldiv@a+2
  5319     0874  3000               	movlw	0
  5320     0875  00A1               	movwf	___fldiv@a+1
  5321     0876  3000               	movlw	0
  5322     0877  00A0               	movwf	___fldiv@a
  5323     0878                     l2667:
  5324     0878  17A2               	bsf	___fldiv@a+2,7
  5325     0879                     l2669:
  5326     0879  01A3               	clrf	___fldiv@a+3
  5327     087A  2883               	goto	l759
  5328     087B                     l2671:
  5329     087B  3000               	movlw	0
  5330     087C  00A3               	movwf	___fldiv@a+3
  5331     087D  3000               	movlw	0
  5332     087E  00A2               	movwf	___fldiv@a+2
  5333     087F  3000               	movlw	0
  5334     0880  00A1               	movwf	___fldiv@a+1
  5335     0881  3000               	movlw	0
  5336     0882  00A0               	movwf	___fldiv@a
  5337     0883                     l759:
  5338     0883  0823               	movf	___fldiv@a+3,w
  5339     0884  0422               	iorwf	___fldiv@a+2,w
  5340     0885  0421               	iorwf	___fldiv@a+1,w
  5341     0886  0420               	iorwf	___fldiv@a,w
  5342     0887  1D03               	skipz
  5343     0888  288A               	goto	u3181
  5344     0889  288B               	goto	u3180
  5345     088A                     u3181:
  5346     088A  28A4               	goto	l2681
  5347     088B                     u3180:
  5348     088B                     l2673:
  5349     088B  3000               	movlw	0
  5350     088C  00A7               	movwf	___fldiv@b+3
  5351     088D  3000               	movlw	0
  5352     088E  00A6               	movwf	___fldiv@b+2
  5353     088F  3000               	movlw	0
  5354     0890  00A5               	movwf	___fldiv@b+1
  5355     0891  3000               	movlw	0
  5356     0892  00A4               	movwf	___fldiv@b
  5357     0893  3080               	movlw	128
  5358     0894  04A6               	iorwf	___fldiv@b+2,f
  5359     0895  307F               	movlw	127
  5360     0896  04A7               	iorwf	___fldiv@b+3,f
  5361     0897                     l2675:
  5362     0897  0831               	movf	___fldiv@sign,w
  5363     0898  00FF               	movwf	btemp+1
  5364     0899  087F               	movf	btemp+1,w
  5365     089A  04A7               	iorwf	___fldiv@b+3,f
  5366     089B                     l2677:
  5367     089B  0827               	movf	___fldiv@b+3,w
  5368     089C  00A3               	movwf	?___fldiv+3
  5369     089D  0826               	movf	___fldiv@b+2,w
  5370     089E  00A2               	movwf	?___fldiv+2
  5371     089F  0825               	movf	___fldiv@b+1,w
  5372     08A0  00A1               	movwf	?___fldiv+1
  5373     08A1  0824               	movf	___fldiv@b,w
  5374     08A2  00A0               	movwf	?___fldiv
  5375     08A3  29FB               	goto	l761
  5376     08A4                     l2681:
  5377     08A4  0838               	movf	___fldiv@bexp,w
  5378     08A5  1D03               	btfss	3,2
  5379     08A6  28A8               	goto	u3191
  5380     08A7  28A9               	goto	u3190
  5381     08A8                     u3191:
  5382     08A8  28B2               	goto	l2687
  5383     08A9                     u3190:
  5384     08A9                     l2683:
  5385     08A9  3000               	movlw	0
  5386     08AA  00A3               	movwf	?___fldiv+3
  5387     08AB  3000               	movlw	0
  5388     08AC  00A2               	movwf	?___fldiv+2
  5389     08AD  3000               	movlw	0
  5390     08AE  00A1               	movwf	?___fldiv+1
  5391     08AF  3000               	movlw	0
  5392     08B0  00A0               	movwf	?___fldiv
  5393     08B1  29FB               	goto	l761
  5394     08B2                     l2687:
  5395     08B2  0838               	movf	___fldiv@bexp,w
  5396     08B3  00A8               	movwf	??___fldiv
  5397     08B4  01A9               	clrf	??___fldiv+1
  5398     08B5  0829               	movf	??___fldiv+1,w
  5399     08B6  00AB               	movwf	??___fldiv+3
  5400     08B7  0839               	movf	___fldiv@aexp,w
  5401     08B8  0228               	subwf	??___fldiv,w
  5402     08B9  00AA               	movwf	??___fldiv+2
  5403     08BA  1C03               	skipc
  5404     08BB  03AB               	decf	??___fldiv+3,f
  5405     08BC  082A               	movf	??___fldiv+2,w
  5406     08BD  3E7F               	addlw	127
  5407     08BE  00B2               	movwf	___fldiv@new_exp
  5408     08BF  082B               	movf	??___fldiv+3,w
  5409     08C0  1803               	skipnc
  5410     08C1  3E01               	addlw	1
  5411     08C2  3E00               	addlw	0
  5412     08C3  00B3               	movwf	___fldiv@new_exp+1
  5413     08C4                     l2689:
  5414     08C4  0827               	movf	___fldiv@b+3,w
  5415     08C5  00B0               	movwf	___fldiv@rem+3
  5416     08C6  0826               	movf	___fldiv@b+2,w
  5417     08C7  00AF               	movwf	___fldiv@rem+2
  5418     08C8  0825               	movf	___fldiv@b+1,w
  5419     08C9  00AE               	movwf	___fldiv@rem+1
  5420     08CA  0824               	movf	___fldiv@b,w
  5421     08CB  00AD               	movwf	___fldiv@rem
  5422     08CC                     l2691:
  5423     08CC  3000               	movlw	0
  5424     08CD  00A7               	movwf	___fldiv@b+3
  5425     08CE  3000               	movlw	0
  5426     08CF  00A6               	movwf	___fldiv@b+2
  5427     08D0  3000               	movlw	0
  5428     08D1  00A5               	movwf	___fldiv@b+1
  5429     08D2  3000               	movlw	0
  5430     08D3  00A4               	movwf	___fldiv@b
  5431     08D4                     l2693:
  5432     08D4  3000               	movlw	0
  5433     08D5  00B7               	movwf	___fldiv@grs+3
  5434     08D6  3000               	movlw	0
  5435     08D7  00B6               	movwf	___fldiv@grs+2
  5436     08D8  3000               	movlw	0
  5437     08D9  00B5               	movwf	___fldiv@grs+1
  5438     08DA  3000               	movlw	0
  5439     08DB  00B4               	movwf	___fldiv@grs
  5440     08DC                     l2695:
  5441     08DC  01B9               	clrf	___fldiv@aexp
  5442     08DD  2928               	goto	l2715
  5443     08DE                     l2697:
  5444     08DE  0839               	movf	___fldiv@aexp,w
  5445     08DF  1903               	btfsc	3,2
  5446     08E0  28E2               	goto	u3201
  5447     08E1  28E3               	goto	u3200
  5448     08E2                     u3201:
  5449     08E2  2903               	goto	l2707
  5450     08E3                     u3200:
  5451     08E3                     l2699:
  5452     08E3  3001               	movlw	1
  5453     08E4  00A8               	movwf	??___fldiv
  5454     08E5                     u3215:
  5455     08E5  1003               	clrc
  5456     08E6  0DAD               	rlf	___fldiv@rem,f
  5457     08E7  0DAE               	rlf	___fldiv@rem+1,f
  5458     08E8  0DAF               	rlf	___fldiv@rem+2,f
  5459     08E9  0DB0               	rlf	___fldiv@rem+3,f
  5460     08EA  0BA8               	decfsz	??___fldiv,f
  5461     08EB  28E5               	goto	u3215
  5462     08EC  3001               	movlw	1
  5463     08ED  00A8               	movwf	??___fldiv
  5464     08EE                     u3225:
  5465     08EE  1003               	clrc
  5466     08EF  0DA4               	rlf	___fldiv@b,f
  5467     08F0  0DA5               	rlf	___fldiv@b+1,f
  5468     08F1  0DA6               	rlf	___fldiv@b+2,f
  5469     08F2  0DA7               	rlf	___fldiv@b+3,f
  5470     08F3  0BA8               	decfsz	??___fldiv,f
  5471     08F4  28EE               	goto	u3225
  5472     08F5                     l2701:
  5473     08F5  1FB7               	btfss	___fldiv@grs+3,7
  5474     08F6  28F8               	goto	u3231
  5475     08F7  28F9               	goto	u3230
  5476     08F8                     u3231:
  5477     08F8  28FA               	goto	l2705
  5478     08F9                     u3230:
  5479     08F9                     l2703:
  5480     08F9  1424               	bsf	___fldiv@b,0
  5481     08FA                     l2705:
  5482     08FA  3001               	movlw	1
  5483     08FB  00A8               	movwf	??___fldiv
  5484     08FC                     u3245:
  5485     08FC  1003               	clrc
  5486     08FD  0DB4               	rlf	___fldiv@grs,f
  5487     08FE  0DB5               	rlf	___fldiv@grs+1,f
  5488     08FF  0DB6               	rlf	___fldiv@grs+2,f
  5489     0900  0DB7               	rlf	___fldiv@grs+3,f
  5490     0901  0BA8               	decfsz	??___fldiv,f
  5491     0902  28FC               	goto	u3245
  5492     0903                     l2707:
  5493     0903  0823               	movf	___fldiv@a+3,w
  5494     0904  0230               	subwf	___fldiv@rem+3,w
  5495     0905  1D03               	skipz
  5496     0906  2911               	goto	u3255
  5497     0907  0822               	movf	___fldiv@a+2,w
  5498     0908  022F               	subwf	___fldiv@rem+2,w
  5499     0909  1D03               	skipz
  5500     090A  2911               	goto	u3255
  5501     090B  0821               	movf	___fldiv@a+1,w
  5502     090C  022E               	subwf	___fldiv@rem+1,w
  5503     090D  1D03               	skipz
  5504     090E  2911               	goto	u3255
  5505     090F  0820               	movf	___fldiv@a,w
  5506     0910  022D               	subwf	___fldiv@rem,w
  5507     0911                     u3255:
  5508     0911  1C03               	skipc
  5509     0912  2914               	goto	u3251
  5510     0913  2915               	goto	u3250
  5511     0914                     u3251:
  5512     0914  2924               	goto	l2713
  5513     0915                     u3250:
  5514     0915                     l2709:
  5515     0915  1737               	bsf	___fldiv@grs+3,6
  5516     0916                     l2711:
  5517     0916  0820               	movf	___fldiv@a,w
  5518     0917  02AD               	subwf	___fldiv@rem,f
  5519     0918  0821               	movf	___fldiv@a+1,w
  5520     0919  1C03               	skipc
  5521     091A  0F21               	incfsz	___fldiv@a+1,w
  5522     091B  02AE               	subwf	___fldiv@rem+1,f
  5523     091C  0822               	movf	___fldiv@a+2,w
  5524     091D  1C03               	skipc
  5525     091E  0F22               	incfsz	___fldiv@a+2,w
  5526     091F  02AF               	subwf	___fldiv@rem+2,f
  5527     0920  0823               	movf	___fldiv@a+3,w
  5528     0921  1C03               	skipc
  5529     0922  0F23               	incfsz	___fldiv@a+3,w
  5530     0923  02B0               	subwf	___fldiv@rem+3,f
  5531     0924                     l2713:
  5532     0924  3001               	movlw	1
  5533     0925  00FF               	movwf	btemp+1
  5534     0926  087F               	movf	btemp+1,w
  5535     0927  07B9               	addwf	___fldiv@aexp,f
  5536     0928                     l2715:
  5537     0928  301A               	movlw	26
  5538     0929  0239               	subwf	___fldiv@aexp,w
  5539     092A  1C03               	skipc
  5540     092B  292D               	goto	u3261
  5541     092C  292E               	goto	u3260
  5542     092D                     u3261:
  5543     092D  28DE               	goto	l2697
  5544     092E                     u3260:
  5545     092E                     l2717:
  5546     092E  0830               	movf	___fldiv@rem+3,w
  5547     092F  042F               	iorwf	___fldiv@rem+2,w
  5548     0930  042E               	iorwf	___fldiv@rem+1,w
  5549     0931  042D               	iorwf	___fldiv@rem,w
  5550     0932  1903               	skipnz
  5551     0933  2935               	goto	u3271
  5552     0934  2936               	goto	u3270
  5553     0935                     u3271:
  5554     0935  2955               	goto	l2731
  5555     0936                     u3270:
  5556     0936                     l2719:
  5557     0936  1434               	bsf	___fldiv@grs,0
  5558     0937  2955               	goto	l2731
  5559     0938                     l2721:
  5560     0938  3001               	movlw	1
  5561     0939  00A8               	movwf	??___fldiv
  5562     093A                     u3285:
  5563     093A  1003               	clrc
  5564     093B  0DA4               	rlf	___fldiv@b,f
  5565     093C  0DA5               	rlf	___fldiv@b+1,f
  5566     093D  0DA6               	rlf	___fldiv@b+2,f
  5567     093E  0DA7               	rlf	___fldiv@b+3,f
  5568     093F  0BA8               	decfsz	??___fldiv,f
  5569     0940  293A               	goto	u3285
  5570     0941                     l2723:
  5571     0941  1FB7               	btfss	___fldiv@grs+3,7
  5572     0942  2944               	goto	u3291
  5573     0943  2945               	goto	u3290
  5574     0944                     u3291:
  5575     0944  2946               	goto	l2727
  5576     0945                     u3290:
  5577     0945                     l2725:
  5578     0945  1424               	bsf	___fldiv@b,0
  5579     0946                     l2727:
  5580     0946  3001               	movlw	1
  5581     0947  00A8               	movwf	??___fldiv
  5582     0948                     u3305:
  5583     0948  1003               	clrc
  5584     0949  0DB4               	rlf	___fldiv@grs,f
  5585     094A  0DB5               	rlf	___fldiv@grs+1,f
  5586     094B  0DB6               	rlf	___fldiv@grs+2,f
  5587     094C  0DB7               	rlf	___fldiv@grs+3,f
  5588     094D  0BA8               	decfsz	??___fldiv,f
  5589     094E  2948               	goto	u3305
  5590     094F                     l2729:
  5591     094F  30FF               	movlw	255
  5592     0950  07B2               	addwf	___fldiv@new_exp,f
  5593     0951  1803               	skipnc
  5594     0952  0AB3               	incf	___fldiv@new_exp+1,f
  5595     0953  30FF               	movlw	255
  5596     0954  07B3               	addwf	___fldiv@new_exp+1,f
  5597     0955                     l2731:
  5598     0955  1FA6               	btfss	___fldiv@b+2,7
  5599     0956  2958               	goto	u3311
  5600     0957  2959               	goto	u3310
  5601     0958                     u3311:
  5602     0958  2938               	goto	l2721
  5603     0959                     u3310:
  5604     0959                     l2733:
  5605     0959  01B9               	clrf	___fldiv@aexp
  5606     095A                     l2735:
  5607     095A  1FB7               	btfss	___fldiv@grs+3,7
  5608     095B  295D               	goto	u3321
  5609     095C  295E               	goto	u3320
  5610     095D                     u3321:
  5611     095D  297A               	goto	l2743
  5612     095E                     u3320:
  5613     095E                     l2737:
  5614     095E  30FF               	movlw	255
  5615     095F  0534               	andwf	___fldiv@grs,w
  5616     0960  00A8               	movwf	??___fldiv
  5617     0961  30FF               	movlw	255
  5618     0962  0535               	andwf	___fldiv@grs+1,w
  5619     0963  00A9               	movwf	??___fldiv+1
  5620     0964  30FF               	movlw	255
  5621     0965  0536               	andwf	___fldiv@grs+2,w
  5622     0966  00AA               	movwf	??___fldiv+2
  5623     0967  307F               	movlw	127
  5624     0968  0537               	andwf	___fldiv@grs+3,w
  5625     0969  00AB               	movwf	??___fldiv+3
  5626     096A  082B               	movf	??___fldiv+3,w
  5627     096B  042A               	iorwf	??___fldiv+2,w
  5628     096C  0429               	iorwf	??___fldiv+1,w
  5629     096D  0428               	iorwf	??___fldiv,w
  5630     096E  1903               	skipnz
  5631     096F  2971               	goto	u3331
  5632     0970  2972               	goto	u3330
  5633     0971                     u3331:
  5634     0971  2975               	goto	l775
  5635     0972                     u3330:
  5636     0972                     l2739:
  5637     0972  01B9               	clrf	___fldiv@aexp
  5638     0973  0AB9               	incf	___fldiv@aexp,f
  5639     0974  297A               	goto	l2743
  5640     0975                     l775:
  5641     0975  1C24               	btfss	___fldiv@b,0
  5642     0976  2978               	goto	u3341
  5643     0977  2979               	goto	u3340
  5644     0978                     u3341:
  5645     0978  297A               	goto	l2743
  5646     0979                     u3340:
  5647     0979  2972               	goto	l2739
  5648     097A                     l2743:
  5649     097A  0839               	movf	___fldiv@aexp,w
  5650     097B  1903               	btfsc	3,2
  5651     097C  297E               	goto	u3351
  5652     097D  297F               	goto	u3350
  5653     097E                     u3351:
  5654     097E  29B0               	goto	l2753
  5655     097F                     u3350:
  5656     097F                     l2745:
  5657     097F  3001               	movlw	1
  5658     0980  07A4               	addwf	___fldiv@b,f
  5659     0981  3000               	movlw	0
  5660     0982  1803               	skipnc
  5661     0983  3001               	movlw	1
  5662     0984  07A5               	addwf	___fldiv@b+1,f
  5663     0985  3000               	movlw	0
  5664     0986  1803               	skipnc
  5665     0987  3001               	movlw	1
  5666     0988  07A6               	addwf	___fldiv@b+2,f
  5667     0989  3000               	movlw	0
  5668     098A  1803               	skipnc
  5669     098B  3001               	movlw	1
  5670     098C  07A7               	addwf	___fldiv@b+3,f
  5671     098D                     l2747:
  5672     098D  1C27               	btfss	___fldiv@b+3,0
  5673     098E  2990               	goto	u3361
  5674     098F  2991               	goto	u3360
  5675     0990                     u3361:
  5676     0990  29B0               	goto	l2753
  5677     0991                     u3360:
  5678     0991                     l2749:
  5679     0991  0824               	movf	___fldiv@b,w
  5680     0992  00A8               	movwf	??___fldiv
  5681     0993  0825               	movf	___fldiv@b+1,w
  5682     0994  00A9               	movwf	??___fldiv+1
  5683     0995  0826               	movf	___fldiv@b+2,w
  5684     0996  00AA               	movwf	??___fldiv+2
  5685     0997  0827               	movf	___fldiv@b+3,w
  5686     0998  00AB               	movwf	??___fldiv+3
  5687     0999  3001               	movlw	1
  5688     099A  00AC               	movwf	??___fldiv+4
  5689     099B                     u3375:
  5690     099B  0D2B               	rlf	??___fldiv+3,w
  5691     099C  0CAB               	rrf	??___fldiv+3,f
  5692     099D  0CAA               	rrf	??___fldiv+2,f
  5693     099E  0CA9               	rrf	??___fldiv+1,f
  5694     099F  0CA8               	rrf	??___fldiv,f
  5695     09A0                     u3370:
  5696     09A0  0BAC               	decfsz	??___fldiv+4,f
  5697     09A1  299B               	goto	u3375
  5698     09A2  082B               	movf	??___fldiv+3,w
  5699     09A3  00A7               	movwf	___fldiv@b+3
  5700     09A4  082A               	movf	??___fldiv+2,w
  5701     09A5  00A6               	movwf	___fldiv@b+2
  5702     09A6  0829               	movf	??___fldiv+1,w
  5703     09A7  00A5               	movwf	___fldiv@b+1
  5704     09A8  0828               	movf	??___fldiv,w
  5705     09A9  00A4               	movwf	___fldiv@b
  5706     09AA                     l2751:
  5707     09AA  3001               	movlw	1
  5708     09AB  07B2               	addwf	___fldiv@new_exp,f
  5709     09AC  1803               	skipnc
  5710     09AD  0AB3               	incf	___fldiv@new_exp+1,f
  5711     09AE  3000               	movlw	0
  5712     09AF  07B3               	addwf	___fldiv@new_exp+1,f
  5713     09B0                     l2753:
  5714     09B0  0833               	movf	___fldiv@new_exp+1,w
  5715     09B1  3A80               	xorlw	128
  5716     09B2  00FF               	movwf	btemp+1
  5717     09B3  3080               	movlw	128
  5718     09B4  027F               	subwf	btemp+1,w
  5719     09B5  1D03               	skipz
  5720     09B6  29B9               	goto	u3385
  5721     09B7  30FF               	movlw	255
  5722     09B8  0232               	subwf	___fldiv@new_exp,w
  5723     09B9                     u3385:
  5724     09B9  1C03               	skipc
  5725     09BA  29BC               	goto	u3381
  5726     09BB  29BD               	goto	u3380
  5727     09BC                     u3381:
  5728     09BC  29CB               	goto	l2757
  5729     09BD                     u3380:
  5730     09BD                     l2755:
  5731     09BD  30FF               	movlw	255
  5732     09BE  1283               	bcf	3,5	;RP0=0, select bank0
  5733     09BF  1303               	bcf	3,6	;RP1=0, select bank0
  5734     09C0  00B2               	movwf	___fldiv@new_exp
  5735     09C1  3000               	movlw	0
  5736     09C2  00B3               	movwf	___fldiv@new_exp+1
  5737     09C3  3000               	movlw	0
  5738     09C4  00A7               	movwf	___fldiv@b+3
  5739     09C5  3000               	movlw	0
  5740     09C6  00A6               	movwf	___fldiv@b+2
  5741     09C7  3000               	movlw	0
  5742     09C8  00A5               	movwf	___fldiv@b+1
  5743     09C9  3000               	movlw	0
  5744     09CA  00A4               	movwf	___fldiv@b
  5745     09CB                     l2757:
  5746     09CB  1283               	bcf	3,5	;RP0=0, select bank0
  5747     09CC  1303               	bcf	3,6	;RP1=0, select bank0
  5748     09CD  0833               	movf	___fldiv@new_exp+1,w
  5749     09CE  3A80               	xorlw	128
  5750     09CF  00FF               	movwf	btemp+1
  5751     09D0  3080               	movlw	128
  5752     09D1  027F               	subwf	btemp+1,w
  5753     09D2  1D03               	skipz
  5754     09D3  29D6               	goto	u3395
  5755     09D4  3001               	movlw	1
  5756     09D5  0232               	subwf	___fldiv@new_exp,w
  5757     09D6                     u3395:
  5758     09D6  1803               	skipnc
  5759     09D7  29D9               	goto	u3391
  5760     09D8  29DA               	goto	u3390
  5761     09D9                     u3391:
  5762     09D9  29E7               	goto	l781
  5763     09DA                     u3390:
  5764     09DA                     l2759:
  5765     09DA  1283               	bcf	3,5	;RP0=0, select bank0
  5766     09DB  1303               	bcf	3,6	;RP1=0, select bank0
  5767     09DC  01B2               	clrf	___fldiv@new_exp
  5768     09DD  01B3               	clrf	___fldiv@new_exp+1
  5769     09DE                     l2761:
  5770     09DE  3000               	movlw	0
  5771     09DF  00A7               	movwf	___fldiv@b+3
  5772     09E0  3000               	movlw	0
  5773     09E1  00A6               	movwf	___fldiv@b+2
  5774     09E2  3000               	movlw	0
  5775     09E3  00A5               	movwf	___fldiv@b+1
  5776     09E4  3000               	movlw	0
  5777     09E5  00A4               	movwf	___fldiv@b
  5778     09E6                     l2763:
  5779     09E6  01B1               	clrf	___fldiv@sign
  5780     09E7                     l781:
  5781     09E7  1283               	bcf	3,5	;RP0=0, select bank0
  5782     09E8  1303               	bcf	3,6	;RP1=0, select bank0
  5783     09E9  0832               	movf	___fldiv@new_exp,w
  5784     09EA  00B8               	movwf	___fldiv@bexp
  5785     09EB                     l2765:
  5786     09EB  1C38               	btfss	___fldiv@bexp,0
  5787     09EC  29EE               	goto	u3401
  5788     09ED  29EF               	goto	u3400
  5789     09EE                     u3401:
  5790     09EE  29F1               	goto	l2769
  5791     09EF                     u3400:
  5792     09EF                     l2767:
  5793     09EF  17A6               	bsf	___fldiv@b+2,7
  5794     09F0  29F5               	goto	l2771
  5795     09F1                     l2769:
  5796     09F1  307F               	movlw	127
  5797     09F2  00FF               	movwf	btemp+1
  5798     09F3  087F               	movf	btemp+1,w
  5799     09F4  05A6               	andwf	___fldiv@b+2,f
  5800     09F5                     l2771:
  5801     09F5  0838               	movf	___fldiv@bexp,w
  5802     09F6  00A8               	movwf	??___fldiv
  5803     09F7  1003               	clrc
  5804     09F8  0C28               	rrf	??___fldiv,w
  5805     09F9  00A7               	movwf	___fldiv@b+3
  5806     09FA  2897               	goto	l2675
  5807     09FB                     l761:
  5808     09FB  0008               	return
  5809     09FC                     __end_of___fldiv:
  5810                           
  5811                           	psect	text17
  5812     13BF                     __ptext17:	
  5813 ;; *************** function ___awmod *****************
  5814 ;; Defined at:
  5815 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
  5816 ;; Parameters:    Size  Location     Type
  5817 ;;  divisor         2   10[BANK0 ] int 
  5818 ;;  dividend        2   12[BANK0 ] int 
  5819 ;; Auto vars:     Size  Location     Type
  5820 ;;  sign            1   15[BANK0 ] unsigned char 
  5821 ;;  counter         1   14[BANK0 ] unsigned char 
  5822 ;; Return value:  Size  Location     Type
  5823 ;;                  2   10[BANK0 ] int 
  5824 ;; Registers used:
  5825 ;;		wreg, status,2, status,0, btemp+1
  5826 ;; Tracked objects:
  5827 ;;		On entry : 0/0
  5828 ;;		On exit  : 0/0
  5829 ;;		Unchanged: 0/0
  5830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5831 ;;      Params:         0       4       0       0       0
  5832 ;;      Locals:         0       2       0       0       0
  5833 ;;      Temps:          0       0       0       0       0
  5834 ;;      Totals:         0       6       0       0       0
  5835 ;;Total ram usage:        6 bytes
  5836 ;; Hardware stack levels used: 1
  5837 ;; Hardware stack levels required when called: 2
  5838 ;; This function calls:
  5839 ;;		Nothing
  5840 ;; This function is called by:
  5841 ;;		_main
  5842 ;; This function uses a non-reentrant model
  5843 ;;
  5844                           
  5845     13BF                     ___awmod:	
  5846                           ;psect for function ___awmod
  5847                           
  5848     13BF                     l3751:	
  5849                           ;incstack = 0
  5850                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  5851                           
  5852     13BF  1283               	bcf	3,5	;RP0=0, select bank0
  5853     13C0  1303               	bcf	3,6	;RP1=0, select bank0
  5854     13C1  01AF               	clrf	___awmod@sign
  5855     13C2                     l3753:
  5856     13C2  1FAD               	btfss	___awmod@dividend+1,7
  5857     13C3  2BC5               	goto	u5061
  5858     13C4  2BC6               	goto	u5060
  5859     13C5                     u5061:
  5860     13C5  2BCD               	goto	l3759
  5861     13C6                     u5060:
  5862     13C6                     l3755:
  5863     13C6  09AC               	comf	___awmod@dividend,f
  5864     13C7  09AD               	comf	___awmod@dividend+1,f
  5865     13C8  0AAC               	incf	___awmod@dividend,f
  5866     13C9  1903               	skipnz
  5867     13CA  0AAD               	incf	___awmod@dividend+1,f
  5868     13CB                     l3757:
  5869     13CB  01AF               	clrf	___awmod@sign
  5870     13CC  0AAF               	incf	___awmod@sign,f
  5871     13CD                     l3759:
  5872     13CD  1FAB               	btfss	___awmod@divisor+1,7
  5873     13CE  2BD0               	goto	u5071
  5874     13CF  2BD1               	goto	u5070
  5875     13D0                     u5071:
  5876     13D0  2BD6               	goto	l3763
  5877     13D1                     u5070:
  5878     13D1                     l3761:
  5879     13D1  09AA               	comf	___awmod@divisor,f
  5880     13D2  09AB               	comf	___awmod@divisor+1,f
  5881     13D3  0AAA               	incf	___awmod@divisor,f
  5882     13D4  1903               	skipnz
  5883     13D5  0AAB               	incf	___awmod@divisor+1,f
  5884     13D6                     l3763:
  5885     13D6  082A               	movf	___awmod@divisor,w
  5886     13D7  042B               	iorwf	___awmod@divisor+1,w
  5887     13D8  1903               	btfsc	3,2
  5888     13D9  2BDB               	goto	u5081
  5889     13DA  2BDC               	goto	u5080
  5890     13DB                     u5081:
  5891     13DB  2C0B               	goto	l3781
  5892     13DC                     u5080:
  5893     13DC                     l3765:
  5894     13DC  01AE               	clrf	___awmod@counter
  5895     13DD  0AAE               	incf	___awmod@counter,f
  5896     13DE  2BEA               	goto	l3771
  5897     13DF                     l3767:
  5898     13DF  3001               	movlw	1
  5899     13E0                     u5095:
  5900     13E0  1003               	clrc
  5901     13E1  0DAA               	rlf	___awmod@divisor,f
  5902     13E2  0DAB               	rlf	___awmod@divisor+1,f
  5903     13E3  3EFF               	addlw	-1
  5904     13E4  1D03               	skipz
  5905     13E5  2BE0               	goto	u5095
  5906     13E6                     l3769:
  5907     13E6  3001               	movlw	1
  5908     13E7  00FF               	movwf	btemp+1
  5909     13E8  087F               	movf	btemp+1,w
  5910     13E9  07AE               	addwf	___awmod@counter,f
  5911     13EA                     l3771:
  5912     13EA  1FAB               	btfss	___awmod@divisor+1,7
  5913     13EB  2BED               	goto	u5101
  5914     13EC  2BEE               	goto	u5100
  5915     13ED                     u5101:
  5916     13ED  2BDF               	goto	l3767
  5917     13EE                     u5100:
  5918     13EE                     l3773:
  5919     13EE  082B               	movf	___awmod@divisor+1,w
  5920     13EF  022D               	subwf	___awmod@dividend+1,w
  5921     13F0  1D03               	skipz
  5922     13F1  2BF4               	goto	u5115
  5923     13F2  082A               	movf	___awmod@divisor,w
  5924     13F3  022C               	subwf	___awmod@dividend,w
  5925     13F4                     u5115:
  5926     13F4  1C03               	skipc
  5927     13F5  2BF7               	goto	u5111
  5928     13F6  2BF8               	goto	u5110
  5929     13F7                     u5111:
  5930     13F7  2BFE               	goto	l3777
  5931     13F8                     u5110:
  5932     13F8                     l3775:
  5933     13F8  082A               	movf	___awmod@divisor,w
  5934     13F9  02AC               	subwf	___awmod@dividend,f
  5935     13FA  082B               	movf	___awmod@divisor+1,w
  5936     13FB  1C03               	skipc
  5937     13FC  03AD               	decf	___awmod@dividend+1,f
  5938     13FD  02AD               	subwf	___awmod@dividend+1,f
  5939     13FE                     l3777:
  5940     13FE  3001               	movlw	1
  5941     13FF                     u5125:
  5942     13FF  1003               	clrc
  5943     1400  0CAB               	rrf	___awmod@divisor+1,f
  5944     1401  0CAA               	rrf	___awmod@divisor,f
  5945     1402  3EFF               	addlw	-1
  5946     1403  1D03               	skipz
  5947     1404  2BFF               	goto	u5125
  5948     1405                     l3779:
  5949     1405  3001               	movlw	1
  5950     1406  02AE               	subwf	___awmod@counter,f
  5951     1407  1D03               	btfss	3,2
  5952     1408  2C0A               	goto	u5131
  5953     1409  2C0B               	goto	u5130
  5954     140A                     u5131:
  5955     140A  2BEE               	goto	l3773
  5956     140B                     u5130:
  5957     140B                     l3781:
  5958     140B  082F               	movf	___awmod@sign,w
  5959     140C  1903               	btfsc	3,2
  5960     140D  2C0F               	goto	u5141
  5961     140E  2C10               	goto	u5140
  5962     140F                     u5141:
  5963     140F  2C15               	goto	l3785
  5964     1410                     u5140:
  5965     1410                     l3783:
  5966     1410  09AC               	comf	___awmod@dividend,f
  5967     1411  09AD               	comf	___awmod@dividend+1,f
  5968     1412  0AAC               	incf	___awmod@dividend,f
  5969     1413  1903               	skipnz
  5970     1414  0AAD               	incf	___awmod@dividend+1,f
  5971     1415                     l3785:
  5972     1415  082D               	movf	___awmod@dividend+1,w
  5973     1416  00AB               	movwf	?___awmod+1
  5974     1417  082C               	movf	___awmod@dividend,w
  5975     1418  00AA               	movwf	?___awmod
  5976     1419                     l576:
  5977     1419  0008               	return
  5978     141A                     __end_of___awmod:
  5979                           
  5980                           	psect	text18
  5981     1547                     __ptext18:	
  5982 ;; *************** function ___awdiv *****************
  5983 ;; Defined at:
  5984 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  5985 ;; Parameters:    Size  Location     Type
  5986 ;;  divisor         2   10[BANK0 ] int 
  5987 ;;  dividend        2   12[BANK0 ] int 
  5988 ;; Auto vars:     Size  Location     Type
  5989 ;;  quotient        2   16[BANK0 ] int 
  5990 ;;  sign            1   15[BANK0 ] unsigned char 
  5991 ;;  counter         1   14[BANK0 ] unsigned char 
  5992 ;; Return value:  Size  Location     Type
  5993 ;;                  2   10[BANK0 ] int 
  5994 ;; Registers used:
  5995 ;;		wreg, status,2, status,0, btemp+1
  5996 ;; Tracked objects:
  5997 ;;		On entry : 0/0
  5998 ;;		On exit  : 0/0
  5999 ;;		Unchanged: 0/0
  6000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6001 ;;      Params:         0       4       0       0       0
  6002 ;;      Locals:         0       4       0       0       0
  6003 ;;      Temps:          0       0       0       0       0
  6004 ;;      Totals:         0       8       0       0       0
  6005 ;;Total ram usage:        8 bytes
  6006 ;; Hardware stack levels used: 1
  6007 ;; Hardware stack levels required when called: 2
  6008 ;; This function calls:
  6009 ;;		Nothing
  6010 ;; This function is called by:
  6011 ;;		_main
  6012 ;; This function uses a non-reentrant model
  6013 ;;
  6014                           
  6015     1547                     ___awdiv:	
  6016                           ;psect for function ___awdiv
  6017                           
  6018     1547                     l3707:	
  6019                           ;incstack = 0
  6020                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  6021                           
  6022     1547  1283               	bcf	3,5	;RP0=0, select bank0
  6023     1548  1303               	bcf	3,6	;RP1=0, select bank0
  6024     1549  01AF               	clrf	___awdiv@sign
  6025     154A                     l3709:
  6026     154A  1FAB               	btfss	___awdiv@divisor+1,7
  6027     154B  2D4D               	goto	u4961
  6028     154C  2D4E               	goto	u4960
  6029     154D                     u4961:
  6030     154D  2D55               	goto	l3715
  6031     154E                     u4960:
  6032     154E                     l3711:
  6033     154E  09AA               	comf	___awdiv@divisor,f
  6034     154F  09AB               	comf	___awdiv@divisor+1,f
  6035     1550  0AAA               	incf	___awdiv@divisor,f
  6036     1551  1903               	skipnz
  6037     1552  0AAB               	incf	___awdiv@divisor+1,f
  6038     1553                     l3713:
  6039     1553  01AF               	clrf	___awdiv@sign
  6040     1554  0AAF               	incf	___awdiv@sign,f
  6041     1555                     l3715:
  6042     1555  1FAD               	btfss	___awdiv@dividend+1,7
  6043     1556  2D58               	goto	u4971
  6044     1557  2D59               	goto	u4970
  6045     1558                     u4971:
  6046     1558  2D62               	goto	l3721
  6047     1559                     u4970:
  6048     1559                     l3717:
  6049     1559  09AC               	comf	___awdiv@dividend,f
  6050     155A  09AD               	comf	___awdiv@dividend+1,f
  6051     155B  0AAC               	incf	___awdiv@dividend,f
  6052     155C  1903               	skipnz
  6053     155D  0AAD               	incf	___awdiv@dividend+1,f
  6054     155E                     l3719:
  6055     155E  3001               	movlw	1
  6056     155F  00FF               	movwf	btemp+1
  6057     1560  087F               	movf	btemp+1,w
  6058     1561  06AF               	xorwf	___awdiv@sign,f
  6059     1562                     l3721:
  6060     1562  01B0               	clrf	___awdiv@quotient
  6061     1563  01B1               	clrf	___awdiv@quotient+1
  6062     1564                     l3723:
  6063     1564  082A               	movf	___awdiv@divisor,w
  6064     1565  042B               	iorwf	___awdiv@divisor+1,w
  6065     1566  1903               	btfsc	3,2
  6066     1567  2D69               	goto	u4981
  6067     1568  2D6A               	goto	u4980
  6068     1569                     u4981:
  6069     1569  2DA1               	goto	l3743
  6070     156A                     u4980:
  6071     156A                     l3725:
  6072     156A  01AE               	clrf	___awdiv@counter
  6073     156B  0AAE               	incf	___awdiv@counter,f
  6074     156C  2D78               	goto	l3731
  6075     156D                     l3727:
  6076     156D  3001               	movlw	1
  6077     156E                     u4995:
  6078     156E  1003               	clrc
  6079     156F  0DAA               	rlf	___awdiv@divisor,f
  6080     1570  0DAB               	rlf	___awdiv@divisor+1,f
  6081     1571  3EFF               	addlw	-1
  6082     1572  1D03               	skipz
  6083     1573  2D6E               	goto	u4995
  6084     1574                     l3729:
  6085     1574  3001               	movlw	1
  6086     1575  00FF               	movwf	btemp+1
  6087     1576  087F               	movf	btemp+1,w
  6088     1577  07AE               	addwf	___awdiv@counter,f
  6089     1578                     l3731:
  6090     1578  1FAB               	btfss	___awdiv@divisor+1,7
  6091     1579  2D7B               	goto	u5001
  6092     157A  2D7C               	goto	u5000
  6093     157B                     u5001:
  6094     157B  2D6D               	goto	l3727
  6095     157C                     u5000:
  6096     157C                     l3733:
  6097     157C  3001               	movlw	1
  6098     157D                     u5015:
  6099     157D  1003               	clrc
  6100     157E  0DB0               	rlf	___awdiv@quotient,f
  6101     157F  0DB1               	rlf	___awdiv@quotient+1,f
  6102     1580  3EFF               	addlw	-1
  6103     1581  1D03               	skipz
  6104     1582  2D7D               	goto	u5015
  6105     1583  082B               	movf	___awdiv@divisor+1,w
  6106     1584  022D               	subwf	___awdiv@dividend+1,w
  6107     1585  1D03               	skipz
  6108     1586  2D89               	goto	u5025
  6109     1587  082A               	movf	___awdiv@divisor,w
  6110     1588  022C               	subwf	___awdiv@dividend,w
  6111     1589                     u5025:
  6112     1589  1C03               	skipc
  6113     158A  2D8C               	goto	u5021
  6114     158B  2D8D               	goto	u5020
  6115     158C                     u5021:
  6116     158C  2D94               	goto	l3739
  6117     158D                     u5020:
  6118     158D                     l3735:
  6119     158D  082A               	movf	___awdiv@divisor,w
  6120     158E  02AC               	subwf	___awdiv@dividend,f
  6121     158F  082B               	movf	___awdiv@divisor+1,w
  6122     1590  1C03               	skipc
  6123     1591  03AD               	decf	___awdiv@dividend+1,f
  6124     1592  02AD               	subwf	___awdiv@dividend+1,f
  6125     1593                     l3737:
  6126     1593  1430               	bsf	___awdiv@quotient,0
  6127     1594                     l3739:
  6128     1594  3001               	movlw	1
  6129     1595                     u5035:
  6130     1595  1003               	clrc
  6131     1596  0CAB               	rrf	___awdiv@divisor+1,f
  6132     1597  0CAA               	rrf	___awdiv@divisor,f
  6133     1598  3EFF               	addlw	-1
  6134     1599  1D03               	skipz
  6135     159A  2D95               	goto	u5035
  6136     159B                     l3741:
  6137     159B  3001               	movlw	1
  6138     159C  02AE               	subwf	___awdiv@counter,f
  6139     159D  1D03               	btfss	3,2
  6140     159E  2DA0               	goto	u5041
  6141     159F  2DA1               	goto	u5040
  6142     15A0                     u5041:
  6143     15A0  2D7C               	goto	l3733
  6144     15A1                     u5040:
  6145     15A1                     l3743:
  6146     15A1  082F               	movf	___awdiv@sign,w
  6147     15A2  1903               	btfsc	3,2
  6148     15A3  2DA5               	goto	u5051
  6149     15A4  2DA6               	goto	u5050
  6150     15A5                     u5051:
  6151     15A5  2DAB               	goto	l3747
  6152     15A6                     u5050:
  6153     15A6                     l3745:
  6154     15A6  09B0               	comf	___awdiv@quotient,f
  6155     15A7  09B1               	comf	___awdiv@quotient+1,f
  6156     15A8  0AB0               	incf	___awdiv@quotient,f
  6157     15A9  1903               	skipnz
  6158     15AA  0AB1               	incf	___awdiv@quotient+1,f
  6159     15AB                     l3747:
  6160     15AB  0831               	movf	___awdiv@quotient+1,w
  6161     15AC  00AB               	movwf	?___awdiv+1
  6162     15AD  0830               	movf	___awdiv@quotient,w
  6163     15AE  00AA               	movwf	?___awdiv
  6164     15AF                     l563:
  6165     15AF  0008               	return
  6166     15B0                     __end_of___awdiv:
  6167                           
  6168                           	psect	text19
  6169     129B                     __ptext19:	
  6170 ;; *************** function _UART_Write_Text *****************
  6171 ;; Defined at:
  6172 ;;		line 18 in file "uart_lib.c"
  6173 ;; Parameters:    Size  Location     Type
  6174 ;;  text            2    1[BANK0 ] PTR unsigned char 
  6175 ;;		 -> STR_31(5), STR_30(5), STR_27(5), main@combinedText_373(20), 
  6176 ;;		 -> main@uartMessage_369(8), STR_21(5), main@combinedText(20), main@uartMessage(8), 
  6177 ;;		 -> STR_15(5), 
  6178 ;; Auto vars:     Size  Location     Type
  6179 ;;  i               2    6[BANK0 ] int 
  6180 ;; Return value:  Size  Location     Type
  6181 ;;                  1    wreg      void 
  6182 ;; Registers used:
  6183 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6184 ;; Tracked objects:
  6185 ;;		On entry : 0/0
  6186 ;;		On exit  : 0/0
  6187 ;;		Unchanged: 0/0
  6188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6189 ;;      Params:         0       2       0       0       0
  6190 ;;      Locals:         0       2       0       0       0
  6191 ;;      Temps:          0       3       0       0       0
  6192 ;;      Totals:         0       7       0       0       0
  6193 ;;Total ram usage:        7 bytes
  6194 ;; Hardware stack levels used: 1
  6195 ;; Hardware stack levels required when called: 3
  6196 ;; This function calls:
  6197 ;;		_UART_Write
  6198 ;; This function is called by:
  6199 ;;		_main
  6200 ;; This function uses a non-reentrant model
  6201 ;;
  6202                           
  6203     129B                     _UART_Write_Text:	
  6204                           ;psect for function _UART_Write_Text
  6205                           
  6206     129B                     l3541:	
  6207                           ;incstack = 0
  6208                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6209                           
  6210                           
  6211                           ;uart_lib.c: 18: void UART_Write_Text(char *text);uart_lib.c: 19: {;uart_lib.c: 20:   in
      +                          t i;;uart_lib.c: 21:   for(i=0;text[i]!='\0';i++)
  6212     129B  1283               	bcf	3,5	;RP0=0, select bank0
  6213     129C  1303               	bcf	3,6	;RP1=0, select bank0
  6214     129D  01A6               	clrf	UART_Write_Text@i
  6215     129E  01A7               	clrf	UART_Write_Text@i+1
  6216     129F  2AC4               	goto	l3547
  6217     12A0                     l3543:
  6218                           
  6219                           ;uart_lib.c: 22:     UART_Write(text[i]);
  6220     12A0  0826               	movf	UART_Write_Text@i,w
  6221     12A1  0721               	addwf	UART_Write_Text@text,w
  6222     12A2  00A4               	movwf	??_UART_Write_Text+1
  6223     12A3  0822               	movf	UART_Write_Text@text+1,w
  6224     12A4  00A3               	movwf	??_UART_Write_Text
  6225     12A5  1803               	skipnc
  6226     12A6  0AA3               	incf	??_UART_Write_Text,f
  6227     12A7  1FA6               	btfss	UART_Write_Text@i,7
  6228     12A8  2AAA               	goto	u4730
  6229     12A9  03A3               	decf	??_UART_Write_Text,f
  6230     12AA                     u4730:
  6231     12AA  1283               	bcf	3,5	;RP0=0, select bank0
  6232     12AB  1303               	bcf	3,6	;RP1=0, select bank0
  6233     12AC  0823               	movf	??_UART_Write_Text,w
  6234     12AD  00A5               	movwf	??_UART_Write_Text+2
  6235     12AE  0825               	movf	??_UART_Write_Text+2,w
  6236     12AF  00FF               	movwf	btemp+1
  6237     12B0  0824               	movf	??_UART_Write_Text+1,w
  6238     12B1  0084               	movwf	4
  6239     12B2  160A  118A  2000  160A  118A  	fcall	stringtab
  6240     12B7  160A  158A  27F2  160A  118A  	fcall	_UART_Write
  6241     12BC                     l3545:
  6242     12BC  3001               	movlw	1
  6243     12BD  1283               	bcf	3,5	;RP0=0, select bank0
  6244     12BE  1303               	bcf	3,6	;RP1=0, select bank0
  6245     12BF  07A6               	addwf	UART_Write_Text@i,f
  6246     12C0  1803               	skipnc
  6247     12C1  0AA7               	incf	UART_Write_Text@i+1,f
  6248     12C2  3000               	movlw	0
  6249     12C3  07A7               	addwf	UART_Write_Text@i+1,f
  6250     12C4                     l3547:
  6251     12C4  0826               	movf	UART_Write_Text@i,w
  6252     12C5  0721               	addwf	UART_Write_Text@text,w
  6253     12C6  00A4               	movwf	??_UART_Write_Text+1
  6254     12C7  0822               	movf	UART_Write_Text@text+1,w
  6255     12C8  00A3               	movwf	??_UART_Write_Text
  6256     12C9  1803               	skipnc
  6257     12CA  0AA3               	incf	??_UART_Write_Text,f
  6258     12CB  1FA6               	btfss	UART_Write_Text@i,7
  6259     12CC  2ACE               	goto	u4740
  6260     12CD  03A3               	decf	??_UART_Write_Text,f
  6261     12CE                     u4740:
  6262     12CE  1283               	bcf	3,5	;RP0=0, select bank0
  6263     12CF  1303               	bcf	3,6	;RP1=0, select bank0
  6264     12D0  0823               	movf	??_UART_Write_Text,w
  6265     12D1  00A5               	movwf	??_UART_Write_Text+2
  6266     12D2  0825               	movf	??_UART_Write_Text+2,w
  6267     12D3  00FF               	movwf	btemp+1
  6268     12D4  0824               	movf	??_UART_Write_Text+1,w
  6269     12D5  0084               	movwf	4
  6270     12D6  160A  118A  2000  160A  118A  	fcall	stringtab
  6271     12DB  3A00               	xorlw	0
  6272     12DC  1D03               	skipz
  6273     12DD  2ADF               	goto	u4751
  6274     12DE  2AE0               	goto	u4750
  6275     12DF                     u4751:
  6276     12DF  2AA0               	goto	l3543
  6277     12E0                     u4750:
  6278     12E0                     l25:
  6279     12E0  0008               	return
  6280     12E1                     __end_of_UART_Write_Text:
  6281                           
  6282                           	psect	text20
  6283     1FF2                     __ptext20:	
  6284 ;; *************** function _UART_Write *****************
  6285 ;; Defined at:
  6286 ;;		line 12 in file "uart_lib.c"
  6287 ;; Parameters:    Size  Location     Type
  6288 ;;  data            1    wreg     unsigned char 
  6289 ;; Auto vars:     Size  Location     Type
  6290 ;;  data            1    0[BANK0 ] unsigned char 
  6291 ;; Return value:  Size  Location     Type
  6292 ;;                  1    wreg      void 
  6293 ;; Registers used:
  6294 ;;		wreg
  6295 ;; Tracked objects:
  6296 ;;		On entry : 0/0
  6297 ;;		On exit  : 0/0
  6298 ;;		Unchanged: 0/0
  6299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6300 ;;      Params:         0       0       0       0       0
  6301 ;;      Locals:         0       1       0       0       0
  6302 ;;      Temps:          0       0       0       0       0
  6303 ;;      Totals:         0       1       0       0       0
  6304 ;;Total ram usage:        1 bytes
  6305 ;; Hardware stack levels used: 1
  6306 ;; Hardware stack levels required when called: 2
  6307 ;; This function calls:
  6308 ;;		Nothing
  6309 ;; This function is called by:
  6310 ;;		_UART_Write_Text
  6311 ;; This function uses a non-reentrant model
  6312 ;;
  6313                           
  6314     1FF2                     _UART_Write:	
  6315                           ;psect for function _UART_Write
  6316                           
  6317                           
  6318                           ;incstack = 0
  6319                           ; Regs used in _UART_Write: [wreg]
  6320                           ;UART_Write@data stored from wreg
  6321     1FF2  1283               	bcf	3,5	;RP0=0, select bank0
  6322     1FF3  1303               	bcf	3,6	;RP1=0, select bank0
  6323     1FF4  00A0               	movwf	UART_Write@data
  6324     1FF5                     l3429:
  6325     1FF5                     l16:	
  6326                           ;uart_lib.c: 12: void UART_Write(char data);uart_lib.c: 13: {;uart_lib.c: 14:   while(!T
      +                          RMT);
  6327                           
  6328     1FF5  1683               	bsf	3,5	;RP0=1, select bank1
  6329     1FF6  1303               	bcf	3,6	;RP1=0, select bank1
  6330     1FF7  1C98               	btfss	24,1	;volatile
  6331     1FF8  2FFA               	goto	u4461
  6332     1FF9  2FFB               	goto	u4460
  6333     1FFA                     u4461:
  6334     1FFA  2FF5               	goto	l16
  6335     1FFB                     u4460:
  6336     1FFB                     l3431:
  6337                           
  6338                           ;uart_lib.c: 15:   TXREG = data;
  6339     1FFB  1283               	bcf	3,5	;RP0=0, select bank0
  6340     1FFC  1303               	bcf	3,6	;RP1=0, select bank0
  6341     1FFD  0820               	movf	UART_Write@data,w
  6342     1FFE  0099               	movwf	25	;volatile
  6343     1FFF                     l19:
  6344     1FFF  0008               	return
  6345     2000                     __end_of_UART_Write:
  6346                           
  6347                           	psect	text21
  6348     1174                     __ptext21:	
  6349 ;; *************** function _UART_Initialize *****************
  6350 ;; Defined at:
  6351 ;;		line 4 in file "uart_lib.c"
  6352 ;; Parameters:    Size  Location     Type
  6353 ;;		None
  6354 ;; Auto vars:     Size  Location     Type
  6355 ;;		None
  6356 ;; Return value:  Size  Location     Type
  6357 ;;                  1    wreg      void 
  6358 ;; Registers used:
  6359 ;;		wreg, status,2
  6360 ;; Tracked objects:
  6361 ;;		On entry : 0/0
  6362 ;;		On exit  : 0/0
  6363 ;;		Unchanged: 0/0
  6364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6365 ;;      Params:         0       0       0       0       0
  6366 ;;      Locals:         0       0       0       0       0
  6367 ;;      Temps:          0       0       0       0       0
  6368 ;;      Totals:         0       0       0       0       0
  6369 ;;Total ram usage:        0 bytes
  6370 ;; Hardware stack levels used: 1
  6371 ;; Hardware stack levels required when called: 2
  6372 ;; This function calls:
  6373 ;;		Nothing
  6374 ;; This function is called by:
  6375 ;;		_main
  6376 ;; This function uses a non-reentrant model
  6377 ;;
  6378                           
  6379     1174                     _UART_Initialize:	
  6380                           ;psect for function _UART_Initialize
  6381                           
  6382     1174                     l3537:	
  6383                           ;incstack = 0
  6384                           ; Regs used in _UART_Initialize: [wreg+status,2]
  6385                           
  6386                           
  6387                           ;uart_lib.c: 6:     TXSTA=0b00100100;
  6388     1174  3024               	movlw	36
  6389     1175  1683               	bsf	3,5	;RP0=1, select bank1
  6390     1176  1303               	bcf	3,6	;RP1=0, select bank1
  6391     1177  0098               	movwf	24	;volatile
  6392                           
  6393                           ;uart_lib.c: 7:     RCSTA=0b10010000;
  6394     1178  3090               	movlw	144
  6395     1179  1283               	bcf	3,5	;RP0=0, select bank0
  6396     117A  1303               	bcf	3,6	;RP1=0, select bank0
  6397     117B  0098               	movwf	24	;volatile
  6398                           
  6399                           ;uart_lib.c: 8:     SPBRG=12;
  6400     117C  300C               	movlw	12
  6401     117D  1683               	bsf	3,5	;RP0=1, select bank1
  6402     117E  1303               	bcf	3,6	;RP1=0, select bank1
  6403     117F  0099               	movwf	25	;volatile
  6404     1180                     l3539:
  6405                           
  6406                           ;uart_lib.c: 9:     TXREG=0x00;
  6407     1180  1283               	bcf	3,5	;RP0=0, select bank0
  6408     1181  1303               	bcf	3,6	;RP1=0, select bank0
  6409     1182  0199               	clrf	25	;volatile
  6410     1183                     l13:
  6411     1183  0008               	return
  6412     1184                     __end_of_UART_Initialize:
  6413                           
  6414                           	psect	text22
  6415     147D                     __ptext22:	
  6416 ;; *************** function _Lcd_Init *****************
  6417 ;; Defined at:
  6418 ;;		line 61 in file "./lcd.h"
  6419 ;; Parameters:    Size  Location     Type
  6420 ;;		None
  6421 ;; Auto vars:     Size  Location     Type
  6422 ;;		None
  6423 ;; Return value:  Size  Location     Type
  6424 ;;                  1    wreg      void 
  6425 ;; Registers used:
  6426 ;;		wreg, status,2, status,0, pclath, cstack
  6427 ;; Tracked objects:
  6428 ;;		On entry : 0/0
  6429 ;;		On exit  : 0/0
  6430 ;;		Unchanged: 0/0
  6431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6432 ;;      Params:         0       0       0       0       0
  6433 ;;      Locals:         0       0       0       0       0
  6434 ;;      Temps:          0       2       0       0       0
  6435 ;;      Totals:         0       2       0       0       0
  6436 ;;Total ram usage:        2 bytes
  6437 ;; Hardware stack levels used: 1
  6438 ;; Hardware stack levels required when called: 4
  6439 ;; This function calls:
  6440 ;;		_Lcd_Cmd
  6441 ;;		_Lcd_Port
  6442 ;; This function is called by:
  6443 ;;		_main
  6444 ;; This function uses a non-reentrant model
  6445 ;;
  6446                           
  6447     147D                     _Lcd_Init:	
  6448                           ;psect for function _Lcd_Init
  6449                           
  6450     147D                     l3549:	
  6451                           ;incstack = 0
  6452                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  6453                           
  6454                           
  6455                           ;./lcd.h: 63:   Lcd_Port(0x00);
  6456     147D  3000               	movlw	0
  6457     147E  160A  118A  21DF  160A  118A  	fcall	_Lcd_Port
  6458     1483                     l3551:
  6459                           
  6460                           ;./lcd.h: 64:    _delay((unsigned long)((20)*(4000000/4000.0)));
  6461     1483  301A               	movlw	26
  6462     1484  1283               	bcf	3,5	;RP0=0, select bank0
  6463     1485  1303               	bcf	3,6	;RP1=0, select bank0
  6464     1486  00A5               	movwf	??_Lcd_Init+1
  6465     1487  30F7               	movlw	247
  6466     1488  00A4               	movwf	??_Lcd_Init
  6467     1489                     u5727:
  6468     1489  0BA4               	decfsz	??_Lcd_Init,f
  6469     148A  2C89               	goto	u5727
  6470     148B  0BA5               	decfsz	??_Lcd_Init+1,f
  6471     148C  2C89               	goto	u5727
  6472     148D  2C8E               	nop2
  6473     148E                     l3553:
  6474                           
  6475                           ;./lcd.h: 65:   Lcd_Cmd(0x03);
  6476     148E  3003               	movlw	3
  6477     148F  160A  118A  21C3  160A  118A  	fcall	_Lcd_Cmd
  6478                           
  6479                           ;./lcd.h: 66:  _delay((unsigned long)((5)*(4000000/4000.0)));
  6480     1494  3007               	movlw	7
  6481     1495  1283               	bcf	3,5	;RP0=0, select bank0
  6482     1496  1303               	bcf	3,6	;RP1=0, select bank0
  6483     1497  00A5               	movwf	??_Lcd_Init+1
  6484     1498  307C               	movlw	124
  6485     1499  00A4               	movwf	??_Lcd_Init
  6486     149A                     u5737:
  6487     149A  0BA4               	decfsz	??_Lcd_Init,f
  6488     149B  2C9A               	goto	u5737
  6489     149C  0BA5               	decfsz	??_Lcd_Init+1,f
  6490     149D  2C9A               	goto	u5737
  6491     149E  0000               	nop
  6492     149F                     l3555:
  6493                           
  6494                           ;./lcd.h: 67:   Lcd_Cmd(0x03);
  6495     149F  3003               	movlw	3
  6496     14A0  160A  118A  21C3  160A  118A  	fcall	_Lcd_Cmd
  6497     14A5                     l3557:
  6498                           
  6499                           ;./lcd.h: 68:  _delay((unsigned long)((11)*(4000000/4000.0)));
  6500     14A5  300F               	movlw	15
  6501     14A6  1283               	bcf	3,5	;RP0=0, select bank0
  6502     14A7  1303               	bcf	3,6	;RP1=0, select bank0
  6503     14A8  00A5               	movwf	??_Lcd_Init+1
  6504     14A9  3047               	movlw	71
  6505     14AA  00A4               	movwf	??_Lcd_Init
  6506     14AB                     u5747:
  6507     14AB  0BA4               	decfsz	??_Lcd_Init,f
  6508     14AC  2CAB               	goto	u5747
  6509     14AD  0BA5               	decfsz	??_Lcd_Init+1,f
  6510     14AE  2CAB               	goto	u5747
  6511                           
  6512                           ;./lcd.h: 69:   Lcd_Cmd(0x03);
  6513     14AF  3003               	movlw	3
  6514     14B0  160A  118A  21C3  160A  118A  	fcall	_Lcd_Cmd
  6515                           
  6516                           ;./lcd.h: 71:   Lcd_Cmd(0x02);
  6517     14B5  3002               	movlw	2
  6518     14B6  160A  118A  21C3  160A  118A  	fcall	_Lcd_Cmd
  6519                           
  6520                           ;./lcd.h: 72:   Lcd_Cmd(0x02);
  6521     14BB  3002               	movlw	2
  6522     14BC  160A  118A  21C3  160A  118A  	fcall	_Lcd_Cmd
  6523                           
  6524                           ;./lcd.h: 73:   Lcd_Cmd(0x08);
  6525     14C1  3008               	movlw	8
  6526     14C2  160A  118A  21C3  160A  118A  	fcall	_Lcd_Cmd
  6527                           
  6528                           ;./lcd.h: 74:   Lcd_Cmd(0x00);
  6529     14C7  3000               	movlw	0
  6530     14C8  160A  118A  21C3  160A  118A  	fcall	_Lcd_Cmd
  6531                           
  6532                           ;./lcd.h: 75:   Lcd_Cmd(0x0C);
  6533     14CD  300C               	movlw	12
  6534     14CE  160A  118A  21C3  160A  118A  	fcall	_Lcd_Cmd
  6535                           
  6536                           ;./lcd.h: 76:   Lcd_Cmd(0x00);
  6537     14D3  3000               	movlw	0
  6538     14D4  160A  118A  21C3  160A  118A  	fcall	_Lcd_Cmd
  6539                           
  6540                           ;./lcd.h: 77:   Lcd_Cmd(0x06);
  6541     14D9  3006               	movlw	6
  6542     14DA  160A  118A  21C3  160A  118A  	fcall	_Lcd_Cmd
  6543     14DF                     l161:
  6544     14DF  0008               	return
  6545     14E0                     __end_of_Lcd_Init:
  6546                           
  6547                           	psect	text23
  6548     11C3                     __ptext23:	
  6549 ;; *************** function _Lcd_Cmd *****************
  6550 ;; Defined at:
  6551 ;;		line 25 in file "./lcd.h"
  6552 ;; Parameters:    Size  Location     Type
  6553 ;;  a               1    wreg     unsigned char 
  6554 ;; Auto vars:     Size  Location     Type
  6555 ;;  a               1    3[BANK0 ] unsigned char 
  6556 ;; Return value:  Size  Location     Type
  6557 ;;                  1    wreg      void 
  6558 ;; Registers used:
  6559 ;;		wreg, status,2, status,0, pclath, cstack
  6560 ;; Tracked objects:
  6561 ;;		On entry : 0/0
  6562 ;;		On exit  : 0/0
  6563 ;;		Unchanged: 0/0
  6564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6565 ;;      Params:         0       0       0       0       0
  6566 ;;      Locals:         0       1       0       0       0
  6567 ;;      Temps:          0       2       0       0       0
  6568 ;;      Totals:         0       3       0       0       0
  6569 ;;Total ram usage:        3 bytes
  6570 ;; Hardware stack levels used: 1
  6571 ;; Hardware stack levels required when called: 3
  6572 ;; This function calls:
  6573 ;;		_Lcd_Port
  6574 ;; This function is called by:
  6575 ;;		_Lcd_Clear
  6576 ;;		_Lcd_Set_Cursor
  6577 ;;		_Lcd_Init
  6578 ;; This function uses a non-reentrant model
  6579 ;;
  6580                           
  6581     11C3                     _Lcd_Cmd:	
  6582                           ;psect for function _Lcd_Cmd
  6583                           
  6584                           
  6585                           ;incstack = 0
  6586                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  6587                           ;Lcd_Cmd@a stored from wreg
  6588     11C3  1283               	bcf	3,5	;RP0=0, select bank0
  6589     11C4  1303               	bcf	3,6	;RP1=0, select bank0
  6590     11C5  00A3               	movwf	Lcd_Cmd@a
  6591     11C6                     l3399:
  6592                           
  6593                           ;./lcd.h: 25: void Lcd_Cmd(char a);./lcd.h: 26: {;./lcd.h: 27:  RB5 = 0;
  6594     11C6  1286               	bcf	6,5	;volatile
  6595     11C7                     l3401:
  6596                           
  6597                           ;./lcd.h: 28:  Lcd_Port(a);
  6598     11C7  0823               	movf	Lcd_Cmd@a,w
  6599     11C8  160A  118A  21DF  160A  118A  	fcall	_Lcd_Port
  6600     11CD                     l3403:
  6601                           
  6602                           ;./lcd.h: 29:  RB4 = 1;
  6603     11CD  1283               	bcf	3,5	;RP0=0, select bank0
  6604     11CE  1303               	bcf	3,6	;RP1=0, select bank0
  6605     11CF  1606               	bsf	6,4	;volatile
  6606     11D0                     l3405:
  6607                           
  6608                           ;./lcd.h: 30:         _delay((unsigned long)((4)*(4000000/4000.0)));
  6609     11D0  3006               	movlw	6
  6610     11D1  1283               	bcf	3,5	;RP0=0, select bank0
  6611     11D2  1303               	bcf	3,6	;RP1=0, select bank0
  6612     11D3  00A2               	movwf	??_Lcd_Cmd+1
  6613     11D4  302F               	movlw	47
  6614     11D5  00A1               	movwf	??_Lcd_Cmd
  6615     11D6                     u5757:
  6616     11D6  0BA1               	decfsz	??_Lcd_Cmd,f
  6617     11D7  29D6               	goto	u5757
  6618     11D8  0BA2               	decfsz	??_Lcd_Cmd+1,f
  6619     11D9  29D6               	goto	u5757
  6620     11DA  29DB               	nop2
  6621     11DB                     l3407:
  6622                           
  6623                           ;./lcd.h: 31:         RB4 = 0;
  6624     11DB  1283               	bcf	3,5	;RP0=0, select bank0
  6625     11DC  1303               	bcf	3,6	;RP1=0, select bank0
  6626     11DD  1206               	bcf	6,4	;volatile
  6627     11DE                     l149:
  6628     11DE  0008               	return
  6629     11DF                     __end_of_Lcd_Cmd:
  6630                           
  6631                           	psect	text24
  6632     11DF                     __ptext24:	
  6633 ;; *************** function _Lcd_Port *****************
  6634 ;; Defined at:
  6635 ;;		line 3 in file "./lcd.h"
  6636 ;; Parameters:    Size  Location     Type
  6637 ;;  a               1    wreg     unsigned char 
  6638 ;; Auto vars:     Size  Location     Type
  6639 ;;  a               1    0[BANK0 ] unsigned char 
  6640 ;; Return value:  Size  Location     Type
  6641 ;;                  1    wreg      void 
  6642 ;; Registers used:
  6643 ;;		wreg
  6644 ;; Tracked objects:
  6645 ;;		On entry : 0/0
  6646 ;;		On exit  : 0/0
  6647 ;;		Unchanged: 0/0
  6648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6649 ;;      Params:         0       0       0       0       0
  6650 ;;      Locals:         0       1       0       0       0
  6651 ;;      Temps:          0       0       0       0       0
  6652 ;;      Totals:         0       1       0       0       0
  6653 ;;Total ram usage:        1 bytes
  6654 ;; Hardware stack levels used: 1
  6655 ;; Hardware stack levels required when called: 2
  6656 ;; This function calls:
  6657 ;;		Nothing
  6658 ;; This function is called by:
  6659 ;;		_Lcd_Cmd
  6660 ;;		_Lcd_Init
  6661 ;;		_Lcd_Write_Char
  6662 ;; This function uses a non-reentrant model
  6663 ;;
  6664                           
  6665     11DF                     _Lcd_Port:	
  6666                           ;psect for function _Lcd_Port
  6667                           
  6668                           
  6669                           ;incstack = 0
  6670                           ; Regs used in _Lcd_Port: [wreg]
  6671                           ;Lcd_Port@a stored from wreg
  6672     11DF  1283               	bcf	3,5	;RP0=0, select bank0
  6673     11E0  1303               	bcf	3,6	;RP1=0, select bank0
  6674     11E1  00A0               	movwf	Lcd_Port@a
  6675     11E2                     l3389:
  6676                           
  6677                           ;./lcd.h: 3: void Lcd_Port(char a);./lcd.h: 4: {;./lcd.h: 5:  if(a & 1)
  6678     11E2  1C20               	btfss	Lcd_Port@a,0
  6679     11E3  29E5               	goto	u4411
  6680     11E4  29E6               	goto	u4410
  6681     11E5                     u4411:
  6682     11E5  29E8               	goto	l138
  6683     11E6                     u4410:
  6684     11E6                     l3391:
  6685                           
  6686                           ;./lcd.h: 6:   RB3 = 1;
  6687     11E6  1586               	bsf	6,3	;volatile
  6688     11E7  29E9               	goto	l139
  6689     11E8                     l138:	
  6690                           ;./lcd.h: 7:  else
  6691                           
  6692                           
  6693                           ;./lcd.h: 8:   RB3 = 0;
  6694     11E8  1186               	bcf	6,3	;volatile
  6695     11E9                     l139:
  6696                           
  6697                           ;./lcd.h: 10:  if(a & 2)
  6698     11E9  1CA0               	btfss	Lcd_Port@a,1
  6699     11EA  29EC               	goto	u4421
  6700     11EB  29ED               	goto	u4420
  6701     11EC                     u4421:
  6702     11EC  29EF               	goto	l140
  6703     11ED                     u4420:
  6704     11ED                     l3393:
  6705                           
  6706                           ;./lcd.h: 11:   RB2 = 1;
  6707     11ED  1506               	bsf	6,2	;volatile
  6708     11EE  29F0               	goto	l141
  6709     11EF                     l140:	
  6710                           ;./lcd.h: 12:  else
  6711                           
  6712                           
  6713                           ;./lcd.h: 13:   RB2 = 0;
  6714     11EF  1106               	bcf	6,2	;volatile
  6715     11F0                     l141:
  6716                           
  6717                           ;./lcd.h: 15:  if(a & 4)
  6718     11F0  1D20               	btfss	Lcd_Port@a,2
  6719     11F1  29F3               	goto	u4431
  6720     11F2  29F4               	goto	u4430
  6721     11F3                     u4431:
  6722     11F3  29F6               	goto	l142
  6723     11F4                     u4430:
  6724     11F4                     l3395:
  6725                           
  6726                           ;./lcd.h: 16:   RB1 = 1;
  6727     11F4  1486               	bsf	6,1	;volatile
  6728     11F5  29F7               	goto	l143
  6729     11F6                     l142:	
  6730                           ;./lcd.h: 17:  else
  6731                           
  6732                           
  6733                           ;./lcd.h: 18:   RB1 = 0;
  6734     11F6  1086               	bcf	6,1	;volatile
  6735     11F7                     l143:
  6736                           
  6737                           ;./lcd.h: 20:  if(a & 8)
  6738     11F7  1DA0               	btfss	Lcd_Port@a,3
  6739     11F8  29FA               	goto	u4441
  6740     11F9  29FB               	goto	u4440
  6741     11FA                     u4441:
  6742     11FA  29FD               	goto	l144
  6743     11FB                     u4440:
  6744     11FB                     l3397:
  6745                           
  6746                           ;./lcd.h: 21:   RB0 = 1;
  6747     11FB  1406               	bsf	6,0	;volatile
  6748     11FC  29FE               	goto	l146
  6749     11FD                     l144:	
  6750                           ;./lcd.h: 22:  else
  6751                           
  6752                           
  6753                           ;./lcd.h: 23:   RB0 = 0;
  6754     11FD  1006               	bcf	6,0	;volatile
  6755     11FE                     l146:
  6756     11FE  0008               	return
  6757     11FF                     __end_of_Lcd_Port:
  6758                           
  6759                           	psect	text25
  6760     141A                     __ptext25:	
  6761 ;; *************** function _timer_isr *****************
  6762 ;; Defined at:
  6763 ;;		line 94 in file "main1.c"
  6764 ;; Parameters:    Size  Location     Type
  6765 ;;		None
  6766 ;; Auto vars:     Size  Location     Type
  6767 ;;		None
  6768 ;; Return value:  Size  Location     Type
  6769 ;;                  1    wreg      void 
  6770 ;; Registers used:
  6771 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6772 ;; Tracked objects:
  6773 ;;		On entry : 0/0
  6774 ;;		On exit  : 0/0
  6775 ;;		Unchanged: 0/0
  6776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6777 ;;      Params:         0       0       0       0       0
  6778 ;;      Locals:         0       0       0       0       0
  6779 ;;      Temps:          3       0       0       0       0
  6780 ;;      Totals:         3       0       0       0       0
  6781 ;;Total ram usage:        3 bytes
  6782 ;; Hardware stack levels used: 1
  6783 ;; Hardware stack levels required when called: 1
  6784 ;; This function calls:
  6785 ;;		_incrementTime
  6786 ;;		_writeEEPROM
  6787 ;; This function is called by:
  6788 ;;		Interrupt level 1
  6789 ;; This function uses a non-reentrant model
  6790 ;;
  6791                           
  6792     141A                     _timer_isr:	
  6793                           ;psect for function _timer_isr
  6794                           
  6795     141A                     i1l2969:
  6796                           
  6797                           ;main1.c: 95:     if (T0IF) {
  6798     141A  1D0B               	btfss	11,2	;volatile
  6799     141B  2C1D               	goto	u392_21
  6800     141C  2C1E               	goto	u392_20
  6801     141D                     u392_21:
  6802     141D  2C74               	goto	i1l201
  6803     141E                     u392_20:
  6804     141E                     i1l2971:
  6805                           
  6806                           ;main1.c: 96:         T0IF = 0;
  6807     141E  110B               	bcf	11,2	;volatile
  6808     141F                     i1l2973:
  6809                           
  6810                           ;main1.c: 97:         TMR0 =61;
  6811     141F  303D               	movlw	61
  6812     1420  1283               	bcf	3,5	;RP0=0, select bank0
  6813     1421  1303               	bcf	3,6	;RP1=0, select bank0
  6814     1422  0081               	movwf	1	;volatile
  6815                           
  6816                           ;main1.c: 100:         kesmeSayaci++;
  6817     1423  3001               	movlw	1
  6818     1424  07F7               	addwf	_kesmeSayaci,f
  6819     1425  1803               	skipnc
  6820     1426  0AF8               	incf	_kesmeSayaci+1,f
  6821     1427  3000               	movlw	0
  6822     1428  07F8               	addwf	_kesmeSayaci+1,f
  6823     1429                     i1l2975:
  6824                           
  6825                           ;main1.c: 101:         if (kesmeSayaci==20){
  6826     1429  3014               	movlw	20
  6827     142A  0677               	xorwf	_kesmeSayaci,w
  6828     142B  0478               	iorwf	_kesmeSayaci+1,w
  6829     142C  1D03               	btfss	3,2
  6830     142D  2C2F               	goto	u393_21
  6831     142E  2C30               	goto	u393_20
  6832     142F                     u393_21:
  6833     142F  2C74               	goto	i1l201
  6834     1430                     u393_20:
  6835     1430                     i1l2977:
  6836                           
  6837                           ;main1.c: 102:             kesmeSayaci = 0 ;
  6838     1430  01F7               	clrf	_kesmeSayaci
  6839     1431  01F8               	clrf	_kesmeSayaci+1
  6840     1432                     i1l2979:
  6841                           
  6842                           ;main1.c: 103:             incrementTime(&currentTime);
  6843     1432  30A4               	movlw	(low (_currentTime| (0+256)))& (0+255)
  6844     1433  160A  118A  24E0  160A  118A  	fcall	_incrementTime
  6845     1438                     i1l2981:
  6846                           
  6847                           ;main1.c: 106:         writeEEPROM(0x01, currentTime.hours);
  6848     1438  3001               	movlw	1
  6849     1439  00F0               	movwf	writeEEPROM@address
  6850     143A  3000               	movlw	0
  6851     143B  00F1               	movwf	writeEEPROM@address+1
  6852     143C  1683               	bsf	3,5	;RP0=1, select bank3
  6853     143D  1703               	bsf	3,6	;RP1=1, select bank3
  6854     143E  0827               	movf	((_currentTime+1)^(0+384)+2),w
  6855     143F  00F3               	movwf	writeEEPROM@data+1
  6856     1440  0826               	movf	(_currentTime^(0+384)+2),w
  6857     1441  00F2               	movwf	writeEEPROM@data
  6858     1442  160A  118A  21AD  160A  118A  	fcall	_writeEEPROM
  6859     1447                     i1l2983:
  6860                           
  6861                           ;main1.c: 107:         writeEEPROM(0x02, currentTime.minutes);
  6862     1447  3002               	movlw	2
  6863     1448  00F0               	movwf	writeEEPROM@address
  6864     1449  3000               	movlw	0
  6865     144A  00F1               	movwf	writeEEPROM@address+1
  6866     144B  1683               	bsf	3,5	;RP0=1, select bank3
  6867     144C  1703               	bsf	3,6	;RP1=1, select bank3
  6868     144D  0829               	movf	((_currentTime+1)^(0+384)+4),w
  6869     144E  00F3               	movwf	writeEEPROM@data+1
  6870     144F  0828               	movf	(_currentTime^(0+384)+4),w
  6871     1450  00F2               	movwf	writeEEPROM@data
  6872     1451  160A  118A  21AD  160A  118A  	fcall	_writeEEPROM
  6873     1456                     i1l2985:
  6874                           
  6875                           ;main1.c: 108:         writeEEPROM(0x03, currentTime.seconds);
  6876     1456  3003               	movlw	3
  6877     1457  00F0               	movwf	writeEEPROM@address
  6878     1458  3000               	movlw	0
  6879     1459  00F1               	movwf	writeEEPROM@address+1
  6880     145A  1683               	bsf	3,5	;RP0=1, select bank3
  6881     145B  1703               	bsf	3,6	;RP1=1, select bank3
  6882     145C  082B               	movf	((_currentTime+1)^(0+384)+6),w
  6883     145D  00F3               	movwf	writeEEPROM@data+1
  6884     145E  082A               	movf	(_currentTime^(0+384)+6),w
  6885     145F  00F2               	movwf	writeEEPROM@data
  6886     1460  160A  118A  21AD  160A  118A  	fcall	_writeEEPROM
  6887     1465                     i1l2987:
  6888                           
  6889                           ;main1.c: 109:         writeEEPROM(0x04, currentTime.carpan);
  6890     1465  3004               	movlw	4
  6891     1466  00F0               	movwf	writeEEPROM@address
  6892     1467  3000               	movlw	0
  6893     1468  00F1               	movwf	writeEEPROM@address+1
  6894     1469  1683               	bsf	3,5	;RP0=1, select bank3
  6895     146A  1703               	bsf	3,6	;RP1=1, select bank3
  6896     146B  0825               	movf	(_currentTime+1)^(0+384),w
  6897     146C  00F3               	movwf	writeEEPROM@data+1
  6898     146D  0824               	movf	_currentTime^(0+384),w
  6899     146E  00F2               	movwf	writeEEPROM@data
  6900     146F  160A  118A  21AD  160A  118A  	fcall	_writeEEPROM
  6901     1474                     i1l201:
  6902     1474  0876               	movf	??_timer_isr+2,w
  6903     1475  008A               	movwf	10
  6904     1476  0875               	movf	??_timer_isr+1,w
  6905     1477  0084               	movwf	4
  6906     1478  0E74               	swapf	??_timer_isr,w
  6907     1479  0083               	movwf	3
  6908     147A  0EFE               	swapf	btemp,f
  6909     147B  0E7E               	swapf	btemp,w
  6910     147C  0009               	retfie
  6911     147D                     __end_of_timer_isr:
  6912                           
  6913                           	psect	intentry
  6914     0004                     __pintentry:	
  6915                           ;incstack = 0
  6916                           ; Regs used in _timer_isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6917                           
  6918     0004                     interrupt_function:
  6919     007E                     saved_w	set	btemp
  6920     0004  00FE               	movwf	btemp
  6921     0005  0E03               	swapf	3,w
  6922     0006  00F4               	movwf	??_timer_isr
  6923     0007  0804               	movf	4,w
  6924     0008  00F5               	movwf	??_timer_isr+1
  6925     0009  080A               	movf	10,w
  6926     000A  00F6               	movwf	??_timer_isr+2
  6927     000B  160A  118A  2C1A   	ljmp	_timer_isr
  6928                           
  6929                           	psect	text26
  6930     11AD                     __ptext26:	
  6931 ;; *************** function _writeEEPROM *****************
  6932 ;; Defined at:
  6933 ;;		line 53 in file "main1.c"
  6934 ;; Parameters:    Size  Location     Type
  6935 ;;  address         2    0[COMMON] unsigned int 
  6936 ;;  data            2    2[COMMON] unsigned int 
  6937 ;; Auto vars:     Size  Location     Type
  6938 ;;		None
  6939 ;; Return value:  Size  Location     Type
  6940 ;;                  1    wreg      void 
  6941 ;; Registers used:
  6942 ;;		wreg
  6943 ;; Tracked objects:
  6944 ;;		On entry : 0/0
  6945 ;;		On exit  : 0/0
  6946 ;;		Unchanged: 0/0
  6947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6948 ;;      Params:         4       0       0       0       0
  6949 ;;      Locals:         0       0       0       0       0
  6950 ;;      Temps:          0       0       0       0       0
  6951 ;;      Totals:         4       0       0       0       0
  6952 ;;Total ram usage:        4 bytes
  6953 ;; Hardware stack levels used: 1
  6954 ;; This function calls:
  6955 ;;		Nothing
  6956 ;; This function is called by:
  6957 ;;		_timer_isr
  6958 ;; This function uses a non-reentrant model
  6959 ;;
  6960                           
  6961     11AD                     _writeEEPROM:	
  6962                           ;psect for function _writeEEPROM
  6963                           
  6964     11AD                     i1l2363:	
  6965                           ;incstack = 0
  6966                           ; Regs used in _writeEEPROM: [wreg]
  6967                           
  6968                           
  6969                           ;main1.c: 55:     EEADR = address;
  6970     11AD  0870               	movf	writeEEPROM@address,w
  6971     11AE  1283               	bcf	3,5	;RP0=0, select bank2
  6972     11AF  1703               	bsf	3,6	;RP1=1, select bank2
  6973     11B0  008D               	movwf	13	;volatile
  6974                           
  6975                           ;main1.c: 56:     EEDATA = data;
  6976     11B1  0872               	movf	writeEEPROM@data,w
  6977     11B2  008C               	movwf	12	;volatile
  6978     11B3                     i1l2365:
  6979                           
  6980                           ;main1.c: 57:     WREN = 1;
  6981     11B3  1683               	bsf	3,5	;RP0=1, select bank3
  6982     11B4  1703               	bsf	3,6	;RP1=1, select bank3
  6983     11B5  150C               	bsf	12,2	;volsfr
  6984     11B6                     i1l2367:
  6985                           
  6986                           ;main1.c: 58:     GIE = 0;
  6987     11B6  138B               	bcf	11,7	;volatile
  6988                           
  6989                           ;main1.c: 59:     EECON2 = 0x55;
  6990     11B7  3055               	movlw	85
  6991     11B8  008D               	movwf	13	;volsfr
  6992                           
  6993                           ;main1.c: 60:     EECON2 = 0xAA;
  6994     11B9  30AA               	movlw	170
  6995     11BA  008D               	movwf	13	;volsfr
  6996     11BB                     i1l2369:
  6997                           
  6998                           ;main1.c: 61:     WR = 1;
  6999     11BB  148C               	bsf	12,1	;volsfr
  7000     11BC                     i1l2371:
  7001                           
  7002                           ;main1.c: 62:     GIE = 1;
  7003     11BC  178B               	bsf	11,7	;volatile
  7004     11BD                     i1l2373:
  7005                           
  7006                           ;main1.c: 63:     WREN = 0;
  7007     11BD  110C               	bcf	12,2	;volsfr
  7008     11BE                     i1l182:	
  7009                           ;main1.c: 64:     while (WR == 1);
  7010                           
  7011     11BE  188C               	btfsc	12,1	;volsfr
  7012     11BF  29C1               	goto	u260_21
  7013     11C0  29C2               	goto	u260_20
  7014     11C1                     u260_21:
  7015     11C1  29BE               	goto	i1l182
  7016     11C2                     u260_20:
  7017     11C2                     i1l185:
  7018     11C2  0008               	return
  7019     11C3                     __end_of_writeEEPROM:
  7020                           
  7021                           	psect	text27
  7022     14E0                     __ptext27:	
  7023 ;; *************** function _incrementTime *****************
  7024 ;; Defined at:
  7025 ;;		line 74 in file "main1.c"
  7026 ;; Parameters:    Size  Location     Type
  7027 ;;  time            1    wreg     PTR struct Time
  7028 ;;		 -> currentTime(8), 
  7029 ;; Auto vars:     Size  Location     Type
  7030 ;;  time            1    2[COMMON] PTR struct Time
  7031 ;;		 -> currentTime(8), 
  7032 ;; Return value:  Size  Location     Type
  7033 ;;                  1    wreg      void 
  7034 ;; Registers used:
  7035 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7036 ;; Tracked objects:
  7037 ;;		On entry : 0/0
  7038 ;;		On exit  : 0/0
  7039 ;;		Unchanged: 0/0
  7040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7041 ;;      Params:         0       0       0       0       0
  7042 ;;      Locals:         1       0       0       0       0
  7043 ;;      Temps:          2       0       0       0       0
  7044 ;;      Totals:         3       0       0       0       0
  7045 ;;Total ram usage:        3 bytes
  7046 ;; Hardware stack levels used: 1
  7047 ;; This function calls:
  7048 ;;		Nothing
  7049 ;; This function is called by:
  7050 ;;		_timer_isr
  7051 ;; This function uses a non-reentrant model
  7052 ;;
  7053                           
  7054     14E0                     _incrementTime:	
  7055                           ;psect for function _incrementTime
  7056                           
  7057                           
  7058                           ;incstack = 0
  7059                           ; Regs used in _incrementTime: [wreg-fsr0h+status,2+status,0]
  7060                           ;incrementTime@time stored from wreg
  7061     14E0  00F2               	movwf	incrementTime@time
  7062     14E1                     i1l2381:
  7063                           
  7064                           ;main1.c: 75:     time->seconds++;
  7065     14E1  0872               	movf	incrementTime@time,w
  7066     14E2  3E06               	addlw	6
  7067     14E3  0084               	movwf	4
  7068     14E4  3001               	movlw	1
  7069     14E5  1783               	bsf	3,7	;select IRP bank2
  7070     14E6  0780               	addwf	0,f
  7071     14E7  0A84               	incf	4,f
  7072     14E8  1803               	skipnc
  7073     14E9  0A80               	incf	0,f
  7074                           
  7075                           ;main1.c: 76:     if (time->seconds >= 60) {
  7076     14EA  0872               	movf	incrementTime@time,w
  7077     14EB  3E06               	addlw	6
  7078     14EC  0084               	movwf	4
  7079     14ED  0800               	movf	0,w
  7080     14EE  00F0               	movwf	??_incrementTime
  7081     14EF  0A84               	incf	4,f
  7082     14F0  0800               	movf	0,w
  7083     14F1  00F1               	movwf	??_incrementTime+1
  7084     14F2  3000               	movlw	0
  7085     14F3  0271               	subwf	??_incrementTime+1,w
  7086     14F4  303C               	movlw	60
  7087     14F5  1903               	skipnz
  7088     14F6  0270               	subwf	??_incrementTime,w
  7089     14F7  1C03               	skipc
  7090     14F8  2CFA               	goto	u261_21
  7091     14F9  2CFB               	goto	u261_20
  7092     14FA                     u261_21:
  7093     14FA  2D46               	goto	i1l194
  7094     14FB                     u261_20:
  7095     14FB                     i1l2383:
  7096                           
  7097                           ;main1.c: 77:         time->seconds = 0;
  7098     14FB  0872               	movf	incrementTime@time,w
  7099     14FC  3E06               	addlw	6
  7100     14FD  0084               	movwf	4
  7101     14FE  0180               	clrf	0
  7102     14FF  0A84               	incf	4,f
  7103     1500  0180               	clrf	0
  7104                           
  7105                           ;main1.c: 79:         time->minutes++;
  7106     1501  0872               	movf	incrementTime@time,w
  7107     1502  3E04               	addlw	4
  7108     1503  0084               	movwf	4
  7109     1504  3001               	movlw	1
  7110     1505  0780               	addwf	0,f
  7111     1506  0A84               	incf	4,f
  7112     1507  1803               	skipnc
  7113     1508  0A80               	incf	0,f
  7114                           
  7115                           ;main1.c: 80:         if (time->minutes >= 60) {
  7116     1509  0872               	movf	incrementTime@time,w
  7117     150A  3E04               	addlw	4
  7118     150B  0084               	movwf	4
  7119     150C  0800               	movf	0,w
  7120     150D  00F0               	movwf	??_incrementTime
  7121     150E  0A84               	incf	4,f
  7122     150F  0800               	movf	0,w
  7123     1510  00F1               	movwf	??_incrementTime+1
  7124     1511  3000               	movlw	0
  7125     1512  0271               	subwf	??_incrementTime+1,w
  7126     1513  303C               	movlw	60
  7127     1514  1903               	skipnz
  7128     1515  0270               	subwf	??_incrementTime,w
  7129     1516  1C03               	skipc
  7130     1517  2D19               	goto	u262_21
  7131     1518  2D1A               	goto	u262_20
  7132     1519                     u262_21:
  7133     1519  2D46               	goto	i1l194
  7134     151A                     u262_20:
  7135     151A                     i1l2385:
  7136                           
  7137                           ;main1.c: 81:             time->minutes = 0;
  7138     151A  0872               	movf	incrementTime@time,w
  7139     151B  3E04               	addlw	4
  7140     151C  0084               	movwf	4
  7141     151D  0180               	clrf	0
  7142     151E  0A84               	incf	4,f
  7143     151F  0180               	clrf	0
  7144                           
  7145                           ;main1.c: 83:             time->hours++;
  7146     1520  0872               	movf	incrementTime@time,w
  7147     1521  3E02               	addlw	2
  7148     1522  0084               	movwf	4
  7149     1523  3001               	movlw	1
  7150     1524  0780               	addwf	0,f
  7151     1525  0A84               	incf	4,f
  7152     1526  1803               	skipnc
  7153     1527  0A80               	incf	0,f
  7154                           
  7155                           ;main1.c: 84:             if (time-> hours >= 255){
  7156     1528  0872               	movf	incrementTime@time,w
  7157     1529  3E02               	addlw	2
  7158     152A  0084               	movwf	4
  7159     152B  0800               	movf	0,w
  7160     152C  00F0               	movwf	??_incrementTime
  7161     152D  0A84               	incf	4,f
  7162     152E  0800               	movf	0,w
  7163     152F  00F1               	movwf	??_incrementTime+1
  7164     1530  3000               	movlw	0
  7165     1531  0271               	subwf	??_incrementTime+1,w
  7166     1532  30FF               	movlw	255
  7167     1533  1903               	skipnz
  7168     1534  0270               	subwf	??_incrementTime,w
  7169     1535  1C03               	skipc
  7170     1536  2D38               	goto	u263_21
  7171     1537  2D39               	goto	u263_20
  7172     1538                     u263_21:
  7173     1538  2D46               	goto	i1l194
  7174     1539                     u263_20:
  7175     1539                     i1l2387:
  7176                           
  7177                           ;main1.c: 85:                 time-> hours = 0;
  7178     1539  0872               	movf	incrementTime@time,w
  7179     153A  3E02               	addlw	2
  7180     153B  0084               	movwf	4
  7181     153C  0180               	clrf	0
  7182     153D  0A84               	incf	4,f
  7183     153E  0180               	clrf	0
  7184                           
  7185                           ;main1.c: 86:                 time->carpan++;
  7186     153F  0872               	movf	incrementTime@time,w
  7187     1540  0084               	movwf	4
  7188     1541  3001               	movlw	1
  7189     1542  0780               	addwf	0,f
  7190     1543  0A84               	incf	4,f
  7191     1544  1803               	skipnc
  7192     1545  0A80               	incf	0,f
  7193     1546                     i1l194:
  7194     1546  0008               	return
  7195     1547                     __end_of_incrementTime:
  7196     007E                     btemp	set	126	;btemp
  7197     007E                     wtemp0	set	126
  7198                           
  7199                           	psect	config
  7200                           
  7201                           ;Config register CONFIG @ 0x2007
  7202                           ;	Oscillator Selection bits
  7203                           ;	FOSC = XT, XT oscillator
  7204                           ;	Watchdog Timer Enable bit
  7205                           ;	WDTE = OFF, WDT disabled
  7206                           ;	Power-up Timer Enable bit
  7207                           ;	PWRTE = OFF, PWRT disabled
  7208                           ;	Brown-out Reset Enable bit
  7209                           ;	BOREN = ON, BOR enabled
  7210                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  7211                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  7212                           ;	Data EEPROM Memory Code Protection bit
  7213                           ;	CPD = OFF, Data EEPROM code protection off
  7214                           ;	Flash Program Memory Write Enable bits
  7215                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  7216                           ;	In-Circuit Debugger Mode bit
  7217                           ;	DEBUG = 0x1, unprogrammed default
  7218                           ;	Flash Program Memory Code Protection bit
  7219                           ;	CP = OFF, Code protection off
  7220     2007                     	org	8199
  7221     2007  3F79               	dw	16249
  7222                           
  7223                           	psect	maintext_split_1
  7224     0021                     u5150:
  7225     0021                     l3907:
  7226                           
  7227                           ;main1.c: 222:     Lcd_Set_Cursor(1,1);
  7228     0021  1283               	bcf	3,5	;RP0=0, select bank0
  7229     0022  1303               	bcf	3,6	;RP1=0, select bank0
  7230     0023  01A4               	clrf	Lcd_Set_Cursor@b
  7231     0024  0AA4               	incf	Lcd_Set_Cursor@b,f
  7232     0025  3001               	movlw	1
  7233     0026  120A  118A  27B2  120A  118A  	fcall	_Lcd_Set_Cursor
  7234     002B                     l3909:
  7235                           
  7236                           ;main1.c: 223:     Lcd_Write_String("STOP DURUMUNA GETIR");
  7237     002B  3096               	movlw	low (STR_6| (0+32768))
  7238     002C  1283               	bcf	3,5	;RP0=0, select bank0
  7239     002D  1303               	bcf	3,6	;RP1=0, select bank0
  7240     002E  00A5               	movwf	Lcd_Write_String@a
  7241     002F  3090               	movlw	high (STR_6| (0+32768))
  7242     0030  00A6               	movwf	Lcd_Write_String@a+1
  7243     0031  160A  118A  2327  120A  118A  	fcall	_Lcd_Write_String
  7244     0036                     l3911:
  7245                           
  7246                           ;main1.c: 224:     Lcd_Set_Cursor(2,1);
  7247     0036  1283               	bcf	3,5	;RP0=0, select bank0
  7248     0037  1303               	bcf	3,6	;RP1=0, select bank0
  7249     0038  01A4               	clrf	Lcd_Set_Cursor@b
  7250     0039  0AA4               	incf	Lcd_Set_Cursor@b,f
  7251     003A  3002               	movlw	2
  7252     003B  120A  118A  27B2  120A  118A  	fcall	_Lcd_Set_Cursor
  7253                           
  7254                           ;main1.c: 225:     Lcd_Write_String("PUT IT IN STOP STATE");
  7255     0040  3081               	movlw	low (STR_7| (0+32768))
  7256     0041  1283               	bcf	3,5	;RP0=0, select bank0
  7257     0042  1303               	bcf	3,6	;RP1=0, select bank0
  7258     0043  00A5               	movwf	Lcd_Write_String@a
  7259     0044  3090               	movlw	high (STR_7| (0+32768))
  7260     0045  00A6               	movwf	Lcd_Write_String@a+1
  7261     0046  160A  118A  2327  120A  118A  	fcall	_Lcd_Write_String
  7262     004B                     l3913:
  7263                           
  7264                           ;main1.c: 226:     _delay((unsigned long)((500)*(4000000/4000.0)));
  7265     004B  3003               	movlw	3
  7266     004C  1283               	bcf	3,5	;RP0=0, select bank0
  7267     004D  1303               	bcf	3,6	;RP1=0, select bank0
  7268     004E  00D6               	movwf	??_main+2
  7269     004F  308A               	movlw	138
  7270     0050  00D5               	movwf	??_main+1
  7271     0051  3055               	movlw	85
  7272     0052  00D4               	movwf	??_main
  7273     0053                     u5647:
  7274     0053  0BD4               	decfsz	??_main,f
  7275     0054  2853               	goto	u5647
  7276     0055  0BD5               	decfsz	??_main+1,f
  7277     0056  2853               	goto	u5647
  7278     0057  0BD6               	decfsz	??_main+2,f
  7279     0058  2853               	goto	u5647
  7280     0059                     l3915:
  7281                           
  7282                           ;main1.c: 227:         if ( RE2 == 0 && RE0 == 0 && RC0 == 0 && RE1 == 0) {
  7283     0059  1283               	bcf	3,5	;RP0=0, select bank0
  7284     005A  1303               	bcf	3,6	;RP1=0, select bank0
  7285     005B  1909               	btfsc	9,2	;volatile
  7286     005C  285E               	goto	u5161
  7287     005D  2861               	goto	u5160
  7288     005E                     u5161:
  7289     005E  120A  158A  2CB8   	goto	l210
  7290     0061                     u5160:
  7291     0061                     l3917:
  7292     0061  1809               	btfsc	9,0	;volatile
  7293     0062  2864               	goto	u5171
  7294     0063  2865               	goto	u5170
  7295     0064                     u5171:
  7296     0064  285E               	goto	u5161
  7297     0065                     u5170:
  7298     0065                     l3919:
  7299     0065  1807               	btfsc	7,0	;volatile
  7300     0066  2868               	goto	u5181
  7301     0067  2869               	goto	u5180
  7302     0068                     u5181:
  7303     0068  285E               	goto	u5161
  7304     0069                     u5180:
  7305     0069                     l3921:
  7306     0069  1889               	btfsc	9,1	;volatile
  7307     006A  286C               	goto	u5191
  7308     006B  286D               	goto	u5190
  7309     006C                     u5191:
  7310     006C  285E               	goto	u5161
  7311     006D                     u5190:
  7312     006D                     l3923:
  7313                           
  7314                           ;main1.c: 228:             ilkAcilis = 0;
  7315     006D  1683               	bsf	3,5	;RP0=1, select bank3
  7316     006E  1703               	bsf	3,6	;RP1=1, select bank3
  7317     006F  0190               	clrf	main@ilkAcilis^(0+384)
  7318     0070  0191               	clrf	(main@ilkAcilis+1)^(0+384)
  7319     0071                     l207:	
  7320                           ;main1.c: 233:     }
  7321                           
  7322                           
  7323                           ;main1.c: 235: if( !RC3 && !RD0){
  7324     0071  1283               	bcf	3,5	;RP0=0, select bank0
  7325     0072  1303               	bcf	3,6	;RP1=0, select bank0
  7326     0073  1987               	btfsc	7,3	;volatile
  7327     0074  2876               	goto	u5201
  7328     0075  2879               	goto	u5200
  7329     0076                     u5201:
  7330     0076  120A  158A  2C23   	goto	l211
  7331     0079                     u5200:
  7332     0079                     l3925:
  7333     0079  1808               	btfsc	8,0	;volatile
  7334     007A  287C               	goto	u5211
  7335     007B  287D               	goto	u5210
  7336     007C                     u5211:
  7337     007C  2876               	goto	u5201
  7338     007D                     u5210:
  7339     007D                     l3927:
  7340                           
  7341                           ;main1.c: 242:    int dakika = readEEPROM(0x02);
  7342     007D  3002               	movlw	2
  7343     007E  00A0               	movwf	readEEPROM@address
  7344     007F  3000               	movlw	0
  7345     0080  00A1               	movwf	readEEPROM@address+1
  7346     0081  160A  118A  2198  120A  118A  	fcall	_readEEPROM
  7347     0086  1283               	bcf	3,5	;RP0=0, select bank0
  7348     0087  1303               	bcf	3,6	;RP1=0, select bank0
  7349     0088  0821               	movf	?_readEEPROM+1,w
  7350     0089  1683               	bsf	3,5	;RP0=1, select bank1
  7351     008A  1303               	bcf	3,6	;RP1=0, select bank1
  7352     008B  00E5               	movwf	(main@dakika+1)^(0+128)
  7353     008C  1283               	bcf	3,5	;RP0=0, select bank0
  7354     008D  1303               	bcf	3,6	;RP1=0, select bank0
  7355     008E  0820               	movf	?_readEEPROM,w
  7356     008F  1683               	bsf	3,5	;RP0=1, select bank1
  7357     0090  1303               	bcf	3,6	;RP1=0, select bank1
  7358     0091  00E4               	movwf	main@dakika^(0+128)
  7359     0092                     l3929:
  7360                           
  7361                           ;main1.c: 243:    int realSaat = readEEPROM(0x04)*255+readEEPROM(0x01);
  7362     0092  3004               	movlw	4
  7363     0093  1283               	bcf	3,5	;RP0=0, select bank0
  7364     0094  1303               	bcf	3,6	;RP1=0, select bank0
  7365     0095  00A0               	movwf	readEEPROM@address
  7366     0096  3000               	movlw	0
  7367     0097  00A1               	movwf	readEEPROM@address+1
  7368     0098  160A  118A  2198  120A  118A  	fcall	_readEEPROM
  7369     009D  1283               	bcf	3,5	;RP0=0, select bank0
  7370     009E  1303               	bcf	3,6	;RP1=0, select bank0
  7371     009F  0821               	movf	?_readEEPROM+1,w
  7372     00A0  00A5               	movwf	___wmul@multiplier+1
  7373     00A1  0820               	movf	?_readEEPROM,w
  7374     00A2  00A4               	movwf	___wmul@multiplier
  7375     00A3  30FF               	movlw	255
  7376     00A4  00A6               	movwf	___wmul@multiplicand
  7377     00A5  3000               	movlw	0
  7378     00A6  00A7               	movwf	___wmul@multiplicand+1
  7379     00A7  160A  118A  21FF  120A  118A  	fcall	___wmul
  7380     00AC  1283               	bcf	3,5	;RP0=0, select bank0
  7381     00AD  1303               	bcf	3,6	;RP1=0, select bank0
  7382     00AE  0824               	movf	?___wmul,w
  7383     00AF  00D4               	movwf	??_main
  7384     00B0  0825               	movf	?___wmul+1,w
  7385     00B1  00D5               	movwf	??_main+1
  7386     00B2  3001               	movlw	1
  7387     00B3  00A0               	movwf	readEEPROM@address
  7388     00B4  3000               	movlw	0
  7389     00B5  00A1               	movwf	readEEPROM@address+1
  7390     00B6  160A  118A  2198  120A  118A  	fcall	_readEEPROM
  7391     00BB  1283               	bcf	3,5	;RP0=0, select bank0
  7392     00BC  1303               	bcf	3,6	;RP1=0, select bank0
  7393     00BD  0820               	movf	?_readEEPROM,w
  7394     00BE  0754               	addwf	??_main,w
  7395     00BF  1683               	bsf	3,5	;RP0=1, select bank3
  7396     00C0  1703               	bsf	3,6	;RP1=1, select bank3
  7397     00C1  00A0               	movwf	main@realSaat^(0+384)
  7398     00C2  1283               	bcf	3,5	;RP0=0, select bank0
  7399     00C3  1303               	bcf	3,6	;RP1=0, select bank0
  7400     00C4  0821               	movf	?_readEEPROM+1,w
  7401     00C5  1803               	skipnc
  7402     00C6  0A21               	incf	?_readEEPROM+1,w
  7403     00C7  0755               	addwf	??_main+1,w
  7404     00C8  1683               	bsf	3,5	;RP0=1, select bank3
  7405     00C9  1703               	bsf	3,6	;RP1=1, select bank3
  7406     00CA  00A1               	movwf	(main@realSaat+1)^(0+384)
  7407     00CB                     l3931:
  7408                           
  7409                           ;main1.c: 245:         sprintf(lcdText, "%5uh %02um", realSaat, dakika);
  7410     00CB  3014               	movlw	low (STR_8| (0+32768))
  7411     00CC  1283               	bcf	3,5	;RP0=0, select bank0
  7412     00CD  1303               	bcf	3,6	;RP1=0, select bank0
  7413     00CE  00AC               	movwf	sprintf@f
  7414     00CF  3091               	movlw	high (STR_8| (0+32768))
  7415     00D0  00AD               	movwf	sprintf@f+1
  7416     00D1  1683               	bsf	3,5	;RP0=1, select bank3
  7417     00D2  1703               	bsf	3,6	;RP1=1, select bank3
  7418     00D3  0821               	movf	(main@realSaat+1)^(0+384),w
  7419     00D4  1283               	bcf	3,5	;RP0=0, select bank0
  7420     00D5  1303               	bcf	3,6	;RP1=0, select bank0
  7421     00D6  00AF               	movwf	?_sprintf+3
  7422     00D7  1683               	bsf	3,5	;RP0=1, select bank3
  7423     00D8  1703               	bsf	3,6	;RP1=1, select bank3
  7424     00D9  0820               	movf	main@realSaat^(0+384),w
  7425     00DA  1283               	bcf	3,5	;RP0=0, select bank0
  7426     00DB  1303               	bcf	3,6	;RP1=0, select bank0
  7427     00DC  00AE               	movwf	?_sprintf+2
  7428     00DD  1683               	bsf	3,5	;RP0=1, select bank1
  7429     00DE  1303               	bcf	3,6	;RP1=0, select bank1
  7430     00DF  0865               	movf	(main@dakika+1)^(0+128),w
  7431     00E0  1283               	bcf	3,5	;RP0=0, select bank0
  7432     00E1  1303               	bcf	3,6	;RP1=0, select bank0
  7433     00E2  00B1               	movwf	?_sprintf+5
  7434     00E3  1683               	bsf	3,5	;RP0=1, select bank1
  7435     00E4  1303               	bcf	3,6	;RP1=0, select bank1
  7436     00E5  0864               	movf	main@dakika^(0+128),w
  7437     00E6  1283               	bcf	3,5	;RP0=0, select bank0
  7438     00E7  1303               	bcf	3,6	;RP1=0, select bank0
  7439     00E8  00B0               	movwf	?_sprintf+4
  7440     00E9  30B4               	movlw	(low (main@lcdText| 0))& (0+255)
  7441     00EA  120A  118A  25BB  120A  118A  	fcall	_sprintf
  7442     00EF                     l3933:
  7443                           
  7444                           ;main1.c: 248: if ( ( realSaat % 500 == 0 && realSaat != 0
  7445     00EF  30F4               	movlw	244
  7446     00F0  1283               	bcf	3,5	;RP0=0, select bank0
  7447     00F1  1303               	bcf	3,6	;RP1=0, select bank0
  7448     00F2  00AA               	movwf	___awmod@divisor
  7449     00F3  3001               	movlw	1
  7450     00F4  00AB               	movwf	___awmod@divisor+1
  7451     00F5  1683               	bsf	3,5	;RP0=1, select bank3
  7452     00F6  1703               	bsf	3,6	;RP1=1, select bank3
  7453     00F7  0821               	movf	(main@realSaat+1)^(0+384),w
  7454     00F8  1283               	bcf	3,5	;RP0=0, select bank0
  7455     00F9  1303               	bcf	3,6	;RP1=0, select bank0
  7456     00FA  00AD               	movwf	___awmod@dividend+1
  7457     00FB  1683               	bsf	3,5	;RP0=1, select bank3
  7458     00FC  1703               	bsf	3,6	;RP1=1, select bank3
  7459     00FD  0820               	movf	main@realSaat^(0+384),w
  7460     00FE  1283               	bcf	3,5	;RP0=0, select bank0
  7461     00FF  1303               	bcf	3,6	;RP1=0, select bank0
  7462     0100  00AC               	movwf	___awmod@dividend
  7463     0101  160A  118A  23BF  120A  118A  	fcall	___awmod
  7464     0106  1283               	bcf	3,5	;RP0=0, select bank0
  7465     0107  1303               	bcf	3,6	;RP1=0, select bank0
  7466     0108  082A               	movf	?___awmod,w
  7467     0109  042B               	iorwf	?___awmod+1,w
  7468     010A  1D03               	btfss	3,2
  7469     010B  290D               	goto	u5221
  7470     010C  290E               	goto	u5220
  7471     010D                     u5221:
  7472     010D  2916               	goto	l3937
  7473     010E                     u5220:
  7474     010E                     l3935:
  7475     010E  1683               	bsf	3,5	;RP0=1, select bank3
  7476     010F  1703               	bsf	3,6	;RP1=1, select bank3
  7477     0110  0820               	movf	main@realSaat^(0+384),w
  7478     0111  0421               	iorwf	(main@realSaat+1)^(0+384),w
  7479     0112  1D03               	btfss	3,2
  7480     0113  2915               	goto	u5231
  7481     0114  2916               	goto	u5230
  7482     0115                     u5231:
  7483     0115  2966               	goto	l3945
  7484     0116                     u5230:
  7485     0116                     l3937:
  7486     0116  30F4               	movlw	244
  7487     0117  1283               	bcf	3,5	;RP0=0, select bank0
  7488     0118  1303               	bcf	3,6	;RP1=0, select bank0
  7489     0119  00AA               	movwf	___awmod@divisor
  7490     011A  3001               	movlw	1
  7491     011B  00AB               	movwf	___awmod@divisor+1
  7492     011C  1683               	bsf	3,5	;RP0=1, select bank3
  7493     011D  1703               	bsf	3,6	;RP1=1, select bank3
  7494     011E  0821               	movf	(main@realSaat+1)^(0+384),w
  7495     011F  1283               	bcf	3,5	;RP0=0, select bank0
  7496     0120  1303               	bcf	3,6	;RP1=0, select bank0
  7497     0121  00AD               	movwf	___awmod@dividend+1
  7498     0122  1683               	bsf	3,5	;RP0=1, select bank3
  7499     0123  1703               	bsf	3,6	;RP1=1, select bank3
  7500     0124  0820               	movf	main@realSaat^(0+384),w
  7501     0125  1283               	bcf	3,5	;RP0=0, select bank0
  7502     0126  1303               	bcf	3,6	;RP1=0, select bank0
  7503     0127  00AC               	movwf	___awmod@dividend
  7504     0128  160A  118A  23BF  120A  118A  	fcall	___awmod
  7505     012D  1283               	bcf	3,5	;RP0=0, select bank0
  7506     012E  1303               	bcf	3,6	;RP1=0, select bank0
  7507     012F  032A               	decf	?___awmod,w
  7508     0130  042B               	iorwf	?___awmod+1,w
  7509     0131  1D03               	btfss	3,2
  7510     0132  2934               	goto	u5241
  7511     0133  2935               	goto	u5240
  7512     0134                     u5241:
  7513     0134  293D               	goto	l3941
  7514     0135                     u5240:
  7515     0135                     l3939:
  7516     0135  1683               	bsf	3,5	;RP0=1, select bank3
  7517     0136  1703               	bsf	3,6	;RP1=1, select bank3
  7518     0137  0320               	decf	main@realSaat^(0+384),w
  7519     0138  0421               	iorwf	(main@realSaat+1)^(0+384),w
  7520     0139  1D03               	btfss	3,2
  7521     013A  293C               	goto	u5251
  7522     013B  293D               	goto	u5250
  7523     013C                     u5251:
  7524     013C  2966               	goto	l3945
  7525     013D                     u5250:
  7526     013D                     l3941:
  7527     013D  30F4               	movlw	244
  7528     013E  1283               	bcf	3,5	;RP0=0, select bank0
  7529     013F  1303               	bcf	3,6	;RP1=0, select bank0
  7530     0140  00AA               	movwf	___awmod@divisor
  7531     0141  3001               	movlw	1
  7532     0142  00AB               	movwf	___awmod@divisor+1
  7533     0143  1683               	bsf	3,5	;RP0=1, select bank3
  7534     0144  1703               	bsf	3,6	;RP1=1, select bank3
  7535     0145  0821               	movf	(main@realSaat+1)^(0+384),w
  7536     0146  1283               	bcf	3,5	;RP0=0, select bank0
  7537     0147  1303               	bcf	3,6	;RP1=0, select bank0
  7538     0148  00AD               	movwf	___awmod@dividend+1
  7539     0149  1683               	bsf	3,5	;RP0=1, select bank3
  7540     014A  1703               	bsf	3,6	;RP1=1, select bank3
  7541     014B  0820               	movf	main@realSaat^(0+384),w
  7542     014C  1283               	bcf	3,5	;RP0=0, select bank0
  7543     014D  1303               	bcf	3,6	;RP1=0, select bank0
  7544     014E  00AC               	movwf	___awmod@dividend
  7545     014F  160A  118A  23BF  120A  118A  	fcall	___awmod
  7546     0154  3002               	movlw	2
  7547     0155  1283               	bcf	3,5	;RP0=0, select bank0
  7548     0156  1303               	bcf	3,6	;RP1=0, select bank0
  7549     0157  062A               	xorwf	?___awmod,w
  7550     0158  042B               	iorwf	?___awmod+1,w
  7551     0159  1D03               	btfss	3,2
  7552     015A  295C               	goto	u5261
  7553     015B  295D               	goto	u5260
  7554     015C                     u5261:
  7555     015C  2971               	goto	l3949
  7556     015D                     u5260:
  7557     015D                     l3943:
  7558     015D  3002               	movlw	2
  7559     015E  1683               	bsf	3,5	;RP0=1, select bank3
  7560     015F  1703               	bsf	3,6	;RP1=1, select bank3
  7561     0160  0620               	xorwf	main@realSaat^(0+384),w
  7562     0161  0421               	iorwf	(main@realSaat+1)^(0+384),w
  7563     0162  1903               	btfsc	3,2
  7564     0163  2965               	goto	u5271
  7565     0164  2966               	goto	u5270
  7566     0165                     u5271:
  7567     0165  2971               	goto	l3949
  7568     0166                     u5270:
  7569     0166                     l3945:
  7570     0166  0828               	movf	(_currentTime^(0+384)+4),w
  7571     0167  0429               	iorwf	((_currentTime+1)^(0+384)+4),w
  7572     0168  1D03               	btfss	3,2
  7573     0169  296B               	goto	u5281
  7574     016A  296C               	goto	u5280
  7575     016B                     u5281:
  7576     016B  2971               	goto	l3949
  7577     016C                     u5280:
  7578     016C                     l3947:
  7579                           
  7580                           ;main1.c: 251:      ) && currentTime.minutes == 0 ) {;main1.c: 252:     yagBakim();
  7581     016C  160A  118A  236D  120A  118A  	fcall	_yagBakim
  7582     0171                     l3949:
  7583                           
  7584                           ;main1.c: 256:      Lcd_Set_Cursor(1, 10);
  7585     0171  300A               	movlw	10
  7586     0172  1283               	bcf	3,5	;RP0=0, select bank0
  7587     0173  1303               	bcf	3,6	;RP1=0, select bank0
  7588     0174  00A4               	movwf	Lcd_Set_Cursor@b
  7589     0175  3001               	movlw	1
  7590     0176  120A  118A  27B2  120A  118A  	fcall	_Lcd_Set_Cursor
  7591     017B                     l3951:
  7592                           
  7593                           ;main1.c: 257:      Lcd_Write_String("  ");
  7594     017B  30D9               	movlw	low ((STR_18+12)| (0+32768))
  7595     017C  1283               	bcf	3,5	;RP0=0, select bank0
  7596     017D  1303               	bcf	3,6	;RP1=0, select bank0
  7597     017E  00A5               	movwf	Lcd_Write_String@a
  7598     017F  3090               	movlw	high ((STR_18+12)| (0+32768))
  7599     0180  00A6               	movwf	Lcd_Write_String@a+1
  7600     0181  160A  118A  2327  120A  118A  	fcall	_Lcd_Write_String
  7601                           
  7602                           ;main1.c: 258:      Lcd_Set_Cursor(1, 11);
  7603     0186  300B               	movlw	11
  7604     0187  1283               	bcf	3,5	;RP0=0, select bank0
  7605     0188  1303               	bcf	3,6	;RP1=0, select bank0
  7606     0189  00A4               	movwf	Lcd_Set_Cursor@b
  7607     018A  3001               	movlw	1
  7608     018B  120A  118A  27B2  120A  118A  	fcall	_Lcd_Set_Cursor
  7609     0190                     l3953:
  7610                           
  7611                           ;main1.c: 259:      Lcd_Write_String(lcdText);
  7612     0190  30B4               	movlw	(low (main@lcdText| 0))& (0+255)
  7613     0191  1283               	bcf	3,5	;RP0=0, select bank0
  7614     0192  1303               	bcf	3,6	;RP1=0, select bank0
  7615     0193  00A5               	movwf	Lcd_Write_String@a
  7616     0194  3000               	movlw	0
  7617     0195  00A6               	movwf	Lcd_Write_String@a+1
  7618     0196  160A  118A  2327  120A  118A  	fcall	_Lcd_Write_String
  7619     019B                     l3955:
  7620                           
  7621                           ;main1.c: 263:     ADCON0bits.CHS = 0b0010;
  7622     019B  1283               	bcf	3,5	;RP0=0, select bank0
  7623     019C  1303               	bcf	3,6	;RP1=0, select bank0
  7624     019D  081F               	movf	31,w	;volatile
  7625     019E  39C7               	andlw	-57
  7626     019F  3810               	iorlw	16
  7627     01A0  009F               	movwf	31	;volatile
  7628     01A1                     l3957:
  7629                           
  7630                           ;main1.c: 264:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  7631     01A1  300F               	movlw	15
  7632     01A2  1283               	bcf	3,5	;RP0=0, select bank0
  7633     01A3  1303               	bcf	3,6	;RP1=0, select bank0
  7634     01A4  00D4               	movwf	??_main
  7635     01A5                     u5657:
  7636     01A5  0BD4               	decfsz	??_main,f
  7637     01A6  29A5               	goto	u5657
  7638     01A7  29A8               	nop2
  7639     01A8                     l3959:
  7640                           
  7641                           ;main1.c: 265:     ADCON0bits.GO = 1;
  7642     01A8  1283               	bcf	3,5	;RP0=0, select bank0
  7643     01A9  1303               	bcf	3,6	;RP1=0, select bank0
  7644     01AA  151F               	bsf	31,2	;volatile
  7645     01AB                     l219:	
  7646                           ;main1.c: 266:     while (ADCON0bits.GO);
  7647                           
  7648     01AB  191F               	btfsc	31,2	;volatile
  7649     01AC  29AE               	goto	u5291
  7650     01AD  29AF               	goto	u5290
  7651     01AE                     u5291:
  7652     01AE  29AB               	goto	l219
  7653     01AF                     u5290:
  7654     01AF                     l3961:
  7655                           
  7656                           ;main1.c: 267:     adcValue3 = (ADRESH << 8) | ADRESL;
  7657     01AF  1683               	bsf	3,5	;RP0=1, select bank1
  7658     01B0  1303               	bcf	3,6	;RP1=0, select bank1
  7659     01B1  081E               	movf	30,w	;volatile
  7660     01B2  1283               	bcf	3,5	;RP0=0, select bank0
  7661     01B3  1303               	bcf	3,6	;RP1=0, select bank0
  7662     01B4  00D4               	movwf	??_main
  7663     01B5  01D5               	clrf	??_main+1
  7664     01B6  081E               	movf	30,w	;volatile
  7665     01B7  00D6               	movwf	??_main+2
  7666     01B8  01D7               	clrf	??_main+3
  7667     01B9  0856               	movf	??_main+2,w
  7668     01BA  00D7               	movwf	??_main+3
  7669     01BB  01D6               	clrf	??_main+2
  7670     01BC  0854               	movf	??_main,w
  7671     01BD  0456               	iorwf	??_main+2,w
  7672     01BE  00A0               	movwf	___xxtofl@val
  7673     01BF  0855               	movf	??_main+1,w
  7674     01C0  0457               	iorwf	??_main+3,w
  7675     01C1  00A1               	movwf	___xxtofl@val+1
  7676     01C2  01A2               	clrf	___xxtofl@val+2
  7677     01C3  1BA1               	btfsc	___xxtofl@val+1,7
  7678     01C4  03A2               	decf	___xxtofl@val+2,f
  7679     01C5  0822               	movf	___xxtofl@val+2,w
  7680     01C6  00A3               	movwf	___xxtofl@val+3
  7681     01C7  3001               	movlw	1
  7682     01C8  160A  118A  2628  120A  118A  	fcall	___xxtofl
  7683     01CD  1283               	bcf	3,5	;RP0=0, select bank0
  7684     01CE  1303               	bcf	3,6	;RP1=0, select bank0
  7685     01CF  0823               	movf	?___xxtofl+3,w
  7686     01D0  1683               	bsf	3,5	;RP0=1, select bank1
  7687     01D1  1303               	bcf	3,6	;RP1=0, select bank1
  7688     01D2  00D0               	movwf	(main@adcValue3+3)^(0+128)
  7689     01D3  1283               	bcf	3,5	;RP0=0, select bank0
  7690     01D4  1303               	bcf	3,6	;RP1=0, select bank0
  7691     01D5  0822               	movf	?___xxtofl+2,w
  7692     01D6  1683               	bsf	3,5	;RP0=1, select bank1
  7693     01D7  1303               	bcf	3,6	;RP1=0, select bank1
  7694     01D8  00CF               	movwf	(main@adcValue3+2)^(0+128)
  7695     01D9  1283               	bcf	3,5	;RP0=0, select bank0
  7696     01DA  1303               	bcf	3,6	;RP1=0, select bank0
  7697     01DB  0821               	movf	?___xxtofl+1,w
  7698     01DC  1683               	bsf	3,5	;RP0=1, select bank1
  7699     01DD  1303               	bcf	3,6	;RP1=0, select bank1
  7700     01DE  00CE               	movwf	(main@adcValue3+1)^(0+128)
  7701     01DF  1283               	bcf	3,5	;RP0=0, select bank0
  7702     01E0  1303               	bcf	3,6	;RP1=0, select bank0
  7703     01E1  0820               	movf	?___xxtofl,w
  7704     01E2  1683               	bsf	3,5	;RP0=1, select bank1
  7705     01E3  1303               	bcf	3,6	;RP1=0, select bank1
  7706     01E4  00CD               	movwf	main@adcValue3^(0+128)
  7707                           
  7708                           ;main1.c: 268:     float oranValue = adcValue3/1024.0;
  7709     01E5  3044               	movlw	68
  7710     01E6  1283               	bcf	3,5	;RP0=0, select bank0
  7711     01E7  1303               	bcf	3,6	;RP1=0, select bank0
  7712     01E8  00A3               	movwf	___fldiv@a+3
  7713     01E9  3080               	movlw	128
  7714     01EA  00A2               	movwf	___fldiv@a+2
  7715     01EB  3000               	movlw	0
  7716     01EC  00A1               	movwf	___fldiv@a+1
  7717     01ED  3000               	movlw	0
  7718     01EE  00A0               	movwf	___fldiv@a
  7719     01EF  1683               	bsf	3,5	;RP0=1, select bank1
  7720     01F0  1303               	bcf	3,6	;RP1=0, select bank1
  7721     01F1  0850               	movf	(main@adcValue3+3)^(0+128),w
  7722     01F2  1283               	bcf	3,5	;RP0=0, select bank0
  7723     01F3  1303               	bcf	3,6	;RP1=0, select bank0
  7724     01F4  00A7               	movwf	___fldiv@b+3
  7725     01F5  1683               	bsf	3,5	;RP0=1, select bank1
  7726     01F6  1303               	bcf	3,6	;RP1=0, select bank1
  7727     01F7  084F               	movf	(main@adcValue3+2)^(0+128),w
  7728     01F8  1283               	bcf	3,5	;RP0=0, select bank0
  7729     01F9  1303               	bcf	3,6	;RP1=0, select bank0
  7730     01FA  00A6               	movwf	___fldiv@b+2
  7731     01FB  1683               	bsf	3,5	;RP0=1, select bank1
  7732     01FC  1303               	bcf	3,6	;RP1=0, select bank1
  7733     01FD  084E               	movf	(main@adcValue3+1)^(0+128),w
  7734     01FE  1283               	bcf	3,5	;RP0=0, select bank0
  7735     01FF  1303               	bcf	3,6	;RP1=0, select bank0
  7736     0200  00A5               	movwf	___fldiv@b+1
  7737     0201  1683               	bsf	3,5	;RP0=1, select bank1
  7738     0202  1303               	bcf	3,6	;RP1=0, select bank1
  7739     0203  084D               	movf	main@adcValue3^(0+128),w
  7740     0204  1283               	bcf	3,5	;RP0=0, select bank0
  7741     0205  1303               	bcf	3,6	;RP1=0, select bank0
  7742     0206  00A4               	movwf	___fldiv@b
  7743     0207  120A  158A  202D  120A  118A  	fcall	___fldiv
  7744     020C  1283               	bcf	3,5	;RP0=0, select bank0
  7745     020D  1303               	bcf	3,6	;RP1=0, select bank0
  7746     020E  0823               	movf	?___fldiv+3,w
  7747     020F  1683               	bsf	3,5	;RP0=1, select bank1
  7748     0210  1303               	bcf	3,6	;RP1=0, select bank1
  7749     0211  00D4               	movwf	(main@oranValue+3)^(0+128)
  7750     0212  1283               	bcf	3,5	;RP0=0, select bank0
  7751     0213  1303               	bcf	3,6	;RP1=0, select bank0
  7752     0214  0822               	movf	?___fldiv+2,w
  7753     0215  1683               	bsf	3,5	;RP0=1, select bank1
  7754     0216  1303               	bcf	3,6	;RP1=0, select bank1
  7755     0217  00D3               	movwf	(main@oranValue+2)^(0+128)
  7756     0218  1283               	bcf	3,5	;RP0=0, select bank0
  7757     0219  1303               	bcf	3,6	;RP1=0, select bank0
  7758     021A  0821               	movf	?___fldiv+1,w
  7759     021B  1683               	bsf	3,5	;RP0=1, select bank1
  7760     021C  1303               	bcf	3,6	;RP1=0, select bank1
  7761     021D  00D2               	movwf	(main@oranValue+1)^(0+128)
  7762     021E  1283               	bcf	3,5	;RP0=0, select bank0
  7763     021F  1303               	bcf	3,6	;RP1=0, select bank0
  7764     0220  0820               	movf	?___fldiv,w
  7765     0221  1683               	bsf	3,5	;RP0=1, select bank1
  7766     0222  1303               	bcf	3,6	;RP1=0, select bank1
  7767     0223  00D1               	movwf	main@oranValue^(0+128)
  7768     0224                     l3963:
  7769                           
  7770                           ;main1.c: 271:     ADCON0bits.CHS = 0b0011;
  7771     0224  1283               	bcf	3,5	;RP0=0, select bank0
  7772     0225  1303               	bcf	3,6	;RP1=0, select bank0
  7773     0226  081F               	movf	31,w	;volatile
  7774     0227  39C7               	andlw	-57
  7775     0228  3818               	iorlw	24
  7776     0229  009F               	movwf	31	;volatile
  7777     022A                     l3965:
  7778                           
  7779                           ;main1.c: 272:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  7780     022A  300F               	movlw	15
  7781     022B  1283               	bcf	3,5	;RP0=0, select bank0
  7782     022C  1303               	bcf	3,6	;RP1=0, select bank0
  7783     022D  00D4               	movwf	??_main
  7784     022E                     u5667:
  7785     022E  0BD4               	decfsz	??_main,f
  7786     022F  2A2E               	goto	u5667
  7787     0230  2A31               	nop2
  7788     0231                     l3967:
  7789                           
  7790                           ;main1.c: 273:     ADCON0bits.GO = 1;
  7791     0231  1283               	bcf	3,5	;RP0=0, select bank0
  7792     0232  1303               	bcf	3,6	;RP1=0, select bank0
  7793     0233  151F               	bsf	31,2	;volatile
  7794     0234                     l222:	
  7795                           ;main1.c: 274:     while (ADCON0bits.GO);
  7796                           
  7797     0234  191F               	btfsc	31,2	;volatile
  7798     0235  2A37               	goto	u5301
  7799     0236  2A38               	goto	u5300
  7800     0237                     u5301:
  7801     0237  2A34               	goto	l222
  7802     0238                     u5300:
  7803     0238                     l3969:
  7804                           
  7805                           ;main1.c: 275:     adcValue2 = (ADRESH << 8) | ADRESL;
  7806     0238  081E               	movf	30,w	;volatile
  7807     0239  1683               	bsf	3,5	;RP0=1, select bank1
  7808     023A  1303               	bcf	3,6	;RP1=0, select bank1
  7809     023B  00E3               	movwf	(main@adcValue2+1)^(0+128)
  7810     023C  081E               	movf	30,w	;volatile
  7811     023D  00E2               	movwf	main@adcValue2^(0+128)
  7812     023E                     l3971:
  7813                           
  7814                           ;main1.c: 277:     float integerPart = adcValue2*oranValue*3;
  7815     023E  0854               	movf	(main@oranValue+3)^(0+128),w
  7816     023F  1283               	bcf	3,5	;RP0=0, select bank0
  7817     0240  1303               	bcf	3,6	;RP1=0, select bank0
  7818     0241  00BD               	movwf	___flmul@b+3
  7819     0242  1683               	bsf	3,5	;RP0=1, select bank1
  7820     0243  1303               	bcf	3,6	;RP1=0, select bank1
  7821     0244  0853               	movf	(main@oranValue+2)^(0+128),w
  7822     0245  1283               	bcf	3,5	;RP0=0, select bank0
  7823     0246  1303               	bcf	3,6	;RP1=0, select bank0
  7824     0247  00BC               	movwf	___flmul@b+2
  7825     0248  1683               	bsf	3,5	;RP0=1, select bank1
  7826     0249  1303               	bcf	3,6	;RP1=0, select bank1
  7827     024A  0852               	movf	(main@oranValue+1)^(0+128),w
  7828     024B  1283               	bcf	3,5	;RP0=0, select bank0
  7829     024C  1303               	bcf	3,6	;RP1=0, select bank0
  7830     024D  00BB               	movwf	___flmul@b+1
  7831     024E  1683               	bsf	3,5	;RP0=1, select bank1
  7832     024F  1303               	bcf	3,6	;RP1=0, select bank1
  7833     0250  0851               	movf	main@oranValue^(0+128),w
  7834     0251  1283               	bcf	3,5	;RP0=0, select bank0
  7835     0252  1303               	bcf	3,6	;RP1=0, select bank0
  7836     0253  00BA               	movwf	___flmul@b
  7837     0254  1683               	bsf	3,5	;RP0=1, select bank1
  7838     0255  1303               	bcf	3,6	;RP1=0, select bank1
  7839     0256  0862               	movf	main@adcValue2^(0+128),w
  7840     0257  1283               	bcf	3,5	;RP0=0, select bank0
  7841     0258  1303               	bcf	3,6	;RP1=0, select bank0
  7842     0259  00A0               	movwf	___xxtofl@val
  7843     025A  1683               	bsf	3,5	;RP0=1, select bank1
  7844     025B  1303               	bcf	3,6	;RP1=0, select bank1
  7845     025C  0863               	movf	(main@adcValue2+1)^(0+128),w
  7846     025D  1283               	bcf	3,5	;RP0=0, select bank0
  7847     025E  1303               	bcf	3,6	;RP1=0, select bank0
  7848     025F  00A1               	movwf	___xxtofl@val+1
  7849     0260  3000               	movlw	0
  7850     0261  1BA1               	btfsc	___xxtofl@val+1,7
  7851     0262  30FF               	movlw	255
  7852     0263  00A2               	movwf	___xxtofl@val+2
  7853     0264  00A3               	movwf	___xxtofl@val+3
  7854     0265  3001               	movlw	1
  7855     0266  160A  118A  2628  120A  118A  	fcall	___xxtofl
  7856     026B  1283               	bcf	3,5	;RP0=0, select bank0
  7857     026C  1303               	bcf	3,6	;RP1=0, select bank0
  7858     026D  0823               	movf	?___xxtofl+3,w
  7859     026E  00C1               	movwf	___flmul@a+3
  7860     026F  0822               	movf	?___xxtofl+2,w
  7861     0270  00C0               	movwf	___flmul@a+2
  7862     0271  0821               	movf	?___xxtofl+1,w
  7863     0272  00BF               	movwf	___flmul@a+1
  7864     0273  0820               	movf	?___xxtofl,w
  7865     0274  00BE               	movwf	___flmul@a
  7866     0275  120A  158A  24BB  120A  118A  	fcall	___flmul
  7867     027A  1283               	bcf	3,5	;RP0=0, select bank0
  7868     027B  1303               	bcf	3,6	;RP1=0, select bank0
  7869     027C  083D               	movf	?___flmul+3,w
  7870     027D  1683               	bsf	3,5	;RP0=1, select bank1
  7871     027E  1303               	bcf	3,6	;RP1=0, select bank1
  7872     027F  00DC               	movwf	(_main$1027+3)^(0+128)
  7873     0280  1283               	bcf	3,5	;RP0=0, select bank0
  7874     0281  1303               	bcf	3,6	;RP1=0, select bank0
  7875     0282  083C               	movf	?___flmul+2,w
  7876     0283  1683               	bsf	3,5	;RP0=1, select bank1
  7877     0284  1303               	bcf	3,6	;RP1=0, select bank1
  7878     0285  00DB               	movwf	(_main$1027+2)^(0+128)
  7879     0286  1283               	bcf	3,5	;RP0=0, select bank0
  7880     0287  1303               	bcf	3,6	;RP1=0, select bank0
  7881     0288  083B               	movf	?___flmul+1,w
  7882     0289  1683               	bsf	3,5	;RP0=1, select bank1
  7883     028A  1303               	bcf	3,6	;RP1=0, select bank1
  7884     028B  00DA               	movwf	(_main$1027+1)^(0+128)
  7885     028C  1283               	bcf	3,5	;RP0=0, select bank0
  7886     028D  1303               	bcf	3,6	;RP1=0, select bank0
  7887     028E  083A               	movf	?___flmul,w
  7888     028F  1683               	bsf	3,5	;RP0=1, select bank1
  7889     0290  1303               	bcf	3,6	;RP1=0, select bank1
  7890     0291  00D9               	movwf	_main$1027^(0+128)
  7891     0292                     l3973:
  7892                           
  7893                           ;main1.c: 277:     float integerPart = adcValue2*oranValue*3;
  7894     0292  3040               	movlw	64
  7895     0293  1283               	bcf	3,5	;RP0=0, select bank0
  7896     0294  1303               	bcf	3,6	;RP1=0, select bank0
  7897     0295  00BD               	movwf	___flmul@b+3
  7898     0296  3040               	movlw	64
  7899     0297  00BC               	movwf	___flmul@b+2
  7900     0298  3000               	movlw	0
  7901     0299  00BB               	movwf	___flmul@b+1
  7902     029A  3000               	movlw	0
  7903     029B  00BA               	movwf	___flmul@b
  7904     029C  1683               	bsf	3,5	;RP0=1, select bank1
  7905     029D  1303               	bcf	3,6	;RP1=0, select bank1
  7906     029E  085C               	movf	(_main$1027+3)^(0+128),w
  7907     029F  1283               	bcf	3,5	;RP0=0, select bank0
  7908     02A0  1303               	bcf	3,6	;RP1=0, select bank0
  7909     02A1  00C1               	movwf	___flmul@a+3
  7910     02A2  1683               	bsf	3,5	;RP0=1, select bank1
  7911     02A3  1303               	bcf	3,6	;RP1=0, select bank1
  7912     02A4  085B               	movf	(_main$1027+2)^(0+128),w
  7913     02A5  1283               	bcf	3,5	;RP0=0, select bank0
  7914     02A6  1303               	bcf	3,6	;RP1=0, select bank0
  7915     02A7  00C0               	movwf	___flmul@a+2
  7916     02A8  1683               	bsf	3,5	;RP0=1, select bank1
  7917     02A9  1303               	bcf	3,6	;RP1=0, select bank1
  7918     02AA  085A               	movf	(_main$1027+1)^(0+128),w
  7919     02AB  1283               	bcf	3,5	;RP0=0, select bank0
  7920     02AC  1303               	bcf	3,6	;RP1=0, select bank0
  7921     02AD  00BF               	movwf	___flmul@a+1
  7922     02AE  1683               	bsf	3,5	;RP0=1, select bank1
  7923     02AF  1303               	bcf	3,6	;RP1=0, select bank1
  7924     02B0  0859               	movf	_main$1027^(0+128),w
  7925     02B1  1283               	bcf	3,5	;RP0=0, select bank0
  7926     02B2  1303               	bcf	3,6	;RP1=0, select bank0
  7927     02B3  00BE               	movwf	___flmul@a
  7928     02B4  120A  158A  24BB  120A  118A  	fcall	___flmul
  7929     02B9  1283               	bcf	3,5	;RP0=0, select bank0
  7930     02BA  1303               	bcf	3,6	;RP1=0, select bank0
  7931     02BB  083D               	movf	?___flmul+3,w
  7932     02BC  1683               	bsf	3,5	;RP0=1, select bank3
  7933     02BD  1703               	bsf	3,6	;RP1=1, select bank3
  7934     02BE  009D               	movwf	(main@integerPart+3)^(0+384)
  7935     02BF  1283               	bcf	3,5	;RP0=0, select bank0
  7936     02C0  1303               	bcf	3,6	;RP1=0, select bank0
  7937     02C1  083C               	movf	?___flmul+2,w
  7938     02C2  1683               	bsf	3,5	;RP0=1, select bank3
  7939     02C3  1703               	bsf	3,6	;RP1=1, select bank3
  7940     02C4  009C               	movwf	(main@integerPart+2)^(0+384)
  7941     02C5  1283               	bcf	3,5	;RP0=0, select bank0
  7942     02C6  1303               	bcf	3,6	;RP1=0, select bank0
  7943     02C7  083B               	movf	?___flmul+1,w
  7944     02C8  1683               	bsf	3,5	;RP0=1, select bank3
  7945     02C9  1703               	bsf	3,6	;RP1=1, select bank3
  7946     02CA  009B               	movwf	(main@integerPart+1)^(0+384)
  7947     02CB  1283               	bcf	3,5	;RP0=0, select bank0
  7948     02CC  1303               	bcf	3,6	;RP1=0, select bank0
  7949     02CD  083A               	movf	?___flmul,w
  7950     02CE  1683               	bsf	3,5	;RP0=1, select bank3
  7951     02CF  1703               	bsf	3,6	;RP1=1, select bank3
  7952     02D0  009A               	movwf	main@integerPart^(0+384)
  7953     02D1                     l3975:
  7954                           
  7955                           ;main1.c: 279:     int binler = (int)integerPart/1000;
  7956     02D1  30E8               	movlw	232
  7957     02D2  1283               	bcf	3,5	;RP0=0, select bank0
  7958     02D3  1303               	bcf	3,6	;RP1=0, select bank0
  7959     02D4  00AA               	movwf	___awdiv@divisor
  7960     02D5  3003               	movlw	3
  7961     02D6  00AB               	movwf	___awdiv@divisor+1
  7962     02D7  1683               	bsf	3,5	;RP0=1, select bank3
  7963     02D8  1703               	bsf	3,6	;RP1=1, select bank3
  7964     02D9  081D               	movf	(main@integerPart+3)^(0+384),w
  7965     02DA  1283               	bcf	3,5	;RP0=0, select bank0
  7966     02DB  1303               	bcf	3,6	;RP1=0, select bank0
  7967     02DC  00A3               	movwf	___fltol@f1+3
  7968     02DD  1683               	bsf	3,5	;RP0=1, select bank3
  7969     02DE  1703               	bsf	3,6	;RP1=1, select bank3
  7970     02DF  081C               	movf	(main@integerPart+2)^(0+384),w
  7971     02E0  1283               	bcf	3,5	;RP0=0, select bank0
  7972     02E1  1303               	bcf	3,6	;RP1=0, select bank0
  7973     02E2  00A2               	movwf	___fltol@f1+2
  7974     02E3  1683               	bsf	3,5	;RP0=1, select bank3
  7975     02E4  1703               	bsf	3,6	;RP1=1, select bank3
  7976     02E5  081B               	movf	(main@integerPart+1)^(0+384),w
  7977     02E6  1283               	bcf	3,5	;RP0=0, select bank0
  7978     02E7  1303               	bcf	3,6	;RP1=0, select bank0
  7979     02E8  00A1               	movwf	___fltol@f1+1
  7980     02E9  1683               	bsf	3,5	;RP0=1, select bank3
  7981     02EA  1703               	bsf	3,6	;RP1=1, select bank3
  7982     02EB  081A               	movf	main@integerPart^(0+384),w
  7983     02EC  1283               	bcf	3,5	;RP0=0, select bank0
  7984     02ED  1303               	bcf	3,6	;RP1=0, select bank0
  7985     02EE  00A0               	movwf	___fltol@f1
  7986     02EF  160A  118A  25B0  120A  118A  	fcall	___fltol
  7987     02F4  1283               	bcf	3,5	;RP0=0, select bank0
  7988     02F5  1303               	bcf	3,6	;RP1=0, select bank0
  7989     02F6  0821               	movf	?___fltol+1,w
  7990     02F7  00AD               	movwf	___awdiv@dividend+1
  7991     02F8  0820               	movf	?___fltol,w
  7992     02F9  00AC               	movwf	___awdiv@dividend
  7993     02FA  160A  118A  2547  120A  118A  	fcall	___awdiv
  7994     02FF  1283               	bcf	3,5	;RP0=0, select bank0
  7995     0300  1303               	bcf	3,6	;RP1=0, select bank0
  7996     0301  082B               	movf	?___awdiv+1,w
  7997     0302  1683               	bsf	3,5	;RP0=1, select bank3
  7998     0303  1703               	bsf	3,6	;RP1=1, select bank3
  7999     0304  0099               	movwf	(main@binler+1)^(0+384)
  8000     0305  1283               	bcf	3,5	;RP0=0, select bank0
  8001     0306  1303               	bcf	3,6	;RP1=0, select bank0
  8002     0307  082A               	movf	?___awdiv,w
  8003     0308  1683               	bsf	3,5	;RP0=1, select bank3
  8004     0309  1703               	bsf	3,6	;RP1=1, select bank3
  8005     030A  0098               	movwf	main@binler^(0+384)
  8006     030B                     l3977:
  8007                           
  8008                           ;main1.c: 280:     int yuzler = ((int)integerPart-binler*1000)/100;
  8009     030B  3064               	movlw	100
  8010     030C  1283               	bcf	3,5	;RP0=0, select bank0
  8011     030D  1303               	bcf	3,6	;RP1=0, select bank0
  8012     030E  00AA               	movwf	___awdiv@divisor
  8013     030F  3000               	movlw	0
  8014     0310  00AB               	movwf	___awdiv@divisor+1
  8015     0311  1683               	bsf	3,5	;RP0=1, select bank3
  8016     0312  1703               	bsf	3,6	;RP1=1, select bank3
  8017     0313  081D               	movf	(main@integerPart+3)^(0+384),w
  8018     0314  1283               	bcf	3,5	;RP0=0, select bank0
  8019     0315  1303               	bcf	3,6	;RP1=0, select bank0
  8020     0316  00A3               	movwf	___fltol@f1+3
  8021     0317  1683               	bsf	3,5	;RP0=1, select bank3
  8022     0318  1703               	bsf	3,6	;RP1=1, select bank3
  8023     0319  081C               	movf	(main@integerPart+2)^(0+384),w
  8024     031A  1283               	bcf	3,5	;RP0=0, select bank0
  8025     031B  1303               	bcf	3,6	;RP1=0, select bank0
  8026     031C  00A2               	movwf	___fltol@f1+2
  8027     031D  1683               	bsf	3,5	;RP0=1, select bank3
  8028     031E  1703               	bsf	3,6	;RP1=1, select bank3
  8029     031F  081B               	movf	(main@integerPart+1)^(0+384),w
  8030     0320  1283               	bcf	3,5	;RP0=0, select bank0
  8031     0321  1303               	bcf	3,6	;RP1=0, select bank0
  8032     0322  00A1               	movwf	___fltol@f1+1
  8033     0323  1683               	bsf	3,5	;RP0=1, select bank3
  8034     0324  1703               	bsf	3,6	;RP1=1, select bank3
  8035     0325  081A               	movf	main@integerPart^(0+384),w
  8036     0326  1283               	bcf	3,5	;RP0=0, select bank0
  8037     0327  1303               	bcf	3,6	;RP1=0, select bank0
  8038     0328  00A0               	movwf	___fltol@f1
  8039     0329  160A  118A  25B0  120A  118A  	fcall	___fltol
  8040     032E  1283               	bcf	3,5	;RP0=0, select bank0
  8041     032F  1303               	bcf	3,6	;RP1=0, select bank0
  8042     0330  0820               	movf	?___fltol,w
  8043     0331  00D4               	movwf	??_main
  8044     0332  0821               	movf	?___fltol+1,w
  8045     0333  00D5               	movwf	??_main+1
  8046     0334  0822               	movf	?___fltol+2,w
  8047     0335  00D6               	movwf	??_main+2
  8048     0336  0823               	movf	?___fltol+3,w
  8049     0337  00D7               	movwf	??_main+3
  8050     0338  1683               	bsf	3,5	;RP0=1, select bank3
  8051     0339  1703               	bsf	3,6	;RP1=1, select bank3
  8052     033A  0819               	movf	(main@binler+1)^(0+384),w
  8053     033B  1283               	bcf	3,5	;RP0=0, select bank0
  8054     033C  1303               	bcf	3,6	;RP1=0, select bank0
  8055     033D  00A5               	movwf	___wmul@multiplier+1
  8056     033E  1683               	bsf	3,5	;RP0=1, select bank3
  8057     033F  1703               	bsf	3,6	;RP1=1, select bank3
  8058     0340  0818               	movf	main@binler^(0+384),w
  8059     0341  1283               	bcf	3,5	;RP0=0, select bank0
  8060     0342  1303               	bcf	3,6	;RP1=0, select bank0
  8061     0343  00A4               	movwf	___wmul@multiplier
  8062     0344  3018               	movlw	24
  8063     0345  00A6               	movwf	___wmul@multiplicand
  8064     0346  30FC               	movlw	252
  8065     0347  00A7               	movwf	___wmul@multiplicand+1
  8066     0348  160A  118A  21FF  120A  118A  	fcall	___wmul
  8067     034D  1283               	bcf	3,5	;RP0=0, select bank0
  8068     034E  1303               	bcf	3,6	;RP1=0, select bank0
  8069     034F  0824               	movf	?___wmul,w
  8070     0350  0754               	addwf	??_main,w
  8071     0351  00AC               	movwf	___awdiv@dividend
  8072     0352  0825               	movf	?___wmul+1,w
  8073     0353  1803               	skipnc
  8074     0354  0A25               	incf	?___wmul+1,w
  8075     0355  0755               	addwf	??_main+1,w
  8076     0356  00AD               	movwf	___awdiv@dividend+1
  8077     0357  160A  118A  2547  120A  118A  	fcall	___awdiv
  8078     035C  1283               	bcf	3,5	;RP0=0, select bank0
  8079     035D  1303               	bcf	3,6	;RP1=0, select bank0
  8080     035E  082B               	movf	?___awdiv+1,w
  8081     035F  1683               	bsf	3,5	;RP0=1, select bank3
  8082     0360  1703               	bsf	3,6	;RP1=1, select bank3
  8083     0361  0097               	movwf	(main@yuzler+1)^(0+384)
  8084     0362  1283               	bcf	3,5	;RP0=0, select bank0
  8085     0363  1303               	bcf	3,6	;RP1=0, select bank0
  8086     0364  082A               	movf	?___awdiv,w
  8087     0365  1683               	bsf	3,5	;RP0=1, select bank3
  8088     0366  1703               	bsf	3,6	;RP1=1, select bank3
  8089     0367  0096               	movwf	main@yuzler^(0+384)
  8090     0368                     l3979:
  8091                           
  8092                           ;main1.c: 281:     int onlar = ((int)integerPart-binler*1000-yuzler*100)/10;
  8093     0368  300A               	movlw	10
  8094     0369  1283               	bcf	3,5	;RP0=0, select bank0
  8095     036A  1303               	bcf	3,6	;RP1=0, select bank0
  8096     036B  00AA               	movwf	___awdiv@divisor
  8097     036C  3000               	movlw	0
  8098     036D  00AB               	movwf	___awdiv@divisor+1
  8099     036E  1683               	bsf	3,5	;RP0=1, select bank3
  8100     036F  1703               	bsf	3,6	;RP1=1, select bank3
  8101     0370  081D               	movf	(main@integerPart+3)^(0+384),w
  8102     0371  1283               	bcf	3,5	;RP0=0, select bank0
  8103     0372  1303               	bcf	3,6	;RP1=0, select bank0
  8104     0373  00A3               	movwf	___fltol@f1+3
  8105     0374  1683               	bsf	3,5	;RP0=1, select bank3
  8106     0375  1703               	bsf	3,6	;RP1=1, select bank3
  8107     0376  081C               	movf	(main@integerPart+2)^(0+384),w
  8108     0377  1283               	bcf	3,5	;RP0=0, select bank0
  8109     0378  1303               	bcf	3,6	;RP1=0, select bank0
  8110     0379  00A2               	movwf	___fltol@f1+2
  8111     037A  1683               	bsf	3,5	;RP0=1, select bank3
  8112     037B  1703               	bsf	3,6	;RP1=1, select bank3
  8113     037C  081B               	movf	(main@integerPart+1)^(0+384),w
  8114     037D  1283               	bcf	3,5	;RP0=0, select bank0
  8115     037E  1303               	bcf	3,6	;RP1=0, select bank0
  8116     037F  00A1               	movwf	___fltol@f1+1
  8117     0380  1683               	bsf	3,5	;RP0=1, select bank3
  8118     0381  1703               	bsf	3,6	;RP1=1, select bank3
  8119     0382  081A               	movf	main@integerPart^(0+384),w
  8120     0383  1283               	bcf	3,5	;RP0=0, select bank0
  8121     0384  1303               	bcf	3,6	;RP1=0, select bank0
  8122     0385  00A0               	movwf	___fltol@f1
  8123     0386  160A  118A  25B0  120A  118A  	fcall	___fltol
  8124     038B  1283               	bcf	3,5	;RP0=0, select bank0
  8125     038C  1303               	bcf	3,6	;RP1=0, select bank0
  8126     038D  0820               	movf	?___fltol,w
  8127     038E  00D4               	movwf	??_main
  8128     038F  0821               	movf	?___fltol+1,w
  8129     0390  00D5               	movwf	??_main+1
  8130     0391  0822               	movf	?___fltol+2,w
  8131     0392  00D6               	movwf	??_main+2
  8132     0393  0823               	movf	?___fltol+3,w
  8133     0394  00D7               	movwf	??_main+3
  8134     0395  1683               	bsf	3,5	;RP0=1, select bank3
  8135     0396  1703               	bsf	3,6	;RP1=1, select bank3
  8136     0397  0819               	movf	(main@binler+1)^(0+384),w
  8137     0398  1283               	bcf	3,5	;RP0=0, select bank0
  8138     0399  1303               	bcf	3,6	;RP1=0, select bank0
  8139     039A  00A5               	movwf	___wmul@multiplier+1
  8140     039B  1683               	bsf	3,5	;RP0=1, select bank3
  8141     039C  1703               	bsf	3,6	;RP1=1, select bank3
  8142     039D  0818               	movf	main@binler^(0+384),w
  8143     039E  1283               	bcf	3,5	;RP0=0, select bank0
  8144     039F  1303               	bcf	3,6	;RP1=0, select bank0
  8145     03A0  00A4               	movwf	___wmul@multiplier
  8146     03A1  3018               	movlw	24
  8147     03A2  00A6               	movwf	___wmul@multiplicand
  8148     03A3  30FC               	movlw	252
  8149     03A4  00A7               	movwf	___wmul@multiplicand+1
  8150     03A5  160A  118A  21FF  120A  118A  	fcall	___wmul
  8151     03AA  1283               	bcf	3,5	;RP0=0, select bank0
  8152     03AB  1303               	bcf	3,6	;RP1=0, select bank0
  8153     03AC  0824               	movf	?___wmul,w
  8154     03AD  0754               	addwf	??_main,w
  8155     03AE  00D8               	movwf	??_main+4
  8156     03AF  0825               	movf	?___wmul+1,w
  8157     03B0  1803               	skipnc
  8158     03B1  0A25               	incf	?___wmul+1,w
  8159     03B2  0755               	addwf	??_main+1,w
  8160     03B3  00D9               	movwf	??_main+5
  8161     03B4  1683               	bsf	3,5	;RP0=1, select bank3
  8162     03B5  1703               	bsf	3,6	;RP1=1, select bank3
  8163     03B6  0817               	movf	(main@yuzler+1)^(0+384),w
  8164     03B7  1283               	bcf	3,5	;RP0=0, select bank0
  8165     03B8  1303               	bcf	3,6	;RP1=0, select bank0
  8166     03B9  00A5               	movwf	___wmul@multiplier+1
  8167     03BA  1683               	bsf	3,5	;RP0=1, select bank3
  8168     03BB  1703               	bsf	3,6	;RP1=1, select bank3
  8169     03BC  0816               	movf	main@yuzler^(0+384),w
  8170     03BD  1283               	bcf	3,5	;RP0=0, select bank0
  8171     03BE  1303               	bcf	3,6	;RP1=0, select bank0
  8172     03BF  00A4               	movwf	___wmul@multiplier
  8173     03C0  309C               	movlw	156
  8174     03C1  00A6               	movwf	___wmul@multiplicand
  8175     03C2  30FF               	movlw	255
  8176     03C3  00A7               	movwf	___wmul@multiplicand+1
  8177     03C4  160A  118A  21FF  120A  118A  	fcall	___wmul
  8178     03C9  1283               	bcf	3,5	;RP0=0, select bank0
  8179     03CA  1303               	bcf	3,6	;RP1=0, select bank0
  8180     03CB  0824               	movf	?___wmul,w
  8181     03CC  0758               	addwf	??_main+4,w
  8182     03CD  00AC               	movwf	___awdiv@dividend
  8183     03CE  0825               	movf	?___wmul+1,w
  8184     03CF  1803               	skipnc
  8185     03D0  0A25               	incf	?___wmul+1,w
  8186     03D1  0759               	addwf	??_main+5,w
  8187     03D2  00AD               	movwf	___awdiv@dividend+1
  8188     03D3  160A  118A  2547  120A  118A  	fcall	___awdiv
  8189     03D8  1283               	bcf	3,5	;RP0=0, select bank0
  8190     03D9  1303               	bcf	3,6	;RP1=0, select bank0
  8191     03DA  082B               	movf	?___awdiv+1,w
  8192     03DB  1683               	bsf	3,5	;RP0=1, select bank1
  8193     03DC  1303               	bcf	3,6	;RP1=0, select bank1
  8194     03DD  00E7               	movwf	(main@onlar+1)^(0+128)
  8195     03DE  1283               	bcf	3,5	;RP0=0, select bank0
  8196     03DF  1303               	bcf	3,6	;RP1=0, select bank0
  8197     03E0  082A               	movf	?___awdiv,w
  8198     03E1  1683               	bsf	3,5	;RP0=1, select bank1
  8199     03E2  1303               	bcf	3,6	;RP1=0, select bank1
  8200     03E3  00E6               	movwf	main@onlar^(0+128)
  8201     03E4                     l3981:
  8202                           
  8203                           ;main1.c: 282:     int birler = (int)integerPart%10;
  8204     03E4  300A               	movlw	10
  8205     03E5  1283               	bcf	3,5	;RP0=0, select bank0
  8206     03E6  1303               	bcf	3,6	;RP1=0, select bank0
  8207     03E7  00AA               	movwf	___awmod@divisor
  8208     03E8  3000               	movlw	0
  8209     03E9  00AB               	movwf	___awmod@divisor+1
  8210     03EA  1683               	bsf	3,5	;RP0=1, select bank3
  8211     03EB  1703               	bsf	3,6	;RP1=1, select bank3
  8212     03EC  081D               	movf	(main@integerPart+3)^(0+384),w
  8213     03ED  1283               	bcf	3,5	;RP0=0, select bank0
  8214     03EE  1303               	bcf	3,6	;RP1=0, select bank0
  8215     03EF  00A3               	movwf	___fltol@f1+3
  8216     03F0  1683               	bsf	3,5	;RP0=1, select bank3
  8217     03F1  1703               	bsf	3,6	;RP1=1, select bank3
  8218     03F2  081C               	movf	(main@integerPart+2)^(0+384),w
  8219     03F3  1283               	bcf	3,5	;RP0=0, select bank0
  8220     03F4  1303               	bcf	3,6	;RP1=0, select bank0
  8221     03F5  00A2               	movwf	___fltol@f1+2
  8222     03F6  1683               	bsf	3,5	;RP0=1, select bank3
  8223     03F7  1703               	bsf	3,6	;RP1=1, select bank3
  8224     03F8  081B               	movf	(main@integerPart+1)^(0+384),w
  8225     03F9  1283               	bcf	3,5	;RP0=0, select bank0
  8226     03FA  1303               	bcf	3,6	;RP1=0, select bank0
  8227     03FB  00A1               	movwf	___fltol@f1+1
  8228     03FC  1683               	bsf	3,5	;RP0=1, select bank3
  8229     03FD  1703               	bsf	3,6	;RP1=1, select bank3
  8230     03FE  081A               	movf	main@integerPart^(0+384),w
  8231     03FF  1283               	bcf	3,5	;RP0=0, select bank0
  8232     0400  1303               	bcf	3,6	;RP1=0, select bank0
  8233     0401  00A0               	movwf	___fltol@f1
  8234     0402  160A  118A  25B0  120A  118A  	fcall	___fltol
  8235     0407  1283               	bcf	3,5	;RP0=0, select bank0
  8236     0408  1303               	bcf	3,6	;RP1=0, select bank0
  8237     0409  0821               	movf	?___fltol+1,w
  8238     040A  00AD               	movwf	___awmod@dividend+1
  8239     040B  0820               	movf	?___fltol,w
  8240     040C  00AC               	movwf	___awmod@dividend
  8241     040D  160A  118A  23BF  120A  118A  	fcall	___awmod
  8242     0412  1283               	bcf	3,5	;RP0=0, select bank0
  8243     0413  1303               	bcf	3,6	;RP1=0, select bank0
  8244     0414  082B               	movf	?___awmod+1,w
  8245     0415  1683               	bsf	3,5	;RP0=1, select bank1
  8246     0416  1303               	bcf	3,6	;RP1=0, select bank1
  8247     0417  00E9               	movwf	(main@birler+1)^(0+128)
  8248     0418  1283               	bcf	3,5	;RP0=0, select bank0
  8249     0419  1303               	bcf	3,6	;RP1=0, select bank0
  8250     041A  082A               	movf	?___awmod,w
  8251     041B  1683               	bsf	3,5	;RP0=1, select bank1
  8252     041C  1303               	bcf	3,6	;RP1=0, select bank1
  8253     041D  00E8               	movwf	main@birler^(0+128)
  8254     041E                     l3983:
  8255                           
  8256                           ;main1.c: 288:         ADCON0bits.CHS = 0b0001;
  8257     041E  1283               	bcf	3,5	;RP0=0, select bank0
  8258     041F  1303               	bcf	3,6	;RP1=0, select bank0
  8259     0420  081F               	movf	31,w	;volatile
  8260     0421  39C7               	andlw	-57
  8261     0422  3808               	iorlw	8
  8262     0423  009F               	movwf	31	;volatile
  8263     0424                     l3985:
  8264                           
  8265                           ;main1.c: 289:         _delay((unsigned long)((50)*(4000000/4000000.0)));
  8266     0424  300F               	movlw	15
  8267     0425  1283               	bcf	3,5	;RP0=0, select bank0
  8268     0426  1303               	bcf	3,6	;RP1=0, select bank0
  8269     0427  00D4               	movwf	??_main
  8270     0428                     u5677:
  8271     0428  0BD4               	decfsz	??_main,f
  8272     0429  2C28               	goto	u5677
  8273     042A  2C2B               	nop2
  8274     042B                     l3987:
  8275                           
  8276                           ;main1.c: 290:         ADCON0bits.GO = 1;
  8277     042B  1283               	bcf	3,5	;RP0=0, select bank0
  8278     042C  1303               	bcf	3,6	;RP1=0, select bank0
  8279     042D  151F               	bsf	31,2	;volatile
  8280     042E                     l225:	
  8281                           ;main1.c: 291:         while (ADCON0bits.GO);
  8282                           
  8283     042E  191F               	btfsc	31,2	;volatile
  8284     042F  2C31               	goto	u5311
  8285     0430  2C32               	goto	u5310
  8286     0431                     u5311:
  8287     0431  2C2E               	goto	l225
  8288     0432                     u5310:
  8289     0432                     l3989:
  8290                           
  8291                           ;main1.c: 292:         adcValue1 = (ADRESH << 8) | ADRESL;
  8292     0432  1683               	bsf	3,5	;RP0=1, select bank1
  8293     0433  1303               	bcf	3,6	;RP1=0, select bank1
  8294     0434  081E               	movf	30,w	;volatile
  8295     0435  1283               	bcf	3,5	;RP0=0, select bank0
  8296     0436  1303               	bcf	3,6	;RP1=0, select bank0
  8297     0437  00D4               	movwf	??_main
  8298     0438  01D5               	clrf	??_main+1
  8299     0439  081E               	movf	30,w	;volatile
  8300     043A  00D6               	movwf	??_main+2
  8301     043B  01D7               	clrf	??_main+3
  8302     043C  0856               	movf	??_main+2,w
  8303     043D  00D7               	movwf	??_main+3
  8304     043E  01D6               	clrf	??_main+2
  8305     043F  0854               	movf	??_main,w
  8306     0440  0456               	iorwf	??_main+2,w
  8307     0441  00A0               	movwf	___xxtofl@val
  8308     0442  0855               	movf	??_main+1,w
  8309     0443  0457               	iorwf	??_main+3,w
  8310     0444  00A1               	movwf	___xxtofl@val+1
  8311     0445  01A2               	clrf	___xxtofl@val+2
  8312     0446  1BA1               	btfsc	___xxtofl@val+1,7
  8313     0447  03A2               	decf	___xxtofl@val+2,f
  8314     0448  0822               	movf	___xxtofl@val+2,w
  8315     0449  00A3               	movwf	___xxtofl@val+3
  8316     044A  3001               	movlw	1
  8317     044B  160A  118A  2628  120A  118A  	fcall	___xxtofl
  8318     0450  1283               	bcf	3,5	;RP0=0, select bank0
  8319     0451  1303               	bcf	3,6	;RP1=0, select bank0
  8320     0452  0823               	movf	?___xxtofl+3,w
  8321     0453  1683               	bsf	3,5	;RP0=1, select bank3
  8322     0454  1703               	bsf	3,6	;RP1=1, select bank3
  8323     0455  0095               	movwf	(main@adcValue1+3)^(0+384)
  8324     0456  1283               	bcf	3,5	;RP0=0, select bank0
  8325     0457  1303               	bcf	3,6	;RP1=0, select bank0
  8326     0458  0822               	movf	?___xxtofl+2,w
  8327     0459  1683               	bsf	3,5	;RP0=1, select bank3
  8328     045A  1703               	bsf	3,6	;RP1=1, select bank3
  8329     045B  0094               	movwf	(main@adcValue1+2)^(0+384)
  8330     045C  1283               	bcf	3,5	;RP0=0, select bank0
  8331     045D  1303               	bcf	3,6	;RP1=0, select bank0
  8332     045E  0821               	movf	?___xxtofl+1,w
  8333     045F  1683               	bsf	3,5	;RP0=1, select bank3
  8334     0460  1703               	bsf	3,6	;RP1=1, select bank3
  8335     0461  0093               	movwf	(main@adcValue1+1)^(0+384)
  8336     0462  1283               	bcf	3,5	;RP0=0, select bank0
  8337     0463  1303               	bcf	3,6	;RP1=0, select bank0
  8338     0464  0820               	movf	?___xxtofl,w
  8339     0465  1683               	bsf	3,5	;RP0=1, select bank3
  8340     0466  1703               	bsf	3,6	;RP1=1, select bank3
  8341     0467  0092               	movwf	main@adcValue1^(0+384)
  8342     0468                     l3991:
  8343                           
  8344                           ;main1.c: 293:         if (RE2==0 && RC0== 0 ){
  8345     0468  1283               	bcf	3,5	;RP0=0, select bank0
  8346     0469  1303               	bcf	3,6	;RP1=0, select bank0
  8347     046A  1909               	btfsc	9,2	;volatile
  8348     046B  2C6D               	goto	u5321
  8349     046C  2C6E               	goto	u5320
  8350     046D                     u5321:
  8351     046D  2C9C               	goto	l228
  8352     046E                     u5320:
  8353     046E                     l3993:
  8354     046E  1807               	btfsc	7,0	;volatile
  8355     046F  2C71               	goto	u5331
  8356     0470  2C72               	goto	u5330
  8357     0471                     u5331:
  8358     0471  2C9C               	goto	l228
  8359     0472                     u5330:
  8360     0472                     l3995:
  8361                           
  8362                           ;main1.c: 294:         displayValue = (int)adcValue1 >> 1;
  8363     0472  1683               	bsf	3,5	;RP0=1, select bank3
  8364     0473  1703               	bsf	3,6	;RP1=1, select bank3
  8365     0474  0815               	movf	(main@adcValue1+3)^(0+384),w
  8366     0475  1283               	bcf	3,5	;RP0=0, select bank0
  8367     0476  1303               	bcf	3,6	;RP1=0, select bank0
  8368     0477  00A3               	movwf	___fltol@f1+3
  8369     0478  1683               	bsf	3,5	;RP0=1, select bank3
  8370     0479  1703               	bsf	3,6	;RP1=1, select bank3
  8371     047A  0814               	movf	(main@adcValue1+2)^(0+384),w
  8372     047B  1283               	bcf	3,5	;RP0=0, select bank0
  8373     047C  1303               	bcf	3,6	;RP1=0, select bank0
  8374     047D  00A2               	movwf	___fltol@f1+2
  8375     047E  1683               	bsf	3,5	;RP0=1, select bank3
  8376     047F  1703               	bsf	3,6	;RP1=1, select bank3
  8377     0480  0813               	movf	(main@adcValue1+1)^(0+384),w
  8378     0481  1283               	bcf	3,5	;RP0=0, select bank0
  8379     0482  1303               	bcf	3,6	;RP1=0, select bank0
  8380     0483  00A1               	movwf	___fltol@f1+1
  8381     0484  1683               	bsf	3,5	;RP0=1, select bank3
  8382     0485  1703               	bsf	3,6	;RP1=1, select bank3
  8383     0486  0812               	movf	main@adcValue1^(0+384),w
  8384     0487  1283               	bcf	3,5	;RP0=0, select bank0
  8385     0488  1303               	bcf	3,6	;RP1=0, select bank0
  8386     0489  00A0               	movwf	___fltol@f1
  8387     048A  160A  118A  25B0  120A  118A  	fcall	___fltol
  8388     048F  1283               	bcf	3,5	;RP0=0, select bank0
  8389     0490  1303               	bcf	3,6	;RP1=0, select bank0
  8390     0491  0D21               	rlf	?___fltol+1,w
  8391     0492  0C21               	rrf	?___fltol+1,w
  8392     0493  1683               	bsf	3,5	;RP0=1, select bank3
  8393     0494  1703               	bsf	3,6	;RP1=1, select bank3
  8394     0495  00A3               	movwf	(main@displayValue+1)^(0+384)
  8395     0496  1283               	bcf	3,5	;RP0=0, select bank0
  8396     0497  1303               	bcf	3,6	;RP1=0, select bank0
  8397     0498  0C20               	rrf	?___fltol,w
  8398     0499  1683               	bsf	3,5	;RP0=1, select bank3
  8399     049A  1703               	bsf	3,6	;RP1=1, select bank3
  8400     049B  00A2               	movwf	main@displayValue^(0+384)
  8401     049C                     l228:	
  8402                           ;main1.c: 295:         }
  8403                           
  8404                           
  8405                           ;main1.c: 296:         float gostermeliklcd = adcValue1 / 1024 * 1000;
  8406     049C  3044               	movlw	68
  8407     049D  1283               	bcf	3,5	;RP0=0, select bank0
  8408     049E  1303               	bcf	3,6	;RP1=0, select bank0
  8409     049F  00BD               	movwf	___flmul@b+3
  8410     04A0  307A               	movlw	122
  8411     04A1  00BC               	movwf	___flmul@b+2
  8412     04A2  3000               	movlw	0
  8413     04A3  00BB               	movwf	___flmul@b+1
  8414     04A4  3000               	movlw	0
  8415     04A5  00BA               	movwf	___flmul@b
  8416     04A6  3044               	movlw	68
  8417     04A7  00A3               	movwf	___fldiv@a+3
  8418     04A8  3080               	movlw	128
  8419     04A9  00A2               	movwf	___fldiv@a+2
  8420     04AA  3000               	movlw	0
  8421     04AB  00A1               	movwf	___fldiv@a+1
  8422     04AC  3000               	movlw	0
  8423     04AD  00A0               	movwf	___fldiv@a
  8424     04AE  1683               	bsf	3,5	;RP0=1, select bank3
  8425     04AF  1703               	bsf	3,6	;RP1=1, select bank3
  8426     04B0  0815               	movf	(main@adcValue1+3)^(0+384),w
  8427     04B1  1283               	bcf	3,5	;RP0=0, select bank0
  8428     04B2  1303               	bcf	3,6	;RP1=0, select bank0
  8429     04B3  00A7               	movwf	___fldiv@b+3
  8430     04B4  1683               	bsf	3,5	;RP0=1, select bank3
  8431     04B5  1703               	bsf	3,6	;RP1=1, select bank3
  8432     04B6  0814               	movf	(main@adcValue1+2)^(0+384),w
  8433     04B7  1283               	bcf	3,5	;RP0=0, select bank0
  8434     04B8  1303               	bcf	3,6	;RP1=0, select bank0
  8435     04B9  00A6               	movwf	___fldiv@b+2
  8436     04BA  1683               	bsf	3,5	;RP0=1, select bank3
  8437     04BB  1703               	bsf	3,6	;RP1=1, select bank3
  8438     04BC  0813               	movf	(main@adcValue1+1)^(0+384),w
  8439     04BD  1283               	bcf	3,5	;RP0=0, select bank0
  8440     04BE  1303               	bcf	3,6	;RP1=0, select bank0
  8441     04BF  00A5               	movwf	___fldiv@b+1
  8442     04C0  1683               	bsf	3,5	;RP0=1, select bank3
  8443     04C1  1703               	bsf	3,6	;RP1=1, select bank3
  8444     04C2  0812               	movf	main@adcValue1^(0+384),w
  8445     04C3  1283               	bcf	3,5	;RP0=0, select bank0
  8446     04C4  1303               	bcf	3,6	;RP1=0, select bank0
  8447     04C5  00A4               	movwf	___fldiv@b
  8448     04C6  120A  158A  202D  120A  118A  	fcall	___fldiv
  8449     04CB  1283               	bcf	3,5	;RP0=0, select bank0
  8450     04CC  1303               	bcf	3,6	;RP1=0, select bank0
  8451     04CD  0823               	movf	?___fldiv+3,w
  8452     04CE  00C1               	movwf	___flmul@a+3
  8453     04CF  0822               	movf	?___fldiv+2,w
  8454     04D0  00C0               	movwf	___flmul@a+2
  8455     04D1  0821               	movf	?___fldiv+1,w
  8456     04D2  00BF               	movwf	___flmul@a+1
  8457     04D3  0820               	movf	?___fldiv,w
  8458     04D4  00BE               	movwf	___flmul@a
  8459     04D5  120A  158A  24BB  120A  118A  	fcall	___flmul
  8460     04DA  1283               	bcf	3,5	;RP0=0, select bank0
  8461     04DB  1303               	bcf	3,6	;RP1=0, select bank0
  8462     04DC  083D               	movf	?___flmul+3,w
  8463     04DD  1683               	bsf	3,5	;RP0=1, select bank1
  8464     04DE  1303               	bcf	3,6	;RP1=0, select bank1
  8465     04DF  00D8               	movwf	(main@gostermeliklcd+3)^(0+128)
  8466     04E0  1283               	bcf	3,5	;RP0=0, select bank0
  8467     04E1  1303               	bcf	3,6	;RP1=0, select bank0
  8468     04E2  083C               	movf	?___flmul+2,w
  8469     04E3  1683               	bsf	3,5	;RP0=1, select bank1
  8470     04E4  1303               	bcf	3,6	;RP1=0, select bank1
  8471     04E5  00D7               	movwf	(main@gostermeliklcd+2)^(0+128)
  8472     04E6  1283               	bcf	3,5	;RP0=0, select bank0
  8473     04E7  1303               	bcf	3,6	;RP1=0, select bank0
  8474     04E8  083B               	movf	?___flmul+1,w
  8475     04E9  1683               	bsf	3,5	;RP0=1, select bank1
  8476     04EA  1303               	bcf	3,6	;RP1=0, select bank1
  8477     04EB  00D6               	movwf	(main@gostermeliklcd+1)^(0+128)
  8478     04EC  1283               	bcf	3,5	;RP0=0, select bank0
  8479     04ED  1303               	bcf	3,6	;RP1=0, select bank0
  8480     04EE  083A               	movf	?___flmul,w
  8481     04EF  1683               	bsf	3,5	;RP0=1, select bank1
  8482     04F0  1303               	bcf	3,6	;RP1=0, select bank1
  8483     04F1  00D5               	movwf	main@gostermeliklcd^(0+128)
  8484     04F2                     l3997:
  8485                           
  8486                           ;main1.c: 301:         Lcd_Set_Cursor(2, 1);
  8487     04F2  1283               	bcf	3,5	;RP0=0, select bank0
  8488     04F3  1303               	bcf	3,6	;RP1=0, select bank0
  8489     04F4  01A4               	clrf	Lcd_Set_Cursor@b
  8490     04F5  0AA4               	incf	Lcd_Set_Cursor@b,f
  8491     04F6  3002               	movlw	2
  8492     04F7  120A  118A  27B2  120A  118A  	fcall	_Lcd_Set_Cursor
  8493     04FC                     l3999:
  8494                           
  8495                           ;main1.c: 302:         Lcd_Write_String("FeedRate:");
  8496     04FC  301F               	movlw	low (STR_10| (0+32768))
  8497     04FD  1283               	bcf	3,5	;RP0=0, select bank0
  8498     04FE  1303               	bcf	3,6	;RP1=0, select bank0
  8499     04FF  00A5               	movwf	Lcd_Write_String@a
  8500     0500  3091               	movlw	high (STR_10| (0+32768))
  8501     0501  00A6               	movwf	Lcd_Write_String@a+1
  8502     0502  160A  118A  2327  120A  118A  	fcall	_Lcd_Write_String
  8503     0507                     l4001:
  8504                           
  8505                           ;main1.c: 303:         char adcString1[4];;main1.c: 304:         sprintf(adcString1, "%0
      +                          03u", (int)gostermeliklcd);
  8506     0507  305F               	movlw	low (STR_11| (0+32768))
  8507     0508  1283               	bcf	3,5	;RP0=0, select bank0
  8508     0509  1303               	bcf	3,6	;RP1=0, select bank0
  8509     050A  00AC               	movwf	sprintf@f
  8510     050B  3091               	movlw	high (STR_11| (0+32768))
  8511     050C  00AD               	movwf	sprintf@f+1
  8512     050D  1683               	bsf	3,5	;RP0=1, select bank1
  8513     050E  1303               	bcf	3,6	;RP1=0, select bank1
  8514     050F  0858               	movf	(main@gostermeliklcd+3)^(0+128),w
  8515     0510  1283               	bcf	3,5	;RP0=0, select bank0
  8516     0511  1303               	bcf	3,6	;RP1=0, select bank0
  8517     0512  00A3               	movwf	___fltol@f1+3
  8518     0513  1683               	bsf	3,5	;RP0=1, select bank1
  8519     0514  1303               	bcf	3,6	;RP1=0, select bank1
  8520     0515  0857               	movf	(main@gostermeliklcd+2)^(0+128),w
  8521     0516  1283               	bcf	3,5	;RP0=0, select bank0
  8522     0517  1303               	bcf	3,6	;RP1=0, select bank0
  8523     0518  00A2               	movwf	___fltol@f1+2
  8524     0519  1683               	bsf	3,5	;RP0=1, select bank1
  8525     051A  1303               	bcf	3,6	;RP1=0, select bank1
  8526     051B  0856               	movf	(main@gostermeliklcd+1)^(0+128),w
  8527     051C  1283               	bcf	3,5	;RP0=0, select bank0
  8528     051D  1303               	bcf	3,6	;RP1=0, select bank0
  8529     051E  00A1               	movwf	___fltol@f1+1
  8530     051F  1683               	bsf	3,5	;RP0=1, select bank1
  8531     0520  1303               	bcf	3,6	;RP1=0, select bank1
  8532     0521  0855               	movf	main@gostermeliklcd^(0+128),w
  8533     0522  1283               	bcf	3,5	;RP0=0, select bank0
  8534     0523  1303               	bcf	3,6	;RP1=0, select bank0
  8535     0524  00A0               	movwf	___fltol@f1
  8536     0525  160A  118A  25B0  120A  118A  	fcall	___fltol
  8537     052A  1283               	bcf	3,5	;RP0=0, select bank0
  8538     052B  1303               	bcf	3,6	;RP1=0, select bank0
  8539     052C  0821               	movf	?___fltol+1,w
  8540     052D  00AF               	movwf	?_sprintf+3
  8541     052E  0820               	movf	?___fltol,w
  8542     052F  00AE               	movwf	?_sprintf+2
  8543     0530  30EC               	movlw	(low (main@adcString1| 0))& (0+255)
  8544     0531  120A  118A  25BB  120A  118A  	fcall	_sprintf
  8545     0536                     l4003:
  8546                           
  8547                           ;main1.c: 305:         Lcd_Set_Cursor(2, 10);
  8548     0536  300A               	movlw	10
  8549     0537  1283               	bcf	3,5	;RP0=0, select bank0
  8550     0538  1303               	bcf	3,6	;RP1=0, select bank0
  8551     0539  00A4               	movwf	Lcd_Set_Cursor@b
  8552     053A  3002               	movlw	2
  8553     053B  120A  118A  27B2  120A  118A  	fcall	_Lcd_Set_Cursor
  8554     0540                     l4005:
  8555                           
  8556                           ;main1.c: 306:         Lcd_Write_String(adcString1);
  8557     0540  30EC               	movlw	(low (main@adcString1| 0))& (0+255)
  8558     0541  1283               	bcf	3,5	;RP0=0, select bank0
  8559     0542  1303               	bcf	3,6	;RP1=0, select bank0
  8560     0543  00A5               	movwf	Lcd_Write_String@a
  8561     0544  3000               	movlw	0
  8562     0545  00A6               	movwf	Lcd_Write_String@a+1
  8563     0546  160A  118A  2327  120A  118A  	fcall	_Lcd_Write_String
  8564     054B                     l4007:
  8565                           
  8566                           ;main1.c: 309:         Lcd_Set_Cursor(1, 1);
  8567     054B  1283               	bcf	3,5	;RP0=0, select bank0
  8568     054C  1303               	bcf	3,6	;RP1=0, select bank0
  8569     054D  01A4               	clrf	Lcd_Set_Cursor@b
  8570     054E  0AA4               	incf	Lcd_Set_Cursor@b,f
  8571     054F  3001               	movlw	1
  8572     0550  120A  118A  27B2  120A  118A  	fcall	_Lcd_Set_Cursor
  8573     0555                     l4009:
  8574                           
  8575                           ;main1.c: 310:         Lcd_Write_String("RPM:");
  8576     0555  306A               	movlw	low (STR_12| (0+32768))
  8577     0556  1283               	bcf	3,5	;RP0=0, select bank0
  8578     0557  1303               	bcf	3,6	;RP1=0, select bank0
  8579     0558  00A5               	movwf	Lcd_Write_String@a
  8580     0559  3091               	movlw	high (STR_12| (0+32768))
  8581     055A  00A6               	movwf	Lcd_Write_String@a+1
  8582     055B  160A  118A  2327  120A  118A  	fcall	_Lcd_Write_String
  8583     0560                     l4011:
  8584                           
  8585                           ;main1.c: 311:         char rpmString[5];;main1.c: 312: sprintf(rpmString, "%u%u%u.%u", 
      +                          binler,yuzler,onlar,birler);
  8586     0560  303D               	movlw	low (STR_13| (0+32768))
  8587     0561  1283               	bcf	3,5	;RP0=0, select bank0
  8588     0562  1303               	bcf	3,6	;RP1=0, select bank0
  8589     0563  00AC               	movwf	sprintf@f
  8590     0564  3091               	movlw	high (STR_13| (0+32768))
  8591     0565  00AD               	movwf	sprintf@f+1
  8592     0566  1683               	bsf	3,5	;RP0=1, select bank3
  8593     0567  1703               	bsf	3,6	;RP1=1, select bank3
  8594     0568  0819               	movf	(main@binler+1)^(0+384),w
  8595     0569  1283               	bcf	3,5	;RP0=0, select bank0
  8596     056A  1303               	bcf	3,6	;RP1=0, select bank0
  8597     056B  00AF               	movwf	?_sprintf+3
  8598     056C  1683               	bsf	3,5	;RP0=1, select bank3
  8599     056D  1703               	bsf	3,6	;RP1=1, select bank3
  8600     056E  0818               	movf	main@binler^(0+384),w
  8601     056F  1283               	bcf	3,5	;RP0=0, select bank0
  8602     0570  1303               	bcf	3,6	;RP1=0, select bank0
  8603     0571  00AE               	movwf	?_sprintf+2
  8604     0572  1683               	bsf	3,5	;RP0=1, select bank3
  8605     0573  1703               	bsf	3,6	;RP1=1, select bank3
  8606     0574  0817               	movf	(main@yuzler+1)^(0+384),w
  8607     0575  1283               	bcf	3,5	;RP0=0, select bank0
  8608     0576  1303               	bcf	3,6	;RP1=0, select bank0
  8609     0577  00B1               	movwf	?_sprintf+5
  8610     0578  1683               	bsf	3,5	;RP0=1, select bank3
  8611     0579  1703               	bsf	3,6	;RP1=1, select bank3
  8612     057A  0816               	movf	main@yuzler^(0+384),w
  8613     057B  1283               	bcf	3,5	;RP0=0, select bank0
  8614     057C  1303               	bcf	3,6	;RP1=0, select bank0
  8615     057D  00B0               	movwf	?_sprintf+4
  8616     057E  1683               	bsf	3,5	;RP0=1, select bank1
  8617     057F  1303               	bcf	3,6	;RP1=0, select bank1
  8618     0580  0867               	movf	(main@onlar+1)^(0+128),w
  8619     0581  1283               	bcf	3,5	;RP0=0, select bank0
  8620     0582  1303               	bcf	3,6	;RP1=0, select bank0
  8621     0583  00B3               	movwf	?_sprintf+7
  8622     0584  1683               	bsf	3,5	;RP0=1, select bank1
  8623     0585  1303               	bcf	3,6	;RP1=0, select bank1
  8624     0586  0866               	movf	main@onlar^(0+128),w
  8625     0587  1283               	bcf	3,5	;RP0=0, select bank0
  8626     0588  1303               	bcf	3,6	;RP1=0, select bank0
  8627     0589  00B2               	movwf	?_sprintf+6
  8628     058A  1683               	bsf	3,5	;RP0=1, select bank1
  8629     058B  1303               	bcf	3,6	;RP1=0, select bank1
  8630     058C  0869               	movf	(main@birler+1)^(0+128),w
  8631     058D  1283               	bcf	3,5	;RP0=0, select bank0
  8632     058E  1303               	bcf	3,6	;RP1=0, select bank0
  8633     058F  00B5               	movwf	?_sprintf+9
  8634     0590  1683               	bsf	3,5	;RP0=1, select bank1
  8635     0591  1303               	bcf	3,6	;RP1=0, select bank1
  8636     0592  0868               	movf	main@birler^(0+128),w
  8637     0593  1283               	bcf	3,5	;RP0=0, select bank0
  8638     0594  1303               	bcf	3,6	;RP1=0, select bank0
  8639     0595  00B4               	movwf	?_sprintf+8
  8640     0596  30DD               	movlw	(low (main@rpmString| 0))& (0+255)
  8641     0597  120A  118A  25BB  120A  118A  	fcall	_sprintf
  8642     059C                     l4013:
  8643                           
  8644                           ;main1.c: 314: Lcd_Set_Cursor(1, 5);
  8645     059C  3005               	movlw	5
  8646     059D  1283               	bcf	3,5	;RP0=0, select bank0
  8647     059E  1303               	bcf	3,6	;RP1=0, select bank0
  8648     059F  00A4               	movwf	Lcd_Set_Cursor@b
  8649     05A0  3001               	movlw	1
  8650     05A1  120A  118A  27B2  120A  118A  	fcall	_Lcd_Set_Cursor
  8651     05A6                     l4015:
  8652                           
  8653                           ;main1.c: 315: Lcd_Write_String(rpmString);
  8654     05A6  30DD               	movlw	(low (main@rpmString| 0))& (0+255)
  8655     05A7  1283               	bcf	3,5	;RP0=0, select bank0
  8656     05A8  1303               	bcf	3,6	;RP1=0, select bank0
  8657     05A9  00A5               	movwf	Lcd_Write_String@a
  8658     05AA  3000               	movlw	0
  8659     05AB  00A6               	movwf	Lcd_Write_String@a+1
  8660     05AC  160A  118A  2327  120A  118A  	fcall	_Lcd_Write_String
  8661     05B1                     l4017:
  8662                           
  8663                           ;main1.c: 322:  if (RC1 == 1 && (RE0 == 1 || RE2 == 1)) {
  8664     05B1  1283               	bcf	3,5	;RP0=0, select bank0
  8665     05B2  1303               	bcf	3,6	;RP1=0, select bank0
  8666     05B3  1C87               	btfss	7,1	;volatile
  8667     05B4  2DB8               	goto	u5341
  8668     05B5  120A  158A  29FC   	goto	u5340
  8669     05B8                     u5341:
  8670     05B8  120A  158A  2A23   	goto	l229
  8671                           
  8672                           	psect	maintext_split_2
  8673     09FC                     u5340:
  8674     09FC                     l4019:
  8675     09FC  1809               	btfsc	9,0	;volatile
  8676     09FD  29FF               	goto	u5351
  8677     09FE  2A00               	goto	u5350
  8678     09FF                     u5351:
  8679     09FF  2A04               	goto	l4023
  8680     0A00                     u5350:
  8681     0A00                     l4021:
  8682     0A00  1D09               	btfss	9,2	;volatile
  8683     0A01  2A03               	goto	u5361
  8684     0A02  2A04               	goto	u5360
  8685     0A03                     u5361:
  8686     0A03  2A23               	goto	l229
  8687     0A04                     u5360:
  8688     0A04                     l4023:
  8689                           
  8690                           ;main1.c: 323:             Lcd_Set_Cursor(2, 13);
  8691     0A04  300D               	movlw	13
  8692     0A05  00A4               	movwf	Lcd_Set_Cursor@b
  8693     0A06  3002               	movlw	2
  8694     0A07  120A  118A  27B2  120A  158A  	fcall	_Lcd_Set_Cursor
  8695     0A0C                     l4025:
  8696                           
  8697                           ;main1.c: 324:             Lcd_Write_String(" FWD LMT");
  8698     0A0C  3047               	movlw	low (STR_14| (0+32768))
  8699     0A0D  1283               	bcf	3,5	;RP0=0, select bank0
  8700     0A0E  1303               	bcf	3,6	;RP1=0, select bank0
  8701     0A0F  00A5               	movwf	Lcd_Write_String@a
  8702     0A10  3091               	movlw	high (STR_14| (0+32768))
  8703     0A11  00A6               	movwf	Lcd_Write_String@a+1
  8704     0A12  160A  118A  2327  120A  158A  	fcall	_Lcd_Write_String
  8705     0A17                     l4027:
  8706                           
  8707                           ;main1.c: 325:             UART_Write_Text("s0\r\n");
  8708     0A17  3065               	movlw	low (STR_15| (0+32768))
  8709     0A18  1283               	bcf	3,5	;RP0=0, select bank0
  8710     0A19  1303               	bcf	3,6	;RP1=0, select bank0
  8711     0A1A  00A1               	movwf	UART_Write_Text@text
  8712     0A1B  3091               	movlw	high (STR_15| (0+32768))
  8713     0A1C  00A2               	movwf	UART_Write_Text@text+1
  8714     0A1D  160A  118A  229B  120A  158A  	fcall	_UART_Write_Text
  8715                           
  8716                           ;main1.c: 327:         } else if ((RE2 == 1 && RE0 == 1) || (RE2 == 1 && RE1 == 0)) {
  8717     0A22  2C02               	goto	l4105
  8718     0A23                     l229:
  8719     0A23  1D09               	btfss	9,2	;volatile
  8720     0A24  2A26               	goto	u5371
  8721     0A25  2A27               	goto	u5370
  8722     0A26                     u5371:
  8723     0A26  2A2B               	goto	l237
  8724     0A27                     u5370:
  8725     0A27                     l4029:
  8726     0A27  1809               	btfsc	9,0	;volatile
  8727     0A28  2A2A               	goto	u5381
  8728     0A29  2A2B               	goto	u5380
  8729     0A2A                     u5381:
  8730     0A2A  2A33               	goto	l4033
  8731     0A2B                     u5380:
  8732     0A2B                     l237:
  8733     0A2B  1D09               	btfss	9,2	;volatile
  8734     0A2C  2A2E               	goto	u5391
  8735     0A2D  2A2F               	goto	u5390
  8736     0A2E                     u5391:
  8737     0A2E  2A89               	goto	l233
  8738     0A2F                     u5390:
  8739     0A2F                     l4031:
  8740     0A2F  1889               	btfsc	9,1	;volatile
  8741     0A30  2A32               	goto	u5401
  8742     0A31  2A33               	goto	u5400
  8743     0A32                     u5401:
  8744     0A32  2A89               	goto	l233
  8745     0A33                     u5400:
  8746     0A33                     l4033:
  8747                           
  8748                           ;main1.c: 328:             Lcd_Set_Cursor(2, 13);
  8749     0A33  300D               	movlw	13
  8750     0A34  00A4               	movwf	Lcd_Set_Cursor@b
  8751     0A35  3002               	movlw	2
  8752     0A36  120A  118A  27B2  120A  158A  	fcall	_Lcd_Set_Cursor
  8753     0A3B                     l4035:
  8754                           
  8755                           ;main1.c: 329:             Lcd_Write_String(" FWD 1.6K");
  8756     0A3B  3029               	movlw	low (STR_16| (0+32768))
  8757     0A3C  1283               	bcf	3,5	;RP0=0, select bank0
  8758     0A3D  1303               	bcf	3,6	;RP1=0, select bank0
  8759     0A3E  00A5               	movwf	Lcd_Write_String@a
  8760     0A3F  3091               	movlw	high (STR_16| (0+32768))
  8761     0A40  00A6               	movwf	Lcd_Write_String@a+1
  8762     0A41  160A  118A  2327  120A  158A  	fcall	_Lcd_Write_String
  8763     0A46                     l4037:
  8764                           
  8765                           ;main1.c: 330:             if (displayValue < 800) {
  8766     0A46  3003               	movlw	3
  8767     0A47  1683               	bsf	3,5	;RP0=1, select bank3
  8768     0A48  1703               	bsf	3,6	;RP1=1, select bank3
  8769     0A49  0223               	subwf	(main@displayValue+1)^(0+384),w
  8770     0A4A  3020               	movlw	32
  8771     0A4B  1903               	skipnz
  8772     0A4C  0222               	subwf	main@displayValue^(0+384),w
  8773     0A4D  1803               	skipnc
  8774     0A4E  2A50               	goto	u5411
  8775     0A4F  2A51               	goto	u5410
  8776     0A50                     u5411:
  8777     0A50  2C02               	goto	l4105
  8778     0A51                     u5410:
  8779     0A51                     l4039:
  8780                           
  8781                           ;main1.c: 331:                 char uartMessage[8];;main1.c: 332:                 displa
      +                          yValue += 80;
  8782     0A51  3050               	movlw	80
  8783     0A52  07A2               	addwf	main@displayValue^(0+384),f
  8784     0A53  1803               	skipnc
  8785     0A54  0AA3               	incf	(main@displayValue+1)^(0+384),f
  8786     0A55  3000               	movlw	0
  8787     0A56  07A3               	addwf	(main@displayValue+1)^(0+384),f
  8788                           
  8789                           ;main1.c: 334:                 if (displayValue > 800) {
  8790     0A57  3003               	movlw	3
  8791     0A58  0223               	subwf	(main@displayValue+1)^(0+384),w
  8792     0A59  3021               	movlw	33
  8793     0A5A  1903               	skipnz
  8794     0A5B  0222               	subwf	main@displayValue^(0+384),w
  8795     0A5C  1C03               	skipc
  8796     0A5D  2A5F               	goto	u5421
  8797     0A5E  2A60               	goto	u5420
  8798     0A5F                     u5421:
  8799     0A5F  2A64               	goto	l4043
  8800     0A60                     u5420:
  8801     0A60                     l4041:
  8802                           
  8803                           ;main1.c: 335:                     displayValue = 800;
  8804     0A60  3020               	movlw	32
  8805     0A61  00A2               	movwf	main@displayValue^(0+384)
  8806     0A62  3003               	movlw	3
  8807     0A63  00A3               	movwf	(main@displayValue^(0+384)+1)
  8808     0A64                     l4043:
  8809                           
  8810                           ;main1.c: 337:                 sprintf(uartMessage, "s%d\r\n", displayValue);
  8811     0A64  3059               	movlw	low (STR_17| (0+32768))
  8812     0A65  1283               	bcf	3,5	;RP0=0, select bank0
  8813     0A66  1303               	bcf	3,6	;RP1=0, select bank0
  8814     0A67  00AC               	movwf	sprintf@f
  8815     0A68  3091               	movlw	high (STR_17| (0+32768))
  8816     0A69  00AD               	movwf	sprintf@f+1
  8817     0A6A  1683               	bsf	3,5	;RP0=1, select bank3
  8818     0A6B  1703               	bsf	3,6	;RP1=1, select bank3
  8819     0A6C  0823               	movf	(main@displayValue+1)^(0+384),w
  8820     0A6D  1283               	bcf	3,5	;RP0=0, select bank0
  8821     0A6E  1303               	bcf	3,6	;RP1=0, select bank0
  8822     0A6F  00AF               	movwf	?_sprintf+3
  8823     0A70  1683               	bsf	3,5	;RP0=1, select bank3
  8824     0A71  1703               	bsf	3,6	;RP1=1, select bank3
  8825     0A72  0822               	movf	main@displayValue^(0+384),w
  8826     0A73  1283               	bcf	3,5	;RP0=0, select bank0
  8827     0A74  1303               	bcf	3,6	;RP1=0, select bank0
  8828     0A75  00AE               	movwf	?_sprintf+2
  8829     0A76  30BD               	movlw	(low (main@uartMessage| 0))& (0+255)
  8830     0A77  120A  118A  25BB  120A  158A  	fcall	_sprintf
  8831     0A7C                     l4045:
  8832                           
  8833                           ;main1.c: 338:                 UART_Write_Text(uartMessage);
  8834     0A7C  30BD               	movlw	(low (main@uartMessage| 0))& (0+255)
  8835     0A7D  1283               	bcf	3,5	;RP0=0, select bank0
  8836     0A7E  1303               	bcf	3,6	;RP1=0, select bank0
  8837     0A7F  00A1               	movwf	UART_Write_Text@text
  8838     0A80  3000               	movlw	0
  8839     0A81  00A2               	movwf	UART_Write_Text@text+1
  8840     0A82  160A  118A  229B  120A  158A  	fcall	_UART_Write_Text
  8841     0A87  2C02               	goto	l4105
  8842     0A88                     l238:	
  8843                           ;main1.c: 339:             }
  8844                           
  8845                           
  8846                           ;main1.c: 341:         } else if (RE0 == 1) {
  8847     0A88  2C02               	goto	l4105
  8848     0A89                     l233:
  8849     0A89  1C09               	btfss	9,0	;volatile
  8850     0A8A  2A8C               	goto	u5431
  8851     0A8B  2A8D               	goto	u5430
  8852     0A8C                     u5431:
  8853     0A8C  2AC4               	goto	l241
  8854     0A8D                     u5430:
  8855     0A8D                     l4047:
  8856                           
  8857                           ;main1.c: 342:             Lcd_Set_Cursor(2, 13);
  8858     0A8D  300D               	movlw	13
  8859     0A8E  00A4               	movwf	Lcd_Set_Cursor@b
  8860     0A8F  3002               	movlw	2
  8861     0A90  120A  118A  27B2  120A  158A  	fcall	_Lcd_Set_Cursor
  8862     0A95                     l4049:
  8863                           
  8864                           ;main1.c: 343:             Lcd_Write_String(" FWD          ");
  8865     0A95  30CD               	movlw	low (STR_18| (0+32768))
  8866     0A96  1283               	bcf	3,5	;RP0=0, select bank0
  8867     0A97  1303               	bcf	3,6	;RP1=0, select bank0
  8868     0A98  00A5               	movwf	Lcd_Write_String@a
  8869     0A99  3090               	movlw	high (STR_18| (0+32768))
  8870     0A9A  00A6               	movwf	Lcd_Write_String@a+1
  8871     0A9B  160A  118A  2327  120A  158A  	fcall	_Lcd_Write_String
  8872     0AA0                     l4051:
  8873                           
  8874                           ;main1.c: 344:             char combinedText[20];;main1.c: 345:             sprintf(comb
      +                          inedText, "s%d\r\n", displayValue);
  8875     0AA0  3059               	movlw	low (STR_17| (0+32768))
  8876     0AA1  1283               	bcf	3,5	;RP0=0, select bank0
  8877     0AA2  1303               	bcf	3,6	;RP1=0, select bank0
  8878     0AA3  00AC               	movwf	sprintf@f
  8879     0AA4  3091               	movlw	high (STR_17| (0+32768))
  8880     0AA5  00AD               	movwf	sprintf@f+1
  8881     0AA6  1683               	bsf	3,5	;RP0=1, select bank3
  8882     0AA7  1703               	bsf	3,6	;RP1=1, select bank3
  8883     0AA8  0823               	movf	(main@displayValue+1)^(0+384),w
  8884     0AA9  1283               	bcf	3,5	;RP0=0, select bank0
  8885     0AAA  1303               	bcf	3,6	;RP1=0, select bank0
  8886     0AAB  00AF               	movwf	?_sprintf+3
  8887     0AAC  1683               	bsf	3,5	;RP0=1, select bank3
  8888     0AAD  1703               	bsf	3,6	;RP1=1, select bank3
  8889     0AAE  0822               	movf	main@displayValue^(0+384),w
  8890     0AAF  1283               	bcf	3,5	;RP0=0, select bank0
  8891     0AB0  1303               	bcf	3,6	;RP1=0, select bank0
  8892     0AB1  00AE               	movwf	?_sprintf+2
  8893     0AB2  305A               	movlw	(low (main@combinedText| 0))& (0+255)
  8894     0AB3  120A  118A  25BB  120A  158A  	fcall	_sprintf
  8895     0AB8                     l4053:
  8896                           
  8897                           ;main1.c: 346:             UART_Write_Text(combinedText);
  8898     0AB8  305A               	movlw	(low (main@combinedText| 0))& (0+255)
  8899     0AB9  1283               	bcf	3,5	;RP0=0, select bank0
  8900     0ABA  1303               	bcf	3,6	;RP1=0, select bank0
  8901     0ABB  00A1               	movwf	UART_Write_Text@text
  8902     0ABC  3000               	movlw	0
  8903     0ABD  00A2               	movwf	UART_Write_Text@text+1
  8904     0ABE  160A  118A  229B  120A  158A  	fcall	_UART_Write_Text
  8905                           
  8906                           ;main1.c: 349:         } else if (RC2 == 1 && (RE1 == 1 || RC0 == 1)) {
  8907     0AC3  2C02               	goto	l4105
  8908     0AC4                     l241:
  8909     0AC4  1D07               	btfss	7,2	;volatile
  8910     0AC5  2AC7               	goto	u5441
  8911     0AC6  2AC8               	goto	u5440
  8912     0AC7                     u5441:
  8913     0AC7  2AEF               	goto	l243
  8914     0AC8                     u5440:
  8915     0AC8                     l4055:
  8916     0AC8  1889               	btfsc	9,1	;volatile
  8917     0AC9  2ACB               	goto	u5451
  8918     0ACA  2ACC               	goto	u5450
  8919     0ACB                     u5451:
  8920     0ACB  2AD0               	goto	l4059
  8921     0ACC                     u5450:
  8922     0ACC                     l4057:
  8923     0ACC  1C07               	btfss	7,0	;volatile
  8924     0ACD  2ACF               	goto	u5461
  8925     0ACE  2AD0               	goto	u5460
  8926     0ACF                     u5461:
  8927     0ACF  2AEF               	goto	l243
  8928     0AD0                     u5460:
  8929     0AD0                     l4059:
  8930                           
  8931                           ;main1.c: 350:             Lcd_Set_Cursor(2, 13);
  8932     0AD0  300D               	movlw	13
  8933     0AD1  00A4               	movwf	Lcd_Set_Cursor@b
  8934     0AD2  3002               	movlw	2
  8935     0AD3  120A  118A  27B2  120A  158A  	fcall	_Lcd_Set_Cursor
  8936     0AD8                     l4061:
  8937                           
  8938                           ;main1.c: 351:             Lcd_Write_String(" REW LMT");
  8939     0AD8  3050               	movlw	low (STR_20| (0+32768))
  8940     0AD9  1283               	bcf	3,5	;RP0=0, select bank0
  8941     0ADA  1303               	bcf	3,6	;RP1=0, select bank0
  8942     0ADB  00A5               	movwf	Lcd_Write_String@a
  8943     0ADC  3091               	movlw	high (STR_20| (0+32768))
  8944     0ADD  00A6               	movwf	Lcd_Write_String@a+1
  8945     0ADE  160A  118A  2327  120A  158A  	fcall	_Lcd_Write_String
  8946     0AE3                     l4063:
  8947                           
  8948                           ;main1.c: 352:             UART_Write_Text("s0\r\n");
  8949     0AE3  3065               	movlw	low (STR_15| (0+32768))
  8950     0AE4  1283               	bcf	3,5	;RP0=0, select bank0
  8951     0AE5  1303               	bcf	3,6	;RP1=0, select bank0
  8952     0AE6  00A1               	movwf	UART_Write_Text@text
  8953     0AE7  3091               	movlw	high (STR_15| (0+32768))
  8954     0AE8  00A2               	movwf	UART_Write_Text@text+1
  8955     0AE9  160A  118A  229B  120A  158A  	fcall	_UART_Write_Text
  8956                           
  8957                           ;main1.c: 354:         } else if ((RC0 == 1 && RE1 == 1) || (RC0 == 1 && RE0 == 0)) {
  8958     0AEE  2C02               	goto	l4105
  8959     0AEF                     l243:
  8960     0AEF  1C07               	btfss	7,0	;volatile
  8961     0AF0  2AF2               	goto	u5471
  8962     0AF1  2AF3               	goto	u5470
  8963     0AF2                     u5471:
  8964     0AF2  2AF7               	goto	l251
  8965     0AF3                     u5470:
  8966     0AF3                     l4065:
  8967     0AF3  1889               	btfsc	9,1	;volatile
  8968     0AF4  2AF6               	goto	u5481
  8969     0AF5  2AF7               	goto	u5480
  8970     0AF6                     u5481:
  8971     0AF6  2AFF               	goto	l4069
  8972     0AF7                     u5480:
  8973     0AF7                     l251:
  8974     0AF7  1C07               	btfss	7,0	;volatile
  8975     0AF8  2AFA               	goto	u5491
  8976     0AF9  2AFB               	goto	u5490
  8977     0AFA                     u5491:
  8978     0AFA  2B90               	goto	l247
  8979     0AFB                     u5490:
  8980     0AFB                     l4067:
  8981     0AFB  1809               	btfsc	9,0	;volatile
  8982     0AFC  2AFE               	goto	u5501
  8983     0AFD  2AFF               	goto	u5500
  8984     0AFE                     u5501:
  8985     0AFE  2B90               	goto	l247
  8986     0AFF                     u5500:
  8987     0AFF                     l4069:
  8988                           
  8989                           ;main1.c: 355:             Lcd_Set_Cursor(2, 13);
  8990     0AFF  300D               	movlw	13
  8991     0B00  00A4               	movwf	Lcd_Set_Cursor@b
  8992     0B01  3002               	movlw	2
  8993     0B02  120A  118A  27B2  120A  158A  	fcall	_Lcd_Set_Cursor
  8994     0B07                     l4071:
  8995                           
  8996                           ;main1.c: 356:             Lcd_Write_String(" REW 1.6K");
  8997     0B07  3033               	movlw	low (STR_22| (0+32768))
  8998     0B08  1283               	bcf	3,5	;RP0=0, select bank0
  8999     0B09  1303               	bcf	3,6	;RP1=0, select bank0
  9000     0B0A  00A5               	movwf	Lcd_Write_String@a
  9001     0B0B  3091               	movlw	high (STR_22| (0+32768))
  9002     0B0C  00A6               	movwf	Lcd_Write_String@a+1
  9003     0B0D  160A  118A  2327  120A  158A  	fcall	_Lcd_Write_String
  9004     0B12                     l4073:
  9005                           
  9006                           ;main1.c: 357:             int negativeFeedValue = -displayValue;
  9007     0B12  1683               	bsf	3,5	;RP0=1, select bank3
  9008     0B13  1703               	bsf	3,6	;RP1=1, select bank3
  9009     0B14  0922               	comf	main@displayValue^(0+384),w
  9010     0B15  1283               	bcf	3,5	;RP0=0, select bank0
  9011     0B16  1303               	bcf	3,6	;RP1=0, select bank0
  9012     0B17  00D4               	movwf	??_main
  9013     0B18  1683               	bsf	3,5	;RP0=1, select bank3
  9014     0B19  1703               	bsf	3,6	;RP1=1, select bank3
  9015     0B1A  0923               	comf	(main@displayValue+1)^(0+384),w
  9016     0B1B  1283               	bcf	3,5	;RP0=0, select bank0
  9017     0B1C  1303               	bcf	3,6	;RP1=0, select bank0
  9018     0B1D  00D5               	movwf	??_main+1
  9019     0B1E  0AD4               	incf	??_main,f
  9020     0B1F  1903               	skipnz
  9021     0B20  0AD5               	incf	??_main+1,f
  9022     0B21  0854               	movf	??_main,w
  9023     0B22  1683               	bsf	3,5	;RP0=1, select bank3
  9024     0B23  1703               	bsf	3,6	;RP1=1, select bank3
  9025     0B24  009E               	movwf	main@negativeFeedValue^(0+384)
  9026     0B25  1283               	bcf	3,5	;RP0=0, select bank0
  9027     0B26  1303               	bcf	3,6	;RP1=0, select bank0
  9028     0B27  0855               	movf	??_main+1,w
  9029     0B28  1683               	bsf	3,5	;RP0=1, select bank3
  9030     0B29  1703               	bsf	3,6	;RP1=1, select bank3
  9031     0B2A  009F               	movwf	(main@negativeFeedValue+1)^(0+384)
  9032     0B2B                     l4075:
  9033                           
  9034                           ;main1.c: 358:             if (negativeFeedValue > -800) {
  9035     0B2B  081F               	movf	(main@negativeFeedValue+1)^(0+384),w
  9036     0B2C  3A80               	xorlw	128
  9037     0B2D  00FF               	movwf	btemp+1
  9038     0B2E  307C               	movlw	124
  9039     0B2F  027F               	subwf	btemp+1,w
  9040     0B30  1D03               	skipz
  9041     0B31  2B34               	goto	u5515
  9042     0B32  30E1               	movlw	225
  9043     0B33  021E               	subwf	main@negativeFeedValue^(0+384),w
  9044     0B34                     u5515:
  9045     0B34  1C03               	skipc
  9046     0B35  2B37               	goto	u5511
  9047     0B36  2B38               	goto	u5510
  9048     0B37                     u5511:
  9049     0B37  2A88               	goto	l238
  9050     0B38                     u5510:
  9051     0B38                     l4077:
  9052                           
  9053                           ;main1.c: 359:                 char uartMessage[8];;main1.c: 360:                 negati
      +                          veFeedValue -= 80;
  9054     0B38  30B0               	movlw	176
  9055     0B39  1683               	bsf	3,5	;RP0=1, select bank3
  9056     0B3A  1703               	bsf	3,6	;RP1=1, select bank3
  9057     0B3B  079E               	addwf	main@negativeFeedValue^(0+384),f
  9058     0B3C  1803               	skipnc
  9059     0B3D  0A9F               	incf	(main@negativeFeedValue+1)^(0+384),f
  9060     0B3E  30FF               	movlw	255
  9061     0B3F  079F               	addwf	(main@negativeFeedValue+1)^(0+384),f
  9062     0B40                     l4079:
  9063                           
  9064                           ;main1.c: 361:                 if (negativeFeedValue < -800) {
  9065     0B40  081F               	movf	(main@negativeFeedValue+1)^(0+384),w
  9066     0B41  3A80               	xorlw	128
  9067     0B42  00FF               	movwf	btemp+1
  9068     0B43  307C               	movlw	124
  9069     0B44  027F               	subwf	btemp+1,w
  9070     0B45  1D03               	skipz
  9071     0B46  2B49               	goto	u5525
  9072     0B47  30E0               	movlw	224
  9073     0B48  021E               	subwf	main@negativeFeedValue^(0+384),w
  9074     0B49                     u5525:
  9075     0B49  1803               	skipnc
  9076     0B4A  2B4C               	goto	u5521
  9077     0B4B  2B4D               	goto	u5520
  9078     0B4C                     u5521:
  9079     0B4C  2B53               	goto	l4083
  9080     0B4D                     u5520:
  9081     0B4D                     l4081:
  9082                           
  9083                           ;main1.c: 362:                     negativeFeedValue = -800;
  9084     0B4D  30E0               	movlw	224
  9085     0B4E  1683               	bsf	3,5	;RP0=1, select bank3
  9086     0B4F  1703               	bsf	3,6	;RP1=1, select bank3
  9087     0B50  009E               	movwf	main@negativeFeedValue^(0+384)
  9088     0B51  30FC               	movlw	252
  9089     0B52  009F               	movwf	(main@negativeFeedValue^(0+384)+1)
  9090     0B53                     l4083:
  9091                           
  9092                           ;main1.c: 364:                 displayValue=-negativeFeedValue;
  9093     0B53  1683               	bsf	3,5	;RP0=1, select bank3
  9094     0B54  1703               	bsf	3,6	;RP1=1, select bank3
  9095     0B55  091E               	comf	main@negativeFeedValue^(0+384),w
  9096     0B56  1283               	bcf	3,5	;RP0=0, select bank0
  9097     0B57  1303               	bcf	3,6	;RP1=0, select bank0
  9098     0B58  00D4               	movwf	??_main
  9099     0B59  1683               	bsf	3,5	;RP0=1, select bank3
  9100     0B5A  1703               	bsf	3,6	;RP1=1, select bank3
  9101     0B5B  091F               	comf	(main@negativeFeedValue+1)^(0+384),w
  9102     0B5C  1283               	bcf	3,5	;RP0=0, select bank0
  9103     0B5D  1303               	bcf	3,6	;RP1=0, select bank0
  9104     0B5E  00D5               	movwf	??_main+1
  9105     0B5F  0AD4               	incf	??_main,f
  9106     0B60  1903               	skipnz
  9107     0B61  0AD5               	incf	??_main+1,f
  9108     0B62  0854               	movf	??_main,w
  9109     0B63  1683               	bsf	3,5	;RP0=1, select bank3
  9110     0B64  1703               	bsf	3,6	;RP1=1, select bank3
  9111     0B65  00A2               	movwf	main@displayValue^(0+384)
  9112     0B66  1283               	bcf	3,5	;RP0=0, select bank0
  9113     0B67  1303               	bcf	3,6	;RP1=0, select bank0
  9114     0B68  0855               	movf	??_main+1,w
  9115     0B69  1683               	bsf	3,5	;RP0=1, select bank3
  9116     0B6A  1703               	bsf	3,6	;RP1=1, select bank3
  9117     0B6B  00A3               	movwf	(main@displayValue+1)^(0+384)
  9118     0B6C                     l4085:
  9119                           
  9120                           ;main1.c: 365:                 sprintf(uartMessage, "s%d\r\n", negativeFeedValue);
  9121     0B6C  3059               	movlw	low (STR_17| (0+32768))
  9122     0B6D  1283               	bcf	3,5	;RP0=0, select bank0
  9123     0B6E  1303               	bcf	3,6	;RP1=0, select bank0
  9124     0B6F  00AC               	movwf	sprintf@f
  9125     0B70  3091               	movlw	high (STR_17| (0+32768))
  9126     0B71  00AD               	movwf	sprintf@f+1
  9127     0B72  1683               	bsf	3,5	;RP0=1, select bank3
  9128     0B73  1703               	bsf	3,6	;RP1=1, select bank3
  9129     0B74  081F               	movf	(main@negativeFeedValue+1)^(0+384),w
  9130     0B75  1283               	bcf	3,5	;RP0=0, select bank0
  9131     0B76  1303               	bcf	3,6	;RP1=0, select bank0
  9132     0B77  00AF               	movwf	?_sprintf+3
  9133     0B78  1683               	bsf	3,5	;RP0=1, select bank3
  9134     0B79  1703               	bsf	3,6	;RP1=1, select bank3
  9135     0B7A  081E               	movf	main@negativeFeedValue^(0+384),w
  9136     0B7B  1283               	bcf	3,5	;RP0=0, select bank0
  9137     0B7C  1303               	bcf	3,6	;RP1=0, select bank0
  9138     0B7D  00AE               	movwf	?_sprintf+2
  9139     0B7E  30C5               	movlw	(low (main@uartMessage_369| 0))& (0+255)
  9140     0B7F  120A  118A  25BB  120A  158A  	fcall	_sprintf
  9141     0B84                     l4087:
  9142                           
  9143                           ;main1.c: 366:                 UART_Write_Text(uartMessage);
  9144     0B84  30C5               	movlw	(low (main@uartMessage_369| 0))& (0+255)
  9145     0B85  1283               	bcf	3,5	;RP0=0, select bank0
  9146     0B86  1303               	bcf	3,6	;RP1=0, select bank0
  9147     0B87  00A1               	movwf	UART_Write_Text@text
  9148     0B88  3000               	movlw	0
  9149     0B89  00A2               	movwf	UART_Write_Text@text+1
  9150     0B8A  160A  118A  229B  120A  158A  	fcall	_UART_Write_Text
  9151     0B8F  2C02               	goto	l4105
  9152     0B90                     l247:
  9153     0B90  1C89               	btfss	9,1	;volatile
  9154     0B91  2B93               	goto	u5531
  9155     0B92  2B94               	goto	u5530
  9156     0B93                     u5531:
  9157     0B93  2BE4               	goto	l4099
  9158     0B94                     u5530:
  9159     0B94                     l4089:
  9160                           
  9161                           ;main1.c: 370:             Lcd_Set_Cursor(2, 13);
  9162     0B94  300D               	movlw	13
  9163     0B95  00A4               	movwf	Lcd_Set_Cursor@b
  9164     0B96  3002               	movlw	2
  9165     0B97  120A  118A  27B2  120A  158A  	fcall	_Lcd_Set_Cursor
  9166     0B9C                     l4091:
  9167                           
  9168                           ;main1.c: 371:             Lcd_Write_String(" REW         ");
  9169     0B9C  30EB               	movlw	low (STR_24| (0+32768))
  9170     0B9D  1283               	bcf	3,5	;RP0=0, select bank0
  9171     0B9E  1303               	bcf	3,6	;RP1=0, select bank0
  9172     0B9F  00A5               	movwf	Lcd_Write_String@a
  9173     0BA0  3090               	movlw	high (STR_24| (0+32768))
  9174     0BA1  00A6               	movwf	Lcd_Write_String@a+1
  9175     0BA2  160A  118A  2327  120A  158A  	fcall	_Lcd_Write_String
  9176     0BA7                     l4093:
  9177                           
  9178                           ;main1.c: 372:             int negativeDisplayValue = -displayValue;
  9179     0BA7  1683               	bsf	3,5	;RP0=1, select bank3
  9180     0BA8  1703               	bsf	3,6	;RP1=1, select bank3
  9181     0BA9  0922               	comf	main@displayValue^(0+384),w
  9182     0BAA  1283               	bcf	3,5	;RP0=0, select bank0
  9183     0BAB  1303               	bcf	3,6	;RP1=0, select bank0
  9184     0BAC  00D4               	movwf	??_main
  9185     0BAD  1683               	bsf	3,5	;RP0=1, select bank3
  9186     0BAE  1703               	bsf	3,6	;RP1=1, select bank3
  9187     0BAF  0923               	comf	(main@displayValue+1)^(0+384),w
  9188     0BB0  1283               	bcf	3,5	;RP0=0, select bank0
  9189     0BB1  1303               	bcf	3,6	;RP1=0, select bank0
  9190     0BB2  00D5               	movwf	??_main+1
  9191     0BB3  0AD4               	incf	??_main,f
  9192     0BB4  1903               	skipnz
  9193     0BB5  0AD5               	incf	??_main+1,f
  9194     0BB6  0854               	movf	??_main,w
  9195     0BB7  1683               	bsf	3,5	;RP0=1, select bank1
  9196     0BB8  1303               	bcf	3,6	;RP1=0, select bank1
  9197     0BB9  00EA               	movwf	main@negativeDisplayValue^(0+128)
  9198     0BBA  1283               	bcf	3,5	;RP0=0, select bank0
  9199     0BBB  1303               	bcf	3,6	;RP1=0, select bank0
  9200     0BBC  0855               	movf	??_main+1,w
  9201     0BBD  1683               	bsf	3,5	;RP0=1, select bank1
  9202     0BBE  1303               	bcf	3,6	;RP1=0, select bank1
  9203     0BBF  00EB               	movwf	(main@negativeDisplayValue+1)^(0+128)
  9204     0BC0                     l4095:
  9205                           
  9206                           ;main1.c: 373:             char combinedText[20];;main1.c: 374:             sprintf(comb
      +                          inedText, "s%d\r\n", negativeDisplayValue);
  9207     0BC0  3059               	movlw	low (STR_17| (0+32768))
  9208     0BC1  1283               	bcf	3,5	;RP0=0, select bank0
  9209     0BC2  1303               	bcf	3,6	;RP1=0, select bank0
  9210     0BC3  00AC               	movwf	sprintf@f
  9211     0BC4  3091               	movlw	high (STR_17| (0+32768))
  9212     0BC5  00AD               	movwf	sprintf@f+1
  9213     0BC6  1683               	bsf	3,5	;RP0=1, select bank1
  9214     0BC7  1303               	bcf	3,6	;RP1=0, select bank1
  9215     0BC8  086B               	movf	(main@negativeDisplayValue+1)^(0+128),w
  9216     0BC9  1283               	bcf	3,5	;RP0=0, select bank0
  9217     0BCA  1303               	bcf	3,6	;RP1=0, select bank0
  9218     0BCB  00AF               	movwf	?_sprintf+3
  9219     0BCC  1683               	bsf	3,5	;RP0=1, select bank1
  9220     0BCD  1303               	bcf	3,6	;RP1=0, select bank1
  9221     0BCE  086A               	movf	main@negativeDisplayValue^(0+128),w
  9222     0BCF  1283               	bcf	3,5	;RP0=0, select bank0
  9223     0BD0  1303               	bcf	3,6	;RP1=0, select bank0
  9224     0BD1  00AE               	movwf	?_sprintf+2
  9225     0BD2  30A0               	movlw	(low (main@combinedText_373| 0))& (0+255)
  9226     0BD3  120A  118A  25BB  120A  158A  	fcall	_sprintf
  9227     0BD8                     l4097:
  9228                           
  9229                           ;main1.c: 375:             UART_Write_Text(combinedText);
  9230     0BD8  30A0               	movlw	(low (main@combinedText_373| 0))& (0+255)
  9231     0BD9  1283               	bcf	3,5	;RP0=0, select bank0
  9232     0BDA  1303               	bcf	3,6	;RP1=0, select bank0
  9233     0BDB  00A1               	movwf	UART_Write_Text@text
  9234     0BDC  3000               	movlw	0
  9235     0BDD  00A2               	movwf	UART_Write_Text@text+1
  9236     0BDE  160A  118A  229B  120A  158A  	fcall	_UART_Write_Text
  9237                           
  9238                           ;main1.c: 376:         } else {
  9239     0BE3  2C02               	goto	l4105
  9240     0BE4                     l4099:
  9241                           
  9242                           ;main1.c: 378:             Lcd_Set_Cursor(2, 13);
  9243     0BE4  300D               	movlw	13
  9244     0BE5  00A4               	movwf	Lcd_Set_Cursor@b
  9245     0BE6  3002               	movlw	2
  9246     0BE7  120A  118A  27B2  120A  158A  	fcall	_Lcd_Set_Cursor
  9247     0BEC                     l4101:
  9248                           
  9249                           ;main1.c: 379:             Lcd_Write_String(" STOP       ");
  9250     0BEC  3007               	movlw	low (STR_26| (0+32768))
  9251     0BED  1283               	bcf	3,5	;RP0=0, select bank0
  9252     0BEE  1303               	bcf	3,6	;RP1=0, select bank0
  9253     0BEF  00A5               	movwf	Lcd_Write_String@a
  9254     0BF0  3091               	movlw	high (STR_26| (0+32768))
  9255     0BF1  00A6               	movwf	Lcd_Write_String@a+1
  9256     0BF2  160A  118A  2327  120A  158A  	fcall	_Lcd_Write_String
  9257     0BF7                     l4103:
  9258                           
  9259                           ;main1.c: 380:             UART_Write_Text("s0\r\n");
  9260     0BF7  3065               	movlw	low (STR_15| (0+32768))
  9261     0BF8  1283               	bcf	3,5	;RP0=0, select bank0
  9262     0BF9  1303               	bcf	3,6	;RP1=0, select bank0
  9263     0BFA  00A1               	movwf	UART_Write_Text@text
  9264     0BFB  3091               	movlw	high (STR_15| (0+32768))
  9265     0BFC  00A2               	movwf	UART_Write_Text@text+1
  9266     0BFD  160A  118A  229B  120A  158A  	fcall	_UART_Write_Text
  9267     0C02                     l4105:
  9268                           
  9269                           ;main1.c: 387:         if((RC1==1) &&( RE0==1 || RE2 )){
  9270     0C02  1283               	bcf	3,5	;RP0=0, select bank0
  9271     0C03  1303               	bcf	3,6	;RP1=0, select bank0
  9272     0C04  1C87               	btfss	7,1	;volatile
  9273     0C05  2C07               	goto	u5541
  9274     0C06  2C08               	goto	u5540
  9275     0C07                     u5541:
  9276     0C07  2C14               	goto	l257
  9277     0C08                     u5540:
  9278     0C08                     l4107:
  9279     0C08  1809               	btfsc	9,0	;volatile
  9280     0C09  2C0B               	goto	u5551
  9281     0C0A  2C0C               	goto	u5550
  9282     0C0B                     u5551:
  9283     0C0B  2C10               	goto	l259
  9284     0C0C                     u5550:
  9285     0C0C                     l4109:
  9286     0C0C  1D09               	btfss	9,2	;volatile
  9287     0C0D  2C0F               	goto	u5561
  9288     0C0E  2C10               	goto	u5560
  9289     0C0F                     u5561:
  9290     0C0F  2C14               	goto	l257
  9291     0C10                     u5560:
  9292     0C10                     l259:
  9293                           
  9294                           ;main1.c: 389:             RA4=1;
  9295     0C10  1283               	bcf	3,5	;RP0=0, select bank0
  9296     0C11  1303               	bcf	3,6	;RP1=0, select bank0
  9297     0C12  1605               	bsf	5,4	;volatile
  9298                           
  9299                           ;main1.c: 390:         }
  9300     0C13  2CB5               	goto	l265
  9301     0C14                     l257:	
  9302                           ;main1.c: 391:         else if(( RC2==1) && (RE1==1 || RC0)){
  9303                           
  9304     0C14  1D07               	btfss	7,2	;volatile
  9305     0C15  2C17               	goto	u5571
  9306     0C16  2C18               	goto	u5570
  9307     0C17                     u5571:
  9308     0C17  2C21               	goto	l261
  9309     0C18                     u5570:
  9310     0C18                     l4111:
  9311     0C18  1889               	btfsc	9,1	;volatile
  9312     0C19  2C1B               	goto	u5581
  9313     0C1A  2C1C               	goto	u5580
  9314     0C1B                     u5581:
  9315     0C1B  2C10               	goto	l259
  9316     0C1C                     u5580:
  9317     0C1C                     l4113:
  9318     0C1C  1C07               	btfss	7,0	;volatile
  9319     0C1D  2C1F               	goto	u5591
  9320     0C1E  2C20               	goto	u5590
  9321     0C1F                     u5591:
  9322     0C1F  2C21               	goto	l261
  9323     0C20                     u5590:
  9324     0C20  2C10               	goto	l259
  9325     0C21                     l261:	
  9326                           ;main1.c: 395:         else {
  9327                           
  9328                           
  9329                           ;main1.c: 396:             RA4=0;
  9330     0C21  1205               	bcf	5,4	;volatile
  9331     0C22  2CB5               	goto	l265
  9332     0C23                     l211:	
  9333                           ;main1.c: 401: else if( RC3==1) {
  9334                           
  9335     0C23  1D87               	btfss	7,3	;volatile
  9336     0C24  2C26               	goto	u5601
  9337     0C25  2C27               	goto	u5600
  9338     0C26                     u5601:
  9339     0C26  2C7D               	goto	l266
  9340     0C27                     u5600:
  9341     0C27                     l4115:
  9342                           
  9343                           ;main1.c: 406:     Lcd_Set_Cursor(1,1);
  9344     0C27  01A4               	clrf	Lcd_Set_Cursor@b
  9345     0C28  0AA4               	incf	Lcd_Set_Cursor@b,f
  9346     0C29  3001               	movlw	1
  9347     0C2A  120A  118A  27B2  120A  158A  	fcall	_Lcd_Set_Cursor
  9348     0C2F                     l4117:
  9349                           
  9350                           ;main1.c: 407:             Lcd_Write_String("   FEED RATE ERROR       ");
  9351     0C2F  3037               	movlw	low (STR_28| (0+32768))
  9352     0C30  1283               	bcf	3,5	;RP0=0, select bank0
  9353     0C31  1303               	bcf	3,6	;RP1=0, select bank0
  9354     0C32  00A5               	movwf	Lcd_Write_String@a
  9355     0C33  3090               	movlw	high (STR_28| (0+32768))
  9356     0C34  00A6               	movwf	Lcd_Write_String@a+1
  9357     0C35  160A  118A  2327  120A  158A  	fcall	_Lcd_Write_String
  9358     0C3A                     l4119:
  9359                           
  9360                           ;main1.c: 408:     Lcd_Set_Cursor(2,1);
  9361     0C3A  1283               	bcf	3,5	;RP0=0, select bank0
  9362     0C3B  1303               	bcf	3,6	;RP1=0, select bank0
  9363     0C3C  01A4               	clrf	Lcd_Set_Cursor@b
  9364     0C3D  0AA4               	incf	Lcd_Set_Cursor@b,f
  9365     0C3E  3002               	movlw	2
  9366     0C3F  120A  118A  27B2  120A  158A  	fcall	_Lcd_Set_Cursor
  9367                           
  9368                           ;main1.c: 409:             Lcd_Write_String("   ILERLEME HATASI        ");
  9369     0C44  301C               	movlw	low (STR_29| (0+32768))
  9370     0C45  1283               	bcf	3,5	;RP0=0, select bank0
  9371     0C46  1303               	bcf	3,6	;RP1=0, select bank0
  9372     0C47  00A5               	movwf	Lcd_Write_String@a
  9373     0C48  3090               	movlw	high (STR_29| (0+32768))
  9374     0C49  00A6               	movwf	Lcd_Write_String@a+1
  9375     0C4A  160A  118A  2327  120A  158A  	fcall	_Lcd_Write_String
  9376                           
  9377                           ;main1.c: 410:      UART_Write_Text("s0\r\n");
  9378     0C4F  3065               	movlw	low (STR_15| (0+32768))
  9379     0C50  1283               	bcf	3,5	;RP0=0, select bank0
  9380     0C51  1303               	bcf	3,6	;RP1=0, select bank0
  9381     0C52  00A1               	movwf	UART_Write_Text@text
  9382     0C53  3091               	movlw	high (STR_15| (0+32768))
  9383     0C54  00A2               	movwf	UART_Write_Text@text+1
  9384     0C55  160A  118A  229B  120A  158A  	fcall	_UART_Write_Text
  9385     0C5A                     l4121:
  9386                           
  9387                           ;main1.c: 411:       RA4=1;
  9388     0C5A  1283               	bcf	3,5	;RP0=0, select bank0
  9389     0C5B  1303               	bcf	3,6	;RP1=0, select bank0
  9390     0C5C  1605               	bsf	5,4	;volatile
  9391     0C5D                     l4123:
  9392                           
  9393                           ;main1.c: 412:       _delay((unsigned long)((1000)*(4000000/4000.0)));
  9394     0C5D  3006               	movlw	6
  9395     0C5E  1283               	bcf	3,5	;RP0=0, select bank0
  9396     0C5F  1303               	bcf	3,6	;RP1=0, select bank0
  9397     0C60  00D6               	movwf	??_main+2
  9398     0C61  3013               	movlw	19
  9399     0C62  00D5               	movwf	??_main+1
  9400     0C63  30AD               	movlw	173
  9401     0C64  00D4               	movwf	??_main
  9402     0C65                     u5687:
  9403     0C65  0BD4               	decfsz	??_main,f
  9404     0C66  2C65               	goto	u5687
  9405     0C67  0BD5               	decfsz	??_main+1,f
  9406     0C68  2C65               	goto	u5687
  9407     0C69  0BD6               	decfsz	??_main+2,f
  9408     0C6A  2C65               	goto	u5687
  9409     0C6B                     l4125:
  9410                           
  9411                           ;main1.c: 413:       RA4=0;
  9412     0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  9413     0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  9414     0C6D  1205               	bcf	5,4	;volatile
  9415     0C6E                     l4127:
  9416                           
  9417                           ;main1.c: 414:       _delay((unsigned long)((3000)*(4000000/4000.0)));
  9418     0C6E  3010               	movlw	16
  9419     0C6F  1283               	bcf	3,5	;RP0=0, select bank0
  9420     0C70  1303               	bcf	3,6	;RP1=0, select bank0
  9421     0C71  00D6               	movwf	??_main+2
  9422     0C72  3039               	movlw	57
  9423     0C73  00D5               	movwf	??_main+1
  9424     0C74  300D               	movlw	13
  9425     0C75  00D4               	movwf	??_main
  9426     0C76                     u5697:
  9427     0C76  0BD4               	decfsz	??_main,f
  9428     0C77  2C76               	goto	u5697
  9429     0C78  0BD5               	decfsz	??_main+1,f
  9430     0C79  2C76               	goto	u5697
  9431     0C7A  0BD6               	decfsz	??_main+2,f
  9432     0C7B  2C76               	goto	u5697
  9433     0C7C  2C10               	goto	l259
  9434     0C7D                     l266:	
  9435                           ;main1.c: 420:      else if (RD0 == 1 ){
  9436                           
  9437     0C7D  1C08               	btfss	8,0	;volatile
  9438     0C7E  2C80               	goto	u5611
  9439     0C7F  2C81               	goto	u5610
  9440     0C80                     u5611:
  9441     0C80  2CB5               	goto	l265
  9442     0C81                     u5610:
  9443     0C81                     l4131:
  9444                           
  9445                           ;main1.c: 421:     UART_Write_Text("s0\r\n");
  9446     0C81  3065               	movlw	low (STR_15| (0+32768))
  9447     0C82  00A1               	movwf	UART_Write_Text@text
  9448     0C83  3091               	movlw	high (STR_15| (0+32768))
  9449     0C84  00A2               	movwf	UART_Write_Text@text+1
  9450     0C85  160A  118A  229B  120A  158A  	fcall	_UART_Write_Text
  9451     0C8A                     l4133:
  9452                           
  9453                           ;main1.c: 422:     Lcd_Set_Cursor(1,1);
  9454     0C8A  1283               	bcf	3,5	;RP0=0, select bank0
  9455     0C8B  1303               	bcf	3,6	;RP1=0, select bank0
  9456     0C8C  01A4               	clrf	Lcd_Set_Cursor@b
  9457     0C8D  0AA4               	incf	Lcd_Set_Cursor@b,f
  9458     0C8E  3001               	movlw	1
  9459     0C8F  120A  118A  27B2  120A  158A  	fcall	_Lcd_Set_Cursor
  9460     0C94                     l4135:
  9461                           
  9462                           ;main1.c: 423:             Lcd_Write_String("   ROTATION ERROR      ");
  9463     0C94  3069               	movlw	low (STR_32| (0+32768))
  9464     0C95  1283               	bcf	3,5	;RP0=0, select bank0
  9465     0C96  1303               	bcf	3,6	;RP1=0, select bank0
  9466     0C97  00A5               	movwf	Lcd_Write_String@a
  9467     0C98  3090               	movlw	high (STR_32| (0+32768))
  9468     0C99  00A6               	movwf	Lcd_Write_String@a+1
  9469     0C9A  160A  118A  2327  120A  158A  	fcall	_Lcd_Write_String
  9470                           
  9471                           ;main1.c: 424:     Lcd_Set_Cursor(2,1);
  9472     0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  9473     0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  9474     0CA1  01A4               	clrf	Lcd_Set_Cursor@b
  9475     0CA2  0AA4               	incf	Lcd_Set_Cursor@b,f
  9476     0CA3  3002               	movlw	2
  9477     0CA4  120A  118A  27B2  120A  158A  	fcall	_Lcd_Set_Cursor
  9478     0CA9                     l4137:
  9479                           
  9480                           ;main1.c: 425:             Lcd_Write_String("   DONME HATASI        ");
  9481     0CA9  3051               	movlw	low (STR_33| (0+32768))
  9482     0CAA  1283               	bcf	3,5	;RP0=0, select bank0
  9483     0CAB  1303               	bcf	3,6	;RP1=0, select bank0
  9484     0CAC  00A5               	movwf	Lcd_Write_String@a
  9485     0CAD  3090               	movlw	high (STR_33| (0+32768))
  9486     0CAE  00A6               	movwf	Lcd_Write_String@a+1
  9487     0CAF  160A  118A  2327  120A  158A  	fcall	_Lcd_Write_String
  9488     0CB4  2C5A               	goto	l4121
  9489     0CB5                     l265:
  9490     0CB5  160A  118A  2FF4   	goto	l3905
  9491     0CB8                     l210:
  9492     0CB8  120A  118A  280E   	ljmp	start
  9493     0CBB                     __end_of_main:

Data Sizes:
    Strings     342
    Constant    10
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80     78      78
    BANK1            80     80      80
    BANK3            96     20      28
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_25(CODE[6]), STR_23(CODE[6]), STR_19(CODE[6]), STR_17(CODE[6]), 
		 -> STR_13(CODE[10]), STR_11(CODE[6]), STR_8(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> main@combinedText_373(BANK1[20]), main@uartMessage_369(BANK1[8]), main@combinedText(BANK0[20]), main@uartMessage(BANK1[8]), 
		 -> main@rpmString(BANK1[5]), main@adcString1(BANK1[4]), main@lcdText(BANK1[9]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    incrementTime@time	PTR struct Time size(1) Largest target is 8
		 -> currentTime(BANK3[8]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 27
		 -> STR_33(CODE[24]), STR_32(CODE[24]), STR_29(CODE[27]), STR_28(CODE[26]), 
		 -> STR_26(CODE[13]), STR_24(CODE[14]), STR_22(CODE[10]), STR_20(CODE[9]), 
		 -> STR_18(CODE[15]), STR_16(CODE[10]), STR_14(CODE[9]), main@rpmString(BANK1[5]), 
		 -> STR_12(CODE[5]), main@adcString1(BANK1[4]), STR_10(CODE[10]), STR_9(CODE[3]), 
		 -> main@lcdText(BANK1[9]), STR_7(CODE[21]), STR_6(CODE[20]), STR_5(CODE[3]), 
		 -> STR_4(CODE[15]), STR_3(CODE[16]), STR_2(CODE[14]), STR_1(CODE[19]), 

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 20
		 -> STR_31(CODE[5]), STR_30(CODE[5]), STR_27(CODE[5]), main@combinedText_373(BANK1[20]), 
		 -> main@uartMessage_369(BANK1[8]), STR_21(CODE[5]), main@combinedText(BANK0[20]), main@uartMessage(BANK1[8]), 
		 -> STR_15(CODE[5]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _timer_isr in COMMON

    _timer_isr->_writeEEPROM

Critical Paths under _main in BANK0

    _main->___flmul
    _yagBakim->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _sprintf->___lwmod
    ___wmul->_readEEPROM
    ___lwmod->___lwdiv
    ___flmul->___fldiv
    ___awmod->___fltol
    ___awdiv->___fltol
    ___awdiv->___wmul
    _UART_Write_Text->_UART_Write
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _timer_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer_isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer_isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               128   128      0   27500
                                             52 BANK0     26    26      0
                                              0 BANK1     80    80      0
                                              0 BANK3     20    20      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                    _UART_Initialize
                    _UART_Write_Text
                            ___awdiv
                            ___awmod
                            ___fldiv
                            ___flmul
                            ___fltol
                             ___wmul
                           ___xxtofl
                         _readEEPROM
                            _sprintf
                           _yagBakim
 ---------------------------------------------------------------------------------
 (1) _yagBakim                                             2     2      0    5472
                                             12 BANK0      2     2      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2    2544
                                              5 BANK0      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     254
                                              1 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1    2705
                                              4 BANK0      6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             31    21     10    4245
                                             12 BANK0     23    13     10
                            ___fltol (ARG)
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1036
                                              4 BANK0      6     2      4
                         _readEEPROM (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     412
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     421
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _readEEPROM                                           4     2      2     554
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     550
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     685
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2721
                                             26 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1425
                                              0 BANK0     26    18      8
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4    1153
                                             10 BANK0      6     2      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     985
                                             10 BANK0      8     4      4
                            ___fltol (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      7     5      2     971
                                              1 BANK0      7     5      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                              4 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     155
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0     124
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _timer_isr                                            3     3      0     905
                                              4 COMMON     3     3      0
                      _incrementTime
                        _writeEEPROM
 ---------------------------------------------------------------------------------
 (6) _writeEEPROM                                          4     0      4     652
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (6) _incrementTime                                        3     3      0     253
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _UART_Initialize
   _UART_Write_Text
     _UART_Write
   ___awdiv
     ___fltol (ARG)
     ___wmul (ARG)
       _readEEPROM (ARG)
   ___awmod
     ___fltol (ARG)
   ___fldiv
   ___flmul
     __Umul8_16
     ___fldiv (ARG)
     ___xxtofl (ARG)
   ___fltol
   ___wmul
   ___xxtofl
   _readEEPROM
   _sprintf
     ___fltol (ARG)
     ___lwdiv (ARG)
     ___lwmod (ARG)
       ___lwdiv (ARG)
     ___wmul (ARG)
     _isdigit (ARG)
   _yagBakim
     _Lcd_Clear
     _Lcd_Set_Cursor
     _Lcd_Write_String

 _timer_isr (ROOT)
   _incrementTime
   _writeEEPROM

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      C3       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60     14      1C       9       29.2%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      C3      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Sep 27 10:44:47 2023

            ___fldiv@aexp 0039              ___fldiv@bexp 0038                         pc 0002  
            ___fldiv@sign 0031                        l13 1183                        l16 1FF5  
                      l25 12E0                        l19 1FFF                        _RD 0C60  
                      _WR 0C61              ___awdiv@sign 002F                        fsr 0004  
     ___wmul@multiplicand 0026       __Umul8_16@word_mpld 0026                       l210 0CB8  
                     l211 0C23                       l140 11EF                       l141 11F0  
                     l142 11F6                       l222 0234                       l143 11F7  
                     l207 0071                       l144 11FD                       l152 1FF1  
                     l161 14DF                       l241 0AC4                       l233 0A89  
                     l225 042E                       l146 11FE                       l138 11E8  
                     l410 120D                       l170 136C                       l139 11E9  
                     l251 0AF7                       l243 0AEF                       l219 01AB  
                     l412 1225                       l164 125E                       l228 049C  
                     l149 11DE                       l261 0C21                       l237 0A2B  
                     l229 0A23                       l406 07B1                       l158 07FD  
                     l238 0A88                       l175 13BE                       l247 0B90  
                     l265 0CB5                       l257 0C14                       l266 0C7D  
                     l603 1612                       l259 0C10                       l188 11AC  
                     l380 0674                       l606 1627                       l382 064A  
                     l368 05D5                       l563 15AF                       l820 082C  
                     l805 0F6F                       l389 06DC                       l576 1419  
                     l761 09FB                       l818 081A                       l682 1326  
                     l843 164C                       l596 1627                       l692 129A  
                     l781 09E7                       l845 16E1                       l775 0975  
                     l759 0883                       l863 1197                       l856 16AB  
                     l857 16B7                       l799 0FFF                       _GIE 005F  
                     _RB0 0030                       _RB1 0031                       _RB2 0032  
                     _RA4 002C                       _RC0 0038                       _RB3 0033  
                     _RC1 0039                       _RB4 0034                       _RC2 003A  
                     _RD0 0040                       _RB5 0035                       _RC3 003B  
                     _RE0 0048                       _RE1 0049                       _RE2 004A  
                     fsr0 0004                       indf 0000              ___awmod@sign 002F  
            ___flmul@aexp 004C              ___flmul@bexp 004D              ___flmul@sign 0047  
            ___flmul@temp 0052              ___flmul@prod 004E               main@lcdText 00B4  
            ___fltol@exp1 0029                      l2311 0823                      l2303 0807  
                    l2313 0828                      l2305 0809                      l4001 0507  
                    l2307 0810                      l4011 0560                      l4003 0536  
                    l2309 0814                      l4101 0BEC                      l4021 0A00  
                    l4013 059C                      l4005 0540                      l4111 0C18  
                    l4103 0BF7                      l4031 0A2F                      l4023 0A04  
                    l4015 05A6                      l4007 054B                      l3401 11C7  
                    l2601 15C4                      l4121 0C5A                      l4113 0C1C  
                    l4041 0A60                      l4033 0A33                      l4105 0C02  
                    l4025 0A0C                      l4017 05B1                      l4009 0555  
                    l3403 11CD                      l2611 15E6                      l2603 15D7  
                    l3411 122F                      l4131 0C81                      l4123 0C5D  
                    l4115 0C27                      l4107 0C08                      l4051 0AA0  
                    l4043 0A64                      l4035 0A3B                      l4027 0A17  
                    l4019 09FC                      l3405 11D0                      l2701 08F5  
                    l2621 1600                      l2605 15D8                      l3501 12FD  
                    l3421 124B                      l3413 1230                      l4133 0C8A  
                    l4125 0C6B                      l4117 0C2F                      l4109 0C0C  
                    l4061 0AD8                      l4053 0AB8                      l4045 0A7C  
                    l4037 0A46                      l4029 0A27                      l3407 11DB  
                    l3431 1FFB                      l2711 0916                      l2703 08F9  
                    l2631 161C                      l2607 15E0                      l2375 1198  
                    l3503 130E                      l3511 1322                      l3423 1251  
                    l3415 123E                      l4135 0C94                      l4127 0C6E  
                    l4119 0C3A                      l4071 0B07                      l4063 0AE3  
                    l4055 0AC8                      l4047 0A8D                      l4039 0A51  
                    l2721 0938                      l2713 0924                      l2705 08FA  
                    l2641 083B                      l2633 082D                      l2801 0CEE  
                    l2617 15EE                      l2609 15E2                      l2377 119E  
                    l3505 1314                      l3521 1271                      l3601 0603  
                    l3433 1FE5                      l3441 07CA                      l3425 1254  
                    l3417 1241                      l3409 1229                      l4137 0CA9  
                    l4081 0B4D                      l4073 0B12                      l4065 0AF3  
                    l4057 0ACC                      l4049 0A95                      l2723 0941  
                    l2731 0955                      l2707 0903                      l2715 0928  
                    l2643 0840                      l2651 0850                      l2635 0832  
                    l2811 0D05                      l2803 0CF2                      l2627 1607  
                    l2619 15F7                      l3507 1315                      l3531 1290  
                    l3523 1275                      l3515 125F                      l3603 0607  
                    l3451 07EF                      l3443 07D0                      l3435 07B5  
                    l3427 125B                      l3419 1248                      l4091 0B9C  
                    l4083 0B53                      l4075 0B2B                      l4067 0AFB  
                    l4059 0AD0                      l3429 1FF5                      l3541 129B  
                    l2733 0959                      l2725 0945                      l2717 092E  
                    l2709 0915                      l2661 0866                      l2653 0858  
                    l2645 0845                      l2637 0836                      l2901 0FC2  
                    l2813 0D07                      l2805 0CF3                      l2629 1617  
                    l3509 131C                      l3525 1279                      l3517 1267  
                    l3533 1296                      l3621 0688                      l3605 061C  
                    l3613 064C                      l3453 07F5                      l3437 07BA  
                    l3445 07D9                      l3461 1350                      l4093 0BA7  
                    l4085 0B6C                      l4077 0B38                      l4069 0AFF  
                    l3391 11E6                      l3551 1483                      l3543 12A0  
                    l3711 154E                      l2751 09AA                      l2743 097A  
                    l2735 095A                      l2727 0946                      l2719 0936  
                    l2663 086B                      l2671 087B                      l2655 085D  
                    l2647 084D                      l2639 083A                      l2911 0FED  
                    l2903 0FD1                      l2831 0D74                      l2823 0D22  
                    l2815 0D0F                      l2807 0CF8                      l3527 1283  
                    l3519 126A                      l3471 1196                      l3463 1187  
                    l3623 068C                      l3615 0678                      l4191 0666  
                    l3607 0631                      l3447 07DF                      l3439 07C7  
                    l3455 1327                      l4095 0BC0                      l4087 0B84  
                    l4079 0B40                      l3393 11ED                      l3553 148E  
                    l3537 1174                      l3545 12BC                      l3721 1562  
                    l3713 1553                      l2761 09DE                      l2745 097F  
                    l2753 09B0                      l2737 095E                      l2729 094F  
                    l2673 088B                      l2681 08A4                      l2665 0870  
                    l2657 0861                      l2649 084E                      l2913 0FEE  
                    l2905 0FDB                      l2841 0DED                      l2833 0D9E  
                    l2825 0D30                      l2817 0D14                      l2809 0CFD  
                    l2921 162B                      l3529 1289                      l3481 1214  
                    l3465 1188                      l3641 06C4                      l3617 0680  
                    l3625 0692                      l3609 0637                      l3449 07EC  
                    l3457 132C                      l3561 1372                      l4097 0BD8  
                    l4089 0B94                      l3801 16EA                      l3395 11F4  
                    l3555 149F                      l3539 1180                      l3547 12C4  
                    l3731 1578                      l3723 1564                      l3715 1555  
                    l3707 1547                      l2771 09F5                      l2763 09E6  
                    l2755 09BD                      l2747 098D                      l2739 0972  
                    l2691 08CC                      l2683 08A9                      l2675 0897  
                    l2667 0878                      l2659 0865                      l2907 0FDD  
                    l2915 0FF3                      l2851 0E69                      l2843 0E0A  
                    l2835 0DBA                      l2827 0D3D                      l2819 0D19  
                    l2595 15B0                      l2923 1630                      l3491 12E5  
                    l3483 121B                      l3475 11FF                      l3467 118E  
                    l3651 06F3                      l3643 06CA                      l3635 06A0  
                    l3627 069A                      l3619 0684                      l3459 1348  
                    l3571 138B                      l4099 0BE4                      l3811 16EF  
                    l3803 16EB                      l3397 11FB                      l3389 11E2  
                    l3557 14A5                      l3549 147D                      l3741 159B  
                    l3733 157C                      l3725 156A                      l3717 1559  
                    l3709 154A                      l2765 09EB                      l2757 09CB  
                    l2749 0991                      l2693 08D4                      l2677 089B  
                    l2669 0879                      l2917 0FF7                      l2909 0FE9  
                    l2861 0F1B                      l2853 0E94                      l2845 0E18  
                    l2837 0DD6                      l2829 0D58                      l2781 0CC0  
                    l2597 15BB                      l2941 1674                      l2933 165D  
                    l2925 1634                      l3493 12EB                      l3485 1221  
                    l3477 1203                      l3469 1194                      l3661 070A  
                    l3653 06F7                      l3645 06D0                      l3629 069E  
                    l4189 05EC                      l3581 13BB                      l3573 13A0  
                    l3901 17ED                      l3821 16FA                      l3813 16F0  
                    l3805 16EC                      l3399 11C6                      l3735 158D  
                    l3727 156D                      l3743 15A1                      l3719 155E  
                    l3751 13BF                      l2767 09EF                      l2759 09DA  
                    l2695 08DC                      l2687 08B2                      l2871 0F40  
                    l2863 0F24                      l2855 0EA2                      l2847 0E35  
                    l2839 0DDF                      l2791 0CD3                      l2783 0CC4  
                    l2951 16A1                      l2943 1678                      l2935 1660  
                    l2927 1644                      l3495 12EE                      l3479 1207  
                    l3671 072C                      l3663 0710                      l3655 06FB  
                    l3647 06D6                      l3639 06C0                      l3591 05D1  
                    l3583 05BE                      l3575 13A3                      l3567 1376  
                    l3559 136D                      l3911 0036                      l3903 17EE  
                    l3831 1700                      l3823 16FB                      l3815 16F1  
                    l3807 16ED                      l3745 15A6                      l3737 1593  
                    l3729 1574                      l3761 13D1                      l3753 13C2  
                    l2769 09F1                      l2697 08DE                      l2689 08C4  
                    l2881 0F58                      l2873 0F49                      l2865 0F32  
                    l2857 0ECD                      l2849 0E4C                      l2793 0CDB  
                    l2785 0CC8                      l2961 16D4                      l2953 16A5  
                    l2945 1686                      l2937 1664                      l2929 1654  
                    l3497 12F5                      l3489 12E1                      l3681 074C  
                    l3673 0731                      l3665 0715                      l3657 0701  
                    l3649 06E7                      l3593 05D6                      l3585 05C1  
                    l3577 13A9                      l3569 1380                      l3921 0069  
                    l3913 004B                      l3905 17F4                      l3841 1755  
                    l3833 170F                      l3825 16FC                      l3817 16F6  
                    l3809 16EE                      l3747 15AB                      l3739 1594  
                    l3771 13EA                      l3763 13D6                      l3755 13C6  
                    l2699 08E3                      l2891 0F87                      l2883 0F6C  
                    l2867 0F3B                      l2875 0F4F                      l2859 0EF3  
                    l2795 0CDD                      l2787 0CC9                      l2779 0CBB  
                    l2963 16D8                      l2955 16AF                      l2947 168F  
                    l2939 166D                      l3499 12F9                      l3691 078E  
                    l3675 0735                      l3667 0719                      l3683 0750  
                    l3659 0706                      l3587 05C7                      l3579 13B6  
                    l3931 00CB                      l3923 006D                      l3915 0059  
                    l3907 0021                      l3851 1772                      l3843 176C  
                    l3835 1712                      l3827 16FD                      l3819 16F9  
                    l3773 13EE                      l3765 13DC                      l3781 140B  
                    l3757 13CB                      l2893 0F8B                      l2877 0F53  
                    l2869 0F3F                      l2797 0CE5                      l2789 0CCE  
                    l2965 16D9                      l2957 16B9                      l2949 1696  
                    l3685 0753                      l3677 0741                      l3669 0726  
                    l3597 05DC                      l3589 05CC                      l3693 0797  
                    l3941 013D                      l3933 00EF                      l3925 0079  
                    l3917 0061                      l3909 002B                      l3861 177B  
                    l3853 1773                      l3845 176F                      l3837 1727  
                    l3829 16FE                      l3783 1410                      l3775 13F8  
                    l3767 13DF                      l3759 13CD                      l2895 0FA4  
                    l2887 0F74                      l2879 0F54                      l2799 0CEA  
                    l2959 16CF                      l3687 0785                      l3679 0747  
                    l3695 07AD                      l3599 05F1                      l3951 017B  
                    l3943 015D                      l3935 010E                      l3927 007D  
                    l3919 0065                      l3871 17AF                      l3863 1785  
                    l3855 1774                      l3847 1770                      l3839 173E  
                    l3791 16E5                      l3785 1415                      l3777 13FE  
                    l3769 13E6                      l2889 0F79                      l2897 0FAA  
                    l3689 078A                      l3961 01AF                      l3953 0190  
                    l3945 0166                      l3937 0116                      l3929 0092  
                    l3881 17D6                      l3873 17BA                      l3865 1790  
                    l3857 1775                      l3849 1771                      l3793 16E6  
                    l3779 1405                      l2899 0FB7                      l3971 023E  
                    l3963 0224                      l3955 019B                      l3947 016C  
                    l3939 0135                      l3891 17E8                      l3883 17DA  
                    l3875 17C8                      l3867 179A                      l3859 1776  
                    l3795 16E7                      l3981 03E4                      l3973 0292  
                    l3965 022A                      l3957 01A1                      l3949 0171  
                    l3893 17E9                      l3885 17DD                      l3877 17CD  
                    l3869 17A5                      l3797 16E8                      l3789 16E2  
                    l3991 0468                      l3983 041E                      l3975 02D1  
                    l3967 0231                      l3959 01A8                      l3895 17EA  
                    l3887 17E1                      l3879 17D1                      l3799 16E9  
                    l3993 046E                      l3985 0424                      l3977 030B  
                    l3969 0238                      l3897 17EB                      l3889 17E7  
                    l3995 0472                      l3987 042B                      l3979 0368  
                    l3899 17EC                      l3997 04F2                      l3989 0432  
                    l3999 04FC                      STR_1 10AA                      STR_2 10F9  
                    STR_3 10BD                      STR_4 10DC                      STR_5 116F  
                    STR_6 1096                      STR_7 1081                      STR_8 1114  
                    STR_9 10D9                      _T0IF 005A                      u3100 1617  
                    u3020 15BB                      u3101 1616                      u3021 15BA  
                    u3110 161C                      u3030 15D2                      u3111 161B  
                    u3200 08E3                      u3120 083A                      u3040 15E6  
                    u3201 08E2                      u3121 0839                      u3041 15E5  
                    u3130 0840                      u3050 15ED                      u3131 083F  
                    u3051 15EC                      u3035 15CD                      u3140 0845  
                    u3141 0844                      u3310 0959                      u3230 08F9  
                    u3150 0865                      u3070 15FF                      u3311 0958  
                    u3231 08F8                      u3215 08E5                      u3151 0864  
                    u3071 15FE                      u5000 157C                      u3400 09EF  
                    u3320 095E                      u3160 086B                      u3080 1606  
                    u5001 157B                      u3401 09EE                      u3321 095D  
                    u3305 0948                      u3225 08EE                      u3161 086A  
                    u3081 1605                      u3065 15EF                      u3330 0972  
                    u3250 0915                      u3170 0870                      u2530 0814  
                    u3410 0CC8                      u3331 0971                      u3251 0914  
                    u3171 086F                      u2531 0813                      u3411 0CC7  
                    u5020 158D                      u5100 13EE                      u3340 0979  
                    u3260 092E                      u3180 088B                      u3420 0CCE  
                    u5021 158C                      u5101 13ED                      u3341 0978  
                    u3261 092D                      u3245 08FC                      u3181 088A  
                    u3501 0D82                      u3421 0CCD                      u5110 13F8  
                    u3350 097F                      u3270 0936                      u3190 08A9  
                    u2550 0828                      u3502 0D89                      u3430 0CD3  
                    u5015 157D                      u5111 13F7                      u3351 097E  
                    u3271 0935                      u3255 0911                      u3191 08A8  
                    u2551 0827                      u3511 0DAC                      u3503 0D90  
                    u3431 0CD2                      u3095 1609                      u5040 15A1  
                    u3360 0991                      u3600 0ED9                      u3512 0DB3  
                    u3440 0CF2                      u5200 0079                      u5041 15A0  
                    u5025 1589                      u3361 0990                      u2545 081B  
                    u3521 0DC8                      u3513 0DBA                      u3441 0CF1  
                    u5201 0076                      u4410 11E6                      u5050 15A6  
                    u5130 140B                      u3370 09A0                      u3290 0945  
                    u3522 0DCF                      u3450 0CF8                      u5210 007D  
                    u4411 11E5                      u5051 15A5                      u5035 1595  
                    u5131 140A                      u5115 13F4                      u3291 0944  
                    u3611 0EE5                      u3523 0DD6                      u3451 0CF7  
                    u5211 007C                      u4420 11ED                      u5140 1410  
                    u5060 13C6                      u3380 09BD                      u3700 0F6C  
                    u3620 0F01                      u3612 0EEC                      u3460 0CFD  
                    u5300 0238                      u5220 010E                      u4421 11EC  
                    u5141 140F                      u5125 13FF                      u5061 13C5  
                    u3381 09BC                      u3285 093A                      u3701 0F6B  
                    u3613 0EF3                      u3605 0ED4                      u3541 0DFC  
                    u3461 0CFC                      u5301 0237                      u5221 010D  
                    u4430 11F4                      u5070 13D1                      u3390 09DA  
                    u3710 0F73                      u3542 0E03                      u3470 0D14  
                    u4510 1336                      u5310 0432                      u5230 0116  
                    u5150 0021                      u4431 11F3                      u5071 13D0  
                    u3391 09D9                      u3375 099B                      u3711 0F72  
                    u3631 0F0D                      u3551 0E27                      u3543 0E0A  
                    u3535 0DD8                      u3471 0D13                      u5311 0431  
                    u5231 0115                      u5151 17FD                      u4440 11FB  
                    u5080 13DC                      u3720 0F79                      u3632 0F14  
                    u3552 0E2E                      u3480 0D19                      u3800 1654  
                    u4600 12EB                      u4520 135A                      u5400 0A33  
                    u5320 046E                      u5240 0135                      u5160 0061  
                    u4441 11FA                      u5081 13DB                      u3385 09B9  
                    u3721 0F78                      u3633 0F1B                      u3625 0EFC  
                    u3553 0E35                      u3481 0D18                      u3801 1653  
                    u4601 12EA                      u4505 07E5                      u5401 0A32  
                    u5321 046D                      u5241 0134                      u5161 005E  
                    u3730 0F8B                      u4530 136C                      u5410 0A51  
                    u5330 0472                      u5250 013D                      u5170 0065  
                    u3395 09D6                      u3731 0F8A                      u3571 0E5B  
                    u3491 0D66                      u4531 136B                      u5411 0A50  
                    u5331 0471                      u5251 013C                      u5171 0064  
                    u4460 1FFB                      u3740 0F9A                      u3660 0F3F  
                    u3572 0E62                      u3492 0D6D                      u3900 16D4  
                    u3820 1673                      u4620 12FD                      u4700 1283  
                    u4540 118E                      u5500 0AFF                      u5420 0A60  
                    u5340 09FC                      u5260 015D                      u5180 0069  
                    u4461 1FFA                      u3661 0F3E                      u3645 0F1D  
                    u3581 0E86                      u3573 0E69                      u3565 0E37  
                    u3493 0D74                      u3901 16D3                      u3821 1672  
                    u4621 12FC                      u4701 1282                      u4541 118D  
                    u5501 0AFE                      u5421 0A5F                      u5341 05B8  
                    u5261 015C                      u5181 0068                      u3750 0FB7  
                    u3582 0E8D                      u3910 16D8                      u4550 1194  
                    u4470 07BA                      u5510 0B38                      u5430 0A8D  
                    u5350 0A00                      u5270 0166                      u5190 006D  
                    u5095 13E0                      u3751 0FB6                      u3655 0F34  
                    u3591 0EB1                      u3583 0E94                      u3911 16D7  
                    u3815 1665                      u4615 12EF                      u4551 1193  
                    u4471 07B9                      u4455 1233                      u5511 0B37  
                    u5431 0A8C                      u5351 09FF                      u5271 0165  
                    u5191 006C                      u3760 0FD1                      u3680 0F53  
                    u3592 0EB8                      u3840 1695                      u4640 130E  
                    u4720 1296                      u4560 1207                      u4800 0678  
                    u5600 0C27                      u5520 0B4D                      u5440 0AC8  
                    u5360 0A04                      u5280 016C                      u3761 0FD0  
                    u3745 0F95                      u3681 0F52                      u3593 0EBF  
                    u3841 1694                      u4641 130D                      u4721 1295  
                    u4705 127F                      u4561 1206                      u4801 0677  
                    u5601 0C26                      u5521 0B4C                      u5441 0AC7  
                    u5361 0A03                      u5281 016B                      u4730 12AA  
                    u3770 0FED                      u3690 0F58                      u4810 0688  
                    u4490 07DF                      u5610 0C81                      u5530 0B94  
                    u5450 0ACC                      u5370 0A27                      u5290 01AF  
                    u3771 0FEC                      u3755 0FB3                      u3691 0F57  
                    u3675 0F42                      u3835 1687                      u4635 12FE  
                    u4715 128A                      u4811 0687                      u4491 07DE  
                    u5611 0C80                      u5531 0B93                      u5515 0B34  
                    u5451 0ACB                      u5371 0A26                      u5291 01AE  
                    u4740 12CE                      u3860 16A5                      u3780 1630  
                    u4660 1322                      u4900 0725                      u4820 06BF  
                    u5540 0C08                      u5460 0AD0                      u5380 0A2B  
                    u3765 0FCD                      u3861 16A4                      u3781 162F  
                    u4661 1321                      u4645 130A                      u4901 0724  
                    u4821 06BE                      u4485 07C0                      u5541 0C07  
                    u5525 0B49                      u5461 0ACF                      u5381 0A2A  
                    u4750 12E0                      u3870 16AB                      u3790 1634  
                    u4670 1267                      u4590 1221                      u4910 072C  
                    u4830 06CA                      u5550 0C0C                      u5470 0AF3  
                    u5390 0A2F                      u4751 12DF                      u3871 16AA  
                    u3855 169A                      u3791 1633                      u4655 1316  
                    u4671 1266                      u4591 1220                      u4575 120E  
                    u4911 072B                      u4831 06C9                      u5551 0C0B  
                    u5471 0AF2                      u5391 0A2E                      u3880 16AF  
                    u4920 0741                      u4840 06D0                      u4760 13B6  
                    u5560 0C10                      u5480 0AF7                      u3881 16AE  
                    u4585 1215                      u4921 0740                      u4841 06CF  
                    u4825 06BB                      u4761 13B5                      u5561 0C0F  
                    u5481 0AF6                      u3890 16C4                      u4690 1279  
                    u4930 0747                      u4850 06D6                      u4770 05C7  
                    u5570 0C18                      u5490 0AFB                      u4691 1278  
                    u4931 0746                      u4851 06D5                      u4771 05C6  
                    u5707 1245                      u5571 0C17                      u5491 0AFA  
                    u5627 1708                      u4940 0797                      u4860 06E7  
                    u4780 0603                      u5580 0C1C                      u4685 126B  
                    u4941 0796                      u4861 06E6                      u4781 0602  
                    u5717 1258                      u4765 13B2                      u5581 0C1B  
                    u5637 17C2                      u4950 07AD                      u4870 06FB  
                    u4790 0649                      u5590 0C20                      u5727 1489  
                    u3895 16BF                      u4951 07AC                      u4871 06FA  
                    u4791 0648                      u5591 0C1F                      u5647 0053  
                    u4960 154E                      u4880 0701                      u5737 149A  
                    u4961 154D                      u4881 0700                      u4865 06E3  
                    u5657 01A5                      u4970 1559                      u4890 0710  
                    u5747 14AB                      u4971 1558                      u4891 070F  
                    u5667 022E                      u4980 156A                      u5757 11D6  
                    u4981 1569                      u5677 0428                      u5687 0C65  
                    u5697 0C76                      u4995 156E                      _TMR0 0001  
                    _TRMT 04C1                      _WREN 0C62         ?_Lcd_Write_String 0025  
                    _main 16E2                      btemp 007E                      start 000E  
      ??_Lcd_Write_String 0027           ___fldiv@new_exp 0032           __end_of_Lcd_Cmd 11DF  
             _writeEEPROM 11AD   __end_of_UART_Write_Text 12E1          ?_UART_Initialize 0070  
           ___fltol@sign1 0028        writeEEPROM@address 0070                     ?_main 0070  
         __end_of___fldiv 09FC           __end_of___awdiv 15B0                     _EEADR 010D  
                   STR_10 111F                     STR_11 115F                     STR_12 116A  
                   STR_20 1150                     STR_21 1165                     STR_13 113D  
                   STR_30 1165                     STR_14 1147                     STR_22 1133  
                   STR_31 1165                     STR_23 1159                     STR_15 1165  
                   STR_16 1129                     STR_24 10EB                     STR_32 1069  
                   STR_25 1159                     STR_17 1159                     STR_33 1051  
                   STR_26 1107                     STR_18 10CD                     STR_27 1165  
                   STR_19 1159                     STR_28 1037           __end_of___awmod 141A  
                   STR_29 101C           __end_of___flmul 1000           __end_of___fltol 1628  
         ___awdiv@divisor 002A           __end_of___lwdiv 1327                     i1l201 1474  
                   i1l182 11BE                     i1l185 11C2           __end_of___lwmod 129B  
                   i1l194 1546           ___awdiv@counter 002E                     _RCSTA 0018  
                   _SPBRG 0099                     _TRISB 0086                     _TRISD 0088  
                   _TXREG 0019                     _TXSTA 0098              main@realSaat 01A0  
             ?_UART_Write 0070           __end_of_dpowers 101C           __end_of_isdigit 1198  
           main@adcValue1 0192             main@adcValue2 00E2             main@adcValue3 00CD  
                   pclath 000A                     status 0003                     wtemp0 007E  
         __end_of_sprintf 07B2          __end_of_Lcd_Init 14E0          __end_of_Lcd_Port 11FF  
         __initialization 0011              __end_of_main 0CBB                    ??_main 0054  
           main@ilkAcilis 0190                    _ADRESH 001E                    _ADRESL 009E  
                  _EEDATA 010C                    _EECON2 018D          ___awdiv@dividend 002C  
                  i1l2371 11BC                    i1l2363 11AD                    i1l2381 14E1  
                  i1l2373 11BD                    i1l2365 11B3                    i1l2383 14FB  
                  i1l2367 11B6                    i1l2385 151A                    i1l2369 11BB  
                  i1l2387 1539                    i1l2971 141E                    i1l2981 1438  
                  i1l2973 141F                    i1l2983 1447                    i1l2975 1429  
                  i1l2985 1456                    i1l2977 1430                    i1l2969 141A  
                  i1l2987 1465                    i1l2979 1432                    u260_20 11C2  
                  u260_21 11C1                    u261_20 14FB                    u261_21 14FA  
                  u262_20 151A                    u262_21 1519                    u263_20 1539  
                  u263_21 1538                    u392_20 141E                    u392_21 141D  
                  u393_20 1430                    u393_21 142F                 ??_Lcd_Cmd 0021  
                  _TRISA0 0428                    _TRISA1 0429                    _TRISA2 042A  
                  _TRISA3 042B                    _TRISA4 042C                    _TRISC0 0438  
                  _TRISC1 0439                    _TRISA5 042D                    _TRISC2 043A  
                  _TRISD0 0440                    _TRISC3 043B                    _TRISE0 0448  
                  _TRISC4 043C                    _TRISE1 0449                    _TRISC5 043D  
                  _TRISE2 044A                    _TRISC6 043E                    _TRISC7 043F  
        __end_of___xxtofl 16E2                    ___wmul 11FF                 ??___fldiv 0028  
               ??___awdiv 002E                 ??___awmod 002E                 ??___flmul 0042  
        ?_UART_Write_Text 0021                 ??___fltol 0024             main@oranValue 00D1  
               ??___lwdiv 0024                 ??___lwmod 002B          ___awdiv@quotient 0030  
         ___awmod@divisor 002A           ___awmod@counter 002E             _incrementTime 14E0  
        __end_of_yagBakim 13BF             main@rpmString 00DD                 ??_isdigit 0020  
                  saved_w 007E            main@adcString1 00EC                 ??_sprintf 0036  
         Lcd_Set_Cursor@a 0026           Lcd_Set_Cursor@b 0024           Lcd_Set_Cursor@y 0028  
         Lcd_Set_Cursor@z 0027              ___xxtofl@arg 002A              ___xxtofl@exp 0029  
            ___xxtofl@val 0020   __end_of__initialization 001D         __end_of_Lcd_Clear 1FF2  
              ___fltol@f1 0020           writeEEPROM@data 0072            __pcstackCOMMON 0070  
          ?_incrementTime 0070            _Lcd_Set_Cursor 07B2         incrementTime@time 0072  
          _OPTION_REGbits 0081        main@gostermeliklcd 00D5                 ?_Lcd_Init 0070  
               ?_Lcd_Port 0070              sprintf@width 003F          main@combinedText 005A  
              __pbssBANK3 01A4         __end_of__Umul8_16 082D                __pmaintext 16E2  
            ?_writeEEPROM 0070                   ?___wmul 0024                __pintentry 0004  
  __end_of_Lcd_Set_Cursor 07FE          main@displayValue 01A2                 ?___xxtofl 0020  
            ??_UART_Write 0020                ??_Lcd_Init 0024                ??_Lcd_Port 0020  
              __stringtab 1000            _Lcd_Write_Char 1226                   _Lcd_Cmd 11C3  
              _readEEPROM 1198                 ?_yagBakim 0070                   ___fldiv 082D  
                 ___awdiv 1547           ??_incrementTime 0070                   ___awmod 13BF  
                 ___flmul 0CBB                   ___fltol 15B0        __end_of_UART_Write 2000  
                 ___lwdiv 12E1                   ___lwmod 125F           ?_Lcd_Set_Cursor 0024  
                 __ptext1 136D                   __ptext2 1327                   __ptext3 1226  
                 __ptext4 07B2                   __ptext5 1FE5                   __ptext6 05BB  
                 __ptext7 1184                   __ptext8 11FF                   __ptext9 125F  
                 _dpowers 1012                   _isdigit 1184                ??___xxtofl 0024  
        ___awmod@dividend 002C     main@negativeFeedValue 019E                   _sprintf 05BB  
  __end_of_Lcd_Write_Char 125F      end_of_initialization 001D                ??_yagBakim 002C  
       __end_of_timer_isr 147D                   psplit$0 A0028                   psplit$1 280029  
               Lcd_Port@a 0020              __pstringtext 1000            UART_Write@data 0020  
           ___xxtofl@sign 0028               ___fldiv@grs 0034               ___fldiv@rem 002D  
    pnum$maintext_split_1 0028      pnum$maintext_split_2 0029         readEEPROM@address 0020  
         ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0025         Lcd_Write_String@i 002A  
             ___flmul@grs 0048                main@dakika 00E4                main@binler 0198  
              main@birler 00E8               ?_readEEPROM 0020                main@yuzler 0196  
               _Lcd_Clear 1FE5            __end_of___wmul 1226          _Lcd_Write_String 1327  
     start_initialization 0011         ??_UART_Initialize 0020                ?_Lcd_Clear 0070  
                ??___wmul 0028                 __Umul8_16 0804           Lcd_Write_Char@a 0024  
         Lcd_Write_Char@y 0023                 ___fldiv@a 0020                 ___fldiv@b 0024  
               ___flmul@a 003E                 ___flmul@b 003A               __pbssCOMMON 0077  
               ___latbits 0002             __pcstackBANK0 0020             __pcstackBANK1 00A0  
           __pcstackBANK3 0190                  ?_Lcd_Cmd 0070               sprintf@flag 003E  
             sprintf@prec 003A                 _main$1027 00D9          ___lwdiv@dividend 0022  
main@negativeDisplayValue 00EA          ??_Lcd_Set_Cursor 0025                  ?___fldiv 0020  
                ?___awdiv 002A                  ?___awmod 002A                  ?___flmul 003A  
                ?___fltol 0020                ?__Umul8_16 0020                  ?___lwdiv 0020  
                ?___lwmod 0027                  ?_isdigit 0070          ___lwdiv@quotient 0025  
                ?_sprintf 002C         ??_UART_Write_Text 0023         interrupt_function 0004  
          ___wmul@product 0028                  Lcd_Cmd@a 0023               ??_Lcd_Clear 0024  
               _timer_isr 141A     __end_of_incrementTime 1547                _ADCON0bits 001F  
             __stringbase 1012                _ADCON1bits 009F         ___wmul@multiplier 0024  
        ??_Lcd_Write_Char 0021                 main@onlar 00E6                  _Lcd_Init 147D  
                _Lcd_Port 11DF           main@integerPart 019A  __end_of_Lcd_Write_String 136D  
            ??_readEEPROM 0022               _kesmeSayaci 0077               ??__Umul8_16 0022  
              ?_timer_isr 0070              pnum$maintext 000A        __end_of__stringtab 1012  
             _isdigit$836 0020           _UART_Initialize 1174               _currentTime 01A4  
              sprintf@val 003C                  ___xxtofl 1628                 yagBakim@i 002C  
      __end_of_readEEPROM 11AD           ___lwdiv@divisor 0020           ___lwdiv@counter 0024  
                __ptext10 12E1                  __ptext11 1198                  __ptext20 1FF2  
                __ptext12 1628                  __ptext21 1174                  __ptext13 15B0  
                __ptext22 147D                  __ptext14 0CBB                  __ptext23 11C3  
                __ptext15 0804                  __ptext24 11DF                  __ptext16 082D  
                __ptext25 141A                  __ptext17 13BF                  __ptext26 11AD  
                __ptext18 1547                  __ptext27 14E0                  __ptext19 129B  
     UART_Write_Text@text 0021                  _yagBakim 136D             ??_writeEEPROM 0074  
         main@uartMessage 00BD                _INTCONbits 000B                  isdigit@c 0021  
      Lcd_Write_Char@temp 0022                  intlevel1 0000                 sprintf@ap 003B  
               sprintf@sp 0042          ___lwmod@dividend 0029                 stringcode 100A  
             ??_timer_isr 0074   __end_of_UART_Initialize 1184       main@uartMessage_369 00C5  
      Lcd_Set_Cursor@temp 0029      main@combinedText_373 00A0       __end_of_writeEEPROM 11C3  
  __Umul8_16@multiplicand 0020           _UART_Write_Text 129B                  sprintf@c 0041  
                sprintf@f 002C           ___lwmod@divisor 0027           ___lwmod@counter 002B  
                stringtab 1000                _UART_Write 1FF2          UART_Write_Text@i 0026  
    __Umul8_16@multiplier 0028         __Umul8_16@product 0024  
